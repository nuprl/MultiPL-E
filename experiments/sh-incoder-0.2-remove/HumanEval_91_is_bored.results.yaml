language: sh
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_prefix=\"I\"\n  local boredom_suffix=\"!\"\n\
    \  local boredom_delimiter=\"?\"\n  local boredom_count=0\n  local boredom_words=\"\
    \"\n  local boredom_sentence=\"\"\n  local boredom_word=\"\"\n  local boredom_sentence_index=0\n\
    \  local boredom_word_index=0\n  local boredom_word_count=0\n  local boredom_word_prefix=\"\
    \"\n  local boredom_word_suffix=\"\"\n  local boredom_word_delimiter=\"\"\n  local\
    \ boredom_word_prefix_index=0\n  local boredom_word_prefix_count=0\n  local boredom_word_suffix_index=0\n\
    \  local boredom_word_suffix_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_count=0\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038701
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredoms=()\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_word=''\n  local boredom_word_count=0\n  local boredom_word_index=0\n\
    \  local boredom_word_length=0\n  local boredom_word_length_index=0\n  local boredom_word_length_count=0\n\
    \  local boredom_word_length_word=''\n  local boredom_word_length_word_count=0\n\
    \  local boredom_word_length_word_index=0\n  local boredom_word_length_word_length=0\n\
    \  local boredom_word_length_word_length_index=0\n  local boredom_word_length_word_length_count=0\n\
    \  local boredom_word_length_word_length_word=''\n  local boredom_word_length_word_length_word_count=0\n\
    \  local boredom_word_length_word_length_word_index=0\n  local boredom_word_length_word_length_word_length=0\n\
    \  local boredom_word_length_word_length_word_length_index=0\n  local boredom_word_length_word_length_word_length_count=0\n\
    \  local boredom_word_length_word_length_word_length_word=''\n  local boredom_word_length_word_length_word_length_word_count=0\n\
    \  local boredom_word_length_word_length_word_length_word_index=0\n  local boredom_word_length_word_length_word_length_word_length=0\n\
    \  local boredom_word_length_word_length_word_length_word_length_index=0\n  local\
    \ boredom_word_length_word_length_word_length_word_length_count=0\n  local boredom_word_length_word_length_word_length_word_length_word=''\n\
    \  local boredom_word_length_word_length_word_length_word_length_word_count=0\n\
    \  local boredom_word_length_word_length_word_length_word_length_word_index=0\n\
    \  local boredom_word_length_word_length_word_length_word_length_word_length=0\n\
    \  local boredom_word_length_word_length_word_length_word_length_word_length_index=0\n\
    \  local boredom_word_length_word_length_word_length_word_length_word_length_count=0\n\
    \  local boredom_word_length_word_length_word_length_word_length_word_length_word=''\n\
    \  local boredom_word_length_word_length_word_length_word_length_word_length_word_count=0\n\
    \  local boredom_word_length_word_length_word_length_word_length_word_length_word_index=0\n\
    \  local boredom_word_length_word_length_word_length_word_length_word_length_word_length_count=0\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038701
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiters=\" ?!\"\
    \n  local delimiter_count=0\n  local delimiter_index=0\n  local delimiter_indexes=()\n\
    \  local delimiter_indexes_count=0\n  local delimiter_indexes_words=()\n  local\
    \ delimiter_indexes_words_count=0\n  local delimiter_indexes_words_index=0\n \
    \ local delimiter_indexes_words_index_count=0\n  local delimiter_indexes_words_index_words=()\n\
    \  local delimiter_indexes_words_index_words_count=0\n  local delimiter_indexes_words_index_words_index=0\n\
    \  local delimiter_indexes_words_index_words_index_count=0\n  local delimiter_indexes_words_index_words_index_words=()\n\
    \  local delimiter_indexes_words_index_words_index_words_count=0\n  local delimiter_indexes_words_index_words_index_words_index=0\n\
    \  local delimiter_indexes_words_index_words_index_words_index_count=0\n  local\
    \ delimiter_indexes_words_index_words_index_words_index_words=()\n  local delimiter_indexes_words_index_words_index_words_index_words_count=0\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index=0\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_count=0\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_count=0\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index=0\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_count=0\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_words=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_words_count=0\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_words_index_words=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_words_index_words_count=0\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_words_index_words_index=0\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_words_index_words_index_count=0\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_words_index_words_index_words=()\n\
    \  local delimiter_indexes_words_index_words_index_\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038701
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter='.'\n  local boredom_prefix=\"I\"\n  local boredom_suffix=\"!\"\n\n\
    \  while read -r line; do\n    if [[ \"$line\" =~ $delimiter ]]; then\n      if\
    \ [[ \"$line\" =~ $boredom_prefix ]]; then\n        ((output++))\n      fi\n \
    \   fi\n  done < <(echo \"$input\")\n\n  echo \"$output\"\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038701
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredoms=0\n\
    \  local delimiters=(\".\")\n  local delimiter=\"?\"\n  local delimiter2=\"!\"\
    \n  local delimiter3=\".\"\n  local delimiter4=\",\"\n  local delimiter5=\";\"\
    \n  local delimiter6=\":\"\n  local delimiter7=\";\"\n  local delimiter8=\":\"\
    \n  local delimiter9=\";\"\n  local delimiter10=\";\"\n  local delimiter11=\"\
    ;\"\n  local delimiter12=\";\"\n  local delimiter13=\";\"\n  local delimiter14=\"\
    ;\"\n  local delimiter15=\";\"\n  local delimiter16=\";\"\n  local delimiter17=\"\
    ;\"\n  local delimiter18=\";\"\n  local delimiter19=\";\"\n  local delimiter20=\"\
    ;\"\n  local delimiter21=\";\"\n  local delimiter22=\";\"\n  local delimiter23=\"\
    ;\"\n  local delimiter24=\";\"\n  local delimiter25=\";\"\n  local delimiter26=\"\
    ;\"\n  local delimiter27=\";\"\n  local delimiter28=\";\"\n  local delimiter29=\"\
    ;\"\n  local delimiter30=\";\"\n  local delimiter31=\";\"\n  local delimiter32=\"\
    ;\"\n  local delimiter33=\";\"\n  local delimiter34=\";\"\n  local delimiter35=\"\
    ;\"\n  local delimiter36=\";\"\n  local delimiter37=\";\"\n  local delimiter38=\"\
    ;\"\n  local delimiter39=\";\"\n  local delimiter40=\";\"\n  local delimiter41=\"\
    ;\"\n  local delimiter42=\";\"\n  local delimiter43=\";\"\n  local delimiter44=\"\
    ;\"\n  local delimiter45=\";\"\n  local delimiter46=\";\"\n  local delimiter47=\"\
    ;\"\n  local delimiter48=\";\"\n  local delimiter49=\";\"\n  local delimiter50=\"\
    ;\"\n  local delimiter51=\";\"\n  local delimiter52=\";\"\n  local delimiter53=\"\
    ;\"\n  local delimiter54=\";\"\n  local delimiter55=\";\"\n  local delimiter56=\"\
    ;\"\n  local delimiter57=\";\"\n  local delimiter58=\";\"\n  local delimiter59=\"\
    ;\"\n  local delimiter60=\";\"\n  local delimiter61=\";\"\n  local delimiter62=\"\
    ;\"\n  local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038701
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=\"$1\"\n    local output=0\n\
    \    local delimiter=\".\"\n    local boredom_word=\"I\"\n    local boredom_count=0\n\
    \    local boredom_sentence=\"\"\n    local boredom_words=\"\"\n    local boredom_sentences=\"\
    \"\n    local boredom_sentences2=\"\"\n    local boredom_sentences3=\"\"\n   \
    \ local boredom_sentences4=\"\"\n    local boredom_sentences5=\"\"\n    local\
    \ boredom_sentences6=\"\"\n    local boredom_sentences7=\"\"\n    local boredom_sentences8=\"\
    \"\n    local boredom_sentences9=\"\"\n    local boredom_sentences10=\"\"\n  \
    \  local boredom_sentences11=\"\"\n    local boredom_sentences12=\"\"\n    local\
    \ boredom_sentences13=\"\"\n    local boredom_sentences14=\"\"\n    local boredom_sentences15=\"\
    \"\n    local boredom_sentences16=\"\"\n    local boredom_sentences17=\"\"\n \
    \   local boredom_sentences18=\"\"\n    local boredom_sentences19=\"\"\n    local\
    \ boredom_sentences20=\"\"\n    local boredom_sentences21=\"\"\n    local boredom_sentences22=\"\
    \"\n    local boredom_sentences23=\"\"\n    local boredom_sentences24=\"\"\n \
    \   local boredom_sentences25=\"\"\n    local boredom_sentences26=\"\"\n    local\
    \ boredom_sentences27=\"\"\n    local boredom_sentences28=\"\"\n    local boredom_sentences29=\"\
    \"\n    local boredom_sentences30=\"\"\n    local boredom_sentences31=\"\"\n \
    \   local boredom_sentences32=\"\"\n    local boredom_sentences33=\"\"\n    local\
    \ boredom_sentences34=\"\"\n    local boredom_sentences35=\"\"\n    local boredom_sentences36=\"\
    \"\n    local boredom_sentences37=\"\"\n    local boredom_sentences38=\"\"\n \
    \   local boredom_sentences39=\"\"\n    local boredom_sentences40=\"\"\n    local\
    \ boredom_sentences41=\"\"\n    local boredom_sentences42=\"\"\n    local boredom_sentences43=\"\
    \"\n    local boredom_sentences44=\"\"\n    local boredom_sentences45=\"\"\n \
    \   local boredom_sentences46=\"\"\n    local boredom_sentences47=\"\"\n    local\
    \ boredom_sentences48=\"\"\n    local boredom_sentences49=\"\"\n    local boredom_sentences50=\"\
    \"\n    local boredom_sentences51=\"\"\n    \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038701
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local delimiters=\".?!\"\n  local delimiters_count=${#delimiters}\n  local\
    \ delimiters_index=0\n  local delimiters_char\n  local delimiters_char_count=0\n\
    \  while [[ $string ]]; do\n    delimiters_char=${string:$((delimiters_index++))}\n\
    \    delimiters_char_count=$((delimiters_char_count+1))\n    if [[ $delimiters_char\
    \ == \"$delimiters\" ]]; then\n      boredom_count=$((boredom_count+1))\n    fi\n\
    \    string=${string:$((delimiters_count--))}\n  done\n  echo \"$boredom_count\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038701
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredom_count=0\n\
    \    local boredom_words=()\n    local boredom_sentences=()\n    local boredom_word\n\
    \    local boredom_sentence\n    local boredom_char\n    local boredom_chars\n\
    \    local boredom_char\n    local boredom_chars\n    local boredom_char\n   \
    \ local boredom_chars\n    local boredom_char\n    local boredom_chars\n    local\
    \ boredom_char\n    local boredom_chars\n    local boredom_char\n    local boredom_chars\n\
    \    local boredom_char\n    local boredom_chars\n    local boredom_char\n   \
    \ local boredom_chars\n    local boredom_char\n    local boredom_chars\n    local\
    \ boredom_char\n    local boredom_chars\n    local boredom_char\n    local boredom_chars\n\
    \    local boredom_char\n    local boredom_chars\n    local boredom_char\n   \
    \ local boredom_chars\n    local boredom_char\n    local boredom_chars\n    local\
    \ boredom_char\n    local boredom_chars\n    local boredom_char\n    local boredom_chars\n\
    \    local boredom_char\n    local boredom_chars\n    local boredom_char\n   \
    \ local boredom_chars\n    local boredom_char\n    local boredom_chars\n    local\
    \ boredom_char\n    local boredom_chars\n    local boredom_char\n    local boredom_chars\n\
    \    local boredom_char\n    local boredom_chars\n    local boredom_char\n   \
    \ local boredom_chars\n    local boredom_char\n    local boredom_chars\n    local\
    \ boredom_char\n    local boredom_chars\n    local boredom_char\n    local boredom_chars\n\
    \    local boredom_char\n    local boredom_chars\n    local boredom_char\n   \
    \ local boredom_chars\n    local boredom_char\n    local boredom_chars\n    local\
    \ boredom_char\n    local boredom_chars\n    local boredom_char\n    local boredom_chars\n\
    \    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038701
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local delimiters=\".?!\"\n  local delimiters_length=${#delimiters}\n  local\
    \ delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiters=\"?!.\"\
    \n  local delimiter_count=0\n  local delimiter_index=0\n  local delimiter_indexes=()\n\
    \  local delimiter_indexes_count=()\n  local delimiter_indexes_words=()\n  local\
    \ delimiter_indexes_words_count=()\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count_words=()\n  local delimiter_indexes_words_count_words_count=()\n\
    \  local delimiter_indexes_words_count_words_count_words=()\n  local delimiter_indexes_words_count_words_count_words_count=()\n\
    \  local delimiter_indexes_words_count_words_count_words_count_words=()\n  local\
    \ delimiter_indexes_words_count_words_count_words_count_words_count=()\n  local\
    \ delimiter_indexes_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiters=\".?!\"\n  local word\n  for word in $input; do\n    if [[ \"$word\"\
    \ == \"I\" ]]; then\n      output=$((output+1))\n    fi\n  done\n  echo \"$output\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=\"\"\n  local boredom_sentence=\"\"\n  local boredom_sentence_words=\"\
    \"\n  local boredom_sentence_word=\"\"\n  local boredom_sentence_word_count=0\n\
    \  local boredom_sentence_word_count2=0\n  local boredom_sentence_word_count3=0\n\
    \  local boredom_sentence_word_count4=0\n  local boredom_sentence_word_count5=0\n\
    \  local boredom_sentence_word_count6=0\n  local boredom_sentence_word_count7=0\n\
    \  local boredom_sentence_word_count8=0\n  local boredom_sentence_word_count9=0\n\
    \  local boredom_sentence_word_count10=0\n  local boredom_sentence_word_count11=0\n\
    \  local boredom_sentence_word_count12=0\n  local boredom_sentence_word_count13=0\n\
    \  local boredom_sentence_word_count14=0\n  local boredom_sentence_word_count15=0\n\
    \  local boredom_sentence_word_count16=0\n  local boredom_sentence_word_count17=0\n\
    \  local boredom_sentence_word_count18=0\n  local boredom_sentence_word_count19=0\n\
    \  local boredom_sentence_word_count20=0\n  local boredom_sentence_word_count21=0\n\
    \  local boredom_sentence_word_count22=0\n  local boredom_sentence_word_count23=0\n\
    \  local boredom_sentence_word_count24=0\n  local boredom_sentence_word_count25=0\n\
    \  local boredom_sentence_word_count26=0\n  local boredom_sentence_word_count27=0\n\
    \  local boredom_sentence_word_count28=0\n  local boredom_sentence_word_count29=0\n\
    \  local boredom_sentence_word_count30=0\n  local boredom_sentence_word_count31=0\n\
    \  local boredom_sentence_word_count32=0\n  local boredom_sentence_word_count33=0\n\
    \  local boredom_sentence_word_count34=0\n  local boredom_sentence_word_count35=0\n\
    \  local boredom_sentence_word_count36=0\n  local boredom_sentence_word_count37=0\n\
    \  local boredom_sentence_word_count38=0\n  local boredom_sentence_word_count39=0\n\
    \  local boredom_sentence_word_count40=0\n  local boredom_sentence_word_count41=0\n\
    \  local boredom_sentence_word_count42=0\n  \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=$1\n    local output=0\n  \
    \  local delimiter=$2\n    local boredoms=$3\n\n    for word in $input; do\n \
    \       if [[ \"$word\" == \"$delimiter\" ]]; then\n            ((output++))\n\
    \        elif [[ \"$word\" == \"$borems\" ]]; then\n            ((output++))\n\
    \        fi\n    done\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=\"$1\"\n    local output=0\n\
    \    for word in $input; do\n        if [[ \"$word\" == \"I\" ]]; then\n     \
    \       ((output++))\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_word=\"I\"\n  local boredom_count=0\n  local\
    \ boredom_sentence=\"\"\n  local boredom_sentence_count=0\n  local boredom_sentence_word=\"\
    \"\n  local boredom_sentence_word_count=0\n  local boredom_sentence_word_count2=0\n\
    \  local boredom_sentence_word_count3=0\n  local boredom_sentence_word_count4=0\n\
    \  local boredom_sentence_word_count5=0\n  local boredom_sentence_word_count6=0\n\
    \  local boredom_sentence_word_count7=0\n  local boredom_sentence_word_count8=0\n\
    \  local boredom_sentence_word_count9=0\n  local boredom_sentence_word_count10=0\n\
    \  local boredom_sentence_word_count11=0\n  local boredom_sentence_word_count12=0\n\
    \  local boredom_sentence_word_count13=0\n  local boredom_sentence_word_count14=0\n\
    \  local boredom_sentence_word_count15=0\n  local boredom_sentence_word_count16=0\n\
    \  local boredom_sentence_word_count17=0\n  local boredom_sentence_word_count18=0\n\
    \  local boredom_sentence_word_count19=0\n  local boredom_sentence_word_count20=0\n\
    \  local boredom_sentence_word_count21=0\n  local boredom_sentence_word_count22=0\n\
    \  local boredom_sentence_word_count23=0\n  local boredom_sentence_word_count24=0\n\
    \  local boredom_sentence_word_count25=0\n  local boredom_sentence_word_count26=0\n\
    \  local boredom_sentence_word_count27=0\n  local boredom_sentence_word_count28=0\n\
    \  local boredom_sentence_word_count29=0\n  local boredom_sentence_word_count30=0\n\
    \  local boredom_sentence_word_count31=0\n  local boredom_sentence_word_count32=0\n\
    \  local boredom_sentence_word_count33=0\n  local boredom_sentence_word_count34=0\n\
    \  local boredom_sentence_word_count35=0\n  local boredom_sentence_word_count36=0\n\
    \  local boredom_sentence_word_count37=0\n  local boredom_sentence_word_count38=0\n\
    \  local boredom_sentence_word_count39=0\n  local boredom_sentence_word_count40=0\n\
    \  local boredom_sentence_word_count41=0\n  \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredom_words=(\"I\" \"are\" \"you\" \"are\" \"is\" \"\
    it\" \"the\" \"it\" \"of\" \"the\" \"it\" \"and\" \"the\" \"it\" \"to\" \"the\"\
    \ \"it\" \"on\" \"the\" \"it\" \"to\" \"the\" \"it\" \"as\" \"the\" \"it\" \"\
    is\" \"the\" \"it\" \"of\" \"the\" \"it\" \"and\" \"the\" \"it\" \"to\" \"the\"\
    \ \"it\" \"on\" \"the\" \"it\" \"to\" \"the\" \"it\" \"as\" \"the\" \"it\" \"\
    is\" \"the\" \"it\" \"of\" \"the\" \"it\" \"and\" \"the\" \"it\" \"to\" \"the\"\
    \ \"it\" \"on\" \"the\" \"it\" \"to\" \"the\" \"it\" \"as\" \"the\" \"it\" \"\
    is\" \"the\" \"it\" \"of\" \"the\" \"it\" \"and\" \"the\" \"it\" \"to\" \"the\"\
    \ \"it\" \"on\" \"the\" \"it\" \"to\" \"the\" \"it\" \"as\" \"the\" \"it\" \"\
    is\" \"the\" \"it\" \"of\" \"the\" \"it\" \"and\" \"the\" \"it\" \"to\" \"the\"\
    \ \"it\" \"on\" \"the\" \"it\" \"to\" \"the\" \"it\" \"as\" \"the\" \"it\" \"\
    is\" \"the\" \"it\" \"of\" \"the\" \"it\" \"and\" \"the\" \"it\" \"to\" \"the\"\
    \ \"it\" \"on\" \"the\" \"it\" \"to\" \"the\" \"it\" \"as\" \"the\" \"it\" \"\
    is\" \"the\" \"it\" \"of\" \"the\" \"it\" \"and\" \"the\" \"it\" \"to\" \"the\"\
    \ \"it\" \"on\" \"the\" \"it\" \"to\" \"the\" \"it\" \"as\" \"the\" \"it\" \"\
    is\" \"the\" \"it\" \"of\" \"the\" \"it\" \"and\" \"the\" \"it\" \"to\" \"the\"\
    \ \"it\" \"on\" \"the\" \"it\" \"to\" \"the\" \"it\" \"as\" \"the\" \"it\" \"\
    is\" \"the\" \"it\" \"of\" \"the\" \"it\" \"and\" \"the\" \"it\" \"to\" \"the\"\
    \ \"it\" \"on\" \"the\" \"it\" \"to\" \"the\" \"it\" \"as\" \"the\" \"it\" \"\
    is\" \"the\" \"it\" \"of\" \"the\" \"it\" \"and\" \"the\" \"it\" \"to\" \"the\"\
    \ \"it\" \"on\" \"the\" \"it\" \"to\" \"the\" \"it\" \"as\" \"the\" \"it\" \"\
    is\" \"the\" \"it\" \"of\" \"the\" \"it\" \"and\" \"the\" \"it\" \"to\" \"the\"\
    \ \"it\" \"on\" \"the\" \"it\" \"to\" \"the\" \"it\" \"as\" \"the\" \"it\" \"\
    is\" \"the\" \"it\" \"of\" \"the\" \"it\" \"and\" \"the\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp54fimf5q.sh: line 26: unexpected EOF while looking for matching
    `"''

    /tmp/tmp54fimf5q.sh: line 30: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_prefix=\"I\"\n  local boredom_suffix=\"!\"\n\
    \  local boredom_delimiter=\"?\"\n  local boredom_delimiter2=\"!\"\n  local boredom_delimiter3=\"\
    .\"\n  local boredom_delimiter4=\".\"\n  local boredom_delimiter5=\".\"\n  local\
    \ boredom_delimiter6=\".\"\n  local boredom_delimiter7=\".\"\n  local boredom_delimiter8=\"\
    .\"\n  local boredom_delimiter9=\".\"\n  local boredom_delimiter10=\".\"\n  local\
    \ boredom_delimiter11=\".\"\n  local boredom_delimiter12=\".\"\n  local boredom_delimiter13=\"\
    .\"\n  local boredom_delimiter14=\".\"\n  local boredom_delimiter15=\".\"\n  local\
    \ boredom_delimiter16=\".\"\n  local boredom_delimiter17=\".\"\n  local boredom_delimiter18=\"\
    .\"\n  local boredom_delimiter19=\".\"\n  local boredom_delimiter20=\".\"\n  local\
    \ boredom_delimiter21=\".\"\n  local boredom_delimiter22=\".\"\n  local boredom_delimiter23=\"\
    .\"\n  local boredom_delimiter24=\".\"\n  local boredom_delimiter25=\".\"\n  local\
    \ boredom_delimiter26=\".\"\n  local boredom_delimiter27=\".\"\n  local boredom_delimiter28=\"\
    .\"\n  local boredom_delimiter29=\".\"\n  local boredom_delimiter30=\".\"\n  local\
    \ boredom_delimiter31=\".\"\n  local boredom_delimiter32=\".\"\n  local boredom_delimiter33=\"\
    .\"\n  local boredom_delimiter34=\".\"\n  local boredom_delimiter35=\".\"\n  local\
    \ boredom_delimiter36=\".\"\n  local boredom_delimiter37=\".\"\n  local boredom_delimiter38=\"\
    .\"\n  local boredom_delimiter39=\".\"\n  local boredom_delimiter40=\".\"\n  local\
    \ boredom_delimiter41=\".\"\n  local boredom_delimiter42=\".\"\n  local boredom_delimiter43=\"\
    .\"\n  local boredom_delimiter44=\".\"\n  local boredom_delimiter45=\".\"\n  local\
    \ boredom_delimiter46=\".\"\n  local boredom_delimiter47=\".\"\n  local boredom_delimiter48\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local word\n  local i\n  local j\n  local k\n  local delimiter_count\n\
    \  local word_count\n  local boredom_count\n  local delimiter_index\n  local word_index\n\
    \  local boredom_index\n  local delimiter_index2\n  local word_index2\n  local\
    \ boredom_index2\n  local delimiter_index3\n  local word_index3\n  local boredom_index3\n\
    \  local delimiter_index4\n  local word_index4\n  local boredom_index4\n  local\
    \ delimiter_index5\n  local word_index5\n  local boredom_index5\n  local delimiter_index6\n\
    \  local word_index6\n  local boredom_index6\n  local delimiter_index7\n  local\
    \ word_index7\n  local boredom_index7\n  local delimiter_index8\n  local word_index8\n\
    \  local boredom_index8\n  local delimiter_index9\n  local word_index9\n  local\
    \ boredom_index9\n  local delimiter_index10\n  local word_index10\n  local boredom_index10\n\
    \  local delimiter_index11\n  local word_index11\n  local boredom_index11\n  local\
    \ delimiter_index12\n  local word_index12\n  local boredom_index12\n  local delimiter_index13\n\
    \  local word_index13\n  local boredom_index13\n  local delimiter_index14\n  local\
    \ word_index14\n  local boredom_index14\n  local delimiter_index15\n  local word_index15\n\
    \  local boredom_index15\n  local delimiter_index16\n  local word_index16\n  local\
    \ boredom_index16\n  local delimiter_index17\n  local word_index17\n  local boredom_index17\n\
    \  local delimiter_index18\n  local word_index18\n  local boredom_index18\n  local\
    \ delimiter_index19\n  local word_index19\n  local boredom_index19\n  local delimiter_index20\n\
    \  local word_index20\n  local boredom_index20\n  local delimiter_index21\n  local\
    \ word_index21\n  local boredom_index21\n  local delimiter_index22\n  local word_index22\n\
    \  local boredom_index22\n  local delimiter_index23\n  local word_index23\n  local\
    \ boredom_index23\n  local delimiter_index24\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiters=\".?!\"\
    \n  local delimiter_count=0\n  local delimiter_index=0\n  local delimiter_indexes=()\n\
    \  local delimiter_indexes_count=()\n  local delimiter_indexes_words=()\n  local\
    \ delimiter_indexes_words_count=()\n  local delimiter_indexes_words_index=()\n\
    \  local delimiter_indexes_words_index_count=()\n  local delimiter_indexes_words_index_words=()\n\
    \  local delimiter_indexes_words_index_words_count=()\n  local delimiter_indexes_words_index_words_index=()\n\
    \  local delimiter_indexes_words_index_words_index_count=()\n  local delimiter_indexes_words_index_words_index_words=()\n\
    \  local delimiter_indexes_words_index_words_index_words_count=()\n  local delimiter_indexes_words_index_words_index_words_index=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_count=()\n  local\
    \ delimiter_indexes_words_index_words_index_words_index_words=()\n  local delimiter_indexes_words_index_words_index_words_index_words_count=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_count=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_count=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_words=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_words_count=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_words_index_words=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_words_index_words_count=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_words_index_words_index_words=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_words_index_words_index_words_index_words=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_words_index_words_index_words_index_words_count=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_words_index_words_index_words_index_words_index_words=()\n\
    \  local delimiter_indexes_words_index_words_index_words_index_words_index_words_index_words_index_words_index_words_index_words_index_words_count=()\n\
    \  local delimiter_indexes_words_index_words_index_\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_prefix=\"I\"\n  local boredom_suffix=\"!\"\n\
    \  local boredom_delimiter=\"?\"\n  local boredom_words=()\n  local boredom_count=0\n\
    \  local boredom_word\n\n  while read -r line; do\n    boredom_words=(\"${line//$delimiter/$delimiter}\"\
    )\n    for boredom_word in \"${boredom_words[@]}\"; do\n      if [[ \"$boredom_word\"\
    \ == \"$boredom_prefix\" ]]; then\n        (( boredom_count+=1 ))\n      fi\n\
    \    done\n  done <<< \"$input\"\n\n  echo \"$output\"\n}\n\ncandidate() {\n \
    \   is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local word=$1\n  local boredoms=0\n  local\
    \ delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n  local delimiters_array=(\"\
    ${delimiters[@]}\")\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_elements=${delimiters_array[@]}\n  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements=${delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements=${delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements=${delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\"\
    ) = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate\
    \ \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiter2=\"?\"\
    \n  local delimiter3=\"!\"\n  local delimiter4=\".\"\n  local delimiter5=\"?\"\
    \n  local delimiter6=\"!\"\n  local delimiter7=\".\"\n  local delimiter8=\"?\"\
    \n  local delimiter9=\"!\"\n  local delimiter10=\".\"\n  local delimiter11=\"\
    ?\"\n  local delimiter12=\"!\"\n  local delimiter13=\".\"\n  local delimiter14=\"\
    ?\"\n  local delimiter15=\"!\"\n  local delimiter16=\".\"\n  local delimiter17=\"\
    ?\"\n  local delimiter18=\"!\"\n  local delimiter19=\".\"\n  local delimiter20=\"\
    ?\"\n  local delimiter21=\"!\"\n  local delimiter22=\".\"\n  local delimiter23=\"\
    ?\"\n  local delimiter24=\"!\"\n  local delimiter25=\".\"\n  local delimiter26=\"\
    ?\"\n  local delimiter27=\"!\"\n  local delimiter28=\".\"\n  local delimiter29=\"\
    ?\"\n  local delimiter30=\"!\"\n  local delimiter31=\".\"\n  local delimiter32=\"\
    ?\"\n  local delimiter33=\"!\"\n  local delimiter34=\".\"\n  local delimiter35=\"\
    ?\"\n  local delimiter36=\"!\"\n  local delimiter37=\".\"\n  local delimiter38=\"\
    ?\"\n  local delimiter39=\"!\"\n  local delimiter40=\".\"\n  local delimiter41=\"\
    ?\"\n  local delimiter42=\"!\"\n  local delimiter43=\".\"\n  local delimiter44=\"\
    ?\"\n  local delimiter45=\"!\"\n  local delimiter46=\".\"\n  local delimiter47=\"\
    ?\"\n  local delimiter48=\"!\"\n  local delimiter49=\".\"\n  local delimiter50=\"\
    ?\"\n  local delimiter51=\"!\"\n  local delimiter52=\".\"\n  local delimiter53=\"\
    ?\"\n  local delimiter54=\"!\"\n  local delimiter55=\".\"\n  local delimiter56=\"\
    ?\"\n  local delimiter57=\"!\"\n  local delimiter58=\".\"\n  local delimiter59=\"\
    ?\"\n  local delimiter60=\"!\"\n  local delimiter61=\".\"\n  local delimiter62=\"\
    ?\"\n  local delimiter63=\"!\"\n  local delimiter64=\".\"\n  local delimiter65=\"\
    ?\"\n  local delimiter66=\"!\"\n  local delimiter67=\".\"\n  local delimiter68=\"\
    ?\"\n  local delimiter69=\"!\"\n  local delimiter70=\".\"\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredom_words=(\"I\" \"are\" \"you\" \"it\" \"she\" \"\
    we\" \"it\" \"is\" \"it\" \"a\" \"an\" \"the\" \"to\" \"of\" \"and\" \"in\" \"\
    on\" \"in\" \"with\" \"for\" \"on\" \"with\" \"by\" \"by\" \"to\" \"in\" \"with\"\
    \ \"to\" \"on\" \"with\" \"as\" \"as\" \"to\" \"on\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\"\
    \ \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\" \"with\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0khr_w8d.sh: line 26: unexpected EOF while looking for matching
    `"''

    /tmp/tmp0khr_w8d.sh: line 30: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_word=\"I\"\n  local boredom_count=0\n  local\
    \ boredom_words=()\n  local boredom_word=''\n  local boredom_words=()\n  local\
    \ boredom_word=''\n  local boredom_words=()\n  local boredom_word=''\n  local\
    \ boredom_words=()\n  local boredom_word=''\n  local boredom_words=()\n  local\
    \ boredom_word=''\n  local boredom_words=()\n  local boredom_word=''\n  local\
    \ boredom_words=()\n  local boredom_word=''\n  local boredom_words=()\n  local\
    \ boredom_word=''\n  local boredom_words=()\n  local boredom_word=''\n  local\
    \ boredom_words=()\n  local boredom_word=''\n  local boredom_words=()\n  local\
    \ boredom_word=''\n  local boredom_words=()\n  local boredom_word=''\n  local\
    \ boredom_words=()\n  local boredom_word=''\n  local boredom_words=()\n  local\
    \ boredom_word=''\n  local boredom_words=()\n  local boredom_word=''\n  local\
    \ boredom_words=()\n  local boredom_word=''\n  local boredom_words=()\n  local\
    \ boredom_word=''\n  local boredom_words=()\n  local boredom_word=''\n  local\
    \ boredom_words=()\n  local boredom_word=''\n  local boredom_words=()\n  local\
    \ boredom_word=''\n  local boredom_words=()\n  local boredom_word=''\n  local\
    \ boredom_words=()\n  local boredom_word=''\n  local boredom_words=()\n  local\
    \ boredom_word=''\n  local boredom_words=()\n  local boredom_word=''\n  local\
    \ boredom_words=()\n  local boredom_word=''\n  local boredom_words=()\n  local\
    \ boredom_word=''\n  local boredom_words=()\n  local boredom_word=''\n  local\
    \ boredom_words=()\n  local boredom_word=''\n  \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_word=\"I\"\n  local boredom_count=0\n  local\
    \ boredom_sentence=\"\"\n  local boredom_sentence_count=0\n  local boredom_sentence_word=\"\
    \"\n  local boredom_sentence_word_count=0\n  local boredom_sentence_word_count2=0\n\
    \  local boredom_sentence_word_count3=0\n  local boredom_sentence_word_count4=0\n\
    \  local boredom_sentence_word_count5=0\n  local boredom_sentence_word_count6=0\n\
    \  local boredom_sentence_word_count7=0\n  local boredom_sentence_word_count8=0\n\
    \  local boredom_sentence_word_count9=0\n  local boredom_sentence_word_count10=0\n\
    \  local boredom_sentence_word_count11=0\n  local boredom_sentence_word_count12=0\n\
    \  local boredom_sentence_word_count13=0\n  local boredom_sentence_word_count14=0\n\
    \  local boredom_sentence_word_count15=0\n  local boredom_sentence_word_count16=0\n\
    \  local boredom_sentence_word_count17=0\n  local boredom_sentence_word_count18=0\n\
    \  local boredom_sentence_word_count19=0\n  local boredom_sentence_word_count20=0\n\
    \  local boredom_sentence_word_count21=0\n  local boredom_sentence_word_count22=0\n\
    \  local boredom_sentence_word_count23=0\n  local boredom_sentence_word_count24=0\n\
    \  local boredom_sentence_word_count25=0\n  local boredom_sentence_word_count26=0\n\
    \  local boredom_sentence_word_count27=0\n  local boredom_sentence_word_count28=0\n\
    \  local boredom_sentence_word_count29=0\n  local boredom_sentence_word_count30=0\n\
    \  local boredom_sentence_word_count31=0\n  local boredom_sentence_word_count32=0\n\
    \  local boredom_sentence_word_count33=0\n  local boredom_sentence_word_count34=0\n\
    \  local boredom_sentence_word_count35=0\n  local boredom_sentence_word_count36=0\n\
    \  local boredom_sentence_word_count37=0\n  local boredom_sentence_word_count38=0\n\
    \  local boredom_sentence_word_count39=0\n  local boredom_sentence_word_count40=0\n\
    \  local boredom_sentence_word_count41=0\n  \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter='.'\n  local boredom='I'\n  local boredom_count=0\n  local delimiter_count=0\n\
    \  local boredom_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter_count=0\n  local delimiter_count=0\n  local delimiter_count=0\n\
    \  local delimiter\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local word=$1\n  local boredoms=0\n  local\
    \ delimiter=$2\n  local delimiter_count=0\n  local delimiter_count1=0\n  local\
    \ delimiter_count2=0\n  local delimiter_count3=0\n  local delimiter_count4=0\n\
    \  local delimiter_count5=0\n  local delimiter_count6=0\n  local delimiter_count7=0\n\
    \  local delimiter_count8=0\n  local delimiter_count9=0\n  local delimiter_count10=0\n\
    \  local delimiter_count11=0\n  local delimiter_count12=0\n  local delimiter_count13=0\n\
    \  local delimiter_count14=0\n  local delimiter_count15=0\n  local delimiter_count16=0\n\
    \  local delimiter_count17=0\n  local delimiter_count18=0\n  local delimiter_count19=0\n\
    \  local delimiter_count20=0\n  local delimiter_count21=0\n  local delimiter_count22=0\n\
    \  local delimiter_count23=0\n  local delimiter_count24=0\n  local delimiter_count25=0\n\
    \  local delimiter_count26=0\n  local delimiter_count27=0\n  local delimiter_count28=0\n\
    \  local delimiter_count29=0\n  local delimiter_count30=0\n  local delimiter_count31=0\n\
    \  local delimiter_count32=0\n  local delimiter_count33=0\n  local delimiter_count34=0\n\
    \  local delimiter_count35=0\n  local delimiter_count36=0\n  local delimiter_count37=0\n\
    \  local delimiter_count38=0\n  local delimiter_count39=0\n  local delimiter_count40=0\n\
    \  local delimiter_count41=0\n  local delimiter_count42=0\n  local delimiter_count43=0\n\
    \  local delimiter_count44=0\n  local delimiter_count45=0\n  local delimiter_count46=0\n\
    \  local delimiter_count47=0\n  local delimiter_count48=0\n  local delimiter_count49=0\n\
    \  local delimiter_count50=0\n  local delimiter_count51=0\n  local delimiter_count52=0\n\
    \  local delimiter_count53=0\n  local delimiter_count54=0\n  local delimiter_count55=0\n\
    \  local delimiter_count56=0\n  local delimiter_count57=0\n  local delimiter_count58=0\n\
    \  local delimiter_count59=0\n  local delimiter_count60=0\n  local delimiter_count61=0\n\
    \  local delimiter_count62=0\n  local delimiter_count63=0\n  local delimiter_count64=0\n\
    \  local delimiter_count65=0\n  local delimiter_count66=0\n  local delimiter_count67=0\n\
    \  local delimiter_count68=0\n  local delimiter_count69=0\n  local delimiter\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_word=\"I\"\n  local boredom_count=0\n  local\
    \ boredom_sentence=\"\"\n  local boredom_sentence_index=0\n  local boredom_sentence_length=0\n\
    \  local boredom_sentence_words=\"\"\n  local boredom_sentence_word_count=0\n\
    \  local boredom_sentence_word_index=0\n  local boredom_sentence_word_length=0\n\
    \  local boredom_sentence_word_boredom_word=\"\"\n  local boredom_sentence_word_boredom_word_count=0\n\
    \  local boredom_sentence_word_boredom_word_index=0\n  local boredom_sentence_word_boredom_word_length=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word=\"\"\n  local boredom_sentence_word_boredom_word_boredom_word_count=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_index=0\n  local boredom_sentence_word_boredom_word_boredom_word_length=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word=\"\"\n \
    \ local boredom_sentence_word_boredom_word_boredom_word_boredom_word_count=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_index=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_length=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word=\"\
    \"\n  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_count=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_index=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_length=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_boredom_word=\"\
    \"\n  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_boredom_word_count=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_boredom_word_index=0\n\
    \  local boredom_sentence_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredoms=0\n\
    \  local delimiters=(\".\")\n  local delimiters_length=${#delimiters[@]}\n  local\
    \ delimiters_array=(\"${delimiters[@]}\")\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_elements=${delimiters_array[@]}\n  local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements=${delimiters_array_elements[@]}\n\
    \  local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \  \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\"\
    ) = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate\
    \ \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local delimiter=\".\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_index=0\n  local delimiter_index2=0\n\
    \  local delimiter_index3=0\n  local delimiter_index4=0\n  local delimiter_index5=0\n\
    \  local delimiter_index6=0\n  local delimiter_index7=0\n  local delimiter_index8=0\n\
    \  local delimiter_index9=0\n  local delimiter_index10=0\n  local delimiter_index11=0\n\
    \  local delimiter_index12=0\n  local delimiter_index13=0\n  local delimiter_index14=0\n\
    \  local delimiter_index15=0\n  local delimiter_index16=0\n  local delimiter_index17=0\n\
    \  local delimiter_index18=0\n  local delimiter_index19=0\n  local delimiter_index20=0\n\
    \  local delimiter_index21=0\n  local delimiter_index22=0\n  local delimiter_index23=0\n\
    \  local delimiter_index24=0\n  local delimiter_index25=0\n  local delimiter_index26=0\n\
    \  local delimiter_index27=0\n  local delimiter_index28=0\n  local delimiter_index29=0\n\
    \  local delimiter_index30=0\n  local delimiter_index31=0\n  local delimiter_index32=0\n\
    \  local delimiter_index33=0\n  local delimiter_index34=0\n  local delimiter_index35=0\n\
    \  local delimiter_index36=0\n  local delimiter_index37=0\n  local delimiter_index38=0\n\
    \  local delimiter_index39=0\n  local delimiter_index40=0\n  local delimiter_index41=0\n\
    \  local delimiter_index42=0\n  local delimiter_index43=0\n  local delimiter_index44=0\n\
    \  local delimiter_index45=0\n  local delimiter_index46=0\n  local delimiter_index47=0\n\
    \  local delimiter_index48=0\n  local delimiter_index49=0\n  local delimiter_index50=0\n\
    \  local delimiter_index51=0\n  local delimiter_index52=0\n  local delimiter_index53=0\n\
    \  local delimiter_index54=0\n  local delimiter_index55=0\n  local delimiter_index56=0\n\
    \  local delimiter_index57=0\n  local delimiter_index58=0\n  local delimiter_index59=0\n\
    \  local delimiter_index60=0\n  local delimiter_index61=0\n  local delimiter_index62=0\n\
    \  local delimiter_index63=0\n  local delimiter_index64=0\n  local delimiter_index65=0\n\
    \  local delimiter_index66=0\n  local delimiter_index67=0\n  \n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredom_words=(\"I\" \"are\" \"you\" \"are\" \"is\" \"\
    it\" \"the\" \"it\" \"of\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"\
    you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\"\
    \ \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\" \"you\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp71lfjs0i.sh: line 26: unexpected EOF while looking for matching
    `"''

    /tmp/tmp71lfjs0i.sh: line 30: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_prefix=\"I\"\n  local boredom_suffix=\"!\"\n\
    \  local boredom_delimiter=\"?\"\n  local boredom_words=()\n  local boredom_count=0\n\
    \  local boredom_word\n  local boredom_suffix\n  local boredom_prefix\n  local\
    \ boredom_delimiter\n  local boredom_word\n  local boredom_count\n  local boredom_word\n\
    \  local boredom_suffix\n  local boredom_prefix\n  local boredom_delimiter\n \
    \ local boredom_word\n  local boredom_count\n  local boredom_word\n  local boredom_suffix\n\
    \  local boredom_prefix\n  local boredom_delimiter\n  local boredom_word\n  local\
    \ boredom_count\n  local boredom_word\n  local boredom_suffix\n  local boredom_prefix\n\
    \  local boredom_delimiter\n  local boredom_word\n  local boredom_count\n  local\
    \ boredom_word\n  local boredom_suffix\n  local boredom_prefix\n  local boredom_delimiter\n\
    \  local boredom_word\n  local boredom_count\n  local boredom_word\n  local boredom_suffix\n\
    \  local boredom_prefix\n  local boredom_delimiter\n  local boredom_word\n  local\
    \ boredom_count\n  local boredom_word\n  local boredom_suffix\n  local boredom_prefix\n\
    \  local boredom_delimiter\n  local boredom_word\n  local boredom_count\n  local\
    \ boredom_word\n  local boredom_suffix\n  local boredom_prefix\n  local boredom_delimiter\n\
    \  local boredom_word\n  local boredom_count\n  local boredom_word\n  local boredom_suffix\n\
    \  local boredom_prefix\n  local boredom_delimiter\n  local boredom_word\n  local\
    \ boredom_count\n  local boredom_word\n  local boredom_suffix\n  local boredom_prefix\n\
    \  local boredom_delimiter\n  local boredom_word\n  local boredom_count\n  local\
    \ boredom_word\n  local boredom_suffix\n  local boredom_prefix\n  local boredom_delimiter\n\
    \  local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=\"$1\"\n    local output=0\n\
    \    local delimiter=\".\"\n    local boredom_word=\"I\"\n    local boredom_count=0\n\
    \    local boredom_sentence=\"\"\n    local boredom_sentence_count=0\n    local\
    \ boredom_sentence_word=\"\"\n    local boredom_sentence_word_count=0\n    local\
    \ boredom_sentence_word_length=0\n    local boredom_sentence_word_length_count=0\n\
    \    local boredom_sentence_word_length_length=0\n    local boredom_sentence_word_length_length_count=0\n\
    \    local boredom_sentence_word_length_length_length_count=0\n    local boredom_sentence_word_length_length_length_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count=0\n    local\
    \ boredom_sentence_word_length_length_length_count_count_count=0\n    local boredom_sentence_word_length_length_length_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \    local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiter_count=0\n\
    \  local delimiter_index=0\n  local delimiter_index2=0\n  local delimiter_index3=0\n\
    \  local delimiter_index4=0\n  local delimiter_index5=0\n  local delimiter_index6=0\n\
    \  local delimiter_index7=0\n  local delimiter_index8=0\n  local delimiter_index9=0\n\
    \  local delimiter_index10=0\n  local delimiter_index11=0\n  local delimiter_index12=0\n\
    \  local delimiter_index13=0\n  local delimiter_index14=0\n  local delimiter_index15=0\n\
    \  local delimiter_index16=0\n  local delimiter_index17=0\n  local delimiter_index18=0\n\
    \  local delimiter_index19=0\n  local delimiter_index20=0\n  local delimiter_index21=0\n\
    \  local delimiter_index22=0\n  local delimiter_index23=0\n  local delimiter_index24=0\n\
    \  local delimiter_index25=0\n  local delimiter_index26=0\n  local delimiter_index27=0\n\
    \  local delimiter_index28=0\n  local delimiter_index29=0\n  local delimiter_index30=0\n\
    \  local delimiter_index31=0\n  local delimiter_index32=0\n  local delimiter_index33=0\n\
    \  local delimiter_index34=0\n  local delimiter_index35=0\n  local delimiter_index36=0\n\
    \  local delimiter_index37=0\n  local delimiter_index38=0\n  local delimiter_index39=0\n\
    \  local delimiter_index40=0\n  local delimiter_index41=0\n  local delimiter_index42=0\n\
    \  local delimiter_index43=0\n  local delimiter_index44=0\n  local delimiter_index45=0\n\
    \  local delimiter_index46=0\n  local delimiter_index47=0\n  local delimiter_index48=0\n\
    \  local delimiter_index49=0\n  local delimiter_index50=0\n  local delimiter_index51=0\n\
    \  local delimiter_index52=0\n  local delimiter_index53=0\n  local delimiter_index54=0\n\
    \  local delimiter_index55=0\n  local delimiter_index56=0\n  local delimiter_index57=0\n\
    \  local delimiter_index58=0\n  local delimiter_index59=0\n  local delimiter_index60=0\n\
    \  local delimiter_index61=0\n  local delimiter_index62=0\n  local delimiter_index63=0\n\
    \  local delimiter_index64=0\n  local delimiter_index65=0\n  local delimiter_index66=0\n\
    \  local delimiter_index67=0\n  local delimiter_index68=0\n  \n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=\"$1\"\n    local output=0\n\
    \    local delimiter=\".\"\n    local boredom_prefix=\"I\"\n    local boredom_suffix=\"\
    !\"\n    local boredom_delimiter=\"?\"\n    local boredom_count=0\n    local boredom_words=\"\
    \"\n    local boredom_word=\"\"\n    local boredom_word_count=0\n    local boredom_word_prefix=\"\
    \"\n    local boredom_word_suffix=\"\"\n    local boredom_word_delimiter=\"\"\n\
    \    local boredom_word_count=0\n    local boredom_word_prefix=\"\"\n    local\
    \ boredom_word_suffix=\"\"\n    local boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n\
    \    local boredom_word_prefix=\"\"\n    local boredom_word_suffix=\"\"\n    local\
    \ boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n    local boredom_word_prefix=\"\
    \"\n    local boredom_word_suffix=\"\"\n    local boredom_word_delimiter=\"\"\n\
    \    local boredom_word_count=0\n    local boredom_word_prefix=\"\"\n    local\
    \ boredom_word_suffix=\"\"\n    local boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n\
    \    local boredom_word_prefix=\"\"\n    local boredom_word_suffix=\"\"\n    local\
    \ boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n    local boredom_word_prefix=\"\
    \"\n    local boredom_word_suffix=\"\"\n    local boredom_word_delimiter=\"\"\n\
    \    local boredom_word_count=0\n    local boredom_word_prefix=\"\"\n    local\
    \ boredom_word_suffix=\"\"\n    local boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n\
    \    local boredom_word_prefix=\"\"\n    local boredom_word_suffix=\"\"\n    local\
    \ boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n    local boredom_word_prefix=\"\
    \"\n    local boredom_word_suffix=\"\"\n    local boredom_word_delimiter=\"\"\n\
    \    local boredom_word_count=0\n    local boredom_word_prefix=\"\"\n    local\
    \ boredom_word_suffix=\"\"\n    local boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n\
    \    local boredom_word_prefix=\"\"\n    local boredom_word_suffix=\"\"\n    local\
    \ boredom_word_delimiter=\"\"\n    local boredom_word_count=0\n    \n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiters=\" ?!\"\
    \n  local delimiter_count=0\n  local delimiter_index=0\n  local delimiter_indexes=()\n\
    \  local delimiter_indexes_count=()\n  local delimiter_indexes_words=()\n  local\
    \ delimiter_indexes_words_count=()\n  local delimiter_indexes_words_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count=()\n  local delimiter_indexes_words_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count=()\n  local delimiter_indexes_words_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_index\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredoms=0\n\
    \    local word\n    for word in $string; do\n        if [[ \"$word\" == \"I\"\
    \ ]]; then\n            boredoms+=1\n        fi\n    done\n    echo \"$boredoms\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredoms=0\n\
    \  local delimiter=\".\"\n  local delimiters=\" ?! .\"\n  local delimiters_array=($delimiters)\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiter_index=0\n\
    \  local delimiter_indexes=()\n  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n\
    \  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local\
    \ delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n\
    \  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local\
    \ delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n\
    \  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local\
    \ delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n\
    \  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local\
    \ delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n\
    \  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local\
    \ delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n\
    \  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local\
    \ delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n\
    \  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local\
    \ delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n\
    \  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local\
    \ delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n\
    \  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local\
    \ delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n\
    \  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local\
    \ delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n\
    \  local delimiter_indexes_length=()\n  local delimiter_indexes_length=()\n  local\
    \ delimiter_indexes_length=()\n  local delimiter_indexes_\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter='.'\n  local boredom_word='I'\n  local boredom_count=0\n  local boredom_sentence=''\n\
    \  local boredom_sentence_count=0\n  local boredom_sentence_word=''\n  local boredom_sentence_word_count=0\n\
    \  local boredom_sentence_word_count2=0\n  local boredom_sentence_word_count3=0\n\
    \  local boredom_sentence_word_count4=0\n  local boredom_sentence_word_count5=0\n\
    \  local boredom_sentence_word_count6=0\n  local boredom_sentence_word_count7=0\n\
    \  local boredom_sentence_word_count8=0\n  local boredom_sentence_word_count9=0\n\
    \  local boredom_sentence_word_count10=0\n  local boredom_sentence_word_count11=0\n\
    \  local boredom_sentence_word_count12=0\n  local boredom_sentence_word_count13=0\n\
    \  local boredom_sentence_word_count14=0\n  local boredom_sentence_word_count15=0\n\
    \  local boredom_sentence_word_count16=0\n  local boredom_sentence_word_count17=0\n\
    \  local boredom_sentence_word_count18=0\n  local boredom_sentence_word_count19=0\n\
    \  local boredom_sentence_word_count20=0\n  local boredom_sentence_word_count21=0\n\
    \  local boredom_sentence_word_count22=0\n  local boredom_sentence_word_count23=0\n\
    \  local boredom_sentence_word_count24=0\n  local boredom_sentence_word_count25=0\n\
    \  local boredom_sentence_word_count26=0\n  local boredom_sentence_word_count27=0\n\
    \  local boredom_sentence_word_count28=0\n  local boredom_sentence_word_count29=0\n\
    \  local boredom_sentence_word_count30=0\n  local boredom_sentence_word_count31=0\n\
    \  local boredom_sentence_word_count32=0\n  local boredom_sentence_word_count33=0\n\
    \  local boredom_sentence_word_count34=0\n  local boredom_sentence_word_count35=0\n\
    \  local boredom_sentence_word_count36=0\n  local boredom_sentence_word_count37=0\n\
    \  local boredom_sentence_word_count38=0\n  local boredom_sentence_word_count39=0\n\
    \  local boredom_sentence_word_count40=0\n  local boredom_sentence_word_count41=0\n\
    \  local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_prefix=\"I\"\n  local boredom_suffix=\"!\"\n\
    \  local boredom_delimiter=\"?\"\n  local boredom_delimiter2=\"!\"\n  local boredom_delimiter3=\"\
    .\"\n  local boredom_delimiter4=\"?\"\n  local boredom_delimiter5=\"!\"\n  local\
    \ boredom_delimiter6=\".\"\n  local boredom_delimiter7=\"?\"\n  local boredom_delimiter8=\"\
    !\"\n  local boredom_delimiter9=\".\"\n  local boredom_delimiter10=\"?\"\n  local\
    \ boredom_delimiter11=\"!\"\n  local boredom_delimiter12=\".\"\n  local boredom_delimiter13=\"\
    ?\"\n  local boredom_delimiter14=\"!\"\n  local boredom_delimiter15=\".\"\n  local\
    \ boredom_delimiter16=\"?\"\n  local boredom_delimiter17=\"!\"\n  local boredom_delimiter18=\"\
    .\"\n  local boredom_delimiter19=\"?\"\n  local boredom_delimiter20=\"!\"\n  local\
    \ boredom_delimiter21=\".\"\n  local boredom_delimiter22=\"?\"\n  local boredom_delimiter23=\"\
    !\"\n  local boredom_delimiter24=\".\"\n  local boredom_delimiter25=\"?\"\n  local\
    \ boredom_delimiter26=\"!\"\n  local boredom_delimiter27=\".\"\n  local boredom_delimiter28=\"\
    ?\"\n  local boredom_delimiter29=\"!\"\n  local boredom_delimiter30=\".\"\n  local\
    \ boredom_delimiter31=\"?\"\n  local boredom_delimiter32=\"!\"\n  local boredom_delimiter33=\"\
    .\"\n  local boredom_delimiter34=\"?\"\n  local boredom_delimiter35=\"!\"\n  local\
    \ boredom_delimiter36=\".\"\n  local boredom_delimiter37=\"?\"\n  local boredom_delimiter38=\"\
    !\"\n  local boredom_delimiter39=\".\"\n  local boredom_delimiter40=\"?\"\n  local\
    \ boredom_delimiter41=\"!\"\n  local boredom_delimiter42=\".\"\n  local boredom_delimiter43=\"\
    ?\"\n  local boredom_delimiter44=\"!\"\n  local boredom_delimiter45=\".\"\n  local\
    \ boredom_delimiter46=\"?\"\n  local boredom_delimiter47=\"!\"\n  local boredom_delimiter48\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=()\n  local boredom_sentence=()\n  local boredom_sentence_index=0\n\
    \  local boredom_sentence_length=()\n  local boredom_sentence_boredom_words=()\n\
    \  local boredom_sentence_boredom_words_count=()\n  local boredom_sentence_boredom_words_length=()\n\
    \  local boredom_sentence_boredom_words_boredom_words=()\n  local boredom_sentence_boredom_words_boredom_words_count=()\n\
    \  local boredom_sentence_boredom_words_boredom_words_length=()\n  local boredom_sentence_boredom_words_boredom_words_boredom_words=()\n\
    \  local boredom_sentence_boredom_words_boredom_words_boredom_words_count=()\n\
    \  local boredom_sentence_boredom_words_boredom_words_boredom_words_length=()\n\
    \  local boredom_sentence_boredom_words_boredom_words_boredom_words_boredom_words=()\n\
    \  local boredom_sentence_boredom_words_boredom_words_boredom_words_boredom_words_count=()\n\
    \  local boredom_sentence_boredom_words_boredom_words_boredom_words_boredom_words_length=()\n\
    \  local boredom_sentence_boredom_words_boredom_words_boredom_words_boredom_words_boredom_words=()\n\
    \  local boredom_sentence_boredom_words_boredom_words_boredom_words_boredom_words_boredom_words_count=()\n\
    \  local boredom_sentence_boredom_words_boredom_words_boredom_words_boredom_words_boredom_words_length=()\n\
    \  local boredom_sentence_boredom_words_boredom_words_boredom_words_boredom_words_boredom_words_boredom_words=()\n\
    \  local boredom_sentence_boredom_words_boredom_words_boredom_words_boredom_words_boredom_words_boredom_words_count=()\n\
    \  local boredom_sentence_boredom_words_boredom_words_boredom_words_boredom_words_boredom_words_boredom_words_length=()\n\
    \  local boredom_sentence_boredom_words_boredom_words_boredom_words_boredom_words_boredom_words_boredom_words_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_word=\"I\"\n  local boredom_count=0\n  local\
    \ boredom_sentence=\"\"\n  local boredom_sentence_count=0\n  local boredom_sentence_word=\"\
    \"\n  local boredom_sentence_word_count=0\n  local boredom_sentence_word_count2=0\n\
    \  local boredom_sentence_word_count3=0\n  local boredom_sentence_word_count4=0\n\
    \  local boredom_sentence_word_count5=0\n  local boredom_sentence_word_count6=0\n\
    \  local boredom_sentence_word_count7=0\n  local boredom_sentence_word_count8=0\n\
    \  local boredom_sentence_word_count9=0\n  local boredom_sentence_word_count10=0\n\
    \  local boredom_sentence_word_count11=0\n  local boredom_sentence_word_count12=0\n\
    \  local boredom_sentence_word_count13=0\n  local boredom_sentence_word_count14=0\n\
    \  local boredom_sentence_word_count15=0\n  local boredom_sentence_word_count16=0\n\
    \  local boredom_sentence_word_count17=0\n  local boredom_sentence_word_count18=0\n\
    \  local boredom_sentence_word_count19=0\n  local boredom_sentence_word_count20=0\n\
    \  local boredom_sentence_word_count21=0\n  local boredom_sentence_word_count22=0\n\
    \  local boredom_sentence_word_count23=0\n  local boredom_sentence_word_count24=0\n\
    \  local boredom_sentence_word_count25=0\n  local boredom_sentence_word_count26=0\n\
    \  local boredom_sentence_word_count27=0\n  local boredom_sentence_word_count28=0\n\
    \  local boredom_sentence_word_count29=0\n  local boredom_sentence_word_count30=0\n\
    \  local boredom_sentence_word_count31=0\n  local boredom_sentence_word_count32=0\n\
    \  local boredom_sentence_word_count33=0\n  local boredom_sentence_word_count34=0\n\
    \  local boredom_sentence_word_count35=0\n  local boredom_sentence_word_count36=0\n\
    \  local boredom_sentence_word_count37=0\n  local boredom_sentence_word_count38=0\n\
    \  local boredom_sentence_word_count39=0\n  local boredom_sentence_word_count40=0\n\
    \  local boredom_sentence_word_count41=0\n  \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom=\"I\"\n  local boredom_count=0\n  local boredom_words=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_index=0\n  local boredom_word_length=0\n\
    \  local boredom_word_delimiter=\"?\"\n  local boredom_word_delimiter_index=0\n\
    \  local boredom_word_delimiter_index2=0\n  local boredom_word_delimiter_index3=0\n\
    \  local boredom_word_delimiter_index4=0\n  local boredom_word_delimiter_index5=0\n\
    \  local boredom_word_delimiter_index6=0\n  local boredom_word_delimiter_index7=0\n\
    \  local boredom_word_delimiter_index8=0\n  local boredom_word_delimiter_index9=0\n\
    \  local boredom_word_delimiter_index10=0\n  local boredom_word_delimiter_index11=0\n\
    \  local boredom_word_delimiter_index12=0\n  local boredom_word_delimiter_index13=0\n\
    \  local boredom_word_delimiter_index14=0\n  local boredom_word_delimiter_index15=0\n\
    \  local boredom_word_delimiter_index16=0\n  local boredom_word_delimiter_index17=0\n\
    \  local boredom_word_delimiter_index18=0\n  local boredom_word_delimiter_index19=0\n\
    \  local boredom_word_delimiter_index20=0\n  local boredom_word_delimiter_index21=0\n\
    \  local boredom_word_delimiter_index22=0\n  local boredom_word_delimiter_index23=0\n\
    \  local boredom_word_delimiter_index24=0\n  local boredom_word_delimiter_index25=0\n\
    \  local boredom_word_delimiter_index26=0\n  local boredom_word_delimiter_index27=0\n\
    \  local boredom_word_delimiter_index28=0\n  local boredom_word_delimiter_index29=0\n\
    \  local boredom_word_delimiter_index30=0\n  local boredom_word_delimiter_index31=0\n\
    \  local boredom_word_delimiter_index32=0\n  local boredom_word_delimiter_index33=0\n\
    \  local boredom_word_delimiter_index34=0\n  local boredom_word_delimiter_index35=0\n\
    \  local boredom_word_delimiter_index36=0\n  local boredom_word_delimiter_index37=0\n\
    \  local boredom_word_delimiter_index38=0\n  local boredom_word_delimiter_index39=0\n\
    \  local bore\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredom_count=0\n\
    \    local boredom_string=\"I\"\n    local delimiter=\".\"\n    local delimiter2=\"\
    ?\"\n    local delimiter3=\"!\"\n    local delimiter4=\".\"\n    local delimiter5=\"\
    ?\"\n    local delimiter6=\"!\"\n    local delimiter7=\".\"\n    local delimiter8=\"\
    ?\"\n    local delimiter9=\"!\"\n    local delimiter10=\".\"\n    local delimiter11=\"\
    ?\"\n    local delimiter12=\"!\"\n    local delimiter13=\".\"\n    local delimiter14=\"\
    ?\"\n    local delimiter15=\"!\"\n    local delimiter16=\".\"\n    local delimiter17=\"\
    ?\"\n    local delimiter18=\"!\"\n    local delimiter19=\".\"\n    local delimiter20=\"\
    ?\"\n    local delimiter21=\"!\"\n    local delimiter22=\".\"\n    local delimiter23=\"\
    ?\"\n    local delimiter24=\"!\"\n    local delimiter25=\".\"\n    local delimiter26=\"\
    ?\"\n    local delimiter27=\"!\"\n    local delimiter28=\".\"\n    local delimiter29=\"\
    ?\"\n    local delimiter30=\"!\"\n    local delimiter31=\".\"\n    local delimiter32=\"\
    ?\"\n    local delimiter33=\"!\"\n    local delimiter34=\".\"\n    local delimiter35=\"\
    ?\"\n    local delimiter36=\"!\"\n    local delimiter37=\".\"\n    local delimiter38=\"\
    ?\"\n    local delimiter39=\"!\"\n    local delimiter40=\".\"\n    local delimiter41=\"\
    ?\"\n    local delimiter42=\"!\"\n    local delimiter43=\".\"\n    local delimiter44=\"\
    ?\"\n    local delimiter45=\"!\"\n    local delimiter46=\".\"\n    local delimiter47=\"\
    ?\"\n    local delimiter48=\"!\"\n    local delimiter49=\".\"\n    local delimiter50=\"\
    ?\"\n    local delimiter51=\"!\"\n    local delimiter52=\".\"\n    local delimiter53=\"\
    ?\"\n    local delimiter54=\"!\"\n    local delimiter55=\".\"\n    local delimiter56=\"\
    ?\"\n    local delimiter57=\"!\"\n    local delimiter58=\".\"\n    local delimiter59=\"\
    ?\"\n    local delimiter60=\"!\"\n    local delimiter61=\".\"\n    local delimiter62=\"\
    ?\"\n    local delimiter63=\"!\"\n    local delimiter64=\".\"\n    local delimiter65=\"\
    ?\"\n    local delimiter66=\"!\"\n    local delimiter67=\".\"\n    local delimiter68=\"\
    ?\"\n    local delimiter69=\"!\"\n    local delimiter70=\".\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredoms=0\n\
    \  local delimiters=\".?!\"\n  local delimiters_array=( \"$delimiters\" )\n  local\
    \ delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=\"$1\"\n    local output=0\n\
    \    local delimiters=\".?!\"\n    for delimiter in $delimiters; do\n        local\
    \ count=0\n        local word\n        for word in $input; do\n            if\
    \ [[ \"$word\" == \"$delimiter\" ]]; then\n                count=$((count+1))\n\
    \            fi\n        done\n        if [ \"$count\" -gt 0 ]; then\n       \
    \     output=$((output+1))\n        fi\n    done\n    echo \"$output\"\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=.?!\n  local word\n  local i\n  for i in $input; do\n    word=${i}\n\
    \    if [[ \"$word\" == *\"$delimiter\"* ]]; then\n      output=$((output+1))\n\
    \    fi\n  done\n  echo $output\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=$1\n    local output=0\n  \
    \  local delimiter=$2\n    local boredoms=()\n    local words=()\n    local word\n\
    \    local count\n    local i\n\n    # Split input into words\n    while read\
    \ -r word; do\n        words+=(\"$word\")\n    done <<< \"$input\"\n\n    # Count\
    \ boredoms\n    for word in \"${words[@]}\"; do\n        if [[ \"$word\" == \"\
    I\" ]]; then\n            boredoms+=(\"$word\")\n        fi\n    done\n\n    #\
    \ Count boredoms\n    for word in \"${words[@]}\"; do\n        if [[ \"$word\"\
    \ == \"I\" ]]; then\n            boredoms+=(\"$word\")\n        fi\n    done\n\
    \n    # Count boredoms\n    for word in \"${words[@]}\"; do\n        if [[ \"\
    $word\" == \"I\" ]]; then\n            boredoms+=(\"$word\")\n        fi\n   \
    \ done\n\n    # Count boredoms\n    for word in \"${words[@]}\"; do\n        if\
    \ [[ \"$word\" == \"I\" ]]; then\n            boredoms+=(\"$word\")\n        fi\n\
    \    done\n\n    # Count boredoms\n    for word in \"${words[@]}\"; do\n     \
    \   if [[ \"$word\" == \"I\" ]]; then\n            boredoms+=(\"$word\")\n   \
    \     fi\n    done\n\n    # Count boredoms\n    for word in \"${words[@]}\"; do\n\
    \        if [[ \"$word\" == \"I\" ]]; then\n            boredoms+=(\"$word\")\n\
    \        fi\n    done\n\n    # Count boredoms\n    for word in \"${words[@]}\"\
    ; do\n        if [[ \"$word\" == \"I\" ]]; then\n            boredoms+=(\"$word\"\
    )\n        fi\n    done\n\n    # Count boredoms\n    for word in \"${words[@]}\"\
    ; do\n        if [[ \"$word\" == \"I\" ]]; then\n            boredoms+=(\"$word\"\
    )\n        fi\n    done\n\n    # Count boredoms\n    for word in \"${words[@]}\"\
    ; do\n        if [[ \"$word\" == \"I\" ]]; then\n            boredoms+=(\"$word\"\
    )\n        fi\n    done\n\n    # Count boredoms\n    for word in \"${words[@]}\"\
    ; do\n        if [[ \"$word\" == \"I\" ]]; then\n            boredoms+=(\"\n}\n\
    \ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpimg86rv1.sh: line 103: unexpected EOF while looking for matching
    `"''

    /tmp/tmpimg86rv1.sh: line 107: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredoms=0\n\
    \  local delimiters=(\".\")\n  local delimiters_count=${#delimiters[@]}\n  local\
    \ delimiters_index=-1\n  local delimiters_char\n  local delimiters_char_index\n\
    \  local delimiters_char_length\n  local delimiters_char_length_index\n  local\
    \ delimiters_char_length_count\n  local delimiters_char_length_count_index\n \
    \ local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_count_index\n\
    \  local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_word=\"I\"\n  local boredom_count=0\n  local\
    \ boredom_sentence=\"\"\n  local boredom_sentence_count=0\n  local boredom_sentence_word=\"\
    \"\n  local boredom_sentence_word_count=0\n  local boredom_sentence_word_length=0\n\
    \  local boredom_sentence_word_length_count=0\n  local boredom_sentence_word_length_length=0\n\
    \  local boredom_sentence_word_length_length_count=0\n  local boredom_sentence_word_length_length_length_count=0\n\
    \  local boredom_sentence_word_length_length_length_count=0\n  local boredom_sentence_word_length_length_length_length_count=0\n\
    \  local boredom_sentence_word_length_length_length_length_count_count=0\n  local\
    \ boredom_sentence_word_length_length_length_length_count_count_count=0\n  local\
    \ boredom_sentence_word_length_length_length_count_count_count_count=0\n  local\
    \ boredom_sentence_word_length_length_length_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_prefix=\"I\"\n  local boredom_suffix=\"!\"\n\
    \  local boredom_delimiter=\"?\"\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_sentence=()\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_word\n  local boredom_sentence\n  local boredom_word\n  local\
    \ boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local\
    \ boredom_word\n  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_word\n  local boredom_sentence\n  local boredom_word\n  local\
    \ boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local\
    \ boredom_word\n  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_word\n  local boredom_sentence\n  local boredom_word\n  local\
    \ boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local\
    \ boredom_word\n  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_word\n  local boredom_sentence\n  local boredom_word\n  local\
    \ boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local\
    \ boredom_word\n  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_word\n  local boredom_sentence\n  local boredom_word\n  local\
    \ boredom_sentence\n  local boredom_word\n\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_prefix=\"I\"\n  local boredom_suffix=\"!\"\n\
    \  local boredom_delimiter=\"?\"\n  local boredom_words=$(echo \"$input\" | sed\
    \ -e \"s/$delimiter/$boredom_delimiter/g\" -e \"s/$boredom_prefix/$boredom_delimiter/g\"\
    \ -e \"s/$boredom_suffix/$boredom_delimiter/g\")\n  local boredom_count=0\n  for\
    \ word in $boredom_words; do\n    local word_count=$(cat \"$word\" | grep -c \"\
    $boredom_prefix\")\n    boredom_count=$((boredom_count + word_count))\n  done\n\
    \  echo \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cat: __pycache__: Is a directory

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local word\n  local i\n  local j\n  local k\n  local count\n\
    \  local wordcount\n  local boredom\n  local boredom_count\n  local boredom_word\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local \n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiters=\" ?!\"\
    \n  local delimiter_count=0\n  local delimiter_index=0\n  local delimiter_indexes=()\n\
    \  local delimiter_indexes_count=-1\n  local delimiter_indexes_words=()\n  local\
    \ delimiter_indexes_words_count=-1\n  local delimiter_indexes_word=()\n  local\
    \ delimiter_indexes_word_count=-1\n  local delimiter_indexes_word_index=()\n \
    \ local delimiter_indexes_word_index_count=-1\n  local delimiter_indexes_word_index_word=()\n\
    \  local delimiter_indexes_word_index_word_count=-1\n  local delimiter_indexes_word_index_word_index=()\n\
    \  local delimiter_indexes_word_index_word_index_count=-1\n  local delimiter_indexes_word_index_word_index_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count=-1\n  local delimiter_indexes_word_index_word_index_word_index=()\n\
    \  local delimiter_indexes_word_index_word_index_word_index_count=-1\n  local\
    \ delimiter_indexes_word_index_word_index_word_index_word=()\n  local delimiter_indexes_word_index_word_index_word_index_word_count=-1\n\
    \  local delimiter_indexes_word_index_word_index_word_index_word_index=()\n  local\
    \ delimiter_indexes_word_index_word_index_word_index_word_index_count=-1\n  local\
    \ delimiter_indexes_word_index_word_index_word_index_word_index_word=()\n  local\
    \ delimiter_indexes_word_index_word_index_word_index_word_index_word_count=-1\n\
    \  local delimiter_indexes_word_index_word_index_word_index_word_index_word_index=()\n\
    \  local delimiter_indexes_word_index_word_index_word_index_word_index_word_index_count=-1\n\
    \  local delimiter_indexes_word_index_word_index_word_index_word_index_word_index_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_index_word_index_word_index_word_count=-1\n\
    \  local delimiter_indexes_word_index_word_index_word_index_word_index_word_index_word_index=()\n\
    \  local delimiter_indexes_word_index_word_index_word_index_word_index_word_index_word_index_count=-1\n\
    \  local delimiter_indexes_word_index_word_index_word_index_word_index_word_index_word_index_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_index_word_index_word_index_word_index_word_count=-1\n\
    \  local delimiter_indexes_word_index_word_index_word_index_word_index_word_index_word_index_word_index_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_index_word_index_word_index_word_index_word_index_word_count=\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local delimiter=\".\"\n  local delimiter2=\"\
    ?\"\n  local delimiter3=\"!\"\n  local delimiter4=\".\"\n  local delimiter5=\"\
    ?\"\n  local delimiter6=\"!\"\n  local delimiter7=\".\"\n  local delimiter8=\"\
    ?\"\n  local delimiter9=\"!\"\n  local delimiter10=\".\"\n  local delimiter11=\"\
    ?\"\n  local delimiter12=\"!\"\n  local delimiter13=\".\"\n  local delimiter14=\"\
    ?\"\n  local delimiter15=\"!\"\n  local delimiter16=\".\"\n  local delimiter17=\"\
    ?\"\n  local delimiter18=\"!\"\n  local delimiter19=\".\"\n  local delimiter20=\"\
    ?\"\n  local delimiter21=\"!\"\n  local delimiter22=\".\"\n  local delimiter23=\"\
    ?\"\n  local delimiter24=\"!\"\n  local delimiter25=\".\"\n  local delimiter26=\"\
    ?\"\n  local delimiter27=\"!\"\n  local delimiter28=\".\"\n  local delimiter29=\"\
    ?\"\n  local delimiter30=\"!\"\n  local delimiter31=\".\"\n  local delimiter32=\"\
    ?\"\n  local delimiter33=\"!\"\n  local delimiter34=\".\"\n  local delimiter35=\"\
    ?\"\n  local delimiter36=\"!\"\n  local delimiter37=\".\"\n  local delimiter38=\"\
    ?\"\n  local delimiter39=\"!\"\n  local delimiter40=\".\"\n  local delimiter41=\"\
    ?\"\n  local delimiter42=\"!\"\n  local delimiter43=\".\"\n  local delimiter44=\"\
    ?\"\n  local delimiter45=\"!\"\n  local delimiter46=\".\"\n  local delimiter47=\"\
    ?\"\n  local delimiter48=\"!\"\n  local delimiter49=\".\"\n  local delimiter50=\"\
    ?\"\n  local delimiter51=\"!\"\n  local delimiter52=\".\"\n  local delimiter53=\"\
    ?\"\n  local delimiter54=\"!\"\n  local delimiter55=\".\"\n  local delimiter56=\"\
    ?\"\n  local delimiter57=\"!\"\n  local delimiter58=\".\"\n  local delimiter59=\"\
    ?\"\n  local delimiter60=\"!\"\n  local delimiter61=\".\"\n  local delimiter62=\"\
    ?\"\n  local delimiter63=\"!\"\n  local delimiter64=\".\"\n  local delimiter65=\"\
    ?\"\n  local delimiter66=\"!\"\n  local delimiter67=\".\"\n  local delimiter68=\"\
    ?\"\n  local delimiter69=\"!\"\n  local delimiter70=\".\"\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_word=\"I\"\n  local boredom_count=0\n  local\
    \ boredom_sentence=\"\"\n  local boredom_sentence_count=0\n  local boredom_sentence_word=\"\
    \"\n  local boredom_sentence_word_count=0\n  local boredom_sentence_word_count2=0\n\
    \  local boredom_sentence_word_count3=0\n  local boredom_sentence_word_count4=0\n\
    \  local boredom_sentence_word_count5=0\n  local boredom_sentence_word_count6=0\n\
    \  local boredom_sentence_word_count7=0\n  local boredom_sentence_word_count8=0\n\
    \  local boredom_sentence_word_count9=0\n  local boredom_sentence_word_count10=0\n\
    \  local boredom_sentence_word_count11=0\n  local boredom_sentence_word_count12=0\n\
    \  local boredom_sentence_word_count13=0\n  local boredom_sentence_word_count14=0\n\
    \  local boredom_sentence_word_count15=0\n  local boredom_sentence_word_count16=0\n\
    \  local boredom_sentence_word_count17=0\n  local boredom_sentence_word_count18=0\n\
    \  local boredom_sentence_word_count19=0\n  local boredom_sentence_word_count20=0\n\
    \  local boredom_sentence_word_count21=0\n  local boredom_sentence_word_count22=0\n\
    \  local boredom_sentence_word_count23=0\n  local boredom_sentence_word_count24=0\n\
    \  local boredom_sentence_word_count25=0\n  local boredom_sentence_word_count26=0\n\
    \  local boredom_sentence_word_count27=0\n  local boredom_sentence_word_count28=0\n\
    \  local boredom_sentence_word_count29=0\n  local boredom_sentence_word_count30=0\n\
    \  local boredom_sentence_word_count31=0\n  local boredom_sentence_word_count32=0\n\
    \  local boredom_sentence_word_count33=0\n  local boredom_sentence_word_count34=0\n\
    \  local boredom_sentence_word_count35=0\n  local boredom_sentence_word_count36=0\n\
    \  local boredom_sentence_word_count37=0\n  local boredom_sentence_word_count38=0\n\
    \  local boredom_sentence_word_count39=0\n  local boredom_sentence_word_count40=0\n\
    \  local boredom_sentence_word_count41=0\n  \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredom_words=$3\n\n  while read -r line; do\n    if [[\
    \ \"$line\" =~ $delimiter ]]; then\n      if [[ \"$line\" =~ $boredom_words ]];\
    \ then\n        output=$((output+1))\n      fi\n    fi\n  done < <(echo \"$input\"\
    )\n\n  echo \"$output\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiters=\" ?!\"\
    \n  local delimiter_count=0\n  local delimiter_index=0\n  local delimiter_indexes=()\n\
    \  local delimiter_indexes_count=()\n  local delimiter_indexes_words=()\n  local\
    \ delimiter_indexes_words_count=()\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=0\n\
    \  local delimiter_indexes_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredom_count=0\n\
    \    local boredom_string=\"I\"\n    local delimiter=\".\"\n    local delimiter2=\"\
    ?\"\n    local delimiter3=\"!\"\n    local delimiter4=\".\"\n    local delimiter5=\"\
    ?\"\n    local delimiter6=\"!\"\n    local delimiter7=\".\"\n    local delimiter8=\"\
    ?\"\n    local delimiter9=\"!\"\n    local delimiter10=\".\"\n    local delimiter11=\"\
    ?\"\n    local delimiter12=\"!\"\n    local delimiter13=\".\"\n    local delimiter14=\"\
    ?\"\n    local delimiter15=\"!\"\n    local delimiter16=\".\"\n    local delimiter17=\"\
    ?\"\n    local delimiter18=\"!\"\n    local delimiter19=\".\"\n    local delimiter20=\"\
    ?\"\n    local delimiter21=\"!\"\n    local delimiter22=\".\"\n    local delimiter23=\"\
    ?\"\n    local delimiter24=\"!\"\n    local delimiter25=\".\"\n    local delimiter26=\"\
    ?\"\n    local delimiter27=\"!\"\n    local delimiter28=\".\"\n    local delimiter29=\"\
    ?\"\n    local delimiter30=\"!\"\n    local delimiter31=\".\"\n    local delimiter32=\"\
    ?\"\n    local delimiter33=\"!\"\n    local delimiter34=\".\"\n    local delimiter35=\"\
    ?\"\n    local delimiter36=\"!\"\n    local delimiter37=\".\"\n    local delimiter38=\"\
    ?\"\n    local delimiter39=\"!\"\n    local delimiter40=\".\"\n    local delimiter41=\"\
    ?\"\n    local delimiter42=\"!\"\n    local delimiter43=\".\"\n    local delimiter44=\"\
    ?\"\n    local delimiter45=\"!\"\n    local delimiter46=\".\"\n    local delimiter47=\"\
    ?\"\n    local delimiter48=\"!\"\n    local delimiter49=\".\"\n    local delimiter50=\"\
    ?\"\n    local delimiter51=\"!\"\n    local delimiter52=\".\"\n    local delimiter53=\"\
    ?\"\n    local delimiter54=\"!\"\n    local delimiter55=\".\"\n    local delimiter56=\"\
    ?\"\n    local delimiter57=\"!\"\n    local delimiter58=\".\"\n    local delimiter59=\"\
    ?\"\n    local delimiter60=\"!\"\n    local delimiter61=\".\"\n    local delimiter62=\"\
    ?\"\n    local delimiter63=\"!\"\n    local delimiter64=\".\"\n    local delimiter65=\"\
    ?\"\n    local delimiter66=\"!\"\n    local delimiter67=\".\"\n    local delimiter68=\"\
    ?\"\n    local delimiter69=\"!\"\n    local delimiter70=\".\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local boredoms=0\n  local\
    \ delimiter=$2\n  local word\n  local i\n  local j\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  local delimiters\n  local\
    \ delimiters\n  local delimiters\n  local delimiters\n  \n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=()\n  local boredom_sentences=()\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_word_count\n  local boredom_sentence_count\n\
    \  local boredom_sentence_word\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  \n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=()\n  local boredom_sentences=()\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_char\n  local boredom_chars\n  local\
    \ boredom_char_count\n  local boredom_char\n  local boredom_chars\n  local boredom_char_count\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char_count\n  local\
    \ boredom_char\n  local boredom_chars\n  local boredom_char_count\n  local boredom_char\n\
    \  local boredom_chars\n  local boredom_char_count\n  local boredom_char\n  local\
    \ boredom_chars\n  local boredom_char_count\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char_count\n  local boredom_char\n  local boredom_chars\n  local\
    \ boredom_char_count\n  local boredom_char\n  local boredom_chars\n  local boredom_char_count\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char_count\n  local\
    \ boredom_char\n  local boredom_chars\n  local boredom_char_count\n  local boredom_char\n\
    \  local boredom_chars\n  local boredom_char_count\n  local boredom_char\n  local\
    \ boredom_chars\n  local boredom_char_count\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char_count\n  local boredom_char\n  local boredom_chars\n  local\
    \ boredom_char_count\n  local boredom_char\n  local boredom_chars\n  local boredom_char_count\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char_count\n  local\
    \ boredom_char\n  local boredom_chars\n  local boredom_char_count\n  local boredom_char\n\
    \  local boredom_chars\n  local boredom_char_count\n  local boredom_char\n  local\
    \ boredom_chars\n  local boredom_char_count\n  local boredom_char\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=()\n  local boredom_sentences=()\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_char\n  local boredom_chars\n  local\
    \ boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\"\
    ) = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate\
    \ \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=\"\"\n  local delimiter=\".\"\n  local delimiter2=\"?\"\
    \n  local delimiter3=\"!\"\n  local delimiter4=\",\"\n  local delimiter5=\";\"\
    \n  local delimiter6=\":\"\n  local delimiter7=\";\"\n  local delimiter8=\":\"\
    \n  local delimiter9=\";\"\n  local delimiter10=\";\"\n  local delimiter11=\"\
    ;\"\n  local delimiter12=\";\"\n  local delimiter13=\";\"\n  local delimiter14=\"\
    ;\"\n  local delimiter15=\";\"\n  local delimiter16=\";\"\n  local delimiter17=\"\
    ;\"\n  local delimiter18=\";\"\n  local delimiter19=\";\"\n  local delimiter20=\"\
    ;\"\n  local delimiter21=\";\"\n  local delimiter22=\";\"\n  local delimiter23=\"\
    ;\"\n  local delimiter24=\";\"\n  local delimiter25=\";\"\n  local delimiter26=\"\
    ;\"\n  local delimiter27=\";\"\n  local delimiter28=\";\"\n  local delimiter29=\"\
    ;\"\n  local delimiter30=\";\"\n  local delimiter31=\";\"\n  local delimiter32=\"\
    ;\"\n  local delimiter33=\";\"\n  local delimiter34=\";\"\n  local delimiter35=\"\
    ;\"\n  local delimiter36=\";\"\n  local delimiter37=\";\"\n  local delimiter38=\"\
    ;\"\n  local delimiter39=\";\"\n  local delimiter40=\";\"\n  local delimiter41=\"\
    ;\"\n  local delimiter42=\";\"\n  local delimiter43=\";\"\n  local delimiter44=\"\
    ;\"\n  local delimiter45=\";\"\n  local delimiter46=\";\"\n  local delimiter47=\"\
    ;\"\n  local delimiter48=\";\"\n  local delimiter49=\";\"\n  local delimiter50=\"\
    ;\"\n  local delimiter51=\";\"\n  local delimiter52=\";\"\n  local delimiter53=\"\
    ;\"\n  local delimiter54=\";\"\n  local delimiter55=\";\"\n  local delimiter56=\"\
    ;\"\n  local delimiter57=\";\"\n  local delimiter58=\";\"\n  local delimiter59=\"\
    ;\"\n  local delimiter60=\";\"\n  local delimiter61=\";\"\n  local delimiter62=\"\
    ;\"\n\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local delimiter=\".\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_index=0\n  local delimiter_string_index=0\n\
    \  local delimiter_index2=0\n  local delimiter_string_index2=0\n  local delimiter_index3=0\n\
    \  local delimiter_string_index3=0\n  local delimiter_index4=0\n  local delimiter_string_index4=0\n\
    \  local delimiter_index5=0\n  local delimiter_string_index5=0\n  local delimiter_index6=0\n\
    \  local delimiter_string_index6=0\n  local delimiter_index7=0\n  local delimiter_string_index7=0\n\
    \  local delimiter_index8=0\n  local delimiter_string_index8=0\n  local delimiter_index9=0\n\
    \  local delimiter_string_index9=0\n  local delimiter_index10=0\n  local delimiter_string_index10=0\n\
    \  local delimiter_index11=0\n  local delimiter_string_index11=0\n  local delimiter_index12=0\n\
    \  local delimiter_string_index12=0\n  local delimiter_index13=0\n  local delimiter_string_index13=0\n\
    \  local delimiter_index14=0\n  local delimiter_string_index14=0\n  local delimiter_index15=0\n\
    \  local delimiter_string_index15=0\n  local delimiter_index16=0\n  local delimiter_string_index16=0\n\
    \  local delimiter_index17=0\n  local delimiter_string_index17=0\n  local delimiter_index18=0\n\
    \  local delimiter_string_index18=0\n  local delimiter_index19=0\n  local delimiter_string_index19=0\n\
    \  local delimiter_index20=0\n  local delimiter_string_index20=0\n  local delimiter_index21=0\n\
    \  local delimiter_string_index21=0\n  local delimiter_index22=0\n  local delimiter_string_index22=0\n\
    \  local delimiter_index23=0\n  local delimiter_string_index23=0\n  local delimiter_index24=0\n\
    \  local delimiter_string_index24=0\n  local delimiter_index25=0\n  local delimiter_string_index25=0\n\
    \  local delimiter_index26=0\n  local delimiter_string_index26=0\n  local delimiter_index27=0\n\
    \  local delimiter_string_index27=0\n  local delimiter_index28=0\n  local delimiter_string_index28=0\n\
    \  local delimiter_index29=0\n  local delimiter_string_index29=0\n  local delimiter_index30=0\n\
    \  local delimiter_string_index30=0\n  local delimiter_index31=0\n  local delimiter_string_index31=0\n\
    \  local delimiter_index32=0\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_prefix=\"I\"\n  local boredom_suffix=\"!\"\n\
    \  local boredom_delimiter=\"?\"\n  local boredom_count=0\n  local boredom_words=\"\
    \"\n  local boredom_word=\"\"\n  local boredom_word_count=0\n  local boredom_word_count2=0\n\
    \  local boredom_word_count3=0\n  local boredom_word_count4=0\n  local boredom_word_count5=0\n\
    \  local boredom_word_count6=0\n  local boredom_word_count7=0\n  local boredom_word_count8=0\n\
    \  local boredom_word_count9=0\n  local boredom_word_count10=0\n  local boredom_word_count11=0\n\
    \  local boredom_word_count12=0\n  local boredom_word_count13=0\n  local boredom_word_count14=0\n\
    \  local boredom_word_count15=0\n  local boredom_word_count16=0\n  local boredom_word_count17=0\n\
    \  local boredom_word_count18=0\n  local boredom_word_count19=0\n  local boredom_word_count20=0\n\
    \  local boredom_word_count21=0\n  local boredom_word_count22=0\n  local boredom_word_count23=0\n\
    \  local boredom_word_count24=0\n  local boredom_word_count25=0\n  local boredom_word_count26=0\n\
    \  local boredom_word_count27=0\n  local boredom_word_count28=0\n  local boredom_word_count29=0\n\
    \  local boredom_word_count30=0\n  local boredom_word_count31=0\n  local boredom_word_count32=0\n\
    \  local boredom_word_count33=0\n  local boredom_word_count34=0\n  local boredom_word_count35=0\n\
    \  local boredom_word_count36=0\n  local boredom_word_count37=0\n  local boredom_word_count38=0\n\
    \  local boredom_word_count39=0\n  local boredom_word_count40=0\n  local boredom_word_count41=0\n\
    \  local boredom_word_count42=0\n  local boredom_word_count43=0\n  local boredom_word_count44=0\n\
    \  local bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter='.'\n  local boredom='I$'\n  local boredom_count=0\n  local boredom_word=''\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local boredom_word_count=0\n  local boredom_word_count=0\n\
    \  local boredom_word_count=0\n  local \n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredoms=0\n\
    \  local delimiter=$2\n  local delimiters=(\"$delimiter\")\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiters_length=${#delimiters[@]}\n\
    \  local delimiters_length=${#delimiters[@]}\n  local delimiter\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiters=\" ?!\"\
    \n  local delimiter_count=0\n  local delimiter_index=0\n  local delimiter_indexes=()\n\
    \  local delimiter_indexes_count=0\n  local delimiter_indexes_words=()\n  local\
    \ delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=${#delimiter_indexes_words[@]}\n\
    \  local delimiter_indexes_words=${delimiter_indexes_words[@]}\n  local delimiter_indexes_words_count=${#delimiter_indexes_words[@]}\n\
    \  local delimiter_indexes_words=${delimiter_indexes_words[@]}\n  local delimiter_indexes_words_count=${#delimiter_indexes_words[@]}\n\
    \  local delimiter_indexes_words=${delimiter_indexes_words[@]}\n  local delimiter_indexes_words_count=${#delimiter_indexes_words[@]}\n\
    \  local delimiter_indexes_words=${delimiter_indexes_words[@]}\n  local delimiter_indexes_words_count=${#delimiter_indexes_words[@]}\n\
    \  local delimiter_indexes_words=${delimiter_indexes_words[@]}\n  local delimiter_indexes_words_count=${#delimiter_indexes_words[@]}\n\
    \  local delimiter_indexes_words=${delimiter_indexes_words[@]}\n  local delimiter_indexes_words_count=${#delimiter_indexes_words[@]}\n\
    \  local delimiter_indexes_words=${delimiter_indexes_words[@]}\n  local delimiter_indexes_words_count=${#delimiter_indexes_words[@]}\n\
    \  local delimiter_indexes_words=${delimiter_indexes_words[@]}\n  local delimiter_indexes_words_count=${#delimiter_indexes_words[@]}\n\
    \  local delimiter_indexes_words=${delimiter_indexes_words[@]}\n  local delimiter_indexes_words_count=${#delimiter_indexes_words[@]}\n\
    \  local delimiter_indexes_words=${delimiter_indexes_words[@]}\n  local delimiter_indexes_words_count=${#delimiter_indexes_words[@]}\n\
    \  local delimiter_indexes_words=${delimiter_indexes_words[@]}\n  local delimiter_indexes_words_count=${#delimiter_indexes_words[@]}\n\
    \  local delimiter_indexes_words=${delimiter_indexes_words[@]}\n  local delimiter_indexes_words_count=${#delimiter_indexes_words[@]}\n\
    \  local delimiter_indexes_words=${delimiter_indexes_words[@\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi2rd8mxd.sh: line 63: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredoms=0\n\
    \  local delimiter=$2\n  local delimiter_count=0\n  local delimiter_index=0\n\
    \  local delimiter_index2=0\n  local delimiter_index3=0\n  local delimiter_index4=0\n\
    \  local delimiter_index5=0\n  local delimiter_index6=0\n  local delimiter_index7=0\n\
    \  local delimiter_index8=0\n  local delimiter_index9=0\n  local delimiter_index10=0\n\
    \  local delimiter_index11=0\n  local delimiter_index12=0\n  local delimiter_index13=0\n\
    \  local delimiter_index14=0\n  local delimiter_index15=0\n  local delimiter_index16=0\n\
    \  local delimiter_index17=0\n  local delimiter_index18=0\n  local delimiter_index19=0\n\
    \  local delimiter_index20=0\n  local delimiter_index21=0\n  local delimiter_index22=0\n\
    \  local delimiter_index23=0\n  local delimiter_index24=0\n  local delimiter_index25=0\n\
    \  local delimiter_index26=0\n  local delimiter_index27=0\n  local delimiter_index28=0\n\
    \  local delimiter_index29=0\n  local delimiter_index30=0\n  local delimiter_index31=0\n\
    \  local delimiter_index32=0\n  local delimiter_index33=0\n  local delimiter_index34=0\n\
    \  local delimiter_index35=0\n  local delimiter_index36=0\n  local delimiter_index37=0\n\
    \  local delimiter_index38=0\n  local delimiter_index39=0\n  local delimiter_index40=0\n\
    \  local delimiter_index41=0\n  local delimiter_index42=0\n  local delimiter_index43=0\n\
    \  local delimiter_index44=0\n  local delimiter_index45=0\n  local delimiter_index46=0\n\
    \  local delimiter_index47=0\n  local delimiter_index48=0\n  local delimiter_index49=0\n\
    \  local delimiter_index50=0\n  local delimiter_index51=0\n  local delimiter_index52=0\n\
    \  local delimiter_index53=0\n  local delimiter_index54=0\n  local delimiter_index55=0\n\
    \  local delimiter_index56=0\n  local delimiter_index57=0\n  local delimiter_index58=0\n\
    \  local delimiter_index59=0\n  local delimiter_index60=0\n  local delimiter_index61=0\n\
    \  local delimiter_index62=0\n  local delimiter_index63=0\n  local delimiter_index64=0\n\
    \  local delimiter_index65=0\n  local delimiter_index66=0\n  local delimiter_index67=0\n\
    \  local delimiter_index68=0\n  local delimiter_index69=0\n  local delimiter_index\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredoms=0\n\
    \  local word\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiters\n  local delimiter\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local delimiter=\".\"\n  local delimiters=\" ?!.\"\n  local delimiters_array=(${delimiters//,/\
    \ })\n  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpamqkyvyh.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredoms=0\n\
    \  local delimiter=\".\"\n  local delimiters=\" ?!.\"\n  local delimiters_array=($delimiters)\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_index=0\n\
    \  local delimiters_array_element\n  while [[ $string ]]; do\n    delimiters_array_element=${string:$((delimiters_array_index++))}\n\
    \    if [[ $delimiters_array_element == \"$delimiter\" ]]; then\n      boredoms=\"\
    $((boredoms+1))\"\n    fi\n    string=${string:$((delimiters_array_index-1))}\n\
    \  done\n  echo \"$boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local delimiter=\".\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_count2=0\n  local delimiter_string2=\"\
    ?\"\n  local delimiter_count3=0\n  local delimiter_string3=\"!\"\n  local delimiter_count4=0\n\
    \  local delimiter_string4=\"!\"\n  local delimiter_count5=0\n  local delimiter_string5=\"\
    ?\"\n  local delimiter_count6=0\n  local delimiter_string6=\".\"\n  local delimiter_count7=0\n\
    \  local delimiter_string7=\".\"\n  local delimiter_count8=0\n  local delimiter_string8=\"\
    ?\"\n  local delimiter_count9=0\n  local delimiter_string9=\"!\"\n  local delimiter_count10=0\n\
    \  local delimiter_string10=\"!\"\n  local delimiter_count11=0\n  local delimiter_string11=\"\
    ?\"\n  local delimiter_count12=0\n  local delimiter_string12=\".\"\n  local delimiter_count13=0\n\
    \  local delimiter_string13=\".\"\n  local delimiter_count14=0\n  local delimiter_string14=\"\
    ?\"\n  local delimiter_count15=0\n  local delimiter_string15=\"!\"\n  local delimiter_count16=0\n\
    \  local delimiter_string16=\"!\"\n  local delimiter_count17=0\n  local delimiter_string17=\"\
    ?\"\n  local delimiter_count18=0\n  local delimiter_string18=\".\"\n  local delimiter_count19=0\n\
    \  local delimiter_string19=\".\"\n  local delimiter_count20=0\n  local delimiter_string20=\"\
    ?\"\n  local delimiter_count21=0\n  local delimiter_string21=\"!\"\n  local delimiter_count22=0\n\
    \  local delimiter_string22=\"!\"\n  local delimiter_count23=0\n  local delimiter_string23=\"\
    ?\"\n  local delimiter_count24=0\n  local delimiter_string24=\".\"\n  local delimiter_count25=0\n\
    \  local delimiter_string25=\".\"\n  local delimiter_count26=0\n  local delimiter_string26=\"\
    ?\"\n  local delimiter_count27=0\n  local delimiter_string27=\"!\"\n  local delimiter_count28=0\n\
    \  local delimiter_string28=\"!\"\n  local delimiter_count29=0\n  local delimiter_string29=\"\
    ?\"\n  local delimiter_count30=0\n  local delimiter_string30=\"!\"\n  local delimiter_count31=0\n\
    \  local delimiter_string31=\"?\"\n  local delimiter_count32=0\n  local delimiter_string32=\"\
    !\"\n  local delimiter_count\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredoms=0\n\
    \    local delimiters=(\".\")\n    local delimiter=(\"?\")\n    local delimiter=(\"\
    !\")\n    for word in $string; do\n        if [[ \"$word\" == \"I\" ]]; then\n\
    \            boredoms=\"$((boredoms+1))\"\n        fi\n    done\n    echo \"$boredoms\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredom_words=$3\n\n  local boredom_count=0\n  local delimiter_count=0\n\
    \  local boredom_words_count=0\n\n  while read -r line; do\n    boredom_words_count=$((boredom_words_count\
    \ + 1))\n    delimiter_count=$((delimiter_count + 1))\n    if [[ \"$line\" =~\
    \ $delimiter ]]; then\n      delimiter_count=$((delimiter_count + 1))\n    fi\n\
    \    if [[ \"$line\" =~ $boredom_words ]]; then\n      boredom_count=$((boredom_count\
    \ + 1))\n    fi\n  done < <(echo \"$input\")\n\n  output=$((boredom_count + delimiter_count))\n\
    \  output=$((output + boredom_words_count))\n  output=$((output + 1))\n\n  echo\
    \ \"$output\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredom_count=0\n\
    \    local boredom_string=\"I\"\n    local boredom_chars=${#boredom_string}\n\
    \    local boredom_char_count=0\n    local boredom_char_index=0\n    local boredom_char_indexes=()\n\
    \    local boredom_char_indexes_count=0\n    local boredom_char_indexes_string=\"\
    \"\n    local boredom_char_indexes_chars=0\n    local boredom_char_indexes_char_count=0\n\
    \    local boredom_char_indexes_char_index=0\n    local boredom_char_indexes_char_indexes=()\n\
    \    local boredom_char_indexes_char_indexes_count=0\n    local boredom_char_indexes_char_indexes_string=\"\
    \"\n    local boredom_char_indexes_char_indexes_chars=0\n    local boredom_char_indexes_char_indexes_char_count=0\n\
    \    local boredom_char_indexes_char_indexes_char_index=0\n    local boredom_char_indexes_char_indexes_char_indexes=()\n\
    \    local boredom_char_indexes_char_indexes_char_indexes_count=0\n    local boredom_char_indexes_char_indexes_char_indexes_string=\"\
    \"\n    local boredom_char_indexes_char_indexes_char_indexes_chars=0\n    local\
    \ boredom_char_indexes_char_indexes_char_indexes_char_count=0\n    local boredom_char_indexes_char_indexes_char_indexes_char_index=0\n\
    \    local boredom_char_indexes_char_indexes_char_indexes_char_indexes=()\n  \
    \  local boredom_char_indexes_char_indexes_char_indexes_char_indexes_count=0\n\
    \    local boredom_char_indexes_char_indexes_char_indexes_char_indexes_string=\"\
    \"\n    local boredom_char_indexes_char_indexes_char_indexes_char_indexes_chars=0\n\
    \    local boredom_char_indexes_char_indexes_char_indexes_char_indexes_char_count=0\n\
    \    local boredom_char_indexes_char_indexes_char_indexes_char_indexes_char_index=0\n\
    \    local boredom_char_indexes_char_indexes_char_indexes_char_indexes_char_indexes=()\n\
    \    local boredom_char_indexes_char_indexes_char_indexes_char_indexes_char_indexes_count=0\n\
    \    local boredom_char_indexes_char_indexes_char_indexes_char_indexes_char_indexes_string=\"\
    \"\n    local bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredom_words=$3\n  local delimiter_count=0\n  local boredom_count=0\n\
    \  local boredom_word=''\n  local boredom_word_count=0\n  local boredom_word_count2=0\n\
    \  local boredom_word_count3=0\n  local boredom_word_count4=0\n  local boredom_word_count5=0\n\
    \  local boredom_word_count6=0\n  local boredom_word_count7=0\n  local boredom_word_count8=0\n\
    \  local boredom_word_count9=0\n  local boredom_word_count10=0\n  local boredom_word_count11=0\n\
    \  local boredom_word_count12=0\n  local boredom_word_count13=0\n  local boredom_word_count14=0\n\
    \  local boredom_word_count15=0\n  local boredom_word_count16=0\n  local boredom_word_count17=0\n\
    \  local boredom_word_count18=0\n  local boredom_word_count19=0\n  local boredom_word_count20=0\n\
    \  local boredom_word_count21=0\n  local boredom_word_count22=0\n  local boredom_word_count23=0\n\
    \  local boredom_word_count24=0\n  local boredom_word_count25=0\n  local boredom_word_count26=0\n\
    \  local boredom_word_count27=0\n  local boredom_word_count28=0\n  local boredom_word_count29=0\n\
    \  local boredom_word_count30=0\n  local boredom_word_count31=0\n  local boredom_word_count32=0\n\
    \  local boredom_word_count33=0\n  local boredom_word_count34=0\n  local boredom_word_count35=0\n\
    \  local boredom_word_count36=0\n  local boredom_word_count37=0\n  local boredom_word_count38=0\n\
    \  local boredom_word_count39=0\n  local boredom_word_count40=0\n  local boredom_word_count41=0\n\
    \  local boredom_word_count42=0\n  local boredom_word_count43=0\n  local boredom_word_count44=0\n\
    \  local boredom_word_count45=0\n  local boredom_word_count46=0\n  local bore\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local word\n  local count\n  local i\n  local j\n  local delimiter_count\n\
    \  local delimiter_index\n  local delimiter_index2\n  local delimiter_index3\n\
    \  local delimiter_index4\n  local delimiter_index5\n  local delimiter_index6\n\
    \  local delimiter_index7\n  local delimiter_index8\n  local delimiter_index9\n\
    \  local delimiter_index10\n  local delimiter_index11\n  local delimiter_index12\n\
    \  local delimiter_index13\n  local delimiter_index14\n  local delimiter_index15\n\
    \  local delimiter_index16\n  local delimiter_index17\n  local delimiter_index18\n\
    \  local delimiter_index19\n  local delimiter_index20\n  local delimiter_index21\n\
    \  local delimiter_index22\n  local delimiter_index23\n  local delimiter_index24\n\
    \  local delimiter_index25\n  local delimiter_index26\n  local delimiter_index27\n\
    \  local delimiter_index28\n  local delimiter_index29\n  local delimiter_index30\n\
    \  local delimiter_index31\n  local delimiter_index32\n  local delimiter_index33\n\
    \  local delimiter_index34\n  local delimiter_index35\n  local delimiter_index36\n\
    \  local delimiter_index37\n  local delimiter_index38\n  local delimiter_index39\n\
    \  local delimiter_index40\n  local delimiter_index41\n  local delimiter_index42\n\
    \  local delimiter_index43\n  local delimiter_index44\n  local delimiter_index45\n\
    \  local delimiter_index46\n  local delimiter_index47\n  local delimiter_index48\n\
    \  local delimiter_index49\n  local delimiter_index50\n  local delimiter_index51\n\
    \  local delimiter_index52\n  local delimiter_index53\n  local delimiter_index54\n\
    \  local delimiter_index55\n  local delimiter_index56\n  local delimiter_index57\n\
    \  local delimiter_index58\n  local delimiter_index59\n  local delimiter_index60\n\
    \  local delimiter_index61\n  local delimiter_index62\n  local delimiter_index63\n\
    \  local delimiter_index64\n  local delimiter_index65\n  local delimiter_index66\n\
    \  local delimiter_index67\n  local delimiter_index68\n  local delimiter_index69\n\
    \  local delimiter_index70\n  local delimiter_index71\n  local delimiter_index72\n\
    \  local delimiter_index73\n  local delimiter_index74\n  local delimiter_index75\n\
    \  local delimiter_index76\n  local delimiter_index77\n  local delimiter_index78\n\
    \  local delimiter_index79\n  \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=\"$1\"\n    local output=0\n\
    \    local delimiters=\".?!\"\n    local word\n    for word in $input; do\n  \
    \      case \"$word\" in\n            I*) output=$((output+1)) ;;\n          \
    \  *) output=$((output+0)) ;;\n        esac\n    done\n    echo \"$output\"\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter='.'\n  local boredom_prefix=\"I\"\n  local boredom_suffix=\"!\"\n\
    \  local boredom_delimiter=\"?\"\n  local boredom_words=$(echo \"$input\" | sed\
    \ 's/'\"$delimiter\"'/'\"$boredom_prefix\"'/g' | sed 's/'\"$delimiter\"'/'\"$boredom_suffix\"\
    '/g' | sed 's/'\"$delimiter\"'/'\"$boredom_delimiter\"'/g')\n  local boredom_count=0\n\
    \  for word in $boredom_words; do\n    boredom_count=$((boredom_count+1))\n  done\n\
    \  echo \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter='.'\n  local boredom_word='I'\n  local boredom_count=0\n  local boredom_sentence=''\n\
    \  local boredom_sentence_count=0\n  local boredom_sentence_word=''\n  local boredom_sentence_word_count=0\n\
    \  local boredom_sentence_word_count2=0\n  local boredom_sentence_word_count3=0\n\
    \  local boredom_sentence_word_count4=0\n  local boredom_sentence_word_count5=0\n\
    \  local boredom_sentence_word_count6=0\n  local boredom_sentence_word_count7=0\n\
    \  local boredom_sentence_word_count8=0\n  local boredom_sentence_word_count9=0\n\
    \  local boredom_sentence_word_count10=0\n  local boredom_sentence_word_count11=0\n\
    \  local boredom_sentence_word_count12=0\n  local boredom_sentence_word_count13=0\n\
    \  local boredom_sentence_word_count14=0\n  local boredom_sentence_word_count15=0\n\
    \  local boredom_sentence_word_count16=0\n  local boredom_sentence_word_count17=0\n\
    \  local boredom_sentence_word_count18=0\n  local boredom_sentence_word_count19=0\n\
    \  local boredom_sentence_word_count20=0\n  local boredom_sentence_word_count21=0\n\
    \  local boredom_sentence_word_count22=0\n  local boredom_sentence_word_count23=0\n\
    \  local boredom_sentence_word_count24=0\n  local boredom_sentence_word_count25=0\n\
    \  local boredom_sentence_word_count26=0\n  local boredom_sentence_word_count27=0\n\
    \  local boredom_sentence_word_count28=0\n  local boredom_sentence_word_count29=0\n\
    \  local boredom_sentence_word_count30=0\n  local boredom_sentence_word_count31=0\n\
    \  local boredom_sentence_word_count32=0\n  local boredom_sentence_word_count33=0\n\
    \  local boredom_sentence_word_count34=0\n  local boredom_sentence_word_count35=0\n\
    \  local boredom_sentence_word_count36=0\n  local boredom_sentence_word_count37=0\n\
    \  local boredom_sentence_word_count38=0\n  local boredom_sentence_word_count39=0\n\
    \  local boredom_sentence_word_count40=0\n  local boredom_sentence_word_count41=0\n\
    \  local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local boredoms=0\n  local\
    \ delimiter=$2\n  local word\n  local i\n  local j\n  local delimiter_count\n\
    \  local word_count\n  local delimiter_index\n  local word_index\n  local delimiter_indexes\n\
    \  local word_indexes\n  local delimiter_indexes_count\n  local word_indexes_count\n\
    \  local delimiter_indexes_counts\n  local word_indexes_counts\n  local delimiter_indexes_counts_sum\n\
    \  local word_indexes_counts_sum\n  local delimiter_indexes_counts_sums\n  local\
    \ word_indexes_counts_sums\n  local delimiter_indexes_counts_sums_sum\n  local\
    \ word_indexes_counts_sums_sum\n  local delimiter_indexes_counts_sums_sums\n \
    \ local word_indexes_counts_sums_sums\n  local delimiter_indexes_counts_sums_sums_sum\n\
    \  local word_indexes_counts_sums_sums_sum\n  local delimiter_indexes_counts_sums_sums_sums\n\
    \  local word_indexes_counts_sums_sums_sums\n  local delimiter_indexes_counts_sums_sums_sums_sum\n\
    \  local word_indexes_counts_sums_sums_sums_sum\n  local delimiter_indexes_counts_sums_sums_sums_sums\n\
    \  local word_indexes_counts_sums_sums_sums_sums\n  local delimiter_indexes_counts_sums_sums_sums_sums_sum\n\
    \  local word_indexes_counts_sums_sums_sums_sums_sum\n  local delimiter_indexes_counts_sums_sums_sums_sums_sums\n\
    \  local word_indexes_counts_sums_sums_sums_sums_sums\n  local delimiter_indexes_counts_sums_sums_sums_sums_sums_sum\n\
    \  local word_indexes_counts_sums_sums_sums_sums_sums_sums\n  local delimiter_indexes_counts_sums_sums_sums_sums_sums_sums_sum\n\
    \  local word_indexes_counts_sums_sums_sums_sums_sums_sums_sums\n  local delimiter_indexes_counts_sums_sums_sums_sums_sums_sums_sums_sum\n\
    \  local word_indexes_counts_sums_sums_sums_sums_sums_sums_sums_sums_sums\n  local\
    \ delimiter_indexes_counts_sums_sums_sums_sums_sums_sum\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_word=\"I\"\n  local boredom_count=0\n  local\
    \ boredom_sentence=\"\"\n  local boredom_sentence_count=0\n  local boredom_sentence_word=\"\
    \"\n  local boredom_sentence_word_count=0\n  local boredom_sentence_word_count2=0\n\
    \  local boredom_sentence_word_count3=0\n  local boredom_sentence_word_count4=0\n\
    \  local boredom_sentence_word_count5=0\n  local boredom_sentence_word_count6=0\n\
    \  local boredom_sentence_word_count7=0\n  local boredom_sentence_word_count8=0\n\
    \  local boredom_sentence_word_count9=0\n  local boredom_sentence_word_count10=0\n\
    \  local boredom_sentence_word_count11=0\n  local boredom_sentence_word_count12=0\n\
    \  local boredom_sentence_word_count13=0\n  local boredom_sentence_word_count14=0\n\
    \  local boredom_sentence_word_count15=0\n  local boredom_sentence_word_count16=0\n\
    \  local boredom_sentence_word_count17=0\n  local boredom_sentence_word_count18=0\n\
    \  local boredom_sentence_word_count19=0\n  local boredom_sentence_word_count20=0\n\
    \  local boredom_sentence_word_count21=0\n  local boredom_sentence_word_count22=0\n\
    \  local boredom_sentence_word_count23=0\n  local boredom_sentence_word_count24=0\n\
    \  local boredom_sentence_word_count25=0\n  local boredom_sentence_word_count26=0\n\
    \  local boredom_sentence_word_count27=0\n  local boredom_sentence_word_count28=0\n\
    \  local boredom_sentence_word_count29=0\n  local boredom_sentence_word_count30=0\n\
    \  local boredom_sentence_word_count31=0\n  local boredom_sentence_word_count32=0\n\
    \  local boredom_sentence_word_count33=0\n  local boredom_sentence_word_count34=0\n\
    \  local boredom_sentence_word_count35=0\n  local boredom_sentence_word_count36=0\n\
    \  local boredom_sentence_word_count37=0\n  local boredom_sentence_word_count38=0\n\
    \  local boredom_sentence_word_count39=0\n  local boredom_sentence_word_count40=0\n\
    \  local boredom_sentence_word_count41=0\n  \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_word=\"I\"\n  local boredom_count=0\n  local\
    \ boredom_sentence=\"\"\n  local boredom_sentence_index=0\n  local boredom_sentence_length=0\n\
    \  local boredom_sentence_words=\"\"\n  local boredom_sentence_word_index=0\n\
    \  local boredom_sentence_word_length=0\n  local boredom_sentence_word_count=0\n\
    \  local boredom_sentence_word_boredom_count=0\n  local boredom_sentence_word_boredom_word=\"\
    \"\n  local boredom_sentence_word_boredom_word_index=0\n  local boredom_sentence_word_boredom_word_length=0\n\
    \  local boredom_sentence_word_boredom_word_count=0\n  local boredom_sentence_word_boredom_word_boredom_count=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word=\"\"\n  local boredom_sentence_word_boredom_word_boredom_word_index=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_length=0\n  local boredom_sentence_word_boredom_word_boredom_word_count=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_count=0\n  local\
    \ boredom_sentence_word_boredom_word_boredom_word_boredom_word=\"\"\n  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_index=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_length=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_count=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_count=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word=\"\
    \"\n  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_index=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_length=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_count=0\n\
    \  local boredom_sentence_word_boredom_word_boredom_word_boredom_word_\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiter_count=0\n\
    \  local delimiter_index=0\n  local delimiter_index2=0\n  local delimiter_index3=0\n\
    \  local delimiter_index4=0\n  local delimiter_index5=0\n  local delimiter_index6=0\n\
    \  local delimiter_index7=0\n  local delimiter_index8=0\n  local delimiter_index9=0\n\
    \  local delimiter_index10=0\n  local delimiter_index11=0\n  local delimiter_index12=0\n\
    \  local delimiter_index13=0\n  local delimiter_index14=0\n  local delimiter_index15=0\n\
    \  local delimiter_index16=0\n  local delimiter_index17=0\n  local delimiter_index18=0\n\
    \  local delimiter_index19=0\n  local delimiter_index20=0\n  local delimiter_index21=0\n\
    \  local delimiter_index22=0\n  local delimiter_index23=0\n  local delimiter_index24=0\n\
    \  local delimiter_index25=0\n  local delimiter_index26=0\n  local delimiter_index27=0\n\
    \  local delimiter_index28=0\n  local delimiter_index29=0\n  local delimiter_index30=0\n\
    \  local delimiter_index31=0\n  local delimiter_index32=0\n  local delimiter_index33=0\n\
    \  local delimiter_index34=0\n  local delimiter_index35=0\n  local delimiter_index36=0\n\
    \  local delimiter_index37=0\n  local delimiter_index38=0\n  local delimiter_index39=0\n\
    \  local delimiter_index40=0\n  local delimiter_index41=0\n  local delimiter_index42=0\n\
    \  local delimiter_index43=0\n  local delimiter_index44=0\n  local delimiter_index45=0\n\
    \  local delimiter_index46=0\n  local delimiter_index47=0\n  local delimiter_index48=0\n\
    \  local delimiter_index49=0\n  local delimiter_index50=0\n  local delimiter_index51=0\n\
    \  local delimiter_index52=0\n  local delimiter_index53=0\n  local delimiter_index54=0\n\
    \  local delimiter_index55=0\n  local delimiter_index56=0\n  local delimiter_index57=0\n\
    \  local delimiter_index58=0\n  local delimiter_index59=0\n  local delimiter_index60=0\n\
    \  local delimiter_index61=0\n  local delimiter_index62=0\n  local delimiter_index63=0\n\
    \  local delimiter_index64=0\n  local delimiter_index65=0\n  local delimiter_index66=0\n\
    \  local delimiter_index67=0\n  local delimiter_index68=0\n  \n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=\"\"\n  local boredom_sentences=\"\"\n  local boredom_word=\"\
    \"\n  local boredom_sentence=\"\"\n  local boredom_chars=\"\"\n  local boredom_char=\"\
    \"\n  local boredom_char_count=0\n  local boredom_char_counts=\"\"\n  local boredom_char_counts_word=\"\
    \"\n  local boredom_char_counts_sentence=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_chars=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n  local boredom_char_counts_char=\"\"\n  local boredom_char_counts_char=\"\
    \"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\"\
    ) = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate\
    \ \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=$1\n    local output=0\n  \
    \  local delimiter=.\n    local boredom_word=\"I\"\n    local boredom_count=0\n\
    \    local boredom_sentence=\"\"\n    local boredom_sentence_count=0\n    local\
    \ boredom_sentence_word=\"\"\n    local boredom_sentence_word_count=0\n    local\
    \ boredom_sentence_word_count2=0\n    local boredom_sentence_word_count3=0\n \
    \   local boredom_sentence_word_count4=0\n    local boredom_sentence_word_count5=0\n\
    \    local boredom_sentence_word_count6=0\n    local boredom_sentence_word_count7=0\n\
    \    local boredom_sentence_word_count8=0\n    local boredom_sentence_word_count9=0\n\
    \    local boredom_sentence_word_count10=0\n    local boredom_sentence_word_count11=0\n\
    \    local boredom_sentence_word_count12=0\n    local boredom_sentence_word_count13=0\n\
    \    local boredom_sentence_word_count14=0\n    local boredom_sentence_word_count15=0\n\
    \    local boredom_sentence_word_count16=0\n    local boredom_sentence_word_count17=0\n\
    \    local boredom_sentence_word_count18=0\n    local boredom_sentence_word_count19=0\n\
    \    local boredom_sentence_word_count20=0\n    local boredom_sentence_word_count21=0\n\
    \    local boredom_sentence_word_count22=0\n    local boredom_sentence_word_count23=0\n\
    \    local boredom_sentence_word_count24=0\n    local boredom_sentence_word_count25=0\n\
    \    local boredom_sentence_word_count26=0\n    local boredom_sentence_word_count27=0\n\
    \    local boredom_sentence_word_count28=0\n    local boredom_sentence_word_count29=0\n\
    \    local boredom_sentence_word_count30=0\n    local boredom_sentence_word_count31=0\n\
    \    local boredom_sentence_word_count32=0\n    local boredom_sentence_word_count33=0\n\
    \    local boredom_sentence_word_count34=0\n    local boredom_sentence_word_count35=0\n\
    \    local boredom_sentence_word_count36=0\n    local boredom_sentence_word_count37=0\n\
    \    local boredom_sentence_word_count38=0\n    local boredom_sentence_word_count39=0\n\
    \    local boredom_sentence_word_count40=0\n    local boredom_sentence_word_count41=0\n\
    \    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=\"\"\n  local boredom_sentence=\"\"\n  local boredom_sentence_words=\"\
    \"\n  local boredom_sentence_word=\"\"\n  local boredom_sentence_word_count=0\n\
    \  local boredom_sentence_word_count2=0\n  local boredom_sentence_word_count3=0\n\
    \  local boredom_sentence_word_count4=0\n  local boredom_sentence_word_count5=0\n\
    \  local boredom_sentence_word_count6=0\n  local boredom_sentence_word_count7=0\n\
    \  local boredom_sentence_word_count8=0\n  local boredom_sentence_word_count9=0\n\
    \  local boredom_sentence_word_count10=0\n  local boredom_sentence_word_count11=0\n\
    \  local boredom_sentence_word_count12=0\n  local boredom_sentence_word_count13=0\n\
    \  local boredom_sentence_word_count14=0\n  local boredom_sentence_word_count15=0\n\
    \  local boredom_sentence_word_count16=0\n  local boredom_sentence_word_count17=0\n\
    \  local boredom_sentence_word_count18=0\n  local boredom_sentence_word_count19=0\n\
    \  local boredom_sentence_word_count20=0\n  local boredom_sentence_word_count21=0\n\
    \  local boredom_sentence_word_count22=0\n  local boredom_sentence_word_count23=0\n\
    \  local boredom_sentence_word_count24=0\n  local boredom_sentence_word_count25=0\n\
    \  local boredom_sentence_word_count26=0\n  local boredom_sentence_word_count27=0\n\
    \  local boredom_sentence_word_count28=0\n  local boredom_sentence_word_count29=0\n\
    \  local boredom_sentence_word_count30=0\n  local boredom_sentence_word_count31=0\n\
    \  local boredom_sentence_word_count32=0\n  local boredom_sentence_word_count33=0\n\
    \  local boredom_sentence_word_count34=0\n  local boredom_sentence_word_count35=0\n\
    \  local boredom_sentence_word_count36=0\n  local boredom_sentence_word_count37=0\n\
    \  local boredom_sentence_word_count38=0\n  local boredom_sentence_word_count39=0\n\
    \  local boredom_sentence_word_count40=0\n  local boredom_sentence_word_count41=0\n\
    \  local boredom_sentence_word_count42=0\n  \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_prefix=\"I\"\n  local boredom_suffix=\"!\"\n\
    \  local boredom_delimiter=\"?\"\n  local boredom_words=()\n  local boredom_count=0\n\
    \  local boredom_word\n  local boredom_word_count\n  local boredom_word_length\n\
    \  local boredom_word_length_count\n  local boredom_word_prefix\n  local boredom_word_suffix\n\
    \  local boredom_word_suffix_count\n  local boredom_word_suffix_length\n  local\
    \ boredom_word_suffix_length_count\n  local boredom_word_suffix_prefix\n  local\
    \ boredom_word_suffix_suffix\n  local boredom_word_suffix_suffix_count\n  local\
    \ boredom_word_suffix_suffix_length\n  local boredom_word_suffix_suffix_length_count\n\
    \  local boredom_word_suffix_suffix_prefix\n  local boredom_word_suffix_suffix_suffix\n\
    \  local boredom_word_suffix_suffix_suffix_count\n  local boredom_word_suffix_suffix_suffix_length\n\
    \  local boredom_word_suffix_suffix_suffix_length_count\n  local boredom_word_suffix_suffix_suffix_prefix\n\
    \  local boredom_word_suffix_suffix_suffix_suffix\n  local boredom_word_suffix_suffix_suffix_suffix_count\n\
    \  local boredom_word_suffix_suffix_suffix_suffix_length\n  local boredom_word_suffix_suffix_suffix_suffix_length_count\n\
    \  local boredom_word_suffix_suffix_suffix_suffix_prefix\n  local boredom_word_suffix_suffix_suffix_suffix_suffix\n\
    \  local boredom_word_suffix_suffix_suffix_suffix_suffix_count\n  local boredom_word_suffix_suffix_suffix_suffix_suffix_length\n\
    \  local boredom_word_suffix_suffix_suffix_suffix_suffix_length_count\n  local\
    \ boredom_word_suffix_suffix_suffix_suffix_suffix_prefix\n  local boredom_word_suffix_suffix_suffix_suffix_suffix_suffix\n\
    \  local boredom_word_suffix_suffix_suffix_suffix_suffix_suffix_count\n  local\
    \ boredom_word_suffix_suffix_suffix_suffix_suffix_suffix_length\n  local boredom_word_suffi\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredom_words=(\"I\" \"me\" \"my\" \"mine\" \"myself\"\
    \ \"myselves\" \"you\" \"your\" \"yours\" \"yourself\" \"yourselves\" \"he\" \"\
    him\" \"his\" \"himself\" \"she\" \"her\" \"hers\" \"herself\" \"it\" \"its\"\
    \ \"itself\" \"they\" \"them\" \"theirs\" \"themselves\" \"what\" \"which\" \"\
    who\" \"whom\" \"this\" \"that\" \"these\" \"those\" \"am\" \"is\" \"are\" \"\
    was\" \"were\" \"be\" \"been\" \"being\" \"have\" \"has\" \"had\" \"having\" \"\
    do\" \"does\" \"did\" \"doing\" \"a\" \"an\" \"the\" \"and\" \"but\" \"if\" \"\
    or\" \"because\" \"as\" \"until\" \"while\" \"of\" \"at\" \"by\" \"for\" \"with\"\
    \ \"about\" \"against\" \"between\" \"into\" \"through\" \"during\" \"before\"\
    \ \"after\" \"above\" \"below\" \"to\" \"from\" \"up\" \"down\" \"in\" \"out\"\
    \ \"on\" \"off\" \"over\" \"under\" \"again\" \"further\" \"then\" \"once\" \"\
    here\" \"there\" \"when\" \"where\" \"why\" \"how\" \"all\" \"any\" \"both\" \"\
    each\" \"few\" \"more\" \"most\" \"other\" \"some\" \"such\" \"no\" \"nor\" \"\
    not\" \"only\" \"own\" \"same\" \"so\" \"than\" \"too\" \"very\" \"can\" \"will\"\
    \ \"just\" \"don\" \"should\" \"now\")\n  local delimiters=(\"\\.\" \"\\?\" \"\
    \\!\")\n  local delimiters_count=${#delimiters[@]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_count=${#delimiters[@]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_count=${#delimiters[@]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_count=${#delimiters[@]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_count=${#delimiters[@]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_count=${#delimiters[@]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_count=${#delimiters[@]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_count=${#delimiters[@]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_count=${#delimiters[@]}\n  \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=$1\n    local output=0\n  \
    \  local delimiter=.?!\n    for word in $input; do\n        if [[ \"$word\" ==\
    \ \"I\" ]]; then\n            ((output++))\n        fi\n    done\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local words=$1\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local delimiter=\".\"\n  local delimiter2=\"\
    ?\"\n  local delimiter3=\"!\"\n  local delimiter4=\",\"\n  local delimiter5=\"\
    ;\"\n  local delimiter6=\":\"\n  local delimiter7=\".\"\n  local delimiter8=\"\
    ?\"\n  local delimiter9=\"!\"\n  local delimiter10=\",\"\n  local delimiter11=\"\
    ;\"\n  local delimiter12=\":\"\n  local delimiter13=\".\"\n  local delimiter14=\"\
    ?\"\n  local delimiter15=\"!\"\n  local delimiter16=\",\"\n  local delimiter17=\"\
    ;\"\n  local delimiter18=\":\"\n  local delimiter19=\".\"\n  local delimiter20=\"\
    ?\"\n  local delimiter21=\"!\"\n  local delimiter22=\",\"\n  local delimiter23=\"\
    ;\"\n  local delimiter24=\":\"\n  local delimiter25=\".\"\n  local delimiter26=\"\
    ?\"\n  local delimiter27=\"!\"\n  local delimiter28=\",\"\n  local delimiter29=\"\
    ;\"\n  local delimiter30=\":\"\n  local delimiter31=\".\"\n  local delimiter32=\"\
    ?\"\n  local delimiter33=\"!\"\n  local delimiter34=\",\"\n  local delimiter35=\"\
    ;\"\n  local delimiter36=\":\"\n  local delimiter37=\".\"\n  local delimiter38=\"\
    ?\"\n  local delimiter39=\"!\"\n  local delimiter40=\",\"\n  local delimiter41=\"\
    ;\"\n  local delimiter42=\":\"\n  local delimiter43=\".\"\n  local delimiter44=\"\
    ?\"\n  local delimiter45=\"!\"\n  local delimiter46=\",\"\n  local delimiter47=\"\
    ;\"\n  local delimiter48=\":\"\n  local delimiter49=\".\"\n  local delimiter50=\"\
    ?\"\n  local delimiter51=\"!\"\n  local delimiter52=\",\"\n  local delimiter53=\"\
    ;\"\n  local delimiter54=\":\"\n  local delimiter55=\".\"\n  local delimiter56=\"\
    ?\"\n  local delimiter57=\"!\"\n  local delimiter58=\",\"\n  local delimiter59=\"\
    ;\"\n  local delimiter60=\":\"\n  local delimiter61=\".\"\n  local delimiter62=\"\
    ?\"\n  local delimiter63=\"!\"\n  local delimiter64=\",\"\n  local delimiter65=\"\
    ;\"\n  local delimiter66=\":\"\n  local delimiter67=\".\"\n  local delimiter68=\"\
    ?\"\n  local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredoms=0\n\
    \    local delimiters=(\".\")\n    local delimiters_length=${#delimiters[@]}\n\
    \    local delimiters_array=(\"${delimiters[@]}\")\n    local delimiters_array_length=${#delimiters_array[@]}\n\
    \    local delimiters_array_elements=(\"${delimiters_array[@]}\")\n    local delimiters_array_elements_length=${#delimiters_array_elements[@]}\n\
    \    local delimiters_array_elements_elements=(\"${delimiters_array_elements[@]}\"\
    )\n    local delimiters_array_elements_elements_length=${#delimiters_array_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements=(\"${delimiters_array_elements_elements[@]}\"\
    )\n    local delimiters_array_elements_elements_elements_length=${#delimiters_array_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements=(\"${delimiters_array_elements_elements_elements[@]}\"\
    )\n    local delimiters_array_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements=(\"${delimiters_array_elements_elements_elements_elements[@]}\"\
    )\n    local delimiters_array_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements=(\"\
    ${delimiters_array_elements_elements_elements_elements_elements[@]}\")\n    local\
    \ delimiters_array_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements[@]}\n\
    \    local delimiters_array_elements_elements_elements_elements_elements_elements_elements_elements_elements_length=${#delimiters_array_elements_elements_elements_elements_elements_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyyxnqjer.sh: line 47: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=()\n  local boredom_sentences=()\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_word_count\n  local boredom_sentence_count\n\
    \  local boredom_sentence_word\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  \n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredoms=0\n\
    \    local delimiters=\".?!\"\n    for delimiter in $delimiters; do\n        local\
    \ delimiter_index=\"${string#*$delimiter}\"\n        if [ \"$delimiter_index\"\
    \ != \"\" ]; then\n            boredoms=$((boredoms+1))\n        fi\n    done\n\
    \    echo \"$boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredom_count=0\n\
    \    local boredom_word=\"I\"\n    local delimiter=\".\"\n    local delimiters=\"\
    ?!.\"\n    local delimiter_count=0\n    local delimiter_index=0\n    local delimiter_indexes=()\n\
    \    local delimiter_indexes_count=()\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=()\n    local delimiter_indexes_words_counts=()\n\
    \    local delimiter_indexes_words_counts_count=()\n    local delimiter_indexes_words_counts_count_count=()\n\
    \    local delimiter_indexes_words_counts_count_count_count=()\n    local delimiter_indexes_words_counts_count_count_count_count=()\n\
    \    local delimiter_indexes_words_counts_count_count_count_count_count=()\n \
    \   local delimiter_indexes_words_counts_count_count_count_count_count_count=()\n\
    \    local delimiter_indexes_words_counts_count_count_count_count_count_count_count=()\n\
    \    local delimiter_indexes_words_counts_count_count_count_count_count_count_count_count_count=()\n\
    \    local delimiter_indexes_words_counts_count_count_count_count_count_count_count_count_count_count_count=()\n\
    \    local delimiter_indexes_words_counts_count_count_count_count_count_count_count_count_count_count_count_count_count=()\n\
    \    local delimiter_indexes_words_counts_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count=()\n\
    \    local delimiter_indexes_words_counts_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local delimiter=\".\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  \n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_word=\"I\"\n  local boredom_count=0\n  local\
    \ boredom_sentence=\"\"\n  local boredom_sentence_count=0\n  local boredom_sentence_word=\"\
    \"\n  local boredom_sentence_word_count=0\n  local boredom_sentence_word_length=0\n\
    \  local boredom_sentence_word_length_count=0\n  local boredom_sentence_word_length_length=0\n\
    \  local boredom_sentence_word_length_length_count=0\n  local boredom_sentence_word_length_length_length_count=0\n\
    \  local boredom_sentence_word_length_length_length_count=0\n  local boredom_sentence_word_length_length_length_length_count=0\n\
    \  local boredom_sentence_word_length_length_length_length_count_count=0\n  local\
    \ boredom_sentence_word_length_length_length_length_count_count_count=0\n  local\
    \ boredom_sentence_word_length_length_length_count_count_count_count=0\n  local\
    \ boredom_sentence_word_length_length_length_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredom_words=(\"I\" \"me\" \"my\" \"mine\" \"myself\"\
    \ \"myselves\")\n  local boredom_count=0\n  local boredom_word\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  \n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredoms=0\n\
    \    local delimiter=\".\"\n    local delimiters=\" ?!\"\n    for word in $string;\
    \ do\n        if [[ \"$word\" == \"I\" ]]; then\n            boredoms=$((boredoms+1))\n\
    \        fi\n    done\n    echo \"$boredoms\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local boredoms=0\n  local\
    \ delimiters=(\".\")\n  local delimiter=(\"?\")\n  local delimiter2=(\"!\")\n\
    \  local delimiter3=(\"?\")\n  local delimiter4=(\"!\")\n  local delimiter5=(\"\
    ?\")\n  local delimiter6=(\"!\")\n  local delimiter7=(\"?\")\n  local delimiter8=(\"\
    !\")\n  local delimiter9=(\"?\")\n  local delimiter10=(\"!\")\n  local delimiter11=(\"\
    ?\")\n  local delimiter12=(\"!\")\n  local delimiter13=(\"?\")\n  local delimiter14=(\"\
    !\")\n  local delimiter15=(\"?\")\n  local delimiter16=(\"!\")\n  local delimiter17=(\"\
    ?\")\n  local delimiter18=(\"!\")\n  local delimiter19=(\"?\")\n  local delimiter20=(\"\
    !\")\n  local delimiter21=(\"?\")\n  local delimiter22=(\"!\")\n  local delimiter23=(\"\
    ?\")\n  local delimiter24=(\"!\")\n  local delimiter25=(\"?\")\n  local delimiter26=(\"\
    !\")\n  local delimiter27=(\"?\")\n  local delimiter28=(\"!\")\n  local delimiter29=(\"\
    ?\")\n  local delimiter30=(\"!\")\n  local delimiter31=(\"?\")\n  local delimiter32=(\"\
    !\")\n  local delimiter33=(\"?\")\n  local delimiter34=(\"!\")\n  local delimiter35=(\"\
    ?\")\n  local delimiter36=(\"!\")\n  local delimiter37=(\"?\")\n  local delimiter38=(\"\
    !\")\n  local delimiter39=(\"?\")\n  local delimiter40=(\"!\")\n  local delimiter41=(\"\
    ?\")\n  local delimiter42=(\"!\")\n  local delimiter43=(\"?\")\n  local delimiter44=(\"\
    !\")\n  local delimiter45=(\"?\")\n  local delimiter46=(\"!\")\n  local delimiter47=(\"\
    ?\")\n  local delimiter48=(\"!\")\n  local delimiter49=(\"?\")\n  local delimiter50=(\"\
    !\")\n  local delimiter51=(\"?\")\n  local delimiter52=(\"!\")\n  local delimiter53=(\"\
    ?\")\n  local delimiter54=(\"!\")\n  local delimiter55=(\"?\")\n  local delimiter56=(\"\
    !\")\n  local delimiter57=(\"?\")\n  local delimiter58=(\"!\")\n  local delimiter59=(\"\
    ?\")\n  local delimiter60=(\"!\")\n  local delimiter61=(\"?\")\n  local delimiter62=(\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8ppn3_1f.sh: line 87: unexpected EOF while looking for matching
    `"''

    /tmp/tmp8ppn3_1f.sh: line 91: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredom_count=0\n\
    \    local boredom_string=\"\"\n    local boredom_char=\"I\"\n    local boredom_char_count=0\n\
    \    local boredom_char_pos=0\n    local boredom_char_pos_count=0\n    local boredom_char_pos_string=\"\
    \"\n    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local boredom_char_pos_string_count=0\n    local boredom_char_pos_string_count=0\n\
    \    local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=()\n  local boredom_sentences=()\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_char\n  local boredom_char_count\n\
    \  local boredom_char_word\n  local boredom_char_sentence\n  local boredom_char_char\n\
    \  local boredom_char_char_count\n  local boredom_char_char_word\n  local boredom_char_char_sentence\n\
    \  local boredom_char_char_char\n  local boredom_char_char_char_count\n  local\
    \ boredom_char_char_char_word\n  local boredom_char_char_char_sentence\n  local\
    \ boredom_char_char_char_char\n  local boredom_char_char_char_char_count\n  local\
    \ boredom_char_char_char_char_word\n  local boredom_char_char_char_char_sentence\n\
    \  local boredom_char_char_char_char_char\n  local boredom_char_char_char_char_char_count\n\
    \  local boredom_char_char_char_char_char_word\n  local boredom_char_char_char_char_char_sentence\n\
    \  local boredom_char_char_char_char_char_char\n  local boredom_char_char_char_char_char_char_count\n\
    \  local boredom_char_char_char_char_char_char_word\n  local boredom_char_char_char_char_char_char_sentence\n\
    \  local boredom_char_char_char_char_char_char_char\n  local boredom_char_char_char_char_char_char_char_count\n\
    \  local boredom_char_char_char_char_char_char_char_word\n  local boredom_char_char_char_char_char_char_char_sentence\n\
    \  local boredom_char_char_char_char_char_char_char_char\n  local boredom_char_char_char_char_char_char_char_char_count\n\
    \  local boredom_char_char_char_char_char_char_char_word\n  local boredom_char_char_char_char_char_char_char_sentence\n\
    \  local boredom_char_char_char_char_char_char_char_char\n  local boredom_char_char_char_char_char_char_char_char_count\n\
    \  local boredom_char_char_char_char_char_char_char_word\n  local boredom_char_char_char_char_char_char_char_sentence\n\
    \  local boredom_char_char_char_char_char_char_char_char\n  local boredom_char_char_char_char_char_char_char_char_count\n\
    \  local boredom_char_char_char_char_char_char_char_word\n  local boredom_char_char_char_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=()\n  local boredom_sentence=()\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_word_count\n  local boredom_sentence_count\n\
    \  local boredom_sentence_word\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  \n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local word\n  local count\n  local i\n  local j\n  local delimiter_count\n\
    \  local delimiter_index\n  local delimiter_index2\n  local delimiter_index3\n\
    \  local delimiter_index4\n  local delimiter_index5\n  local delimiter_index6\n\
    \  local delimiter_index7\n  local delimiter_index8\n  local delimiter_index9\n\
    \  local delimiter_index10\n  local delimiter_index11\n  local delimiter_index12\n\
    \  local delimiter_index13\n  local delimiter_index14\n  local delimiter_index15\n\
    \  local delimiter_index16\n  local delimiter_index17\n  local delimiter_index18\n\
    \  local delimiter_index19\n  local delimiter_index20\n  local delimiter_index21\n\
    \  local delimiter_index22\n  local delimiter_index23\n  local delimiter_index24\n\
    \  local delimiter_index25\n  local delimiter_index26\n  local delimiter_index27\n\
    \  local delimiter_index28\n  local delimiter_index29\n  local delimiter_index30\n\
    \  local delimiter_index31\n  local delimiter_index32\n  local delimiter_index33\n\
    \  local delimiter_index34\n  local delimiter_index35\n  local delimiter_index36\n\
    \  local delimiter_index37\n  local delimiter_index38\n  local delimiter_index39\n\
    \  local delimiter_index40\n  local delimiter_index41\n  local delimiter_index42\n\
    \  local delimiter_index43\n  local delimiter_index44\n  local delimiter_index45\n\
    \  local delimiter_index46\n  local delimiter_index47\n  local delimiter_index48\n\
    \  local delimiter_index49\n  local delimiter_index50\n  local delimiter_index51\n\
    \  local delimiter_index52\n  local delimiter_index53\n  local delimiter_index54\n\
    \  local delimiter_index55\n  local delimiter_index56\n  local delimiter_index57\n\
    \  local delimiter_index58\n  local delimiter_index59\n  local delimiter_index60\n\
    \  local delimiter_index61\n  local delimiter_index62\n  local delimiter_index63\n\
    \  local delimiter_index64\n  local delimiter_index65\n  local delimiter_index66\n\
    \  local delimiter_index67\n  local delimiter_index68\n  local delimiter_index69\n\
    \  local delimiter_index70\n  local delimiter_index71\n  local delimiter_index72\n\
    \  local delimiter_index73\n  local delimiter_index74\n  local delimiter_index75\n\
    \  local delimiter_index76\n  local delimiter_index77\n  local delimiter_index78\n\
    \  local delimiter_index79\n  \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiters=\".?!\"\n  local delimiters_count=${#delimiters}\n  local delimiters_index=0\n\
    \  local word\n  local word_count=0\n  while IFS= read -r word; do\n    if [[\
    \ ${word} == *\"I\"* ]]; then\n      output=$((output+1))\n    fi\n  done <<<\
    \ \"$input\"\n  echo \"$output\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiter_count=0\n\
    \  local delimiter_index=0\n  local delimiter_index2=0\n  local delimiter_index3=0\n\
    \  local delimiter_index4=0\n  local delimiter_index5=0\n  local delimiter_index6=0\n\
    \  local delimiter_index7=0\n  local delimiter_index8=0\n  local delimiter_index9=0\n\
    \  local delimiter_index10=0\n  local delimiter_index11=0\n  local delimiter_index12=0\n\
    \  local delimiter_index13=0\n  local delimiter_index14=0\n  local delimiter_index15=0\n\
    \  local delimiter_index16=0\n  local delimiter_index17=0\n  local delimiter_index18=0\n\
    \  local delimiter_index19=0\n  local delimiter_index20=0\n  local delimiter_index21=0\n\
    \  local delimiter_index22=0\n  local delimiter_index23=0\n  local delimiter_index24=0\n\
    \  local delimiter_index25=0\n  local delimiter_index26=0\n  local delimiter_index27=0\n\
    \  local delimiter_index28=0\n  local delimiter_index29=0\n  local delimiter_index30=0\n\
    \  local delimiter_index31=0\n  local delimiter_index32=0\n  local delimiter_index33=0\n\
    \  local delimiter_index34=0\n  local delimiter_index35=0\n  local delimiter_index36=0\n\
    \  local delimiter_index37=0\n  local delimiter_index38=0\n  local delimiter_index39=0\n\
    \  local delimiter_index40=0\n  local delimiter_index41=0\n  local delimiter_index42=0\n\
    \  local delimiter_index43=0\n  local delimiter_index44=0\n  local delimiter_index45=0\n\
    \  local delimiter_index46=0\n  local delimiter_index47=0\n  local delimiter_index48=0\n\
    \  local delimiter_index49=0\n  local delimiter_index50=0\n  local delimiter_index51=0\n\
    \  local delimiter_index52=0\n  local delimiter_index53=0\n  local delimiter_index54=0\n\
    \  local delimiter_index55=0\n  local delimiter_index56=0\n  local delimiter_index57=0\n\
    \  local delimiter_index58=0\n  local delimiter_index59=0\n  local delimiter_index60=0\n\
    \  local delimiter_index61=0\n  local delimiter_index62=0\n  local delimiter_index63=0\n\
    \  local delimiter_index64=0\n  local delimiter_index65=0\n  local delimiter_index66=0\n\
    \  local delimiter_index67=0\n  local delimiter_index68=0\n  \n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=$2\n  local\
    \ boredoms=0\n  local boredom_count=0\n  local boredom_words=\"\"\n  local boredom_word=\"\
    \"\n  local boredom_chars=\"\"\n  local boredom_char=\"\"\n  local boredom_sentence=\"\
    \"\n  local boredom_sentences=\"\"\n  local boredom_sentences_count=0 \n  local\
    \ boredom_sentences_words=\"\"\n  local boredom_sentences_word=\"\"\n  local boredom_sentences_chars=\"\
    \"\n  local boredom_sentences_char=\"\"\n  local boredom_sentences_boredoms=\"\
    \"\n  local boredom_sentences_boredoms_count=0 \n  local boredom_sentences_boredoms_words=\"\
    \"\n  local boredom_sentences_boredoms_word=\"\"\n  local boredom_sentences_boredoms_chars=\"\
    \"\n  local boredom_sentences_boredoms_char=\"\"\n  local boredom_sentences_boredoms_boredoms=\"\
    \"\n  local boredom_sentences_boredoms_boredoms_count=0 \n  local boredom_sentences_boredoms_boredoms_words=\"\
    \"\n  local boredom_sentences_boredoms_boredoms_word=\"\"\n  local boredom_sentences_boredoms_boredoms_chars=\"\
    \"\n  local boredom_sentences_boredoms_boredoms_char=\"\"\n  local boredom_sentences_boredoms_boredoms_boredoms=\"\
    \"\n  local boredom_sentences_boredoms_boredoms_boredoms_count=0 \n  local boredom_sentences_boredoms_boredoms_boredoms_words=\"\
    \"\n  local boredom_sentences_boredoms_boredoms_boredoms_word=\"\"\n  local boredom_sentences_boredoms_boredoms_boredoms_chars=\"\
    \"\n  local boredom_sentences_boredoms_boredoms_boredoms_char=\"\"\n  local boredom_sentences_boredoms_boredoms_boredoms_boredoms=\"\
    \"\n  local boredom_sentences_boredoms_boredoms_boredoms_boredoms_count=0 \n \
    \ local bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredom_count=0\n\
    \    local boredom_words=()\n    local boredom_sentence=()\n    local boredom_sentence_index=0\n\
    \    local boredom_sentence_length=${#string}\n    local boredom_sentence_words=()\n\
    \    local boredom_sentence_word_length=${#boredom_sentence_words[@]}\n    local\
    \ boredom_sentence_word_index=0\n    local boredom_sentence_word_length=$((boredom_sentence_word_length-1))\n\
    \    local boredom_sentence_word_boredom_words=()\n    local boredom_sentence_word_boredom_word_length=${#boredom_sentence_word_boredom_words[@]}\n\
    \    local boredom_sentence_word_boredom_word_index=0\n    local boredom_sentence_word_boredom_word_length=$((boredom_sentence_word_boredom_word_length-1))\n\
    \    local boredom_sentence_word_boredom_word_boredom_words=()\n    local boredom_sentence_word_boredom_word_boredom_word_length=${#boredom_sentence_word_boredom_word_boredom_words[@]}\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_index=0\n    local\
    \ boredom_sentence_word_boredom_word_boredom_word_length=$((boredom_sentence_word_boredom_word_boredom_word_length-1))\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_words=()\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_length=${#boredom_sentence_word_boredom_word_boredom_word_boredom_words[@]}\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_index=0\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_length=$((boredom_sentence_word_boredom_word_boredom_word_boredom_word_length-1))\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_words=()\n\
    \    local boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_word_length=${#boredom_sentence_word_boredom_word_boredom_word_boredom_word_boredom_words[@]}\n\
    \    local boredom_sentence_word_boredom_word_\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiters=(\".\")\n  local delimiter=\"?\"\n  local delimiter2=\"!\"\n  local\
    \ delimiter3=\".\"\n  local delimiter4=\",\"\n  local delimiter5=\";\"\n  local\
    \ delimiter6=\":\"\n  local delimiter7=\";\"\n  local delimiter8=\";\"\n  local\
    \ delimiter9=\";\"\n  local delimiter10=\";\"\n  local delimiter11=\";\"\n  local\
    \ delimiter12=\";\"\n  local delimiter13=\";\"\n  local delimiter14=\";\"\n  local\
    \ delimiter15=\";\"\n  local delimiter16=\";\"\n  local delimiter17=\";\"\n  local\
    \ delimiter18=\";\"\n  local delimiter19=\";\"\n  local delimiter20=\";\"\n  local\
    \ delimiter21=\";\"\n  local delimiter22=\";\"\n  local delimiter23=\";\"\n  local\
    \ delimiter24=\";\"\n  local delimiter25=\";\"\n  local delimiter26=\";\"\n  local\
    \ delimiter27=\";\"\n  local delimiter28=\";\"\n  local delimiter29=\";\"\n  local\
    \ delimiter30=\";\"\n  local delimiter31=\";\"\n  local delimiter32=\";\"\n  local\
    \ delimiter33=\";\"\n  local delimiter34=\";\"\n  local delimiter35=\";\"\n  local\
    \ delimiter36=\";\"\n  local delimiter37=\";\"\n  local delimiter38=\";\"\n  local\
    \ delimiter39=\";\"\n  local delimiter40=\";\"\n  local delimiter41=\";\"\n  local\
    \ delimiter42=\";\"\n  local delimiter43=\";\"\n  local delimiter44=\";\"\n  local\
    \ delimiter45=\";\"\n  local delimiter46=\";\"\n  local delimiter47=\";\"\n  local\
    \ delimiter48=\";\"\n  local delimiter49=\";\"\n  local delimiter50=\";\"\n  local\
    \ delimiter51=\";\"\n  local delimiter52=\";\"\n  local delimiter53=\";\"\n  local\
    \ delimiter54=\";\"\n  local delimiter55=\";\"\n  local delimiter56=\";\"\n  local\
    \ delimiter57=\";\"\n  local delimiter58=\";\"\n  local delimiter59=\";\"\n  local\
    \ delimiter60=\";\"\n  local delimiter61=\";\"\n  local delimiter62=\";\"\n  local\
    \ delimiter63\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredom_words=$3\n  local boredom_count=0\n  local boredom_word\n\
    \  local boredom_word_count\n  local boredom_word_count2\n  local boredom_word_count3\n\
    \  local boredom_word_count4\n  local boredom_word_count5\n  local boredom_word_count6\n\
    \  local boredom_word_count7\n  local boredom_word_count8\n  local boredom_word_count9\n\
    \  local boredom_word_count10\n  local boredom_word_count11\n  local boredom_word_count12\n\
    \  local boredom_word_count13\n  local boredom_word_count14\n  local boredom_word_count15\n\
    \  local boredom_word_count16\n  local boredom_word_count17\n  local boredom_word_count18\n\
    \  local boredom_word_count19\n  local boredom_word_count20\n  local boredom_word_count21\n\
    \  local boredom_word_count22\n  local boredom_word_count23\n  local boredom_word_count24\n\
    \  local boredom_word_count25\n  local boredom_word_count26\n  local boredom_word_count27\n\
    \  local boredom_word_count28\n  local boredom_word_count29\n  local boredom_word_count30\n\
    \  local boredom_word_count31\n  local boredom_word_count32\n  local boredom_word_count33\n\
    \  local boredom_word_count34\n  local boredom_word_count35\n  local boredom_word_count36\n\
    \  local boredom_word_count37\n  local boredom_word_count38\n  local boredom_word_count39\n\
    \  local boredom_word_count40\n  local boredom_word_count41\n  local boredom_word_count42\n\
    \  local boredom_word_count43\n  local boredom_word_count44\n  local boredom_word_count45\n\
    \  local boredom_word_count46\n  local boredom_word_count47\n  local boredom_word_count48\n\
    \  local boredom_word_count49\n  local boredom_word_count50\n  local boredom_word_count51\n\
    \  local boredom_word_count52\n  local bo\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiter_count=0\n\
    \  local delimiter_index=0\n  local delimiter_index2=0\n  local delimiter_index3=0\n\
    \  local delimiter_index4=0\n  local delimiter_index5=0\n  local delimiter_index6=0\n\
    \  local delimiter_index7=0\n  local delimiter_index8=0\n  local delimiter_index9=0\n\
    \  local delimiter_index10=0\n  local delimiter_index11=0\n  local delimiter_index12=0\n\
    \  local delimiter_index13=0\n  local delimiter_index14=0\n  local delimiter_index15=0\n\
    \  local delimiter_index16=0\n  local delimiter_index17=0\n  local delimiter_index18=0\n\
    \  local delimiter_index19=0\n  local delimiter_index20=0\n  local delimiter_index21=0\n\
    \  local delimiter_index22=0\n  local delimiter_index23=0\n  local delimiter_index24=0\n\
    \  local delimiter_index25=0\n  local delimiter_index26=0\n  local delimiter_index27=0\n\
    \  local delimiter_index28=0\n  local delimiter_index29=0\n  local delimiter_index30=0\n\
    \  local delimiter_index31=0\n  local delimiter_index32=0\n  local delimiter_index33=0\n\
    \  local delimiter_index34=0\n  local delimiter_index35=0\n  local delimiter_index36=0\n\
    \  local delimiter_index37=0\n  local delimiter_index38=0\n  local delimiter_index39=0\n\
    \  local delimiter_index40=0\n  local delimiter_index41=0\n  local delimiter_index42=0\n\
    \  local delimiter_index43=0\n  local delimiter_index44=0\n  local delimiter_index45=0\n\
    \  local delimiter_index46=0\n  local delimiter_index47=0\n  local delimiter_index48=0\n\
    \  local delimiter_index49=0\n  local delimiter_index50=0\n  local delimiter_index51=0\n\
    \  local delimiter_index52=0\n  local delimiter_index53=0\n  local delimiter_index54=0\n\
    \  local delimiter_index55=0\n  local delimiter_index56=0\n  local delimiter_index57=0\n\
    \  local delimiter_index58=0\n  local delimiter_index59=0\n  local delimiter_index60=0\n\
    \  local delimiter_index61=0\n  local delimiter_index62=0\n  local delimiter_index63=0\n\
    \  local delimiter_index64=0\n  local delimiter_index65=0\n  local delimiter_index66=0\n\
    \  local delimiter_index67=0\n  local delimiter_index68=0\n  \n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredoms=0\n\
    \  local delimiters=\".?!\"\n  local delimiters_length=${#delimiters}\n  local\
    \ delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local word=$1\n  local boredoms=0\n  local\
    \ delimiter=$2\n  local delimiters=(\".\")\n  local delimiters_=(\"?\")\n  local\
    \ delimiters_=(\"!\")\n  local delimiters_=(\"$\")\n  local delimiters_=(\",\"\
    )\n  local delimiters_=(\";\")\n  local delimiters_=(\":\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    ,\")\n  local delimiters_=(\";\")\n  local delimiters_=(\":\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    ,\")\n  local delimiters_=(\";\")\n  local delimiters_=(\":\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    ,\")\n  local delimiters_=(\";\")\n  local delimiters_=(\":\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    ,\")\n  local delimiters_=(\";\")\n  local delimiters_=(\":\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    ,\")\n  local delimiters_=(\";\")\n  local delimiters_=(\":\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    ,\")\n  local delimiters_=(\";\")\n  local delimiters_=(\":\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    ,\")\n  local delimiters_=(\";\")\n  local delimiters_=(\":\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    ,\")\n  local delimiters_=(\";\")\n  local delimiters_=(\":\")\n  local delimiters_=(\"\
    !\")\n  local delimiters_=(\"?\")\n  local delimiters_=(\".\")\n  local delimiters_=(\"\
    ,\")\n  local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiters=\" ?!\"\
    \n  local delimiter_count=0\n  local delimiters_count=${#delimiters[@]}\n  local\
    \ delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${delimiters[$delimiters_count]}\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_word=${\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpku4hgckj.sh: line 70: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredom_words=(\"I\" \"you\" \"it\" \"he\" \"she\" \"\
    its\" \"you\" \"the\" \"it\" \"she\" \"the\" \"he\" \"me\" \"you\" \"my\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"our\"\
    \ \"you\" \"our\" \"you\" \"our\" \"you\" \"our\" \"you\" \"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzhmnb5zz.sh: line 26: unexpected EOF while looking for matching
    `"''

    /tmp/tmpzhmnb5zz.sh: line 30: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local word\n  local count\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local delimiter=\".\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  \n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local boredoms=0\n  local\
    \ word\n  local delimiters\n  local delimiter\n  local delimiters\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\
    \  local delimiter\n  local delimiter\n  local delimiter\n\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredom_count=0\n\
    \    local boredom_word=\"I\"\n    local delimiter=\".\"\n    local delimiters=\"\
    \ ?!\"\n    local delimiter_count=0\n    local delimiter_index=0\n    local delimiter_indexes=()\n\
    \    local delimiter_indexes_count=0\n    local delimiter_indexes_word=\"\"\n\
    \    local delimiter_indexes_index=0\n    local delimiter_indexes_indexes=()\n\
    \    local delimiter_indexes_indexes_count=0\n    local delimiter_indexes_indexes_word=\"\
    \"\n    local delimiter_indexes_indexes_index=0\n    local delimiter_indexes_indexes_indexes=()\n\
    \    local delimiter_indexes_indexes_indexes_count=0\n    local delimiter_indexes_indexes_indexes_word=\"\
    \"\n    local delimiter_indexes_indexes_indexes_index=0\n    local delimiter_indexes_indexes_indexes_indexes=()\n\
    \    local delimiter_indexes_indexes_indexes_indexes_count=0\n    local delimiter_indexes_indexes_indexes_indexes_word=\"\
    \"\n    local delimiter_indexes_indexes_indexes_indexes_index=0\n    local delimiter_indexes_indexes_indexes_indexes_indexes=()\n\
    \    local delimiter_indexes_indexes_indexes_indexes_indexes_count=0\n    local\
    \ delimiter_indexes_indexes_indexes_indexes_indexes_word=\"\"\n    local delimiter_indexes_indexes_indexes_indexes_indexes_index=0\n\
    \    local delimiter_indexes_indexes_indexes_indexes_indexes_indexes=()\n    local\
    \ delimiter_indexes_indexes_indexes_indexes_indexes_indexes_count=0\n    local\
    \ delimiter_indexes_indexes_indexes_indexes_indexes_indexes_word=\"\"\n    local\
    \ delimiter_indexes_indexes_indexes_indexes_indexes_indexes_index=0\n    local\
    \ delimiter_indexes_indexes_indexes_indexes_indexes_indexes_indexes=()\n    local\
    \ delimiter_indexes_indexes_indexes_indexes_indexes_indexes_indexes_count=0\n\
    \    local delimiter_indexes_indexes_indexes_indexes_indexes_indexes_indexes_word=\"\
    \"\n    local delimiter_indexes_indexes_indexes_indexes_indexes_indexes_indexes_index=0\n\
    \    local delimiter_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes=()\n\
    \    local delimiter_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_count=0\n\
    \    local delimiter_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_word=\"\
    \"\n    local delimiter_indexes_indexes_indexes_indexes_\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local delimiter=\".\"\n  local delimiter2=\"\
    ?\"\n  local delimiter3=\"!\"\n  local delimiter4=\".\"\n  local delimiter5=\"\
    ?\"\n  local delimiter6=\"!\"\n  local delimiter7=\".\"\n  local delimiter8=\"\
    ?\"\n  local delimiter9=\"!\"\n  local delimiter10=\".\"\n  local delimiter11=\"\
    ?\"\n  local delimiter12=\"!\"\n  local delimiter13=\".\"\n  local delimiter14=\"\
    ?\"\n  local delimiter15=\"!\"\n  local delimiter16=\".\"\n  local delimiter17=\"\
    ?\"\n  local delimiter18=\"!\"\n  local delimiter19=\".\"\n  local delimiter20=\"\
    ?\"\n  local delimiter21=\"!\"\n  local delimiter22=\".\"\n  local delimiter23=\"\
    ?\"\n  local delimiter24=\"!\"\n  local delimiter25=\".\"\n  local delimiter26=\"\
    ?\"\n  local delimiter27=\"!\"\n  local delimiter28=\".\"\n  local delimiter29=\"\
    ?\"\n  local delimiter30=\"!\"\n  local delimiter31=\".\"\n  local delimiter32=\"\
    ?\"\n  local delimiter33=\"!\"\n  local delimiter34=\".\"\n  local delimiter35=\"\
    ?\"\n  local delimiter36=\"!\"\n  local delimiter37=\".\"\n  local delimiter38=\"\
    ?\"\n  local delimiter39=\"!\"\n  local delimiter40=\".\"\n  local delimiter41=\"\
    ?\"\n  local delimiter42=\"!\"\n  local delimiter43=\".\"\n  local delimiter44=\"\
    ?\"\n  local delimiter45=\"!\"\n  local delimiter46=\".\"\n  local delimiter47=\"\
    ?\"\n  local delimiter48=\"!\"\n  local delimiter49=\".\"\n  local delimiter50=\"\
    ?\"\n  local delimiter51=\"!\"\n  local delimiter52=\".\"\n  local delimiter53=\"\
    ?\"\n  local delimiter54=\"!\"\n  local delimiter55=\".\"\n  local delimiter56=\"\
    ?\"\n  local delimiter57=\"!\"\n  local delimiter58=\".\"\n  local delimiter59=\"\
    ?\"\n  local delimiter60=\"!\"\n  local delimiter61=\".\"\n  local delimiter62=\"\
    ?\"\n  local delimiter63=\"!\"\n  local delimiter64=\".\"\n  local delimiter65=\"\
    ?\"\n  local delimiter66=\"!\"\n  local delimiter67=\".\"\n  local delimiter68=\"\
    ?\"\n  local delimiter69=\"!\"\n  local delimiter70=\".\"\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=$1\n    local output=0\n  \
    \  local delimiter=$2\n    local boredom_words=(\"I\" \"me\" \"my\" \"mine\" \"\
    myself\" \"myselves\" \"you\" \"your\" \"yours\" \"yourself\" \"yourselves\" \"\
    he\" \"him\" \"his\" \"himself\" \"she\" \"her\" \"hers\" \"herself\" \"it\" \"\
    its\" \"itself\" \"they\" \"them\" \"theirs\" \"themselves\" \"what\" \"which\"\
    \ \"who\" \"whom\" \"this\" \"that\" \"these\" \"those\" \"am\" \"is\" \"are\"\
    \ \"was\" \"were\" \"be\" \"been\" \"being\" \"have\" \"has\" \"had\" \"having\"\
    \ \"do\" \"does\" \"did\" \"doing\" \"a\" \"an\" \"the\" \"and\" \"but\" \"if\"\
    \ \"or\" \"because\" \"as\" \"until\" \"while\" \"of\" \"at\" \"by\" \"for\" \"\
    with\" \"about\" \"against\" \"between\" \"into\" \"through\" \"during\" \"before\"\
    \ \"after\" \"above\" \"below\" \"to\" \"from\" \"up\" \"down\" \"in\" \"out\"\
    \ \"on\" \"off\" \"over\" \"under\" \"again\" \"further\" \"then\" \"once\" \"\
    here\" \"there\" \"when\" \"where\" \"why\" \"how\" \"all\" \"any\" \"both\" \"\
    each\" \"few\" \"more\" \"most\" \"other\" \"some\" \"such\" \"no\" \"nor\" \"\
    not\" \"only\" \"own\" \"same\" \"so\" \"than\" \"too\" \"very\" \"can\" \"will\"\
    \ \"just\" \"don\" \"should\" \"now\")\n    local boredom_count=0\n    local boredom_word\n\
    \    for boredom_word in \"${boredom_words[@]}\"; do\n        if [[ \"$input\"\
    \ == *\"$boredom_word\"* ]]; then\n            boredom_count=$((boredom_count+1))\n\
    \        fi\n    done\n    echo \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredoms=()\n  local boredom_words=()\n  local boredom_count=0\n\
    \  local boredom_word=''\n  local boredom_count=0\n  local boredom_word=''\n \
    \ local boredom_count=0\n  local boredom_word=''\n  local boredom_count=0\n  local\
    \ boredom_word=''\n  local boredom_count=0\n  local boredom_word=''\n  local boredom_count=0\n\
    \  local boredom_word=''\n  local boredom_count=0\n  local boredom_word=''\n \
    \ local boredom_count=0\n  local boredom_word=''\n  local boredom_count=0\n  local\
    \ boredom_word=''\n  local boredom_count=0\n  local boredom_word=''\n  local boredom_count=0\n\
    \  local boredom_word=''\n  local boredom_count=0\n  local boredom_word=''\n \
    \ local boredom_count=0\n  local boredom_word=''\n  local boredom_count=0\n  local\
    \ boredom_word=''\n  local boredom_count=0\n  local boredom_word=''\n  local boredom_count=0\n\
    \  local boredom_word=''\n  local boredom_count=0\n  local boredom_word=''\n \
    \ local boredom_count=0\n  local boredom_word=''\n  local boredom_count=0\n  local\
    \ boredom_word=''\n  local boredom_count=0\n  local boredom_word=''\n  local boredom_count=0\n\
    \  local boredom_word=''\n  local boredom_count=0\n  local boredom_word=''\n \
    \ local boredom_count=0\n  local boredom_word=''\n  local boredom_count=0\n  local\
    \ boredom_word=''\n  local boredom_count=0\n  local boredom_word=''\n  local boredom_count=0\n\
    \  local boredom_word=''\n  local boredom_count=0\n  local boredom_word=''\n \
    \ local boredom_count=0\n  local boredom_word=''\n  local boredom_count=0\n  local\
    \ boredom_word=''\n  local boredom_count=0\n  local boredom_word\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredom_count=0\n\
    \    local boredom_words=\"\"\n    local boredom_chars=\"\"\n    local boredom_sentences=\"\
    \"\n    local boredom_word=\"\"\n    local boredom_char=\"\"\n    local boredom_sentence=\"\
    \"\n    local boredom_chars=\"\"\n    local boredom_words=\"\"\n    local boredom_sentences=\"\
    \"\n    local boredom_word=\"\"\n    local boredom_char=\"\"\n    local boredom_sentence=\"\
    \"\n    local boredom_chars=\"\"\n    local boredom_words=\"\"\n    local boredom_sentences=\"\
    \"\n    local boredom_word=\"\"\n    local boredom_char=\"\"\n    local boredom_sentence=\"\
    \"\n    local boredom_chars=\"\"\n    local boredom_words=\"\"\n    local boredom_sentences=\"\
    \"\n    local boredom_word=\"\"\n    local boredom_char=\"\"\n    local boredom_sentence=\"\
    \"\n    local boredom_chars=\"\"\n    local boredom_words=\"\"\n    local boredom_sentences=\"\
    \"\n    local boredom_word=\"\"\n    local boredom_char=\"\"\n    local boredom_sentence=\"\
    \"\n    local boredom_chars=\"\"\n    local boredom_words=\"\"\n    local boredom_sentences=\"\
    \"\n    local boredom_word=\"\"\n    local boredom_char=\"\"\n    local boredom_sentence=\"\
    \"\n    local boredom_chars=\"\"\n    local boredom_words=\"\"\n    local boredom_sentences=\"\
    \"\n    local boredom_word=\"\"\n    local boredom_char=\"\"\n    local boredom_sentence=\"\
    \"\n    local boredom_chars=\"\"\n    local boredom_words=\"\"\n    local boredom_sentences=\"\
    \"\n    local boredom_word=\"\"\n    local boredom_char=\"\"\n    local boredom_sentence=\"\
    \"\n    local boredom_chars=\"\"\n    local boredom_words=\"\"\n    local boredom_sentences=\"\
    \"\n    local boredom_word=\"\"\n    local boredom_char=\"\"\n    local boredom_sentence=\"\
    \"\n    local boredom_chars=\"\"\n    local boredom_words=\"\"\n    local boredom_sentences=\"\
    \"\n    local boredom_word=\"\"\n    local boredom_char=\"\"\n    local boredom_sentence\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredoms=0\n\
    \    local delimiters=\".?!\"\n    for delimiter in $delimiters; do\n        local\
    \ delimiter_index=\"${string#$delimiter}\"\n        if [ \"$delimiter_index\"\
    \ == \"$string\" ]; then\n            boredoms=$((boredoms+1))\n        fi\n \
    \   done\n    echo \"$boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredom_words=(\"I\" \"we\" \"us\" \"our\" \"you\" \"\
    your\" \"he\" \"she\" \"it\" \"they\" \"them\" \"their\" \"him\" \"her\" \"its\"\
    \ \"they\" \"their\" \"our\" \"ours\" \"ourselves\" \"you\" \"your\" \"yours\"\
    \ \"yourself\" \"he\" \"him\" \"his\" \"himself\" \"she\" \"her\" \"hers\" \"\
    herself\" \"it\" \"its\" \"itself\" \"they\" \"them\" \"their\" \"theirs\" \"\
    themselves\" \"what\" \"which\" \"who\" \"whom\" \"this\" \"that\" \"these\" \"\
    those\" \"am\" \"is\" \"are\" \"was\" \"were\" \"be\" \"been\" \"being\" \"have\"\
    \ \"has\" \"had\" \"having\" \"do\" \"does\" \"did\" \"doing\" \"a\" \"an\" \"\
    the\" \"and\" \"but\" \"if\" \"or\" \"because\" \"as\" \"until\" \"while\" \"\
    of\" \"at\" \"by\" \"for\" \"with\" \"about\" \"against\" \"between\" \"into\"\
    \ \"through\" \"during\" \"before\" \"after\" \"above\" \"below\" \"to\" \"from\"\
    \ \"up\" \"down\" \"in\" \"out\" \"on\" \"off\" \"over\" \"under\" \"again\" \"\
    further\" \"then\" \"once\" \"here\" \"there\" \"when\" \"where\" \"why\" \"how\"\
    \ \"all\" \"any\" \"both\" \"each\" \"few\" \"more\" \"most\" \"other\" \"some\"\
    \ \"such\" \"no\" \"nor\" \"not\" \"only\" \"own\" \"same\" \"so\" \"than\" \"\
    too\" \"very\" \"can\" \"will\" \"just\" \"don\" \"should\" \"now\")\n  local\
    \ delimiter=$2\n  local boredom_words=(\"I\" \"we\" \"us\" \"our\" \"you\" \"\
    your\" \"he\" \"she\" \"it\" \"they\" \"them\" \"their\" \"him\" \"her\" \"its\"\
    \ \"they\" \"their\" \"our\" \"ours\" \"ourselves\" \"you\" \"your\" \"yours\"\
    \ \"yourself\" \"he\" \"him\" \"his\" \"himself\" \"she\" \"her\" \"hers\" \"\
    herself\" \"it\" \"its\" \"itself\" \"they\" \"them\" \"their\" \"theirs\" \"\
    themselves\" \"what\" \"which\" \"who\" \"whom\" \"this\" \"that\" \"these\" \"\
    those\" \"am\" \"is\" \"are\" \"was\" \"were\" \"be\" \"been\" \"being\" \"have\"\
    \ \"has\" \"had\" \"having\" \"do\" \"does\" \"did\" \"doing\" \"a\" \"an\" \"\
    the\" \"and\" \"but\" \"if\" \"or\" \"because\" \"as\" \"until\" \"while\" \"\
    of\" \"at\" \"by\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgqv7igc1.sh: line 28: unexpected EOF while looking for matching
    `"''

    /tmp/tmpgqv7igc1.sh: line 32: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredoms=0\n\
    \  local delimiters=\".?!\"\n  local delimiters_length=${#delimiters}\n  local\
    \ delimiters_index=0\n  local delimiters_length=$((${#delimiters}-1))\n  local\
    \ delimiters_length=$((${delimiters_length}-1))\n  local delimiters_length=$((${delimiters_length}-1))\n\
    \  local delimiters_length=$((${delimiters_length}-1))\n  local delimiters_length=$((${delimiters_length}-1))\n\
    \  local delimiters_length=$((${delimiters_length}-1))\n  local delimiters_length=$((${delimiters_length}-1))\n\
    \  local delimiters_length=$((${delimiters_length}-1))\n  local delimiters_length=$((${delimiters_length}-1))\n\
    \  local delimiters_length=$((${delimiters_length}-1))\n  local delimiters_length=$((${delimiters_length}-1))\n\
    \  local delimiters_length=$((${delimiters_length}-1))\n  local delimiters_length=$((${delimiters_length}-1))\n\
    \  local delimiters_length=$((${delimiters_length}-1))\n  local delimiters_length=$((${delimiters_length}-1))\n\
    \  local delimiters_length=$((${delimiters_length}-1))\n  local delimiters_length=$((${delimiters_length}-1))\n\
    \  local delimiters_length=$((${delimiters_length}-1))\n  local delimiters_length=$((${delimiters_length}-1))\n\
    \  local delimiters_length=$((${delimiters_length}-1))\n  local delimiters_length=$((${delimiters_length}-1))\n\
    \  local delimiters_length=$((${delimiters_length}-1))\n  local delimiters_length=$((${delimiters_length}-1))\n\
    \  local delimiters_length=$((${delimiters_length}-1))\n  local delimiters_length=$((${delimiters_length}-1))\n\
    \  local delimiters_length=$((${delimiters_length}-1))\n  local delimiters_length=$((${delimiters_length}-1))\n\
    \  local delimiters_length=$((${delimiters_length}-1))\n  local delimiters_length=$((${delimiters_length}-1))\n\
    \  local delimiters_length=$((${delimiters_length}-1))\n  local delimiters_length=$((${delimiters_length}-1))\n\
    \  local delimiters_length=$((${delimiters_length}-1))\n  local delimiters_length=$((${delimiters_length}-1))\n\
    \  local delimiters_length=$((${delimiters_length}\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfjtls11o.sh: line 47: unexpected EOF while looking for matching
    `)''

    /tmp/tmpfjtls11o.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredom_count=0\n\
    \    local boredom_string=\"\"\n    local delimiter=\".\"\n    local delimiters=\"\
    \ ?!\"\n    local delimiter_count=0\n    local delimiter_index=0\n    local delimiter_indexes=()\n\
    \    local delimiter_indexes_count=0\n    local delimiter_indexes_string=\"\"\n\
    \    local delimiter_indexes_string_count=0\n    local delimiter_indexes_string_count=0\n\
    \    local delimiter_indexes_string_count_string=\"\"\n    local delimiter_indexes_string_count_string_count=0\n\
    \    local delimiter_indexes_string_count_string_count=0\n    local delimiter_indexes_string_count_string_count_string=\"\
    \"\n    local delimiter_indexes_string_count_string_count_string_count=0\n   \
    \ local delimiter_indexes_string_count_string_count_string_count=0\n    local\
    \ delimiter_indexes_string_count_string_count_string_count=0\n    local delimiter_indexes_string_count_string_count_string_count=0\n\
    \    local delimiter_indexes_string_count_string_count_string_count=0\n    local\
    \ delimiter_indexes_string_count_string_count_string_count=0\n    local delimiter_indexes_string_count_string_count_string_count=0\n\
    \    local delimiter_indexes_string_count_string_count_string_count=0\n    local\
    \ delimiter_indexes_string_count_string_count_string_count=0\n    local delimiter_indexes_string_count_string_count_string_count=0\n\
    \    local delimiter_indexes_string_count_string_count_string_count=0\n    local\
    \ delimiter_indexes_string_count_string_count_string_count=0\n    local delimiter_indexes_string_count_string_count_string_count=0\n\
    \    local delimiter_indexes_string_count_string_count_string_count=0\n    local\
    \ delimiter_indexes_string_count_string_count_string_count=0\n    local delimiter_indexes_string_count_string_count_string_count=0\n\
    \    local delimiter_indexes_string_count_string_count_string_count=0\n    local\
    \ delimiter_indexes_string_count_string_count_string_count=0\n    local delimiter_indexes_string_count_string_count_string_count=0\n\
    \    local delimiter_indexes_string_count_string_count_string_count=0\n    local\
    \ delimiter_indexes_string_count_string_count_string_count=0\n    local delimiter_indexes_string_count_string_count_string_count=0\n\
    \    local delimiter_indexes_string_count_string_count_string_count=0\n    local\
    \ delimiter_indexes_string_count_string_count_string_count=0\n    local delimiter_indexes_string_count_string_count_string_count=0\n\
    \    local delimiter_indexes_string_count_string_count_string_count=0\n    local\
    \ delimiter_indexes_string_count_string_count_string_count=0\n    local delimiter_indexes_string_count_string_count_string_count=0\n\
    \    local delimiter_indexes_string_count_string_count_string_count=0\n    \n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiters=\".?!\"\n  local delimiters_count=${#delimiters}\n  local delimiters_index=0\n\
    \  local delimiters_length=0\n  local delimiters_char\n  local delimiters_char_length\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n  local delimiters_char_length_index\n\
    \  local delimiters_char_length_count\n\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiters=\".?!\"\n  local word\n  for word in $input; do\n    if [[ \"$word\"\
    \ == I* ]]; then\n      output=$((output+1))\n    fi\n  done\n  echo \"$output\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=\"$1\"\n    local output=0\n\
    \    local delimiter='.'\n    local boredom_word='I'\n    local boredom_count=0\n\
    \    local boredom_char_count=0\n    local boredom_word_count=0\n    local boredom_word_char_count=0\n\
    \    local boredom_word_count2=0\n    local boredom_word_char_count2=0\n    local\
    \ boredom_word_count3=0\n    local boredom_word_char_count3=0\n    local boredom_word_count4=0\n\
    \    local boredom_word_char_count4=0\n    local boredom_word_count5=0\n    local\
    \ boredom_word_char_count5=0\n    local boredom_word_count6=0\n    local boredom_word_char_count6=0\n\
    \    local boredom_word_count7=0\n    local boredom_word_char_count7=0\n    local\
    \ boredom_word_count8=0\n    local boredom_word_char_count8=0\n    local boredom_word_count9=0\n\
    \    local boredom_word_char_count9=0\n    local boredom_word_count10=0\n    local\
    \ boredom_word_char_count10=0\n    local boredom_word_count11=0\n    local boredom_word_char_count11=0\n\
    \    local boredom_word_count12=0\n    local boredom_word_char_count12=0\n   \
    \ local boredom_word_count13=0\n    local boredom_word_char_count13=0\n    local\
    \ boredom_word_count14=0\n    local boredom_word_char_count14=0\n    local boredom_word_count15=0\n\
    \    local boredom_word_char_count15=0\n    local boredom_word_count16=0\n   \
    \ local boredom_word_char_count16=0\n    local boredom_word_count17=0\n    local\
    \ boredom_word_char_count17=0\n    local boredom_word_count18=0\n    local boredom_word_char_count18=0\n\
    \    local boredom_word_count19=0\n    local boredom_word_char_count19=0\n   \
    \ local boredom_word_count20=0\n    local boredom_word_char_count20=0\n    local\
    \ boredom_word_count21=0\n    local boredom_word_char_count21=0\n    local boredom_word_count22=0\n\
    \    local boredom_word_char_count22=0\n    local boredom_word_count23=0\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredoms=0\n\
    \  local delimiter=\".\"\n  local delimiters=\"?!.\"\n  local delimiters_count=${#delimiters[@]}\n\
    \  local delimiters_index=0\n  local delimiters_string=\"\"\n  local delimiters_string_count=0\n\
    \  while [[ ${delimiters_count} -gt 0 ]]; do\n    delimiters_string_count=$((delimiters_string_count+1))\n\
    \    delimiters_string=${delimiters[${delimiters_index}]}\n    delimiters_index=$((delimiters_index+1))\n\
    \    delimiters_string=${delimiters_string//${delimiters_string}}\n    delimiters_string=${delimiters_string//\\\
    //\\\\/}\n    delimiters_string=${delimiters_string//\\//\\\\/}\n    delimiters_string=${delimiters_string//\\\
    //\\\\/}\n    delimiters_string=${delimiters_string//\\//\\\\/}\n    delimiters_string=${delimiters_string//\\\
    //\\\\/}\n    delimiters_string=${delimiters_string//\\//\\\\/}\n    delimiters_string=${delimiters_string//\\\
    //\\\\/}\n    delimiters_string=${delimiters_string//\\//\\\\/}\n    delimiters_string=${delimiters_string//\\\
    //\\\\/}\n    delimiters_string=${delimiters_string//\\//\\\\/}\n    delimiters_string=${delimiters_string//\\\
    //\\\\/}\n    delimiters_string=${delimiters_string//\\//\\\\/}\n    delimiters_string=${delimiters_string//\\\
    //\\\\/}\n    delimiters_string=${delimiters_string//\\//\\\\/}\n    delimiters_string=${delimiters_string//\\\
    //\\\\/}\n    delimiters_string=${delimiters_string//\\//\\\\/}\n    delimiters_string=${delimiters_string//\\\
    //\\\\/}\n    delimiters_string=${delimiters_string//\\//\\\\/}\n    delimiters_string=${delimiters_string//\\\
    //\\\\/}\n    delimiters_string=${delimiters_string//\\//\\\\/}\n    delimiters_string=${delimiters_string//\\\
    //\\\\/}\n    delimiters_string=${delimiters_string//\\//\\\\/}\n    delimiters_string=${delimiters_string//\\\
    //\\\\/}\n    delimiters_string=${delimiters_string//\\//\\\\/}\n    delimiters_string=${delimiters_string//\\\
    //\\\\/}\n    delimiters_string=${\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphf_ltbgj.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiters=\" ?!\"\
    \n  local delimiter_count=0\n  local delimiter_index=0\n  local delimiter_indexes=()\n\
    \  local delimiter_indexes_count=()\n  local delimiter_indexes_words=()\n  local\
    \ delimiter_indexes_words_count=()\n  local delimiter_indexes_words_in_string=()\n\
    \  local delimiter_indexes_words_in_string_count=()\n  local delimiter_indexes_words_in_string_words=()\n\
    \  local delimiter_indexes_words_in_string_words_count=()\n  local delimiter_indexes_words_in_string_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count_words=()\n  local delimiter_indexes_words_in_string_words_count_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_in_string_words_count_words_count_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_in_string_words_count_words_count_words_count_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_in_string_words_count_words_count_words_count_words_count_words_count=()\n\
    \  local delimiter_indexes_words_in_string_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_in_string_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_in_string_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_in_string_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_in_string_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_in_string_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_in_string_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_in_string_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words=()\n\
    \  local delimiter_indexes_words_in_string_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_words_count_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_prefix=\"I\"\n  local boredom_suffix=\"!\"\n\
    \  local boredom_delimiter=\"?\"\n  local boredom_words=()\n  local boredom_count=0\n\
    \  local boredom_word\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local bo\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredom_count=0\n\
    \    local boredom_word=\"I\"\n    local delimiter=\".\"\n    local delimiters=\"\
    \ ?!\"\n    local delimiter_count=0\n    local delimiter_index=0\n    local delimiter_indexes=()\n\
    \    local delimiter_indexes_count=0\n    local delimiter_indexes_words=()\n \
    \   local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=0\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredoms=0\n\
    \    local delimiter=\".\"\n    local delimiters=\"?!.\"\n    local delimiter_count=0\n\
    \    local delimiter_counts=0\n    local delimiter_counts_total=0\n    local delimiter_counts_total_boredoms=0\n\
    \    local delimiter_counts_total_boredoms_boredoms=0\n    local delimiter_counts_total_boredoms_boredoms_boredoms=0\n\
    \    local delimiter_counts_total_boredoms_boredoms_boredoms_boredoms=0\n    local\
    \ delimiter_counts_total_boredoms_boredoms_boredoms_boredoms_boredoms=0\n    local\
    \ delimiter_counts_total_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=0\n\
    \    local delimiter_counts_total_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=0\n\
    \    local delimiter_counts_total_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=0\n\
    \    local delimiter_counts_total_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=0\n\
    \    local delimiter_counts_total_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=0\n\
    \    local delimiter_counts_total_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=0\n\
    \    local delimiter_counts_total_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms=0\n\
    \    local delimiter_counts_total_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_boredoms_bo\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiter_count=0\n\
    \  local delimiter_index=0\n  local delimiter_index2=0\n  local delimiter_index3=0\n\
    \  local delimiter_index4=0\n  local delimiter_index5=0\n  local delimiter_index6=0\n\
    \  local delimiter_index7=0\n  local delimiter_index8=0\n  local delimiter_index9=0\n\
    \  local delimiter_index10=0\n  local delimiter_index11=0\n  local delimiter_index12=0\n\
    \  local delimiter_index13=0\n  local delimiter_index14=0\n  local delimiter_index15=0\n\
    \  local delimiter_index16=0\n  local delimiter_index17=0\n  local delimiter_index18=0\n\
    \  local delimiter_index19=0\n  local delimiter_index20=0\n  local delimiter_index21=0\n\
    \  local delimiter_index22=0\n  local delimiter_index23=0\n  local delimiter_index24=0\n\
    \  local delimiter_index25=0\n  local delimiter_index26=0\n  local delimiter_index27=0\n\
    \  local delimiter_index28=0\n  local delimiter_index29=0\n  local delimiter_index30=0\n\
    \  local delimiter_index31=0\n  local delimiter_index32=0\n  local delimiter_index33=0\n\
    \  local delimiter_index34=0\n  local delimiter_index35=0\n  local delimiter_index36=0\n\
    \  local delimiter_index37=0\n  local delimiter_index38=0\n  local delimiter_index39=0\n\
    \  local delimiter_index40=0\n  local delimiter_index41=0\n  local delimiter_index42=0\n\
    \  local delimiter_index43=0\n  local delimiter_index44=0\n  local delimiter_index45=0\n\
    \  local delimiter_index46=0\n  local delimiter_index47=0\n  local delimiter_index48=0\n\
    \  local delimiter_index49=0\n  local delimiter_index50=0\n  local delimiter_index51=0\n\
    \  local delimiter_index52=0\n  local delimiter_index53=0\n  local delimiter_index54=0\n\
    \  local delimiter_index55=0\n  local delimiter_index56=0\n  local delimiter_index57=0\n\
    \  local delimiter_index58=0\n  local delimiter_index59=0\n  local delimiter_index60=0\n\
    \  local delimiter_index61=0\n  local delimiter_index62=0\n  local delimiter_index63=0\n\
    \  local delimiter_index64=0\n  local delimiter_index65=0\n  local delimiter_index66=0\n\
    \  local delimiter_index67=0\n  local delimiter_index68=0\n  \n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_word=\"I\"\n  local boredom_count=0\n  local\
    \ boredom_sentence=\"\"\n  local boredom_sentence_count=0\n  local boredom_sentence_word=\"\
    \"\n  local boredom_sentence_word_count=0\n  local boredom_sentence_word_length=0\n\
    \  local boredom_sentence_word_length_count=0\n  local boredom_sentence_word_length_length=0\n\
    \  local boredom_sentence_word_length_length_count=0\n  local boredom_sentence_word_length_length_length_count=0\n\
    \  local boredom_sentence_word_length_length_length_count=0\n  local boredom_sentence_word_length_length_length_length_count=0\n\
    \  local boredom_sentence_word_length_length_length_length_count_count=0\n  local\
    \ boredom_sentence_word_length_length_length_length_count_count_count=0\n  local\
    \ boredom_sentence_word_length_length_length_count_count_count_count=0\n  local\
    \ boredom_sentence_word_length_length_length_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_length_count_count_count_count_count_count_count_count_count_count_count_count=0\n\
    \  local boredom_sentence_word_length_length_\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=()\n  local delimiter=\".\"\n  local delimiters=\"? !\"\
    \n  local delimiters_count=${#delimiters[@]}\n  local delimiters_words=${delimiters[@]}\n\
    \  local delimiters_words_count=${#delimiters_words[@]}\n  local delimiters_words_count=${#delimiters_words[@]}\n\
    \  local delimiters_words_words_count=${#delimiters_words[@]}\n  local delimiters_words_words_words_count=${#delimiters_words[@]}\n\
    \  local delimiters_words_words_words_words_count=${#delimiters_words[@]}\n  local\
    \ delimiters_words_words_words_words_words_count=${#delimiters_words[@]}\n  local\
    \ delimiters_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local boredoms=0\n  local\
    \ delimiter=$2\n  local delimiter_count=0\n  local delimiter_index=0\n  local\
    \ delimiter_index2=0\n  local delimiter_index3=0\n  local delimiter_index4=0\n\
    \  local delimiter_index5=0\n  local delimiter_index6=0\n  local delimiter_index7=0\n\
    \  local delimiter_index8=0\n  local delimiter_index9=0\n  local delimiter_index10=0\n\
    \  local delimiter_index11=0\n  local delimiter_index12=0\n  local delimiter_index13=0\n\
    \  local delimiter_index14=0\n  local delimiter_index15=0\n  local delimiter_index16=0\n\
    \  local delimiter_index17=0\n  local delimiter_index18=0\n  local delimiter_index19=0\n\
    \  local delimiter_index20=0\n  local delimiter_index21=0\n  local delimiter_index22=0\n\
    \  local delimiter_index23=0\n  local delimiter_index24=0\n  local delimiter_index25=0\n\
    \  local delimiter_index26=0\n  local delimiter_index27=0\n  local delimiter_index28=0\n\
    \  local delimiter_index29=0\n  local delimiter_index30=0\n  local delimiter_index31=0\n\
    \  local delimiter_index32=0\n  local delimiter_index33=0\n  local delimiter_index34=0\n\
    \  local delimiter_index35=0\n  local delimiter_index36=0\n  local delimiter_index37=0\n\
    \  local delimiter_index38=0\n  local delimiter_index39=0\n  local delimiter_index40=0\n\
    \  local delimiter_index41=0\n  local delimiter_index42=0\n  local delimiter_index43=0\n\
    \  local delimiter_index44=0\n  local delimiter_index45=0\n  local delimiter_index46=0\n\
    \  local delimiter_index47=0\n  local delimiter_index48=0\n  local delimiter_index49=0\n\
    \  local delimiter_index50=0\n  local delimiter_index51=0\n  local delimiter_index52=0\n\
    \  local delimiter_index53=0\n  local delimiter_index54=0\n  local delimiter_index55=0\n\
    \  local delimiter_index56=0\n  local delimiter_index57=0\n  local delimiter_index58=0\n\
    \  local delimiter_index59=0\n  local delimiter_index60=0\n  local delimiter_index61=0\n\
    \  local delimiter_index62=0\n  local delimiter_index63=0\n  local delimiter_index64=0\n\
    \  local delimiter_index65=0\n  local delimiter_index66=0\n  local delimiter_index67=0\n\
    \  local delimiter_index68=0\n  local delimiter_index69=0\n  local delimiter_index\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=()\n  local boredom_sentences=()\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local\
    \ boredom_word\n  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_word\n  local boredom_sentence\n  local boredom_word\n  local\
    \ boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local\
    \ boredom_word\n  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_word\n  local boredom_sentence\n  local boredom_word\n  local\
    \ boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local\
    \ boredom_word\n  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_word\n  local boredom_sentence\n  local boredom_word\n  local\
    \ boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local\
    \ boredom_word\n  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_word\n  local boredom_sentence\n  local boredom_word\n  local\
    \ boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n  local\
    \ boredom_word\n  local boredom_sentence\n  local boredom_word\n  local boredom_sentence\n\
    \  local boredom_word\n  local boredom_sentence\n  local boredom_word\n  local\
    \ boredom_sentence\n  local bore\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredoms=$(echo \"$input\" | sed -n 's/^[Ii]\\?.*\\.\\\
    ?$/\\1/p')\n  local boredom_count=0\n  for boredom in $boredoms; do\n    boredom_count=$((boredom_count\
    \ + 1))\n  done\n  echo \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 21: invalid reference \1 on `s'' command''s
    RHS

    sed: -e expression #1, char 21: invalid reference \1 on `s'' command''s RHS

    sed: -e expression #1, char 21: invalid reference \1 on `s'' command''s RHS

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter='.'\n  local boredom_word='I'\n\n  while read -r line; do\n    if\
    \ [[ \"$line\" =~ $delimiter ]]; then\n      if [[ \"$line\" =~ $boredom_word\
    \ ]]; then\n        output=$((output+1))\n      fi\n    fi\n  done < <(echo \"\
    $input\")\n\n  echo \"$output\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredoms=0\n\
    \  local delimiter=\".\"\n  local delimiters=\" ?! .\"\n  local delimiters_array=($delimiters)\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiters_array_length=${#delimiters_array[@]}\n  local delimiters_array_length=${#delimiters_array\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8gbl3u_b.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredoms=0\n\
    \    local delimiter=\".\"\n    local delimiter2=\"?\"\n    local delimiter3=\"\
    !\"\n    local delimiter4=\";\"\n    local delimiter5=\":\"\n    local delimiter6=\"\
    ,\"\n    local delimiter7=\";\"\n    local delimiter8=\":\"\n    local delimiter9=\"\
    ;\"\n    local delimiter10=\";\"\n    local delimiter11=\";\"\n    local delimiter12=\"\
    ;\"\n    local delimiter13=\";\"\n    local delimiter14=\";\"\n    local delimiter15=\"\
    ;\"\n    local delimiter16=\";\"\n    local delimiter17=\";\"\n    local delimiter18=\"\
    ;\"\n    local delimiter19=\";\"\n    local delimiter20=\";\"\n    local delimiter21=\"\
    ;\"\n    local delimiter22=\";\"\n    local delimiter23=\";\"\n    local delimiter24=\"\
    ;\"\n    local delimiter25=\";\"\n    local delimiter26=\";\"\n    local delimiter27=\"\
    ;\"\n    local delimiter28=\";\"\n    local delimiter29=\";\"\n    local delimiter30=\"\
    ;\"\n    local delimiter31=\";\"\n    local delimiter32=\";\"\n    local delimiter33=\"\
    ;\"\n    local delimiter34=\";\"\n    local delimiter35=\";\"\n    local delimiter36=\"\
    ;\"\n    local delimiter37=\";\"\n    local delimiter38=\";\"\n    local delimiter39=\"\
    ;\"\n    local delimiter40=\";\"\n    local delimiter41=\";\"\n    local delimiter42=\"\
    ;\"\n    local delimiter43=\";\"\n    local delimiter44=\";\"\n    local delimiter45=\"\
    ;\"\n    local delimiter46=\";\"\n    local delimiter47=\";\"\n    local delimiter48=\"\
    ;\"\n    local delimiter49=\";\"\n    local delimiter50=\";\"\n    local delimiter51=\"\
    ;\"\n    local delimiter52=\";\"\n    local delimiter53=\";\"\n    local delimiter54=\"\
    ;\"\n    local delimiter55=\";\"\n    local delimiter56=\";\"\n    local delimiter57=\"\
    ;\"\n    local delimiter58=\";\"\n    local delimiter59=\";\"\n    local delimiter60=\"\
    ;\"\n    local delimiter61=\";\"\n    local delimiter62=\";\"\n    local delimiter63=\"\
    ;\"\n    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=()\n  local boredom_sentences=()\n  local boredom_sentence_count=0\n\
    \  local boredom_sentence_words=()\n  local boredom_sentence_boredom_words=()\n\
    \  local boredom_sentence_boredom_count=0\n  local boredom_sentence_boredom_words=()\n\
    \  local boredom_sentence_boredom_boredom_words=()\n  local boredom_sentence_boredom_boredom_count=0\n\
    \  local boredom_sentence_boredom_boredom_words=()\n  local boredom_sentence_boredom_boredom_boredom_words=()\n\
    \  local boredom_sentence_boredom_boredom_boredom_boredom_words=()\n  local boredom_sentence_boredom_boredom_boredom_boredom_words=()\n\
    \  local boredom_sentence_boredom_boredom_boredom_boredom_boredom_words=()\n \
    \ local boredom_sentence_boredom_boredom_boredom_boredom_boredom_words=()\n  local\
    \ boredom_sentence_boredom_boredom_boredom_boredom_boredom_boredom_words=()\n\
    \  local boredom_sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_words=()\n\
    \  local boredom_sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_words=()\n\
    \  local boredom_sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_words=()\n\
    \  local boredom_sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_words=()\n\
    \  local boredom_sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_words=()\n\
    \  local boredom_sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_words=()\n\
    \  local boredom_sentence_boredom_bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiters=\".?!\"\n  local delimiters_count=${#delimiters}\n  local delimiter\n\
    \  local word\n  local i\n  local j\n  local wordcount\n  local wordcount2\n \
    \ local wordcount3\n  local wordcount4\n  local wordcount5\n  local wordcount6\n\
    \  local wordcount7\n  local wordcount8\n  local wordcount9\n  local wordcount10\n\
    \  local wordcount11\n  local wordcount12\n  local wordcount13\n  local wordcount14\n\
    \  local wordcount15\n  local wordcount16\n  local wordcount17\n  local wordcount18\n\
    \  local wordcount19\n  local wordcount20\n  local wordcount21\n  local wordcount22\n\
    \  local wordcount23\n  local wordcount24\n  local wordcount25\n  local wordcount26\n\
    \  local wordcount27\n  local wordcount28\n  local wordcount29\n  local wordcount30\n\
    \  local wordcount31\n  local wordcount32\n  local wordcount33\n  local wordcount34\n\
    \  local wordcount35\n  local wordcount36\n  local wordcount37\n  local wordcount38\n\
    \  local wordcount39\n  local wordcount40\n  local wordcount41\n  local wordcount42\n\
    \  local wordcount43\n  local wordcount44\n  local wordcount45\n  local wordcount46\n\
    \  local wordcount47\n  local wordcount48\n  local wordcount49\n  local wordcount50\n\
    \  local wordcount51\n  local wordcount52\n  local wordcount53\n  local wordcount54\n\
    \  local wordcount55\n  local wordcount56\n  local wordcount57\n  local wordcount58\n\
    \  local wordcount59\n  local wordcount60\n  local wordcount61\n  local wordcount62\n\
    \  local wordcount63\n  local wordcount64\n  local wordcount65\n  local wordcount66\n\
    \  local wordcount67\n  local wordcount68\n  local wordcount69\n  local wordcount70\n\
    \  local wordcount71\n  local wordcount72\n  local wordcount73\n  local wordcount74\n\
    \  local wordcount75\n  local wordcount76\n  local wordcount77\n  local wordcount78\n\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=$1\n    local output=0\n  \
    \  for word in $input; do\n        if [[ \"$word\" == \"I\" ]]; then\n       \
    \     let output+=1\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiters=\" ?!.\"\
    \n  local delimiters_array=(${delimiters//,/ })\n  local delimiters_array_length=${#delimiters_array[@]}\n\
    \  local delimiter_index=0\n  local delimiter_indexes=()\n  local delimiter_indexes_length=()\n\
    \  local delimiter_indexes_word=()\n  local delimiter_indexes_word_length=()\n\
    \  local delimiter_indexes_word_count=()\n  local delimiter_indexes_word_count_length=()\n\
    \  local delimiter_indexes_word_count_index=()\n  local delimiter_indexes_word_count_index_length=()\n\
    \  local delimiter_indexes_word_count_index_count=()\n  local delimiter_indexes_word_count_index_count_length=()\n\
    \  local delimiter_indexes_word_count_index_count_index=()\n  local delimiter_indexes_word_count_index_count_index_length=()\n\
    \  local delimiter_indexes_word_count_index_count_index_count=()\n  local delimiter_indexes_word_count_index_count_index_count_length=()\n\
    \  local delimiter_indexes_word_count_index_count_index_count_index=()\n  local\
    \ delimiter_indexes_word_count_index_count_index_count_index_length=()\n  local\
    \ delimiter_indexes_word_count_index_count_index_count_index_count=()\n  local\
    \ delimiter_indexes_word_count_index_count_index_count_index_count_length=()\n\
    \  local delimiter_indexes_word_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_word_count_index_count_index_count_index_count_index_length=()\n\
    \  local delimiter_indexes_word_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_word_count_index_count_index_count_index_count_index_count_length=()\n\
    \  local delimiter_indexes_word_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_word_count_index_count_index_count_index_count_index_count_index_length=()\n\
    \  local delimiter_indexes_word_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_word_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \  local delimiter_indexes_word_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_word_count_index_count_index_count_index_count_index_count_index_count_index_length=()\n\
    \  local delimiter_indexes_word_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_word_count_index_count_index_count_index_count_index_count_index_count_index_count_length=()\n\
    \  local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local boredoms=0\n  local\
    \ delimiter=$2\n  local word\n  local i\n  local j\n  local delimiter_count\n\
    \  local delimiter_index\n  local delimiter_index2\n  local delimiter_index3\n\
    \  local delimiter_index4\n  local delimiter_index5\n  local delimiter_index6\n\
    \  local delimiter_index7\n  local delimiter_index8\n  local delimiter_index9\n\
    \  local delimiter_index10\n  local delimiter_index11\n  local delimiter_index12\n\
    \  local delimiter_index13\n  local delimiter_index14\n  local delimiter_index15\n\
    \  local delimiter_index16\n  local delimiter_index17\n  local delimiter_index18\n\
    \  local delimiter_index19\n  local delimiter_index20\n  local delimiter_index21\n\
    \  local delimiter_index22\n  local delimiter_index23\n  local delimiter_index24\n\
    \  local delimiter_index25\n  local delimiter_index26\n  local delimiter_index27\n\
    \  local delimiter_index28\n  local delimiter_index29\n  local delimiter_index30\n\
    \  local delimiter_index31\n  local delimiter_index32\n  local delimiter_index33\n\
    \  local delimiter_index34\n  local delimiter_index35\n  local delimiter_index36\n\
    \  local delimiter_index37\n  local delimiter_index38\n  local delimiter_index39\n\
    \  local delimiter_index40\n  local delimiter_index41\n  local delimiter_index42\n\
    \  local delimiter_index43\n  local delimiter_index44\n  local delimiter_index45\n\
    \  local delimiter_index46\n  local delimiter_index47\n  local delimiter_index48\n\
    \  local delimiter_index49\n  local delimiter_index50\n  local delimiter_index51\n\
    \  local delimiter_index52\n  local delimiter_index53\n  local delimiter_index54\n\
    \  local delimiter_index55\n  local delimiter_index56\n  local delimiter_index57\n\
    \  local delimiter_index58\n  local delimiter_index59\n  local delimiter_index60\n\
    \  local delimiter_index61\n  local delimiter_index62\n  local delimiter_index63\n\
    \  local delimiter_index64\n  local delimiter_index65\n  local delimiter_index66\n\
    \  local delimiter_index67\n  local delimiter_index68\n  local delimiter_index69\n\
    \  local delimiter_index70\n  local delimiter_index71\n  local delimiter_index72\n\
    \  local delimiter_index73\n  local delimiter_index74\n  local delimiter_index75\n\
    \  local delimiter_index76\n  local delimiter_index77\n  local delimiter_index78\n\
    \  local delimiter_index79\n  local \n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredom_count=0\n\
    \    local boredom_word=\"I\"\n    local boredom_sentence=\".\"\n    local boredom_sentence_count=0\n\
    \    local boredom_sentence_word=\".\"\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n    local boredom_sentence_word_count=0\n\
    \    local boredom_sentence_word_count=0\n\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiters=\" ?!\"\
    \n  local delimiter_count=0\n  local delimiter_index=0\n  local delimiter_indexes=()\n\
    \  local delimiter_indexes_count=()\n  local delimiter_indexes_word=()\n  local\
    \ delimiter_indexes_word_count=()\n  local delimiter_indexes_word_index=()\n \
    \ local delimiter_indexes_word_index_count=()\n  local delimiter_indexes_word_index_word=()\n\
    \  local delimiter_indexes_word_index_word_count=()\n  local delimiter_indexes_word_index_word_index=()\n\
    \  local delimiter_indexes_word_index_word_index_count=()\n  local delimiter_indexes_word_index_word_index_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count=()\n  local delimiter_indexes_word_index_word_index_word_index=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word=()\n  local delimiter_indexes_word_index_word_index_word_count_word_count=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index=()\n  local\
    \ delimiter_indexes_word_index_word_index_word_count_word_index_word=()\n  local\
    \ delimiter_indexes_word_index_word_index_word_count_word_index_word_count=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_index=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_index=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_count_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_index_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_index_word_count_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_index_word_count_word_index=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_index_word_count_word_count_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_index_word_count_word_count_word_index=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_index_word_count_word_count_word_count_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_index_word_count_word_count_word_index_word=()\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=\"$1\"\n    local output=0\n\
    \    local delimiter=\".\"\n    local boredom_prefix=\"I\"\n    local boredom_suffix=\"\
    !\"\n    local boredom_delimiter=\"?\"\n    local boredom_count=0\n    local boredom_words=()\n\
    \    local boredom_word=''\n    local boredom_word_count=0\n    local boredom_word_index=0\n\
    \    local boredom_word_length=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_word_length_count=0\n    local boredom_word_length_index=0\n    local\
    \ boredom_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local word\n  local count\n  while read -r word; do\n    count=0\n\
    \    for char in $word; do\n      if [[ \"$char\" == \"$delimiter\" ]]; then\n\
    \        count=$((count+1))\n      fi\n    done\n    if [ \"$count\" -eq \"1\"\
    \ ]; then\n      output=$((output+1))\n    fi\n  done < <(echo \"$input\")\n \
    \ echo \"$output\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredoms=()\n  local word\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredoms=0\n\
    \  local delimiters=\".?!\"\n  local delimiters_length=${#delimiters}\n  local\
    \ delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \  local delimiters_length=${#delimiters}\n  local delimiters_length=${#delimiters}\n\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredom_words=(\"I\" \"am\" \"are\" \"you\" \"your\" \"\
    it\" \"its\" \"that\" \"this\" \"that\" \"was\" \"were\" \"was\" \"is\" \"are\"\
    \ \"was\" \"were\" \"you\" \"do\" \"do\" \"did\" \"did\" \"do\" \"did\" \"do\"\
    \ \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"\
    did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\"\
    \ \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"\
    do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\"\
    \ \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"\
    did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\"\
    \ \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"\
    do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\"\
    \ \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"\
    did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\"\
    \ \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"\
    do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\"\
    \ \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"\
    did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\"\
    \ \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"\
    do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\"\
    \ \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"\
    did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\"\
    \ \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"\
    do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"do\"\
    \ \"did\" \"do\" \"did\" \"do\" \"did\" \"do\" \"did\" \"\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppjrq598n.sh: line 26: unexpected EOF while looking for matching
    `"''

    /tmp/tmppjrq598n.sh: line 30: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_prefix=\"I\"\n  local boredom_suffix=\"!\"\n\
    \  local boredom_delimiter=\"?\"\n  local boredom_count=0\n  local boredom_words=\"\
    \"\n  local boredom_word=\"\"\n  local boredom_word_count=0\n  local boredom_word_prefix=\"\
    \"\n  local boredom_word_suffix=\"\"\n  local boredom_word_delimiter=\"\"\n  local\
    \ boredom_word_count=0\n  local boredom_word_prefix=\"\"\n  local boredom_word_suffix=\"\
    \"\n  local boredom_word_delimiter=\"\"\n  local boredom_word_count=0\n  local\
    \ boredom_word_prefix=\"\"\n  local boredom_word_suffix=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_prefix=\"\"\n  local boredom_word_suffix=\"\
    \"\n  local boredom_word_delimiter=\"\"\n  local boredom_word_count=0\n  local\
    \ boredom_word_prefix=\"\"\n  local boredom_word_suffix=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_prefix=\"\"\n  local boredom_word_suffix=\"\
    \"\n  local boredom_word_delimiter=\"\"\n  local boredom_word_count=0\n  local\
    \ boredom_word_prefix=\"\"\n  local boredom_word_suffix=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_prefix=\"\"\n  local boredom_word_suffix=\"\
    \"\n  local boredom_word_delimiter=\"\"\n  local boredom_word_count=0\n  local\
    \ boredom_word_prefix=\"\"\n  local boredom_word_suffix=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_prefix=\"\"\n  local boredom_word_suffix=\"\
    \"\n  local boredom_word_delimiter=\"\"\n  local boredom_word_count=0\n  local\
    \ boredom_word_prefix=\"\"\n  local boredom_word_suffix=\"\"\n  local boredom_word_delimiter=\"\
    \"\n  local boredom_word_count=0\n  local boredom_word_prefix=\"\"\n  local boredom_word_suffix=\"\
    \"\n  local boredom_word_delimiter=\"\"\n  local boredom_word_count=0\n  \n}\n\
    \ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local words=$1\n    local boredoms=0\n\
    \    local word\n    for word in $words; do\n        if [[ \"$word\" == \"I\"\
    \ ]]; then\n            boredoms+=1\n        fi\n    done\n    echo \"$boredoms\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local word=$1\n  local boredoms=0\n  local\
    \ delimiter=$2\n  local delimiter_count=0\n  local delimiter_index=0\n  local\
    \ delimiter_index2=0\n  local delimiter_index3=0\n  local delimiter_index4=0\n\
    \  local delimiter_index5=0\n  local delimiter_index6=0\n  local delimiter_index7=0\n\
    \  local delimiter_index8=0\n  local delimiter_index9=0\n  local delimiter_index10=0\n\
    \  local delimiter_index11=0\n  local delimiter_index12=0\n  local delimiter_index13=0\n\
    \  local delimiter_index14=0\n  local delimiter_index15=0\n  local delimiter_index16=0\n\
    \  local delimiter_index17=0\n  local delimiter_index18=0\n  local delimiter_index19=0\n\
    \  local delimiter_index20=0\n  local delimiter_index21=0\n  local delimiter_index22=0\n\
    \  local delimiter_index23=0\n  local delimiter_index24=0\n  local delimiter_index25=0\n\
    \  local delimiter_index26=0\n  local delimiter_index27=0\n  local delimiter_index28=0\n\
    \  local delimiter_index29=0\n  local delimiter_index30=0\n  local delimiter_index31=0\n\
    \  local delimiter_index32=0\n  local delimiter_index33=0\n  local delimiter_index34=0\n\
    \  local delimiter_index35=0\n  local delimiter_index36=0\n  local delimiter_index37=0\n\
    \  local delimiter_index38=0\n  local delimiter_index39=0\n  local delimiter_index40=0\n\
    \  local delimiter_index41=0\n  local delimiter_index42=0\n  local delimiter_index43=0\n\
    \  local delimiter_index44=0\n  local delimiter_index45=0\n  local delimiter_index46=0\n\
    \  local delimiter_index47=0\n  local delimiter_index48=0\n  local delimiter_index49=0\n\
    \  local delimiter_index50=0\n  local delimiter_index51=0\n  local delimiter_index52=0\n\
    \  local delimiter_index53=0\n  local delimiter_index54=0\n  local delimiter_index55=0\n\
    \  local delimiter_index56=0\n  local delimiter_index57=0\n  local delimiter_index58=0\n\
    \  local delimiter_index59=0\n  local delimiter_index60=0\n  local delimiter_index61=0\n\
    \  local delimiter_index62=0\n  local delimiter_index63=0\n  local delimiter_index64=0\n\
    \  local delimiter_index65=0\n  local delimiter_index66=0\n  local delimiter_index67=0\n\
    \  local delimiter_index68=0\n  local delimiter_index69=0\n  local delimiter_index\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=\"$1\"\n    local output=0\n\
    \    local delimiter=\".\"\n    local boredom_word=\"I\"\n    local boredom_count=0\n\
    \    local boredom_char_count=0\n    local boredom_word_count=0\n    local boredom_char_count=0\n\
    \    local boredom_word_char_count=0\n    local boredom_word_char_count=0\n  \
    \  local boredom_word_char_count=0\n    local boredom_word_char_count=0\n    local\
    \ boredom_word_char_count=0\n    local boredom_word_char_count=0\n    local boredom_word_char_count=0\n\
    \    local boredom_word_char_count=0\n    local boredom_word_char_count=0\n  \
    \  local boredom_word_char_count=0\n    local boredom_word_char_count=0\n    local\
    \ boredom_word_char_count=0\n    local boredom_word_char_count=0\n    local boredom_word_char_count=0\n\
    \    local boredom_word_char_count=0\n    local boredom_word_char_count=0\n  \
    \  local boredom_word_char_count=0\n    local boredom_word_char_count=0\n    local\
    \ boredom_word_char_count=0\n    local boredom_word_char_count=0\n    local boredom_word_char_count=0\n\
    \    local boredom_word_char_count=0\n    local boredom_word_char_count=0\n  \
    \  local boredom_word_char_count=0\n    local boredom_word_char_count=0\n    local\
    \ boredom_word_char_count=0\n    local boredom_word_char_count=0\n    local boredom_word_char_count=0\n\
    \    local boredom_word_char_count=0\n    local boredom_word_char_count=0\n  \
    \  local boredom_word_char_count=0\n    local boredom_word_char_count=0\n    local\
    \ boredom_word_char_count=0\n    local boredom_word_char_count=0\n    local boredom_word_char_count=0\n\
    \    local boredom_word_char_count=0\n    local boredom_word_char_count=0\n  \
    \  local boredom_word_char_count=0\n    local boredom_word_char_count=0\n    local\
    \ boredom_word_char_count=0\n    local boredom_word_char_count=0\n    local boredom_word_char_count=0\n\
    \    local boredom_word_char_count=0\n    local boredom_word_char_count=0\n  \
    \  local boredom_word_char_count=0\n\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredom_count=0\n\
    \    local boredom_word=\"I\"\n    local delimiter=\".\"\n    local delimiters=\"\
    ?!.\"\n    local delimiter_count=0\n    local delimiter_index=0\n    local delimiter_indexes=()\n\
    \    local delimiter_indexes_count=()\n    local delimiter_indexes_words=()\n\
    \    local delimiter_indexes_words_count=()\n    local delimiter_indexes_words_counts=()\n\
    \    local delimiter_indexes_words_counts_count=()\n    local delimiter_indexes_words_counts_count_count=()\n\
    \    local delimiter_indexes_words_counts_count_count_count=()\n    local delimiter_indexes_words_counts_count_count_count_count=()\n\
    \    local delimiter_indexes_words_counts_count_count_count_count_count=()\n \
    \   local delimiter_indexes_words_counts_count_count_count_count_count_count=()\n\
    \    local delimiter_indexes_words_counts_count_count_count_count_count_count_count=()\n\
    \    local delimiter_indexes_words_counts_count_count_count_count_count_count_count_count_count=()\n\
    \    local delimiter_indexes_words_counts_count_count_count_count_count_count_count_count_count_count_count=()\n\
    \    local delimiter_indexes_words_counts_count_count_count_count_count_count_count_count_count_count_count_count_count_count=()\n\
    \    local delimiter_indexes_words_counts_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredom_count=0\n\
    \    local boredom_word=\"I\"\n    local delimiter=\".\"\n    local delimiters=\"\
    \ ?!\"\n    local delimiter_count=0\n    local delimiter_index=0\n    local delimiter_indexes=()\n\
    \    local delimiter_indexes_count=0\n    local delimiter_indexes_word=\"\"\n\
    \    local delimiter_indexes_index=0\n    local delimiter_indexes_indexes=()\n\
    \    local delimiter_indexes_indexes_count=0\n    local delimiter_indexes_indexes_word=\"\
    \"\n    local delimiter_indexes_indexes_index=0\n    local delimiter_indexes_indexes_indexes=()\n\
    \    local delimiter_indexes_indexes_indexes_count=0\n    local delimiter_indexes_indexes_indexes_word=\"\
    \"\n    local delimiter_indexes_indexes_indexes_index=0\n    local delimiter_indexes_indexes_indexes_indexes=()\n\
    \    local delimiter_indexes_indexes_indexes_indexes_count=0\n    local delimiter_indexes_indexes_indexes_indexes_word=\"\
    \"\n    local delimiter_indexes_indexes_indexes_indexes_index=0\n    local delimiter_indexes_indexes_indexes_indexes_indexes=()\n\
    \    local delimiter_indexes_indexes_indexes_indexes_indexes_count=0\n    local\
    \ delimiter_indexes_indexes_indexes_indexes_indexes_word=\"\"\n    local delimiter_indexes_indexes_indexes_indexes_indexes_index=0\n\
    \    local delimiter_indexes_indexes_indexes_indexes_indexes_indexes=()\n    local\
    \ delimiter_indexes_indexes_indexes_indexes_indexes_indexes_count=0\n    local\
    \ delimiter_indexes_indexes_indexes_indexes_indexes_indexes_word=\"\"\n    local\
    \ delimiter_indexes_indexes_indexes_indexes_indexes_indexes_index=0\n    local\
    \ delimiter_indexes_indexes_indexes_indexes_indexes_indexes_indexes=()\n    local\
    \ delimiter_indexes_indexes_indexes_indexes_indexes_indexes_indexes_count=0\n\
    \    local delimiter_indexes_indexes_indexes_indexes_indexes_indexes_indexes_word=\"\
    \"\n    local delimiter_indexes_indexes_indexes_indexes_indexes_indexes_indexes_index=0\n\
    \    local delimiter_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes=()\n\
    \    local delimiter_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_count=0\n\
    \    local delimiter_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_word=\"\
    \"\n    local delimiter_indexes_indexes_indexes_indexes_\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local boredom_count=0\n\
    \  local boredom_words=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local bo\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local delimiters=\".?!\"\n  local delimiters_count=${#delimiters}\n  local\
    \ delimiter\n  local word\n  local i\n  local j\n\n  for (( i=0; i<${#string};\
    \ i++ )); do\n    word=\"${string:$i:1}\"\n    for (( j=0; j<${#delimiters_count};\
    \ j++ )); do\n      delimiter=\"${delimiters:$j:1}\"\n      if [[ \"${word}\"\
    \ == \"${delimiter}\" ]]; then\n        boredom_count=$((boredom_count+1))\n \
    \       break\n      fi\n    done\n  done\n  echo \"$boredom_count\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local word\n  local count=0\n  local i\n  local j\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  local delimiters\n  local delimiter\n  local delimiters\n\
    \  local delimiter\n  \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local word=$1\n  local boredom_count=0\n\
    \  local boredom_string=$2\n  local delimiter=$3\n  local delimiter_count=0\n\
    \  local delimiter_string=$4\n\n  local delimiter_count=0\n  local delimiter_string=$4\n\
    \  local delimiter_count=0\n  local delimiter_string=$4\n\n  local delimiter_count=0\n\
    \  local delimiter_string=$4\n  local delimiter_count=0\n  local delimiter_string=$4\n\
    \n  local delimiter_count=0\n  local delimiter_string=$4\n  local delimiter_count=0\n\
    \  local delimiter_string=$4\n\n  local delimiter_count=0\n  local delimiter_string=$4\n\
    \  local delimiter_count=0\n  local delimiter_string=$4\n\n  local delimiter_count=0\n\
    \  local delimiter_string=$4\n  local delimiter_count=0\n  local delimiter_string=$4\n\
    \n  local delimiter_count=0\n  local delimiter_string=$4\n  local delimiter_count=0\n\
    \  local delimiter_string=$4\n\n  local delimiter_count=0\n  local delimiter_string=$4\n\
    \  local delimiter_count=0\n  local delimiter_string=$4\n\n  local delimiter_count=0\n\
    \  local delimiter_string=$4\n  local delimiter_count=0\n  local delimiter_string=$4\n\
    \n  local delimiter_count=0\n  local delimiter_string=$4\n  local delimiter_count=0\n\
    \  local delimiter_string=$4\n\n  local delimiter_count=0\n  local delimiter_string=$4\n\
    \  local delimiter_count=0\n  local delimiter_string=$4\n\n  local delimiter_count=0\n\
    \  local delimiter_string=$4\n  local delimiter_count=0\n  local delimiter_string=$4\n\
    \n  local delimiter_count=0\n  local delimiter_string=$4\n  local delimiter_count=0\n\
    \  local delimiter_string=$4\n\n  local delimiter_count=0\n  local delimiter_string=$4\n\
    \  local delimiter_count=0\n  local delimiter_string=$4\n\n  local delimiter_count=0\n\
    \  local delimiter_string=$4\n  local delimiter_count=0\n  local delimiter_string=$4\n\
    \n  local delimiter_count=0\n  local delimiter_string=$4\n  local delimiter_count=0\n\
    \  local delimiter_string=$4\n\n  local delimiter_count=0\n  local delimiter_string=$4\n\
    \  local delimiter_count=0\n  local delimiter_string=$4\n\n  local delimiter_count=0\n\
    \  local delimiter_string=$4\n  local delimiter_count=0\n  local delimiter_string=$4\n\
    \n  local delimiter_count=0\n  local delimiter_string=$4\n  local delimiter_count=0\n\
    \  local delimiter_string=$4\n\n  local \n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_word=\"I\"\n  local boredom_count=0\n  local\
    \ boredom_words=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n  local boredom_sentences=()\n\
    \  local boredom_sentences=()\n  local boredom_sentences=()\n\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local word\n  local i\n  local j\n  local count\n\n  for ((\
    \ i=0; i<${#input}; i++ )); do\n    word=${input:$i:1}\n    if [[ ${word} == $delimiter\
    \ ]]; then\n      count=$(( count + 1 ))\n    fi\n  done\n  echo $count\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiters=\"?!.\"\
    \n  local delimiter_count=0\n  local delimiter_index=0\n  local delimiter_indexes=()\n\
    \  local delimiter_indexes_count=()\n  local delimiter_indexes_word=()\n  local\
    \ delimiter_indexes_word_count=()\n  local delimiter_indexes_word_index=()\n \
    \ local delimiter_indexes_word_index_count=()\n  local delimiter_indexes_word_index_word=()\n\
    \  local delimiter_indexes_word_index_word_count=()\n  local delimiter_indexes_word_index_word_index=()\n\
    \  local delimiter_indexes_word_index_word_index_count=()\n  local delimiter_indexes_word_index_word_index_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count=()\n  local delimiter_indexes_word_index_word_index_word_index=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word=()\n  local delimiter_indexes_word_index_word_index_word_count_word_count=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index=()\n  local\
    \ delimiter_indexes_word_index_word_index_word_count_word_index_word=()\n  local\
    \ delimiter_indexes_word_index_word_index_word_count_word_index_word_count=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_index=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_index=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_count_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_index_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_index_word_count_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_index_word_count_word_index=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_index_word_count_word_count_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_index_word_count_word_count_word_index=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_index_word_count_word_count_word_count_word=()\n\
    \  local delimiter_indexes_word_index_word_index_word_count_word_index_word_count_word_index_word_count_word_count_word_index_word=()\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local delimiter=\".\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_index=0\n  local delimiter_string_index=0\n\
    \  local delimiter_index2=0\n  local delimiter_string_index2=0\n  local delimiter_index3=0\n\
    \  local delimiter_string_index3=0\n  local delimiter_index4=0\n  local delimiter_string_index4=0\n\
    \  local delimiter_index5=0\n  local delimiter_string_index5=0\n  local delimiter_index6=0\n\
    \  local delimiter_string_index6=0\n  local delimiter_index7=0\n  local delimiter_string_index7=0\n\
    \  local delimiter_index8=0\n  local delimiter_string_index8=0\n  local delimiter_index9=0\n\
    \  local delimiter_string_index9=0\n  local delimiter_index10=0\n  local delimiter_string_index10=0\n\
    \  local delimiter_index11=0\n  local delimiter_string_index11=0\n  local delimiter_index12=0\n\
    \  local delimiter_string_index12=0\n  local delimiter_index13=0\n  local delimiter_string_index13=0\n\
    \  local delimiter_index14=0\n  local delimiter_string_index14=0\n  local delimiter_index15=0\n\
    \  local delimiter_string_index15=0\n  local delimiter_index16=0\n  local delimiter_string_index16=0\n\
    \  local delimiter_index17=0\n  local delimiter_string_index17=0\n  local delimiter_index18=0\n\
    \  local delimiter_string_index18=0\n  local delimiter_index19=0\n  local delimiter_string_index19=0\n\
    \  local delimiter_index20=0\n  local delimiter_string_index20=0\n  local delimiter_index21=0\n\
    \  local delimiter_string_index21=0\n  local delimiter_index22=0\n  local delimiter_string_index22=0\n\
    \  local delimiter_index23=0\n  local delimiter_string_index23=0\n  local delimiter_index24=0\n\
    \  local delimiter_string_index24=0\n  local delimiter_index25=0\n  local delimiter_string_index25=0\n\
    \  local delimiter_index26=0\n  local delimiter_string_index26=0\n  local delimiter_index27=0\n\
    \  local delimiter_string_index27=0\n  local delimiter_index28=0\n  local delimiter_string_index28=0\n\
    \  local delimiter_index29=0\n  local delimiter_string_index29=0\n  local delimiter_index30=0\n\
    \  local delimiter_string_index30=0\n  local delimiter_index31=0\n  local delimiter_string_index31=0\n\
    \  local delimiter_index32=0\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiters=\" ?!\"\
    \n  local delimiter_count=0\n  local delimiter_index=0\n  local delimiter_indexes=()\n\
    \  local delimiter_indexes_count=()\n  local delimiter_indexes_words=()\n  local\
    \ delimiter_indexes_words_count=()\n  local delimiter_indexes_words_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count=()\n  local delimiter_indexes_words_count_index_words=()\n\
    \  local delimiter_indexes_words_count_index_words_count=()\n  local delimiter_indexes_words_count_index_words_count_index=()\n\
    \  local delimiter_indexes_words_count_index_words_count_index_count=()\n  local\
    \ delimiter_indexes_words_count_index_words_count_index_words=()\n  local delimiter_indexes_words_count_index_words_count_index_words_count=()\n\
    \  local delimiter_indexes_words_count_index_words_count_index_words_count_index=()\n\
    \  local delimiter_indexes_words_count_index_words_count_index_words_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_words_count_index_words_count_index_words=()\n\
    \  local delimiter_indexes_words_count_index_words_count_index_words_count_index_words_count=()\n\
    \  local delimiter_indexes_words_count_index_words_count_index_words_count_index_words_count_index=()\n\
    \  local delimiter_indexes_words_count_index_words_count_index_words_count_index_words_count_index_words=()\n\
    \  local delimiter_indexes_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index=()\n\
    \  local delimiter_indexes_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index_words=()\n\
    \  local delimiter_indexes_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index=()\n\
    \  local delimiter_indexes_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index_words=()\n\
    \  local delimiter_indexes_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index=()\n\
    \  local delimiter_indexes_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index_words=()\n\
    \  local delimiter_indexes_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index=()\n\
    \  local delimiter_indexes_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index_words_count_index_word\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_string=\"\"\n  local delimiters=\".?!\"\n  for delimiter in $delimiters;\
    \ do\n    boredom_string=\"$boredom_string $string\"\n    string=\"$string$delimiter\"\
    \n    if [[ \"$string\" == *\"I\"* ]]; then\n      boredom_count=$((boredom_count+1))\n\
    \    fi\n  done\n  echo \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredom_words=(\"I\" \"me\" \"my\" \"mine\" \"myself\"\
    \ \"myselves\" \"you\" \"your\" \"yours\" \"yourself\" \"yourselves\" \"he\" \"\
    him\" \"his\" \"himself\" \"she\" \"her\" \"hers\" \"herself\" \"it\" \"its\"\
    \ \"itself\" \"they\" \"them\" \"theirs\" \"themselves\" \"what\" \"which\" \"\
    who\" \"whom\" \"this\" \"that\" \"these\" \"those\" \"am\" \"is\" \"are\" \"\
    was\" \"were\" \"be\" \"been\" \"being\" \"have\" \"has\" \"had\" \"having\" \"\
    do\" \"does\" \"did\" \"doing\" \"a\" \"an\" \"the\" \"and\" \"but\" \"if\" \"\
    or\" \"because\" \"as\" \"until\" \"while\" \"of\" \"at\" \"by\" \"for\" \"with\"\
    \ \"about\" \"against\" \"between\" \"into\" \"through\" \"during\" \"before\"\
    \ \"after\" \"above\" \"below\" \"to\" \"from\" \"up\" \"down\" \"in\" \"out\"\
    \ \"on\" \"off\" \"over\" \"under\" \"again\" \"further\" \"then\" \"once\" \"\
    here\" \"there\" \"when\" \"where\" \"why\" \"how\" \"all\" \"any\" \"both\" \"\
    each\" \"few\" \"more\" \"most\" \"other\" \"some\" \"such\" \"no\" \"nor\" \"\
    not\" \"only\" \"own\" \"same\" \"so\" \"than\" \"too\" \"very\" \"can\" \"will\"\
    \ \"just\" \"don\" \"should\" \"now\")\n  local boredom_count=0\n  local boredom_word\n\
    \  local boredom_word_count\n  local boredom_word_length\n  local boredom_word_length_count\n\
    \  local boredom_word_length_count=0\n  local boredom_word_length\n  local boredom_word_length_count\n\
    \  local boredom_word_length_count=0\n  local boredom_word_length_count=0\n  local\
    \ boredom_word_length_count=0\n  local boredom_word_length_count=0\n  local boredom_word_length_count=0\n\
    \  local boredom_word_length_count=0\n  local boredom_word_length_count=0\n  local\
    \ boredom_word_length_count=0\n  local boredom_word_length_count=0\n  local boredom_word_length_count=0\n\
    \  local boredom_word_length_count=0\n  local boredom_word_length_count=0\n  local\
    \ boredom_word_length_count=0\n  local boredom_word_length_count=0\n  local boredom_word_length_count=0\n\
    \  \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\"\
    ) = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate\
    \ \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiter_count=0\n\
    \  local delimiter_index=0\n  local delimiter_index2=0\n  local delimiter_index3=0\n\
    \  local delimiter_index4=0\n  local delimiter_index5=0\n  local delimiter_index6=0\n\
    \  local delimiter_index7=0\n  local delimiter_index8=0\n  local delimiter_index9=0\n\
    \  local delimiter_index10=0\n  local delimiter_index11=0\n  local delimiter_index12=0\n\
    \  local delimiter_index13=0\n  local delimiter_index14=0\n  local delimiter_index15=0\n\
    \  local delimiter_index16=0\n  local delimiter_index17=0\n  local delimiter_index18=0\n\
    \  local delimiter_index19=0\n  local delimiter_index20=0\n  local delimiter_index21=0\n\
    \  local delimiter_index22=0\n  local delimiter_index23=0\n  local delimiter_index24=0\n\
    \  local delimiter_index25=0\n  local delimiter_index26=0\n  local delimiter_index27=0\n\
    \  local delimiter_index28=0\n  local delimiter_index29=0\n  local delimiter_index30=0\n\
    \  local delimiter_index31=0\n  local delimiter_index32=0\n  local delimiter_index33=0\n\
    \  local delimiter_index34=0\n  local delimiter_index35=0\n  local delimiter_index36=0\n\
    \  local delimiter_index37=0\n  local delimiter_index38=0\n  local delimiter_index39=0\n\
    \  local delimiter_index40=0\n  local delimiter_index41=0\n  local delimiter_index42=0\n\
    \  local delimiter_index43=0\n  local delimiter_index44=0\n  local delimiter_index45=0\n\
    \  local delimiter_index46=0\n  local delimiter_index47=0\n  local delimiter_index48=0\n\
    \  local delimiter_index49=0\n  local delimiter_index50=0\n  local delimiter_index51=0\n\
    \  local delimiter_index52=0\n  local delimiter_index53=0\n  local delimiter_index54=0\n\
    \  local delimiter_index55=0\n  local delimiter_index56=0\n  local delimiter_index57=0\n\
    \  local delimiter_index58=0\n  local delimiter_index59=0\n  local delimiter_index60=0\n\
    \  local delimiter_index61=0\n  local delimiter_index62=0\n  local delimiter_index63=0\n\
    \  local delimiter_index64=0\n  local delimiter_index65=0\n  local delimiter_index66=0\n\
    \  local delimiter_index67=0\n  local delimiter_index68=0\n  \n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter='.'\n  local boredom_word='I'\n  local boredom_count=0\n  local boredom_sentence=''\n\
    \  local boredom_sentence_index=0\n  local boredom_sentence_count=0\n  local boredom_sentence_word=''\n\
    \  local boredom_sentence_word_index=0\n  local boredom_sentence_word_count=0\n\
    \  local boredom_sentence_word_count2=0\n  local boredom_sentence_word_count3=0\n\
    \  local boredom_sentence_word_count4=0\n  local boredom_sentence_word_count5=0\n\
    \  local boredom_sentence_word_count6=0\n  local boredom_sentence_word_count7=0\n\
    \  local boredom_sentence_word_count8=0\n  local boredom_sentence_word_count9=0\n\
    \  local boredom_sentence_word_count10=0\n  local boredom_sentence_word_count11=0\n\
    \  local boredom_sentence_word_count12=0\n  local boredom_sentence_word_count13=0\n\
    \  local boredom_sentence_word_count14=0\n  local boredom_sentence_word_count15=0\n\
    \  local boredom_sentence_word_count16=0\n  local boredom_sentence_word_count17=0\n\
    \  local boredom_sentence_word_count18=0\n  local boredom_sentence_word_count19=0\n\
    \  local boredom_sentence_word_count20=0\n  local boredom_sentence_word_count21=0\n\
    \  local boredom_sentence_word_count22=0\n  local boredom_sentence_word_count23=0\n\
    \  local boredom_sentence_word_count24=0\n  local boredom_sentence_word_count25=0\n\
    \  local boredom_sentence_word_count26=0\n  local boredom_sentence_word_count27=0\n\
    \  local boredom_sentence_word_count28=0\n  local boredom_sentence_word_count29=0\n\
    \  local boredom_sentence_word_count30=0\n  local boredom_sentence_word_count31=0\n\
    \  local boredom_sentence_word_count32=0\n  local boredom_sentence_word_count33=0\n\
    \  local boredom_sentence_word_count34=0\n  local boredom_sentence_word_count35=0\n\
    \  local boredom_sentence_word_count36=0\n  local boredom_sentence_word_count37=0\n\
    \  local boredom_sentence_word_count38=0\n  local boredom_sentence_word_count39=0\n\
    \  local boredom_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local string=\"$1\"\n    local boredoms=0\n\
    \    local word\n    for word in $string; do\n        if [[ \"$word\" == \"I\"\
    \ ]]; then\n            ((boredoms++))\n        fi\n    done\n    echo \"$boredoms\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_prefix=\"I\"\n  local boredom_suffix=\"!\"\n\
    \  local boredom_delimiter=\"?\"\n  local boredom_words=()\n  local boredom_count=0\n\
    \  local boredom_word\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local boredom_word_count\n\
    \  local boredom_word_count\n  local boredom_word_count\n  local bo\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=$1\n    local output=0\n  \
    \  for word in $input; do\n        if [[ \"$word\" == \"I\" ]]; then\n       \
    \     let output++\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local boredoms=0\n  local\
    \ delimiter=$2\n  local word\n  local i\n\n  for i in $input; do\n    if [[ \"\
    $i\" == \"$delimiter\" ]]; then\n      boredoms=$((boredoms+1))\n    fi\n  done\n\
    \  echo $boredoms\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=\"$1\"\n    local output=0\n\
    \    local delimiters=\".?!\"\n    for delimiter in $delimiters; do\n        if\
    \ [[ \"$input\" =~ $delimiter ]]; then\n            let output++\n        fi\n\
    \    done\n    echo \"$output\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local delimiters=\".?!\"\n  local delimiters_count=${#delimiters}\n  local\
    \ delimiters_index=0\n  local delimiters_char\n  local delimiters_char_count\n\
    \  local delimiters_char_length\n  local delimiters_char_length_count\n  local\
    \ delimiters_char_length_index\n  local delimiters_char_length_indexes\n  local\
    \ delimiters_char_length_indexes_count\n  local delimiters_char_length_indexes_index\n\
    \  local delimiters_char_length_indexes_indexes_count\n  local delimiters_char_length_indexes_indexes_index\n\
    \  local delimiters_char_length_indexes_indexes_indexes_count\n  local delimiters_char_length_indexes_indexes_indexes_index\n\
    \  local delimiters_char_length_indexes_indexes_indexes_count\n  local delimiters_char_length_indexes_indexes_indexes_index\n\
    \  local delimiters_char_length_indexes_indexes_indexes_count\n  local delimiters_char_length_indexes_indexes_indexes_index\n\
    \  local delimiters_char_length_indexes_indexes_indexes_indexes_count\n  local\
    \ delimiters_char_length_indexes_indexes_indexes_indexes_index\n  local delimiters_char_length_indexes_indexes_indexes_indexes_count\n\
    \  local delimiters_char_length_indexes_indexes_indexes_indexes_index\n  local\
    \ delimiters_char_length_indexes_indexes_indexes_indexes_count\n  local delimiters_char_length_indexes_indexes_indexes_indexes_index\n\
    \  local delimiters_char_length_indexes_indexes_indexes_indexes_count\n  local\
    \ delimiters_char_length_indexes_indexes_indexes_indexes_index\n  local delimiters_char_length_indexes_indexes_indexes_indexes_count\n\
    \  local delimiters_char_length_indexes_indexes_indexes_indexes_index\n  local\
    \ delimiters_char_length_indexes_indexes_indexes_indexes_count\n  local delimiters_char_length_indexes_indexes_indexes_indexes_index\n\
    \  local delimiters_char_length_indexes_indexes_indexes_indexes_count\n  local\
    \ delimiters_char_length_indexes_indexes_indexes_indexes_index\n  local delimiters_char_length_indexes_indexes_indexes_indexes_count\n\
    \  local delimiters_char_length_indexes_indexes_indexes_indexes_indexes_index\n\
    \  local delimiters_char_length_indexes_indexes_indexes_indexes_indexes_count\n\
    \  local delimiters_char_length_indexes_indexes_indexes_indexes_indexes_index\n\
    \  local delimiters_char_length\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiters=\" ?!\"\
    \n  local delimiter_count=0\n  local delimiter_index=0\n  local delimiter_indexes=()\n\
    \  local delimiter_indexes_count=()\n  local delimiter_indexes_words=()\n  local\
    \ delimiter_indexes_words_count=()\n  local delimiter_indexes_words_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count=()\n  local delimiter_indexes_words_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count=()\n  local delimiter_indexes_words_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \  local delimiter_indexes_words_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \  local delimiter_indexes_\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_word=\"I\"\n  local delimiter=\".\"\n  local delimiters=\" ?!\"\
    \n  local delimiter_count=0\n  local delimiter_index=0\n  local delimiter_indexes=()\n\
    \  local delimiter_indexes_count=()\n  local delimiter_indexes_words=()\n  local\
    \ delimiter_indexes_words_count=0\n  local delimiter_indexes_words_count=()\n\
    \  local delimiter_indexes_words_words=()\n  local delimiter_indexes_words_words_count=()\n\
    \  local delimiter_indexes_words_words_words=()\n  local delimiter_indexes_words_words_words_count=()\n\
    \  local delimiter_indexes_words_words_words_words=()\n  local delimiter_indexes_words_words_words_words_count=()\n\
    \  local delimiter_indexes_words_words_words_words_words=()\n  local delimiter_indexes_words_words_words_words_words_count=()\n\
    \  local delimiter_indexes_words_words_words_words_words_words=()\n  local delimiter_indexes_words_words_words_words_words_words_words_count=()\n\
    \  local delimiter_indexes_words_words_words_words_words_words_words_words=()\n\
    \  local delimiter_indexes_words_words_words_words_words_words_words_words_words_count=()\n\
    \  local delimiter_indexes_words_words_words_words_words_words_words_words_words_words_words=()\n\
    \  local delimiter_indexes_words_words_words_words_words_words_words_words_words_words_words_words=()\n\
    \  local delimiter_indexes_words_words_words_words_words_words_words_words_words_words_words_words_words_words=()\n\
    \  local delimiter_indexes_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words=()\n\
    \  local delimiter_indexes_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words=()\n\
    \  local delimiter_indexes_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words=()\n\
    \  local delimiter_indexes_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words=()\n\
    \  local delimiter_indexes_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words=()\n\
    \  local delimiter_indexes_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words=()\n\
    \  local delimiter_indexes_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_words_\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_word=\"I\"\n  local boredom_count=0\n  local\
    \ boredom_sentence=\"\"\n  local boredom_sentence_count=0\n  local boredom_sentence_word=\"\
    \"\n  local boredom_sentence_word_count=0\n  local boredom_sentence_word_count2=0\n\
    \  local boredom_sentence_word_count3=0\n  local boredom_sentence_word_count4=0\n\
    \  local boredom_sentence_word_count5=0\n  local boredom_sentence_word_count6=0\n\
    \  local boredom_sentence_word_count7=0\n  local boredom_sentence_word_count8=0\n\
    \  local boredom_sentence_word_count9=0\n  local boredom_sentence_word_count10=0\n\
    \  local boredom_sentence_word_count11=0\n  local boredom_sentence_word_count12=0\n\
    \  local boredom_sentence_word_count13=0\n  local boredom_sentence_word_count14=0\n\
    \  local boredom_sentence_word_count15=0\n  local boredom_sentence_word_count16=0\n\
    \  local boredom_sentence_word_count17=0\n  local boredom_sentence_word_count18=0\n\
    \  local boredom_sentence_word_count19=0\n  local boredom_sentence_word_count20=0\n\
    \  local boredom_sentence_word_count21=0\n  local boredom_sentence_word_count22=0\n\
    \  local boredom_sentence_word_count23=0\n  local boredom_sentence_word_count24=0\n\
    \  local boredom_sentence_word_count25=0\n  local boredom_sentence_word_count26=0\n\
    \  local boredom_sentence_word_count27=0\n  local boredom_sentence_word_count28=0\n\
    \  local boredom_sentence_word_count29=0\n  local boredom_sentence_word_count30=0\n\
    \  local boredom_sentence_word_count31=0\n  local boredom_sentence_word_count32=0\n\
    \  local boredom_sentence_word_count33=0\n  local boredom_sentence_word_count34=0\n\
    \  local boredom_sentence_word_count35=0\n  local boredom_sentence_word_count36=0\n\
    \  local boredom_sentence_word_count37=0\n  local boredom_sentence_word_count38=0\n\
    \  local boredom_sentence_word_count39=0\n  local boredom_sentence_word_count40=0\n\
    \  local boredom_sentence_word_count41=0\n  \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local word=$1\n  local boredom_count=0\n\
    \  local boredom_string=\"\"\n  local delimiter=\".\"\n  local delimiter2=\"?\"\
    \n  local delimiter3=\"!\"\n  local delimiter4=\",\"\n  local delimiter5=\";\"\
    \n  local delimiter6=\":\"\n  local delimiter7=\";\"\n  local delimiter8=\".\"\
    \n  local delimiter9=\"?\"\n  local delimiter10=\"!\"\n  local delimiter11=\"\
    ,\"\n  local delimiter12=\";\"\n  local delimiter13=\":\"\n  local delimiter14=\"\
    ;\"\n  local delimiter15=\".\"\n  local delimiter16=\"?\"\n  local delimiter17=\"\
    !\"\n  local delimiter18=\",\"\n  local delimiter19=\";\"\n  local delimiter20=\"\
    :\"\n  local delimiter21=\";\"\n  local delimiter22=\".\"\n  local delimiter23=\"\
    ?\"\n  local delimiter24=\"!\"\n  local delimiter25=\",\"\n  local delimiter26=\"\
    ;\"\n  local delimiter27=\":\"\n  local delimiter28=\";\"\n  local delimiter29=\"\
    .\"\n  local delimiter30=\"?\"\n  local delimiter31=\"!\"\n  local delimiter32=\"\
    ,\"\n  local delimiter33=\";\"\n  local delimiter34=\":\"\n  local delimiter35=\"\
    ;\"\n  local delimiter36=\".\"\n  local delimiter37=\"?\"\n  local delimiter38=\"\
    !\"\n  local delimiter39=\",\"\n  local delimiter40=\";\"\n  local delimiter41=\"\
    :\"\n  local delimiter42=\";\"\n  local delimiter43=\".\"\n  local delimiter44=\"\
    ?\"\n  local delimiter45=\"!\"\n  local delimiter46=\",\"\n  local delimiter47=\"\
    ;\"\n  local delimiter48=\":\"\n  local delimiter49=\";\"\n  local delimiter50=\"\
    .\"\n  local delimiter51=\"?\"\n  local delimiter52=\"!\"\n  local delimiter53=\"\
    ,\"\n  local delimiter54=\";\"\n  local delimiter55=\":\"\n  local delimiter56=\"\
    ;\"\n  local delimiter57=\".\"\n  local delimiter58=\"?\"\n  local delimiter59=\"\
    !\"\n  local delimiter60=\",\"\n  local delimiter61=\";\"\n  local delimiter62=\"\
    :\"\n  local delimiter63=\";\"\n  local delimiter64=\".\"\n  local delimiter65=\"\
    ?\"\n  local delimiter66=\"!\"\n  local delimiter67=\",\"\n  local delimiter68\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter=\".\"\n  local boredom_word=\"I\"\n  local boredom_count=0\n  local\
    \ boredom_sentence=\"\"\n  local boredom_sentence_count=0\n  local boredom_sentence_word=\"\
    \"\n  local boredom_sentence_word_count=0\n  local boredom_sentence_word_count2=0\n\
    \  local boredom_sentence_word_count3=0\n  local boredom_sentence_word_count4=0\n\
    \  local boredom_sentence_word_count5=0\n  local boredom_sentence_word_count6=0\n\
    \  local boredom_sentence_word_count7=0\n  local boredom_sentence_word_count8=0\n\
    \  local boredom_sentence_word_count9=0\n  local boredom_sentence_word_count10=0\n\
    \  local boredom_sentence_word_count11=0\n  local boredom_sentence_word_count12=0\n\
    \  local boredom_sentence_word_count13=0\n  local boredom_sentence_word_count14=0\n\
    \  local boredom_sentence_word_count15=0\n  local boredom_sentence_word_count16=0\n\
    \  local boredom_sentence_word_count17=0\n  local boredom_sentence_word_count18=0\n\
    \  local boredom_sentence_word_count19=0\n  local boredom_sentence_word_count20=0\n\
    \  local boredom_sentence_word_count21=0\n  local boredom_sentence_word_count22=0\n\
    \  local boredom_sentence_word_count23=0\n  local boredom_sentence_word_count24=0\n\
    \  local boredom_sentence_word_count25=0\n  local boredom_sentence_word_count26=0\n\
    \  local boredom_sentence_word_count27=0\n  local boredom_sentence_word_count28=0\n\
    \  local boredom_sentence_word_count29=0\n  local boredom_sentence_word_count30=0\n\
    \  local boredom_sentence_word_count31=0\n  local boredom_sentence_word_count32=0\n\
    \  local boredom_sentence_word_count33=0\n  local boredom_sentence_word_count34=0\n\
    \  local boredom_sentence_word_count35=0\n  local boredom_sentence_word_count36=0\n\
    \  local boredom_sentence_word_count37=0\n  local boredom_sentence_word_count38=0\n\
    \  local boredom_sentence_word_count39=0\n  local boredom_sentence_word_count40=0\n\
    \  local boredom_sentence_word_count41=0\n  \n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=()\n  local boredom_sentences=()\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_char\n  local boredom_chars\n  local\
    \ boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\"\
    ) = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate\
    \ \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=\"$1\"\n    local output=0\n\
    \    local delimiter=\".\"\n    local boredom_word=\"I\"\n    local boredom_count=0\n\
    \    local boredom_sentence=\"\"\n    local boredom_sentence_count=0\n    local\
    \ boredom_sentence_word=\"\"\n    local boredom_sentence_word_count=0\n    local\
    \ boredom_sentence_word_index=0\n    local boredom_sentence_word_length=0\n  \
    \  local boredom_sentence_word_length_index=0\n    local boredom_sentence_word_length_count=0\n\
    \    local boredom_sentence_word_length_counts=0\n    local boredom_sentence_word_length_counts_index=0\n\
    \    local boredom_sentence_word_length_counts_index=0\n    local boredom_sentence_word_length_counts_index=0\n\
    \    local boredom_sentence_word_length_counts_index=0\n    local boredom_sentence_word_length_counts_index=0\n\
    \    local boredom_sentence_word_length_counts_index=0\n    local boredom_sentence_word_length_counts_index=0\n\
    \    local boredom_sentence_word_length_counts_index=0\n    local boredom_sentence_word_length_counts_index=0\n\
    \    local boredom_sentence_word_length_counts_index=0\n    local boredom_sentence_word_length_counts_index=0\n\
    \    local boredom_sentence_word_length_counts_index=0\n    local boredom_sentence_word_length_counts_index=0\n\
    \    local boredom_sentence_word_length_counts_index=0\n    local boredom_sentence_word_length_counts_index=0\n\
    \    local boredom_sentence_word_length_counts_index=0\n    local boredom_sentence_word_length_counts_index=0\n\
    \    local boredom_sentence_word_length_counts_index=0\n    local boredom_sentence_word_length_counts_index=0\n\
    \    local boredom_sentence_word_length_counts_index=0\n    local boredom_sentence_word_length_counts_index=0\n\
    \    local boredom_sentence_word_length_counts_index=0\n    local boredom_sentence_word_length_counts_index=0\n\
    \    local boredom_sentence_word_length_counts_index=0\n    local boredom_sentence_word_length_counts_index=0\n\
    \    local boredom_sentence_word_length_counts_index=0\n    local boredom_sentence_word_length_counts_index=0\n\
    \    local boredom_sentence_word_length_counts_index=0\n    local boredom_sentence_word_length_counts_index=0\n\
    \    local boredom_sentence_word_length_counts_\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local delimiter=\".\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    !\"\n  local delimiter_count=0\n  local delimiter_string=\"?\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"!\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\"?\"\n  \n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local delimiter=\".\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  local delimiter_count=0\n  local delimiter_string=\"\
    ?\"\n  local delimiter_count=0\n  local delimiter_string=\"!\"\n  local delimiter_count=0\n\
    \  local delimiter_string=\".\"\n  \n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredoms=0\n\
    \  local word\n  local delimiters\n  local delimiter\n  local delimiters\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n  local\
    \ delimiter\n  local delimiter\n  local delimiter\n  local delimiter\n\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=()\n  local boredom_sentences=()\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_char\n  local boredom_chars\n  local\
    \ boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  local boredom_char\n  local boredom_chars\n  local boredom_char\n  local boredom_chars\n\
    \  \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\"\
    ) = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate\
    \ \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n    local input=\"$1\"\n    local output=0\n\
    \    local delimiter='.'\n    local boredom_word='I'\n    local boredom_count=0\n\
    \    local boredom_sentence=''\n    local boredom_sentence_count=0\n    local\
    \ boredom_sentence_word=''\n    local boredom_sentence_word_count=0\n    local\
    \ boredom_sentence_word_count2=0\n    local boredom_sentence_word_count3=0\n \
    \   local boredom_sentence_word_count4=0\n    local boredom_sentence_word_count5=0\n\
    \    local boredom_sentence_word_count6=0\n    local boredom_sentence_word_count7=0\n\
    \    local boredom_sentence_word_count8=0\n    local boredom_sentence_word_count9=0\n\
    \    local boredom_sentence_word_count10=0\n    local boredom_sentence_word_count11=0\n\
    \    local boredom_sentence_word_count12=0\n    local boredom_sentence_word_count13=0\n\
    \    local boredom_sentence_word_count14=0\n    local boredom_sentence_word_count15=0\n\
    \    local boredom_sentence_word_count16=0\n    local boredom_sentence_word_count17=0\n\
    \    local boredom_sentence_word_count18=0\n    local boredom_sentence_word_count19=0\n\
    \    local boredom_sentence_word_count20=0\n    local boredom_sentence_word_count21=0\n\
    \    local boredom_sentence_word_count22=0\n    local boredom_sentence_word_count23=0\n\
    \    local boredom_sentence_word_count24=0\n    local boredom_sentence_word_count25=0\n\
    \    local boredom_sentence_word_count26=0\n    local boredom_sentence_word_count27=0\n\
    \    local boredom_sentence_word_count28=0\n    local boredom_sentence_word_count29=0\n\
    \    local boredom_sentence_word_count30=0\n    local boredom_sentence_word_count31=0\n\
    \    local boredom_sentence_word_count32=0\n    local boredom_sentence_word_count33=0\n\
    \    local boredom_sentence_word_count34=0\n    local boredom_sentence_word_count35=0\n\
    \    local boredom_sentence_word_count36=0\n    local boredom_sentence_word_count37=0\n\
    \    local boredom_sentence_word_count38=0\n    local boredom_sentence_word_count39=0\n\
    \    local boredom_sentence_word_count40=0\n    local boredom_sentence_word_count41=0\n\
    \    local \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_string=\"I\"\n  local delimiter=\".\"\n  local delimiter2=\"\
    ?\"\n  local delimiter3=\"!\"\n  local delimiter4=\".\"\n  local delimiter5=\"\
    ?\"\n  local delimiter6=\"!\"\n  local delimiter7=\".\"\n  local delimiter8=\"\
    ?\"\n  local delimiter9=\"!\"\n  local delimiter10=\".\"\n  local delimiter11=\"\
    ?\"\n  local delimiter12=\"!\"\n  local delimiter13=\".\"\n  local delimiter14=\"\
    ?\"\n  local delimiter15=\"!\"\n  local delimiter16=\".\"\n  local delimiter17=\"\
    ?\"\n  local delimiter18=\"!\"\n  local delimiter19=\".\"\n  local delimiter20=\"\
    ?\"\n  local delimiter21=\"!\"\n  local delimiter22=\".\"\n  local delimiter23=\"\
    ?\"\n  local delimiter24=\"!\"\n  local delimiter25=\".\"\n  local delimiter26=\"\
    ?\"\n  local delimiter27=\"!\"\n  local delimiter28=\".\"\n  local delimiter29=\"\
    ?\"\n  local delimiter30=\"!\"\n  local delimiter31=\".\"\n  local delimiter32=\"\
    ?\"\n  local delimiter33=\"!\"\n  local delimiter34=\".\"\n  local delimiter35=\"\
    ?\"\n  local delimiter36=\"!\"\n  local delimiter37=\".\"\n  local delimiter38=\"\
    ?\"\n  local delimiter39=\"!\"\n  local delimiter40=\".\"\n  local delimiter41=\"\
    ?\"\n  local delimiter42=\"!\"\n  local delimiter43=\".\"\n  local delimiter44=\"\
    ?\"\n  local delimiter45=\"!\"\n  local delimiter46=\".\"\n  local delimiter47=\"\
    ?\"\n  local delimiter48=\"!\"\n  local delimiter49=\".\"\n  local delimiter50=\"\
    ?\"\n  local delimiter51=\"!\"\n  local delimiter52=\".\"\n  local delimiter53=\"\
    ?\"\n  local delimiter54=\"!\"\n  local delimiter55=\".\"\n  local delimiter56=\"\
    ?\"\n  local delimiter57=\"!\"\n  local delimiter58=\".\"\n  local delimiter59=\"\
    ?\"\n  local delimiter60=\"!\"\n  local delimiter61=\".\"\n  local delimiter62=\"\
    ?\"\n  local delimiter63=\"!\"\n  local delimiter64=\".\"\n  local delimiter65=\"\
    ?\"\n  local delimiter66=\"!\"\n  local delimiter67=\".\"\n  local delimiter68=\"\
    ?\"\n  local delimiter69=\"!\"\n  local delimiter70=\".\"\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local string=\"$1\"\n  local boredom_count=0\n\
    \  local boredom_words=()\n  local boredom_sentences=()\n  local boredom_word\n\
    \  local boredom_sentence\n  local boredom_word_count\n  local boredom_sentence_count\n\
    \  local boredom_sentence_word\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local\
    \ boredom_sentence_word_count\n  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n\
    \  local boredom_sentence_word_count\n  local boredom_sentence_word_count\n  \n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=\"$1\"\n  local output=0\n  local\
    \ delimiter='.'\n  local boredom_word='I'\n  local boredom_count=0\n  local boredom_sentence=''\n\
    \  local boredom_words=()\n  local boredom_sentences=()\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local boredom_sentences=''\n  local boredom_sentences=''\n\
    \  local boredom_sentences=''\n  local bore\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter='.'\n  local boredom='I$'\n  local boredom_count=0\n  local boredom_words=()\n\
    \  local boredom_word=''\n  local boredom_word_count=0\n  local boredom_word_length=0\n\
    \  local boredom_word_length_count=0\n  local boredom_word_length_index=0\n  local\
    \ boredom_word_length_indexes=()\n  local boredom_word_length_indexes_count=0\n\
    \  local boredom_word_length_indexes_index=0\n  local boredom_word_length_indexes_indexes=()\n\
    \  local boredom_word_length_indexes_indexes_count=0\n  local boredom_word_length_indexes_indexes_index=0\n\
    \  local boredom_word_length_indexes_indexes_indexes=()\n  local boredom_word_length_indexes_indexes_index=0\n\
    \  local boredom_word_length_indexes_indexes_indexes=()\n  local boredom_word_length_indexes_indexes_index=0\n\
    \  local boredom_word_length_indexes_indexes_indexes=()\n  local boredom_word_length_indexes_indexes_index=0\n\
    \  local boredom_word_length_indexes_indexes_indexes=()\n  local boredom_word_length_indexes_indexes_index=0\n\
    \  local boredom_word_length_indexes_indexes_indexes=()\n  local boredom_word_length_indexes_indexes_index=0\n\
    \  local boredom_word_length_indexes_indexes_indexes=()\n  local boredom_word_length_indexes_indexes_index=0\n\
    \  local boredom_word_length_indexes_indexes_indexes=()\n  local boredom_word_length_indexes_indexes_index=0\n\
    \  local boredom_word_length_indexes_indexes_indexes=()\n  local boredom_word_length_indexes_indexes_index=0\n\
    \  local boredom_word_length_indexes_indexes_indexes=()\n  local boredom_word_length_indexes_indexes_index=0\n\
    \  local boredom_word_length_indexes_indexes_indexes=()\n  local boredom_word_length_indexes_indexes_index=0\n\
    \  local boredom_word_length_indexes_indexes_indexes=()\n  local boredom_word_length_indexes_indexes_index=0\n\
    \  local boredom_word_length_indexes_indexes_indexes=()\n  local boredom_word_length_indexes_indexes_index\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    #\n# $1 is a string\nis_bored() {\n  local input=$1\n  local output=0\n  local\
    \ delimiter=$2\n  local boredom_words=(\"I\" \"me\" \"my\" \"mine\" \"myself\"\
    \ \"myselves\" \"you\" \"your\" \"yours\" \"yourself\" \"yourselves\" \"he\" \"\
    him\" \"his\" \"himself\" \"she\" \"her\" \"hers\" \"herself\" \"it\" \"its\"\
    \ \"itself\" \"they\" \"them\" \"theirs\" \"themselves\" \"what\" \"which\" \"\
    who\" \"whom\" \"this\" \"that\" \"these\" \"those\" \"am\" \"is\" \"are\" \"\
    was\" \"were\" \"be\" \"been\" \"being\" \"have\" \"has\" \"had\" \"having\" \"\
    do\" \"does\" \"did\" \"doing\" \"a\" \"an\" \"the\" \"and\" \"but\" \"if\" \"\
    or\" \"because\" \"as\" \"until\" \"while\" \"of\" \"at\" \"by\" \"for\" \"with\"\
    \ \"about\" \"against\" \"between\" \"into\" \"through\" \"during\" \"before\"\
    \ \"after\" \"above\" \"below\" \"to\" \"from\" \"up\" \"down\" \"in\" \"out\"\
    \ \"on\" \"off\" \"over\" \"under\" \"again\" \"further\" \"then\" \"once\" \"\
    here\" \"there\" \"when\" \"where\" \"why\" \"how\" \"all\" \"any\" \"both\" \"\
    each\" \"few\" \"more\" \"most\" \"other\" \"some\" \"such\" \"no\" \"nor\" \"\
    not\" \"only\" \"own\" \"same\" \"so\" \"than\" \"too\" \"very\" \"can\" \"will\"\
    \ \"just\" \"don\" \"should\" \"now\")\n  local delimiters=(\"\\.\" \"\\?\" \"\
    \\!\")\n  local words=($input)\n  local delimiter=$2\n  local delimiter_index=0\n\
    \  local delimiter_index2=0\n  local delimiter_index3=0\n  local delimiter_index4=0\n\
    \  local delimiter_index5=0\n  local delimiter_index6=0\n  local delimiter_index7=0\n\
    \  local delimiter_index8=0\n  local delimiter_index9=0\n  local delimiter_index10=0\n\
    \  local delimiter_index11=0\n  local delimiter_index12=0\n  local delimiter_index13=0\n\
    \  local delimiter_index14=0\n  local delimiter_index15=0\n  local delimiter_index16=0\n\
    \  local delimiter_index17=0\n  local delimiter_index18=0\n  local delimiter_index19=0\n\
    \  local delimiter_index20=0\n  local delimiter_index21=0\n  local delimiter_index22=0\n\
    \  local delimiter_index23=0\n  local delimiter_index24=0\n  local delimiter_index25=0\n\
    \  local delimiter_index26=0\n  local delimiter_index27=0\n  local delimiter_index\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038702

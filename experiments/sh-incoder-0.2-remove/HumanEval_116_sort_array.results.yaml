language: sh
name: HumanEval_116_sort_array
results:
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local array=\"$1\"\n  local -a count\n  local -a sorted\n  local -a counts\n\
    \  local -a counts_sorted\n  local -a counts_sorted2\n  local -a counts_sorted3\n\
    \  local -a counts_sorted4\n  local -a counts_sorted5\n  local -a counts_sorted6\n\
    \  local -a counts_sorted7\n  local -a counts_sorted8\n  local -a counts_sorted9\n\
    \  local -a counts_sorted10\n  local -a counts_sorted11\n  local -a counts_sorted12\n\
    \  local -a counts_sorted13\n  local -a counts_sorted14\n  local -a counts_sorted15\n\
    \  local -a counts_sorted16\n  local -a counts_sorted17\n  local -a counts_sorted18\n\
    \  local -a counts_sorted19\n  local -a counts_sorted20\n  local -a counts_sorted21\n\
    \  local -a counts_sorted22\n  local -a counts_sorted23\n  local -a counts_sorted24\n\
    \  local -a counts_sorted25\n  local -a counts_sorted26\n  local -a counts_sorted27\n\
    \  local -a counts_sorted28\n  local -a counts_sorted29\n  local -a counts_sorted30\n\
    \  local -a counts_sorted31\n  local -a counts_sorted32\n  local -a counts_sorted33\n\
    \  local -a counts_sorted34\n  local -a counts_sorted35\n  local -a counts_sorted36\n\
    \  local -a counts_sorted37\n  local -a counts_sorted38\n  local -a counts_sorted39\n\
    \  local -a counts_sorted40\n  local -a counts_sorted41\n  local -a counts_sorted42\n\
    \  local -a counts_sorted43\n  local -a counts_sorted44\n  local -a counts_sorted45\n\
    \  local -a counts_sorted46\n  local -a counts_sorted47\n  local -a counts_sorted48\n\
    \  local -a counts_sorted49\n  local -a counts_sorted50\n  local -a counts_sorted51\n\
    \  local -a counts_sorted52\n  local -a counts_sorted53\n  local -a counts_sorted54\n\
    \  local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local array=\"$1\"\n  local length=\"${#array}\"\n  local sorted=()\n  local\
    \ i\n  local j\n  local k\n  local count\n  local temp\n  local num\n  local dec\n\
    \  local decnum\n  local decnum2\n  local decnum3\n  local decnum4\n  local decnum5\n\
    \  local decnum6\n  local decnum7\n  local decnum8\n  local decnum9\n  local decnum10\n\
    \  local decnum11\n  local decnum12\n  local decnum13\n  local decnum14\n  local\
    \ decnum15\n  local decnum16\n  local decnum17\n  local decnum18\n  local decnum19\n\
    \  local decnum20\n  local decnum21\n  local decnum22\n  local decnum23\n  local\
    \ decnum24\n  local decnum25\n  local decnum26\n  local decnum27\n  local decnum28\n\
    \  local decnum29\n  local decnum30\n  local decnum31\n  local decnum32\n  local\
    \ decnum33\n  local decnum34\n  local decnum35\n  local decnum36\n  local decnum37\n\
    \  local decnum38\n  local decnum39\n  local decnum40\n  local decnum41\n  local\
    \ decnum42\n  local decnum43\n  local decnum44\n  local decnum45\n  local decnum46\n\
    \  local decnum47\n  local decnum48\n  local decnum49\n  local decnum50\n  local\
    \ decnum51\n  local decnum52\n  local decnum53\n  local decnum54\n  local decnum55\n\
    \  local decnum56\n  local decnum57\n  local decnum58\n  local decnum59\n  local\
    \ decnum60\n  local decnum61\n  local decnum62\n  local decnum63\n  local decnum64\n\
    \  local decnum65\n  local decnum66\n  local decnum67\n  local decnum68\n  local\
    \ decnum69\n  local decnum70\n  local decnum71\n  local decnum72\n  local decnum73\n\
    \  local decnum74\n  local decnum75\n  local decnum76\n  local decnum77\n  local\
    \ dec\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a count\n    local -a sorted\n    local -a\
    \ temp\n    local -a counts\n    local -a count\n    local -a counts\n    local\
    \ -a counts\n    local -a counts\n    local -a counts\n    local -a counts\n \
    \   local -a counts\n    local -a counts\n    local -a counts\n    local -a counts\n\
    \    local -a counts\n    local -a counts\n    local -a counts\n    local -a counts\n\
    \    local -a counts\n    local -a counts\n    local -a counts\n    local -a counts\n\
    \    local -a counts\n    local -a counts\n    local -a counts\n    local -a counts\n\
    \    local -a counts\n    local -a counts\n    local -a counts\n    local -a counts\n\
    \    local -a counts\n    local -a counts\n    local -a counts\n    local -a counts\n\
    \    local -a counts\n    local -a counts\n    local -a counts\n    local -a counts\n\
    \    local -a counts\n    local -a counts\n    local -a counts\n    local -a counts\n\
    \    local -a counts\n    local -a counts\n    local -a counts\n    local -a counts\n\
    \    local -a counts\n    local -a counts\n    local -a counts\n    local -a counts\n\
    \    local -a counts\n    local -a counts\n    local -a counts\n    local -a counts\n\
    \    local -a counts\n    local -a counts\n    local -a counts\n    local -a counts\n\
    \    local -a counts\n    local -a counts\n    local -a counts\n    local -a counts\n\
    \    local -a counts\n    local -a counts\n    local -a counts\n    local -a counts\n\
    \    local -a counts\n    local -a counts\n    local -a counts\n    local -a counts\n\
    \    local -a counts\n    local -a counts\n    local -a counts\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local sorted=()\n\
    \    local i\n    local j\n    local k\n    local count\n    local count1\n  \
    \  local count2\n    local count3\n    local count4\n    local count5\n    local\
    \ count6\n    local count7\n    local count8\n    local count9\n    local count10\n\
    \    local count11\n    local count12\n    local count13\n    local count14\n\
    \    local count15\n    local count16\n    local count17\n    local count18\n\
    \    local count19\n    local count20\n    local count21\n    local count22\n\
    \    local count23\n    local count24\n    local count25\n    local count26\n\
    \    local count27\n    local count28\n    local count29\n    local count30\n\
    \    local count31\n    local count32\n    local count33\n    local count34\n\
    \    local count35\n    local count36\n    local count37\n    local count38\n\
    \    local count39\n    local count40\n    local count41\n    local count42\n\
    \    local count43\n    local count44\n    local count45\n    local count46\n\
    \    local count47\n    local count48\n    local count49\n    local count50\n\
    \    local count51\n    local count52\n    local count53\n    local count54\n\
    \    local count55\n    local count56\n    local count57\n    local count58\n\
    \    local count59\n    local count60\n    local count61\n    local count62\n\
    \    local count63\n    local count64\n    local count65\n    local count66\n\
    \    local count67\n    local count68\n    local count69\n    local count70\n\
    \    local count71\n    local count72\n    local count73\n    local count74\n\
    \    local count75\n    local count76\n    local count77\n    local count78\n\
    \    local count79\n    local count80\n    local count81\n    local count82\n\
    \    local count83\n    local count84\n    local count85\n    local count86\n\
    \    local count87\n    local count88\n    local count89\n    local count90\n\
    \    local count91\n    local count92\n    local count93\n    local count94\n\
    \    local count95\n    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local sorted=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local count=0\n    local max=0\n    local min=0\n\
    \    local dec=0\n    local decdec=0\n    local decdecdec=0\n    local decdecdecdec=0\n\
    \    local decdecdecdecdec=0\n    local decdecdecdecdecdec=0\n    local decdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdec=0\n   \
    \ local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n   \
    \ local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n   \
    \ local decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a tmp\n\
    \    local i\n    local j\n    local k\n    local count\n    local -a tmp\n  \
    \  local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n  \
    \  local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n  \
    \  local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a \n}\n\ncandidate() {\n \
    \   sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local -n arr=$1\n    local -a sorted\n    local -a count\n    local -a tmp\n\
    \    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0tlj125d.sh: line 9: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660038174
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local sorted=()\n\
    \    local count=0\n    local i=0\n    while [ $i -lt $length ]; do\n        local\
    \ j=0\n        while [ $j -le $count ]; do\n            local k=0\n          \
    \  while [ $k -le $i ]; do\n                local count=0\n                local\
    \ j=0\n                while [ $j -le $length ]; do\n                    local\
    \ k=0\n                    while [ $k -le $j ]; do\n                        local\
    \ count=0\n                        local j=0\n                        while [\
    \ $j -le $length ]; do\n                            local k=0\n              \
    \              while [ $k -le $j ]; do\n                                local\
    \ count=0\n                                local j=0\n                       \
    \         while [ $j -le $length ]; do\n                                    local\
    \ k=0\n                                    while [ $k -le $j ]; do\n         \
    \                               local count=0\n                              \
    \          local j=0\n                                        while [ $j -le $length\
    \ ]; do\n                                            local k=0\n             \
    \                               while [ $k -le $j ]; do\n                    \
    \                            local count=0\n                                 \
    \               local j=0\n                                                while\
    \ [ $j -le $length ]; do\n                                                   \
    \ local k=0\n                                                    while [ $k -le\
    \ $j ]; do\n                                                        local count=0\n\
    \                                                        local j=0\n         \
    \                                               while [ $j -le $length ]; do\n\
    \                                                            local k=0\n     \
    \                                                       while [ $k -le $j ]; do\n\
    \                                                                local count=0\n\
    \                                                                local j=0\n \
    \                                                               while [ $j -le\
    \ $length ]; do\n                                                            \
    \        local k=0\n                                                         \
    \           while [ $k -le $j ]; do\n                                        \
    \                                local count=0\n                             \
    \                                           local j=0\n                      \
    \                                                  while [ $j -le $length ]; do\n\
    \                                                                            local\
    \ k=0\n                                                                      \
    \      while [ $k -le $j ]; do\n                                             \
    \                                   local count=0\n                          \
    \                                                      local j=0\n           \
    \                                                                     while [\
    \ $j -le $length ]; do\n                                                     \
    \                               local k=0\n                                  \
    \                                                  while [ $k -le $j ]; do\n \
    \                                                                            \
    \           local count=0\n                                                  \
    \                                      local j=0\n                           \
    \                                                             while [ $j -le $length\
    \ ]; do\n                                                                    \
    \                        local k=0\n                                         \
    \                                                   while [ $k -le $j ]; do\n\
    \                                                                            \
    \                    local count=0\n                                         \
    \                                                       local j=0\n          \
    \                                                                            \
    \          while [ $j -le $length ]; do\n                                    \
    \                                                                local k=0\n \
    \                                                                            \
    \                       while [ $k\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbv7z6s4e.sh: line 74: syntax error near unexpected token `}''

    /tmp/tmpbv7z6s4e.sh: line 74: `}''

    '
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -i i\n \
    \   local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n  \
    \  local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n  \
    \  local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n\
    \    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n\
    \    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n\
    \    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n\
    \    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n\
    \    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n\
    \    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n\
    \    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n\
    \    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n\
    \    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n\
    \    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n\
    \    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n\
    \    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n\
    \    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n\
    \    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n\
    \    local -a tmp69\n    local -a tmp70\n\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local -n arr=$1\n  local -a sorted\n  local -a count\n  local -a tmp\n  local\
    \ -a tmp2\n  local -a tmp3\n  local -a tmp4\n  local -a tmp5\n  local -a tmp6\n\
    \  local -a tmp7\n  local -a tmp8\n  local -a tmp9\n  local -a tmp10\n  local\
    \ -a tmp11\n  local -a tmp12\n  local -a tmp13\n  local -a tmp14\n  local -a tmp15\n\
    \  local -a tmp16\n  local -a tmp17\n  local -a tmp18\n  local -a tmp19\n  local\
    \ -a tmp20\n  local -a tmp21\n  local -a tmp22\n  local -a tmp23\n  local -a tmp24\n\
    \  local -a tmp25\n  local -a tmp26\n  local -a tmp27\n  local -a tmp28\n  local\
    \ -a tmp29\n  local -a tmp30\n  local -a tmp31\n  local -a tmp32\n  local -a tmp33\n\
    \  local -a tmp34\n  local -a tmp35\n  local -a tmp36\n  local -a tmp37\n  local\
    \ -a tmp38\n  local -a tmp39\n  local -a tmp40\n  local -a tmp41\n  local -a tmp42\n\
    \  local -a tmp43\n  local -a tmp44\n  local -a tmp45\n  local -a tmp46\n  local\
    \ -a tmp47\n  local -a tmp48\n  local -a tmp49\n  local -a tmp50\n  local -a tmp51\n\
    \  local -a tmp52\n  local -a tmp53\n  local -a tmp54\n  local -a tmp55\n  local\
    \ -a tmp56\n  local -a tmp57\n  local -a tmp58\n  local -a tmp59\n  local -a tmp60\n\
    \  local -a tmp61\n  local -a tmp62\n  local -a tmp63\n  local -a tmp64\n  local\
    \ -a tmp65\n  local -a tmp66\n  local -a tmp67\n  local -a tmp68\n  local -a tmp69\n\
    \  local -a tmp70\n  local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp04vr7b2n.sh: line 9: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a counts\n\
    \    local -a counts_sorted\n    local -a counts_sorted_reverse\n    local -a\
    \ counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local sorted=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local t=0\n    local val\n    local count\n\
    \    local dec\n    while [ $i -lt $len ]; do\n        val=${arr[$i]}\n      \
    \  if [ $val -gt 0 ]; then\n            count=0\n            while [ $count -lt\
    \ 8 ]; do\n                dec=$(( $val % 2 ))\n                val=`expr $val\
    \ / 2`\n                if [ $dec -eq 1 ]; then\n                    count=$((\
    \ $count + 1 ))\n                else\n                    break\n           \
    \     fi\n            done\n            sorted[$j]=${arr[$i]}\n            sorted[$k]=${arr[$i]}\n\
    \            sorted[$t]=${arr[$i]}\n            j=$(( $j + 1 ))\n            k=$((\
    \ $k + 1 ))\n            t=$(( $t + 1 ))\n        else\n            sorted[$j]=${arr[$i]}\n\
    \            j=$(( $j + 1 ))\n        fi\n        i=$(( $i + 1 ))\n    done\n\
    \    sorted[$j]=${arr[$i]}\n    sorted[$k]=${arr[$i]}\n    sorted[$t]=${arr[$i]}\n\
    \    echo ${sorted[@]}\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvrh_1bsf.sh: line 21: [: too many arguments

    '
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local count\n    local decimal\n    local decimal2\n\
    \    local decimal3\n    local decimal4\n    local decimal5\n    local decimal6\n\
    \    local decimal7\n    local decimal8\n    local decimal9\n    local decimal10\n\
    \    local decimal11\n    local decimal12\n    local decimal13\n    local decimal14\n\
    \    local decimal15\n    local decimal16\n    local decimal17\n    local decimal18\n\
    \    local decimal19\n    local decimal20\n    local decimal21\n    local decimal22\n\
    \    local decimal23\n    local decimal24\n    local decimal25\n    local decimal26\n\
    \    local decimal27\n    local decimal28\n    local decimal29\n    local decimal30\n\
    \    local decimal31\n    local decimal32\n    local decimal33\n    local decimal34\n\
    \    local decimal35\n    local decimal36\n    local decimal37\n    local decimal38\n\
    \    local decimal39\n    local decimal40\n    local decimal41\n    local decimal42\n\
    \    local decimal43\n    local decimal44\n    local decimal45\n    local decimal46\n\
    \    local decimal47\n    local decimal48\n    local decimal49\n    local decimal50\n\
    \    local decimal51\n    local decimal52\n    local decimal53\n    local decimal54\n\
    \    local decimal55\n    local decimal56\n    local decimal57\n    local decimal58\n\
    \    local decimal59\n    local decimal60\n    local decimal61\n    local decimal62\n\
    \    local decimal63\n    local decimal64\n    local decimal65\n    local decimal66\n\
    \    local decimal67\n    local decimal68\n    local decimal69\n    local decimal70\n\
    \    local decimal71\n    local decimal72\n    local decimal73\n    local decimal74\n\
    \    local decimal75\n    local decimal76\n    local decimal77\n    local decimal78\n\
    \    local decimal79\n    local decimal80\n    local decimal81\n    local decimal82\n\
    \    local decimal83\n    local decimal84\n    local decimal85\n    local decimal86\n\
    \    local decimal87\n    local decimal88\n    local decimal89\n    local decimal90\n\
    \    local decimal91\n    local decimal92\n    local decimal93\n    local decimal94\n\
    \    local decimal95\n    local decimal96\n    local decimal97\n    local decimal98\n\
    \    local decimal99\n    local decimal100\n    local decimal\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local -n arr=$1\n    local -a sorted\n    local -a counts\n    local -a tmp\n\
    \    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzs8gwlc9.sh: line 9: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=$1\n    local length=${#array[@]}\n    local sorted=()\n    local\
    \ i=0\n    while [ $i -lt $length ]; do\n        local j=0\n        while [ $j\
    \ -lt $length ]; do\n            if [ $array[$j] -eq 1 ]; then\n             \
    \   sorted+=( $array[$j] )\n                let j+=1\n            else\n     \
    \           let j+=1\n            fi\n        done\n        sorted+=( $array[$i]\
    \ )\n        let i+=1\n    done\n    local result=()\n    local j=0\n    while\
    \ [ $j -lt $length ]; do\n        result+=( ${sorted[$j]} )\n        let j+=1\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmjdhnnhu.sh: line 16: [: too many arguments

    '
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=$1\n    local temp\n    local count\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local \n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a arr2\n    local -a arr3\n    local -a arr4\n \
    \   local -a arr5\n    local -a arr6\n    local -a arr7\n    local -a arr8\n \
    \   local -a arr9\n    local -a arr10\n    local -a arr11\n    local -a arr12\n\
    \    local -a arr13\n    local -a arr14\n    local -a arr15\n    local -a arr16\n\
    \    local -a arr17\n    local -a arr18\n    local -a arr19\n    local -a arr20\n\
    \    local -a arr21\n    local -a arr22\n    local -a arr23\n    local -a arr24\n\
    \    local -a arr25\n    local -a arr26\n    local -a arr27\n    local -a arr28\n\
    \    local -a arr29\n    local -a arr30\n    local -a arr31\n    local -a arr32\n\
    \    local -a arr33\n    local -a arr34\n    local -a arr35\n    local -a arr36\n\
    \    local -a arr37\n    local -a arr38\n    local -a arr39\n    local -a arr40\n\
    \    local -a arr41\n    local -a arr42\n    local -a arr43\n    local -a arr44\n\
    \    local -a arr45\n    local -a arr46\n    local -a arr47\n    local -a arr48\n\
    \    local -a arr49\n    local -a arr50\n    local -a arr51\n    local -a arr52\n\
    \    local -a arr53\n    local -a arr54\n    local -a arr55\n    local -a arr56\n\
    \    local -a arr57\n    local -a arr58\n    local -a arr59\n    local -a arr60\n\
    \    local -a arr61\n    local -a arr62\n    local -a arr63\n    local -a arr64\n\
    \    local -a arr65\n    local -a arr66\n    local -a arr67\n    local -a arr68\n\
    \    local -a arr69\n    local -a arr70\n    local -a arr71\n    local -a arr72\n\
    \    local -a arr73\n    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local result\n  \
    \  local i\n    local j\n    local k\n    local count\n    local max\n    local\
    \ min\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    \n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -i i\n \
    \   local j\n    local k\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n\
    \    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n\
    \    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n\
    \    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n\
    \    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n\
    \    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n\
    \    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n\
    \    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n\
    \    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n\
    \    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n\
    \    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n\
    \    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n\
    \    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n\
    \    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n\
    \    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n\
    \    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n\
    \    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n\
    \    local -a tmp68\n    local -a tmp69\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local count=0\n    local max=0\n    local min=0\n    local tmp\n\
    \n    while [ $i -lt $len ]; do\n        if [ $count -gt $max ]; then\n      \
    \      max=count\n        fi\n        if [ $count -eq $max ]; then\n         \
    \   tmp=$arr[$i]\n            arr[$i]=$arr[$j]\n            arr[$j]=$tmp\n   \
    \     fi\n        (( count++ ))\n        (( j++ ))\n    done\n\n    local i\n\
    \    for (( i=0; i<len; i++ )); do\n        if [ $i -eq $min ]; then\n       \
    \     tmp=$arr[$i]\n            arr[$i]=$arr[$k]\n            arr[$k]=$tmp\n \
    \       fi\n        (( k++ ))\n    done\n\n    local j\n    for (( j=0; j<len;\
    \ j++ )); do\n        if [ $j -eq $min ]; then\n            tmp=$arr[$j]\n   \
    \         arr[$j]=$arr[$k]\n            arr[$k]=$tmp\n        fi\n        (( k++\
    \ ))\n    done\n\n    local k\n    for (( k=0; k<len; k++ )); do\n        if [\
    \ $k -eq $min ]; then\n            tmp=$arr[$k]\n            arr[$k]=$arr[$j]\n\
    \            arr[$j]=$tmp\n        fi\n        (( j++ ))\n    done\n\n    local\
    \ i\n    for (( i=0; i<len; i++ )); do\n        if [ $i -eq $min ]; then\n   \
    \         tmp=$arr[$i]\n            arr[$i]=$arr[$k]\n            arr[$k]=$tmp\n\
    \        fi\n        (( k++ ))\n    done\n\n    local j\n    for (( j=0; j<len;\
    \ j++ )); do\n        if [ $j -eq $min ]; then\n            tmp=$arr[$j]\n   \
    \         arr[$j]=$arr[$k]\n            arr[$k]=$tmp\n        fi\n        (( k++\
    \ ))\n    done\n\n    local k\n    for (( k=0; k<len; k++ )); do\n        if [\
    \ $k -eq $min ]; then\n            tmp=$arr[$k]\n            arr[$k]=$arr[$j]\n\
    \            arr[$j]=$tmp\n        fi\n        (( j++ ))\n    done\n\n    local\
    \ i\n    for (( i=0; i<len; i++ )); do\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2ltg3ljt.sh: line 94: syntax error near unexpected token `}''

    /tmp/tmp2ltg3ljt.sh: line 94: `}''

    '
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a counts\n\
    \    local -a counts_sorted\n    local -a counts_sorted_reverse\n    local -a\
    \ counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local arr=$1\n  local -a count\n  local -a sorted\n  local -a temp\n  local\
    \ -a i\n  local -a j\n  local -a k\n  local -a klen\n  local -a klen2\n  local\
    \ -a klen3\n  local -a klen4\n  local -a klen5\n  local -a klen6\n  local -a klen7\n\
    \  local -a klen8\n  local -a klen9\n  local -a klen10\n  local -a klen11\n  local\
    \ -a klen12\n  local -a klen13\n  local -a klen14\n  local -a klen15\n  local\
    \ -a klen16\n  local -a klen17\n  local -a klen18\n  local -a klen19\n  local\
    \ -a klen20\n  local -a klen21\n  local -a klen22\n  local -a klen23\n  local\
    \ -a klen24\n  local -a klen25\n  local -a klen26\n  local -a klen27\n  local\
    \ -a klen28\n  local -a klen29\n  local -a klen30\n  local -a klen31\n  local\
    \ -a klen32\n  local -a klen33\n  local -a klen34\n  local -a klen35\n  local\
    \ -a klen36\n  local -a klen37\n  local -a klen38\n  local -a klen39\n  local\
    \ -a klen40\n  local -a klen41\n  local -a klen42\n  local -a klen43\n  local\
    \ -a klen44\n  local -a klen45\n  local -a klen46\n  local -a klen47\n  local\
    \ -a klen48\n  local -a klen49\n  local -a klen50\n  local -a klen51\n  local\
    \ -a klen52\n  local -a klen53\n  local -a klen54\n  local -a klen55\n  local\
    \ -a klen56\n  local -a klen57\n  local -a klen58\n  local -a klen59\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=$1\n    local length=${#array[@]}\n    local result\n    local\
    \ i\n    local j\n    local k\n    local count\n    local temp\n    local count1\n\
    \    local count2\n    local count3\n    local count4\n    local count5\n    local\
    \ count6\n    local count7\n    local count8\n    local count9\n    local count10\n\
    \    local count11\n    local count12\n    local count13\n    local count14\n\
    \    local count15\n    local count16\n    local count17\n    local count18\n\
    \    local count19\n    local count20\n    local count21\n    local count22\n\
    \    local count23\n    local count24\n    local count25\n    local count26\n\
    \    local count27\n    local count28\n    local count29\n    local count30\n\
    \    local count31\n    local count32\n    local count33\n    local count34\n\
    \    local count35\n    local count36\n    local count37\n    local count38\n\
    \    local count39\n    local count40\n    local count41\n    local count42\n\
    \    local count43\n    local count44\n    local count45\n    local count46\n\
    \    local count47\n    local count48\n    local count49\n    local count50\n\
    \    local count51\n    local count52\n    local count53\n    local count54\n\
    \    local count55\n    local count56\n    local count57\n    local count58\n\
    \    local count59\n    local count60\n    local count61\n    local count62\n\
    \    local count63\n    local count64\n    local count65\n    local count66\n\
    \    local count67\n    local count68\n    local count69\n    local count70\n\
    \    local count71\n    local count72\n    local count73\n    local count74\n\
    \    local count75\n    local count76\n    local count77\n    local count78\n\
    \    local count79\n    local count80\n    local count81\n    local count82\n\
    \    local count83\n    local count84\n    local count85\n    local count86\n\
    \    local count87\n    local count88\n    local count89\n    local count90\n\
    \    local count91\n    local count92\n    local count93\n    local count94\n\
    \    local count\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=$1\n    local length=$((${#array[@]}-1))\n    local sorted=()\n\
    \    local i=0\n    local j=0\n    local k=0\n    local count=0\n    local max=0\n\
    \    local min=0\n    local maxdec=0\n    local mindec=0\n    local maxdecnum=0\n\
    \    local mindecnum=0\n    local maxdecnum2=0\n    local mindecnum2=0\n    local\
    \ maxdecnum3=0\n    local mindecnum3=0\n    local maxdecnum4=0\n    local mindecnum4=0\n\
    \    local maxdecnum5=0\n    local mindecnum5=0\n    local maxdecnum6=0\n    local\
    \ mindecnum6=0\n    local maxdecnum7=0\n    local mindecnum7=0\n    local maxdecnum8=0\n\
    \    local mindecnum8=0\n    local maxdecnum9=0\n    local mindecnum9=0\n    local\
    \ maxdecnum10=0\n    local mindecnum10=0\n    local maxdecnum11=0\n    local mindecnum11=0\n\
    \    local maxdecnum12=0\n    local mindecnum12=0\n    local maxdecnum13=0\n \
    \   local mindecnum13=0\n    local maxdecnum14=0\n    local mindecnum14=0\n  \
    \  local maxdecnum15=0\n    local mindecnum15=0\n    local maxdecnum16=0\n   \
    \ local mindecnum16=0\n    local maxdecnum17=0\n    local mindecnum17=0\n    local\
    \ maxdecnum18=0\n    local mindecnum18=0\n    local maxdecnum19=0\n    local mindecnum19=0\n\
    \    local maxdecnum20=0\n    local mindecnum20=0\n    local maxdecnum21=0\n \
    \   local mindecnum21=0\n    local maxdecnum22=0\n    local mindecnum22=0\n  \
    \  local maxdecnum23=0\n    local mindecnum23=0\n    local maxdecnum24=0\n   \
    \ local mindecnum24=0\n    local maxdecnum25=0\n    local mindecnum25=0\n    local\
    \ maxdecnum26=0\n    local mindecnum26=0\n    local maxdecnum27=0\n    local mindecnum27=0\n\
    \    local maxdecnum28=0\n    local mindecnum28=0\n    \n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local tmp\n    local i\n    local j\n    local len\n  \
    \  local count\n    local max\n    local min\n    local dec\n    local decStr\n\
    \    local decStrLen\n    local decStrLen2\n    local decStr2\n    local decStr3\n\
    \    local decStr4\n    local decStr5\n    local decStr6\n    local decStr7\n\
    \    local decStr8\n    local decStr9\n    local decStr10\n    local decStr11\n\
    \    local decStr12\n    local decStr13\n    local decStr14\n    local decStr15\n\
    \    local decStr16\n    local decStr17\n    local decStr18\n    local decStr19\n\
    \    local decStr20\n    local decStr21\n    local decStr22\n    local decStr23\n\
    \    local decStr24\n    local decStr25\n    local decStr26\n    local decStr27\n\
    \    local decStr28\n    local decStr29\n    local decStr30\n    local decStr31\n\
    \    local decStr32\n    local decStr33\n    local decStr34\n    local decStr35\n\
    \    local decStr36\n    local decStr37\n    local decStr38\n    local decStr39\n\
    \    local decStr40\n    local decStr41\n    local decStr42\n    local decStr43\n\
    \    local decStr44\n    local decStr45\n    local decStr46\n    local decStr47\n\
    \    local decStr48\n    local decStr49\n    local decStr50\n    local decStr51\n\
    \    local decStr52\n    local decStr53\n    local decStr54\n    local decStr55\n\
    \    local decStr56\n    local decStr57\n    local decStr58\n    local decStr59\n\
    \    local decStr60\n    local decStr61\n    local decStr62\n    local decStr63\n\
    \    local decStr64\n    local decStr65\n    local decStr66\n    local decStr67\n\
    \    local decStr68\n    local decStr69\n    local decStr70\n    local decStr71\n\
    \    local decStr72\n    local decStr73\n    local decStr74\n    local decStr75\n\
    \    local decStr76\n    local decStr77\n\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array[@]}\"\n    local sorted\n\
    \    local i\n    local j\n    local count\n    local max\n    local min\n   \
    \ local value\n    local tmp\n\n    sorted=()\n    i=0\n    while [ $i -lt $length\
    \ ]; do\n        value=${array[$i]}\n        count=$(echo $value | awk '{print\
    \ length($0)}')\n        if [ $count -gt 0 ]; then\n            min=$(( $count\
    \ + 1 ))\n        else\n            min=0\n        fi\n        max=$(echo $value\
    \ | awk '{print length($0)}')\n        if [ $max -gt $min ]; then\n          \
    \  tmp=$value\n            value=$min\n            min=$tmp\n        fi\n    \
    \    sorted+=( $value )\n        i=$(( $i + 1 ))\n    done\n\n    local i\n  \
    \  local j\n    local tmp\n    local count\n    local value\n    local tmp2\n\
    \    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a sorted\n    local -a counts\n    local -a\
    \ count\n    local -a counts\n    local -a count\n    local -a counts\n    local\
    \ -a count\n    local -a counts\n    local -a count\n    local -a counts\n   \
    \ local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local array=\"$1\"\n  local -a sorted\n  local -a counts\n  local -a count\n\
    \  local -a tmp\n  local -a tmp2\n  local -a tmp3\n  local -a tmp4\n  local -a\
    \ tmp5\n  local -a tmp6\n  local -a tmp7\n  local -a tmp8\n  local -a tmp9\n \
    \ local -a tmp10\n  local -a tmp11\n  local -a tmp12\n  local -a tmp13\n  local\
    \ -a tmp14\n  local -a tmp15\n  local -a tmp16\n  local -a tmp17\n  local -a tmp18\n\
    \  local -a tmp19\n  local -a tmp20\n  local -a tmp21\n  local -a tmp22\n  local\
    \ -a tmp23\n  local -a tmp24\n  local -a tmp25\n  local -a tmp26\n  local -a tmp27\n\
    \  local -a tmp28\n  local -a tmp29\n  local -a tmp30\n  local -a tmp31\n  local\
    \ -a tmp32\n  local -a tmp33\n  local -a tmp34\n  local -a tmp35\n  local -a tmp36\n\
    \  local -a tmp37\n  local -a tmp38\n  local -a tmp39\n  local -a tmp40\n  local\
    \ -a tmp41\n  local -a tmp42\n  local -a tmp43\n  local -a tmp44\n  local -a tmp45\n\
    \  local -a tmp46\n  local -a tmp47\n  local -a tmp48\n  local -a tmp49\n  local\
    \ -a tmp50\n  local -a tmp51\n  local -a tmp52\n  local -a tmp53\n  local -a tmp54\n\
    \  local -a tmp55\n  local -a tmp56\n  local -a tmp57\n  local -a tmp58\n  local\
    \ -a tmp59\n  local -a tmp60\n  local -a tmp61\n  local -a tmp62\n  local -a tmp63\n\
    \  local -a tmp64\n  local -a tmp65\n  local -a tmp66\n  local -a tmp67\n  local\
    \ -a tmp68\n  local -a tmp69\n  local -a tmp\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local sorted=()\n    local i\n\
    \    local j\n    local k\n    local count\n    local temp\n    local tmp\n  \
    \  local count1\n    local count2\n    local count3\n    local count4\n    local\
    \ count5\n    local count6\n    local count7\n    local count8\n    local count9\n\
    \    local count10\n    local count11\n    local count12\n    local count13\n\
    \    local count14\n    local count15\n    local count16\n    local count17\n\
    \    local count18\n    local count19\n    local count20\n    local count21\n\
    \    local count22\n    local count23\n    local count24\n    local count25\n\
    \    local count26\n    local count27\n    local count28\n    local count29\n\
    \    local count30\n    local count31\n    local count32\n    local count33\n\
    \    local count34\n    local count35\n    local count36\n    local count37\n\
    \    local count38\n    local count39\n    local count40\n    local count41\n\
    \    local count42\n    local count43\n    local count44\n    local count45\n\
    \    local count46\n    local count47\n    local count48\n    local count49\n\
    \    local count50\n    local count51\n    local count52\n    local count53\n\
    \    local count54\n    local count55\n    local count56\n    local count57\n\
    \    local count58\n    local count59\n    local count60\n    local count61\n\
    \    local count62\n    local count63\n    local count64\n    local count65\n\
    \    local count66\n    local count67\n    local count68\n    local count69\n\
    \    local count70\n    local count71\n    local count72\n    local count73\n\
    \    local count74\n    local count75\n    local count76\n    local count77\n\
    \    local count78\n    local count79\n    local count80\n    local count81\n\
    \    local count82\n    local count83\n    local count84\n    local count85\n\
    \    local count86\n    local count87\n    local count88\n    local count89\n\
    \    local count90\n    local count91\n    local count92\n    local count93\n\
    \    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local array=$1\n  local length=$2\n  local sorted\n  local i\n  local j\n \
    \ local k\n  local count\n  local count1\n  local count2\n  local count3\n  local\
    \ count4\n  local count5\n  local count6\n  local count7\n  local count8\n  local\
    \ count9\n  local count10\n  local count11\n  local count12\n  local count13\n\
    \  local count14\n  local count15\n  local count16\n  local count17\n  local count18\n\
    \  local count19\n  local count20\n  local count21\n  local count22\n  local count23\n\
    \  local count24\n  local count25\n  local count26\n  local count27\n  local count28\n\
    \  local count29\n  local count30\n  local count31\n  local count32\n  local count33\n\
    \  local count34\n  local count35\n  local count36\n  local count37\n  local count38\n\
    \  local count39\n  local count40\n  local count41\n  local count42\n  local count43\n\
    \  local count44\n  local count45\n  local count46\n  local count47\n  local count48\n\
    \  local count49\n  local count50\n  local count51\n  local count52\n  local count53\n\
    \  local count54\n  local count55\n  local count56\n  local count57\n  local count58\n\
    \  local count59\n  local count60\n  local count61\n  local count62\n  local count63\n\
    \  local count64\n  local count65\n  local count66\n  local count67\n  local count68\n\
    \  local count69\n  local count70\n  local count71\n  local count72\n  local count73\n\
    \  local count74\n  local count75\n  local count76\n  local count77\n  local count78\n\
    \  local count79\n  local count80\n  local count81\n  local count82\n  local count83\n\
    \  local count84\n  local count85\n  local count86\n  local count87\n  local count88\n\
    \  local count89\n  local count90\n  local count91\n  local count92\n  local count93\n\
    \  local count94\n  local count95\n  local count96\n\n}\n\ncandidate() {\n   \
    \ sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\"\
    ) = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\"\
    \ ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local t\n    local count\n    local dec\n    local decstr\n\
    \    local decstrlen\n    local decstrlen2\n    local decstrlen3\n    local decstrlen4\n\
    \    local decstrlen5\n    local decstrlen6\n    local decstrlen7\n    local decstrlen8\n\
    \    local decstrlen9\n    local decstrlen10\n    local decstrlen11\n    local\
    \ decstrlen12\n    local decstrlen13\n    local decstrlen14\n    local decstrlen15\n\
    \    local decstrlen16\n    local decstrlen17\n    local decstrlen18\n    local\
    \ decstrlen19\n    local decstrlen20\n    local decstrlen21\n    local decstrlen22\n\
    \    local decstrlen23\n    local decstrlen24\n    local decstrlen25\n    local\
    \ decstrlen26\n    local decstrlen27\n    local decstrlen28\n    local decstrlen29\n\
    \    local decstrlen30\n    local decstrlen31\n    local decstrlen32\n    local\
    \ decstrlen33\n    local decstrlen34\n    local decstrlen35\n    local decstrlen36\n\
    \    local decstrlen37\n    local decstrlen38\n    local decstrlen39\n    local\
    \ decstrlen40\n    local decstrlen41\n    local decstrlen42\n    local decstrlen43\n\
    \    local decstrlen44\n    local decstrlen45\n    local decstrlen46\n    local\
    \ decstrlen47\n    local decstrlen48\n    local decstrlen49\n    local decstrlen50\n\
    \    local decstrlen51\n    local decstrlen52\n    local decstrlen53\n    local\
    \ decstrlen54\n    local decstrlen55\n    local decstrlen56\n    local decstrlen57\n\
    \    local decstrlen58\n    local decstrlen59\n    local decstrlen60\n    local\
    \ decstrlen61\n    local decstrlen62\n    local decstrlen63\n    local decstrlen64\n\
    \    local decstrlen65\n    local decstrlen66\n    local decstrlen\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a sorted\n    local -a counts\n    local -a\
    \ count\n    local -a counts\n    local -a count\n    local -a counts\n    local\
    \ -a count\n    local -a counts\n    local -a count\n    local -a counts\n   \
    \ local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    \    local -a count\n    local -a counts\n    local -a count\n    local -a counts\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a count\n    local -a sorted\n    local -a tmp\n\
    \    local -i i\n    local j\n    local k\n    local -a tmp2\n    local -a tmp3\n\
    \    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n\
    \    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n\
    \    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n\
    \    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n\
    \    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n\
    \    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n\
    \    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n\
    \    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n\
    \    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n\
    \    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n\
    \    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n\
    \    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n\
    \    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n\
    \    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n\
    \    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n\
    \    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n\
    \    local -a tmp68\n    local -a tmp69\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a counts\n    local -a count\n\
    \    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n \
    \   local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n \
    \   local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n\
    \    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n\
    \    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n\
    \    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n\
    \    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n\
    \    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n\
    \    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n\
    \    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n\
    \    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n\
    \    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n\
    \    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n\
    \    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n\
    \    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n\
    \    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n\
    \    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n\
    \    local -a tmp69\n    local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local -n arr=$1\n    local -a sorted\n    local -a counts\n    local -a tmp\n\
    \    local -i i\n    local j\n    local k\n    local count\n    local tmp2\n \
    \   local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpu5k6q0n3.sh: line 9: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local sorted=()\n\
    \    local i\n    local j\n    local k\n    local count\n    local decimal\n \
    \   local decimal2\n    local decimal3\n    local decimal4\n    local decimal5\n\
    \    local decimal6\n    local decimal7\n    local decimal8\n    local decimal9\n\
    \    local decimal10\n    local decimal11\n    local decimal12\n    local decimal13\n\
    \    local decimal14\n    local decimal15\n    local decimal16\n    local decimal17\n\
    \    local decimal18\n    local decimal19\n    local decimal20\n    local decimal21\n\
    \    local decimal22\n    local decimal23\n    local decimal24\n    local decimal25\n\
    \    local decimal26\n    local decimal27\n    local decimal28\n    local decimal29\n\
    \    local decimal30\n    local decimal31\n    local decimal32\n    local decimal33\n\
    \    local decimal34\n    local decimal35\n    local decimal36\n    local decimal37\n\
    \    local decimal38\n    local decimal39\n    local decimal40\n    local decimal41\n\
    \    local decimal42\n    local decimal43\n    local decimal44\n    local decimal45\n\
    \    local decimal46\n    local decimal47\n    local decimal48\n    local decimal49\n\
    \    local decimal50\n    local decimal51\n    local decimal52\n    local decimal53\n\
    \    local decimal54\n    local decimal55\n    local decimal56\n    local decimal57\n\
    \    local decimal58\n    local decimal59\n    local decimal60\n    local decimal61\n\
    \    local decimal62\n    local decimal63\n    local decimal64\n    local decimal65\n\
    \    local decimal66\n    local decimal67\n    local decimal68\n    local decimal69\n\
    \    local decimal70\n    local decimal71\n    local decimal72\n    local decimal73\n\
    \    local decimal74\n    local decimal75\n    local decimal76\n    local decimal77\n\
    \    local decimal78\n    local decimal79\n    local decimal80\n    local decimal81\n\
    \    local decimal82\n    local decimal83\n    local decimal84\n    local decimal85\n\
    \    local decimal86\n    local decimal87\n    local decimal88\n    local decimal89\n\
    \    local decimal90\n    local decimal91\n    local decimal92\n    local decimal93\n\
    \    local decimal94\n    local decimal95\n    local \n}\n\ncandidate() {\n  \
    \  sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a counts\n\
    \    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n \
    \   local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n \
    \   local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n\
    \    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n\
    \    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n\
    \    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n\
    \    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n\
    \    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n\
    \    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n\
    \    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n\
    \    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n\
    \    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n\
    \    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n\
    \    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n\
    \    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n\
    \    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n\
    \    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n\
    \    local -a tmp69\n    local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a sorted\n    local -a counts\n    local -a\
    \ sorted\n    local -a counts\n    local -a tmp\n    local -a tmp\n    local -a\
    \ tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array[@]}\"\n    local sorted=()\n\
    \    local i\n    local j\n    local k\n    local count\n    local temp\n    local\
    \ temp2\n    local temp3\n    local temp4\n    local temp5\n    local temp6\n\
    \    local temp7\n    local temp8\n    local temp9\n    local temp10\n    local\
    \ temp11\n    local temp12\n    local temp13\n    local temp14\n    local temp15\n\
    \    local temp16\n    local temp17\n    local temp18\n    local temp19\n    local\
    \ temp20\n    local temp21\n    local temp22\n    local temp23\n    local temp24\n\
    \    local temp25\n    local temp26\n    local temp27\n    local temp28\n    local\
    \ temp29\n    local temp30\n    local temp31\n    local temp32\n    local temp33\n\
    \    local temp34\n    local temp35\n    local temp36\n    local temp37\n    local\
    \ temp38\n    local temp39\n    local temp40\n    local temp41\n    local temp42\n\
    \    local temp43\n    local temp44\n    local temp45\n    local temp46\n    local\
    \ temp47\n    local temp48\n    local temp49\n    local temp50\n    local temp51\n\
    \    local temp52\n    local temp53\n    local temp54\n    local temp55\n    local\
    \ temp56\n    local temp57\n    local temp58\n    local temp59\n    local temp60\n\
    \    local temp61\n    local temp62\n    local temp63\n    local temp64\n    local\
    \ temp65\n    local temp66\n    local temp67\n    local temp68\n    local temp69\n\
    \    local temp70\n    local temp71\n    local temp72\n    local temp73\n    local\
    \ temp74\n    local temp75\n    local temp76\n    local temp77\n    local temp78\n\
    \    local temp79\n    local temp80\n    local temp81\n    local temp82\n    local\
    \ temp83\n    local temp84\n    local temp85\n    local temp86\n    local temp87\n\
    \    local temp88\n    local temp89\n    local temp90\n    local temp91\n    local\
    \ temp92\n    local temp93\n    local temp94\n    local temp95\n\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local sorted\n  \
    \  local i\n    local j\n    local k\n    local count\n    local temp\n    local\
    \ temp2\n    local temp3\n    local temp4\n    local temp5\n    local temp6\n\
    \    local temp7\n    local temp8\n    local temp9\n    local temp10\n    local\
    \ temp11\n    local temp12\n    local temp13\n    local temp14\n    local temp15\n\
    \    local temp16\n    local temp17\n    local temp18\n    local temp19\n    local\
    \ temp20\n    local temp21\n    local temp22\n    local temp23\n    local temp24\n\
    \    local temp25\n    local temp26\n    local temp27\n    local temp28\n    local\
    \ temp29\n    local temp30\n    local temp31\n    local temp32\n    local temp33\n\
    \    local temp34\n    local temp35\n    local temp36\n    local temp37\n    local\
    \ temp38\n    local temp39\n    local temp40\n    local temp41\n    local temp42\n\
    \    local temp43\n    local temp44\n    local temp45\n    local temp46\n    local\
    \ temp47\n    local temp48\n    local temp49\n    local temp50\n    local temp51\n\
    \    local temp52\n    local temp53\n    local temp54\n    local temp55\n    local\
    \ temp56\n    local temp57\n    local temp58\n    local temp59\n    local temp60\n\
    \    local temp61\n    local temp62\n    local temp63\n    local temp64\n    local\
    \ temp65\n    local temp66\n    local temp67\n    local temp68\n    local temp69\n\
    \    local temp70\n    local temp71\n    local temp72\n    local temp73\n    local\
    \ temp74\n    local temp75\n    local temp76\n    local temp77\n    local temp78\n\
    \    local temp79\n    local temp80\n    local temp81\n    local temp82\n    local\
    \ temp83\n    local temp84\n    local temp85\n    local temp86\n    local temp87\n\
    \    local temp88\n    local temp89\n    local temp90\n    local temp91\n    local\
    \ temp92\n    local temp93\n    local temp94\n    local temp95\n    local temp96\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local -n arr=$1\n    local -a sorted=()\n    local -a counts=()\n    local\
    \ -i i\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n\
    \    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n\
    \    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n\
    \    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n\
    \    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n\
    \    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n\
    \    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n\
    \    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n\
    \    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n\
    \    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n\
    \    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n\
    \    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n\
    \    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n\
    \    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n\
    \    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n\
    \    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n\
    \    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n\
    \    local -a tmp69\n    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpshy9qxa0.sh: line 9: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local result\n  \
    \  local i\n    local j\n    local count\n    local temp\n    local max\n    local\
    \ min\n    local maxIndex\n    local minIndex\n    local tempIndex\n    local\
    \ tempCount\n    local tempMax\n    local tempMin\n    local tempMaxIndex\n  \
    \  local tempMinIndex\n    local tempMaxCount\n    local tempMinCount\n    local\
    \ tempMaxValue\n    local tempMinValue\n    local tempMaxValueIndex\n    local\
    \ tempMinValueIndex\n    local tempMaxValueCount\n    local tempMinValueCount\n\
    \    local tempMaxValueValue\n    local tempMinValueValue\n    local tempMaxValueValueIndex\n\
    \    local tempMinValueValueIndex\n    local tempMaxValueValueCount\n    local\
    \ tempMinValueValueCount\n    local tempMaxValueValueValue\n    local tempMinValueValueValue\n\
    \    local tempMaxValueValueValueIndex\n    local tempMinValueValueValueIndex\n\
    \    local tempMaxValueValueValueCount\n    local tempMinValueValueValueCount\n\
    \    local tempMaxValueValueValueValue\n    local tempMinValueValueValueValue\n\
    \    local tempMaxValueValueValueValueIndex\n    local tempMinValueValueValueValueIndex\n\
    \    local tempMaxValueValueValueValueCount\n    local tempMinValueValueValueValueCount\n\
    \    local tempMaxValueValueValueValueValue\n    local tempMinValueValueValueValueValue\n\
    \    local tempMaxValueValueValueValueIndex\n    local tempMinValueValueValueValueIndex\n\
    \    local tempMaxValueValueValueValueCount\n    local tempMinValueValueValueValueCount\n\
    \    local tempMaxValueValueValueValueValue\n    local tempMinValueValueValueValueValue\n\
    \    local tempMaxValueValueValueValueIndex\n    local tempMinValueValueValueValueIndex\n\
    \    local tempMaxValueValueValueValueCount\n    local tempMinValueValueValueValueCount\n\
    \    local tempMaxValueValueValueValueValue\n    local tempMinValueValueValueValueValue\n\
    \    local tempMaxValueValueValueValueIndex\n    local tempMinValueValueValueValueIndex\n\
    \    local tempMaxValueValueValueValueCount\n    local tempMinValueValueValueValueCount\n\
    \    local tempMaxValueValueValueValueValue\n    local tempMinValueValueValueValueValue\n\
    \    local tempMaxValueValueValueValueIndex\n    local tempMinValueValueValueValueIndex\n\
    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4\
    \ -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1\
    \ 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local temp\n    local count\n    local decimal\n    local decimal2\n\
    \    local decimal3\n    local decimal4\n    local decimal5\n    local decimal6\n\
    \    local decimal7\n    local decimal8\n    local decimal9\n    local decimal10\n\
    \    local decimal11\n    local decimal12\n    local decimal13\n    local decimal14\n\
    \    local decimal15\n    local decimal16\n    local decimal17\n    local decimal18\n\
    \    local decimal19\n    local decimal20\n    local decimal21\n    local decimal22\n\
    \    local decimal23\n    local decimal24\n    local decimal25\n    local decimal26\n\
    \    local decimal27\n    local decimal28\n    local decimal29\n    local decimal30\n\
    \    local decimal31\n    local decimal32\n    local decimal33\n    local decimal34\n\
    \    local decimal35\n    local decimal36\n    local decimal37\n    local decimal38\n\
    \    local decimal39\n    local decimal40\n    local decimal41\n    local decimal42\n\
    \    local decimal43\n    local decimal44\n    local decimal45\n    local decimal46\n\
    \    local decimal47\n    local decimal48\n    local decimal49\n    local decimal50\n\
    \    local decimal51\n    local decimal52\n    local decimal53\n    local decimal54\n\
    \    local decimal55\n    local decimal56\n    local decimal57\n    local decimal58\n\
    \    local decimal59\n    local decimal60\n    local decimal61\n    local decimal62\n\
    \    local decimal63\n    local decimal64\n    local decimal65\n    local decimal66\n\
    \    local decimal67\n    local decimal68\n    local decimal69\n    local decimal70\n\
    \    local decimal71\n    local decimal72\n    local decimal73\n    local decimal74\n\
    \    local decimal75\n    local decimal76\n    local decimal77\n    local decimal78\n\
    \    local decimal79\n    local decimal80\n    local decimal81\n    local decimal82\n\
    \    local decimal83\n    local decimal84\n    local decimal85\n    local decimal86\n\
    \    local decimal87\n    local decimal88\n    local decimal89\n    local decimal90\n\
    \    local decimal91\n    local decimal92\n    local decimal93\n    local decimal94\n\
    \    local decimal95\n    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local t\n    local val\n    local count\n    local max\n   \
    \ local min\n    local dec\n    local decval\n    local deccount\n    local decmax\n\
    \    local decmin\n    local decdec\n    local decdecval\n    local decdeccount\n\
    \    local decdecmax\n    local decdecmin\n    local decdecdec\n    local decdecdecval\n\
    \    local decdecdeccount\n    local decdecdecmax\n    local decdecdecmin\n  \
    \  local decdecdecdec\n    local decdecdecdecval\n    local decdecdecdeccount\n\
    \    local decdecdecdecmax\n    local decdecdecdecmin\n    local decdecdecdecdec\n\
    \    local decdecdecdecval\n    local decdecdecdeccount\n    local decdecdecdecmax\n\
    \    local decdecdecdecmin\n    local decdecdecdecdec\n    local decdecdecdecval\n\
    \    local decdecdecdeccount\n    local decdecdecdecmax\n    local decdecdecdecmin\n\
    \    local decdecdecdecdec\n    local decdecdecdecval\n    local decdecdecdeccount\n\
    \    local decdecdecdecmax\n    local decdecdecdecmin\n    local decdecdecdec\n\
    \    local decdecdecval\n    local decdecdeccount\n    local decdecdecmax\n  \
    \  local decdecdecmin\n    local decdecdec\n    local decdecdecval\n    local\
    \ decdecdeccount\n    local decdecdecmax\n    local decdecdecmin\n    local decdecdec\n\
    \    local decdecdecval\n    local decdecdeccount\n    local decdecdecmax\n  \
    \  local decdecdecmin\n    local decdecdec\n    local decdecdecval\n    local\
    \ decdecdeccount\n    local decdecdecmax\n    local decdecdecmin\n    local decdecdec\n\
    \    local decdecdecval\n    local decdecdeccount\n    local decdecdecmax\n  \
    \  local decdecdecmin\n    local decdecdec\n    local decdecdecval\n    local\
    \ decdecdeccount\n    local decdecdecmax\n    local decdecdecmin\n    local decdecdec\n\
    \    local decdecdecval\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array[@]}\"\n    local count\n\
    \    local i\n    local j\n    local tmp\n    local tmp2\n    local tmp3\n   \
    \ local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local count\n   \
    \ local i\n    local j\n    local k\n    local temp\n    local tmp\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: -1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local sorted=()\n\
    \    local i=0\n    while [ $i -lt $length ]; do\n        local j=0\n        while\
    \ [ $j -le $length ]; do\n            local k=0\n            while [ $k -le $length\
    \ ]; do\n                if [ $array[$k] -eq 1 ]; then\n                    sorted+=(\
    \ $array[$k] )\n                    let \"k++\"\n                else\n      \
    \              let \"j++\"\n                fi\n            done\n           \
    \ let \"i++\"\n        done\n        let \"j=0\"\n    done\n    local result=()\n\
    \    local count=0\n    for i in \"${sorted[@]}\"; do\n        local j=0\n   \
    \     while [ $j -le $length ]; do\n            if [ $i -eq $array[$j] ]; then\n\
    \                let \"count++\"\n            else\n                let \"j++\"\
    \n            fi\n        done\n        result+=( $count )\n    done\n    local\
    \ i=0\n    while [ $i -lt $length ]; do\n        local j=0\n        while [ $j\
    \ -le $length ]; do\n            if [ $array[$j] -eq 1 ]; then\n             \
    \   let \"result[$i]=$j\"\n                let \"j++\"\n            else\n   \
    \             let \"result[$i]=$j\"\n                let \"j++\"\n           \
    \ fi\n        done\n        let \"i++\"\n    done\n    local result\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=28 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=15 encoding='utf-8'>
  timestamp: 1660038180
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local temp\n    local count\n    local i\n    local\
    \ j\n    local k\n    local len\n    local max\n    local min\n    local dec\n\
    \    local decstr\n    local decstrlen\n    local decstrlen2\n    local decstrlen3\n\
    \    local decstrlen4\n    local decstrlen5\n    local decstrlen6\n    local decstrlen7\n\
    \    local decstrlen8\n    local decstrlen9\n    local decstrlen10\n    local\
    \ decstrlen11\n    local decstrlen12\n    local decstrlen13\n    local decstrlen14\n\
    \    local decstrlen15\n    local decstrlen16\n    local decstrlen17\n    local\
    \ decstrlen18\n    local decstrlen19\n    local decstrlen20\n    local decstrlen21\n\
    \    local decstrlen22\n    local decstrlen23\n    local decstrlen24\n    local\
    \ decstrlen25\n    local decstrlen26\n    local decstrlen27\n    local decstrlen28\n\
    \    local decstrlen29\n    local decstrlen30\n    local decstrlen31\n    local\
    \ decstrlen32\n    local decstrlen33\n    local decstrlen34\n    local decstrlen35\n\
    \    local decstrlen36\n    local decstrlen37\n    local decstrlen38\n    local\
    \ decstrlen39\n    local decstrlen40\n    local decstrlen41\n    local decstrlen42\n\
    \    local decstrlen43\n    local decstrlen44\n    local decstrlen45\n    local\
    \ decstrlen46\n    local decstrlen47\n    local decstrlen48\n    local decstrlen49\n\
    \    local decstrlen50\n    local decstrlen51\n    local decstrlen52\n    local\
    \ decstrlen53\n    local decstrlen54\n    local decstrlen55\n    local decstrlen56\n\
    \    local decstrlen57\n    local decstrlen58\n    local decstrlen59\n    local\
    \ decstrlen60\n    local decstrlen61\n    local decstrlen62\n    local decstrlen63\n\
    \    local decstrlen64\n    local decstrlen65\n    local decstrlen66\n    local\
    \ decstr\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array[@]}\"\n    local sorted=()\n\
    \    local i=0\n    while [ $i -lt $length ]; do\n        local j=0\n        while\
    \ [ $j -le $length ]; do\n            local count=0\n            local digit=${array[$j]}\n\
    \            (( digit == 1 )) && count=1\n            (( digit == 0 )) && count=0\n\
    \            (( count > 0 )) && sorted+=(\"$j\")\n            j=$(( j + 1 ))\n\
    \        done\n        i=$(( i + 1 ))\n    done\n    local sortedLength=\"${#sorted[@]}\"\
    \n    local sortedArray=()\n    local j=0\n    while [ $j -le $sortedLength ];\
    \ do\n        local digit=${sorted[$j]}\n        (( digit == 1 )) && sortedArray+=(\"\
    ${array[$j]}\")\n        j=$(( j + 1 ))\n    done\n    local sortedArrayLength=\"\
    ${#sortedArray[@]}\"\n    echo \"${sortedArray[@]}\"\n}\n\ncandidate() {\n   \
    \ sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\"\
    ) = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\"\
    \ ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe9gjahlo.sh: line 18: ((: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")

    /tmp/tmpe9gjahlo.sh: line 19: ((: 1 5 2 3 4: syntax error in expression (error
    token is "5 2 3 4")

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local len=${#array[@]}\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local sorted=()\n    local dec=0\n    local decdec=0\n\
    \    local decdecdec=0\n    local decdecdecdec=0\n    local decdecdecdecdec=0\n\
    \    local decdecdecdecdecdec=0\n    local decdecdecdecdecdecdec=0\n    local\
    \ decdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdec=0\n    local\
    \ decdecdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdecdec=0\n   \
    \ local decdecdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdecdecdecdecdec=0\n    local decdecdecdecdecdecdecdecdec=0\n\
    \    local decdecdecdecdec\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a counts\n\
    \    local -a max\n    local -a min\n    local -a maxes\n    local -a mins\n \
    \   local -a maxes\n    local -a mins\n    local -a maxes\n    local -a mins\n\
    \    local -a maxes\n    local -a mins\n    local -a maxes\n    local -a mins\n\
    \    local -a maxes\n    local -a mins\n    local -a maxes\n    local -a mins\n\
    \    local -a maxes\n    local -a mins\n    local -a maxes\n    local -a mins\n\
    \    local -a maxes\n    local -a mins\n    local -a maxes\n    local -a mins\n\
    \    local -a maxes\n    local -a mins\n    local -a maxes\n    local -a mins\n\
    \    local -a maxes\n    local -a mins\n    local -a maxes\n    local -a mins\n\
    \    local -a maxes\n    local -a mins\n    local -a maxes\n    local -a mins\n\
    \    local -a maxes\n    local -a mins\n    local -a maxes\n    local -a mins\n\
    \    local -a maxes\n    local -a mins\n    local -a maxes\n    local -a mins\n\
    \    local -a maxes\n    local -a mins\n    local -a maxes\n    local -a mins\n\
    \    local -a maxes\n    local -a mins\n    local -a maxes\n    local -a mins\n\
    \    local -a maxes\n    local -a mins\n    local -a maxes\n    local -a mins\n\
    \    local -a maxes\n    local -a mins\n    local -a maxes\n    local -a mins\n\
    \    local -a maxes\n    local -a mins\n    local -a maxes\n    local -a mins\n\
    \    local -a maxes\n    local -a mins\n    local -a maxes\n    local -a mins\n\
    \    local -a maxes\n    local -a mins\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a dec\n\
    \    local -a decdec\n    local -a decdecdec\n    local -a decdecdecdec\n    local\
    \ -a decdecdecdecdec\n    local -a decdecdecdecdecdec\n    local -a decdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdec\n    local -a decdecdecdecdecdecdecdecdecdec\n\
    \    local -a decdecdecdecdecdecdecdecdecdec\n\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a arr2\n    local -a arr3\n    local -a arr4\n \
    \   local -a arr5\n    local -a arr6\n    local -a arr7\n    local -a arr8\n \
    \   local -a arr9\n    local -a arr10\n    local -a arr11\n    local -a arr12\n\
    \    local -a arr13\n    local -a arr14\n    local -a arr15\n    local -a arr16\n\
    \    local -a arr17\n    local -a arr18\n    local -a arr19\n    local -a arr20\n\
    \    local -a arr21\n    local -a arr22\n    local -a arr23\n    local -a arr24\n\
    \    local -a arr25\n    local -a arr26\n    local -a arr27\n    local -a arr28\n\
    \    local -a arr29\n    local -a arr30\n    local -a arr31\n    local -a arr32\n\
    \    local -a arr33\n    local -a arr34\n    local -a arr35\n    local -a arr36\n\
    \    local -a arr37\n    local -a arr38\n    local -a arr39\n    local -a arr40\n\
    \    local -a arr41\n    local -a arr42\n    local -a arr43\n    local -a arr44\n\
    \    local -a arr45\n    local -a arr46\n    local -a arr47\n    local -a arr48\n\
    \    local -a arr49\n    local -a arr50\n    local -a arr51\n    local -a arr52\n\
    \    local -a arr53\n    local -a arr54\n    local -a arr55\n    local -a arr56\n\
    \    local -a arr57\n    local -a arr58\n    local -a arr59\n    local -a arr60\n\
    \    local -a arr61\n    local -a arr62\n    local -a arr63\n    local -a arr64\n\
    \    local -a arr65\n    local -a arr66\n    local -a arr67\n    local -a arr68\n\
    \    local -a arr69\n    local -a arr70\n    local -a arr71\n    local -a arr72\n\
    \    local -a arr73\n    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local sorted\n  \
    \  local i\n    local j\n    local count\n    local max\n    local min\n    local\
    \ temp\n    local temp2\n    local temp3\n    local temp4\n    local temp5\n \
    \   local temp6\n    local temp7\n    local temp8\n    local temp9\n    local\
    \ temp10\n    local temp11\n    local temp12\n    local temp13\n    local temp14\n\
    \    local temp15\n    local temp16\n    local temp17\n    local temp18\n    local\
    \ temp19\n    local temp20\n    local temp21\n    local temp22\n    local temp23\n\
    \    local temp24\n    local temp25\n    local temp26\n    local temp27\n    local\
    \ temp28\n    local temp29\n    local temp30\n    local temp31\n    local temp32\n\
    \    local temp33\n    local temp34\n    local temp35\n    local temp36\n    local\
    \ temp37\n    local temp38\n    local temp39\n    local temp40\n    local temp41\n\
    \    local temp42\n    local temp43\n    local temp44\n    local temp45\n    local\
    \ temp46\n    local temp47\n    local temp48\n    local temp49\n    local temp50\n\
    \    local temp51\n    local temp52\n    local temp53\n    local temp54\n    local\
    \ temp55\n    local temp56\n    local temp57\n    local temp58\n    local temp59\n\
    \    local temp60\n    local temp61\n    local temp62\n    local temp63\n    local\
    \ temp64\n    local temp65\n    local temp66\n    local temp67\n    local temp68\n\
    \    local temp69\n    local temp70\n    local temp71\n    local temp72\n    local\
    \ temp73\n    local temp74\n    local temp75\n    local temp76\n    local temp77\n\
    \    local temp78\n    local temp79\n    local temp80\n    local temp81\n    local\
    \ temp82\n    local temp83\n    local temp84\n    local temp85\n    local temp86\n\
    \    local temp87\n    local temp88\n    local temp89\n    local temp90\n    local\
    \ temp91\n    local temp92\n    local temp93\n    local temp94\n    local temp95\n\
    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4\
    \ -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1\
    \ 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a arr2\n    local -a arr3\n    local -a arr4\n \
    \   local -a arr5\n    local -a arr6\n    local -a arr7\n    local -a arr8\n \
    \   local -a arr9\n    local -a arr10\n    local -a arr11\n    local -a arr12\n\
    \    local -a arr13\n    local -a arr14\n    local -a arr15\n    local -a arr16\n\
    \    local -a arr17\n    local -a arr18\n    local -a arr19\n    local -a arr20\n\
    \    local -a arr21\n    local -a arr22\n    local -a arr23\n    local -a arr24\n\
    \    local -a arr25\n    local -a arr26\n    local -a arr27\n    local -a arr28\n\
    \    local -a arr29\n    local -a arr30\n    local -a arr31\n    local -a arr32\n\
    \    local -a arr33\n    local -a arr34\n    local -a arr35\n    local -a arr36\n\
    \    local -a arr37\n    local -a arr38\n    local -a arr39\n    local -a arr40\n\
    \    local -a arr41\n    local -a arr42\n    local -a arr43\n    local -a arr44\n\
    \    local -a arr45\n    local -a arr46\n    local -a arr47\n    local -a arr48\n\
    \    local -a arr49\n    local -a arr50\n    local -a arr51\n    local -a arr52\n\
    \    local -a arr53\n    local -a arr54\n    local -a arr55\n    local -a arr56\n\
    \    local -a arr57\n    local -a arr58\n    local -a arr59\n    local -a arr60\n\
    \    local -a arr61\n    local -a arr62\n    local -a arr63\n    local -a arr64\n\
    \    local -a arr65\n    local -a arr66\n    local -a arr67\n    local -a arr68\n\
    \    local -a arr69\n    local -a arr70\n    local -a arr71\n    local -a arr72\n\
    \    local -a arr73\n    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a counts\n    local -a tmp\n\
    \    local -i i\n    local j\n    local k\n    local len\n    local -a tmp2\n\
    \    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n\
    \    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n\
    \    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n\
    \    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n\
    \    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n\
    \    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n\
    \    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n\
    \    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n\
    \    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n\
    \    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n\
    \    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n\
    \    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n\
    \    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n\
    \    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n\
    \    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n\
    \    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n\
    \    local -a tmp67\n    local -a tmp68\n    \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local len=\"${#array[@]}\"\n    local sorted=()\n\
    \    local i\n    local j\n    local k\n    local count\n    local tmp\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local result\n    local i\n    local count\n    local\
    \ decimal\n    local decimal2\n    local decimal3\n    local decimal4\n    local\
    \ decimal5\n    local decimal6\n    local decimal7\n    local decimal8\n    local\
    \ decimal9\n    local decimal10\n    local decimal11\n    local decimal12\n  \
    \  local decimal13\n    local decimal14\n    local decimal15\n    local decimal16\n\
    \    local decimal17\n    local decimal18\n    local decimal19\n    local decimal20\n\
    \    local decimal21\n    local decimal22\n    local decimal23\n    local decimal24\n\
    \    local decimal25\n    local decimal26\n    local decimal27\n    local decimal28\n\
    \    local decimal29\n    local decimal30\n    local decimal31\n    local decimal32\n\
    \    local decimal33\n    local decimal34\n    local decimal35\n    local decimal36\n\
    \    local decimal37\n    local decimal38\n    local decimal39\n    local decimal40\n\
    \    local decimal41\n    local decimal42\n    local decimal43\n    local decimal44\n\
    \    local decimal45\n    local decimal46\n    local decimal47\n    local decimal48\n\
    \    local decimal49\n    local decimal50\n    local decimal51\n    local decimal52\n\
    \    local decimal53\n    local decimal54\n    local decimal55\n    local decimal56\n\
    \    local decimal57\n    local decimal58\n    local decimal59\n    local decimal60\n\
    \    local decimal61\n    local decimal62\n    local decimal63\n    local decimal64\n\
    \    local decimal65\n    local decimal66\n    local decimal67\n    local decimal68\n\
    \    local decimal69\n    local decimal70\n    local decimal71\n    local decimal72\n\
    \    local decimal73\n    local decimal74\n    local decimal75\n    local decimal76\n\
    \    local decimal77\n    local decimal78\n    local decimal79\n    local decimal80\n\
    \    local decimal81\n    local decimal82\n    local decimal83\n    local decimal84\n\
    \    local decimal85\n    local decimal86\n    local decimal87\n    local decimal88\n\
    \    local decimal89\n    local decimal90\n    local decimal91\n    local decimal92\n\
    \    local decimal93\n    local decimal94\n    local decimal95\n    local decimal96\n\
    \    local decimal97\n    local decimal98\n    local decimal99\n\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local -n arr=$1\n    local -a sorted\n    local -a count\n    local -a tmp\n\
    \    local -i i\n    local j\n    local k\n    local -a tmp2\n    local -a tmp3\n\
    \    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n\
    \    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n\
    \    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n\
    \    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n\
    \    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n\
    \    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n\
    \    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n\
    \    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n\
    \    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n\
    \    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n\
    \    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n\
    \    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n\
    \    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n\
    \    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n\
    \    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n\
    \    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n\
    \    local -a tmp68\n    local -a \n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9hxvqz8z.sh: line 9: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local result\n    local i\n    local count\n    local\
    \ dec\n    local decstr\n    local decstrlen\n    local decstrlen2\n    local\
    \ decstrlen3\n    local decstrlen4\n    local decstrlen5\n    local decstrlen6\n\
    \    local decstrlen7\n    local decstrlen8\n    local decstrlen9\n    local decstrlen10\n\
    \    local decstrlen11\n    local decstrlen12\n    local decstrlen13\n    local\
    \ decstrlen14\n    local decstrlen15\n    local decstrlen16\n    local decstrlen17\n\
    \    local decstrlen18\n    local decstrlen19\n    local decstrlen20\n    local\
    \ decstrlen21\n    local decstrlen22\n    local decstrlen23\n    local decstrlen24\n\
    \    local decstrlen25\n    local decstrlen26\n    local decstrlen27\n    local\
    \ decstrlen28\n    local decstrlen29\n    local decstrlen30\n    local decstrlen31\n\
    \    local decstrlen32\n    local decstrlen33\n    local decstrlen34\n    local\
    \ decstrlen35\n    local decstrlen36\n    local decstrlen37\n    local decstrlen38\n\
    \    local decstrlen39\n    local decstrlen40\n    local decstrlen41\n    local\
    \ decstrlen42\n    local decstrlen43\n    local decstrlen44\n    local decstrlen45\n\
    \    local decstrlen46\n    local decstrlen47\n    local decstrlen48\n    local\
    \ decstrlen49\n    local decstrlen50\n    local decstrlen51\n    local decstrlen52\n\
    \    local decstrlen53\n    local decstrlen54\n    local decstrlen55\n    local\
    \ decstrlen56\n    local decstrlen57\n    local decstrlen58\n    local decstrlen59\n\
    \    local decstrlen60\n    local decstrlen61\n    local decstrlen62\n    local\
    \ decstrlen63\n    local decstrlen64\n    local decstrlen65\n    local decstrlen66\n\
    \    local decstrlen67\n    local decstrlen68\n    local decstrlen69\n    local\
    \ dec\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local result\n    local i\n    local j\n    local\
    \ count\n    local max\n    local min\n    local tmp\n    local tmp2\n    local\
    \ tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local\
    \ tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n  \
    \  local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    local tmp\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a sorted\n    local -a counts\n    local -a\
    \ count\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a\
    \ tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a\
    \ tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a\
    \ tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local t=0\n    local l=0\n    local m=0\n    local n=0\n   \
    \ local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local\
    \ ts=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local\
    \ y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n\
    \    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n \
    \   local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n  \
    \  local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n   \
    \ local ts=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local\
    \ d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local ts=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n   \
    \ local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local ts=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n \
    \   local y=0\n    local z=0\n    local a=0\n    local b=0\n    local \n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local tmp\n    local len\n    local i\n    local j\n  \
    \  local k\n    local count\n    local dec\n    local dec2\n    local dec3\n \
    \   local dec4\n    local dec5\n    local dec6\n    local dec7\n    local dec8\n\
    \    local dec9\n    local dec10\n    local dec11\n    local dec12\n    local\
    \ dec13\n    local dec14\n    local dec15\n    local dec16\n    local dec17\n\
    \    local dec18\n    local dec19\n    local dec20\n    local dec21\n    local\
    \ dec22\n    local dec23\n    local dec24\n    local dec25\n    local dec26\n\
    \    local dec27\n    local dec28\n    local dec29\n    local dec30\n    local\
    \ dec31\n    local dec32\n    local dec33\n    local dec34\n    local dec35\n\
    \    local dec36\n    local dec37\n    local dec38\n    local dec39\n    local\
    \ dec40\n    local dec41\n    local dec42\n    local dec43\n    local dec44\n\
    \    local dec45\n    local dec46\n    local dec47\n    local dec48\n    local\
    \ dec49\n    local dec50\n    local dec51\n    local dec52\n    local dec53\n\
    \    local dec54\n    local dec55\n    local dec56\n    local dec57\n    local\
    \ dec58\n    local dec59\n    local dec60\n    local dec61\n    local dec62\n\
    \    local dec63\n    local dec64\n    local dec65\n    local dec66\n    local\
    \ dec67\n    local dec68\n    local dec69\n    local dec70\n    local dec71\n\
    \    local dec72\n    local dec73\n    local dec74\n    local dec75\n    local\
    \ dec76\n    local dec77\n    local dec78\n    local dec79\n    local dec80\n\
    \    local dec81\n    local dec82\n    local dec83\n    local dec84\n    local\
    \ dec85\n    local dec86\n    local dec87\n    local dec88\n    local dec89\n\
    \    local dec90\n    local dec91\n    local dec92\n    local dec93\n    local\
    \ dec94\n    local dec95\n    local dec96\n    local \n}\n\ncandidate() {\n  \
    \  sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a counts\n    local -a sorted\n    local -a\
    \ count\n    local i\n    local j\n    local k\n    local -a tmp\n    local -a\
    \ tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a\
    \ tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a\
    \ tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local\
    \ -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local\
    \ -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local\
    \ -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local\
    \ -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local\
    \ -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local\
    \ -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local\
    \ -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local\
    \ -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local\
    \ -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local\
    \ -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local\
    \ -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local\
    \ -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local\
    \ -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local\
    \ -a tmp66\n    local -a tmp67\n    local -a tmp68\n\n}\n\ncandidate() {\n   \
    \ sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\"\
    ) = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\"\
    \ ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array[@]}\"\n    local sorted=()\n\
    \    local i=0\n    while [ $i -lt $length ]; do\n        local j=0\n        while\
    \ [ $j -le $i ]; do\n            local count=0\n            local digit=${array[$j]}\n\
    \            local digits=${digit:0:1}\n            local digits=${digits:1}\n\
    \            while [ $digits -eq 0 ]; do\n                digits=${digits:1}\n\
    \            done\n            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${digits:0:1}\n            local digits=${digits:1}\n\
    \            local digits=${\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1d3fjl_q.sh: line 85: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=$1\n    local length=$((${#array[@]} + 1))\n    local sorted\n\
    \    local i\n    local j\n    local k\n    local count\n    local temp\n    local\
    \ result\n    local count1\n    local count2\n    local count3\n    local count4\n\
    \    local count5\n    local count6\n    local count7\n    local count8\n    local\
    \ count9\n    local count10\n    local count11\n    local count12\n    local count13\n\
    \    local count14\n    local count15\n    local count16\n    local count17\n\
    \    local count18\n    local count19\n    local count20\n    local count21\n\
    \    local count22\n    local count23\n    local count24\n    local count25\n\
    \    local count26\n    local count27\n    local count28\n    local count29\n\
    \    local count30\n    local count31\n    local count32\n    local count33\n\
    \    local count34\n    local count35\n    local count36\n    local count37\n\
    \    local count38\n    local count39\n    local count40\n    local count41\n\
    \    local count42\n    local count43\n    local count44\n    local count45\n\
    \    local count46\n    local count47\n    local count48\n    local count49\n\
    \    local count50\n    local count51\n    local count52\n    local count53\n\
    \    local count54\n    local count55\n    local count56\n    local count57\n\
    \    local count58\n    local count59\n    local count60\n    local count61\n\
    \    local count62\n    local count63\n    local count64\n    local count65\n\
    \    local count66\n    local count67\n    local count68\n    local count69\n\
    \    local count70\n    local count71\n    local count72\n    local count73\n\
    \    local count74\n    local count75\n    local count76\n    local count77\n\
    \    local count78\n    local count79\n    local count80\n    local count81\n\
    \    local count82\n    local count83\n    local count84\n    local count85\n\
    \    local count86\n    local count87\n    local count88\n    local count89\n\
    \    local count90\n    local count91\n    local count92\n    local count93\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local count\n   \
    \ local i\n    local j\n    local k\n    local tmp\n    local sorted\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a sorted\n    local -a count\n    local -a\
    \ counts\n    local -a counts_sorted\n    local -a counts_sorted_reverse\n   \
    \ local -a counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local sorted=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local count\n    local dec\n    while [ $i\
    \ -lt $len ]; do\n        count=$(echo $arr[$i] | wc -c)\n        if [ $count\
    \ -eq 1 ]; then\n            dec=$(echo $arr[$i] | cut -d \"1\" -f 1)\n      \
    \  else\n            dec=$(echo $arr[$i] | cut -d \"0\" -f 1)\n        fi\n  \
    \      if [ $dec -gt $k ]; then\n            sorted+=(\"$arr[$i]\")\n        \
    \    k=$dec\n        fi\n        i=$((i+1))\n    done\n    sorted+=(\"$arr[$i]\"\
    )\n    echo ${sorted[@]}\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9b0x3au6.sh: line 24: [: too many arguments

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local arr=$1\n  local -a sorted\n  local -a count\n  local -a tmp\n  local\
    \ -a tmp2\n  local -a tmp3\n  local -a tmp4\n  local -a tmp5\n  local -a tmp6\n\
    \  local -a tmp7\n  local -a tmp8\n  local -a tmp9\n  local -a tmp10\n  local\
    \ -a tmp11\n  local -a tmp12\n  local -a tmp13\n  local -a tmp14\n  local -a tmp15\n\
    \  local -a tmp16\n  local -a tmp17\n  local -a tmp18\n  local -a tmp19\n  local\
    \ -a tmp20\n  local -a tmp21\n  local -a tmp22\n  local -a tmp23\n  local -a tmp24\n\
    \  local -a tmp25\n  local -a tmp26\n  local -a tmp27\n  local -a tmp28\n  local\
    \ -a tmp29\n  local -a tmp30\n  local -a tmp31\n  local -a tmp32\n  local -a tmp33\n\
    \  local -a tmp34\n  local -a tmp35\n  local -a tmp36\n  local -a tmp37\n  local\
    \ -a tmp38\n  local -a tmp39\n  local -a tmp40\n  local -a tmp41\n  local -a tmp42\n\
    \  local -a tmp43\n  local -a tmp44\n  local -a tmp45\n  local -a tmp46\n  local\
    \ -a tmp47\n  local -a tmp48\n  local -a tmp49\n  local -a tmp50\n  local -a tmp51\n\
    \  local -a tmp52\n  local -a tmp53\n  local -a tmp54\n  local -a tmp55\n  local\
    \ -a tmp56\n  local -a tmp57\n  local -a tmp58\n  local -a tmp59\n  local -a tmp60\n\
    \  local -a tmp61\n  local -a tmp62\n  local -a tmp63\n  local -a tmp64\n  local\
    \ -a tmp65\n  local -a tmp66\n  local -a tmp67\n  local -a tmp68\n  local -a tmp69\n\
    \  local -a tmp70\n  local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a counts\n\
    \    local -a counts_sorted\n    local -a counts_sorted2\n    local -a counts_sorted3\n\
    \    local -a counts_sorted4\n    local -a counts_sorted5\n    local -a counts_sorted6\n\
    \    local -a counts_sorted7\n    local -a counts_sorted8\n    local -a counts_sorted9\n\
    \    local -a counts_sorted10\n    local -a counts_sorted11\n    local -a counts_sorted12\n\
    \    local -a counts_sorted13\n    local -a counts_sorted14\n    local -a counts_sorted15\n\
    \    local -a counts_sorted16\n    local -a counts_sorted17\n    local -a counts_sorted18\n\
    \    local -a counts_sorted19\n    local -a counts_sorted20\n    local -a counts_sorted21\n\
    \    local -a counts_sorted22\n    local -a counts_sorted23\n    local -a counts_sorted24\n\
    \    local -a counts_sorted25\n    local -a counts_sorted26\n    local -a counts_sorted27\n\
    \    local -a counts_sorted28\n    local -a counts_sorted29\n    local -a counts_sorted30\n\
    \    local -a counts_sorted31\n    local -a counts_sorted32\n    local -a counts_sorted33\n\
    \    local -a counts_sorted34\n    local -a counts_sorted35\n    local -a counts_sorted36\n\
    \    local -a counts_sorted37\n    local -a counts_sorted38\n    local -a counts_sorted39\n\
    \    local -a counts_sorted40\n    local -a counts_sorted41\n    local -a counts_sorted42\n\
    \    local -a counts_sorted43\n    local -a counts_sorted44\n    local -a counts_sorted45\n\
    \    local -a counts_sorted46\n    local -a counts_sorted47\n    local -a counts_sorted48\n\
    \    local -a counts_sorted49\n    local -a counts_sorted50\n    local -a counts_sorted51\n\
    \    local -a counts_sorted52\n    local -a counts_sorted53\n    local -a counts_sorted54\n\
    \    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local sorted=()\n    local i\n\
    \    local j\n    local k\n    local count\n    local dec\n    local decdec\n\
    \    local decdecdec\n    local decdecdecdec\n    local decdecdecdecdec\n    local\
    \ decdecdecdecdecdec\n    local decdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdec\n \
    \   local decdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local len=\"${#array[@]}\"\n    local i\n    local\
    \ j\n    local k\n    local count\n    local tmp\n    local sorted\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n    local \n}\n\ncandidate() {\n  \
    \  sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local arr=$1\n  local -a sorted\n  local -a counts\n  local -a counts_sorted\n\
    \  local -a counts_sorted_reverse\n  local -a counts_sorted_reverse_sorted\n \
    \ local -a counts_sorted_reverse_sorted_reverse\n  local -a counts_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local t\n    local val\n    local count\n    local dec\n   \
    \ local decval\n    local deccount\n    local decdec\n    local decdecval\n  \
    \  local decdeccount\n    local decdecdec\n    local decdecdecval\n    local decdecdeccount\n\
    \    local decdecdecdec\n    local decdecdecval\n    local decdecdeccount\n  \
    \  local decdecdecdec\n    local decdecdecval\n    local decdecdeccount\n    local\
    \ decdecdecdec\n    local decdecdecval\n    local decdecdeccount\n    local decdecdecdec\n\
    \    local decdecdecval\n    local decdecdeccount\n    local decdecdecdec\n  \
    \  local decdecdecval\n    local decdecdeccount\n    local decdecdecdec\n    local\
    \ decdecdecval\n    local decdecdeccount\n    local decdecdecdec\n    local decdecdecval\n\
    \    local decdecdeccount\n    local decdecdecdec\n    local decdecdecval\n  \
    \  local decdecdeccount\n    local decdecdecdec\n    local decdecdecval\n    local\
    \ decdecdeccount\n    local decdecdecdec\n    local decdecdecval\n    local decdecdeccount\n\
    \    local decdecdecdec\n    local decdecdecval\n    local decdecdeccount\n  \
    \  local decdecdecdec\n    local decdecdecval\n    local decdecdeccount\n    local\
    \ decdecdecdec\n    local decdecdecval\n    local decdecdeccount\n    local decdecdecdec\n\
    \    local decdecdecval\n    local decdecdeccount\n    local decdecdecdec\n  \
    \  local decdecdecval\n    local decdecdeccount\n    local decdecdecdec\n    local\
    \ decdecdecval\n    local decdecdeccount\n    local decdecdecdec\n    local decdecdecval\n\
    \    local decdecdeccount\n    local decdecdecdec\n    local decdecdecval\n  \
    \  local decdecdeccount\n    local decdecdecdec\n    local decdecdecval\n    local\
    \ decdecdeccount\n    local decdecdecdec\n    local decdecdecval\n    local decdecdeccount\n\
    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4\
    \ -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1\
    \ 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a arr2\n    local -a sorted\n    local -a count\n\
    \    local -a count2\n    local -a count3\n    local -a count4\n    local -a count5\n\
    \    local -a count6\n    local -a count7\n    local -a count8\n    local -a count9\n\
    \    local -a count10\n    local -a count11\n    local -a count12\n    local -a\
    \ count13\n    local -a count14\n    local -a count15\n    local -a count16\n\
    \    local -a count17\n    local -a count18\n    local -a count19\n    local -a\
    \ count20\n    local -a count21\n    local -a count22\n    local -a count23\n\
    \    local -a count24\n    local -a count25\n    local -a count26\n    local -a\
    \ count27\n    local -a count28\n    local -a count29\n    local -a count30\n\
    \    local -a count31\n    local -a count32\n    local -a count33\n    local -a\
    \ count34\n    local -a count35\n    local -a count36\n    local -a count37\n\
    \    local -a count38\n    local -a count39\n    local -a count40\n    local -a\
    \ count41\n    local -a count42\n    local -a count43\n    local -a count44\n\
    \    local -a count45\n    local -a count46\n    local -a count47\n    local -a\
    \ count48\n    local -a count49\n    local -a count50\n    local -a count51\n\
    \    local -a count52\n    local -a count53\n    local -a count54\n    local -a\
    \ count55\n    local -a count56\n    local -a count57\n    local -a count58\n\
    \    local -a count59\n    local -a count60\n    local -a count61\n    local -a\
    \ count62\n    local -a count63\n    local -a count64\n    local -a count65\n\
    \    local -a count66\n    local -a count67\n    local -a count68\n    local -a\
    \ count69\n    local -a count70\n    local -a \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local max=0\n    local min=0\n    local maxdec=0\n    local\
    \ mindec=0\n    local maxdecval=0\n    local mindecval=0\n    local maxval=0\n\
    \    local minval=0\n    local maxvalval=0\n    local minvalval=0\n    local maxvalvalval=0\n\
    \    local minvalvalval=0\n    local maxvalvalval=0\n    local minvalvalval=0\n\
    \    local maxvalvalval=0\n    local minvalvalval=0\n    local maxvalvalval=0\n\
    \    local minvalvalval=0\n    local maxvalvalval=0\n    local minvalvalval=0\n\
    \    local maxvalvalval=0\n    local minvalvalval=0\n    local maxvalvalval=0\n\
    \    local minvalvalval=0\n    local maxvalvalval=0\n    local minvalvalval=0\n\
    \    local maxvalvalval=0\n    local minvalvalval=0\n    local maxvalvalval=0\n\
    \    local minvalvalval=0\n    local maxvalvalval=0\n    local minvalvalval=0\n\
    \    local maxvalvalval=0\n    local minvalvalval=0\n    local maxvalvalval=0\n\
    \    local minvalvalval=0\n    local maxvalvalval=0\n    local minvalvalval=0\n\
    \    local maxvalvalval=0\n    local minvalvalval=0\n    local maxvalvalval=0\n\
    \    local minvalvalval=0\n    local maxvalvalval=0\n    local minvalvalval=0\n\
    \    local maxvalvalval=0\n    local minvalvalval=0\n    local maxvalvalval=0\n\
    \    local minvalvalval=0\n    local maxvalvalval=0\n    local minvalvalval=0\n\
    \    local maxvalvalval=0\n    local minvalvalval=0\n    local maxvalvalval=0\n\
    \    local minvalvalval=0\n    local maxvalvalval=0\n    local minvalvalval=0\n\
    \    local maxvalvalval=0\n    local minvalvalval=0\n    local maxvalvalval=0\n\
    \    local minvalvalval=0\n    local maxvalvalval=0\n    local minvalvalval=0\n\
    \    local maxvalval\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local count\n   \
    \ local i\n    local j\n    local k\n    local temp\n    local sorted\n    local\
    \ decimal\n    local decimal2\n    local decimal3\n    local decimal4\n    local\
    \ decimal5\n    local decimal6\n    local decimal7\n    local decimal8\n    local\
    \ decimal9\n    local decimal10\n    local decimal11\n    local decimal12\n  \
    \  local decimal13\n    local decimal14\n    local decimal15\n    local decimal16\n\
    \    local decimal17\n    local decimal18\n    local decimal19\n    local decimal20\n\
    \    local decimal21\n    local decimal22\n    local decimal23\n    local decimal24\n\
    \    local decimal25\n    local decimal26\n    local decimal27\n    local decimal28\n\
    \    local decimal29\n    local decimal30\n    local decimal31\n    local decimal32\n\
    \    local decimal33\n    local decimal34\n    local decimal35\n    local decimal36\n\
    \    local decimal37\n    local decimal38\n    local decimal39\n    local decimal40\n\
    \    local decimal41\n    local decimal42\n    local decimal43\n    local decimal44\n\
    \    local decimal45\n    local decimal46\n    local decimal47\n    local decimal48\n\
    \    local decimal49\n    local decimal50\n    local decimal51\n    local decimal52\n\
    \    local decimal53\n    local decimal54\n    local decimal55\n    local decimal56\n\
    \    local decimal57\n    local decimal58\n    local decimal59\n    local decimal60\n\
    \    local decimal61\n    local decimal62\n    local decimal63\n    local decimal64\n\
    \    local decimal65\n    local decimal66\n    local decimal67\n    local decimal68\n\
    \    local decimal69\n    local decimal70\n    local decimal71\n    local decimal72\n\
    \    local decimal73\n    local decimal74\n    local decimal75\n    local decimal76\n\
    \    local decimal77\n    local decimal78\n    local decimal79\n    local decimal80\n\
    \    local decimal81\n    local decimal82\n    local decimal83\n    local decimal84\n\
    \    local decimal85\n    local decimal86\n    local decimal87\n    local decimal88\n\
    \    local decimal89\n    local decimal90\n    local decimal91\n    local decimal92\n\
    \    local decimal93\n    local decimal94\n    local decimal95\n\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array[@]}\"\n    local sorted=()\n\
    \    local i=0\n    while [ $i -lt $length ]; do\n        local j=0\n        while\
    \ [ $j -le $length ]; do\n            if [ $(( ${array[$i]} & 1 )) -eq 1 ]; then\n\
    \                sorted+=(\"${array[$i]}\")\n            fi\n            j=$((\
    \ j + 1 ))\n        done\n        i=$(( i + 1 ))\n    done\n    local sortedLength=\"\
    ${#sorted[@]}\"\n    local decimalValue=0\n    local decimalValueIndex=0\n   \
    \ local decimalValueCount=0\n    local decimalValueSum=0\n    local decimalValueIndex2=0\n\
    \    local decimalValueCount2=0\n    local decimalValueSum2=0\n    local decimalValueIndex3=0\n\
    \    local decimalValueCount3=0\n    local decimalValueSum3=0\n    local decimalValueIndex4=0\n\
    \    local decimalValueCount4=0\n    local decimalValueSum4=0\n    local decimalValueIndex5=0\n\
    \    local decimalValueCount5=0\n    local decimalValueSum5=0\n    local decimalValueIndex6=0\n\
    \    local decimalValueCount6=0\n    local decimalValueSum6=0\n    local decimalValueIndex7=0\n\
    \    local decimalValueCount7=0\n    local decimalValueSum7=0\n    local decimalValueIndex8=0\n\
    \    local decimalValueCount8=0\n    local decimalValueSum8=0\n    local decimalValueIndex9=0\n\
    \    local decimalValueCount9=0\n    local decimalValueSum9=0\n    local decimalValueIndex10=0\n\
    \    local decimalValueCount10=0\n    local decimalValueSum10=0\n    local decimalValueIndex11=0\n\
    \    local decimalValueCount11=0\n    local decimalValueSum11=0\n    local decimalValueIndex12=0\n\
    \    local decimalValueCount12=0\n    local decimalValueSum12=0\n    local decimalValueIndex13=0\n\
    \    local decimalValueCount13=0\n    local decimalValueSum13=0\n    local decimalValueIndex14=0\n\
    \    local decimalValueCount14=0\n    local decimalValueSum14=0\n    local decimalValueIndex15=0\n\
    \    local decimalValueCount15=0\n    local decimalValueSum15=0\n    local decimalValueIndex16=0\n\
    \    local decimalValueCount16=0\n    local decimalValueSum16=0\n    local decimalValueIndex17=0\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppva8lzxf.sh: line 16: 1 5 2 3 4 & 1 : syntax error in expression
    (error token is "5 2 3 4 & 1 ")

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array[@]}\"\n    local sorted=()\n\
    \    local index=0\n    local count=0\n    local max=0\n    local min=0\n    local\
    \ decimal=0\n    local decimal2=0\n    local decimal3=0\n    local decimal4=0\n\
    \    local decimal5=0\n    local decimal6=0\n    local decimal7=0\n    local decimal8=0\n\
    \    local decimal9=0\n    local decimal10=0\n    local decimal11=0\n    local\
    \ decimal12=0\n    local decimal13=0\n    local decimal14=0\n    local decimal15=0\n\
    \    local decimal16=0\n    local decimal17=0\n    local decimal18=0\n    local\
    \ decimal19=0\n    local decimal20=0\n    local decimal21=0\n    local decimal22=0\n\
    \    local decimal23=0\n    local decimal24=0\n    local decimal25=0\n    local\
    \ decimal26=0\n    local decimal27=0\n    local decimal28=0\n    local decimal29=0\n\
    \    local decimal30=0\n    local decimal31=0\n    local decimal32=0\n    local\
    \ decimal33=0\n    local decimal34=0\n    local decimal35=0\n    local decimal36=0\n\
    \    local decimal37=0\n    local decimal38=0\n    local decimal39=0\n    local\
    \ decimal40=0\n    local decimal41=0\n    local decimal42=0\n    local decimal43=0\n\
    \    local decimal44=0\n    local decimal45=0\n    local decimal46=0\n    local\
    \ decimal47=0\n    local decimal48=0\n    local decimal49=0\n    local decimal50=0\n\
    \    local decimal51=0\n    local decimal52=0\n    local decimal53=0\n    local\
    \ decimal54=0\n    local decimal55=0\n    local decimal56=0\n    local decimal57=0\n\
    \    local decimal58=0\n    local decimal59=0\n    local decimal60=0\n    local\
    \ decimal61=0\n    local decimal62=0\n    local decimal63=0\n    local decimal64=0\n\
    \    local decimal65=0\n    local decimal66=0\n    local decimal67=0\n    local\
    \ decimal68=0\n    local decimal69=0\n    local decimal70=0\n    local decimal71=0\n\
    \    local decimal72=0\n    local decimal73=0\n    local decimal74=0\n    local\
    \ decimal75=0\n    local decimal76=0\n    local decimal77=0\n    local decimal78=0\n\
    \    local decimal\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local sorted=()\n\
    \    local i\n    local j\n    local count\n    local decimal\n    local decimal2\n\
    \    local decimal3\n    local decimal4\n    local decimal5\n    local decimal6\n\
    \    local decimal7\n    local decimal8\n    local decimal9\n    local decimal10\n\
    \    local decimal11\n    local decimal12\n    local decimal13\n    local decimal14\n\
    \    local decimal15\n    local decimal16\n    local decimal17\n    local decimal18\n\
    \    local decimal19\n    local decimal20\n    local decimal21\n    local decimal22\n\
    \    local decimal23\n    local decimal24\n    local decimal25\n    local decimal26\n\
    \    local decimal27\n    local decimal28\n    local decimal29\n    local decimal30\n\
    \    local decimal31\n    local decimal32\n    local decimal33\n    local decimal34\n\
    \    local decimal35\n    local decimal36\n    local decimal37\n    local decimal38\n\
    \    local decimal39\n    local decimal40\n    local decimal41\n    local decimal42\n\
    \    local decimal43\n    local decimal44\n    local decimal45\n    local decimal46\n\
    \    local decimal47\n    local decimal48\n    local decimal49\n    local decimal50\n\
    \    local decimal51\n    local decimal52\n    local decimal53\n    local decimal54\n\
    \    local decimal55\n    local decimal56\n    local decimal57\n    local decimal58\n\
    \    local decimal59\n    local decimal60\n    local decimal61\n    local decimal62\n\
    \    local decimal63\n    local decimal64\n    local decimal65\n    local decimal66\n\
    \    local decimal67\n    local decimal68\n    local decimal69\n    local decimal70\n\
    \    local decimal71\n    local decimal72\n    local decimal73\n    local decimal74\n\
    \    local decimal75\n    local decimal76\n    local decimal77\n    local decimal78\n\
    \    local decimal79\n    local decimal80\n    local decimal81\n    local decimal82\n\
    \    local decimal83\n    local decimal84\n    local decimal85\n    local decimal86\n\
    \    local decimal87\n    local decimal88\n    local decimal89\n    local decimal90\n\
    \    local decimal91\n    local decimal92\n    local decimal93\n    local decimal94\n\
    \    local decimal95\n    local decimal96\n    \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local result\n    local count\n    local i\n    local\
    \ j\n    local k\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n\
    \    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n\
    \    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local\
    \ tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n\
    \    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local\
    \ tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n\
    \    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local\
    \ tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n\
    \    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local\
    \ tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n\
    \    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local\
    \ tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n\
    \    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local\
    \ tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n\
    \    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local\
    \ tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n\
    \    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local\
    \ tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n\
    \    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local\
    \ tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n\
    \    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local\
    \ tmp95\n    local tmp96\n    local tmp97\n    local \n}\n\ncandidate() {\n  \
    \  sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a count\n    local -a sorted\n    local -a\
    \ tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local t\n    local count\n    local dec\n    local dec2\n  \
    \  local dec3\n    local dec4\n    local dec5\n    local dec6\n    local dec7\n\
    \    local dec8\n    local dec9\n    local dec10\n    local dec11\n    local dec12\n\
    \    local dec13\n    local dec14\n    local dec15\n    local dec16\n    local\
    \ dec17\n    local dec18\n    local dec19\n    local dec20\n    local dec21\n\
    \    local dec22\n    local dec23\n    local dec24\n    local dec25\n    local\
    \ dec26\n    local dec27\n    local dec28\n    local dec29\n    local dec30\n\
    \    local dec31\n    local dec32\n    local dec33\n    local dec34\n    local\
    \ dec35\n    local dec36\n    local dec37\n    local dec38\n    local dec39\n\
    \    local dec40\n    local dec41\n    local dec42\n    local dec43\n    local\
    \ dec44\n    local dec45\n    local dec46\n    local dec47\n    local dec48\n\
    \    local dec49\n    local dec50\n    local dec51\n    local dec52\n    local\
    \ dec53\n    local dec54\n    local dec55\n    local dec56\n    local dec57\n\
    \    local dec58\n    local dec59\n    local dec60\n    local dec61\n    local\
    \ dec62\n    local dec63\n    local dec64\n    local dec65\n    local dec66\n\
    \    local dec67\n    local dec68\n    local dec69\n    local dec70\n    local\
    \ dec71\n    local dec72\n    local dec73\n    local dec74\n    local dec75\n\
    \    local dec76\n    local dec77\n    local dec78\n    local dec79\n    local\
    \ dec80\n    local dec81\n    local dec82\n    local dec83\n    local dec84\n\
    \    local dec85\n    local dec86\n    local dec87\n    local dec88\n    local\
    \ dec89\n    local dec90\n    local dec91\n    local dec92\n    local dec93\n\
    \    local dec94\n    local dec95\n\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local tmp\n    local count\n    local dec\n    local dec2\n\
    \    local dec3\n    local dec4\n    local dec5\n    local dec6\n    local dec7\n\
    \    local dec8\n    local dec9\n    local dec10\n    local dec11\n    local dec12\n\
    \    local dec13\n    local dec14\n    local dec15\n    local dec16\n    local\
    \ dec17\n    local dec18\n    local dec19\n    local dec20\n    local dec21\n\
    \    local dec22\n    local dec23\n    local dec24\n    local dec25\n    local\
    \ dec26\n    local dec27\n    local dec28\n    local dec29\n    local dec30\n\
    \    local dec31\n    local dec32\n    local dec33\n    local dec34\n    local\
    \ dec35\n    local dec36\n    local dec37\n    local dec38\n    local dec39\n\
    \    local dec40\n    local dec41\n    local dec42\n    local dec43\n    local\
    \ dec44\n    local dec45\n    local dec46\n    local dec47\n    local dec48\n\
    \    local dec49\n    local dec50\n    local dec51\n    local dec52\n    local\
    \ dec53\n    local dec54\n    local dec55\n    local dec56\n    local dec57\n\
    \    local dec58\n    local dec59\n    local dec60\n    local dec61\n    local\
    \ dec62\n    local dec63\n    local dec64\n    local dec65\n    local dec66\n\
    \    local dec67\n    local dec68\n    local dec69\n    local dec70\n    local\
    \ dec71\n    local dec72\n    local dec73\n    local dec74\n    local dec75\n\
    \    local dec76\n    local dec77\n    local dec78\n    local dec79\n    local\
    \ dec80\n    local dec1\n    local dec2\n    local dec3\n    local dec4\n    local\
    \ dec5\n    local dec6\n    local dec7\n    local dec8\n    local dec9\n    local\
    \ dec10\n    local dec11\n    local dec12\n    local dec13\n    local dec14\n\
    \    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a counts\n    local -a count\n\
    \    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n \
    \   local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n \
    \   local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n\
    \    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n\
    \    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n\
    \    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n\
    \    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n\
    \    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n\
    \    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n\
    \    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n\
    \    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n\
    \    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n\
    \    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n\
    \    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n\
    \    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n\
    \    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n\
    \    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n\
    \    local -a tmp69\n    local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=$1\n    local result\n    local i\n    local j\n    local k\n\
    \    local count\n    local temp\n    local count1\n    local count2\n    local\
    \ count3\n    local count4\n    local count5\n    local count6\n    local count7\n\
    \    local count8\n    local count9\n    local count10\n    local count11\n  \
    \  local count12\n    local count13\n    local count14\n    local count15\n  \
    \  local count16\n    local count17\n    local count18\n    local count19\n  \
    \  local count20\n    local count21\n    local count22\n    local count23\n  \
    \  local count24\n    local count25\n    local count26\n    local count27\n  \
    \  local count28\n    local count29\n    local count30\n    local count31\n  \
    \  local count32\n    local count33\n    local count34\n    local count35\n  \
    \  local count36\n    local count37\n    local count38\n    local count39\n  \
    \  local count40\n    local count41\n    local count42\n    local count43\n  \
    \  local count44\n    local count45\n    local count46\n    local count47\n  \
    \  local count48\n    local count49\n    local count50\n    local count51\n  \
    \  local count52\n    local count53\n    local count54\n    local count55\n  \
    \  local count56\n    local count57\n    local count58\n    local count59\n  \
    \  local count60\n    local count61\n    local count62\n    local count63\n  \
    \  local count64\n    local count65\n    local count66\n    local count67\n  \
    \  local count68\n    local count69\n    local count70\n    local count71\n  \
    \  local count72\n    local count73\n    local count74\n    local count75\n  \
    \  local count76\n    local count77\n    local count78\n    local count79\n  \
    \  local count80\n    local count81\n    local count82\n    local count83\n  \
    \  local count84\n    local count85\n    local count86\n    local count87\n  \
    \  local count88\n    local count89\n    local count90\n    local count91\n  \
    \  local count92\n    local count93\n    local count94\n    local count95\n  \
    \  local count96\n    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a sorted\n    local -a count\n    local -a\
    \ tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a tmp\n\
    \    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a counts\n\
    \    local -a counts_sorted\n    local -a counts_sorted_reverse\n    local -a\
    \ counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local tmp\n    local count\n    local dec\n    local dec2\n\
    \    local dec3\n    local dec4\n    local dec5\n    local dec6\n    local dec7\n\
    \    local dec8\n    local dec9\n    local dec10\n    local dec11\n    local dec12\n\
    \    local dec13\n    local dec14\n    local dec15\n    local dec16\n    local\
    \ dec17\n    local dec18\n    local dec19\n    local dec20\n    local dec21\n\
    \    local dec22\n    local dec23\n    local dec24\n    local dec25\n    local\
    \ dec26\n    local dec27\n    local dec28\n    local dec29\n    local dec30\n\
    \    local dec31\n    local dec32\n    local dec33\n    local dec34\n    local\
    \ dec35\n    local dec36\n    local dec37\n    local dec38\n    local dec39\n\
    \    local dec40\n    local dec41\n    local dec42\n    local dec43\n    local\
    \ dec44\n    local dec45\n    local dec46\n    local dec47\n    local dec48\n\
    \    local dec49\n    local dec50\n    local dec51\n    local dec52\n    local\
    \ dec53\n    local dec54\n    local dec55\n    local dec56\n    local dec57\n\
    \    local dec58\n    local dec59\n    local dec60\n    local dec61\n    local\
    \ dec62\n    local dec63\n    local dec64\n    local dec65\n    local dec66\n\
    \    local dec67\n    local dec68\n    local dec69\n    local dec70\n    local\
    \ dec71\n    local dec72\n    local dec73\n    local dec74\n    local dec75\n\
    \    local dec76\n    local dec77\n    local dec78\n    local dec79\n    local\
    \ dec80\n    local dec1\n    local dec2\n    local dec3\n    local dec4\n    local\
    \ dec5\n    local dec6\n    local dec7\n    local dec8\n    local dec9\n    local\
    \ dec10\n    local dec11\n    local dec12\n    local dec13\n    local dec14\n\
    \    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a tmp\n\
    \    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=$1\n    local temp\n    local i\n    local count\n    local decimal\n\
    \    local decimal2\n    local decimal3\n    local decimal4\n    local decimal5\n\
    \    local decimal6\n    local decimal7\n    local decimal8\n    local decimal9\n\
    \    local decimal10\n    local decimal11\n    local decimal12\n    local decimal13\n\
    \    local decimal14\n    local decimal15\n    local decimal16\n    local decimal17\n\
    \    local decimal18\n    local decimal19\n    local decimal20\n    local decimal21\n\
    \    local decimal22\n    local decimal23\n    local decimal24\n    local decimal25\n\
    \    local decimal26\n    local decimal27\n    local decimal28\n    local decimal29\n\
    \    local decimal30\n    local decimal31\n    local decimal32\n    local decimal33\n\
    \    local decimal34\n    local decimal35\n    local decimal36\n    local decimal37\n\
    \    local decimal38\n    local decimal39\n    local decimal40\n    local decimal41\n\
    \    local decimal42\n    local decimal43\n    local decimal44\n    local decimal45\n\
    \    local decimal46\n    local decimal47\n    local decimal48\n    local decimal49\n\
    \    local decimal50\n    local decimal51\n    local decimal52\n    local decimal53\n\
    \    local decimal54\n    local decimal55\n    local decimal56\n    local decimal57\n\
    \    local decimal58\n    local decimal59\n    local decimal60\n    local decimal61\n\
    \    local decimal62\n    local decimal63\n    local decimal64\n    local decimal65\n\
    \    local decimal66\n    local decimal67\n    local decimal68\n    local decimal69\n\
    \    local decimal70\n    local decimal71\n    local decimal72\n    local decimal73\n\
    \    local decimal74\n    local decimal75\n    local decimal76\n    local decimal77\n\
    \    local decimal78\n    local decimal79\n    local decimal80\n    local decimal81\n\
    \    local decimal82\n    local decimal83\n    local decimal84\n    local decimal85\n\
    \    local decimal86\n    local decimal87\n    local decimal88\n    local decimal89\n\
    \    local decimal90\n    local decimal91\n    local decimal92\n    local decimal93\n\
    \    local decimal94\n    local decimal95\n    local decimal96\n    local decimal97\n\
    \    local decimal98\n    local decimal99\n\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local -n arr=$1\n    local -a sorted\n    local -a count\n    local -i i\n\
    \    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n \
    \   local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n \
    \   local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n\
    \    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n\
    \    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n\
    \    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n\
    \    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n\
    \    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n\
    \    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n\
    \    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n\
    \    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n\
    \    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n\
    \    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n\
    \    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n\
    \    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n\
    \    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n\
    \    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n\
    \    local -a tmp69\n    local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpv1h9qxqx.sh: line 9: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -n arrlen=${#arr[@]}\n    local -n arrlen2=${#arr[@]}\n\
    \    local -n result=()\n    local -n max=0\n    local -n min=0\n    local -n\
    \ i\n    local -n j\n    local -n k\n    local -n kmax\n    local -n kmin\n  \
    \  local -n kmax2\n    local -n kmin2\n    local -n kmax3\n    local -n kmin3\n\
    \    local -n kmax4\n    local -n kmin4\n    local -n kmax5\n    local -n kmin5\n\
    \    local -n kmax6\n    local -n kmin6\n    local -n kmax7\n    local -n kmin7\n\
    \    local -n kmax8\n    local -n kmin8\n    local -n kmax9\n    local -n kmin9\n\
    \    local -n kmax10\n    local -n kmin10\n    local -n kmax11\n    local -n kmin11\n\
    \    local -n kmax12\n    local -n kmin12\n    local -n kmax13\n    local -n kmin13\n\
    \    local -n kmax14\n    local -n kmin14\n    local -n kmax15\n    local -n kmin15\n\
    \    local -n kmax16\n    local -n kmin16\n    local -n kmax17\n    local -n kmin17\n\
    \    local -n kmax18\n    local -n kmin18\n    local -n kmax19\n    local -n kmin19\n\
    \    local -n kmax20\n    local -n kmin20\n    local -n kmax21\n    local -n kmin21\n\
    \    local -n kmax22\n    local -n kmin22\n    local -n kmax23\n    local -n kmin23\n\
    \    local -n kmax24\n    local -n kmin24\n    local -n kmax25\n    local -n kmin25\n\
    \    local -n kmax26\n    local -n kmin26\n    local -n kmax27\n    local -n kmin27\n\
    \    local -n kmax28\n    local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpa_mq4imp.sh: line 10: local: `1'': invalid variable name for name
    reference

    /tmp/tmpa_mq4imp.sh: line 11: local: `1'': invalid variable name for name reference

    /tmp/tmpa_mq4imp.sh: line 12: local: result: reference variable cannot be an array

    /tmp/tmpa_mq4imp.sh: line 13: local: `0'': invalid variable name for name reference

    /tmp/tmpa_mq4imp.sh: line 14: local: `0'': invalid variable name for name reference

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -n result=\"$2\"\n    local -n count=\"$3\"\
    \n    local -n max=\"$4\"\n    local -n i\n    local -n j\n    local -n k\n  \
    \  local -n max1\n    local -n max2\n    local -n max3\n    local -n max4\n  \
    \  local -n max5\n    local -n max6\n    local -n max7\n    local -n max8\n  \
    \  local -n max9\n    local -n max10\n    local -n max11\n    local -n max12\n\
    \    local -n max13\n    local -n max14\n    local -n max15\n    local -n max16\n\
    \    local -n max17\n    local -n max18\n    local -n max19\n    local -n max20\n\
    \    local -n max21\n    local -n max22\n    local -n max23\n    local -n max24\n\
    \    local -n max25\n    local -n max26\n    local -n max27\n    local -n max28\n\
    \    local -n max29\n    local -n max30\n    local -n max31\n    local -n max32\n\
    \    local -n max33\n    local -n max34\n    local -n max35\n    local -n max36\n\
    \    local -n max37\n    local -n max38\n    local -n max39\n    local -n max40\n\
    \    local -n max41\n    local -n max42\n    local -n max43\n    local -n max44\n\
    \    local -n max45\n    local -n max46\n    local -n max47\n    local -n max48\n\
    \    local -n max49\n    local -n max50\n    local -n max51\n    local -n max52\n\
    \    local -n max53\n    local -n max54\n    local -n max55\n    local -n max56\n\
    \    local -n max57\n    local -n max58\n    local -n max59\n    local -n max60\n\
    \    local -n max61\n    local -n max62\n    local -n max63\n    local -n max64\n\
    \    local -n max65\n    local -n max66\n    \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7qzetdle.sh: line 10: local: `'': not a valid identifier

    /tmp/tmp7qzetdle.sh: line 11: local: `'': not a valid identifier

    /tmp/tmp7qzetdle.sh: line 12: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local count\n   \
    \ local i\n    local j\n    local k\n    local counts\n    local sorted\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local array=\"$1\"\n  local -a count\n  local -a sorted\n  local -a temp\n\
    \  local -a counts\n  local -a counts_sorted\n  local -a counts_temp\n  local\
    \ -a counts_temp2\n  local -a counts_temp3\n  local -a counts_temp4\n  local -a\
    \ counts_temp5\n  local -a counts_temp6\n  local -a counts_temp7\n  local -a counts_temp8\n\
    \  local -a counts_temp9\n  local -a counts_temp10\n  local -a counts_temp11\n\
    \  local -a counts_temp12\n  local -a counts_temp13\n  local -a counts_temp14\n\
    \  local -a counts_temp15\n  local -a counts_temp16\n  local -a counts_temp17\n\
    \  local -a counts_temp18\n  local -a counts_temp19\n  local -a counts_temp20\n\
    \  local -a counts_temp21\n  local -a counts_temp22\n  local -a counts_temp23\n\
    \  local -a counts_temp24\n  local -a counts_temp25\n  local -a counts_temp26\n\
    \  local -a counts_temp27\n  local -a counts_temp28\n  local -a counts_temp29\n\
    \  local -a counts_temp30\n  local -a counts_temp31\n  local -a counts_temp32\n\
    \  local -a counts_temp33\n  local -a counts_temp34\n  local -a counts_temp35\n\
    \  local -a counts_temp36\n  local -a counts_temp37\n  local -a counts_temp38\n\
    \  local -a counts_temp39\n  local -a counts_temp40\n  local -a counts_temp41\n\
    \  local -a counts_temp42\n  local -a counts_temp43\n  local -a counts_temp44\n\
    \  local -a counts_temp45\n  local -a counts_temp46\n  local -a counts_temp47\n\
    \  local -a counts_temp48\n  local -a counts_temp49\n  local -a counts_temp50\n\
    \  local -a counts_temp51\n  local -a counts_temp52\n  local -a counts_\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: -1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local sorted=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    while [ $i -lt $len ]; do\n        local count=0\n\
    \        local j=0\n        while [ $j -lt $len ]; do\n            local x=${arr[$j]}\n\
    \            if [ $x -eq 1 ]; then\n                let count+=1\n           \
    \ fi\n            let j+=1\n        done\n        if [ $count -gt 0 ]; then\n\
    \            sorted[$k]=${arr[$i]}\n            let i++\n            let k++\n\
    \        fi\n    done\n    local j=0\n    while [ $j -lt $k ]; do\n        local\
    \ x=${sorted[$j]}\n        sorted[$j]=${sorted[$k]}\n        sorted[$k]=${x}\n\
    \        let j+=1\n        let k++\n    done\n    local i=0\n    while [ $i -lt\
    \ $len ]; do\n        arr[$i]=${sorted[$i]}\n        let i++\n    done\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=17 encoding='utf-8'>
  timestamp: 1660038180
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local array=$1\n  local -a count\n  local -a sorted\n  local -a sorted2\n \
    \ local -a sorted3\n  local -a sorted4\n  local -a sorted5\n  local -a sorted6\n\
    \  local -a sorted7\n  local -a sorted8\n  local -a sorted9\n  local -a sorted10\n\
    \  local -a sorted11\n  local -a sorted12\n  local -a sorted13\n  local -a sorted14\n\
    \  local -a sorted15\n  local -a sorted16\n  local -a sorted17\n  local -a sorted18\n\
    \  local -a sorted19\n  local -a sorted20\n  local -a sorted21\n  local -a sorted22\n\
    \  local -a sorted23\n  local -a sorted24\n  local -a sorted25\n  local -a sorted26\n\
    \  local -a sorted27\n  local -a sorted28\n  local -a sorted29\n  local -a sorted30\n\
    \  local -a sorted31\n  local -a sorted32\n  local -a sorted33\n  local -a sorted34\n\
    \  local -a sorted35\n  local -a sorted36\n  local -a sorted37\n  local -a sorted38\n\
    \  local -a sorted39\n  local -a sorted40\n  local -a sorted41\n  local -a sorted42\n\
    \  local -a sorted43\n  local -a sorted44\n  local -a sorted45\n  local -a sorted46\n\
    \  local -a sorted47\n  local -a sorted48\n  local -a sorted49\n  local -a sorted50\n\
    \  local -a sorted51\n  local -a sorted52\n  local -a sorted53\n  local -a sorted54\n\
    \  local -a sorted55\n  local -a sorted56\n  local -a sorted57\n  local -a sorted58\n\
    \  local -a sorted59\n  local -a sorted60\n  local -a sorted61\n  local -a sorted62\n\
    \  local -a sorted63\n  local -a sorted64\n  local -a sorted65\n  local -a sorted66\n\
    \  local -a sorted67\n  local -a sorted68\n  local -a sorted69\n  local -a sorted70\n\
    \  local -a sorted71\n  local -a \n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=$1\n    local length=$((${#array[@]}-1))\n    local sorted=()\n\
    \    local i=0\n    while [ $i -lt $length ]; do\n        local j=0\n        while\
    \ [ $j -lt $length ]; do\n            local k=0\n            while [ $k -lt $length\
    \ ]; do\n                if [ $array[$k] -eq 1 ]; then\n                    sorted+=(\
    \ $array[$k] )\n                    let \"k+=1\"\n                else\n     \
    \               sorted+=( $array[$k] )\n                    let \"k+=1\"\n   \
    \             fi\n            done\n            let \"j+=1\"\n        done\n \
    \       let \"i+=1\"\n    done\n    local sortedLength=$((${#sorted[@]}-1))\n\
    \    local sortedArray=()\n    local j=0\n    while [ $j -lt $sortedLength ];\
    \ do\n        sortedArray+=( ${sorted[$j]} )\n        let \"j+=1\"\n    done\n\
    \    local sortedArrayLength=$((${#sortedArray[@]}-1))\n    local sortedArrayLength2=$((${#sortedArray[@]}-1))\n\
    \    local sortedArrayLength3=$((${#sortedArray[@]}-1))\n    local sortedArrayLength4=$((${#sortedArray[@]}-1))\n\
    \    local sortedArrayLength5=$((${#sortedArray[@]}-1))\n    local sortedArrayLength6=$((${#sortedArray[@]}-1))\n\
    \    local sortedArrayLength7=$((${#sortedArray[@]}-1))\n    local sortedArrayLength8=$((${#sortedArray[@]}-1))\n\
    \    local sortedArrayLength9=$((${#sortedArray[@]}-1))\n    local sortedArrayLength10=$((${#sortedArray[@]}-1))\n\
    \    local sortedArrayLength11=$((${#sortedArray[@]}-1))\n    local sortedArrayLength12=$((${#sortedArray[@]}-1))\n\
    \    local sortedArrayLength13=$((${#sortedArray[@]}-1))\n    local sortedArrayLength14=$((${#sortedArray[@]}-1))\n\
    \    local sortedArrayLength15=$((${#sortedArray[@]}-1))\n    local sortedArrayLength16=$((${#sortedArray[@]}-1))\n\
    \    local sortedArrayLength17=$((${#sortedArray[@]}-1))\n    local sortedArrayLength18=$((${#sortedArray[@]}-1))\n\
    \    local sortedArrayLength19=$((${#sortedArray[@]}-1))\n    local sortedArrayLength\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a counts\n\
    \    local -a counts_sorted\n    local -a counts_sorted_reverse\n    local -a\
    \ counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local sorted\n  \
    \  local i\n    local j\n    local k\n    local count\n    local temp\n    local\
    \ max\n    local min\n    local dec\n    local dec2\n    local dec3\n    local\
    \ dec4\n    local dec5\n    local dec6\n    local dec7\n    local dec8\n    local\
    \ dec9\n    local dec10\n    local dec11\n    local dec12\n    local dec13\n \
    \   local dec14\n    local dec15\n    local dec16\n    local dec17\n    local\
    \ dec18\n    local dec19\n    local dec20\n    local dec21\n    local dec22\n\
    \    local dec23\n    local dec24\n    local dec25\n    local dec26\n    local\
    \ dec27\n    local dec28\n    local dec29\n    local dec30\n    local dec31\n\
    \    local dec32\n    local dec33\n    local dec34\n    local dec35\n    local\
    \ dec36\n    local dec37\n    local dec38\n    local dec39\n    local dec40\n\
    \    local dec41\n    local dec42\n    local dec43\n    local dec44\n    local\
    \ dec45\n    local dec46\n    local dec47\n    local dec48\n    local dec49\n\
    \    local dec50\n    local dec51\n    local dec52\n    local dec53\n    local\
    \ dec54\n    local dec55\n    local dec56\n    local dec57\n    local dec58\n\
    \    local dec59\n    local dec60\n    local dec61\n    local dec62\n    local\
    \ dec63\n    local dec64\n    local dec65\n    local dec66\n    local dec67\n\
    \    local dec68\n    local dec69\n    local dec70\n    local dec71\n    local\
    \ dec72\n    local dec73\n    local dec74\n    local dec75\n    local dec76\n\
    \    local dec77\n    local dec78\n    local dec79\n    local dec80\n    local\
    \ dec81\n    local dec82\n    local dec83\n    local dec84\n    local dec85\n\
    \    local dec86\n    local dec87\n    local dec88\n    local dec89\n    local\
    \ dec90\n    local dec91\n    local dec92\n    local dec93\n\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=$1\n    local length=$((${#array[@]}-1))\n    local count\n \
    \   local i\n    local j\n    local k\n    local temp\n    local result\n    local\
    \ counts\n    local max\n    local min\n    local maxIndex\n    local minIndex\n\
    \    local maxCount\n    local minCount\n    local maxCountIndex\n    local minCountIndex\n\
    \    local maxCountValue\n    local minCountValue\n    local maxValue\n    local\
    \ minValue\n    local maxValueIndex\n    local minValueIndex\n    local maxValueValue\n\
    \    local minValueValue\n    local maxValueIndex\n    local minValueIndex\n \
    \   local maxValueValue\n    local minValueValue\n    local maxValueIndex\n  \
    \  local minValueIndex\n    local maxValueValue\n    local minValueValue\n   \
    \ local maxValueIndex\n    local minValueIndex\n    local maxValueValue\n    local\
    \ minValueValue\n    local maxValueIndex\n    local minValueIndex\n    local maxValueValue\n\
    \    local minValueValue\n    local maxValueIndex\n    local minValueIndex\n \
    \   local maxValueValue\n    local minValueValue\n    local maxValueIndex\n  \
    \  local minValueIndex\n    local maxValueValue\n    local minValueValue\n   \
    \ local maxValueIndex\n    local minValueIndex\n    local maxValueValue\n    local\
    \ minValueValue\n    local maxValueIndex\n    local minValueIndex\n    local maxValueValue\n\
    \    local minValueValue\n    local maxValueIndex\n    local minValueIndex\n \
    \   local maxValueValue\n    local minValueValue\n    local maxValueIndex\n  \
    \  local minValueIndex\n    local maxValueValue\n    local minValueValue\n   \
    \ local maxValueIndex\n    local minValueIndex\n    local maxValueValue\n    local\
    \ minValueValue\n    local maxValueIndex\n    local minValueIndex\n    local maxValueValue\n\
    \    local minValueValue\n    local maxValueIndex\n    local minValueIndex\n \
    \   local maxValueValue\n    local minValueValue\n    local maxValueIndex\n  \
    \  local minValueIndex\n    local maxValueValue\n    local minValueValue\n   \
    \ local maxValueIndex\n    local minValueIndex\n    local maxValueValue\n    local\
    \ minValueValue\n    local maxValueIndex\n    local minValueIndex\n    local maxValueValue\n\
    \    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local -n arr=$1\n    local -a sorted\n    local -a count\n    local -a tmp\n\
    \    local -a tmp2\n    local -i i\n    local j\n    local k\n    local len\n\
    \    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n\
    \    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n\
    \    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n\
    \    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n\
    \    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n\
    \    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n\
    \    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n\
    \    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n\
    \    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n\
    \    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n\
    \    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n\
    \    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n\
    \    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n\
    \    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n\
    \    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n\
    \    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n\
    \    local -a tmp67\n    local -a tmp68\n\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppqno9tcx.sh: line 9: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local tmp\n    local count\n    local max\n    local min\n \
    \   local dec\n    local decstr\n    local decstrlen\n    local decstrlen2\n \
    \   local decstrlen3\n    local decstrlen4\n    local decstrlen5\n    local decstrlen6\n\
    \    local decstrlen7\n    local decstrlen8\n    local decstrlen9\n    local decstrlen10\n\
    \    local decstrlen11\n    local decstrlen12\n    local decstrlen13\n    local\
    \ decstrlen14\n    local decstrlen15\n    local decstrlen16\n    local decstrlen17\n\
    \    local decstrlen18\n    local decstrlen19\n    local decstrlen20\n    local\
    \ decstrlen21\n    local decstrlen22\n    local decstrlen23\n    local decstrlen24\n\
    \    local decstrlen25\n    local decstrlen26\n    local decstrlen27\n    local\
    \ decstrlen28\n    local decstrlen29\n    local decstrlen30\n    local decstrlen31\n\
    \    local decstrlen32\n    local decstrlen33\n    local decstrlen34\n    local\
    \ decstrlen35\n    local decstrlen36\n    local decstrlen37\n    local decstrlen38\n\
    \    local decstrlen39\n    local decstrlen40\n    local decstrlen41\n    local\
    \ decstrlen42\n    local decstrlen43\n    local decstrlen44\n    local decstrlen45\n\
    \    local decstrlen46\n    local decstrlen47\n    local decstrlen48\n    local\
    \ decstrlen49\n    local decstrlen50\n    local decstrlen51\n    local decstrlen52\n\
    \    local decstrlen53\n    local decstrlen54\n    local decstrlen55\n    local\
    \ decstrlen56\n    local decstrlen57\n    local decstrlen58\n    local decstrlen59\n\
    \    local decstrlen60\n    local decstrlen61\n    local decstrlen62\n    local\
    \ decstrlen63\n    local decstrlen64\n    local decstrlen65\n    local decstr\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a count\n    local -a sorted\n    local -a tmp\n\
    \    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local -n arr=$1\n    local -a sorted\n    local -a counts\n    local -i i\n\
    \    local j\n    local k\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n\
    \    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n\
    \    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n\
    \    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n\
    \    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n\
    \    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n\
    \    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n\
    \    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n\
    \    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n\
    \    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n\
    \    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n\
    \    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n\
    \    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n\
    \    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n\
    \    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n\
    \    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n\
    \    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n\
    \    local -a tmp68\n    local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpchi5a1au.sh: line 9: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a arr2\n    local -a arr3\n    local -a arr4\n \
    \   local -a arr5\n    local -a arr6\n    local -a arr7\n    local -a arr8\n \
    \   local -a arr9\n    local -a arr10\n    local -a arr11\n    local -a arr12\n\
    \    local -a arr13\n    local -a arr14\n    local -a arr15\n    local -a arr16\n\
    \    local -a arr17\n    local -a arr18\n    local -a arr19\n    local -a arr20\n\
    \    local -a arr21\n    local -a arr22\n    local -a arr23\n    local -a arr24\n\
    \    local -a arr25\n    local -a arr26\n    local -a arr27\n    local -a arr28\n\
    \    local -a arr29\n    local -a arr30\n    local -a arr31\n    local -a arr32\n\
    \    local -a arr33\n    local -a arr34\n    local -a arr35\n    local -a arr36\n\
    \    local -a arr37\n    local -a arr38\n    local -a arr39\n    local -a arr40\n\
    \    local -a arr41\n    local -a arr42\n    local -a arr43\n    local -a arr44\n\
    \    local -a arr45\n    local -a arr46\n    local -a arr47\n    local -a arr48\n\
    \    local -a arr49\n    local -a arr50\n    local -a arr51\n    local -a arr52\n\
    \    local -a arr53\n    local -a arr54\n    local -a arr55\n    local -a arr56\n\
    \    local -a arr57\n    local -a arr58\n    local -a arr59\n    local -a arr60\n\
    \    local -a arr61\n    local -a arr62\n    local -a arr63\n    local -a arr64\n\
    \    local -a arr65\n    local -a arr66\n    local -a arr67\n    local -a arr68\n\
    \    local -a arr69\n    local -a arr70\n    local -a arr71\n    local -a arr72\n\
    \    local -a arr73\n    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=$1\n    local length=$((${#array[@]}-1))\n    local sortedArray\n\
    \    local i\n    local j\n    local count\n    local temp\n    local result\n\
    \    local countOnes\n    local countDecimal\n    local decimal\n    local decimalCount\n\
    \    local decimalCountOnes\n    local decimalCountOnesCount\n    local decimalCountOnesCountOnes\n\
    \    local decimalCountOnesCountOnesCount\n    local decimalCountOnesCountOnesCountOnes\n\
    \    local decimalCountOnesCountOnesCountOnesCount\n    local decimalCountOnesCountOnesCountOnesCountOnes\n\
    \    local decimalCountOnesCountOnesCountOnesCountOnesCount\n    local decimalCountOnesCountOnesCountOnesCountOnesCountOnes\n\
    \    local decimalCountOnesCountOnesCountOnesCountOnesCountOnesCount\n    local\
    \ decimalCountOnesCountOnesCountOnesCountOnesCountOnesCountOnes\n    local decimalCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCount\n\
    \    local decimalCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnes\n\
    \    local decimalCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnes\n\
    \    local decimalCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCount\n\
    \    local decimalCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnes\n\
    \    local decimalCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCount\n\
    \    local decimalCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCount\n\
    \    local decimalCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCount\n\
    \    local decimalCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCountOnesCount\n\
    \    local decimalCountOnesCountOnesCount\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local t=0\n    local val=0\n    local max=0\n    local min=0\n\
    \    local count=0\n    local maxval=0\n    local minval=0\n    local maxcount=0\n\
    \    local mincount=0\n    local maxval2=0\n    local minval2=0\n    local maxcount2=0\n\
    \    local mincount2=0\n    local maxval3=0\n    local minval3=0\n    local maxcount3=0\n\
    \    local mincount3=0\n    local maxval4=0\n    local minval4=0\n    local maxcount4=0\n\
    \    local mincount4=0\n    local maxval5=0\n    local minval5=0\n    local maxcount5=0\n\
    \    local mincount5=0\n    local maxval6=0\n    local minval6=0\n    local maxcount6=0\n\
    \    local mincount6=0\n    local maxval7=0\n    local minval7=0\n    local maxcount7=0\n\
    \    local mincount7=0\n    local maxval8=0\n    local minval8=0\n    local maxcount8=0\n\
    \    local mincount8=0\n    local maxval9=0\n    local minval9=0\n    local maxcount9=0\n\
    \    local mincount9=0\n    local maxval10=0\n    local minval10=0\n    local\
    \ maxcount10=0\n    local mincount10=0\n    local maxval11=0\n    local minval11=0\n\
    \    local maxcount11=0\n    local mincount11=0\n    local maxval12=0\n    local\
    \ minval12=0\n    local maxcount12=0\n    local mincount12=0\n    local maxval13=0\n\
    \    local minval13=0\n    local maxcount13=0\n    local mincount13=0\n    local\
    \ maxval14=0\n    local minval14=0\n    local maxcount14=0\n    local mincount14=0\n\
    \    local maxval15=0\n    local minval15=0\n    local maxcount15=0\n    local\
    \ mincount15=0\n    local maxval16=0\n    local minval16=0\n    local maxcount16=0\n\
    \    local mincount16=0\n    local maxval17=0\n    local minval17=0\n\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a arr2\n    local -a sorted\n    local -a count\n\
    \    local -a count2\n    local -a count3\n    local -a count4\n    local -a count5\n\
    \    local -a count6\n    local -a count7\n    local -a count8\n    local -a count9\n\
    \    local -a count10\n    local -a count11\n    local -a count12\n    local -a\
    \ count13\n    local -a count14\n    local -a count15\n    local -a count16\n\
    \    local -a count17\n    local -a count18\n    local -a count19\n    local -a\
    \ count20\n    local -a count21\n    local -a count22\n    local -a count23\n\
    \    local -a count24\n    local -a count25\n    local -a count26\n    local -a\
    \ count27\n    local -a count28\n    local -a count29\n    local -a count30\n\
    \    local -a count31\n    local -a count32\n    local -a count33\n    local -a\
    \ count34\n    local -a count35\n    local -a count36\n    local -a count37\n\
    \    local -a count38\n    local -a count39\n    local -a count40\n    local -a\
    \ count41\n    local -a count42\n    local -a count43\n    local -a count44\n\
    \    local -a count45\n    local -a count46\n    local -a count47\n    local -a\
    \ count48\n    local -a count49\n    local -a count50\n    local -a count51\n\
    \    local -a count52\n    local -a count53\n    local -a count54\n    local -a\
    \ count55\n    local -a count56\n    local -a count57\n    local -a count58\n\
    \    local -a count59\n    local -a count60\n    local -a count61\n    local -a\
    \ count62\n    local -a count63\n    local -a count64\n    local -a count65\n\
    \    local -a count66\n    local -a count67\n    local -a count68\n    local -a\
    \ count69\n    local -a count70\n    local -a \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a count\n    local -a sorted\n    local -a tmp\n\
    \    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local array=\"$1\"\n  local -a count\n  local -a sorted\n  local -a counts\n\
    \  local -a counts_sorted\n  local -a counts_sorted_reverse\n  local -a counts_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse\n  local -a counts_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a count\n    local -a sorted\n    local -a\
    \ sorted2\n    local -a sorted3\n    local -a sorted4\n    local -a sorted5\n\
    \    local -a sorted6\n    local -a sorted7\n    local -a sorted8\n    local -a\
    \ sorted9\n    local -a sorted10\n    local -a sorted11\n    local -a sorted12\n\
    \    local -a sorted13\n    local -a sorted14\n    local -a sorted15\n    local\
    \ -a sorted16\n    local -a sorted17\n    local -a sorted18\n    local -a sorted19\n\
    \    local -a sorted20\n    local -a sorted21\n    local -a sorted22\n    local\
    \ -a sorted23\n    local -a sorted24\n    local -a sorted25\n    local -a sorted26\n\
    \    local -a sorted27\n    local -a sorted28\n    local -a sorted29\n    local\
    \ -a sorted30\n    local -a sorted31\n    local -a sorted32\n    local -a sorted33\n\
    \    local -a sorted34\n    local -a sorted35\n    local -a sorted36\n    local\
    \ -a sorted37\n    local -a sorted38\n    local -a sorted39\n    local -a sorted40\n\
    \    local -a sorted41\n    local -a sorted42\n    local -a sorted43\n    local\
    \ -a sorted44\n    local -a sorted45\n    local -a sorted46\n    local -a sorted47\n\
    \    local -a sorted48\n    local -a sorted49\n    local -a sorted50\n    local\
    \ -a sorted51\n    local -a sorted52\n    local -a sorted53\n    local -a sorted54\n\
    \    local -a sorted55\n    local -a sorted56\n    local -a sorted57\n    local\
    \ -a sorted58\n    local -a sorted59\n    local -a sorted60\n    local -a sorted61\n\
    \    local -a sorted62\n    local -a sorted63\n    local -a sorted64\n    local\
    \ -a sorted65\n    local -a sorted66\n    local -a sorted67\n    local -a sorted68\n\
    \    local -a sorted69\n    local -a sorted70\n    local -a sorted71\n    local\
    \ -a \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local sorted=()\n\
    \    local i=0\n    while [ $i -lt $length ]; do\n        local j=0\n        while\
    \ [ $j -le $length ]; do\n            local k=0\n            while [ $k -le $length\
    \ ]; do\n                if [ $array[$k] -eq 1 ]; then\n                    sorted[$i]=$j\n\
    \                    sorted[$j]=$k\n                    break\n              \
    \  fi\n                k=$((k+1))\n            done\n            j=$((j+1))\n\
    \        done\n        i=$((i+1))\n    done\n    local result\n    for (( i=0;\
    \ i<$length; i++ )); do\n        result=$((result+sorted[i]))\n    done\n    echo\
    \ \"$result\"\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh: line 18: [: too many arguments

    /tmp/tmp5c614o4m.sh:'
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local t=0\n    local max=0\n    local min=0\n    local tmp\n\
    \    local count\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local -n arr=$1\n    local -a sorted\n    local -a count\n    local -i i\n\
    \    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n \
    \   local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n \
    \   local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n\
    \    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n\
    \    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n\
    \    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n\
    \    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n\
    \    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n\
    \    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n\
    \    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n\
    \    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n\
    \    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n\
    \    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n\
    \    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n\
    \    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n\
    \    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n\
    \    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n\
    \    local -a tmp69\n    local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpv1h9qxqx.sh: line 9: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local count=0\n    local max=0\n    local min=0\n    local tmp\n\
    \    local sorted\n\n    while [ $i -lt $len ]; do\n        count=$(echo $arr[$i]\
    \ | wc -c)\n        if [ $count -gt $max ]; then\n            max=$count\n   \
    \     fi\n        if [ $count -lt $min ]; then\n            min=$count\n     \
    \   fi\n        ((i++))\n    done\n\n    sorted=()\n    while [ $i -lt $len ];\
    \ do\n        tmp=$(echo $arr[$i] | sed 's/0*//g')\n        if [ $tmp -gt $max\
    \ ]; then\n            tmp=$max\n        fi\n        if [ $tmp -lt $min ]; then\n\
    \            tmp=$min\n        fi\n        sorted+=(\"$tmp\")\n        ((i++))\n\
    \    done\n\n    sorted=($(sort -n <<< \"${sorted[@]}\"))\n    echo ${sorted[@]}\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local t=0\n    local val\n    local tmp\n    local count\n \
    \   local max\n    local min\n    local tmp2\n    local tmp3\n    local tmp4\n\
    \    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n\
    \    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local\
    \ tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n\
    \    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local\
    \ tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n\
    \    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local\
    \ tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n\
    \    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local\
    \ tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n\
    \    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local\
    \ tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n\
    \    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local\
    \ tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n\
    \    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local\
    \ tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n\
    \    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local\
    \ tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n\
    \    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local\
    \ tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n\
    \    local tmp91\n    local tmp92\n    local tmp\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local array=\"$1\"\n  local length=\"${#array}\"\n  local sorted\n  local i\n\
    \  local j\n  local k\n  local count\n  local decimal\n  local decimal2\n  local\
    \ decimal3\n  local decimal4\n  local decimal5\n  local decimal6\n  local decimal7\n\
    \  local decimal8\n  local decimal9\n  local decimal10\n  local decimal11\n  local\
    \ decimal12\n  local decimal13\n  local decimal14\n  local decimal15\n  local\
    \ decimal16\n  local decimal17\n  local decimal18\n  local decimal19\n  local\
    \ decimal20\n  local decimal21\n  local decimal22\n  local decimal23\n  local\
    \ decimal24\n  local decimal25\n  local decimal26\n  local decimal27\n  local\
    \ decimal28\n  local decimal29\n  local decimal30\n  local decimal31\n  local\
    \ decimal32\n  local decimal33\n  local decimal34\n  local decimal35\n  local\
    \ decimal36\n  local decimal37\n  local decimal38\n  local decimal39\n  local\
    \ decimal40\n  local decimal41\n  local decimal42\n  local decimal43\n  local\
    \ decimal44\n  local decimal45\n  local decimal46\n  local decimal47\n  local\
    \ decimal48\n  local decimal49\n  local decimal50\n  local decimal51\n  local\
    \ decimal52\n  local decimal53\n  local decimal54\n  local decimal55\n  local\
    \ decimal56\n  local decimal57\n  local decimal58\n  local decimal59\n  local\
    \ decimal60\n  local decimal61\n  local decimal62\n  local decimal63\n  local\
    \ decimal64\n  local decimal65\n  local decimal66\n  local decimal67\n  local\
    \ decimal68\n  local decimal69\n  local decimal70\n  local decimal71\n  local\
    \ decimal72\n  local decimal73\n  local decimal74\n  local decimal75\n  local\
    \ decimal76\n  local decimal77\n  local decimal78\n  local decimal79\n  local\
    \ decimal80\n  local decimal81\n  local decimal82\n  local decimal83\n  local\
    \ decimal84\n  local decimal85\n  local decimal86\n  local decimal87\n  local\
    \ decimal88\n  local decimal89\n  local decimal90\n  local decimal91\n  local\
    \ decimal92\n  local decimal93\n  local decimal94\n  local decimal95\n  local\
    \ decimal96\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local -n arr=$1\n    local -a sorted\n    local -a count\n    local -a tmp\n\
    \    local -i i\n    local j\n    local k\n    local -a tmp2\n    local -a tmp3\n\
    \    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n\
    \    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n\
    \    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n\
    \    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n\
    \    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n\
    \    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n\
    \    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n\
    \    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n\
    \    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n\
    \    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n\
    \    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n\
    \    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n\
    \    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n\
    \    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n\
    \    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n\
    \    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n\
    \    local -a tmp68\n    local -a \n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9hxvqz8z.sh: line 9: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a count\n    local -a sorted\n    local -a tmp\n\
    \    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local t\n    local count\n    local dec\n    local decstr\n\
    \    local decstrlen\n    local decstrlen2\n    local decstrlen3\n    local decstrlen4\n\
    \    local decstrlen5\n    local decstrlen6\n    local decstrlen7\n    local decstrlen8\n\
    \    local decstrlen9\n    local decstrlen10\n    local decstrlen11\n    local\
    \ decstrlen12\n    local decstrlen13\n    local decstrlen14\n    local decstrlen15\n\
    \    local decstrlen16\n    local decstrlen17\n    local decstrlen18\n    local\
    \ decstrlen19\n    local decstrlen20\n    local decstrlen21\n    local decstrlen22\n\
    \    local decstrlen23\n    local decstrlen24\n    local decstrlen25\n    local\
    \ decstrlen26\n    local decstrlen27\n    local decstrlen28\n    local decstrlen29\n\
    \    local decstrlen30\n    local decstrlen31\n    local decstrlen32\n    local\
    \ decstrlen33\n    local decstrlen34\n    local decstrlen35\n    local decstrlen36\n\
    \    local decstrlen37\n    local decstrlen38\n    local decstrlen39\n    local\
    \ decstrlen40\n    local decstrlen41\n    local decstrlen42\n    local decstrlen43\n\
    \    local decstrlen44\n    local decstrlen45\n    local decstrlen46\n    local\
    \ decstrlen47\n    local decstrlen48\n    local decstrlen49\n    local decstrlen50\n\
    \    local decstrlen51\n    local decstrlen52\n    local decstrlen53\n    local\
    \ decstrlen54\n    local decstrlen55\n    local decstrlen56\n    local decstrlen57\n\
    \    local decstrlen58\n    local decstrlen59\n    local decstrlen60\n    local\
    \ decstrlen61\n    local decstrlen62\n    local decstrlen63\n    local decstrlen64\n\
    \    local decstrlen65\n    local decstrlen66\n    local decstrlen\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local sorted=()\n    local i=0\n    local j=0\n \
    \   local k=0\n    while [ $i -lt ${#array[@]} ]; do\n        local count=0\n\
    \        local element=${array[$i]}\n        while [ $element -eq 1 ]; do\n  \
    \          count=$(( $count + 1 ))\n            element=${array[$(( $i + 1 ))]}\n\
    \        done\n        sorted[$j]=$(( $count ))\n        i=$(( $i + 1 ))\n   \
    \     j=$(( $j + 1 ))\n    done\n    sorted[$j]=$(( $i ))\n    local i=0\n   \
    \ local j=0\n    local k=0\n    while [ $i -lt ${#sorted[@]} ]; do\n        if\
    \ [ $sorted[$i] -gt $sorted[$(( $i + 1 ))] ]; then\n            sorted[$k]=$sorted[$i]\n\
    \            i=$(( $i + 1 ))\n        else\n            sorted[$k]=$sorted[$((\
    \ $i + 1 ))]\n            i=$(( $i + 1 ))\n        fi\n        k=$(( $k + 1 ))\n\
    \    done\n    sorted[$k]=$(( $i ))\n    local i=0\n    local j=0\n    local k=0\n\
    \    while [ $i -lt ${#sorted[@]} ]; do\n        if [ $sorted[$i] -lt $sorted[$((\
    \ $i + 1 ))] ]; then\n            sorted[$k]=$sorted[$i]\n            i=$(( $i\
    \ + 1 ))\n        else\n            sorted[$k]=$sorted[$(( $i + 1 ))]\n      \
    \      i=$(( $i + 1 ))\n        fi\n        k=$(( $k + 1 ))\n    done\n    echo\
    \ ${sorted[@]}\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpd4xlq4er.sh: line 17: [: too many arguments

    /tmp/tmpd4xlq4er.sh: line 30: [: 0[0]: integer expression expected

    /tmp/tmpd4xlq4er.sh: line 30: [: 0[1][1]: integer expression expected

    /tmp/tmpd4xlq4er.sh: line 44: [: 0[1][0]: integer expression expected

    /tmp/tmpd4xlq4er.sh: line 44: [: 0[1][1][1]: integer expression expected

    /tmp/tmpd4xlq4er.sh: line 44: [: 0[1][1][2]: integer expression expected

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local result\n  \
    \  local i\n    local j\n    local count\n    local tmp\n    local tmp2\n    local\
    \ tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local\
    \ tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n  \
    \  local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    local tmp\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a tmp\n\
    \    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local sorted=()\n    local i=0\n\
    \    while [ $i -lt $len ]; do\n        local j=0\n        while [ $j -le $len\
    \ ]; do\n            local k=$(echo $arr[$j] | awk '{print 2^$1}')\n         \
    \   if [ $k -lt $arr[$j] ]; then\n                arr[$j]=$k\n            else\n\
    \                arr[$j]=$arr[$j]\n            fi\n            j=$((j+1))\n  \
    \      done\n        sorted[$i]=$arr[$i]\n        i=$((i+1))\n    done\n    echo\
    \ ${sorted[@]}\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptza4lt48.sh: line 17: [: too many arguments

    /tmp/tmptza4lt48.sh: line 17: [: too many arguments

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local t\n    local count\n    local dec\n    local decdec\n\
    \    local decdecdec\n    local decdecdecdec\n    local decdecdecdecdec\n    local\
    \ decdecdecdecdecdec\n    local decdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdec\n \
    \   local decdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local count\n   \
    \ local i\n    local j\n    local k\n    local temp\n    local sorted\n    local\
    \ temp2\n    local temp3\n    local temp4\n    local temp5\n    local temp6\n\
    \    local temp7\n    local temp8\n    local temp9\n    local temp10\n    local\
    \ temp11\n    local temp12\n    local temp13\n    local temp14\n    local temp15\n\
    \    local temp16\n    local temp17\n    local temp18\n    local temp19\n    local\
    \ temp20\n    local temp21\n    local temp22\n    local temp23\n    local temp24\n\
    \    local temp25\n    local temp26\n    local temp27\n    local temp28\n    local\
    \ temp29\n    local temp30\n    local temp31\n    local temp32\n    local temp33\n\
    \    local temp34\n    local temp35\n    local temp36\n    local temp37\n    local\
    \ temp38\n    local temp39\n    local temp40\n    local temp41\n    local temp42\n\
    \    local temp43\n    local temp44\n    local temp45\n    local temp46\n    local\
    \ temp47\n    local temp48\n    local temp49\n    local temp50\n    local temp51\n\
    \    local temp52\n    local temp53\n    local temp54\n    local temp55\n    local\
    \ temp56\n    local temp57\n    local temp58\n    local temp59\n    local temp60\n\
    \    local temp61\n    local temp62\n    local temp63\n    local temp64\n    local\
    \ temp65\n    local temp66\n    local temp67\n    local temp68\n    local temp69\n\
    \    local temp70\n    local temp71\n    local temp72\n    local temp73\n    local\
    \ temp74\n    local temp75\n    local temp76\n    local temp77\n    local temp78\n\
    \    local temp79\n    local temp80\n    local temp81\n    local temp82\n    local\
    \ temp83\n    local temp84\n    local temp85\n    local temp86\n    local temp87\n\
    \    local temp88\n    local temp89\n    local temp90\n    local temp91\n    local\
    \ temp92\n    local temp93\n    local temp94\n    local temp95\n    local temp96\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local -n arr=$1\n    local -a sorted\n    local -a count\n    local -a tmp\n\
    \    local -i i\n    local j\n    local k\n    local len\n\n    sorted=()\n  \
    \  count=()\n    len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        count[${arr[i]}]=$((${count[${arr[i]}]}+1))\n\
    \    done\n    for ((i=0; i<len; i++)); do\n        sorted+=(\"${arr[i]}\")\n\
    \    done\n    for ((i=0; i<len; i++)); do\n        tmp=()\n        for ((j=0;\
    \ j<count[${arr[i]}]; j++)); do\n            tmp+=(\"${sorted[j]}\")\n       \
    \ done\n        sorted+=(\"${tmp[@]}\")\n    done\n    for ((i=0; i<len; i++));\
    \ do\n        sorted+=(\"${arr[i]}\")\n    done\n    echo ${sorted[@]}\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpus44491n.sh: line 9: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -n result=\"$2\"\n    local -n count=\"$3\"\
    \n    local -n index=\"$4\"\n    local -n max=\"$5\"\n    local -n min=\"$6\"\n\
    \    local -n i\n    local -n j\n    local -n k\n    local -n len\n\n    len=${#array[@]}\n\
    \    for (( i=0; i<len; i++ )); do\n        (( count[array[i]]++ ))\n    done\n\
    \n    for (( i=0; i<len; i++ )); do\n        if (( count[array[i]] > 1 )); then\n\
    \            (( index[array[i]]++ ))\n        fi\n    done\n\n    for (( i=0;\
    \ i<len; i++ )); do\n        if (( count[array[i]] == 1 )); then\n           \
    \ (( max[array[i]]++ ))\n        fi\n    done\n\n    for (( i=0; i<len; i++ ));\
    \ do\n        if (( count[array[i]] > 1 )); then\n            (( min[array[i]]++\
    \ ))\n        fi\n    done\n\n    for (( i=0; i<len; i++ )); do\n        if ((\
    \ count[array[i]] == 1 )); then\n            (( result[array[i]]++ ))\n      \
    \  fi\n    done\n\n    for (( i=0; i<len; i++ )); do\n        if (( count[array[i]]\
    \ > 1 )); then\n            (( result[array[i]]-=1 ))\n        fi\n    done\n\n\
    \    for (( i=0; i<len; i++ )); do\n        if (( count[array[i]] == 1 )); then\n\
    \            (( result[array[i]]-=1 ))\n        fi\n    done\n\n    for (( i=0;\
    \ i<len; i++ )); do\n        if (( count[array[i]] > 1 )); then\n            ((\
    \ result[array[i]]-=1 ))\n        fi\n    done\n\n    for (( i=0; i<len; i++ ));\
    \ do\n        if (( count[array[i]] == 1 )); then\n            (( result[array[i]]-=1\
    \ ))\n        fi\n    done\n\n    for (( i=0; i<len; i++ )); do\n        if ((\
    \ count[array[i]] > 1 )); then\n            (( result[array[i]]-=1 ))\n      \
    \  fi\n    done\n\n    for (( i=0; i<len; i++ )); do\n        if (( count[array[i]]\
    \ == 1 )); then\n            (( result[array[i]]-=1 ))\n        fi\n    done\n\
    \n    for (( i=0; i<len; i++ )); do\n        if ((\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1udc4yus.sh: line 86: unexpected EOF while looking for matching
    `)''

    /tmp/tmp1udc4yus.sh: line 106: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local sorted=()\n\
    \    local i\n    local j\n    local k\n    local count\n    local decimal\n \
    \   local decimal2\n    local decimal3\n    local decimal4\n    local decimal5\n\
    \    local decimal6\n    local decimal7\n    local decimal8\n    local decimal9\n\
    \    local decimal10\n    local decimal11\n    local decimal12\n    local decimal13\n\
    \    local decimal14\n    local decimal15\n    local decimal16\n    local decimal17\n\
    \    local decimal18\n    local decimal19\n    local decimal20\n    local decimal21\n\
    \    local decimal22\n    local decimal23\n    local decimal24\n    local decimal25\n\
    \    local decimal26\n    local decimal27\n    local decimal28\n    local decimal29\n\
    \    local decimal30\n    local decimal31\n    local decimal32\n    local decimal33\n\
    \    local decimal34\n    local decimal35\n    local decimal36\n    local decimal37\n\
    \    local decimal38\n    local decimal39\n    local decimal40\n    local decimal41\n\
    \    local decimal42\n    local decimal43\n    local decimal44\n    local decimal45\n\
    \    local decimal46\n    local decimal47\n    local decimal48\n    local decimal49\n\
    \    local decimal50\n    local decimal51\n    local decimal52\n    local decimal53\n\
    \    local decimal54\n    local decimal55\n    local decimal56\n    local decimal57\n\
    \    local decimal58\n    local decimal59\n    local decimal60\n    local decimal61\n\
    \    local decimal62\n    local decimal63\n    local decimal64\n    local decimal65\n\
    \    local decimal66\n    local decimal67\n    local decimal68\n    local decimal69\n\
    \    local decimal70\n    local decimal71\n    local decimal72\n    local decimal73\n\
    \    local decimal74\n    local decimal75\n    local decimal76\n    local decimal77\n\
    \    local decimal78\n    local decimal79\n    local decimal80\n    local decimal81\n\
    \    local decimal82\n    local decimal83\n    local decimal84\n    local decimal85\n\
    \    local decimal86\n    local decimal87\n    local decimal88\n    local decimal89\n\
    \    local decimal90\n    local decimal91\n    local decimal92\n    local decimal93\n\
    \    local decimal94\n    local decimal95\n    local \n}\n\ncandidate() {\n  \
    \  sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a sorted\n    local -a count\n    local -a\
    \ tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local array=$1\n  local length=$((${#array[@]}-1))\n  local sorted=()\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local count=0\n  local max=0\n  local min=0\n\
    \  local maxdec=0\n  local mindec=0\n  local maxdecnum=0\n  local mindecnum=0\n\
    \  local maxdecnumnum=0\n  local mindecnumnum=0\n  local maxdecnumnumnum=0\n \
    \ local mindecnumnumnum=0\n  local maxdecnumnumnumnum=0\n  local mindecnumnumnumnum=0\n\
    \  local maxdecnumnumnumnum=0\n  local mindecnumnumnumnum=0\n  local maxdecnumnumnumnum=0\n\
    \  local mindecnumnumnumnum=0\n  local maxdecnumnumnumnum=0\n  local mindecnumnumnumnum=0\n\
    \  local maxdecnumnumnumnum=0\n  local mindecnumnumnumnum=0\n  local maxdecnumnumnumnum=0\n\
    \  local mindecnumnumnumnum=0\n  local maxdecnumnumnumnum=0\n  local mindecnumnumnumnum=0\n\
    \  local maxdecnumnumnumnum=0\n  local mindecnumnumnumnum=0\n  local maxdecnumnumnumnum=0\n\
    \  local mindecnumnumnumnum=0\n  local maxdecnumnumnumnum=0\n  local mindecnumnumnumnum=0\n\
    \  local maxdecnumnumnumnum=0\n  local mindecnumnumnumnum=0\n  local maxdecnumnumnumnum=0\n\
    \  local mindecnumnumnumnum=0\n  local maxdecnumnumnumnum=0\n  local mindecnumnumnumnum=0\n\
    \  local maxdecnumnumnumnum=0\n  local mindecnumnumnumnum=0\n  local maxdecnumnumnumnum=0\n\
    \  local mindecnumnumnumnum=0\n  local maxdecnumnumnumnum=0\n  local mindecnumnumnumnum=0\n\
    \  local maxdecnumnumnumnum=0\n  local mindecnumnumnumnum=0\n  local maxdecnumnumnumnum=0\n\
    \  local mindecnumnumnumnum=0\n  local maxdecnumnumnumnum=0\n  local mindecnumnumnumnum=0\n\
    \  local maxdecnumnumnumnum=0\n  local mindecnumnumnumnum=0\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local tmp\n    local i\n    local\
    \ j\n    local k\n    local count\n    local dec\n    local dec2\n    local dec3\n\
    \    local dec4\n    local dec5\n    local dec6\n    local dec7\n    local dec8\n\
    \    local dec9\n    local dec10\n    local dec11\n    local dec12\n    local\
    \ dec13\n    local dec14\n    local dec15\n    local dec16\n    local dec17\n\
    \    local dec18\n    local dec19\n    local dec20\n    local dec21\n    local\
    \ dec22\n    local dec23\n    local dec24\n    local dec25\n    local dec26\n\
    \    local dec27\n    local dec28\n    local dec29\n    local dec30\n    local\
    \ dec31\n    local dec32\n    local dec33\n    local dec34\n    local dec35\n\
    \    local dec36\n    local dec37\n    local dec38\n    local dec39\n    local\
    \ dec40\n    local dec41\n    local dec42\n    local dec43\n    local dec44\n\
    \    local dec45\n    local dec46\n    local dec47\n    local dec48\n    local\
    \ dec49\n    local dec50\n    local dec51\n    local dec52\n    local dec53\n\
    \    local dec54\n    local dec55\n    local dec56\n    local dec57\n    local\
    \ dec58\n    local dec59\n    local dec60\n    local dec61\n    local dec62\n\
    \    local dec63\n    local dec64\n    local dec65\n    local dec66\n    local\
    \ dec67\n    local dec68\n    local dec69\n    local dec70\n    local dec71\n\
    \    local dec72\n    local dec73\n    local dec74\n    local dec75\n    local\
    \ dec76\n    local dec77\n    local dec78\n    local dec79\n    local dec80\n\
    \    local dec81\n    local dec82\n    local dec83\n    local dec84\n    local\
    \ dec85\n    local dec86\n    local dec87\n    local dec88\n    local dec89\n\
    \    local dec90\n    local dec91\n    local dec92\n    local dec93\n    local\
    \ dec94\n    local dec95\n    local \n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -n arrLen=${arr[@]}\n    local -n arrLenLen=${#arr[@]}\n\
    \    local -n arrLenLenLen=${#arr[@]}\n    local -n arrLenLenLenLen=${#arr[@]}\n\
    \    local -n arrLenLenLenLenLen=${#arr[@]}\n    local -n arrLenLenLenLenLenLen=${#arr[@]}\n\
    \    local -n arrLenLenLenLenLenLenLen=${#arr[@]}\n    local -n arrLenLenLenLenLenLenLenLen=${#arr[@]}\n\
    \    local -n arrLenLenLenLenLenLenLenLenLen=${#arr[@]}\n    local -n arrLenLenLenLenLenLenLenLenLenLen=${#arr[@]}\n\
    \    local -n arrLenLenLenLenLenLenLenLenLenLenLen=${#arr[@]}\n    local -n arrLenLenLenLenLenLenLenLenLenLenLenLen=${#arr[@]}\n\
    \    local -n arrLenLenLenLenLenLenLenLenLenLenLenLenLen=${#arr[@]}\n    local\
    \ -n arrLenLenLenLenLenLenLenLenLenLenLenLenLenLen=${#arr[@]}\n    local -n arrLenLenLenLenLenLenLenLenLenLenLenLenLenLen=${#arr[@]}\n\
    \    local -n arrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen=${#arr[@]}\n  \
    \  local -n arrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen=${#arr[@]}\n \
    \   local -n arrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen=${#arr[@]}\n\
    \    local -n arrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen=${#arr[@]}\n\
    \    local -n arrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen=${#arr[@]}\n\
    \    local -n arrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen=${#arr[@]}\n\
    \    local -n arrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen=${#arr[@]}\n\
    \    local -n arrLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen=${\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9_awkse1.sh: line 52: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local array=\"$1\"\n  local length=\"${#array[@]}\"\n  local sorted=()\n  local\
    \ i\n  local j\n  local k\n  local count\n  local max\n  local maxIndex\n  local\
    \ min\n  local minIndex\n  local tmp\n  local tmpIndex\n  local tmpCount\n  local\
    \ tmpMax\n  local tmpMin\n  local tmpMaxIndex\n  local tmpMinIndex\n  local tmpTmp\n\
    \  local tmpTmpIndex\n  local tmpTmpCount\n  local tmpTmpMax\n  local tmpTmpMin\n\
    \  local tmpTmpMaxIndex\n  local tmpTmpMinIndex\n  local tmpTmpTmp\n  local tmpTmpTmpIndex\n\
    \  local tmpTmpTmpCount\n  local tmpTmpTmpMax\n  local tmpTmpTmpMin\n  local tmpTmpTmpMaxIndex\n\
    \  local tmpTmpTmpMinIndex\n  local tmpTmpTmpTmp\n  local tmpTmpTmpTmpIndex\n\
    \  local tmpTmpTmpTmpCount\n  local tmpTmpTmpTmpMax\n  local tmpTmpTmpTmpMin\n\
    \  local tmpTmpTmpTmpMaxIndex\n  local tmpTmpTmpTmpMinIndex\n  local tmpTmpTmpTmpTmp\n\
    \  local tmpTmpTmpTmpTmpIndex\n  local tmpTmpTmpTmpTmpCount\n  local tmpTmpTmpTmpTmpMax\n\
    \  local tmpTmpTmpTmpTmpMin\n  local tmpTmpTmpTmpTmpMaxIndex\n  local tmpTmpTmpTmpTmpMinIndex\n\
    \  local tmpTmpTmpTmpTmpTmp\n  local tmpTmpTmpTmpTmpTmpIndex\n  local tmpTmpTmpTmpTmpTmpCount\n\
    \  local tmpTmpTmpTmpTmpTmpMax\n  local tmpTmpTmpTmpTmpTmpMin\n  local tmpTmpTmpTmpTmpTmpMaxIndex\n\
    \  local tmpTmpTmpTmpTmpTmpMinIndex\n  local tmpTmpTmpTmpTmpTmpTmp\n  local tmpTmpTmpTmpTmpTmpT\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local result\n    local i\n    local count\n    local\
    \ decimal\n    local decimal2\n    local decimal3\n    local decimal4\n    local\
    \ decimal5\n    local decimal6\n    local decimal7\n    local decimal8\n    local\
    \ decimal9\n    local decimal10\n    local decimal11\n    local decimal12\n  \
    \  local decimal13\n    local decimal14\n    local decimal15\n    local decimal16\n\
    \    local decimal17\n    local decimal18\n    local decimal19\n    local decimal20\n\
    \    local decimal21\n    local decimal22\n    local decimal23\n    local decimal24\n\
    \    local decimal25\n    local decimal26\n    local decimal27\n    local decimal28\n\
    \    local decimal29\n    local decimal30\n    local decimal31\n    local decimal32\n\
    \    local decimal33\n    local decimal34\n    local decimal35\n    local decimal36\n\
    \    local decimal37\n    local decimal38\n    local decimal39\n    local decimal40\n\
    \    local decimal41\n    local decimal42\n    local decimal43\n    local decimal44\n\
    \    local decimal45\n    local decimal46\n    local decimal47\n    local decimal48\n\
    \    local decimal49\n    local decimal50\n    local decimal51\n    local decimal52\n\
    \    local decimal53\n    local decimal54\n    local decimal55\n    local decimal56\n\
    \    local decimal57\n    local decimal58\n    local decimal59\n    local decimal60\n\
    \    local decimal61\n    local decimal62\n    local decimal63\n    local decimal64\n\
    \    local decimal65\n    local decimal66\n    local decimal67\n    local decimal68\n\
    \    local decimal69\n    local decimal70\n    local decimal71\n    local decimal72\n\
    \    local decimal73\n    local decimal74\n    local decimal75\n    local decimal76\n\
    \    local decimal77\n    local decimal78\n    local decimal79\n    local decimal80\n\
    \    local decimal81\n    local decimal82\n    local decimal83\n    local decimal84\n\
    \    local decimal85\n    local decimal86\n    local decimal87\n    local decimal88\n\
    \    local decimal89\n    local decimal90\n    local decimal91\n    local decimal92\n\
    \    local decimal93\n    local decimal94\n    local decimal95\n    local decimal96\n\
    \    local decimal97\n    local decimal98\n    local decimal99\n\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -n arrlen=${arr[@]}\n    local -n arrlen2=${#arr[@]}\n\
    \    local -n i=0\n    local -n j=0\n    local -n k=0\n    local -n max=0\n  \
    \  local -n min=0\n    local -n max2=0\n    local -n min2=0\n    local -n max3=0\n\
    \    local -n min3=0\n    local -n max4=0\n    local -n min4=0\n    local -n max5=0\n\
    \    local -n min5=0\n    local -n max6=0\n    local -n min6=0\n    local -n max7=0\n\
    \    local -n min7=0\n    local -n max8=0\n    local -n min8=0\n    local -n max9=0\n\
    \    local -n min9=0\n    local -n max10=0\n    local -n min10=0\n    local -n\
    \ max11=0\n    local -n min11=0\n    local -n max12=0\n    local -n min12=0\n\
    \    local -n max13=0\n    local -n min13=0\n    local -n max14=0\n    local -n\
    \ min14=0\n    local -n max15=0\n    local -n min15=0\n    local -n max16=0\n\
    \    local -n min16=0\n    local -n max17=0\n    local -n min17=0\n    local -n\
    \ max18=0\n    local -n min18=0\n    local -n max19=0\n    local -n min19=0\n\
    \    local -n max20=0\n    local -n min20=0\n    local -n max21=0\n    local -n\
    \ min21=0\n    local -n max22=0\n    local -n min22=0\n    local -n max23=0\n\
    \    local -n min23=0\n    local -n max24=0\n    local -n min24=0\n    local -n\
    \ max25=0\n    local -n min25=0\n    local -n max26=0\n    local -n min26=0\n\
    \    local -n max27=0\n    local -n min27=0\n    local -n max28=0\n    local -n\
    \ min28=0\n    local -n max29=0\n    local -n min29=0\n\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwlgya0f8.sh: line 10: local: `1 5 2 3 4'': invalid variable name
    for name reference

    /tmp/tmpwlgya0f8.sh: line 11: local: `1'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 12: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 13: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 14: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 15: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 16: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 17: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 18: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 19: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 20: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 21: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 23: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 25: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 26: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 27: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 29: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 30: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 31: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 32: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 33: local: `0'': invalid variable name for name reference

    /tmp/tmpwlgya0f8.sh: line 34: local: `0'': invali'
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a counts\n\
    \    local -a counts_sorted\n    local -a counts_sorted_reverse\n    local -a\
    \ counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a counts\n\
    \    local -a counts_sorted\n    local -a counts_sorted_reverse\n    local -a\
    \ counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local array=\"$1\"\n  local -a counts\n  local -a sorted\n  local -a count\n\
    \  local i\n  local j\n  local k\n  local -a temp\n  local -a temp2\n  local -a\
    \ temp3\n  local -a temp4\n  local -a temp5\n  local -a temp6\n  local -a temp7\n\
    \  local -a temp8\n  local -a temp9\n  local -a temp10\n  local -a temp11\n  local\
    \ -a temp12\n  local -a temp13\n  local -a temp14\n  local -a temp15\n  local\
    \ -a temp16\n  local -a temp17\n  local -a temp18\n  local -a temp19\n  local\
    \ -a temp20\n  local -a temp21\n  local -a temp22\n  local -a temp23\n  local\
    \ -a temp24\n  local -a temp25\n  local -a temp26\n  local -a temp27\n  local\
    \ -a temp28\n  local -a temp29\n  local -a temp30\n  local -a temp31\n  local\
    \ -a temp32\n  local -a temp33\n  local -a temp34\n  local -a temp35\n  local\
    \ -a temp36\n  local -a temp37\n  local -a temp38\n  local -a temp39\n  local\
    \ -a temp40\n  local -a temp41\n  local -a temp42\n  local -a temp43\n  local\
    \ -a temp44\n  local -a temp45\n  local -a temp46\n  local -a temp47\n  local\
    \ -a temp48\n  local -a temp49\n  local -a temp50\n  local -a temp51\n  local\
    \ -a temp52\n  local -a temp53\n  local -a temp54\n  local -a temp55\n  local\
    \ -a temp56\n  local -a temp57\n  local -a temp58\n  local -a temp59\n  local\
    \ -a temp60\n  local -a temp61\n  local -a temp62\n  local -a temp63\n  local\
    \ -a temp64\n  local -a temp65\n  local -a temp66\n  local -a temp67\n  local\
    \ -a temp68\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local result\n  \
    \  local i\n    local j\n    local count\n    local temp\n    local max\n    local\
    \ min\n    local maxDecimal\n    local minDecimal\n    local decimal\n    local\
    \ decimalValue\n    local decimalValue2\n    local decimalValue3\n    local decimalValue4\n\
    \    local decimalValue5\n    local decimalValue6\n    local decimalValue7\n \
    \   local decimalValue8\n    local decimalValue9\n    local decimalValue10\n \
    \   local decimalValue11\n    local decimalValue12\n    local decimalValue13\n\
    \    local decimalValue14\n    local decimalValue15\n    local decimalValue16\n\
    \    local decimalValue17\n    local decimalValue18\n    local decimalValue19\n\
    \    local decimalValue20\n    local decimalValue21\n    local decimalValue22\n\
    \    local decimalValue23\n    local decimalValue24\n    local decimalValue25\n\
    \    local decimalValue26\n    local decimalValue27\n    local decimalValue28\n\
    \    local decimalValue29\n    local decimalValue30\n    local decimalValue31\n\
    \    local decimalValue32\n    local decimalValue33\n    local decimalValue34\n\
    \    local decimalValue35\n    local decimalValue36\n    local decimalValue37\n\
    \    local decimalValue38\n    local decimalValue39\n    local decimalValue40\n\
    \    local decimalValue41\n    local decimalValue42\n    local decimalValue43\n\
    \    local decimalValue44\n    local decimalValue45\n    local decimalValue46\n\
    \    local decimalValue47\n    local decimalValue48\n    local decimalValue49\n\
    \    local decimalValue50\n    local decimalValue51\n    local decimalValue52\n\
    \    local decimalValue53\n    local decimalValue54\n    local decimalValue55\n\
    \    local decimalValue56\n    local decimalValue57\n    local decimalValue58\n\
    \    local decimalValue59\n    local decimalValue60\n    local decimalValue61\n\
    \    local decimalValue62\n    local decimalValue63\n    local decimalValue64\n\
    \    local decimalValue65\n    local decimalValue66\n    local decimalValue67\n\
    \    local decimalValue68\n    local decimalValue69\n    local decimalValue70\n\
    \    local decimalValue71\n    local decimalValue72\n    local decimalValue73\n\
    \    local decimalValue74\n    local decimalValue75\n    local decimalValue76\n\
    \    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local res\n    local tmp\n    local count\n    local dec\n    local dec2\n\
    \    local dec3\n    local dec4\n    local dec5\n    local dec6\n    local dec7\n\
    \    local dec8\n    local dec9\n    local dec10\n    local dec11\n    local dec12\n\
    \    local dec13\n    local dec14\n    local dec15\n    local dec16\n    local\
    \ dec17\n    local dec18\n    local dec19\n    local dec20\n    local dec21\n\
    \    local dec22\n    local dec23\n    local dec24\n    local dec25\n    local\
    \ dec26\n    local dec27\n    local dec28\n    local dec29\n    local dec30\n\
    \    local dec31\n    local dec32\n    local dec33\n    local dec34\n    local\
    \ dec35\n    local dec36\n    local dec37\n    local dec38\n    local dec39\n\
    \    local dec40\n    local dec41\n    local dec42\n    local dec43\n    local\
    \ dec44\n    local dec45\n    local dec46\n    local dec47\n    local dec48\n\
    \    local dec49\n    local dec50\n    local dec51\n    local dec52\n    local\
    \ dec53\n    local dec54\n    local dec55\n    local dec56\n    local dec57\n\
    \    local dec58\n    local dec59\n    local dec60\n    local dec61\n    local\
    \ dec62\n    local dec63\n    local dec64\n    local dec65\n    local dec66\n\
    \    local dec67\n    local dec68\n    local dec69\n    local dec70\n    local\
    \ dec71\n    local dec72\n    local dec73\n    local dec74\n    local dec75\n\
    \    local dec76\n    local dec77\n    local dec78\n    local dec79\n    local\
    \ dec80\n    local dec81\n    local dec82\n    local dec83\n    local dec84\n\
    \    local dec85\n    local dec86\n    local dec87\n    local dec88\n    local\
    \ dec89\n    local dec90\n    local dec91\n    local dec92\n    local dec93\n\
    \    local dec94\n    local dec95\n    \n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local result\n    local i\n    local count\n    local\
    \ j\n    local k\n    local temp\n    local len\n    local max\n    local min\n\
    \    local maxdec\n    local mindec\n    local maxbin\n    local minbin\n    local\
    \ maxdecbin\n    local mindecbin\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local minbinlen\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local minbinlen\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local minbinlen\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local minbinlen\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local minbinlen\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local minbinlen\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local minbinlen\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local minbinlen\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local minbinlen\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local minbinlen\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local minbinlen\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local minbinlen\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local minbinlen\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local minbinlen\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local minbinlen\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local minbinlen\n    local maxdecbinlen\n    local mindecbinlen\n\
    \    local maxbinlen\n    local \n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local array=\"$1\"\n  local length=\"${#array}\"\n  local sorted\n  local i\n\
    \  local j\n  local k\n  local count\n  local temp\n  local decimal\n  local decimal2\n\
    \  local decimal3\n  local decimal4\n  local decimal5\n  local decimal6\n  local\
    \ decimal7\n  local decimal8\n  local decimal9\n  local decimal10\n  local decimal11\n\
    \  local decimal12\n  local decimal13\n  local decimal14\n  local decimal15\n\
    \  local decimal16\n  local decimal17\n  local decimal18\n  local decimal19\n\
    \  local decimal20\n  local decimal21\n  local decimal22\n  local decimal23\n\
    \  local decimal24\n  local decimal25\n  local decimal26\n  local decimal27\n\
    \  local decimal28\n  local decimal29\n  local decimal30\n  local decimal31\n\
    \  local decimal32\n  local decimal33\n  local decimal34\n  local decimal35\n\
    \  local decimal36\n  local decimal37\n  local decimal38\n  local decimal39\n\
    \  local decimal40\n  local decimal41\n  local decimal42\n  local decimal43\n\
    \  local decimal44\n  local decimal45\n  local decimal46\n  local decimal47\n\
    \  local decimal48\n  local decimal49\n  local decimal50\n  local decimal51\n\
    \  local decimal52\n  local decimal53\n  local decimal54\n  local decimal55\n\
    \  local decimal56\n  local decimal57\n  local decimal58\n  local decimal59\n\
    \  local decimal60\n  local decimal61\n  local decimal62\n  local decimal63\n\
    \  local decimal64\n  local decimal65\n  local decimal66\n  local decimal67\n\
    \  local decimal68\n  local decimal69\n  local decimal70\n  local decimal71\n\
    \  local decimal72\n  local decimal73\n  local decimal74\n  local decimal75\n\
    \  local decimal76\n  local decimal77\n  local decimal78\n  local decimal79\n\
    \  local decimal80\n  local decimal81\n  local decimal82\n  local decimal83\n\
    \  local decimal84\n  local decimal85\n  local decimal86\n  local decimal87\n\
    \  local decimal88\n  local decimal89\n  local decimal90\n  local decimal91\n\
    \  local decimal92\n  local decimal93\n  local decimal94\n  local decimal95\n\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a counts\n    local -a tmp\n\
    \    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a \n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local result\n    local i\n    local count\n    local\
    \ decimal\n    local decimal2\n    local decimal3\n    local decimal4\n    local\
    \ decimal5\n    local decimal6\n    local decimal7\n    local decimal8\n    local\
    \ decimal9\n    local decimal10\n    local decimal11\n    local decimal12\n  \
    \  local decimal13\n    local decimal14\n    local decimal15\n    local decimal16\n\
    \    local decimal17\n    local decimal18\n    local decimal19\n    local decimal20\n\
    \    local decimal21\n    local decimal22\n    local decimal23\n    local decimal24\n\
    \    local decimal25\n    local decimal26\n    local decimal27\n    local decimal28\n\
    \    local decimal29\n    local decimal30\n    local decimal31\n    local decimal32\n\
    \    local decimal33\n    local decimal34\n    local decimal35\n    local decimal36\n\
    \    local decimal37\n    local decimal38\n    local decimal39\n    local decimal40\n\
    \    local decimal41\n    local decimal42\n    local decimal43\n    local decimal44\n\
    \    local decimal45\n    local decimal46\n    local decimal47\n    local decimal48\n\
    \    local decimal49\n    local decimal50\n    local decimal51\n    local decimal52\n\
    \    local decimal53\n    local decimal54\n    local decimal55\n    local decimal56\n\
    \    local decimal57\n    local decimal58\n    local decimal59\n    local decimal60\n\
    \    local decimal61\n    local decimal62\n    local decimal63\n    local decimal64\n\
    \    local decimal65\n    local decimal66\n    local decimal67\n    local decimal68\n\
    \    local decimal69\n    local decimal70\n    local decimal71\n    local decimal72\n\
    \    local decimal73\n    local decimal74\n    local decimal75\n    local decimal76\n\
    \    local decimal77\n    local decimal78\n    local decimal79\n    local decimal80\n\
    \    local decimal81\n    local decimal82\n    local decimal83\n    local decimal84\n\
    \    local decimal85\n    local decimal86\n    local decimal87\n    local decimal88\n\
    \    local decimal89\n    local decimal90\n    local decimal91\n    local decimal92\n\
    \    local decimal93\n    local decimal94\n    local decimal95\n    local decimal96\n\
    \    local decimal97\n    local decimal98\n    local decimal99\n\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a sorted\n    local -a count\n    local -a\
    \ decimal\n    local -a decimal2\n    local -a decimal3\n    local -a decimal4\n\
    \    local -a decimal5\n    local -a decimal6\n    local -a decimal7\n    local\
    \ -a decimal8\n    local -a decimal9\n    local -a decimal10\n    local -a decimal11\n\
    \    local -a decimal12\n    local -a decimal13\n    local -a decimal14\n    local\
    \ -a decimal15\n    local -a decimal16\n    local -a decimal17\n    local -a decimal18\n\
    \    local -a decimal19\n    local -a decimal20\n    local -a decimal21\n    local\
    \ -a decimal22\n    local -a decimal23\n    local -a decimal24\n    local -a decimal25\n\
    \    local -a decimal26\n    local -a decimal27\n    local -a decimal28\n    local\
    \ -a decimal29\n    local -a decimal30\n    local -a decimal31\n    local -a decimal32\n\
    \    local -a decimal33\n    local -a decimal34\n    local -a decimal35\n    local\
    \ -a decimal36\n    local -a decimal37\n    local -a decimal38\n    local -a decimal39\n\
    \    local -a decimal40\n    local -a decimal41\n    local -a decimal42\n    local\
    \ -a decimal43\n    local -a decimal44\n    local -a decimal45\n    local -a decimal46\n\
    \    local -a decimal47\n    local -a decimal48\n    local -a decimal49\n    local\
    \ -a decimal50\n    local -a decimal51\n    local -a decimal52\n    local -a decimal53\n\
    \    local -a decimal54\n    local -a decimal55\n    local -a decimal56\n    local\
    \ -a decimal57\n    local -a decimal58\n    local -a decimal59\n    local -a decimal60\n\
    \    local -a decimal61\n    local -a decimal62\n    local -a decimal63\n    local\
    \ -a decimal64\n    local -a decimal65\n    local -a decimal66\n    local -a decimal67\n\
    \    local -a decimal68\n    local -a decimal69\n    local -a decimal70\n    local\
    \ -a decimal\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local array=$1\n  local length=$((${#array[@]}-1))\n  local sorted\n  local\
    \ i\n  local j\n  local count\n  local temp\n  local temp2\n  local temp3\n  local\
    \ temp4\n  local temp5\n  local temp6\n  local temp7\n  local temp8\n  local temp9\n\
    \  local temp10\n  local temp11\n  local temp12\n  local temp13\n  local temp14\n\
    \  local temp15\n  local temp16\n  local temp17\n  local temp18\n  local temp19\n\
    \  local temp20\n  local temp21\n  local temp22\n  local temp23\n  local temp24\n\
    \  local temp25\n  local temp26\n  local temp27\n  local temp28\n  local temp29\n\
    \  local temp30\n  local temp31\n  local temp32\n  local temp33\n  local temp34\n\
    \  local temp35\n  local temp36\n  local temp37\n  local temp38\n  local temp39\n\
    \  local temp40\n  local temp41\n  local temp42\n  local temp43\n  local temp44\n\
    \  local temp45\n  local temp46\n  local temp47\n  local temp48\n  local temp49\n\
    \  local temp50\n  local temp51\n  local temp52\n  local temp53\n  local temp54\n\
    \  local temp55\n  local temp56\n  local temp57\n  local temp58\n  local temp59\n\
    \  local temp60\n  local temp61\n  local temp62\n  local temp63\n  local temp64\n\
    \  local temp65\n  local temp66\n  local temp67\n  local temp68\n  local temp69\n\
    \  local temp70\n  local temp71\n  local temp72\n  local temp73\n  local temp74\n\
    \  local temp75\n  local temp76\n  local temp77\n  local temp78\n  local temp79\n\
    \  local temp80\n  local temp81\n  local temp82\n  local temp83\n  local temp84\n\
    \  local temp85\n  local temp86\n  local temp87\n  local temp88\n  local temp89\n\
    \  local temp90\n  local temp91\n  local temp92\n  local temp93\n  local temp94\n\
    \  local temp95\n  local temp96\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a count\n    local -a sorted\n    local -a tmp\n\
    \    local i\n    local j\n    local k\n    local count\n    local -a tmp\n  \
    \  local -a sorted\n    local -a tmp\n    local -a tmp\n    local -a tmp\n   \
    \ local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a \n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local sorted=()\n\
    \    local i=0\n    local j=0\n    local k=0\n    local count=0\n    local decimal=0\n\
    \    local decimal2=0\n    local decimal3=0\n    local decimal4=0\n    local decimal5=0\n\
    \    local decimal6=0\n    local decimal7=0\n    local decimal8=0\n    local decimal9=0\n\
    \    local decimal10=0\n    local decimal11=0\n    local decimal12=0\n    local\
    \ decimal13=0\n    local decimal14=0\n    local decimal15=0\n    local decimal16=0\n\
    \    local decimal17=0\n    local decimal18=0\n    local decimal19=0\n    local\
    \ decimal20=0\n    local decimal21=0\n    local decimal22=0\n    local decimal23=0\n\
    \    local decimal24=0\n    local decimal25=0\n    local decimal26=0\n    local\
    \ decimal27=0\n    local decimal28=0\n    local decimal29=0\n    local decimal30=0\n\
    \    local decimal31=0\n    local decimal32=0\n    local decimal33=0\n    local\
    \ decimal34=0\n    local decimal35=0\n    local decimal36=0\n    local decimal37=0\n\
    \    local decimal38=0\n    local decimal39=0\n    local decimal40=0\n    local\
    \ decimal41=0\n    local decimal42=0\n    local decimal43=0\n    local decimal44=0\n\
    \    local decimal45=0\n    local decimal46=0\n    local decimal47=0\n    local\
    \ decimal48=0\n    local decimal49=0\n    local decimal50=0\n    local decimal51=0\n\
    \    local decimal52=0\n    local decimal53=0\n    local decimal54=0\n    local\
    \ decimal55=0\n    local decimal56=0\n    local decimal57=0\n    local decimal58=0\n\
    \    local decimal59=0\n    local decimal60=0\n    local decimal61=0\n    local\
    \ decimal62=0\n    local decimal63=0\n    local decimal64=0\n    local decimal65=0\n\
    \    local decimal66=0\n    local decimal67=0\n    local decimal68=0\n    local\
    \ decimal69=0\n    local decimal70=0\n    local decimal71=0\n    local decimal72=0\n\
    \    local decimal73=0\n    local decimal74=0\n    local decimal75=0\n    local\
    \ decimal76=0\n    local decimal77=0\n    local decimal78=0\n    local decimal79=0\n\
    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4\
    \ -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1\
    \ 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local arr=$1\n  local -a count\n  local -a sorted\n  local -a tmp\n  local\
    \ i\n  local j\n  local k\n  local count\n  local -a tmp\n  local -a sorted\n\
    \  local -a count\n  local -a tmp\n  local -a sorted\n  local -a count\n  local\
    \ -a tmp\n  local -a sorted\n  local -a count\n  local -a tmp\n  local -a sorted\n\
    \  local -a count\n  local -a tmp\n  local -a sorted\n  local -a count\n  local\
    \ -a tmp\n  local -a sorted\n  local -a count\n  local -a tmp\n  local -a sorted\n\
    \  local -a count\n  local -a tmp\n  local -a sorted\n  local -a count\n  local\
    \ -a tmp\n  local -a sorted\n  local -a count\n  local -a tmp\n  local -a sorted\n\
    \  local -a count\n  local -a tmp\n  local -a sorted\n  local -a count\n  local\
    \ -a tmp\n  local -a sorted\n  local -a count\n  local -a tmp\n  local -a sorted\n\
    \  local -a count\n  local -a tmp\n  local -a sorted\n  local -a count\n  local\
    \ -a tmp\n  local -a sorted\n  local -a count\n  local -a tmp\n  local -a sorted\n\
    \  local -a count\n  local -a tmp\n  local -a sorted\n  local -a count\n  local\
    \ -a tmp\n  local -a sorted\n  local -a count\n  local -a tmp\n  local -a sorted\n\
    \  local -a count\n  local -a tmp\n  local -a sorted\n  local -a count\n  local\
    \ -a tmp\n  local -a sorted\n  local -a count\n  local -a tmp\n  local -a sorted\n\
    \  local -a count\n  local -a tmp\n  local -a sorted\n  local -a count\n  local\
    \ -a tmp\n  local -a sorted\n  local -a count\n  local -a tmp\n  local -a sorted\n\
    \  local -a count\n  local -a tmp\n  local -a sorted\n  local -a count\n  local\
    \ -a \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a counts\n\
    \    local -a counts_sorted\n    local -a counts_sorted_reverse\n    local -a\
    \ counts_sorted_reverse_index\n    local -a counts_sorted_reverse_count\n    local\
    \ -a counts_sorted_reverse_count_index\n    local -a counts_sorted_reverse_count_value\n\
    \    local -a counts_sorted_reverse_count_value_index\n    local -a counts_sorted_reverse_count_value_max\n\
    \    local -a counts_sorted_reverse_count_value_max_index\n    local -a counts_sorted_reverse_count_value_max_value\n\
    \    local -a counts_sorted_reverse_count_value_max_value_index\n    local -a\
    \ counts_sorted_reverse_count_value_max_value_max\n    local -a counts_sorted_reverse_count_value_max_value_max_index\n\
    \    local -a counts_sorted_reverse_count_value_max_value_max_value\n    local\
    \ -a counts_sorted_reverse_count_value_max_value_max_value_index\n    local -a\
    \ counts_sorted_reverse_count_value_max_value_max_value_max\n    local -a counts_sorted_reverse_count_value_max_value_max_value_max_index\n\
    \    local -a counts_sorted_reverse_count_value_max_value_max_value_max_value\n\
    \    local -a counts_sorted_reverse_count_value_max_value_max_value_max_value_index\n\
    \    local -a counts_sorted_reverse_count_value_max_value_max_value_max_value_max\n\
    \    local -a counts_sorted_reverse_count_value_max_value_max_value_max_value_max_index\n\
    \    local -a counts_sorted_reverse_count_value_max_value_max_value_max_value_max_value\n\
    \    local -a counts_sorted_reverse_count_value_max_value_max_value_max_value_max_value_index\n\
    \    local -a counts_sorted_reverse_count_value_max_value_max_value_max_value_max_value\n\
    \    local -a counts_sorted_reverse_count_value_max_value_max_value_max_value_max_value_index\n\
    \    local -a counts_sorted_reverse_count_value_max_value_max_value_max_value_max_value_max\n\
    \    local -a counts_sorted_reverse_count_value_max_value_max_value_max_value_max_value_max_index\n\
    \    local -a counts_sorted_reverse_count_value_max_value_max_value_max_value_max_value_max_value\n\
    \    local -a counts_sorted_reverse_count_value_max_value_max_value_max_value_max_value_max_value_index\n\
    \    local -a counts_sorted_reverse_count_value_max_value_max_value_max_value_max_value_max_value\n\
    \    local -a counts_sorted_reverse_count_value_max_value_max_value_max_value_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local temp\n    local count\n    local max\n    local min\n\
    \    local dec\n    local decdec\n    local decdecdec\n    local decdecdecdec\n\
    \    local decdecdecdecdec\n    local decdecdecdecdecdec\n    local decdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdec\n \
    \   local decdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local count\n   \
    \ local i\n    local j\n    local sorted\n    local temp\n    local temp2\n  \
    \  local temp3\n    local temp4\n    local temp5\n    local temp6\n    local temp7\n\
    \    local temp8\n    local temp9\n    local temp10\n    local temp11\n    local\
    \ temp12\n    local temp13\n    local temp14\n    local temp15\n    local temp16\n\
    \    local temp17\n    local temp18\n    local temp19\n    local temp20\n    local\
    \ temp21\n    local temp22\n    local temp23\n    local temp24\n    local temp25\n\
    \    local temp26\n    local temp27\n    local temp28\n    local temp29\n    local\
    \ temp30\n    local temp31\n    local temp32\n    local temp33\n    local temp34\n\
    \    local temp35\n    local temp36\n    local temp37\n    local temp38\n    local\
    \ temp39\n    local temp40\n    local temp41\n    local temp42\n    local temp43\n\
    \    local temp44\n    local temp45\n    local temp46\n    local temp47\n    local\
    \ temp48\n    local temp49\n    local temp50\n    local temp51\n    local temp52\n\
    \    local temp53\n    local temp54\n    local temp55\n    local temp56\n    local\
    \ temp57\n    local temp58\n    local temp59\n    local temp60\n    local temp61\n\
    \    local temp62\n    local temp63\n    local temp64\n    local temp65\n    local\
    \ temp66\n    local temp67\n    local temp68\n    local temp69\n    local temp70\n\
    \    local temp71\n    local temp72\n    local temp73\n    local temp74\n    local\
    \ temp75\n    local temp76\n    local temp77\n    local temp78\n    local temp79\n\
    \    local temp80\n    local temp81\n    local temp82\n    local temp83\n    local\
    \ temp84\n    local temp85\n    local temp86\n    local temp87\n    local temp88\n\
    \    local temp89\n    local temp90\n    local temp91\n    local temp92\n    local\
    \ temp93\n    local temp94\n    local temp95\n    local temp96\n    local temp\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array[@]}\"\n    local result\n\
    \    local i\n    local j\n    local k\n    local count\n    local temp\n    local\
    \ max\n    local min\n    local maxDecimal\n    local minDecimal\n    local decimal\n\
    \    local decimalString\n    local decimalStringLength\n    local decimalStringLength2\n\
    \    local decimalStringLength3\n    local decimalStringLength4\n    local decimalStringLength5\n\
    \    local decimalStringLength6\n    local decimalStringLength7\n    local decimalStringLength8\n\
    \    local decimalStringLength9\n    local decimalStringLength10\n    local decimalStringLength11\n\
    \    local decimalStringLength12\n    local decimalStringLength13\n    local decimalStringLength14\n\
    \    local decimalStringLength15\n    local decimalStringLength16\n    local decimalStringLength17\n\
    \    local decimalStringLength18\n    local decimalStringLength19\n    local decimalStringLength20\n\
    \    local decimalStringLength21\n    local decimalStringLength22\n    local decimalStringLength23\n\
    \    local decimalStringLength24\n    local decimalStringLength25\n    local decimalStringLength26\n\
    \    local decimalStringLength27\n    local decimalStringLength28\n    local decimalStringLength29\n\
    \    local decimalStringLength30\n    local decimalStringLength31\n    local decimalStringLength32\n\
    \    local decimalStringLength33\n    local decimalStringLength34\n    local decimalStringLength35\n\
    \    local decimalStringLength36\n    local decimalStringLength37\n    local decimalStringLength38\n\
    \    local decimalStringLength39\n    local decimalStringLength40\n    local decimalStringLength41\n\
    \    local decimalStringLength42\n    local decimalStringLength43\n    local decimalStringLength44\n\
    \    local decimalStringLength45\n    local decimalStringLength46\n    local decimalStringLength47\n\
    \    local decimalStringLength48\n    local decimalStringLength49\n    local decimalStringLength50\n\
    \    local decimalStringLength51\n    local decimalStringLength52\n    local decimalStringLength53\n\
    \    local decimalStringLength54\n    local decimalStringLength55\n    local decimalStringLength56\n\
    \    local decimalStringLength57\n    local decimalStringLength58\n    local decimalStringLength59\n\
    \    local decimalStringLength60\n    local decimalStringLength61\n    local decimalStringLength62\n\
    \    local decimalStringLength63\n    local decimalStringLength\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local -n arr=$1\n    local -a sorted=()\n    local -a counts=()\n    local\
    \ -a decimal=()\n    local -a decimal2=()\n    local -a decimal3=()\n    local\
    \ -a decimal4=()\n    local -a decimal5=()\n    local -a decimal6=()\n    local\
    \ -a decimal7=()\n    local -a decimal8=()\n    local -a decimal9=()\n    local\
    \ -a decimal10=()\n    local -a decimal11=()\n    local -a decimal12=()\n    local\
    \ -a decimal13=()\n    local -a decimal14=()\n    local -a decimal15=()\n    local\
    \ -a decimal16=()\n    local -a decimal17=()\n    local -a decimal18=()\n    local\
    \ -a decimal19=()\n    local -a decimal20=()\n    local -a decimal21=()\n    local\
    \ -a decimal22=()\n    local -a decimal23=()\n    local -a decimal24=()\n    local\
    \ -a decimal25=()\n    local -a decimal26=()\n    local -a decimal27=()\n    local\
    \ -a decimal28=()\n    local -a decimal29=()\n    local -a decimal30=()\n    local\
    \ -a decimal31=()\n    local -a decimal32=()\n    local -a decimal33=()\n    local\
    \ -a decimal34=()\n    local -a decimal35=()\n    local -a decimal36=()\n    local\
    \ -a decimal37=()\n    local -a decimal38=()\n    local -a decimal39=()\n    local\
    \ -a decimal40=()\n    local -a decimal41=()\n    local -a decimal42=()\n    local\
    \ -a decimal43=()\n    local -a decimal44=()\n    local -a decimal45=()\n    local\
    \ -a decimal46=()\n    local -a decimal47=()\n    local -a decimal48=()\n    local\
    \ -a decimal49=()\n    local -a decimal50=()\n    local -a decimal51=()\n    local\
    \ -a decimal52=()\n    local -a decimal53=()\n    local -a decimal54=()\n    local\
    \ -a decimal\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp33_yrd8j.sh: line 9: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a sorted\n    local -a counts\n    local -a\
    \ decimals\n    local -a decimals_sorted\n    local -a decimals_sorted_counts\n\
    \    local -a decimals_sorted_counts_reversed\n    local -a decimals_sorted_reversed\n\
    \    local -a decimals_sorted_reversed_counts\n    local -a decimals_sorted_reversed_counts_reversed\n\
    \    local -a decimals_sorted_reversed_counts_reversed_reversed\n    local -a\
    \ decimals_sorted_reversed_counts_reversed_reversed_reversed\n    local -a decimals_sorted_reversed_counts_reversed_reversed_reversed_reversed\n\
    \    local -a decimals_sorted_reversed_counts_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a decimals_sorted_reversed_counts_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a decimals_sorted_reversed_counts_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a decimals_sorted_reversed_counts_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a decimals_sorted_reversed_counts_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a decimals_sorted_reversed_counts_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a decimals_sorted_reversed_counts_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a decimals_sorted_reversed_counts_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a decimals_sorted_reversed_counts_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a decimals_sorted_reversed_counts_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a decimals_sorted_reversed_counts_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a decimals_sorted_reversed_counts_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a decimals_sorted_reversed_counts_reversed_reversed_reverse\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a tmp\n\
    \    local -i i\n    local j\n    local k\n    local -a tmp2\n    local -a tmp3\n\
    \    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n\
    \    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n\
    \    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n\
    \    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n\
    \    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n\
    \    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n\
    \    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n\
    \    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n\
    \    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n\
    \    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n\
    \    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n\
    \    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n\
    \    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n\
    \    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n\
    \    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n\
    \    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n\
    \    local -a tmp68\n    local -a tmp69\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=$1\n    local sortedArray\n    local i\n    local count\n   \
    \ local decimal\n    local decimalCount\n    local decimalCountMax\n    local\
    \ decimalCountMin\n    local decimalCountMinIndex\n    local decimalCountMaxIndex\n\
    \    local decimalCountMaxIndexIndex\n    local decimalCountMinIndexIndex\n  \
    \  local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    local decimalCountMinIndexIndexIndex\n\
    \    local decimalCountMaxIndexIndexIndex\n    \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local t\n    local val\n    local count\n    local dec\n   \
    \ local decVal\n    local decCount\n    local decVal2\n    local decCount2\n \
    \   local decVal3\n    local decCount3\n    local decVal4\n    local decCount4\n\
    \    local decVal5\n    local decCount5\n    local decVal6\n    local decCount6\n\
    \    local decVal7\n    local decCount7\n    local decVal8\n    local decCount8\n\
    \    local decVal9\n    local decCount9\n    local decVal10\n    local decCount10\n\
    \    local decVal11\n    local decCount11\n    local decVal12\n    local decCount12\n\
    \    local decVal13\n    local decCount13\n    local decVal14\n    local decCount14\n\
    \    local decVal15\n    local decCount15\n    local decVal16\n    local decCount16\n\
    \    local decVal17\n    local decCount17\n    local decVal18\n    local decCount18\n\
    \    local decVal19\n    local decCount19\n    local decVal20\n    local decCount20\n\
    \    local decVal21\n    local decCount21\n    local decVal22\n    local decCount22\n\
    \    local decVal23\n    local decCount23\n    local decVal24\n    local decCount24\n\
    \    local decVal25\n    local decCount25\n    local decVal26\n    local decCount26\n\
    \    local decVal27\n    local decCount27\n    local decVal28\n    local decCount28\n\
    \    local decVal29\n    local decCount29\n    local decVal30\n    local decCount30\n\
    \    local decVal31\n    local decCount31\n    local decVal32\n    local decCount32\n\
    \    local decVal33\n    local decCount33\n    local decVal34\n    local decCount34\n\
    \    local decVal35\n    local decCount35\n    local decVal36\n    local decCount36\n\
    \    local decVal37\n    local decCount37\n    local decVal38\n    local decCount38\n\
    \    local decVal39\n    local decCount39\n    \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a count\n    local -a sorted\n    local -a\
    \ counts\n    local -a counts_sorted\n    local -a counts_sorted_reverse\n   \
    \ local -a counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a count\n    local -a sorted\n    local -a\
    \ counts\n    local -a max\n    local -a min\n    local -a maxs\n    local -a\
    \ mins\n    local -a maxes\n    local -a mines\n    local -a maxes\n    local\
    \ -a mines\n    local -a maxes\n    local -a mines\n    local -a maxes\n    local\
    \ -a mines\n    local -a maxes\n    local -a mines\n    local -a maxes\n    local\
    \ -a mines\n    local -a maxes\n    local -a mines\n    local -a maxes\n    local\
    \ -a mines\n    local -a maxes\n    local -a mines\n    local -a maxes\n    local\
    \ -a mines\n    local -a maxes\n    local -a mines\n    local -a maxes\n    local\
    \ -a mines\n    local -a maxes\n    local -a mines\n    local -a maxes\n    local\
    \ -a mines\n    local -a maxes\n    local -a mines\n    local -a maxes\n    local\
    \ -a mines\n    local -a maxes\n    local -a mines\n    local -a maxes\n    local\
    \ -a mines\n    local -a maxes\n    local -a mines\n    local -a maxes\n    local\
    \ -a mines\n    local -a maxes\n    local -a mines\n    local -a maxes\n    local\
    \ -a mines\n    local -a maxes\n    local -a mines\n    local -a maxes\n    local\
    \ -a mines\n    local -a maxes\n    local -a mines\n    local -a maxes\n    local\
    \ -a mines\n    local -a maxes\n    local -a mines\n    local -a maxes\n    local\
    \ -a mines\n    local -a maxes\n    local -a mines\n    local -a maxes\n    local\
    \ -a mines\n    local -a maxes\n    local -a mines\n    local -a maxes\n    local\
    \ -a mines\n    local -a maxes\n    local -a mines\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local array=$1\n  local -a sorted\n  local -a counts\n  local -a count\n  local\
    \ -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local -a\
    \ counts\n  local -a count\n  local -a counts\n  local -a count\n  local -a counts\n\
    \  local -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local\
    \ -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a\
    \ count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n\
    \  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local\
    \ -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local -a\
    \ counts\n  local -a count\n  local -a counts\n  local -a count\n  local -a counts\n\
    \  local -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local\
    \ -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a\
    \ count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n\
    \  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local\
    \ -a counts\n  local -a count\n  local -a counts\n  local -a count\n  local -a\
    \ counts\n  local -a count\n  local -a counts\n  local -a count\n  local -a counts\n\
    \  local -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local\
    \ -a count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a\
    \ count\n  local -a counts\n  local -a count\n  local -a counts\n  local -a count\n\
    \  local -a counts\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a count\n    local -a sorted\n    local -a\
    \ counts\n    local -a counts_sorted\n    local -a counts_sorted_reverse\n   \
    \ local -a counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=$1\n    local count\n    local i\n    local j\n    local k\n\
    \    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local\
    \ tmp96\n    local tmp97\n    local tmp98\n    \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a count\n    local -a sorted\n    local -a tmp\n\
    \    local -i i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -i i\n \
    \   local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n  \
    \  local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n  \
    \  local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n\
    \    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n\
    \    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n\
    \    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n\
    \    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n\
    \    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n\
    \    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n\
    \    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n\
    \    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n\
    \    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n\
    \    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n\
    \    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n\
    \    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n\
    \    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n\
    \    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n\
    \    local -a tmp69\n    local -a tmp70\n\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local array=\"$1\"\n  local -a sorted\n  local -a counts\n  local -a count\n\
    \  local -a tmp\n  local -a tmp2\n  local -a tmp3\n  local -a tmp4\n  local -a\
    \ tmp5\n  local -a tmp6\n  local -a tmp7\n  local -a tmp8\n  local -a tmp9\n \
    \ local -a tmp10\n  local -a tmp11\n  local -a tmp12\n  local -a tmp13\n  local\
    \ -a tmp14\n  local -a tmp15\n  local -a tmp16\n  local -a tmp17\n  local -a tmp18\n\
    \  local -a tmp19\n  local -a tmp20\n  local -a tmp21\n  local -a tmp22\n  local\
    \ -a tmp23\n  local -a tmp24\n  local -a tmp25\n  local -a tmp26\n  local -a tmp27\n\
    \  local -a tmp28\n  local -a tmp29\n  local -a tmp30\n  local -a tmp31\n  local\
    \ -a tmp32\n  local -a tmp33\n  local -a tmp34\n  local -a tmp35\n  local -a tmp36\n\
    \  local -a tmp37\n  local -a tmp38\n  local -a tmp39\n  local -a tmp40\n  local\
    \ -a tmp41\n  local -a tmp42\n  local -a tmp43\n  local -a tmp44\n  local -a tmp45\n\
    \  local -a tmp46\n  local -a tmp47\n  local -a tmp48\n  local -a tmp49\n  local\
    \ -a tmp50\n  local -a tmp51\n  local -a tmp52\n  local -a tmp53\n  local -a tmp54\n\
    \  local -a tmp55\n  local -a tmp56\n  local -a tmp57\n  local -a tmp58\n  local\
    \ -a tmp59\n  local -a tmp60\n  local -a tmp61\n  local -a tmp62\n  local -a tmp63\n\
    \  local -a tmp64\n  local -a tmp65\n  local -a tmp66\n  local -a tmp67\n  local\
    \ -a tmp68\n  local -a tmp69\n  local -a tmp\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local max=0\n    local min=0\n    local tmp\n    local count\n\
    \    local dec\n    local dec2\n    local dec3\n    local dec4\n    local dec5\n\
    \    local dec6\n    local dec7\n    local dec8\n    local dec9\n    local dec10\n\
    \    local dec11\n    local dec12\n    local dec13\n    local dec14\n    local\
    \ dec15\n    local dec16\n    local dec17\n    local dec18\n    local dec19\n\
    \    local dec20\n    local dec21\n    local dec22\n    local dec23\n    local\
    \ dec24\n    local dec25\n    local dec26\n    local dec27\n    local dec28\n\
    \    local dec29\n    local dec30\n    local dec31\n    local dec32\n    local\
    \ dec33\n    local dec34\n    local dec35\n    local dec36\n    local dec37\n\
    \    local dec38\n    local dec39\n    local dec40\n    local dec41\n    local\
    \ dec42\n    local dec43\n    local dec44\n    local dec45\n    local dec46\n\
    \    local dec47\n    local dec48\n    local dec49\n    local dec50\n    local\
    \ dec51\n    local dec52\n    local dec53\n    local dec54\n    local dec55\n\
    \    local dec56\n    local dec57\n    local dec58\n    local dec59\n    local\
    \ dec60\n    local dec61\n    local dec62\n    local dec63\n    local dec64\n\
    \    local dec65\n    local dec66\n    local dec67\n    local dec68\n    local\
    \ dec69\n    local dec70\n    local dec71\n    local dec72\n    local dec73\n\
    \    local dec74\n    local dec75\n    local dec76\n    local dec77\n    local\
    \ dec78\n    local dec79\n    local dec80\n    local dec81\n    local dec82\n\
    \    local dec83\n    local dec84\n    local dec85\n    local dec86\n    local\
    \ dec87\n    local dec88\n    local dec89\n    local dec90\n    local dec91\n\
    \    local dec92\n    local dec93\n\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local arr=$1\n  local -a count\n  local -a sorted\n  local -a tmp\n  local\
    \ -a tmp2\n  local -a tmp3\n  local -a tmp4\n  local -a tmp5\n  local -a tmp6\n\
    \  local -a tmp7\n  local -a tmp8\n  local -a tmp9\n  local -a tmp10\n  local\
    \ -a tmp11\n  local -a tmp12\n  local -a tmp13\n  local -a tmp14\n  local -a tmp15\n\
    \  local -a tmp16\n  local -a tmp17\n  local -a tmp18\n  local -a tmp19\n  local\
    \ -a tmp20\n  local -a tmp21\n  local -a tmp22\n  local -a tmp23\n  local -a tmp24\n\
    \  local -a tmp25\n  local -a tmp26\n  local -a tmp27\n  local -a tmp28\n  local\
    \ -a tmp29\n  local -a tmp30\n  local -a tmp31\n  local -a tmp32\n  local -a tmp33\n\
    \  local -a tmp34\n  local -a tmp35\n  local -a tmp36\n  local -a tmp37\n  local\
    \ -a tmp38\n  local -a tmp39\n  local -a tmp40\n  local -a tmp41\n  local -a tmp42\n\
    \  local -a tmp43\n  local -a tmp44\n  local -a tmp45\n  local -a tmp46\n  local\
    \ -a tmp47\n  local -a tmp48\n  local -a tmp49\n  local -a tmp50\n  local -a tmp51\n\
    \  local -a tmp52\n  local -a tmp53\n  local -a tmp54\n  local -a tmp55\n  local\
    \ -a tmp56\n  local -a tmp57\n  local -a tmp58\n  local -a tmp59\n  local -a tmp60\n\
    \  local -a tmp61\n  local -a tmp62\n  local -a tmp63\n  local -a tmp64\n  local\
    \ -a tmp65\n  local -a tmp66\n  local -a tmp67\n  local -a tmp68\n  local -a tmp69\n\
    \  local -a tmp70\n  local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local arr=$1\n  local -a sorted\n  local -a count\n  local -a counts\n  local\
    \ -a counts_sorted\n  local -a counts_sorted_reverse\n  local -a counts_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse\n  local -a counts_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \  local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a counts\n\
    \    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n \
    \   local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n \
    \   local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n\
    \    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n\
    \    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n\
    \    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n\
    \    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n\
    \    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n\
    \    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n\
    \    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n\
    \    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n\
    \    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n\
    \    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n\
    \    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n\
    \    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n\
    \    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n\
    \    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n\
    \    local -a tmp69\n    local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local sorted\n  \
    \  local i\n    local j\n    local count\n    local temp\n    local tmp\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a counts\n\
    \    local -a counts_sorted\n    local -a counts_sorted_reverse\n    local -a\
    \ counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local tmp\n    local count\n    local dec\n    local dec2\n\
    \    local dec3\n    local dec4\n    local dec5\n    local dec6\n    local dec7\n\
    \    local dec8\n    local dec9\n    local dec10\n    local dec11\n    local dec12\n\
    \    local dec13\n    local dec14\n    local dec15\n    local dec16\n    local\
    \ dec17\n    local dec18\n    local dec19\n    local dec20\n    local dec21\n\
    \    local dec22\n    local dec23\n    local dec24\n    local dec25\n    local\
    \ dec26\n    local dec27\n    local dec28\n    local dec29\n    local dec30\n\
    \    local dec31\n    local dec32\n    local dec33\n    local dec34\n    local\
    \ dec35\n    local dec36\n    local dec37\n    local dec38\n    local dec39\n\
    \    local dec40\n    local dec41\n    local dec42\n    local dec43\n    local\
    \ dec44\n    local dec45\n    local dec46\n    local dec47\n    local dec48\n\
    \    local dec49\n    local dec50\n    local dec51\n    local dec52\n    local\
    \ dec53\n    local dec54\n    local dec55\n    local dec56\n    local dec57\n\
    \    local dec58\n    local dec59\n    local dec60\n    local dec1\n    local\
    \ dec2\n    local dec3\n    local dec4\n    local dec5\n    local dec6\n    local\
    \ dec7\n    local dec8\n    local dec9\n    local dec10\n    local dec11\n   \
    \ local dec12\n    local dec13\n    local dec14\n    local dec15\n    local dec16\n\
    \    local dec17\n    local dec18\n    local dec19\n    local dec20\n    local\
    \ dec21\n    local dec22\n    local dec23\n    local dec24\n    local dec25\n\
    \    local dec26\n    local dec27\n    local dec28\n    local dec29\n    local\
    \ dec30\n    local dec31\n    local dec32\n    local dec33\n    local dec34\n\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local result\n  \
    \  local i\n    local j\n    local k\n    local count\n    local count1\n    local\
    \ count2\n    local count3\n    local count4\n    local count5\n    local count6\n\
    \    local count7\n    local count8\n    local count9\n    local count10\n   \
    \ local count11\n    local count12\n    local count13\n    local count14\n   \
    \ local count15\n    local count16\n    local count17\n    local count18\n   \
    \ local count19\n    local count20\n    local count21\n    local count22\n   \
    \ local count23\n    local count24\n    local count25\n    local count26\n   \
    \ local count27\n    local count28\n    local count29\n    local count30\n   \
    \ local count31\n    local count32\n    local count33\n    local count34\n   \
    \ local count35\n    local count36\n    local count37\n    local count38\n   \
    \ local count39\n    local count40\n    local count41\n    local count42\n   \
    \ local count43\n    local count44\n    local count45\n    local count46\n   \
    \ local count47\n    local count48\n    local count49\n    local count50\n   \
    \ local count51\n    local count52\n    local count53\n    local count54\n   \
    \ local count55\n    local count56\n    local count57\n    local count58\n   \
    \ local count59\n    local count60\n    local count61\n    local count62\n   \
    \ local count63\n    local count64\n    local count65\n    local count66\n   \
    \ local count67\n    local count68\n    local count69\n    local count70\n   \
    \ local count71\n    local count72\n    local count73\n    local count74\n   \
    \ local count75\n    local count76\n    local count77\n    local count78\n   \
    \ local count79\n    local count80\n    local count81\n    local count82\n   \
    \ local count83\n    local count84\n    local count85\n    local count86\n   \
    \ local count87\n    local count88\n    local count89\n    local count90\n   \
    \ local count91\n    local count92\n    local count93\n    local count94\n   \
    \ local count95\n    local count\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a count\n    local -a sorted\n    local -a\
    \ counts\n    local -a counts_sorted\n    local -a counts_sorted_reverse\n   \
    \ local -a counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local result\n    local i\n    local count\n    local\
    \ decimal\n    local decimal2\n    local decimal3\n    local decimal4\n    local\
    \ decimal5\n    local decimal6\n    local decimal7\n    local decimal8\n    local\
    \ decimal9\n    local decimal10\n    local decimal11\n    local decimal12\n  \
    \  local decimal13\n    local decimal14\n    local decimal15\n    local decimal16\n\
    \    local decimal17\n    local decimal18\n    local decimal19\n    local decimal20\n\
    \    local decimal21\n    local decimal22\n    local decimal23\n    local decimal24\n\
    \    local decimal25\n    local decimal26\n    local decimal27\n    local decimal28\n\
    \    local decimal29\n    local decimal30\n    local decimal31\n    local decimal32\n\
    \    local decimal33\n    local decimal34\n    local decimal35\n    local decimal36\n\
    \    local decimal37\n    local decimal38\n    local decimal39\n    local decimal40\n\
    \    local decimal41\n    local decimal42\n    local decimal43\n    local decimal44\n\
    \    local decimal45\n    local decimal46\n    local decimal47\n    local decimal48\n\
    \    local decimal49\n    local decimal50\n    local decimal51\n    local decimal52\n\
    \    local decimal53\n    local decimal54\n    local decimal55\n    local decimal56\n\
    \    local decimal57\n    local decimal58\n    local decimal59\n    local decimal60\n\
    \    local decimal61\n    local decimal62\n    local decimal63\n    local decimal64\n\
    \    local decimal65\n    local decimal66\n    local decimal67\n    local decimal68\n\
    \    local decimal69\n    local decimal70\n    local decimal71\n    local decimal72\n\
    \    local decimal73\n    local decimal74\n    local decimal75\n    local decimal76\n\
    \    local decimal77\n    local decimal78\n    local decimal79\n    local decimal80\n\
    \    local decimal81\n    local decimal82\n    local decimal83\n    local decimal84\n\
    \    local decimal85\n    local decimal86\n    local decimal87\n    local decimal88\n\
    \    local decimal89\n    local decimal90\n    local decimal91\n    local decimal92\n\
    \    local decimal93\n    local decimal94\n    local decimal95\n    local decimal96\n\
    \    local decimal97\n    local decimal98\n    local decimal99\n\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local array=\"$1\"\n  local temp\n  local count\n  local i\n  local j\n  local\
    \ result\n  local counts\n  local max\n  local min\n  local maxIndex\n  local\
    \ minIndex\n  local maxCount\n  local minCount\n  local maxValue\n  local minValue\n\
    \  local maxCountIndex\n  local minCountIndex\n  local maxCountValue\n  local\
    \ minCountValue\n  local maxValueIndex\n  local minValueIndex\n  local maxValueCount\n\
    \  local minValueCount\n  local maxValueValue\n  local minValueValue\n  local\
    \ maxValueCountIndex\n  local minValueCountIndex\n  local maxValueValueIndex\n\
    \  local minValueValueIndex\n  local maxValueCountValue\n  local minValueCountValue\n\
    \  local maxValueValueValue\n  local minValueValueValue\n  local maxValueCountIndexValue\n\
    \  local minValueCountIndexValue\n  local maxValueValueIndexValue\n  local minValueValueIndexValue\n\
    \  local maxValueCountValueValueValue\n  local minValueCountValueValue\n  local\
    \ maxValueValueValueValue\n  local minValueValueValueValue\n  local maxValueCountIndexValueValue\n\
    \  local minValueCountIndexValueValue\n  local maxValueValueIndexValueValue\n\
    \  local minValueValueIndexValue\n  local maxValueCountValueValueValue\n  local\
    \ minValueCountValueValue\n  local maxValueValueValueValue\n  local minValueValueValueValue\n\
    \  local maxValueCountIndexValueValue\n  local minValueCountIndexValueValue\n\
    \  local maxValueValueIndexValueValue\n  local minValueValueIndexValue\n  local\
    \ maxValueCountValueValueValue\n  local minValueCountValueValue\n  local maxValueValueValueValue\n\
    \  local minValueValueValueValue\n  local maxValueCountIndexValueValue\n  local\
    \ minValueCountIndexValueValue\n  local maxValueValueIndexValueValue\n  local\
    \ minValueValueIndexValue\n  local maxValueCountValueValueValue\n  local minValueCountValueValue\n\
    \  local maxValueValueValueValue\n  local minValueValueValueValue\n  local maxValueCountIndexValueValue\n\
    \  local minValueCountIndexValueValue\n  local maxValueValueIndexValue\n  local\
    \ minValueValueIndexValue\n  local maxValueCountValueValueValue\n  local minValueCountValueValue\n\
    \  local maxValueValueValueValue\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array[@]}\"\n    local count\n\
    \    local i\n    local j\n    local k\n    local temp\n    local sorted\n   \
    \ local value\n    local counts\n    local max\n    local min\n    local maxIndex\n\
    \    local minIndex\n    local maxCount\n    local minCount\n    local maxValue\n\
    \    local minValue\n    local maxIndexValue\n    local minIndexValue\n    local\
    \ maxCountValue\n    local minCountValue\n    local maxValueValue\n    local minValueValue\n\
    \    local maxIndexValueValue\n    local minIndexValueValue\n    local maxCountValueValue\n\
    \    local minCountValueValue\n    local maxValueValueValue\n    local minValueValueValue\n\
    \    local maxIndexValueValue\n    local minIndexValueValue\n    local maxCountValueValue\n\
    \    local minCountValueValue\n    local maxValueValueValue\n    local minValueValueValue\n\
    \    local maxIndexValueValue\n    local minIndexValueValue\n    local maxCountValueValue\n\
    \    local minCountValueValue\n    local maxValueValueValue\n    local minValueValueValue\n\
    \    local maxIndexValueValue\n    local minIndexValueValue\n    local maxCountValueValue\n\
    \    local minCountValueValue\n    local maxValueValueValue\n    local minValueValueValue\n\
    \    local maxIndexValueValue\n    local minIndexValueValue\n    local maxCountValueValue\n\
    \    local minCountValueValue\n    local maxValueValueValue\n    local minValueValueValue\n\
    \    local maxIndexValueValue\n    local minIndexValueValue\n    local maxCountValueValue\n\
    \    local minCountValueValue\n    local maxValueValueValue\n    local minValueValueValue\n\
    \    local maxIndexValueValue\n    local minIndexValueValue\n    local maxCountValueValue\n\
    \    local minCountValueValue\n    local maxValueValueValue\n    local minValueValueValue\n\
    \    local maxIndexValueValue\n    local minIndexValueValue\n    local maxCountValueValue\n\
    \    local minCountValueValue\n    local maxValueValueValue\n    local minValueValueValue\n\
    \    local maxIndexValueValue\n    local minIndexValueValue\n    local maxCountValueValue\n\
    \    local minCountValueValue\n    local maxValueValueValue\n    local minValueValueValue\n\
    \    local maxIndexValueValue\n    local minIndex\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local sorted\n  \
    \  local i\n    local j\n    local k\n    local count\n    local max\n    local\
    \ min\n    local temp\n    local tmp\n    local tmp2\n    local tmp3\n    local\
    \ tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local\
    \ tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n \
    \   local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local\
    \ tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n\
    \    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local\
    \ tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n\
    \    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local\
    \ tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n\
    \    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local\
    \ tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n\
    \    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local\
    \ tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n\
    \    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local\
    \ tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n\
    \    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local\
    \ tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n\
    \    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local\
    \ tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n\
    \    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local\
    \ tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local \n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a counts\n    local -a sorted\n\
    \    local -a counts\n    local -a tmp\n    local -a tmp\n    local -a tmp\n \
    \   local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n\
    \    local -a tmp\n    local -a tmp\n    local -a tmp\n    local -a tmp\n    local\
    \ -a tmp\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local count=0\n    local tmp\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local length=\"${#array}\"\n    local sorted=()\n\
    \    local i\n    local j\n    local k\n    local count\n    local decimal\n \
    \   local decimal2\n    local decimal3\n    local decimal4\n    local decimal5\n\
    \    local decimal6\n    local decimal7\n    local decimal8\n    local decimal9\n\
    \    local decimal10\n    local decimal11\n    local decimal12\n    local decimal13\n\
    \    local decimal14\n    local decimal15\n    local decimal16\n    local decimal17\n\
    \    local decimal18\n    local decimal19\n    local decimal20\n    local decimal21\n\
    \    local decimal22\n    local decimal23\n    local decimal24\n    local decimal25\n\
    \    local decimal26\n    local decimal27\n    local decimal28\n    local decimal29\n\
    \    local decimal30\n    local decimal31\n    local decimal32\n    local decimal33\n\
    \    local decimal34\n    local decimal35\n    local decimal36\n    local decimal37\n\
    \    local decimal38\n    local decimal39\n    local decimal40\n    local decimal41\n\
    \    local decimal42\n    local decimal43\n    local decimal44\n    local decimal45\n\
    \    local decimal46\n    local decimal47\n    local decimal48\n    local decimal49\n\
    \    local decimal50\n    local decimal51\n    local decimal52\n    local decimal53\n\
    \    local decimal54\n    local decimal55\n    local decimal56\n    local decimal57\n\
    \    local decimal58\n    local decimal59\n    local decimal60\n    local decimal61\n\
    \    local decimal62\n    local decimal63\n    local decimal64\n    local decimal65\n\
    \    local decimal66\n    local decimal67\n    local decimal68\n    local decimal69\n\
    \    local decimal70\n    local decimal71\n    local decimal72\n    local decimal73\n\
    \    local decimal74\n    local decimal75\n    local decimal76\n    local decimal77\n\
    \    local decimal78\n    local decimal79\n    local decimal80\n    local decimal81\n\
    \    local decimal82\n    local decimal83\n    local decimal84\n    local decimal85\n\
    \    local decimal86\n    local decimal87\n    local decimal88\n    local decimal89\n\
    \    local decimal90\n    local decimal91\n    local decimal92\n    local decimal93\n\
    \    local decimal94\n    local decimal95\n    local \n}\n\ncandidate() {\n  \
    \  sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local t\n    local val\n    local count\n    local dec\n   \
    \ local decVal\n    local decCount\n    local decVal2\n    local decCount2\n \
    \   local decVal3\n    local decCount3\n    local decVal4\n    local decCount4\n\
    \    local decVal5\n    local decCount5\n    local decVal6\n    local decCount6\n\
    \    local decVal7\n    local decCount7\n    local decVal8\n    local decCount8\n\
    \    local decVal9\n    local decCount9\n    local decVal10\n    local decCount10\n\
    \    local decVal11\n    local decCount11\n    local decVal12\n    local decCount12\n\
    \    local decVal13\n    local decCount13\n    local decVal14\n    local decCount14\n\
    \    local decVal15\n    local decCount15\n    local decVal16\n    local decCount16\n\
    \    local decVal17\n    local decCount17\n    local decVal18\n    local decCount18\n\
    \    local decVal19\n    local decCount19\n    local decVal20\n    local decCount20\n\
    \    local decVal21\n    local decCount21\n    local decVal22\n    local decCount22\n\
    \    local decVal23\n    local decCount23\n    local decVal24\n    local decCount24\n\
    \    local decVal25\n    local decCount25\n    local decVal26\n    local decCount26\n\
    \    local decVal27\n    local decCount27\n    local decVal28\n    local decCount28\n\
    \    local decVal29\n    local decCount29\n    local decVal30\n    local decCount30\n\
    \    local decVal31\n    local decCount31\n    local decVal32\n    local decCount32\n\
    \    local decVal33\n    local decCount33\n    local decVal34\n    local decCount34\n\
    \    local decVal35\n    local decCount35\n    local decVal36\n    local decCount36\n\
    \    local decVal37\n    local decCount37\n    local decVal38\n    local decCount38\n\
    \    local decVal39\n    local decCount39\n    \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a counts\n    local -a sorted\n    local -a\
    \ count\n    local -a i\n    local -a j\n    local -a k\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    local -a count\n\
    \    local -a counts\n    local -a count\n    local -a counts\n    \n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a tmp\n\
    \    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n\
    \    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n\
    \    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n\
    \    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n\
    \    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n\
    \    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n\
    \    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n\
    \    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n\
    \    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n\
    \    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n\
    \    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n\
    \    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n\
    \    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n\
    \    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n\
    \    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n\
    \    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n\
    \    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n\
    \    local -a tmp70\n    local -a tmp\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a sorted\n    local -a count\n    local -a\
    \ counts\n    local -a counts_sorted\n    local -a counts_sorted_reverse\n   \
    \ local -a counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \  local -n arr=$1\n  local -a sorted\n  local -a count\n  local -a counts\n \
    \ local -a sorted\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -a counts\n  local -a counts\n  local -a counts\n \
    \ local -a counts\n  local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvnbjerpo.sh: line 9: local: `1 5 2 3 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local -n arr=$1\n    local -n res=$2\n    local -n i=0\n    local -n j=0\n\
    \    local -n k=0\n    local -n len=${#arr[@]}\n    local -n max=0\n    local\
    \ -n min=0\n    local -n maxlen=0\n    local -n minlen=0\n    local -n maxdec=0\n\
    \    local -n mindec=0\n    local -n maxdec=0\n    local -n mindec=0\n    local\
    \ -n maxdec=0\n    local -n mindec=0\n    local -n maxdec=0\n    local -n mindec=0\n\
    \    local -n maxdec=0\n    local -n mindec=0\n    local -n maxdec=0\n    local\
    \ -n mindec=0\n    local -n maxdec=0\n    local -n mindec=0\n    local -n maxdec=0\n\
    \    local -n mindec=0\n    local -n maxdec=0\n    local -n mindec=0\n    local\
    \ -n maxdec=0\n    local -n mindec=0\n    local -n maxdec=0\n    local -n mindec=0\n\
    \    local -n maxdec=0\n    local -n mindec=0\n    local -n maxdec=0\n    local\
    \ -n mindec=0\n    local -n maxdec=0\n    local -n mindec=0\n    local -n maxdec=0\n\
    \    local -n mindec=0\n    local -n maxdec=0\n    local -n mindec=0\n    local\
    \ -n maxdec=0\n    local -n mindec=0\n    local -n maxdec=0\n    local -n mindec=0\n\
    \    local -n maxdec=0\n    local -n mindec=0\n    local -n maxdec=0\n    local\
    \ -n mindec=0\n    local -n maxdec=0\n    local -n mindec=0\n    local -n maxdec=0\n\
    \    local -n mindec=0\n    local -n maxdec=0\n    local -n mindec=0\n    local\
    \ -n maxdec=0\n    local -n mindec=0\n    local -n maxdec=0\n    local -n mindec=0\n\
    \    local -n maxdec=0\n    local -n mindec=0\n    local -n maxdec=0\n    local\
    \ -n mindec=0\n    local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxdq1hno9.sh: line 9: local: `1 5 2 3 4'': invalid variable name
    for name reference

    /tmp/tmpxdq1hno9.sh: line 10: local: `'': not a valid identifier

    /tmp/tmpxdq1hno9.sh: line 11: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 12: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 13: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 14: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 15: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 16: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 17: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 18: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 19: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 20: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 21: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 22: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 23: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 24: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 25: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 26: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 27: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 29: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 30: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 31: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 32: local: `0'': invalid variable name for name reference

    /tmp/tmpxdq1hno9.sh: line 33: local: `0'': invalid variable name for '
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a arr2\n    local -a sorted\n    local -a count\n\
    \    local -a count2\n    local -a count3\n    local -a count4\n    local -a count5\n\
    \    local -a count6\n    local -a count7\n    local -a count8\n    local -a count9\n\
    \    local -a count10\n    local -a count11\n    local -a count12\n    local -a\
    \ count13\n    local -a count14\n    local -a count15\n    local -a count16\n\
    \    local -a count17\n    local -a count18\n    local -a count19\n    local -a\
    \ count20\n    local -a count21\n    local -a count22\n    local -a count23\n\
    \    local -a count24\n    local -a count25\n    local -a count26\n    local -a\
    \ count27\n    local -a count28\n    local -a count29\n    local -a count30\n\
    \    local -a count31\n    local -a count32\n    local -a count33\n    local -a\
    \ count34\n    local -a count35\n    local -a count36\n    local -a count37\n\
    \    local -a count38\n    local -a count39\n    local -a count40\n    local -a\
    \ count41\n    local -a count42\n    local -a count43\n    local -a count44\n\
    \    local -a count45\n    local -a count46\n    local -a count47\n    local -a\
    \ count48\n    local -a count49\n    local -a count50\n    local -a count51\n\
    \    local -a count52\n    local -a count53\n    local -a count54\n    local -a\
    \ count55\n    local -a count56\n    local -a count57\n    local -a count58\n\
    \    local -a count59\n    local -a count60\n    local -a count61\n    local -a\
    \ count62\n    local -a count63\n    local -a count64\n    local -a count65\n\
    \    local -a count66\n    local -a count67\n    local -a count68\n    local -a\
    \ count69\n    local -a count70\n    local -a \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local -a sorted\n    local -a count\n    local -a\
    \ counts\n    local -a counts_sorted\n    local -a counts_sorted_reverse\n   \
    \ local -a counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a sorted\n    local -a count\n    local -a counts\n\
    \    local -a counts_sorted\n    local -a counts_sorted_reverse\n    local -a\
    \ counts_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted\n    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n   \
    \ local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\n\
    \    local -a counts_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038174
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=\"$1\"\n    local result\n    local i\n    local count\n    local\
    \ decimal\n    local decimal2\n    local decimal3\n    local decimal4\n    local\
    \ decimal5\n    local decimal6\n    local decimal7\n    local decimal8\n    local\
    \ decimal9\n    local decimal10\n    local decimal11\n    local decimal12\n  \
    \  local decimal13\n    local decimal14\n    local decimal15\n    local decimal16\n\
    \    local decimal17\n    local decimal18\n    local decimal19\n    local decimal20\n\
    \    local decimal21\n    local decimal22\n    local decimal23\n    local decimal24\n\
    \    local decimal25\n    local decimal26\n    local decimal27\n    local decimal28\n\
    \    local decimal29\n    local decimal30\n    local decimal31\n    local decimal32\n\
    \    local decimal33\n    local decimal34\n    local decimal35\n    local decimal36\n\
    \    local decimal37\n    local decimal38\n    local decimal39\n    local decimal40\n\
    \    local decimal41\n    local decimal42\n    local decimal43\n    local decimal44\n\
    \    local decimal45\n    local decimal46\n    local decimal47\n    local decimal48\n\
    \    local decimal49\n    local decimal50\n    local decimal51\n    local decimal52\n\
    \    local decimal53\n    local decimal54\n    local decimal55\n    local decimal56\n\
    \    local decimal57\n    local decimal58\n    local decimal59\n    local decimal60\n\
    \    local decimal61\n    local decimal62\n    local decimal63\n    local decimal64\n\
    \    local decimal65\n    local decimal66\n    local decimal67\n    local decimal68\n\
    \    local decimal69\n    local decimal70\n    local decimal71\n    local decimal72\n\
    \    local decimal73\n    local decimal74\n    local decimal75\n    local decimal76\n\
    \    local decimal77\n    local decimal78\n    local decimal79\n    local decimal80\n\
    \    local decimal81\n    local decimal82\n    local decimal83\n    local decimal84\n\
    \    local decimal85\n    local decimal86\n    local decimal87\n    local decimal88\n\
    \    local decimal89\n    local decimal90\n    local decimal91\n    local decimal92\n\
    \    local decimal93\n    local decimal94\n    local decimal95\n    local decimal96\n\
    \    local decimal97\n    local decimal98\n    local decimal99\n\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local arr=$1\n    local -a count\n    local -a sorted\n    local -a tmp\n\
    \    local -i i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n#\n# $1 is a space-separated list\nsort_array() {\n\
    \    local array=$1\n    local length=$((${#array[@]} / 2))\n    local sorted\n\
    \    local i\n    local j\n    local k\n    local count\n    local decimal\n \
    \   local decimal2\n    local decimal3\n    local decimal4\n    local decimal5\n\
    \    local decimal6\n    local decimal7\n    local decimal8\n    local decimal9\n\
    \    local decimal10\n    local decimal11\n    local decimal12\n    local decimal13\n\
    \    local decimal14\n    local decimal15\n    local decimal16\n    local decimal17\n\
    \    local decimal18\n    local decimal19\n    local decimal20\n    local decimal21\n\
    \    local decimal22\n    local decimal23\n    local decimal24\n    local decimal25\n\
    \    local decimal26\n    local decimal27\n    local decimal28\n    local decimal29\n\
    \    local decimal30\n    local decimal31\n    local decimal32\n    local decimal33\n\
    \    local decimal34\n    local decimal35\n    local decimal36\n    local decimal37\n\
    \    local decimal38\n    local decimal39\n    local decimal40\n    local decimal41\n\
    \    local decimal42\n    local decimal43\n    local decimal44\n    local decimal45\n\
    \    local decimal46\n    local decimal47\n    local decimal48\n    local decimal49\n\
    \    local decimal50\n    local decimal51\n    local decimal52\n    local decimal53\n\
    \    local decimal54\n    local decimal55\n    local decimal56\n    local decimal57\n\
    \    local decimal58\n    local decimal59\n    local decimal60\n    local decimal61\n\
    \    local decimal62\n    local decimal63\n    local decimal64\n    local decimal65\n\
    \    local decimal66\n    local decimal67\n    local decimal68\n    local decimal69\n\
    \    local decimal70\n    local decimal71\n    local decimal72\n    local decimal73\n\
    \    local decimal74\n    local decimal75\n    local decimal76\n    local decimal77\n\
    \    local decimal78\n    local decimal79\n    local decimal80\n    local decimal81\n\
    \    local decimal82\n    local decimal83\n    local decimal84\n    local decimal85\n\
    \    local decimal86\n    local decimal87\n    local decimal88\n    local decimal89\n\
    \    local decimal90\n    local decimal91\n    local decimal92\n    local decimal93\n\
    \    local decimal94\n    local decimal\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038175

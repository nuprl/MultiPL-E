language: sh
name: HumanEval_2_truncate_number
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string2=\"\"\n  local decimals_string3=\"\
    \"\n  local decimals_string4=\"\"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\
    \"\n  local decimals_string7=\"\"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\
    \"\n  local decimals_string10=\"\"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\
    \"\n  local decimals_string13=\"\"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\
    \"\n  local decimals_string16=\"\"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\
    \"\n  local decimals_string19=\"\"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\
    \"\n  local decimals_string22=\"\"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\
    \"\n  local decimals_string25=\"\"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\
    \"\n  local decimals_string28=\"\"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\
    \"\n  local decimals_string31=\"\"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\
    \"\n  local decimals_string34=\"\"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\
    \"\n  local decimals_string37=\"\"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\
    \"\n  local decimals_string40=\"\"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\
    \"\n  local decimals_string43=\"\"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\
    \"\n  local decimals_string46=\"\"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\
    \"\n  local decimals_string49=\"\"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\
    \"\n  local decimals_string52=\"\"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\
    \"\n  local decimals_string55=\"\"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\
    \"\n  local decimals_string58=\"\"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\
    \"\n  local decimals_string61=\"\"\n  local decimals_string62=\"\"\n  local decimals_string\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimals_string=\"\"\n  local\
    \ integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  \n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_decimals=0\n  local truncate_decimals_string=\"\
    \"\n  local truncate_decimals_string2=\"\"\n  local truncate_decimals_string3=\"\
    \"\n  local truncate_decimals_string4=\"\"\n  local truncate_decimals_string5=\"\
    \"\n  local truncate_decimals_string6=\"\"\n  local truncate_decimals_string7=\"\
    \"\n  local truncate_decimals_string8=\"\"\n  local truncate_decimals_string9=\"\
    \"\n  local truncate_decimals_string10=\"\"\n  local truncate_decimals_string11=\"\
    \"\n  local truncate_decimals_string12=\"\"\n  local truncate_decimals_string13=\"\
    \"\n  local truncate_decimals_string14=\"\"\n  local truncate_decimals_string15=\"\
    \"\n  local truncate_decimals_string16=\"\"\n  local truncate_decimals_string17=\"\
    \"\n  local truncate_decimals_string18=\"\"\n  local truncate_decimals_string19=\"\
    \"\n  local truncate_decimals_string20=\"\"\n  local truncate_decimals_string21=\"\
    \"\n  local truncate_decimals_string22=\"\"\n  local truncate_decimals_string23=\"\
    \"\n  local truncate_decimals_string24=\"\"\n  local truncate_decimals_string25=\"\
    \"\n  local truncate_decimals_string26=\"\"\n  local truncate_decimals_string27=\"\
    \"\n  local truncate_decimals_string28=\"\"\n  local truncate_decimals_string29=\"\
    \"\n  local truncate_decimals_string30=\"\"\n  local truncate_decimals_string31=\"\
    \"\n  local truncate_decimals_string32=\"\"\n  local truncate_decimals_string33=\"\
    \"\n  local truncate_decimals_string34=\"\"\n  local truncate_decimals_string35=\"\
    \"\n  local truncate_decimals_string36=\"\"\n  local truncate_decimals_string37=\"\
    \"\n  local truncate_decimals_string38=\"\"\n  local truncate_decimals_string39=\"\
    \"\n  local truncate_decimals_string40=\"\"\n  local truncate_decimals_string41=\"\
    \"\n  local truncate_decimals_string42=\"\"\n  local truncate_decimals_string43=\"\
    \"\n  local truncate_decimals_string44=\"\"\n  local truncate_decimals_string45=\"\
    \"\n  local truncate_decimals_string46=\"\"\n  local truncate_decimals_string47=\"\
    \"\n  local truncate_decimals_string48=\"\"\n  local truncate_decimals_\n}\n\n\
    candidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local integer\n  local remainder\n\n  integer=$(( number /\
    \ 10 ))\n  decimal=$(( number % 10 ))\n  decimals=$(( decimals + 1 ))\n\n  while\
    \ (( decimal > 0 )) ; do\n    decimal=$(( decimal - 10 ))\n    decimals=$(( decimals\
    \ + 1 ))\n  done\n\n  remainder=$(( number % 10 ))\n\n  echo \"${integer}.${decimals}.${remainder}\"\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfcywnybo.sh: line 15: 3.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local decimal_part\n    local integer_part\n    local remainder\n\
    \    local remainder_part\n    local remainder_part_length\n    local remainder_part_length2\n\
    \    local remainder_part_length3\n    local remainder_part_length4\n    local\
    \ remainder_part_length5\n    local remainder_part_length6\n    local remainder_part_length7\n\
    \    local remainder_part_length8\n    local remainder_part_length9\n    local\
    \ remainder_part_length10\n    local remainder_part_length11\n    local remainder_part_length12\n\
    \    local remainder_part_length13\n    local remainder_part_length14\n    local\
    \ remainder_part_length15\n    local remainder_part_length16\n    local remainder_part_length17\n\
    \    local remainder_part_length18\n    local remainder_part_length19\n    local\
    \ remainder_part_length20\n    local remainder_part_length21\n    local remainder_part_length22\n\
    \    local remainder_part_length23\n    local remainder_part_length24\n    local\
    \ remainder_part_length25\n    local remainder_part_length26\n    local remainder_part_length27\n\
    \    local remainder_part_length28\n    local remainder_part_length29\n    local\
    \ remainder_part_length30\n    local remainder_part_length31\n    local remainder_part_length32\n\
    \    local remainder_part_length33\n    local remainder_part_length34\n    local\
    \ remainder_part_length35\n    local remainder_part_length36\n    local remainder_part_length37\n\
    \    local remainder_part_length38\n    local remainder_part_length39\n    local\
    \ remainder_part_length40\n    local remainder_part_length41\n    local remainder_part_length42\n\
    \    local remainder_part_length43\n    local remainder_part_length44\n    local\
    \ remainder_part_length45\n    local remainder_part_length46\n    local remainder_part_length47\n\
    \    local remainder_part_length48\n    local remainder_part_length49\n    local\
    \ remainder_part_length50\n    local remainder_part_length51\n    local remainder_part_length52\n\
    \    local remainder_part_length53\n    local remainder_part_length54\n    local\
    \ remainder_part_length55\n    local remainder_part_length56\n    local remainder_part_length57\n\
    \    local remainder_part_length58\n    local remainder_part_length59\n    local\
    \ remainder_part_length60\n\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimals_string=\"\"\n\n  while\
    \ [ $number -gt 0 ]; do\n    decimals=$(( $decimals + 1 ))\n    remainder=$((\
    \ $number % 10 ))\n    integer=$(( $integer + 1 ))\n    decimals_string=\"$decimals_string$remainder\"\
    \n    number=$(( $number / 10 ))\n  done\n\n  echo \"$decimals_string\"\n}\n\n\
    candidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpg565vi24.sh: line 15: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimals_string=\"\"\n\n  while\
    \ [ $number -gt 0 ]; do\n    integer=$(( $integer + 1 ))\n    remainder=$(( $number\
    \ % 10 ))\n    decimals=$(( $decimals + 1 ))\n    decimals_string=\"$decimals_$decimals\"\
    \n    number=$(( $number / 10 ))\n  done\n\n  echo \"$decimals_string$remainder\"\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpo7yksxlp.sh: line 15: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_string=\"\"\n  local truncate_string2=\"\
    \"\n  local truncate_string3=\"\"\n  local truncate_string4=\"\"\n  local truncate_string5=\"\
    \"\n  local truncate_string6=\"\"\n  local truncate_string7=\"\"\n  local truncate_string8=\"\
    \"\n  local truncate_string9=\"\"\n  local truncate_string10=\"\"\n  local truncate_string11=\"\
    \"\n  local truncate_string12=\"\"\n  local truncate_string13=\"\"\n  local truncate_string14=\"\
    \"\n  local truncate_string15=\"\"\n  local truncate_string16=\"\"\n  local truncate_string17=\"\
    \"\n  local truncate_string18=\"\"\n  local truncate_string19=\"\"\n  local truncate_string20=\"\
    \"\n  local truncate_string21=\"\"\n  local truncate_string22=\"\"\n  local truncate_string23=\"\
    \"\n  local truncate_string24=\"\"\n  local truncate_string25=\"\"\n  local truncate_string26=\"\
    \"\n  local truncate_string27=\"\"\n  local truncate_string28=\"\"\n  local truncate_string29=\"\
    \"\n  local truncate_string30=\"\"\n  local truncate_string31=\"\"\n  local truncate_string32=\"\
    \"\n  local truncate_string33=\"\"\n  local truncate_string34=\"\"\n  local truncate_string35=\"\
    \"\n  local truncate_string36=\"\"\n  local truncate_string37=\"\"\n  local truncate_string38=\"\
    \"\n  local truncate_string39=\"\"\n  local truncate_string40=\"\"\n  local truncate_string41=\"\
    \"\n  local truncate_string42=\"\"\n  local truncate_string43=\"\"\n  local truncate_string44=\"\
    \"\n  local truncate_string45=\"\"\n  local truncate_string46=\"\"\n  local truncate_string47=\"\
    \"\n  local truncate_string48=\"\"\n  local truncate_string49=\"\"\n  local truncate_string50=\"\
    \"\n  local truncate_string51=\"\"\n  local truncate_string52=\"\"\n  local truncate_string53=\"\
    \"\n  local truncate_string54=\"\"\n  local truncate_string55=\"\"\n  local truncate_string56=\"\
    \"\n  local truncate_string57=\"\"\n  local truncate_string58=\"\"\n  local truncate_string59=\"\
    \"\n  local truncate_string60=\"\"\n  local truncate_string61=\"\"\n  local truncate_string62\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_number_in_int=0\n\
    \  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n  local trunc_decimals_in_float=0\n\
    \  local trunc_number_in_float_in_int=0\n  local trunc_decimals_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float=0\n  local trunc_decimals_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_decimals_in_float_in_float_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_decimals=0\n  local truncate_decimals_string=\"\
    \"\n  local truncate_decimals_string2=\"\"\n  local truncate_decimals_string3=\"\
    \"\n  local truncate_decimals_string4=\"\"\n  local truncate_decimals_string5=\"\
    \"\n  local truncate_decimals_string6=\"\"\n  local truncate_decimals_string7=\"\
    \"\n  local truncate_decimals_string8=\"\"\n  local truncate_decimals_string9=\"\
    \"\n  local truncate_decimals_string10=\"\"\n  local truncate_decimals_string11=\"\
    \"\n  local truncate_decimals_string12=\"\"\n  local truncate_decimals_string13=\"\
    \"\n  local truncate_decimals_string14=\"\"\n  local truncate_decimals_string15=\"\
    \"\n  local truncate_decimals_string16=\"\"\n  local truncate_decimals_string17=\"\
    \"\n  local truncate_decimals_string18=\"\"\n  local truncate_decimals_string19=\"\
    \"\n  local truncate_decimals_string20=\"\"\n  local truncate_decimals_string21=\"\
    \"\n  local truncate_decimals_string22=\"\"\n  local truncate_decimals_string23=\"\
    \"\n  local truncate_decimals_string24=\"\"\n  local truncate_decimals_string25=\"\
    \"\n  local truncate_decimals_string26=\"\"\n  local truncate_decimals_string27=\"\
    \"\n  local truncate_decimals_string28=\"\"\n  local truncate_decimals_string29=\"\
    \"\n  local truncate_decimals_string30=\"\"\n  local truncate_decimals_string31=\"\
    \"\n  local truncate_decimals_string32=\"\"\n  local truncate_decimals_string33=\"\
    \"\n  local truncate_decimals_string34=\"\"\n  local truncate_decimals_string35=\"\
    \"\n  local truncate_decimals_string36=\"\"\n  local truncate_decimals_string37=\"\
    \"\n  local truncate_decimals_string38=\"\"\n  local truncate_decimals_string39=\"\
    \"\n  local truncate_decimals_string40=\"\"\n  local truncate_decimals_string41=\"\
    \"\n  local truncate_decimals_string42=\"\"\n  local truncate_decimals_string43=\"\
    \"\n  local truncate_decimals_string44=\"\"\n  local truncate_decimals_string45=\"\
    \"\n  local truncate_decimals_string46=\"\"\n  local truncate_decimals_string47=\"\
    \"\n  local truncate_decimals_string48=\"\"\n  local truncate_decimals_\n}\n\n\
    candidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local decimals_string=\"\"\n    local truncate_string=\"\"\n\
    \    local truncate_string2=\"\"\n    local truncate_string3=\"\"\n    local truncate_string4=\"\
    \"\n    local truncate_string5=\"\"\n    local truncate_string6=\"\"\n    local\
    \ truncate_string7=\"\"\n    local truncate_string8=\"\"\n    local truncate_string9=\"\
    \"\n    local truncate_string10=\"\"\n    local truncate_string11=\"\"\n    local\
    \ truncate_string12=\"\"\n    local truncate_string13=\"\"\n    local truncate_string14=\"\
    \"\n    local truncate_string15=\"\"\n    local truncate_string16=\"\"\n    local\
    \ truncate_string17=\"\"\n    local truncate_string18=\"\"\n    local truncate_string19=\"\
    \"\n    local truncate_string20=\"\"\n    local truncate_string21=\"\"\n    local\
    \ truncate_string22=\"\"\n    local truncate_string23=\"\"\n    local truncate_string24=\"\
    \"\n    local truncate_string25=\"\"\n    local truncate_string26=\"\"\n    local\
    \ truncate_string27=\"\"\n    local truncate_string28=\"\"\n    local truncate_string29=\"\
    \"\n    local truncate_string30=\"\"\n    local truncate_string31=\"\"\n    local\
    \ truncate_string32=\"\"\n    local truncate_string33=\"\"\n    local truncate_string34=\"\
    \"\n    local truncate_string35=\"\"\n    local truncate_string36=\"\"\n    local\
    \ truncate_string37=\"\"\n    local truncate_string38=\"\"\n    local truncate_string39=\"\
    \"\n    local truncate_string40=\"\"\n    local truncate_string41=\"\"\n    local\
    \ truncate_string42=\"\"\n    local truncate_string43=\"\"\n    local truncate_string44=\"\
    \"\n    local truncate_string45=\"\"\n    local truncate_string46=\"\"\n    local\
    \ truncate_string47=\"\"\n    local truncate_string48=\"\"\n    local truncate_string49=\"\
    \"\n    local truncate_string50=\"\"\n    local truncate_string51=\"\"\n    local\
    \ truncate_string52=\"\"\n    local truncate_string53=\"\"\n    local truncate_string54=\"\
    \"\n    local truncate_string55=\"\"\n    local truncate_string56=\"\"\n    local\
    \ truncate_string57=\"\"\n    local truncate_string58=\"\"\n    local truncate_string59=\"\
    \"\n    local truncate_string60=\"\"\n    local truncate_string61=\"\"\n    local\
    \ truncate_string62\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder\n  local decimal\n  local decimals\n  local\
    \ remainder\n  local decimal\n  local decimals\n  local remainder\n  local decimal\n\
    \  local decimals\n  local remainder\n  local decimal\n  local decimals\n  local\
    \ remainder\n  local decimal\n  local decimals\n  local remainder\n  local decimal\n\
    \  local decimals\n  local remainder\n  local decimal\n  local decimals\n  local\
    \ remainder\n  local decimal\n  local decimals\n  local remainder\n  local decimal\n\
    \  local decimals\n  local remainder\n  local decimal\n  local decimals\n  local\
    \ remainder\n  local decimal\n  local decimals\n  local remainder\n  local decimal\n\
    \  local decimals\n  local remainder\n  local decimal\n  local decimals\n  local\
    \ remainder\n  local decimal\n  local decimals\n  local remainder\n  local decimal\n\
    \  local decimals\n  local remainder\n  local decimal\n  local decimals\n  local\
    \ remainder\n  local decimal\n  local decimals\n  local remainder\n  local decimal\n\
    \  local decimals\n  local remainder\n  local decimal\n  local decimals\n  local\
    \ remainder\n  local decimal\n  local decimals\n  local remainder\n  local decimal\n\
    \  local decimals\n  local remainder\n  local decimal\n  local decimals\n  local\
    \ remainder\n  local decimal\n  local decimals\n  local remainder\n  local decimal\n\
    \  local decimals\n  local remainder\n  local decimal\n  local decimals\n  local\
    \ remainder\n  local decimal\n  local decimals\n  local remainder\n  local decimal\n\
    \  local decimals\n  local remainder\n  local decimal\n  local decimals\n  local\
    \ remainder\n  local decimal\n  local decimals\n  local remainder\n  local decimal\n\
    \  local decimals\n  local remainder\n  local decimal\n  local decimals\n  local\
    \ remainder\n  local decimal\n  local decimals\n  local remainder\n  local decimal\n\
    \  local decimals\n  local remainder\n  local decimal\n  local decimals\n  local\
    \ remainder\n  local decimal\n  local decimals\n  local remainder\n\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string_length=0\n  local decimals_string_length_string=\"\
    \"\n  local decimals_string_length_string_length=0\n  local decimals_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length=0\n  local decimals_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local decimal=0\n  local remainder=0\n  local decimals_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local integer_string_length=0\n\
    \  local remainder_string_length=0\n  local decimal_string_length=0\n  local decimal_string=\"\
    \"\n  local remainder_string=\"\"\n  local remainder_string_length=0\n  local\
    \ decimal_string_length=0\n  local decimals_string_length=0\n  local decimals_string=\"\
    \"\n  local integer_string_length=0\n  local integer_string=\"\"\n  local decimals_string_length=0\n\
    \  local decimals_string=\"\"\n  local remainder_string_length=0\n  local remainder_string=\"\
    \"\n  local remainder_string_length=0\n  local decimal_string_length=0\n  local\
    \ decimal_string=\"\"\n  local decimal_string_length=0\n  local decimals_string_length=0\n\
    \  local decimals_string=\"\"\n  local integer_string_length=0\n  local integer_string=\"\
    \"\n  local decimals_string_length=0\n  local decimals_string=\"\"\n  local remainder_string_length=0\n\
    \  local remainder_string=\"\"\n  local remainder_string_length=0\n  local decimal_string_length=0\n\
    \  local decimal_string=\"\"\n  local decimal_string_length=0\n  local decimals_string_length=0\n\
    \  local decimals_string=\"\"\n  local integer_string_length=0\n  local integer_string=\"\
    \"\n  local decimals_string_length=0\n  local decimals_string=\"\"\n  local remainder_string_length=0\n\
    \  local remainder_string=\"\"\n  local remainder_string_length=0\n  local decimal_string_length=0\n\
    \  local decimal_string=\"\"\n  local decimal_string_length=0\n  local decimals_string_length=0\n\
    \  local decimals_string=\"\"\n  local integer_string_length=0\n  local integer_string=\"\
    \"\n  local decimals_string_length=0\n  local decimals_string=\"\"\n  local remainder_string_length=0\n\
    \  local remainder_string=\"\"\n  local remainder_string_length=0\n  local decimal_string_length=0\n\
    \  local decimal_string=\"\"\n  local decimal_string_length=0\n  local decimals_string_length=0\n\
    \  local decimals_string=\"\"\n  local integer_string_length=0\n  local integer_string=\"\
    \"\n  local decimals_string_length=0\n  local decimals_string=\"\"\n  local remainder_string_length=0\n\
    \  local remainder_string=\"\"\n  local remainder_string_length=0\n  local decimal_string_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local integer=0\n    local remainder=0\n    local decimal=0\n\
    \    local result=0\n\n    while [ $number -gt 0 ]; do\n        decimal=$(( $number\
    \ % 10 ))\n        decimals=$(( $decimals + 1 ))\n        number=$(( $number /\
    \ 10 ))\n    done\n\n    if [ $decimals -gt 0 ]; then\n        remainder=$(( $number\
    \ % 1 ))\n        integer=$(( $number / 10 ))\n    fi\n\n    if [ $integer -eq\
    \ 0 ]; then\n        result=$decimal\n    else\n        result=$(( $integer +\
    \ $decimal ))\n    fi\n\n    if [ $decimals -gt 0 ]; then\n        result=$((\
    \ $result + $remainder ))\n    fi\n\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpw32jmy3_.sh: line 16: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimals_string=\"\"\n  local\
    \ integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  \n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string2=\"\"\n  local decimals_string3=\"\
    \"\n  local decimals_string4=\"\"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\
    \"\n  local decimals_string7=\"\"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\
    \"\n  local decimals_string10=\"\"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\
    \"\n  local decimals_string13=\"\"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\
    \"\n  local decimals_string16=\"\"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\
    \"\n  local decimals_string19=\"\"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\
    \"\n  local decimals_string22=\"\"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\
    \"\n  local decimals_string25=\"\"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\
    \"\n  local decimals_string28=\"\"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\
    \"\n  local decimals_string31=\"\"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\
    \"\n  local decimals_string34=\"\"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\
    \"\n  local decimals_string37=\"\"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\
    \"\n  local decimals_string40=\"\"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\
    \"\n  local decimals_string43=\"\"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\
    \"\n  local decimals_string46=\"\"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\
    \"\n  local decimals_string49=\"\"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\
    \"\n  local decimals_string52=\"\"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\
    \"\n  local decimals_string55=\"\"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\
    \"\n  local decimals_string58=\"\"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\
    \"\n  local decimals_string61=\"\"\n  local decimals_string62=\"\"\n  local decimals_string\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal_part\n  local truncate_part\n  local truncate_part\n  local truncate_part\n\
    \  local truncate_part\n  local truncate_part\n  local truncate_part\n  local\
    \ truncate_part\n  local truncate_part\n  local truncate_part\n  local truncate_part\n\
    \  local truncate_part\n  local truncate_part\n  local truncate_part\n  local\
    \ truncate_part\n  local truncate_part\n  local truncate_part\n  local truncate_part\n\
    \  local truncate_part\n  local truncate_part\n  local truncate_part\n  local\
    \ truncate_part\n  local truncate_part\n  local truncate_part\n  local truncate_part\n\
    \  local truncate_part\n  local truncate_part\n  local truncate_part\n  local\
    \ truncate_part\n  local truncate_part\n  local truncate_part\n  local truncate_part\n\
    \  local truncate_part\n  local truncate_part\n  local truncate_part\n  local\
    \ truncate_part\n  local truncate_part\n  local truncate_part\n  local truncate_part\n\
    \  local truncate_part\n  local truncate_part\n  local truncate_part\n  local\
    \ truncate_part\n  local truncate_part\n  local truncate_part\n  local truncate_part\n\
    \  local truncate_part\n  local truncate_part\n  local truncate_part\n  local\
    \ truncate_part\n  local truncate_part\n  local truncate_part\n  local truncate_part\n\
    \  local truncate_part\n  local truncate_part\n  local truncate_part\n  local\
    \ truncate_part\n  local truncate_part\n  local truncate_part\n  local truncate_part\n\
    \  local truncate_part\n  local truncate_part\n  local truncate_part\n  local\
    \ truncate_part\n  local truncate_part\n  local truncate_part\n  local truncate_part\n\
    \  local truncate_part\n  local truncate_part\n  local truncate_part\n  local\
    \ truncate_part\n  local truncate_part\n  local truncate_part\n  local truncate_part\n\
    \  local truncate_part\n  local truncate_part\n  local truncate_part\n  local\
    \ truncate_part\n  local truncate_part\n  local truncate_part\n  local truncate_part\n\
    \  local truncate_part\n  local truncate_part\n  local trun\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local decimal=0\n  local remainder=0\n  local remainder_decimal=0\n\
    \  local remainder_integer=0\n  local remainder_remainder=0\n  local remainder_remainder_decimal=0\n\
    \  local remainder_remainder_integer=0\n  local remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_decimal=0\n  local remainder_remainder_remainder_integer=0\n\
    \  local remainder_remainder_remainder_remainder=0\n  local remainder_remainder_remainder_remainder_decimal=0\n\
    \  local remainder_remainder_remainder_remainder_integer=0\n  local remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_decimal=0\n  local\
    \ remainder_remainder_remainder_remainder_remainder_integer=0\n  local remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_decimal=0\n  local\
    \ remainder_remainder_remainder_remainder_remainder_integer=0\n  local remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_decimal=0\n  local\
    \ remainder_remainder_remainder_remainder_remainder_integer=0\n  local remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_decimal=0\n  local\
    \ remainder_remainder_remainder_remainder_remainder_integer=0\n  local remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_decimal=0\n  local\
    \ remainder_remainder_remainder_remainder_remainder_integer=0\n  local remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_decimal=0\n  local\
    \ remainder_remainder_remainder_remainder_remainder_integer=0\n  local remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_decimal=0\n  local\
    \ remainder_remainder_remainder_remainder_remainder_integer=0\n  local remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_decimal=0\n  local\
    \ remainder_remainder_remainder_remainder_remainder_integer=0\n  local remainder_remainder_remainder_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local trunc_number=0\n    local trunc_number_index=0\n    local\
    \ trunc_number_index2=0\n    local trunc_number_index3=0\n    local trunc_number_index4=0\n\
    \    local trunc_number_index5=0\n    local trunc_number_index6=0\n    local trunc_number_index7=0\n\
    \    local trunc_number_index8=0\n    local trunc_number_index9=0\n    local trunc_number_index10=0\n\
    \    local trunc_number_index11=0\n    local trunc_number_index12=0\n    local\
    \ trunc_number_index13=0\n    local trunc_number_index14=0\n    local trunc_number_index15=0\n\
    \    local trunc_number_index16=0\n    local trunc_number_index17=0\n    local\
    \ trunc_number_index18=0\n    local trunc_number_index19=0\n    local trunc_number_index20=0\n\
    \    local trunc_number_index21=0\n    local trunc_number_index22=0\n    local\
    \ trunc_number_index23=0\n    local trunc_number_index24=0\n    local trunc_number_index25=0\n\
    \    local trunc_number_index26=0\n    local trunc_number_index27=0\n    local\
    \ trunc_number_index28=0\n    local trunc_number_index29=0\n    local trunc_number_index30=0\n\
    \    local trunc_number_index31=0\n    local trunc_number_index32=0\n    local\
    \ trunc_number_index33=0\n    local trunc_number_index34=0\n    local trunc_number_index35=0\n\
    \    local trunc_number_index36=0\n    local trunc_number_index37=0\n    local\
    \ trunc_number_index38=0\n    local trunc_number_index39=0\n    local trunc_number_index40=0\n\
    \    local trunc_number_index41=0\n    local trunc_number_index42=0\n    local\
    \ trunc_number_index43=0\n    local trunc_number_index44=0\n    local trunc_number_index45=0\n\
    \    local trunc_number_index46=0\n    local trunc_number_index47=0\n    local\
    \ trunc_number_index48=0\n    local trunc_number_index49=0\n    local trunc_number_index50=0\n\
    \    local trunc_number_index51=0\n    local trunc_number_index52=0\n    local\
    \ trunc_number_index53=0\n    local trunc_number_index54=0\n    local trunc_number_index55=0\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimals_found=0\n  local remainder_found=0\n\
    \  local decimal_part\n  local integer_part\n  local remainder_part\n  local decimal_found\n\
    \  local integer_found\n  local remainder_found\n  local decimal_part\n  local\
    \ integer_part\n  local remainder_part\n  local decimal_found\n  local integer_found\n\
    \  local remainder_found\n  local decimal_part\n  local integer_part\n  local\
    \ remainder_part\n  local decimal_found\n  local integer_found\n  local remainder_found\n\
    \  local decimal_part\n  local integer_part\n  local remainder_part\n  local decimal_found\n\
    \  local integer_found\n  local remainder_found\n  local decimal_part\n  local\
    \ integer_part\n  local remainder_part\n  local decimal_found\n  local integer_found\n\
    \  local remainder_found\n  local decimal_part\n  local integer_part\n  local\
    \ remainder_part\n  local decimal_found\n  local integer_found\n  local remainder_found\n\
    \  local decimal_part\n  local integer_part\n  local remainder_part\n  local decimal_found\n\
    \  local integer_found\n  local remainder_found\n  local decimal_part\n  local\
    \ integer_part\n  local remainder_part\n  local decimal_found\n  local integer_found\n\
    \  local remainder_found\n  local decimal_part\n  local integer_part\n  local\
    \ remainder_part\n  local decimal_found\n  local integer_found\n  local remainder_found\n\
    \  local decimal_part\n  local integer_part\n  local remainder_part\n  local decimal_found\n\
    \  local integer_found\n  local remainder_found\n  local decimal_part\n  local\
    \ integer_part\n  local remainder_part\n  local decimal_found\n  local integer_found\n\
    \  local remainder_found\n  local decimal_part\n  local integer_part\n  local\
    \ remainder_part\n  local decimal_found\n  local integer_found\n  local remainder_found\n\
    \  local decimal_part\n  local integer_part\n  local remainder_part\n  local decimal_found\n\
    \  local integer_found\n  local remainder_found\n  local decimal_part\n  local\
    \ integer_part\n  local remainder_part\n  local decimal_found\n  local integer_found\n\
    \  local remainder_found\n  local decimal_part\n  local integer_part\n  local\
    \ remainder_part\n  local decimal_found\n  local integer_found\n  \n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local decimals_string\n  local decimal_string\n  local truncate_string\n\
    \  local truncate_string2\n  local truncate_string3\n  local truncate_string4\n\
    \  local truncate_string5\n  local truncate_string6\n  local truncate_string7\n\
    \  local truncate_string8\n  local truncate_string9\n  local truncate_string10\n\
    \  local truncate_string11\n  local truncate_string12\n  local truncate_string13\n\
    \  local truncate_string14\n  local truncate_string15\n  local truncate_string16\n\
    \  local truncate_string17\n  local truncate_string18\n  local truncate_string19\n\
    \  local truncate_string20\n  local truncate_string21\n  local truncate_string22\n\
    \  local truncate_string23\n  local truncate_string24\n  local truncate_string25\n\
    \  local truncate_string26\n  local truncate_string27\n  local truncate_string28\n\
    \  local truncate_string29\n  local truncate_string30\n  local truncate_string31\n\
    \  local truncate_string32\n  local truncate_string33\n  local truncate_string34\n\
    \  local truncate_string35\n  local truncate_string36\n  local truncate_string37\n\
    \  local truncate_string38\n  local truncate_string39\n  local truncate_string40\n\
    \  local truncate_string41\n  local truncate_string42\n  local truncate_string43\n\
    \  local truncate_string44\n  local truncate_string45\n  local truncate_string46\n\
    \  local truncate_string47\n  local truncate_string48\n  local truncate_string49\n\
    \  local truncate_string50\n  local truncate_string51\n  local truncate_string52\n\
    \  local truncate_string53\n  local truncate_string54\n  local truncate_string55\n\
    \  local truncate_string56\n  local truncate_string57\n  local truncate_string58\n\
    \  local truncate_string59\n  local truncate_string60\n  local truncate_string61\n\
    \  local truncate_string62\n  local truncate_string63\n  local truncate_string64\n\
    \  local truncate_string65\n  local truncate_string66\n  local truncate_string67\n\
    \  local truncate_string68\n  local truncate_string69\n  local trun\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local \n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local i\n  local j\n  local decimals_tmp\n  local decimals_tmp2\n\
    \  local decimals_tmp3\n  local decimals_tmp4\n  local decimals_tmp5\n  local\
    \ decimals_tmp6\n  local decimals_tmp7\n  local decimals_tmp8\n  local decimals_tmp9\n\
    \  local decimals_tmp10\n  local decimals_tmp11\n  local decimals_tmp12\n  local\
    \ decimals_tmp13\n  local decimals_tmp14\n  local decimals_tmp15\n  local decimals_tmp16\n\
    \  local decimals_tmp17\n  local decimals_tmp18\n  local decimals_tmp19\n  local\
    \ decimals_tmp20\n  local decimals_tmp21\n  local decimals_tmp22\n  local decimals_tmp23\n\
    \  local decimals_tmp24\n  local decimals_tmp25\n  local decimals_tmp26\n  local\
    \ decimals_tmp27\n  local decimals_tmp28\n  local decimals_tmp29\n  local decimals_tmp30\n\
    \  local decimals_tmp31\n  local decimals_tmp32\n  local decimals_tmp33\n  local\
    \ decimals_tmp34\n  local decimals_tmp35\n  local decimals_tmp36\n  local decimals_tmp37\n\
    \  local decimals_tmp38\n  local decimals_tmp39\n  local decimals_tmp40\n  local\
    \ decimals_tmp41\n  local decimals_tmp42\n  local decimals_tmp43\n  local decimals_tmp44\n\
    \  local decimals_tmp45\n  local decimals_tmp46\n  local decimals_tmp47\n  local\
    \ decimals_tmp48\n  local decimals_tmp49\n  local decimals_tmp50\n  local decimals_tmp51\n\
    \  local decimals_tmp52\n  local decimals_tmp53\n  local decimals_tmp54\n  local\
    \ decimals_tmp55\n  local decimals_tmp56\n  local decimals_tmp57\n  local decimals_tmp58\n\
    \  local decimals_tmp59\n  local decimals_tmp60\n  local decimals_tmp61\n  local\
    \ decimals_tmp62\n  local decimals_tmp63\n  local decimals_tmp64\n  local decimals_tmp65\n\
    \  local decimals_tmp66\n  local decimals_tmp67\n  local decimals_tmp68\n  local\
    \ decimals_tmp69\n  local decimals_tmp70\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimals_string=\"\"\n  local\
    \ integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  \n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local trunc_number=0\n    local trunc_decimals=0\n    local\
    \ trunc_number_in_int=0\n    local trunc_decimals_in_int=0\n    local trunc_number_in_float=0\n\
    \    local trunc_decimals_in_float=0\n    local trunc_number_in_float_in_int=0\n\
    \    local trunc_decimals_in_float_in_int=0\n    local trunc_number_in_float_in_float=0\n\
    \    local trunc_decimals_in_float_in_float=0\n    local trunc_number_in_float_in_float_in_int=0\n\
    \    local trunc_decimals_in_float_in_float_in_int=0\n    local trunc_number_in_float_in_float_in_float=0\n\
    \    local trunc_decimals_in_float_in_float_in_float=0\n    local trunc_number_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_decimals_in_float_in_float_in_float_in_int=0\n    local trunc_number_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_decimals_in_float_in_float_in_float_in_float=0\n    local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_decimals_in_float_in_float_in_float_in_float_in_int=0\n    local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float=0\n    local trunc_decimals_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_decimals_in_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string_length=0\n  local decimals_string_length_string=\"\
    \"\n  local decimals_string_length_string_length=0\n  local decimals_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length=0\n  local decimals_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local decimalPart\n  local integerPart\n  local integerPartRemainder\n\
    \  local integerPartRemainderDecimals\n  local integerPartRemainderDecimalsRemainder\n\
    \  local integerPartRemainderDecimalsRemainderRemainder\n  local integerPartRemainderDecimalsRemainderRemainderRemainder\n\
    \  local integerPartRemainderDecimalsRemainderRemainderRemainderRemainder\n  local\
    \ integerPartRemainderDecimalsRemainderRemainderRemainderRemainderRemainder\n\
    \  local integerPartRemainderDecimalsRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local integerPartRemainderDecimalsRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local integerPartRemainderDecimalsRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local integerPartRemainderDecimalsRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local integerPartRemainderDecimalsRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local integerPartRemainderDecimalsRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local integerPartRemainderDecimalsRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local integerPartRemainderDecimalsRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local integerPartRemainderDecimalsRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local integerPartRemainderDecimalsRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local integerPartRemainderDecimalsRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local integerPartRemainderDecimalsRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local integerPartRemainderDecimalsRemainderRemainderRemain\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ integer\n    local decimal\n    local decimals\n    local decimals_string\n\
    \    local decimals_string_reversed\n    local decimals_string_length\n    local\
    \ decimals_string_length_reversed\n    local decimals_string_length_reversed_max\n\
    \    local decimals_string_length_reversed_max_reversed\n    local decimals_string_length_reversed_max_reversed_max\n\
    \    local decimals_string_length_reversed_max_reversed_max_reversed\n    local\
    \ decimals_string_length_reversed_max_reversed_max_reversed_max\n    local decimals_string_length_reversed_max_reversed_max_reversed_max_reversed\n\
    \    local decimals_string_length_reversed_max_reversed_max_reversed_max_reversed_max\n\
    \    local decimals_string_length_reversed_max_reversed_max_reversed_max_reversed_max_reversed\n\
    \    local decimals_string_length_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max\n\
    \    local decimals_string_length_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed\n\
    \    local decimals_string_length_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max\n\
    \    local decimals_string_length_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed\n\
    \    local decimals_string_length_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max\n\
    \    local decimals_string_length_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed\n\
    \    local decimals_string_length_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max\n\
    \    local decimals_string_length_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed\n\
    \    local decimals_string_length_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed\n\
    \    local decimals_string_length_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max\n\
    \    local decimals_string_length_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reversed_max_reverse\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimal\n  local\
    \ decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string2=\"\"\n  local decimals_string3=\"\
    \"\n  local decimals_string4=\"\"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\
    \"\n  local decimals_string7=\"\"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\
    \"\n  local decimals_string10=\"\"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\
    \"\n  local decimals_string13=\"\"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\
    \"\n  local decimals_string16=\"\"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\
    \"\n  local decimals_string19=\"\"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\
    \"\n  local decimals_string22=\"\"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\
    \"\n  local decimals_string25=\"\"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\
    \"\n  local decimals_string28=\"\"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\
    \"\n  local decimals_string31=\"\"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\
    \"\n  local decimals_string34=\"\"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\
    \"\n  local decimals_string37=\"\"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\
    \"\n  local decimals_string40=\"\"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\
    \"\n  local decimals_string43=\"\"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\
    \"\n  local decimals_string46=\"\"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\
    \"\n  local decimals_string49=\"\"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\
    \"\n  local decimals_string52=\"\"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\
    \"\n  local decimals_string55=\"\"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\
    \"\n  local decimals_string58=\"\"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\
    \"\n  local decimals_string61=\"\"\n  local decimals_string62=\"\"\n  local decimals_string\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string2=\"\"\n  local decimals_string3=\"\
    \"\n  local decimals_string4=\"\"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\
    \"\n  local decimals_string7=\"\"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\
    \"\n  local decimals_string10=\"\"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\
    \"\n  local decimals_string13=\"\"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\
    \"\n  local decimals_string16=\"\"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\
    \"\n  local decimals_string19=\"\"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\
    \"\n  local decimals_string22=\"\"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\
    \"\n  local decimals_string25=\"\"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\
    \"\n  local decimals_string28=\"\"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\
    \"\n  local decimals_string31=\"\"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\
    \"\n  local decimals_string34=\"\"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\
    \"\n  local decimals_string37=\"\"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\
    \"\n  local decimals_string40=\"\"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\
    \"\n  local decimals_string43=\"\"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\
    \"\n  local decimals_string46=\"\"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\
    \"\n  local decimals_string49=\"\"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\
    \"\n  local decimals_string52=\"\"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\
    \"\n  local decimals_string55=\"\"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\
    \"\n  local decimals_string58=\"\"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\
    \"\n  local decimals_string61=\"\"\n  local decimals_string62=\"\"\n  local decimals_string\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_digits=0\n  local\
    \ trunc_digits_left=0\n  local trunc_digits_right=0\n  local trunc_digits_left_max=0\n\
    \  local trunc_digits_right_max=0\n  local trunc_digits_left_min=0\n  local trunc_digits_right_min=0\n\
    \  local trunc_digits_left_min_index=0\n  local trunc_digits_right_min_index=0\n\
    \  local trunc_digits_left_max_index=0\n  local trunc_digits_right_max_index=0\n\
    \  local trunc_digits_left_max_index=0\n  local trunc_digits_right_max_index=0\n\
    \  local trunc_digits_left_min_index=0\n  local trunc_digits_right_min_index=0\n\
    \  local trunc_digits_left_max_index=0\n  local trunc_digits_right_max_index=0\n\
    \  local trunc_digits_left_min_index=0\n  local trunc_digits_right_min_index=0\n\
    \  local trunc_digits_left_max_index=0\n  local trunc_digits_right_max_index=0\n\
    \  local trunc_digits_left_min_index=0\n  local trunc_digits_right_min_index=0\n\
    \  local trunc_digits_left_max_index=0\n  local trunc_digits_right_max_index=0\n\
    \  local trunc_digits_left_min_index=0\n  local trunc_digits_right_min_index=0\n\
    \  local trunc_digits_left_max_index=0\n  local trunc_digits_right_max_index=0\n\
    \  local trunc_digits_left_min_index=0\n  local trunc_digits_right_min_index=0\n\
    \  local trunc_digits_left_max_index=0\n  local trunc_digits_right_max_index=0\n\
    \  local trunc_digits_left_min_index=0\n  local trunc_digits_right_min_index=0\n\
    \  local trunc_digits_left_max_index=0\n  local trunc_digits_right_max_index=0\n\
    \  local trunc_digits_left_min_index=0\n  local trunc_digits_right_min_index=0\n\
    \  local trunc_digits_left_max_index=0\n  local trunc_digits_right_max_index=0\n\
    \  local trunc_digits_left_min_index=0\n  local trunc_digits_right_min_index=0\n\
    \  local trunc_digits_left_max_index=0\n  local trunc_digits_right_max_index=0\n\
    \  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_part=0\n  local\
    \ trunc_part_decimals=0\n  local trunc_part_digits=0\n  local trunc_part_digits_decimals=0\n\
    \  local trunc_part_digits_decimals_digits=0\n  local trunc_part_digits_decimals_digits_digits=0\n\
    \  local trunc_part_digits_decimals_digits_digits_digits=0\n  local trunc_part_digits_decimals_digits_digits_digits_digits=0\n\
    \  local trunc_part_digits_decimals_digits_digits_digits_digits_digits=0\n  local\
    \ trunc_part_digits_decimals_digits_digits_digits_digits_digits_digits=0\n  local\
    \ trunc_part_digits_decimals_digits_digits_digits_digits_digits_digits_digits=0\n\
    \  local trunc_part_digits_decimals_digits_digits_digits_digits_digits_digits_digits_digits=0\n\
    \  local trunc_part_digits_decimals_digits_digits_digits_digits_digits_digits_digits_digits_digits=0\n\
    \  local trunc_part_digits_decimals_digits_digits_digits_digits_digits_digits_digits_digits_digits=0\n\
    \  local trunc_part_digits_decimals_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits=0\n\
    \  local trunc_part_digits_decimals_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits=0\n\
    \  local trunc_part_digits_decimals_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits=0\n\
    \  local trunc_part_digits_decimals_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits=0\n\
    \  local trunc_part_digits_decimals_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits=0\n\
    \  local trunc_part_digits_decimals_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits=0\n\
    \  local trunc_part_digits_decimals_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits_digits=0\n\
    \  local trunc_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n\n  while [ $number -gt 0 ]; do\n    trunc_number=$((trunc_number\
    \ * 10 + $number % 10))\n    decimals=$((decimals + 1))\n    number=$((number\
    \ / 10))\n  done\n\n  echo \"$trunc_number\"\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp11pg9u5.sh: line 13: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_part\n  local\
    \ trunc_part_decimals\n  local trunc_part_decimals_string\n  local trunc_part_decimals_string_decimals\n\
    \  local trunc_part_decimals_string_decimals_string\n  local trunc_part_decimals_string_decimals_string_decimals\n\
    \  local trunc_part_decimals_string_decimals_string_decimals_string\n  local trunc_part_decimals_string_decimals_string_decimals_string_decimals\n\
    \  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string\n\
    \  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals\n\
    \  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string\n\
    \  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals\n\
    \  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string\n\
    \  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals\n\
    \  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string\n\
    \  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals\n\
    \  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string\n\
    \  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals\n\
    \  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals\n\
    \  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string2=\"\"\n  local decimals_string3=\"\
    \"\n  local decimals_string4=\"\"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\
    \"\n  local decimals_string7=\"\"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\
    \"\n  local decimals_string10=\"\"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\
    \"\n  local decimals_string13=\"\"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\
    \"\n  local decimals_string16=\"\"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\
    \"\n  local decimals_string19=\"\"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\
    \"\n  local decimals_string22=\"\"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\
    \"\n  local decimals_string25=\"\"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\
    \"\n  local decimals_string28=\"\"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\
    \"\n  local decimals_string31=\"\"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\
    \"\n  local decimals_string34=\"\"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\
    \"\n  local decimals_string37=\"\"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\
    \"\n  local decimals_string40=\"\"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\
    \"\n  local decimals_string43=\"\"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\
    \"\n  local decimals_string46=\"\"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\
    \"\n  local decimals_string49=\"\"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\
    \"\n  local decimals_string52=\"\"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\
    \"\n  local decimals_string55=\"\"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\
    \"\n  local decimals_string58=\"\"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\
    \"\n  local decimals_string61=\"\"\n  local decimals_string62=\"\"\n  local decimals_string\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local decimals_string\n  local decimal_string\n  local decimal_string_reversed\n\
    \  local decimal_string_with_dots\n  local decimal_string_with_dots_reversed\n\
    \  local decimal_string_with_dots_reversed_with_dots\n  local decimal_string_with_dots_reversed_with_dots_reversed\n\
    \  local decimal_string_with_dots_reversed_with_dots_reversed_with_dots\n  local\
    \ decimal_string_with_dots_reversed_with_dots_reversed_with_dots_reversed\n  local\
    \ decimal_string_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots\n\
    \  local decimal_string_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed\n\
    \  local decimal_string_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots\n\
    \  local decimal_string_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed\n\
    \  local decimal_string_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots\n\
    \  local decimal_string_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed\n\
    \  local decimal_string_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots\n\
    \  local decimal_string_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed\n\
    \  local decimal_string_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots\n\
    \  local decimal_string_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed\n\
    \  local decimal_string_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots_reversed_with_dots\n\
    \  local decimal_string_with_dots_reversed_with_dots_reversed_\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local integer=0\n    local remainder\n    local decimal\n  \
    \  local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \    local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \    local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \    local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \    local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \    local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \    local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \    local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \    local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_decimals=0\n  local truncate_decimals_string=\"\
    \"\n  local truncate_decimals_string2=\"\"\n  local truncate_decimals_string3=\"\
    \"\n  local truncate_decimals_string4=\"\"\n  local truncate_decimals_string5=\"\
    \"\n  local truncate_decimals_string6=\"\"\n  local truncate_decimals_string7=\"\
    \"\n  local truncate_decimals_string8=\"\"\n  local truncate_decimals_string9=\"\
    \"\n  local truncate_decimals_string10=\"\"\n  local truncate_decimals_string11=\"\
    \"\n  local truncate_decimals_string12=\"\"\n  local truncate_decimals_string13=\"\
    \"\n  local truncate_decimals_string14=\"\"\n  local truncate_decimals_string15=\"\
    \"\n  local truncate_decimals_string16=\"\"\n  local truncate_decimals_string17=\"\
    \"\n  local truncate_decimals_string18=\"\"\n  local truncate_decimals_string19=\"\
    \"\n  local truncate_decimals_string20=\"\"\n  local truncate_decimals_string21=\"\
    \"\n  local truncate_decimals_string22=\"\"\n  local truncate_decimals_string23=\"\
    \"\n  local truncate_decimals_string24=\"\"\n  local truncate_decimals_string25=\"\
    \"\n  local truncate_decimals_string26=\"\"\n  local truncate_decimals_string27=\"\
    \"\n  local truncate_decimals_string28=\"\"\n  local truncate_decimals_string29=\"\
    \"\n  local truncate_decimals_string30=\"\"\n  local truncate_decimals_string31=\"\
    \"\n  local truncate_decimals_string32=\"\"\n  local truncate_decimals_string33=\"\
    \"\n  local truncate_decimals_string34=\"\"\n  local truncate_decimals_string35=\"\
    \"\n  local truncate_decimals_string36=\"\"\n  local truncate_decimals_string37=\"\
    \"\n  local truncate_decimals_string38=\"\"\n  local truncate_decimals_string39=\"\
    \"\n  local truncate_decimals_string40=\"\"\n  local truncate_decimals_string41=\"\
    \"\n  local truncate_decimals_string42=\"\"\n  local truncate_decimals_string43=\"\
    \"\n  local truncate_decimals_string44=\"\"\n  local truncate_decimals_string45=\"\
    \"\n  local truncate_decimals_string46=\"\"\n  local truncate_decimals_string47=\"\
    \"\n  local truncate_decimals_string48=\"\"\n  local truncate_decimals_\n}\n\n\
    candidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_number_index=0\n\
    \  local trunc_decimals_index=0\n  local trunc_number_string=\"\"\n  local trunc_decimals_string=\"\
    \"\n  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimals_string_index=0\n\
    \  local trunc_number_string_index=0\n  local trunc_decimal\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local decimals_string=\"\"\n    local decimals_string_index=0\n\
    \    local decimals_string_index2=0\n    local decimals_string_index3=0\n    local\
    \ decimals_string_index4=0\n    local decimals_string_index5=0\n    local decimals_string_index6=0\n\
    \    local decimals_string_index7=0\n    local decimals_string_index8=0\n    local\
    \ decimals_string_index9=0\n    local decimals_string_index10=0\n    local decimals_string_index11=0\n\
    \    local decimals_string_index12=0\n    local decimals_string_index13=0\n  \
    \  local decimals_string_index14=0\n    local decimals_string_index15=0\n    local\
    \ decimals_string_index16=0\n    local decimals_string_index17=0\n    local decimals_string_index18=0\n\
    \    local decimals_string_index19=0\n    local decimals_string_index20=0\n  \
    \  local decimals_string_index21=0\n    local decimals_string_index22=0\n    local\
    \ decimals_string_index23=0\n    local decimals_string_index24=0\n    local decimals_string_index25=0\n\
    \    local decimals_string_index26=0\n    local decimals_string_index27=0\n  \
    \  local decimals_string_index28=0\n    local decimals_string_index29=0\n    local\
    \ decimals_string_index30=0\n    local decimals_string_index31=0\n    local decimals_string_index32=0\n\
    \    local decimals_string_index33=0\n    local decimals_string_index34=0\n  \
    \  local decimals_string_index35=0\n    local decimals_string_index36=0\n    local\
    \ decimals_string_index37=0\n    local decimals_string_index38=0\n    local decimals_string_index39=0\n\
    \    local decimals_string_index40=0\n    local decimals_string_index41=0\n  \
    \  local decimals_string_index42=0\n    local decimals_string_index43=0\n    local\
    \ decimals_string_index44=0\n    local decimals_string_index45=0\n    local decimals_string_index46=0\n\
    \    local decimals_string_index47=0\n    local decimals_string_index48=0\n  \
    \  local decimals_string_index49=0\n    local decimals_string_index50=0\n    local\
    \ decimals_string_index51=0\n    local decimals_string_index52=0\n    local decimals_string_index53=0\n\
    \    local decimals_string_index54=0\n    local decimals_string_index55=0\n}\n\
    \ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n\
    \    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_number_index=0\n  local trunc_number_index2=0\n\
    \  local trunc_number_index3=0\n  local trunc_number_index4=0\n  local trunc_number_index5=0\n\
    \  local trunc_number_index6=0\n  local trunc_number_index7=0\n  local trunc_number_index8=0\n\
    \  local trunc_number_index9=0\n  local trunc_number_index10=0\n  local trunc_number_index11=0\n\
    \  local trunc_number_index12=0\n  local trunc_number_index13=0\n  local trunc_number_index14=0\n\
    \  local trunc_number_index15=0\n  local trunc_number_index16=0\n  local trunc_number_index17=0\n\
    \  local trunc_number_index18=0\n  local trunc_number_index19=0\n  local trunc_number_index20=0\n\
    \  local trunc_number_index21=0\n  local trunc_number_index22=0\n  local trunc_number_index23=0\n\
    \  local trunc_number_index24=0\n  local trunc_number_index25=0\n  local trunc_number_index26=0\n\
    \  local trunc_number_index27=0\n  local trunc_number_index28=0\n  local trunc_number_index29=0\n\
    \  local trunc_number_index30=0\n  local trunc_number_index31=0\n  local trunc_number_index32=0\n\
    \  local trunc_number_index33=0\n  local trunc_number_index34=0\n  local trunc_number_index35=0\n\
    \  local trunc_number_index36=0\n  local trunc_number_index37=0\n  local trunc_number_index38=0\n\
    \  local trunc_number_index39=0\n  local trunc_number_index40=0\n  local trunc_number_index41=0\n\
    \  local trunc_number_index42=0\n  local trunc_number_index43=0\n  local trunc_number_index44=0\n\
    \  local trunc_number_index45=0\n  local trunc_number_index46=0\n  local trunc_number_index47=0\n\
    \  local trunc_number_index48=0\n  local trunc_number_index49=0\n  local trunc_number_index50=0\n\
    \  local trunc_number_index51=0\n  local trunc_number_index52=0\n  local trunc_number_index53=0\n\
    \  local trunc_number_index54=0\n  local trunc_number_index55=0\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimal\n  while [ $number -gt\
    \ 0 ]; do\n    decimal=$((10#$number % 10))\n    decimals=$((decimals + 1))\n\
    \    integer=$((integer + decimal))\n    number=$((number / 10))\n  done\n  decimal=$((10#$number\
    \ % 10))\n  decimals=$((decimals + 1))\n  integer=$((integer + decimal))\n  remainder=$((10#$number\
    \ % 1))\n  echo \"$integer\"\n  echo \"$decimals\"\n  echo \"$remainder\"\n}\n\
    \ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n\
    \    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphp9crvx3.sh: line 14: [: 3.5: integer expression expected

    /tmp/tmphp9crvx3.sh: line 20: 10#3.5 % 10: syntax error: invalid arithmetic operator
    (error token is ".5 % 10")

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local truncate_part\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_part_count\n\
    \  local truncate_part_count\n  local truncate_part_count\n  local truncate_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local trunc_number=0\n    local trunc_decimals=0\n    local\
    \ trunc_number_index=0\n    local trunc_decimals_index=0\n    local trunc_number_index2=0\n\
    \    local trunc_decimals_index2=0\n    local trunc_number_index3=0\n    local\
    \ trunc_decimals_index3=0\n    local trunc_number_index4=0\n    local trunc_decimals_index4=0\n\
    \    local trunc_number_index5=0\n    local trunc_decimals_index5=0\n    local\
    \ trunc_number_index6=0\n    local trunc_decimals_index6=0\n    local trunc_number_index7=0\n\
    \    local trunc_decimals_index7=0\n    local trunc_number_index8=0\n    local\
    \ trunc_decimals_index8=0\n    local trunc_number_index9=0\n    local trunc_decimals_index9=0\n\
    \    local trunc_number_index10=0\n    local trunc_decimals_index10=0\n    local\
    \ trunc_number_index11=0\n    local trunc_decimals_index11=0\n    local trunc_number_index12=0\n\
    \    local trunc_decimals_index12=0\n    local trunc_number_index13=0\n    local\
    \ trunc_decimals_index13=0\n    local trunc_number_index14=0\n    local trunc_decimals_index14=0\n\
    \    local trunc_number_index15=0\n    local trunc_decimals_index15=0\n    local\
    \ trunc_number_index16=0\n    local trunc_decimals_index16=0\n    local trunc_number_index17=0\n\
    \    local trunc_decimals_index17=0\n    local trunc_number_index18=0\n    local\
    \ trunc_decimals_index18=0\n    local trunc_number_index19=0\n    local trunc_decimals_index19=0\n\
    \    local trunc_number_index20=0\n    local trunc_decimals_index20=0\n    local\
    \ trunc_number_index21=0\n    local trunc_decimals_index21=0\n    local trunc_number_index22=0\n\
    \    local trunc_decimals_index22=0\n    local trunc_number_index23=0\n    local\
    \ trunc_decimals_index23=0\n    local trunc_number_index24=0\n    local trunc_decimals_index24=0\n\
    \    local trunc_number_index25=0\n    local trunc_decimals_index25=0\n    local\
    \ trunc_number_index26=0\n    local trun\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimal=0\n  local decimals_string=\"\
    \"\n\n  while [ $number -gt 0 ]; do\n    decimal=$(( 10#$number % 10 ))\n    decimals_string=\"\
    $decimals_$decimal\"\n    decimal=$(( 10#$decimal / 10 ))\n    number=$(( 10#$number\
    \ / 10 ))\n  done\n\n  decimal=$(( 10#$decimal + 1 ))\n\n  while [ $decimal -gt\
    \ 0 ]; do\n    decimal=$(( 10#$decimal - 1 ))\n    decimals_string=\"$decimals_$decimal\"\
    \n  done\n\n  integer=$(( 10#$integer + 1 ))\n\n  while [ $integer -gt 0 ]; do\n\
    \    integer=$(( 10#$integer - 1 ))\n  done\n\n  remainder=$(( 10#$number % 10\
    \ ))\n\n  echo \"$decimals_string$remainder\"\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo3pap9fb.sh: line 16: [: 3.5: integer expression expected

    /tmp/tmpo3pap9fb.sh: line 36: 10#3.5 % 10 : syntax error: invalid arithmetic operator
    (error token is ".5 % 10 ")

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_string=\"\"\n  local truncate_string2=\"\
    \"\n  local truncate_string3=\"\"\n  local truncate_string4=\"\"\n  local truncate_string5=\"\
    \"\n  local truncate_string6=\"\"\n  local truncate_string7=\"\"\n  local truncate_string8=\"\
    \"\n  local truncate_string9=\"\"\n  local truncate_string10=\"\"\n  local truncate_string11=\"\
    \"\n  local truncate_string12=\"\"\n  local truncate_string13=\"\"\n  local truncate_string14=\"\
    \"\n  local truncate_string15=\"\"\n  local truncate_string16=\"\"\n  local truncate_string17=\"\
    \"\n  local truncate_string18=\"\"\n  local truncate_string19=\"\"\n  local truncate_string20=\"\
    \"\n  local truncate_string21=\"\"\n  local truncate_string22=\"\"\n  local truncate_string23=\"\
    \"\n  local truncate_string24=\"\"\n  local truncate_string25=\"\"\n  local truncate_string26=\"\
    \"\n  local truncate_string27=\"\"\n  local truncate_string28=\"\"\n  local truncate_string29=\"\
    \"\n  local truncate_string30=\"\"\n  local truncate_string31=\"\"\n  local truncate_string32=\"\
    \"\n  local truncate_string33=\"\"\n  local truncate_string34=\"\"\n  local truncate_string35=\"\
    \"\n  local truncate_string36=\"\"\n  local truncate_string37=\"\"\n  local truncate_string38=\"\
    \"\n  local truncate_string39=\"\"\n  local truncate_string40=\"\"\n  local truncate_string41=\"\
    \"\n  local truncate_string42=\"\"\n  local truncate_string43=\"\"\n  local truncate_string44=\"\
    \"\n  local truncate_string45=\"\"\n  local truncate_string46=\"\"\n  local truncate_string47=\"\
    \"\n  local truncate_string48=\"\"\n  local truncate_string49=\"\"\n  local truncate_string50=\"\
    \"\n  local truncate_string51=\"\"\n  local truncate_string52=\"\"\n  local truncate_string53=\"\
    \"\n  local truncate_string54=\"\"\n  local truncate_string55=\"\"\n  local truncate_string56=\"\
    \"\n  local truncate_string57=\"\"\n  local truncate_string58=\"\"\n  local truncate_string59=\"\
    \"\n  local truncate_string60=\"\"\n  local truncate_string61=\"\"\n  local truncate_string62\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local trunc_number\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n  local trunc_number_index\n\
    \  local trunc_number_index\n  local trunc_number_index\n\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimal=0\n  local digits=0\n\
    \  local decimals_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local digits_string=\"\"\n\n  while [ \"$number\"\
    \ -gt 0 ]; do\n    decimals=$(( decimals + 1 ))\n    integer=$(( integer + number\
    \ % 10 ))\n    number=$(( number / 10 ))\n  done\n\n  decimal=$(( decimals + 1\
    \ ))\n  integer=$(( integer + decimal ))\n  decimal=$(( decimal - 1 ))\n  decimal=$((\
    \ decimal - 1 ))\n\n  while [ \"$decimal\" -gt 0 ]; do\n    decimal=$(( decimal\
    \ - 1 ))\n    digits=$(( digits + 1 ))\n    decimal=$(( decimal - 1 ))\n    decimal=$((\
    \ decimal - 1 ))\n    decimals_string=$(( decimals_string + decimal ))\n  done\n\
    \n  while [ \"$integer\" -gt 0 ]; do\n    integer=$(( integer - 1 ))\n    digits=$((\
    \ digits + 1 ))\n    integer=$(( integer - 1 ))\n    integer=$(( integer - 1 ))\n\
    \    integer_string=$(( integer_string + integer ))\n  done\n\n  while [ \"$remainder\"\
    \ -gt 0 ]; do\n    remainder=$(( remainder - 1 ))\n    digits=$(( digits + 1 ))\n\
    \    remainder=$(( remainder - 1 ))\n    remainder=$(( remainder - 1 ))\n    remainder_string=$((\
    \ remainder_string + remainder ))\n  done\n\n  decimal=$(( decimal - 1 ))\n  decimal=$((\
    \ decimal - 1 ))\n  decimal=$(( decimal - 1 ))\n  decimal=$(( decimal - 1 ))\n\
    \  decimal=$(( decimal - 1 ))\n  decimal=$(( decimal - 1 ))\n  decimal=$(( decimal\
    \ - 1 ))\n  decimal=$(( decimal - 1 ))\n  decimal=$(( decimal - 1 ))\n  decimal=$((\
    \ decimal - 1 ))\n  decimal=$(( decimal - 1 ))\n  decimal=$(( decimal - 1 ))\n\
    \  decimal=$(( decimal - 1 ))\n  decimal=$(( decimal - 1 ))\n  decimal=$(( decimal\
    \ - 1 ))\n  decimal=$(( decimal - 1 ))\n  decimal=$(( decimal - 1 ))\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptx7sh4o6.sh: line 21: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local truncate_part\n  local truncate_part_str\n  local truncate_part_int\n\
    \  local truncate_part_dec\n  local truncate_part_dec_int truncate_part_dec_str\n\
    \  local truncate_part_dec_int\n  local truncate_part_dec_dec\n  local truncate_part_dec_dec_int\
    \ truncate_part_dec_dec_str\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_dec_int\
    \ truncate_part_dec_dec_dec_str\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_dec_int\
    \ truncate_part_dec_dec_dec_str\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_dec_int\
    \ truncate_part_dec_dec_dec_str\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_dec_int\
    \ truncate_part_dec_dec_dec_str\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_dec_int\
    \ truncate_part_dec_dec_dec_str\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string2=\"\"\n  local decimals_string3=\"\
    \"\n  local decimals_string4=\"\"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\
    \"\n  local decimals_string7=\"\"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\
    \"\n  local decimals_string10=\"\"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\
    \"\n  local decimals_string13=\"\"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\
    \"\n  local decimals_string16=\"\"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\
    \"\n  local decimals_string19=\"\"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\
    \"\n  local decimals_string22=\"\"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\
    \"\n  local decimals_string25=\"\"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\
    \"\n  local decimals_string28=\"\"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\
    \"\n  local decimals_string31=\"\"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\
    \"\n  local decimals_string34=\"\"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\
    \"\n  local decimals_string37=\"\"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\
    \"\n  local decimals_string40=\"\"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\
    \"\n  local decimals_string43=\"\"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\
    \"\n  local decimals_string46=\"\"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\
    \"\n  local decimals_string49=\"\"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\
    \"\n  local decimals_string52=\"\"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\
    \"\n  local decimals_string55=\"\"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\
    \"\n  local decimals_string58=\"\"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\
    \"\n  local decimals_string61=\"\"\n  local decimals_string62=\"\"\n  local decimals_string\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local decimals_str=\"\"\n    local trunc_number=0\n    local\
    \ trunc_number_str=\"\"\n    local trunc_number_str_decimals=0\n    local trunc_number_str_decimals_str=\"\
    \"\n    local trunc_number_str_decimals_str_decimals=0\n    local trunc_number_str_decimals_str_decimals_str=\"\
    \"\n    local trunc_number_str_decimals_str_decimals_str_decimals=0\n    local\
    \ trunc_number_str_decimals_str_decimals_str_decimals_str=\"\"\n    local trunc_number_str_decimals_str_decimals_str_decimals_str_decimals=0\n\
    \    local trunc_number_str_decimals_str_decimals_str_decimals_str_decimals_str=\"\
    \"\n    local trunc_number_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals=0\n\
    \    local trunc_number_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str=\"\
    \"\n    local trunc_number_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals=0\n\
    \    local trunc_number_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str=\"\
    \"\n    local trunc_number_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str=\"\
    \"\n    local trunc_number_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals=0\n\
    \    local trunc_number_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str=\"\
    \"\n    local trunc_number_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals=0\n\
    \    local trunc_number_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str=\"\
    \"\n    local trunc_number_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str_decimals_str\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local trunc_number=0\n  local trunc_number_string=\"\
    \"\n\n  while [[ $number -gt 0 ]]; do\n    trunc_number_string=$((trunc_number_string+$number%1))\n\
    \    number=$((number/1))\n    decimals=$((decimals+1))\n  done\n\n  trunc_number_string=$((trunc_number_string+$number))\n\
    \n  if [[ $decimals -gt 0 ]]; then\n    decimals_string=\".${decimals_string}\"\
    \n  fi\n\n  echo \"$trunc_number_string$decimals_string\"\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpiicuwp7z.sh: line 15: [[: 3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    /tmp/tmpiicuwp7z.sh: line 21: trunc_number_string+3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local truncate_part\n  local truncate_part_num\n  local truncate_part_num2\n\
    \  local truncate_part_num3\n  local truncate_part_num4\n  local truncate_part_num5\n\
    \  local truncate_part_num6\n  local truncate_part_num7\n  local truncate_part_num8\n\
    \  local truncate_part_num9\n  local truncate_part_num10\n  local truncate_part_num11\n\
    \  local truncate_part_num12\n  local truncate_part_num13\n  local truncate_part_num14\n\
    \  local truncate_part_num15\n  local truncate_part_num16\n  local truncate_part_num17\n\
    \  local truncate_part_num18\n  local truncate_part_num19\n  local truncate_part_num20\n\
    \  local truncate_part_num21\n  local truncate_part_num22\n  local truncate_part_num23\n\
    \  local truncate_part_num24\n  local truncate_part_num25\n  local truncate_part_num26\n\
    \  local truncate_part_num27\n  local truncate_part_num28\n  local truncate_part_num29\n\
    \  local truncate_part_num30\n  local truncate_part_num31\n  local truncate_part_num32\n\
    \  local truncate_part_num33\n  local truncate_part_num34\n  local truncate_part_num35\n\
    \  local truncate_part_num36\n  local truncate_part_num37\n  local truncate_part_num38\n\
    \  local truncate_part_num39\n  local truncate_part_num40\n  local truncate_part_num41\n\
    \  local truncate_part_num42\n  local truncate_part_num43\n  local truncate_part_num44\n\
    \  local truncate_part_num45\n  local truncate_part_num46\n  local truncate_part_num47\n\
    \  local truncate_part_num48\n  local truncate_part_num49\n  local truncate_part_num50\n\
    \  local truncate_part_num51\n  local truncate_part_num52\n  local truncate_part_num53\n\
    \  local truncate_part_num54\n  local truncate_part_num55\n  local truncate_part_num56\n\
    \  local truncate_part_num57\n  local truncate_part_num58\n  local truncate_part_num59\n\
    \  local truncate_part_num60\n  local truncate_part_num61\n  local truncate_part_num62\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local decimals_left=0\n    local trunc_number=0\n    local trunc_number_index=0\n\
    \    local trunc_number_index2=0\n    local trunc_number_index3=0\n    local trunc_number_index4=0\n\
    \    local trunc_number_index5=0\n    local trunc_number_index6=0\n    local trunc_number_index7=0\n\
    \    local trunc_number_index8=0\n    local trunc_number_index9=0\n    local trunc_number_index10=0\n\
    \    local trunc_number_index11=0\n    local trunc_number_index12=0\n    local\
    \ trunc_number_index13=0\n    local trunc_number_index14=0\n    local trunc_number_index15=0\n\
    \    local trunc_number_index16=0\n    local trunc_number_index17=0\n    local\
    \ trunc_number_index18=0\n    local trunc_number_index19=0\n    local trunc_number_index20=0\n\
    \    local trunc_number_index21=0\n    local trunc_number_index22=0\n    local\
    \ trunc_number_index23=0\n    local trunc_number_index24=0\n    local trunc_number_index25=0\n\
    \    local trunc_number_index26=0\n    local trunc_number_index27=0\n    local\
    \ trunc_number_index28=0\n    local trunc_number_index29=0\n    local trunc_number_index30=0\n\
    \    local trunc_number_index31=0\n    local trunc_number_index32=0\n    local\
    \ trunc_number_index33=0\n    local trunc_number_index34=0\n    local trunc_number_index35=0\n\
    \    local trunc_number_index36=0\n    local trunc_number_index37=0\n    local\
    \ trunc_number_index38=0\n    local trunc_number_index39=0\n    local trunc_number_index40=0\n\
    \    local trunc_number_index41=0\n    local trunc_number_index42=0\n    local\
    \ trunc_number_index43=0\n    local trunc_number_index44=0\n    local trunc_number_index45=0\n\
    \    local trunc_number_index46=0\n    local trunc_number_index47=0\n    local\
    \ trunc_number_index48=0\n    local trunc_number_index49=0\n    local trunc_number_index50=0\n\
    \    local trunc_number_index51=0\n    local trunc_number_index52=0\n    local\
    \ trunc_number_index53=0\n    local trunc_number_index54=0\n    \n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local trunc_number\n  local trunc_number_in_decimals\n\
    \  local trunc_number_string\n  local trunc_number_string_in_decimals\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n  local trunc_number_string_in_digits\n  local\
    \ trunc_number_string_in_digits\n\n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local integer=0\n    local remainder=0\n    local decimals_string=\"\
    \"\n\n    if [[ $number == *\".\"* ]]; then\n        decimals=${#number}\n   \
    \     integer=${number%.*}\n        remainder=${number#*.}\n    else\n       \
    \ decimals=0\n        integer=${number}\n        remainder=0\n    fi\n\n    if\
    \ [[ $integer == *\".\"* ]]; then\n        decimals=${#integer}\n        integer=${integer%.*}\n\
    \        remainder=${integer#*.}\n    fi\n\n    if [[ $remainder == *\".\"* ]];\
    \ then\n        decimals=${#remainder}\n        remainder=${remainder%.*}\n  \
    \  fi\n\n    if [[ $decimals -gt 0 ]]; then\n        decimals_string=${decimals}\n\
    \    fi\n\n    echo \"$integer $decimals_string\"\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local truncate_part\n  local truncate_part_int\n  local truncate_part_dec\n\
    \  local truncate_part_dec_int truncate_part_dec_int\n  local truncate_part_dec_dec\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_dec\n  local\
    \ truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n  local truncate_part_dec_dec_dec_int\
    \ truncate_part_dec_dec_dec_int\n  local truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n\
    \  local truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n  local\
    \ truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n  local truncate_part_dec_dec_dec_int\
    \ truncate_part_dec_dec_dec_int\n  local truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n\
    \  local truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n  local\
    \ truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n  local truncate_part_dec_dec_dec_int\
    \ truncate_part_dec_dec_dec_int\n  local truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n\
    \  local truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n  local\
    \ truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n  local truncate_part_dec_dec_dec_int\
    \ truncate_part_dec_dec_dec_int\n  local truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n\
    \  local truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n  local\
    \ truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n  local truncate_part_dec_dec_dec_int\
    \ truncate_part_dec_dec_dec_int\n  local truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n\
    \  local truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n  local\
    \ truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n  local truncate_part_dec_dec_dec_int\
    \ truncate_part_dec_dec_dec_int\n  local truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n\
    \  local truncate_part_dec_dec_dec_int truncate_part_dec_dec_dec_int\n  local\
    \ truncate_part_dec_dec_dec\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n\
    \  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\
    \  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n\
    \  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n\
    \  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n\
    \  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string2=\"\"\n  local decimals_string3=\"\
    \"\n  local decimals_string4=\"\"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\
    \"\n  local decimals_string7=\"\"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\
    \"\n  local decimals_string10=\"\"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\
    \"\n  local decimals_string13=\"\"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\
    \"\n  local decimals_string16=\"\"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\
    \"\n  local decimals_string19=\"\"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\
    \"\n  local decimals_string22=\"\"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\
    \"\n  local decimals_string25=\"\"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\
    \"\n  local decimals_string28=\"\"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\
    \"\n  local decimals_string31=\"\"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\
    \"\n  local decimals_string34=\"\"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\
    \"\n  local decimals_string37=\"\"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\
    \"\n  local decimals_string40=\"\"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\
    \"\n  local decimals_string43=\"\"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\
    \"\n  local decimals_string46=\"\"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\
    \"\n  local decimals_string49=\"\"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\
    \"\n  local decimals_string52=\"\"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\
    \"\n  local decimals_string55=\"\"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\
    \"\n  local decimals_string58=\"\"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\
    \"\n  local decimals_string61=\"\"\n  local decimals_string62=\"\"\n  local decimals_string\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimals_string=\"\"\n  local\
    \ integer_string=\"\"\n\n  while [ $number -gt 0 ]; do\n    remainder=$((number\
    \ % 1))\n    decimals=$((decimals + 1))\n    integer=$((integer + 1))\n    decimals_string=$((decimals_string\
    \ + $decimals))\n    integer_string=$((integer_string + $integer))\n    number=$((number\
    \ - remainder))\n  done\n\n  echo $decimals_string\n  echo $integer_string\n}\n\
    \ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n\
    \    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphi9jvsl9.sh: line 16: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_str=\"\"\n  local trunc_number=\"\"\n  local trunc_number_str=\"\
    \"\n  local trunc_number_str_decimals=\"\"\n  local trunc_number_str_decimals_str=\"\
    \"\n  local trunc_number_str_decimals_str_last=\"\"\n  local trunc_number_str_decimals_str_last_str=\"\
    \"\n  local trunc_number_str_decimals_str_last_str_last=\"\"\n  local trunc_number_str_decimals_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_decimals_str_last_str_last_str_last=\"\"\n  local\
    \ trunc_number_str_decimals_str_last_str_last_str_last_str=\"\"\n  local trunc_number_str_decimals_str_last_str_last_str_last_str_last=\"\
    \"\n  local trunc_number_str_decimals_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_decimals_str_last_str_last_str_last_str_last_str_last=\"\
    \"\n  local trunc_number_str_decimals_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_decimals_str_last_str_last_str_last_str_last_str_last_str_last=\"\
    \"\n  local trunc_number_str_decimals_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_decimals_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_decimals_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_decimals_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_decimals_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_decimals_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_decimals_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_decimals_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_decimals_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str_last_str=\"\
    \"\n  local trunc_number_str_decimals_str_last_str_last_str_last_str_last_\n}\n\
    \ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n\
    \    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string_length=0\n  local decimals_string_length_string=\"\
    \"\n  local decimals_string_length_string_length=0\n  local decimals_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length=0\n  local decimals_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local integer=0\n    local remainder=0\n    local decimals_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n    local decimal_string=\"\"\n    local integer_string=\"\"\n    \n}\n\n\
    candidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_string=\"\"\n  local truncate_string2=\"\
    \"\n  local truncate_string3=\"\"\n  local truncate_string4=\"\"\n  local truncate_string5=\"\
    \"\n  local truncate_string6=\"\"\n  local truncate_string7=\"\"\n  local truncate_string8=\"\
    \"\n  local truncate_string9=\"\"\n  local truncate_string10=\"\"\n  local truncate_string11=\"\
    \"\n  local truncate_string12=\"\"\n  local truncate_string13=\"\"\n  local truncate_string14=\"\
    \"\n  local truncate_string15=\"\"\n  local truncate_string16=\"\"\n  local truncate_string17=\"\
    \"\n  local truncate_string18=\"\"\n  local truncate_string19=\"\"\n  local truncate_string20=\"\
    \"\n  local truncate_string21=\"\"\n  local truncate_string22=\"\"\n  local truncate_string23=\"\
    \"\n  local truncate_string24=\"\"\n  local truncate_string25=\"\"\n  local truncate_string26=\"\
    \"\n  local truncate_string27=\"\"\n  local truncate_string28=\"\"\n  local truncate_string29=\"\
    \"\n  local truncate_string30=\"\"\n  local truncate_string31=\"\"\n  local truncate_string32=\"\
    \"\n  local truncate_string33=\"\"\n  local truncate_string34=\"\"\n  local truncate_string35=\"\
    \"\n  local truncate_string36=\"\"\n  local truncate_string37=\"\"\n  local truncate_string38=\"\
    \"\n  local truncate_string39=\"\"\n  local truncate_string40=\"\"\n  local truncate_string41=\"\
    \"\n  local truncate_string42=\"\"\n  local truncate_string43=\"\"\n  local truncate_string44=\"\
    \"\n  local truncate_string45=\"\"\n  local truncate_string46=\"\"\n  local truncate_string47=\"\
    \"\n  local truncate_string48=\"\"\n  local truncate_string49=\"\"\n  local truncate_string50=\"\
    \"\n  local truncate_string51=\"\"\n  local truncate_string52=\"\"\n  local truncate_string53=\"\
    \"\n  local truncate_string54=\"\"\n  local truncate_string55=\"\"\n  local truncate_string56=\"\
    \"\n  local truncate_string57=\"\"\n  local truncate_string58=\"\"\n  local truncate_string59=\"\
    \"\n  local truncate_string60=\"\"\n  local truncate_string61=\"\"\n  local truncate_string62\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_left=0\n  local trunc_number=0\n  local trunc_number_index=0\n\
    \  local trunc_number_index2=0\n  local trunc_number_index3=0\n  local trunc_number_index4=0\n\
    \  local trunc_number_index5=0\n  local trunc_number_index6=0\n  local trunc_number_index7=0\n\
    \  local trunc_number_index8=0\n  local trunc_number_index9=0\n  local trunc_number_index10=0\n\
    \  local trunc_number_index11=0\n  local trunc_number_index12=0\n  local trunc_number_index13=0\n\
    \  local trunc_number_index14=0\n  local trunc_number_index15=0\n  local trunc_number_index16=0\n\
    \  local trunc_number_index17=0\n  local trunc_number_index18=0\n  local trunc_number_index19=0\n\
    \  local trunc_number_index20=0\n  local trunc_number_index21=0\n  local trunc_number_index22=0\n\
    \  local trunc_number_index23=0\n  local trunc_number_index24=0\n  local trunc_number_index25=0\n\
    \  local trunc_number_index26=0\n  local trunc_number_index27=0\n  local trunc_number_index28=0\n\
    \  local trunc_number_index29=0\n  local trunc_number_index30=0\n  local trunc_number_index31=0\n\
    \  local trunc_number_index32=0\n  local trunc_number_index33=0\n  local trunc_number_index34=0\n\
    \  local trunc_number_index35=0\n  local trunc_number_index36=0\n  local trunc_number_index37=0\n\
    \  local trunc_number_index38=0\n  local trunc_number_index39=0\n  local trunc_number_index40=0\n\
    \  local trunc_number_index41=0\n  local trunc_number_index42=0\n  local trunc_number_index43=0\n\
    \  local trunc_number_index44=0\n  local trunc_number_index45=0\n  local trunc_number_index46=0\n\
    \  local trunc_number_index47=0\n  local trunc_number_index48=0\n  local trunc_number_index49=0\n\
    \  local trunc_number_index50=0\n  local trunc_number_index51=0\n  local trunc_number_index52=0\n\
    \  local trunc_number_index53=0\n  local trunc_number_index54=0\n  \n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local truncate_number\n  local truncate_number_index\n  local\
    \ truncate_number_length\n  local truncate_number_length_index\n  local truncate_number_length\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_length_index\n\
    \  local truncate_number_length_index\n  local truncate_number_\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local integer\n  local remainder\n  local truncate_result\n\
    \n  decimal=$(( 10#$number % 10 ))\n  integer=$(( 10#$number / 10 ))\n  remainder=$((\
    \ 10#$number % 10 ))\n\n  while (( 10#$integer > 0 )) ; do\n    decimal=$(( 10#$decimal\
    \ + 1 ))\n    integer=$(( 10#$integer - 1 ))\n  done\n\n  truncate_result=$decimal\n\
    \  if (( 10#$remainder > 0 )) ; then\n    truncate_result=$truncate_result$remainder\n\
    \  fi\n\n  echo $truncate_result\n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd9vi71hq.sh: line 16: 10#3.5 % 10 : syntax error: invalid arithmetic
    operator (error token is ".5 % 10 ")

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_digits=0\n  local\
    \ trunc_digits_left=0\n  local trunc_digits_right=0\n  local trunc_digits_left_shift=0\n\
    \  local trunc_digits_right_shift=0\n  local trunc_digits_left_mask=0\n  local\
    \ trunc_digits_right_mask=0\n  local trunc_digits_left_mask2=0\n  local trunc_digits_right_mask2=0\n\
    \  local trunc_digits_left_mask3=0\n  local trunc_digits_right_mask3=0\n  local\
    \ trunc_digits_left_mask4=0\n  local trunc_digits_right_mask4=0\n  local trunc_digits_left_mask5=0\n\
    \  local trunc_digits_right_mask5=0\n  local trunc_digits_left_mask6=0\n  local\
    \ trunc_digits_right_mask6=0\n  local trunc_digits_left_mask7=0\n  local trunc_digits_right_mask7=0\n\
    \  local trunc_digits_left_mask8=0\n  local trunc_digits_right_mask8=0\n  local\
    \ trunc_digits_left_mask9=0\n  local trunc_digits_right_mask9=0\n  local trunc_digits_left_mask10=0\n\
    \  local trunc_digits_right_mask10=0\n  local trunc_digits_left_mask11=0\n  local\
    \ trunc_digits_right_mask11=0\n  local trunc_digits_left_mask12=0\n  local trunc_digits_right_mask12=0\n\
    \  local trunc_digits_left_mask13=0\n  local trunc_digits_right_mask13=0\n  local\
    \ trunc_digits_left_mask14=0\n  local trunc_digits_right_mask14=0\n  local trunc_digits_left_mask15=0\n\
    \  local trunc_digits_right_mask15=0\n  local trunc_digits_left_mask16=0\n  local\
    \ trunc_digits_right_mask16=0\n  local trunc_digits_left_mask17=0\n  local trunc_digits_right_mask17=0\n\
    \  local trunc_digits_left_mask18=0\n  local trunc_digits_right_mask18=0\n  local\
    \ trunc_digits_left_mask19=0\n  local trunc_digits_right_mask19=0\n  local trunc_digits_left_mask20=0\n\
    \  local trunc_digits_right_mask20=0\n  \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string_length=0\n  local decimals_string_length_string=\"\
    \"\n  local decimals_string_length_string_len=0\n  local decimals_string_length_string_len_string=\"\
    \"\n  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len_string=\"\
    \"\n  local decimals_string_length_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len=0\n  local decimals_string_length_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string=\"\"\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len_string_len_string_len=0\n\
    \  local decimals_string_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal_part\n  local integer_part\n  local remainder\n\n  integer_part=$((\
    \ number % 1 ))\n  decimals=$(( number % 1 ))\n  decimal_part=$(( number % 1 ))\n\
    \n  if (( decimals > 0 )) ; then\n    remainder=$(( number % 1 ))\n  else\n  \
    \  remainder=0\n  fi\n\n  echo \"$integer_part$decimal_part$remainder\"\n}\n\n\
    candidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptibyazq5.sh: line 15: 3.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local decimal=0\n  local truncate_decimal=0\n  local truncate_integer=0\n\
    \  local truncate_number=0\n\n  while [ $number -gt 0 ]; do\n    decimal=$(( 10#$number\
    \ % 10 ))\n    decimals=$(( decimals + 1 ))\n    integer=$(( 10#$number / 10 ))\n\
    \    number=$(( number / 10 ))\n  done\n\n  if [ $decimals -gt 0 ]; then\n   \
    \ truncate_decimal=$(( 10#$decimals % 10 ))\n    truncate_number=$(( 10#$integer\
    \ + $truncate_decimal ))\n  else\n    truncate_decimal=0\n    truncate_number=$((\
    \ 10#$integer ))\n  fi\n\n  echo \"$truncate_number\"\n}\n\ncandidate() {\n  \
    \  truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpljiu2yxp.sh: line 17: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local integer=0\n    local remainder=0\n    local decimal=0\n\
    \    local result=0\n\n    while [ $number -gt 0 ]; do\n        remainder=$((number\
    \ % 1))\n        integer=$((integer + remainder))\n        decimal=$((decimal\
    \ + remainder * 10))\n        number=$((number / 10))\n    done\n\n    decimals=$((decimal))\n\
    \    integer=$((integer))\n\n    if [ $decimals -gt 0 ]; then\n        result=$((decimals\
    \ + integer))\n    else\n        result=$((integer))\n    fi\n\n    echo \"$result\"\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1ol8s4tr.sh: line 16: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local decimals_left=0\n    local truncate_decimals=0\n    local\
    \ truncate_decimals_left=0\n    local truncate_decimals_left_factor=1\n    local\
    \ truncate_decimals_left_factor_base=1\n    local truncate_decimals_left_factor_power=1\n\
    \    local truncate_decimals_left_factor_power2=1\n    local truncate_decimals_left_factor_power3=1\n\
    \    local truncate_decimals_left_factor_power4=1\n    local truncate_decimals_left_factor_power5=1\n\
    \    local truncate_decimals_left_factor_power6=1\n    local truncate_decimals_left_factor_power7=1\n\
    \    local truncate_decimals_left_factor_power8=1\n    local truncate_decimals_left_factor_power9=1\n\
    \    local truncate_decimals_left_factor_power10=1\n    local truncate_decimals_left_factor_power11=1\n\
    \    local truncate_decimals_left_factor_power12=1\n    local truncate_decimals_left_factor_power13=1\n\
    \    local truncate_decimals_left_factor_power14=1\n    local truncate_decimals_left_factor_power15=1\n\
    \    local truncate_decimals_left_factor_power16=1\n    local truncate_decimals_left_factor_power17=1\n\
    \    local truncate_decimals_left_factor_power18=1\n    local truncate_decimals_left_factor_power19=1\n\
    \    local truncate_decimals_left_factor_power20=1\n    local truncate_decimals_left_factor_power21=1\n\
    \    local truncate_decimals_left_factor_power22=1\n    local truncate_decimals_left_factor_power23=1\n\
    \    local truncate_decimals_left_factor_power24=1\n    local truncate_decimals_left_factor_power25=1\n\
    \    local truncate_decimals_left_factor_power26=1\n    local truncate_decimals_left_factor_power27=1\n\
    \    local truncate_decimals_left_factor_power28=1\n    local truncate_decimals_left_factor_power29=1\n\
    \    local truncate_decimals_left_factor_power30=1\n    local truncate_decimals_left_factor_power31=1\n\
    \    local truncate_decimals_left_factor_power32=1\n    local truncate_decimals_left_factor_power33=1\n\
    \    local truncate_decimals_left_factor_power34=1\n    local truncate_decimals_left_factor_power35=1\n\
    \    local truncate_decimals_left_factor_power36=1\n    local truncate_decimals_left_factor_power37=1\n\
    \    local truncate_decimals_left_factor_power38=1\n\n}\n\ncandidate() {\n   \
    \ truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_number_index=0\n  local trunc_number_index2=0\n\
    \  local trunc_number_index3=0\n  local trunc_number_index4=0\n  local trunc_number_index5=0\n\
    \  local trunc_number_index6=0\n  local trunc_number_index7=0\n  local trunc_number_index8=0\n\
    \  local trunc_number_index9=0\n  local trunc_number_index10=0\n  local trunc_number_index11=0\n\
    \  local trunc_number_index12=0\n  local trunc_number_index13=0\n  local trunc_number_index14=0\n\
    \  local trunc_number_index15=0\n  local trunc_number_index16=0\n  local trunc_number_index17=0\n\
    \  local trunc_number_index18=0\n  local trunc_number_index19=0\n  local trunc_number_index20=0\n\
    \  local trunc_number_index21=0\n  local trunc_number_index22=0\n  local trunc_number_index23=0\n\
    \  local trunc_number_index24=0\n  local trunc_number_index25=0\n  local trunc_number_index26=0\n\
    \  local trunc_number_index27=0\n  local trunc_number_index28=0\n  local trunc_number_index29=0\n\
    \  local trunc_number_index30=0\n  local trunc_number_index31=0\n  local trunc_number_index32=0\n\
    \  local trunc_number_index33=0\n  local trunc_number_index34=0\n  local trunc_number_index35=0\n\
    \  local trunc_number_index36=0\n  local trunc_number_index37=0\n  local trunc_number_index38=0\n\
    \  local trunc_number_index39=0\n  local trunc_number_index40=0\n  local trunc_number_index41=0\n\
    \  local trunc_number_index42=0\n  local trunc_number_index43=0\n  local trunc_number_index44=0\n\
    \  local trunc_number_index45=0\n  local trunc_number_index46=0\n  local trunc_number_index47=0\n\
    \  local trunc_number_index48=0\n  local trunc_number_index49=0\n  local trunc_number_index50=0\n\
    \  local trunc_number_index51=0\n  local trunc_number_index52=0\n  local trunc_number_index53=0\n\
    \  local trunc_number_index54=0\n  local trunc_number_index55=0\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimals_tmp\n  local integer_tmp\n\
    \  local remainder_tmp\n  local decimals_tmp2\n  local integer_tmp2\n  local remainder_tmp2\n\
    \  local decimals_tmp3\n  local integer_tmp3\n  local remainder_tmp3\n  local\
    \ decimals_tmp4\n  local integer_tmp4\n  local remainder_tmp4\n  local decimals_tmp5\n\
    \  local integer_tmp5\n  local remainder_tmp5\n  local decimals_tmp6\n  local\
    \ integer_tmp6\n  local remainder_tmp6\n  local decimals_tmp7\n  local integer_tmp7\n\
    \  local remainder_tmp7\n  local decimals_tmp8\n  local integer_tmp8\n  local\
    \ remainder_tmp8\n  local decimals_tmp9\n  local integer_tmp9\n  local remainder_tmp9\n\
    \  local decimals_tmp10\n  local integer_tmp10\n  local remainder_tmp10\n  local\
    \ decimals_tmp11\n  local integer_tmp11\n  local remainder_tmp11\n  local decimals_tmp12\n\
    \  local integer_tmp12\n  local remainder_tmp12\n  local decimals_tmp13\n  local\
    \ integer_tmp13\n  local remainder_tmp13\n  local decimals_tmp14\n  local integer_tmp14\n\
    \  local remainder_tmp14\n  local decimals_tmp15\n  local integer_tmp15\n  local\
    \ remainder_tmp15\n  local decimals_tmp16\n  local integer_tmp16\n  local remainder_tmp16\n\
    \  local decimals_tmp17\n  local integer_tmp17\n  local remainder_tmp17\n  local\
    \ decimals_tmp18\n  local integer_tmp18\n  local remainder_tmp18\n  local decimals_tmp19\n\
    \  local integer_tmp19\n  local remainder_tmp19\n  local decimals_tmp20\n  local\
    \ integer_tmp20\n  local remainder_tmp20\n  local decimals_tmp21\n  local integer_tmp21\n\
    \  local remainder_tmp21\n  local decimals_tmp22\n  local integer_tmp22\n  local\
    \ remainder_tmp22\n  local decimals_tmp23\n  local integer_tmp23\n  local remainder_tmp23\n\
    \  local decimals_tmp24\n  local integer_tmp24\n  local remainder_tmp24\n  local\
    \ decimals_tmp25\n  local integer_tmp25\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimal=0\n  local remainder_decimal=0\n\
    \  local decimals_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local remainder_decimal_string=\"\"\n  local\
    \ integer_string2=\"\"\n  local remainder_string2=\"\"\n  local decimal_string2=\"\
    \"\n  local remainder_decimal_string2=\"\"\n  local remainder_string3=\"\"\n \
    \ local decimal_string3=\"\"\n  local remainder_decimal_string3=\"\"\n  local\
    \ remainder_string4=\"\"\n  local decimal_string4=\"\"\n  local remainder_decimal_string4=\"\
    \"\n  local remainder_string5=\"\"\n  local decimal_string5=\"\"\n  local remainder_decimal_string5=\"\
    \"\n  local remainder_string6=\"\"\n  local decimal_string6=\"\"\n  local remainder_decimal_string6=\"\
    \"\n  local remainder_string7=\"\"\n  local decimal_string7=\"\"\n  local remainder_decimal_string7=\"\
    \"\n  local remainder_string8=\"\"\n  local decimal_string8=\"\"\n  local remainder_decimal_string8=\"\
    \"\n  local remainder_string9=\"\"\n  local decimal_string9=\"\"\n  local remainder_decimal_string9=\"\
    \"\n  local remainder_string10=\"\"\n  local decimal_string10=\"\"\n  local remainder_decimal_string10=\"\
    \"\n  local remainder_string11=\"\"\n  local decimal_string11=\"\"\n  local remainder_decimal_string11=\"\
    \"\n  local remainder_string12=\"\"\n  local decimal_string12=\"\"\n  local remainder_decimal_string12=\"\
    \"\n  local remainder_string13=\"\"\n  local decimal_string13=\"\"\n  local remainder_decimal_string13=\"\
    \"\n  local remainder_string14=\"\"\n  local decimal_string14=\"\"\n  local remainder_decimal_string14=\"\
    \"\n  local remainder_string15=\"\"\n  local decimal_string15=\"\"\n  local remainder_decimal_string15=\"\
    \"\n  local remainder_string16=\"\"\n  local decimal_string16=\"\"\n  local remainder_decimal_string16=\"\
    \"\n  local remainder_string17=\"\"\n  local decimal_string17=\"\"\n  local remainder_decimal_string17=\"\
    \"\n  local remainder_string18=\"\"\n  local decimal_string18=\"\"\n  local remainder_decimal_string18=\"\
    \"\n  local remainder_string19=\"\"\n  local decimal_string19=\"\"\n  local remainder_decimal_string19=\"\
    \"\n  local remainder_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local decimals_string=\"\"\n    local truncate_decimals=0\n\
    \    local truncate_decimals_string=\"\"\n    local truncate_decimals_string2=\"\
    \"\n    local truncate_decimals_string3=\"\"\n    local truncate_decimals_string4=\"\
    \"\n    local truncate_decimals_string5=\"\"\n    local truncate_decimals_string6=\"\
    \"\n    local truncate_decimals_string7=\"\"\n    local truncate_decimals_string8=\"\
    \"\n    local truncate_decimals_string9=\"\"\n    local truncate_decimals_string10=\"\
    \"\n    local truncate_decimals_string11=\"\"\n    local truncate_decimals_string12=\"\
    \"\n    local truncate_decimals_string13=\"\"\n    local truncate_decimals_string14=\"\
    \"\n    local truncate_decimals_string15=\"\"\n    local truncate_decimals_string16=\"\
    \"\n    local truncate_decimals_string17=\"\"\n    local truncate_decimals_string18=\"\
    \"\n    local truncate_decimals_string19=\"\"\n    local truncate_decimals_string20=\"\
    \"\n    local truncate_decimals_string21=\"\"\n    local truncate_decimals_string22=\"\
    \"\n    local truncate_decimals_string23=\"\"\n    local truncate_decimals_string24=\"\
    \"\n    local truncate_decimals_string25=\"\"\n    local truncate_decimals_string26=\"\
    \"\n    local truncate_decimals_string27=\"\"\n    local truncate_decimals_string28=\"\
    \"\n    local truncate_decimals_string29=\"\"\n    local truncate_decimals_string30=\"\
    \"\n    local truncate_decimals_string31=\"\"\n    local truncate_decimals_string32=\"\
    \"\n    local truncate_decimals_string33=\"\"\n    local truncate_decimals_string34=\"\
    \"\n    local truncate_decimals_string35=\"\"\n    local truncate_decimals_string36=\"\
    \"\n    local truncate_decimals_string37=\"\"\n    local truncate_decimals_string38=\"\
    \"\n    local truncate_decimals_string39=\"\"\n    local truncate_decimals_string40=\"\
    \"\n    local truncate_decimals_string41=\"\"\n    local truncate_decimals_string42=\"\
    \"\n    local truncate_decimals_string43=\"\"\n    local truncate_decimals_string44=\"\
    \"\n    local truncate_decimals_string45=\"\"\n    local truncate_decimals_string46=\"\
    \"\n    local truncate_decimals_string47=\"\"\n    local truncate_decimals_string48=\"\
    \"\n    local truncate_decimals_\n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ integer\n    local decimal\n    local decimals\n    local decimals_left\n  \
    \  local decimals_left_string\n    local decimals_left_string_reversed\n    local\
    \ decimals_left_string_reversed_reversed\n    local decimals_left_string_reversed_reversed_reversed\n\
    \    local decimals_left_string_reversed_reversed_reversed_reversed\n    local\
    \ decimals_left_string_reversed_reversed_reversed_reversed_reversed\n    local\
    \ decimals_left_string_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local decimals_left_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local decimals_left_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local decimals_left_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local decimals_left_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local decimals_left_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local decimals_left_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local decimals_left_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local decimals_left_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local decimals_left_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local decimals_left_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local decimals_left_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local decimals_left_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local decimals_left_string_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local decimals_string\n  local decimal_string\n  local decimal_string_index\n\
    \  local decimal_string_index\n  local decimal_string_length\n  local decimal_string_length_index\n\
    \  local decimal_string_length_index\n  local decimal_string_length\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length\n  local decimal_string_length_index\n  local decimal_string_length_index\n\
    \  local decimal_string_length_index\n  local decimal_string_length\n  local decimal_string_length_index\n\
    \  local decimal_string_length_index\n  local decimal_string_length_index\n  local\
    \ decimal_string_length\n\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_left=0\n  local trunc_number=0\n  local trunc_number_index=0\n\
    \  local trunc_number_length=0\n  local trunc_number_length_index=0\n  local trunc_number_length_value=0\n\
    \  local trunc_number_length_value_index=0\n  local trunc_number_length_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trunc_number_length_value_value_value=0\n\
    \  local trunc_number_length_value_value_index=0\n  local trun\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local decimal=0\n  local remainder=0\n  local decimals_string=\"\
    \"\n\n  while [ $number -gt 0 ]; do\n    decimal=$((10#$number % 10))\n    decimals=$((decimals\
    \ + 1))\n    integer=$((10#$number / 10))\n    remainder=$((10#$number % 10))\n\
    \    decimals_string=\"$decimals_$decimal\"\n    number=$((number / 10))\n  done\n\
    \n  echo \"$decimals_string\"\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqfu4xg1d.sh: line 16: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local integer=0\n    local remainder=0\n\n    while [ \"$number\"\
    \ -gt 0 ]; do\n        integer=$(( $integer + 1 ))\n        remainder=$(( $number\
    \ % 10 ))\n        decimals=$(( $decimals + 1 ))\n        number=$(( $number /\
    \ 10 ))\n    done\n\n    # If the number is negative, return negative integer\n\
    \    if [ \"$number\" -eq 0 ]; then\n        integer=$(( $integer - 1 ))\n   \
    \ fi\n\n    # If the number is too large, return 0\n    if [ \"$integer\" -gt\
    \ 9 ]; then\n        integer=0\n    fi\n\n    # If the number is too small, return\
    \ 0\n    if [ \"$integer\" -lt 1 ]; then\n        integer=0\n    fi\n\n    # If\
    \ the number is too large, return 0\n    if [ \"$decimals\" -gt 9 ]; then\n  \
    \      decimals=0\n    fi\n\n    # If the number is too small, return 0\n    if\
    \ [ \"$decimals\" -lt 1 ]; then\n        decimals=0\n    fi\n\n    # Return integer\
    \ and decimal parts\n    echo \"$integer\"\n    echo \"$decimals\"\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwv4sdevg.sh: line 14: [: 3.5: integer expression expected

    /tmp/tmpwv4sdevg.sh: line 22: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal_part\n  local integer_part\n  local remainder\n  local remainder_part\n\
    \  local remainder_part_count\n  local remainder_part_index\n  local remainder_part_count\n\
    \  local remainder_part_index\n  local remainder_part_count\n  local remainder_part_index\n\
    \  local remainder_part_count\n  local remainder_part_index\n  local remainder_part_count\n\
    \  local remainder_part_index\n  local remainder_part_count\n  local remainder_part_index\n\
    \  local remainder_part_count\n  local remainder_part_index\n  local remainder_part_count\n\
    \  local remainder_part_index\n  local remainder_part_count\n  local remainder_part_index\n\
    \  local remainder_part_count\n  local remainder_part_index\n  local remainder_part_count\n\
    \  local remainder_part_index\n  local remainder_part_count\n  local remainder_part_index\n\
    \  local remainder_part_count\n  local remainder_part_index\n  local remainder_part_count\n\
    \  local remainder_part_index\n  local remainder_part_count\n  local remainder_part_index\n\
    \  local remainder_part_count\n  local remainder_part_index\n  local remainder_part_count\n\
    \  local remainder_part_index\n  local remainder_part_count\n  local remainder_part_index\n\
    \  local remainder_part_count\n  local remainder_part_index\n  local remainder_part_count\n\
    \  local remainder_part_index\n  local remainder_part_count\n  local remainder_part_index\n\
    \  local remainder_part_count\n  local remainder_part_index\n  local remainder_part_count\n\
    \  local remainder_part_index\n  local remainder_part_count\n  local remainder_part_index\n\
    \  local remainder_part_count\n  local remainder_part_index\n  local remainder_part_count\n\
    \  local remainder_part_index\n  local remainder_part_count\n  local remainder_part_index\n\
    \  local remainder_part_count\n  local remainder_part_index\n  local remainder_part_count\n\
    \  local remainder_part_index\n  local remainder_part_count\n  local remainder_part_index\n\
    \  local remainder_part_count\n  local remainder_part_index\n  local remainder_part_count\n\
    \  local remainder_part_index\n  local remainder_part_count\n  local remainder_part_index\n\
    \  local remainder_part_count\n  local remainder_part_index\n  local remain\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local decimal\n    local decimalPart\n    local integerPart\n\
    \    local integerPartLength\n    local integerPartLengthRemainder\n    local\
    \ integerPartRemainder\n    local integerPartRemainderLength\n    local integerPartRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainder\n    local integerPartRemainderRemainderLength\n\
    \    local integerPartRemainderRemainderLengthRemainder\n    local integerPartRemainderRemainderRemainder\n\
    \    local integerPartRemainderRemainderRemainderLength\n    local integerPartRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainder\n    local integerPartRemainderRemainderRemainderRemainderLength\n\
    \    local integerPartRemainderRemainderRemainderRemainderLengthRemainder\n  \
    \  local integerPartRemainderRemainderRemainderRemainderRemainder\n    local integerPartRemainderRemainderRemainderRemainderRemainderLength\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderLength\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderLength\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemain\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimals_string=\"\"\n  while\
    \ [ $number -gt 0 ]; do\n    integer=$(( $integer + 1 ))\n    remainder=$(( $number\
    \ % 10 ))\n    decimals=$(( $decimals + 1 ))\n    decimals_string=\"$decimals_string$remainder\"\
    \n    number=$(( $number / 10 ))\n  done\n  echo \"$decimals_string\"\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpea_d29zv.sh: line 14: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_number_in_int=0\n\
    \  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n  local trunc_decimals_in_float=0\n\
    \  local trunc_number_in_float_in_int=0\n  local trunc_decimals_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float=0\n  local trunc_decimals_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_decimals_in_float_in_float_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local truncate_decimals=0\n  local truncate_number=0\n  local truncate_numbers=0\n\
    \  local truncate_numbers_string=\"\"\n  local truncate_numbers_strings=\"\"\n\
    \  local truncate_numbers_strings_string=\"\"\n  local truncate_numbers_strings_strings=\"\
    \"\n  local truncate_numbers_strings_strings_string=\"\"\n  local truncate_numbers_strings_strings_strings=\"\
    \"\n  local truncate_numbers_strings_strings_strings_string=\"\"\n  local truncate_numbers_strings_strings_strings_strings=\"\
    \"\n  local truncate_numbers_strings_strings_strings_strings_string=\"\"\n  local\
    \ truncate_numbers_strings_strings_strings_strings_strings=\"\"\n  local truncate_numbers_strings_strings_strings_strings_strings_string=\"\
    \"\n  local truncate_numbers_strings_strings_strings_strings_strings_strings=\"\
    \"\n  local truncate_numbers_strings_strings_strings_strings_strings_strings_string=\"\
    \"\n  local truncate_numbers_strings_strings_strings_strings_strings_strings_strings=\"\
    \"\n  local truncate_numbers_strings_strings_strings_strings_strings_strings_strings_string=\"\
    \"\n  local truncate_numbers_strings_strings_strings_strings_strings_strings_strings_strings=\"\
    \"\n  local truncate_numbers_strings_strings_strings_strings_strings_strings_strings_strings_string=\"\
    \"\n  local truncate_numbers_strings_strings_strings_strings_strings_strings_strings_strings_strings=\"\
    \"\n  local truncate_numbers_strings_strings_strings_strings_strings_strings_strings_strings_strings_string=\"\
    \"\n  local truncate_numbers_strings_strings_strings_strings_strings_strings_strings_strings_strings_strings=\"\
    \"\n  local truncate_numbers_strings_strings_strings_strings_strings_strings_strings_strings_strings_string=\"\
    \"\n  local truncate_numbers_strings_strings_strings_strings_strings_strings_strings_strings_strings_strings=\"\
    \"\n  local truncate_numbers_strings_strings_strings_strings_strings_strings_strings_strings_strings_strings_string=\"\
    \"\n  local truncate_numbers_strings_strings_strings_strings_strings_strings_strings_strings_string\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_string=\"\"\n  local truncate_number=\"\
    \"\n  local truncate_number_string=\"\"\n  local truncate_number_string2=\"\"\n\
    \  local truncate_number_string3=\"\"\n  local truncate_number_string4=\"\"\n\
    \  local truncate_number_string5=\"\"\n  local truncate_number_string6=\"\"\n\
    \  local truncate_number_string7=\"\"\n  local truncate_number_string8=\"\"\n\
    \  local truncate_number_string9=\"\"\n  local truncate_number_string10=\"\"\n\
    \  local truncate_number_string11=\"\"\n  local truncate_number_string12=\"\"\n\
    \  local truncate_number_string13=\"\"\n  local truncate_number_string14=\"\"\n\
    \  local truncate_number_string15=\"\"\n  local truncate_number_string16=\"\"\n\
    \  local truncate_number_string17=\"\"\n  local truncate_number_string18=\"\"\n\
    \  local truncate_number_string19=\"\"\n  local truncate_number_string20=\"\"\n\
    \  local truncate_number_string21=\"\"\n  local truncate_number_string22=\"\"\n\
    \  local truncate_number_string23=\"\"\n  local truncate_number_string24=\"\"\n\
    \  local truncate_number_string25=\"\"\n  local truncate_number_string26=\"\"\n\
    \  local truncate_number_string27=\"\"\n  local truncate_number_string28=\"\"\n\
    \  local truncate_number_string29=\"\"\n  local truncate_number_string30=\"\"\n\
    \  local truncate_number_string31=\"\"\n  local truncate_number_string32=\"\"\n\
    \  local truncate_number_string33=\"\"\n  local truncate_number_string34=\"\"\n\
    \  local truncate_number_string35=\"\"\n  local truncate_number_string36=\"\"\n\
    \  local truncate_number_string37=\"\"\n  local truncate_number_string38=\"\"\n\
    \  local truncate_number_string39=\"\"\n  local truncate_number_string40=\"\"\n\
    \  local truncate_number_string41=\"\"\n  local truncate_number_string42=\"\"\n\
    \  local truncate_number_string43=\"\"\n  local truncate_number_string44=\"\"\n\
    \  local truncate_number_string45=\"\"\n  local truncate_number_string46=\"\"\n\
    \  local truncate_number_string47=\"\"\n  local truncate_number_string48=\"\"\n\
    \  local truncate_number_string49=\"\"\n  local truncate_number_string50=\"\"\n\
    \  local truncate_number_string51=\"\"\n  local truncate_number_string52=\"\"\n\
    \  local truncate_number_string53=\"\"\n  local trun\n}\n\ncandidate() {\n   \
    \ truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimal\n  local\
    \ decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimals_string=\"\"\n  local\
    \ integer_string=\"\"\n\n  while [ $number -gt 0 ]; do\n    decimals=$(( 10#$number\
    \ % 10 ))\n    integer=$(( 10#$number / 10 ))\n    remainder=$(( 10#$number %\
    \ 10 ))\n    decimals_string=\"$decimals_$decimals\"\n    integer_string=\"$integer_$integer\"\
    \n    number=$(( 10#$number / 10 ))\n  done\n\n  echo \"$decimals_string\"\n}\n\
    \ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n\
    \    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpky2sh_0l.sh: line 16: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_digits=0\n  local\
    \ trunc_digits_max=0\n  local trunc_digits_max_index=0\n  local trunc_digits_max_index2=0\n\
    \  local trunc_digits_max_index3=0\n  local trunc_digits_max_index4=0\n  local\
    \ trunc_digits_max_index5=0\n  local trunc_digits_max_index6=0\n  local trunc_digits_max_index7=0\n\
    \  local trunc_digits_max_index8=0\n  local trunc_digits_max_index9=0\n  local\
    \ trunc_digits_max_index10=0\n  local trunc_digits_max_index11=0\n  local trunc_digits_max_index12=0\n\
    \  local trunc_digits_max_index13=0\n  local trunc_digits_max_index14=0\n  local\
    \ trunc_digits_max_index15=0\n  local trunc_digits_max_index16=0\n  local trunc_digits_max_index17=0\n\
    \  local trunc_digits_max_index18=0\n  local trunc_digits_max_index19=0\n  local\
    \ trunc_digits_max_index20=0\n  local trunc_digits_max_index21=0\n  local trunc_digits_max_index22=0\n\
    \  local trunc_digits_max_index23=0\n  local trunc_digits_max_index24=0\n  local\
    \ trunc_digits_max_index25=0\n  local trunc_digits_max_index26=0\n  local trunc_digits_max_index27=0\n\
    \  local trunc_digits_max_index28=0\n  local trunc_digits_max_index29=0\n  local\
    \ trunc_digits_max_index30=0\n  local trunc_digits_max_index31=0\n  local trunc_digits_max_index32=0\n\
    \  local trunc_digits_max_index33=0\n  local trunc_digits_max_index34=0\n  local\
    \ trunc_digits_max_index35=0\n  local trunc_digits_max_index36=0\n  local trunc_digits_max_index37=0\n\
    \  local trunc_digits_max_index38=0\n  local trunc_digits_max_index39=0\n  local\
    \ trunc_digits_max_index40=0\n  local trunc_digits_max_index41=0\n  local trunc_digits_max_index42=0\n\
    \  local trunc_digits_max_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal_part\n  local integer_part\n  local remainder\n  local remainder_part\n\
    \  local remainder_part_length\n  local remainder_part_index\n  local remainder_part_index2\n\
    \  local remainder_part_index3\n  local remainder_part_index4\n  local remainder_part_index5\n\
    \  local remainder_part_index6\n  local remainder_part_index7\n  local remainder_part_index8\n\
    \  local remainder_part_index9\n  local remainder_part_index10\n  local remainder_part_index11\n\
    \  local remainder_part_index12\n  local remainder_part_index13\n  local remainder_part_index14\n\
    \  local remainder_part_index15\n  local remainder_part_index16\n  local remainder_part_index17\n\
    \  local remainder_part_index18\n  local remainder_part_index19\n  local remainder_part_index20\n\
    \  local remainder_part_index21\n  local remainder_part_index22\n  local remainder_part_index23\n\
    \  local remainder_part_index24\n  local remainder_part_index25\n  local remainder_part_index26\n\
    \  local remainder_part_index27\n  local remainder_part_index28\n  local remainder_part_index29\n\
    \  local remainder_part_index30\n  local remainder_part_index31\n  local remainder_part_index32\n\
    \  local remainder_part_index33\n  local remainder_part_index34\n  local remainder_part_index35\n\
    \  local remainder_part_index36\n  local remainder_part_index37\n  local remainder_part_index38\n\
    \  local remainder_part_index39\n  local remainder_part_index40\n  local remainder_part_index41\n\
    \  local remainder_part_index42\n  local remainder_part_index43\n  local remainder_part_index44\n\
    \  local remainder_part_index45\n  local remainder_part_index46\n  local remainder_part_index47\n\
    \  local remainder_part_index48\n  local remainder_part_index49\n  local remainder_part_index50\n\
    \  local remainder_part_index51\n  local remainder_part_index52\n  local remainder_part_index53\n\
    \  local remainder_part_index54\n  local remainder_part_index55\n  local remainder_part_index56\n\
    \  local remainder_part_index57\n  local remainder_part_index58\n  local remainder_part_index59\n\
    \  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n\n  while [ $number -gt 0 ]; do\n   \
    \ decimals=$((decimals + 1))\n    integer=$((integer + 1))\n    remainder=$((number\
    \ % 1))\n    number=$((number / 1))\n  done\n\n  echo \"$decimals\"\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0cvezaa5.sh: line 14: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local truncate_decimal\n  local truncate_number\n  local truncate_number_inner\n\
    \n  truncate_decimal=$(( 10#$number % 1 ))\n  truncate_number=$(( 10#$number /\
    \ 10 ))\n  truncate_number_inner=$(( 10#$truncate_number % 1 ))\n\n  if [ \"$truncate_decimal\"\
    \ -eq 0 ]; then\n    decimals=$(( 10#$truncate_number ))\n  else\n    decimals=$((\
    \ 10#$truncate_decimal + 1 ))\n  fi\n\n  echo \"$truncate_number_inner$decimals\"\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmebmi19g.sh: line 15: 10#3.5 % 1 : syntax error: invalid arithmetic
    operator (error token is ".5 % 1 ")

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local integer=0\n    local remainder=0\n    while [[ $number\
    \ -gt 0 ]]; do\n        (( integer++ ))\n        (( decimals++ ))\n        ((\
    \ remainder *= 10 ))\n        (( number -= remainder ))\n    done\n    echo \"\
    $decimals\"\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpek98cp3a.sh: line 13: [[: 3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_number_inverse=0\n\
    \  local trunc_decimals_inverse=0\n  local trunc_number_temp=0\n  local trunc_decimals_temp=0\n\
    \  local trunc_number_temp_inverse=0\n  local trunc_decimals_temp_inverse=0\n\
    \  local trunc_number_temp2=0\n  local trunc_decimals_temp2=0\n  local trunc_number_temp3=0\n\
    \  local trunc_decimals_temp3=0\n  local trunc_number_temp4=0\n  local trunc_decimals_temp4=0\n\
    \  local trunc_number_temp5=0\n  local trunc_decimals_temp5=0\n  local trunc_number_temp6=0\n\
    \  local trunc_decimals_temp6=0\n  local trunc_number_temp7=0\n  local trunc_decimals_temp7=0\n\
    \  local trunc_number_temp8=0\n  local trunc_decimals_temp8=0\n  local trunc_number_temp9=0\n\
    \  local trunc_decimals_temp9=0\n  local trunc_number_temp10=0\n  local trunc_decimals_temp10=0\n\
    \  local trunc_number_temp11=0\n  local trunc_decimals_temp11=0\n  local trunc_number_temp12=0\n\
    \  local trunc_decimals_temp12=0\n  local trunc_number_temp13=0\n  local trunc_decimals_temp13=0\n\
    \  local trunc_number_temp14=0\n  local trunc_decimals_temp14=0\n  local trunc_number_temp15=0\n\
    \  local trunc_decimals_temp15=0\n  local trunc_number_temp16=0\n  local trunc_decimals_temp16=0\n\
    \  local trunc_number_temp17=0\n  local trunc_decimals_temp17=0\n  local trunc_number_temp18=0\n\
    \  local trunc_decimals_temp18=0\n  local trunc_number_temp19=0\n  local trunc_decimals_temp19=0\n\
    \  local trunc_number_temp20=0\n  local trunc_decimals_temp20=0\n  local trunc_number_temp21=0\n\
    \  local trunc_decimals_temp21=0\n  local trunc_number_temp22=0\n  local trunc_decimals_temp22=0\n\
    \  local trunc_number_temp23=0\n  local trunc_decimals_temp23=0\n  local trunc_number_temp24=0\n\
    \  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_string=\"\"\n  local truncate_number=\"\
    \"\n\n  decimals=$(( (10#$number % 1) | 0 ))\n  decimals_string=$(( 10#$decimals\
    \ ))\n  truncate_string=$(( 10#$decimals_string ))\n  truncate_number=$(( 10#$number\
    \ / $truncate_string ))\n\n  echo \"$truncate_number\"\n}\n\ncandidate() {\n \
    \   truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp136519d8.sh: line 15: (10#3.5 % 1) | 0 : syntax error: invalid
    arithmetic operator (error token is ".5 % 1) | 0 ")

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local decimals_string=\"\"\n    local decimals_string2=\"\"\n\
    \    local decimals_string3=\"\"\n    local decimals_string4=\"\"\n    local decimals_string5=\"\
    \"\n    local decimals_string6=\"\"\n    local decimals_string7=\"\"\n    local\
    \ decimals_string8=\"\"\n    local decimals_string9=\"\"\n    local decimals_string10=\"\
    \"\n    local decimals_string11=\"\"\n    local decimals_string12=\"\"\n    local\
    \ decimals_string13=\"\"\n    local decimals_string14=\"\"\n    local decimals_string15=\"\
    \"\n    local decimals_string16=\"\"\n    local decimals_string17=\"\"\n    local\
    \ decimals_string18=\"\"\n    local decimals_string19=\"\"\n    local decimals_string20=\"\
    \"\n    local decimals_string21=\"\"\n    local decimals_string22=\"\"\n    local\
    \ decimals_string23=\"\"\n    local decimals_string24=\"\"\n    local decimals_string25=\"\
    \"\n    local decimals_string26=\"\"\n    local decimals_string27=\"\"\n    local\
    \ decimals_string28=\"\"\n    local decimals_string29=\"\"\n    local decimals_string30=\"\
    \"\n    local decimals_string31=\"\"\n    local decimals_string32=\"\"\n    local\
    \ decimals_string33=\"\"\n    local decimals_string34=\"\"\n    local decimals_string35=\"\
    \"\n    local decimals_string36=\"\"\n    local decimals_string37=\"\"\n    local\
    \ decimals_string38=\"\"\n    local decimals_string39=\"\"\n    local decimals_string40=\"\
    \"\n    local decimals_string41=\"\"\n    local decimals_string42=\"\"\n    local\
    \ decimals_string43=\"\"\n    local decimals_string44=\"\"\n    local decimals_string45=\"\
    \"\n    local decimals_string46=\"\"\n    local decimals_string47=\"\"\n    local\
    \ decimals_string48=\"\"\n    local decimals_string49=\"\"\n    local decimals_string50=\"\
    \"\n    local decimals_string51=\"\"\n    local decimals_string52=\"\"\n    local\
    \ decimals_string53=\"\"\n    local decimals_string54=\"\"\n    local decimals_string55=\"\
    \"\n    local decimals_string56=\"\"\n    local decimals_string57=\"\"\n    local\
    \ decimals_string58=\"\"\n    local decimals_string59=\"\"\n    local decimals_string60=\"\
    \"\n    local decimals_string61=\"\"\n    local decimals_string62=\"\"\n    local\
    \ decimals_string\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_left=0\n  local trunc_number=0\n  local trunc_number_index=0\n\
    \  local trunc_number_index2=0\n  local trunc_number_index3=0\n  local trunc_number_index4=0\n\
    \  local trunc_number_index5=0\n  local trunc_number_index6=0\n  local trunc_number_index7=0\n\
    \  local trunc_number_index8=0\n  local trunc_number_index9=0\n  local trunc_number_index10=0\n\
    \  local trunc_number_index11=0\n  local trunc_number_index12=0\n  local trunc_number_index13=0\n\
    \  local trunc_number_index14=0\n  local trunc_number_index15=0\n  local trunc_number_index16=0\n\
    \  local trunc_number_index17=0\n  local trunc_number_index18=0\n  local trunc_number_index19=0\n\
    \  local trunc_number_index20=0\n  local trunc_number_index21=0\n  local trunc_number_index22=0\n\
    \  local trunc_number_index23=0\n  local trunc_number_index24=0\n  local trunc_number_index25=0\n\
    \  local trunc_number_index26=0\n  local trunc_number_index27=0\n  local trunc_number_index28=0\n\
    \  local trunc_number_index29=0\n  local trunc_number_index30=0\n  local trunc_number_index31=0\n\
    \  local trunc_number_index32=0\n  local trunc_number_index33=0\n  local trunc_number_index34=0\n\
    \  local trunc_number_index35=0\n  local trunc_number_index36=0\n  local trunc_number_index37=0\n\
    \  local trunc_number_index38=0\n  local trunc_number_index39=0\n  local trunc_number_index40=0\n\
    \  local trunc_number_index41=0\n  local trunc_number_index42=0\n  local trunc_number_index43=0\n\
    \  local trunc_number_index44=0\n  local trunc_number_index45=0\n  local trunc_number_index46=0\n\
    \  local trunc_number_index47=0\n  local trunc_number_index48=0\n  local trunc_number_index49=0\n\
    \  local trunc_number_index50=0\n  local trunc_number_index51=0\n  local trunc_number_index52=0\n\
    \  local trunc_number_index53=0\n  local trunc_number_index54=0\n  \n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local trunc_number=0\n  local trunc_number_string=\"\
    \"\n\n  while [ $number -gt 0 ]; do\n    decimals=$(( 10#$number % 10 ))\n   \
    \ trunc_number=$(( 10#$number / 10 ))\n    trunc_number_string=\"$trunc_number\"\
    \n    decimals_string=\"$decimals_string$decimals\"\n    number=$(( 10#$number\
    \ / 10 ))\n  done\n\n  echo \"$decimals_string\"\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpyg5b42y8.sh: line 15: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal_part\n  local integer_part\n  local remainder\n  local remainder_part\n\
    \  local quotient\n  local quotient_part\n  local quotient_part_decimals\n  local\
    \ quotient_part_integers\n  local quotient_part_remainder\n  local quotient_part_remainder_decimals\n\
    \  local quotient_part_remainder_integers\n  local quotient_part_remainder_remainder\n\
    \  local quotient_part_remainder_remainder_decimals\n  local quotient_part_remainder_remainder_integers\n\
    \  local quotient_part_remainder_remainder_remainder\n  local quotient_part_remainder_remainder_remainder_decimals\n\
    \  local quotient_part_remainder_remainder_remainder_integers\n  local quotient_part_remainder_remainder_remainder_remainder\n\
    \  local quotient_part_remainder_remainder_remainder_remainder_decimals\n  local\
    \ quotient_part_remainder_remainder_remainder_remainder_integers\n  local quotient_part_remainder_remainder_remainder_remainder_remainder\n\
    \  local quotient_part_remainder_remainder_remainder_remainder_remainder_decimals\n\
    \  local quotient_part_remainder_remainder_remainder_remainder_remainder_integers\n\
    \  local quotient_part_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local quotient_part_remainder_remainder_remainder_remainder_remainder_remainder_decimals\n\
    \  local quotient_part_remainder_remainder_remainder_remainder_remainder_remainder_integers\n\
    \  local quotient_part_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local quotient_part_remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimals\n\
    \  local quotient_part_remainder_remainder_remainder_remainder_remainder_remainder_remainder_integers\n\
    \  local quotient_part_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local quotient_part_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimals\n\
    \  local quotient_part_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_integers\n\
    \  local quotient_part_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local quotient_part_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimals\n\
    \  local quotient_part_remainder_remainder_remain\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string2=\"\"\n  local decimals_string3=\"\
    \"\n  local decimals_string4=\"\"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\
    \"\n  local decimals_string7=\"\"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\
    \"\n  local decimals_string10=\"\"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\
    \"\n  local decimals_string13=\"\"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\
    \"\n  local decimals_string16=\"\"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\
    \"\n  local decimals_string19=\"\"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\
    \"\n  local decimals_string22=\"\"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\
    \"\n  local decimals_string25=\"\"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\
    \"\n  local decimals_string28=\"\"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\
    \"\n  local decimals_string31=\"\"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\
    \"\n  local decimals_string34=\"\"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\
    \"\n  local decimals_string37=\"\"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\
    \"\n  local decimals_string40=\"\"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\
    \"\n  local decimals_string43=\"\"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\
    \"\n  local decimals_string46=\"\"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\
    \"\n  local decimals_string49=\"\"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\
    \"\n  local decimals_string52=\"\"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\
    \"\n  local decimals_string55=\"\"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\
    \"\n  local decimals_string58=\"\"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\
    \"\n  local decimals_string61=\"\"\n  local decimals_string62=\"\"\n  local decimals_string\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_string=\"\"\n  local truncate_string2=\"\
    \"\n  local truncate_string3=\"\"\n  local truncate_string4=\"\"\n  local truncate_string5=\"\
    \"\n  local truncate_string6=\"\"\n  local truncate_string7=\"\"\n  local truncate_string8=\"\
    \"\n  local truncate_string9=\"\"\n  local truncate_string10=\"\"\n  local truncate_string11=\"\
    \"\n  local truncate_string12=\"\"\n  local truncate_string13=\"\"\n  local truncate_string14=\"\
    \"\n  local truncate_string15=\"\"\n  local truncate_string16=\"\"\n  local truncate_string17=\"\
    \"\n  local truncate_string18=\"\"\n  local truncate_string19=\"\"\n  local truncate_string20=\"\
    \"\n  local truncate_string21=\"\"\n  local truncate_string22=\"\"\n  local truncate_string23=\"\
    \"\n  local truncate_string24=\"\"\n  local truncate_string25=\"\"\n  local truncate_string26=\"\
    \"\n  local truncate_string27=\"\"\n  local truncate_string28=\"\"\n  local truncate_string29=\"\
    \"\n  local truncate_string30=\"\"\n  local truncate_string31=\"\"\n  local truncate_string32=\"\
    \"\n  local truncate_string33=\"\"\n  local truncate_string34=\"\"\n  local truncate_string35=\"\
    \"\n  local truncate_string36=\"\"\n  local truncate_string37=\"\"\n  local truncate_string38=\"\
    \"\n  local truncate_string39=\"\"\n  local truncate_string40=\"\"\n  local truncate_string41=\"\
    \"\n  local truncate_string42=\"\"\n  local truncate_string43=\"\"\n  local truncate_string44=\"\
    \"\n  local truncate_string45=\"\"\n  local truncate_string46=\"\"\n  local truncate_string47=\"\
    \"\n  local truncate_string48=\"\"\n  local truncate_string49=\"\"\n  local truncate_string50=\"\
    \"\n  local truncate_string51=\"\"\n  local truncate_string52=\"\"\n  local truncate_string53=\"\
    \"\n  local truncate_string54=\"\"\n  local truncate_string55=\"\"\n  local truncate_string56=\"\
    \"\n  local truncate_string57=\"\"\n  local truncate_string58=\"\"\n  local truncate_string59=\"\
    \"\n  local truncate_string60=\"\"\n  local truncate_string61=\"\"\n  local truncate_string62\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_number_in_int=0\n\
    \  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n  local trunc_decimals_in_float=0\n\
    \  local trunc_number_in_float_in_int=0\n  local trunc_decimals_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float=0\n  local trunc_decimals_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_decimals_in_float_in_float_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_number\n\
    \  local trunc_decimal\n  local trunc_number\n  local trunc_decimal\n  local trunc_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_number_in_decimal=0\n\
    \  local trunc_decimals_in_decimal=0\n  local trunc_decimals_in_number=0\n  local\
    \ trunc_decimals_in_number_in_decimal=0\n  local trunc_decimals_in_number_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimal=0\n  local trunc_decimals_in_number_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimal=0\n  local\
    \ trunc_decimals_in_number_in_decimals_in_decimals_in_decimals=0\n  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimal=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimal=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_decimals_in_decimals_in_decimals=0\n\
    \  local trunc_decimals_in_number_in_decimals_in_\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local truncate_decimal\n  local truncate_number\n\n  decimal=$(echo\
    \ \"$number\" | awk '{print int($1/1)}')\n  decimals=$(echo \"$number\" | awk\
    \ '{print int($1/1)}')\n  truncate_decimal=$(echo \"$decimal\" | awk '{print int($1/1)}')\n\
    \  truncate_number=$(( $number / $truncate_decimal ))\n\n  echo \"$truncate_number\"\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3idn0wo_.sh: line 18: 3.5 / 3 : syntax error: invalid arithmetic
    operator (error token is ".5 / 3 ")

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local decimals\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local integer=0\n    local remainder=0\n    local decimal=0\n\
    \    local decimals_string=\"\"\n    local integer_string=\"\"\n    local remainder_string=\"\
    \"\n\n    while [ $number -gt 0 ]; do\n        decimal=$(( 10#$number % 10 ))\n\
    \        remainder=$(( 10#$number % 10 ))\n        decimals=$(( decimals + 1 ))\n\
    \        integer=$(( 10#$integer + $decimal ))\n        remainder=$(( 10#$remainder\
    \ + $decimal ))\n        number=$(( 10#$number / 10 ))\n    done\n\n    if [ $decimals\
    \ -gt 0 ]; then\n        decimals_string=\"$decimals\"\n    fi\n    if [ $integer\
    \ -gt 0 ]; then\n        integer_string=\"$integer\"\n    fi\n    if [ $remainder\
    \ -gt 0 ]; then\n        remainder_string=\"$remainder\"\n    fi\n\n    echo \"\
    $decimals_string$integer_string$remainder_string\"\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmph604i9io.sh: line 18: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_part=0\n  local\
    \ trunc_part_decimals=0\n  local trunc_part_decimals_string=\"\"\n  local trunc_part_string=\"\
    \"\n  local trunc_part_string_decimals=\"\"\n  local trunc_part_string_decimals_string=\"\
    \"\n  local trunc_part_string_integer=\"\"\n  local trunc_part_string_integer_decimals=\"\
    \"\n  local trunc_part_string_integer_decimals_string=\"\"\n  local trunc_part_string_fractions=\"\
    \"\n  local trunc_part_string_fractions_decimals=\"\"\n  local trunc_part_string_fractions_decimals_string=\"\
    \"\n  local trunc_part_string_fractions_integer=\"\"\n  local trunc_part_string_fractions_integer_decimals=\"\
    \"\n  local trunc_part_string_fractions_integer_decimals_string=\"\"\n  local\
    \ trunc_part_string_fractions_integer_integer=\"\"\n  local trunc_part_string_fractions_integer_integer_decimals=\"\
    \"\n  local trunc_part_string_fractions_integer_integer_decimals_string=\"\"\n\
    \  local trunc_part_string_fractions_integer_integer_integer=\"\"\n  local trunc_part_string_fractions_integer_integer_integer_decimals=\"\
    \"\n  local trunc_part_string_fractions_integer_integer_integer_decimals_string=\"\
    \"\n  local trunc_part_string_fractions_integer_integer_integer_integer=\"\"\n\
    \  local trunc_part_string_fractions_integer_integer_integer_integer_decimals=\"\
    \"\n  local trunc_part_string_fractions_integer_integer_integer_integer_decimals_string=\"\
    \"\n  local trunc_part_string_fractions_integer_integer_integer_integer_integer=\"\
    \"\n  local trunc_part_string_fractions_integer_integer_integer_integer_integer_decimals=\"\
    \"\n  local trunc_part_string_fractions_integer_integer_integer_integer_integer_decimals_string=\"\
    \"\n  local trunc_part_string_fractions_integer_integer_integer_integer_integer_integer=\"\
    \"\n  local trunc_part_string_fractions_integer_integer_integer_integer_integer_integer_decimals=\"\
    \"\n  local trunc_part_string_fractions_integer_integer_integer_integer_integer_integer_decimals_string=\"\
    \"\n  local trunc_part_string_fractions_integer_integer_integer_integer_integer_integer_integer=\"\
    \"\n  local trunc_part_string_fractions_integer_integer_integer_integer_integer\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_number_index=0\n  local trunc_number_string=\"\
    \"\n  local trunc_number_string_index=0\n  local trunc_number_string_decimals=0\n\
    \  local trunc_number_string_decimals_index=0\n  local trunc_number_string_decimals_string=\"\
    \"\n  local trunc_number_string_decimals_string_index=0\n  local trunc_number_string_decimals_string_decimals=0\n\
    \  local trunc_number_string_decimals_string_decimals_index=0\n  local trunc_number_string_decimals_string_decimals_string=\"\
    \"\n  local trunc_number_string_decimals_string_decimals_string_index=0\n  local\
    \ trunc_number_string_decimals_string_decimals_string_decimals=0\n  local trunc_number_string_decimals_string_decimals_string_decimals_index=0\n\
    \  local trunc_number_string_decimals_string_decimals_string_decimals_string=\"\
    \"\n  local trunc_number_string_decimals_string_decimals_string_decimals_string_index=0\n\
    \  local trunc_number_string_decimals_string_decimals_string_decimals_string_decimals=0\n\
    \  local trunc_number_string_decimals_string_decimals_string_decimals_string_decimals_index=0\n\
    \  local trunc_number_string_decimals_string_decimals_string_decimals_string_decimals_string=\"\
    \"\n  local trunc_number_string_decimals_string_decimals_string_decimals_string_decimals_string_index=0\n\
    \  local trunc_number_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals=0\n\
    \  local trunc_number_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_index=0\n\
    \  local trunc_number_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string=\"\
    \"\n  local trunc_number_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_index=0\n\
    \  local trunc_number_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals=0\n\
    \  local trunc_number_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_index=0\n\
    \  local trunc_number_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local digits=0\n  local digit=0\n  local digits=0\n  local digit=0\n  local\
    \ digits=0\n  local digit=0\n  local digits=0\n  local digit=0\n  local digits=0\n\
    \  local digit=0\n  local digits=0\n  local digit=0\n  local digits=0\n  local\
    \ digit=0\n  local digits=0\n  local digit=0\n  local digits=0\n  local digit=0\n\
    \  local digits=0\n  local digit=0\n  local digits=0\n  local digit=0\n  local\
    \ digits=0\n  local digit=0\n  local digits=0\n  local digit=0\n  local digits=0\n\
    \  local digit=0\n  local digits=0\n  local digit=0\n  local digits=0\n  local\
    \ digit=0\n  local digits=0\n  local digit=0\n  local digits=0\n  local digit=0\n\
    \  local digits=0\n  local digit=0\n  local digits=0\n  local digit=0\n  local\
    \ digits=0\n  local digit=0\n  local digits=0\n  local digit=0\n  local digits=0\n\
    \  local digit=0\n  local digits=0\n  local digit=0\n  local digits=0\n  local\
    \ digit=0\n  local digits=0\n  local digit=0\n  local digits=0\n  local digit=0\n\
    \  local digits=0\n  local digit=0\n  local digits=0\n  local digit=0\n  local\
    \ digits=0\n  local digit=0\n  local digits=0\n  local digit=0\n  local digits=0\n\
    \  local digit=0\n  local digits=0\n  local digit=0\n  local digits=0\n  local\
    \ digit=0\n  local digits=0\n  local digit=0\n  local digits=0\n  local digit=0\n\
    \  local digits=0\n  local digit=0\n  local digits=0\n  local digit=0\n  local\
    \ digits=0\n  local digit=0\n  local digits=0\n  local digit=0\n  local digits=0\n\
    \  local digit=0\n  local digits=0\n  local digit=0\n  local digits=0\n  local\
    \ digit=0\n  local digits=0\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local decimals_string=\"\"\n    local decimals_string_length=0\n\
    \    local decimals_string_length_string=\"\"\n    local decimals_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string=\"\"\n    local decimals_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string=\"\"\n  \
    \  local decimals_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string2=\"\"\n  local decimals_string3=\"\
    \"\n  local decimals_string4=\"\"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\
    \"\n  local decimals_string7=\"\"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\
    \"\n  local decimals_string10=\"\"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\
    \"\n  local decimals_string13=\"\"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\
    \"\n  local decimals_string16=\"\"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\
    \"\n  local decimals_string19=\"\"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\
    \"\n  local decimals_string22=\"\"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\
    \"\n  local decimals_string25=\"\"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\
    \"\n  local decimals_string28=\"\"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\
    \"\n  local decimals_string31=\"\"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\
    \"\n  local decimals_string34=\"\"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\
    \"\n  local decimals_string37=\"\"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\
    \"\n  local decimals_string40=\"\"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\
    \"\n  local decimals_string43=\"\"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\
    \"\n  local decimals_string46=\"\"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\
    \"\n  local decimals_string49=\"\"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\
    \"\n  local decimals_string52=\"\"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\
    \"\n  local decimals_string55=\"\"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\
    \"\n  local decimals_string58=\"\"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\
    \"\n  local decimals_string61=\"\"\n  local decimals_string62=\"\"\n  local decimals_string\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local decimals_string=\"\"\n    local decimals_string2=\"\"\n\
    \    local decimals_string3=\"\"\n    local decimals_string4=\"\"\n    local decimals_string5=\"\
    \"\n    local decimals_string6=\"\"\n    local decimals_string7=\"\"\n    local\
    \ decimals_string8=\"\"\n    local decimals_string9=\"\"\n    local decimals_string10=\"\
    \"\n    local decimals_string11=\"\"\n    local decimals_string12=\"\"\n    local\
    \ decimals_string13=\"\"\n    local decimals_string14=\"\"\n    local decimals_string15=\"\
    \"\n    local decimals_string16=\"\"\n    local decimals_string17=\"\"\n    local\
    \ decimals_string18=\"\"\n    local decimals_string19=\"\"\n    local decimals_string20=\"\
    \"\n    local decimals_string21=\"\"\n    local decimals_string22=\"\"\n    local\
    \ decimals_string23=\"\"\n    local decimals_string24=\"\"\n    local decimals_string25=\"\
    \"\n    local decimals_string26=\"\"\n    local decimals_string27=\"\"\n    local\
    \ decimals_string28=\"\"\n    local decimals_string29=\"\"\n    local decimals_string30=\"\
    \"\n    local decimals_string31=\"\"\n    local decimals_string32=\"\"\n    local\
    \ decimals_string33=\"\"\n    local decimals_string34=\"\"\n    local decimals_string35=\"\
    \"\n    local decimals_string36=\"\"\n    local decimals_string37=\"\"\n    local\
    \ decimals_string38=\"\"\n    local decimals_string39=\"\"\n    local decimals_string40=\"\
    \"\n    local decimals_string41=\"\"\n    local decimals_string42=\"\"\n    local\
    \ decimals_string43=\"\"\n    local decimals_string44=\"\"\n    local decimals_string45=\"\
    \"\n    local decimals_string46=\"\"\n    local decimals_string47=\"\"\n    local\
    \ decimals_string48=\"\"\n    local decimals_string49=\"\"\n    local decimals_string50=\"\
    \"\n    local decimals_string51=\"\"\n    local decimals_string52=\"\"\n    local\
    \ decimals_string53=\"\"\n    local decimals_string54=\"\"\n    local decimals_string55=\"\
    \"\n    local decimals_string56=\"\"\n    local decimals_string57=\"\"\n    local\
    \ decimals_string58=\"\"\n    local decimals_string59=\"\"\n    local decimals_string60=\"\
    \"\n    local decimals_string61=\"\"\n    local decimals_string62=\"\"\n    local\
    \ decimals_string\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local truncate_part\n  local truncate_part_num\n  local truncate_part_num2\n\
    \  local truncate_part_num3\n  local truncate_part_num4\n  local truncate_part_num5\n\
    \  local truncate_part_num6\n  local truncate_part_num7\n  local truncate_part_num8\n\
    \  local truncate_part_num9\n  local truncate_part_num10\n  local truncate_part_num11\n\
    \  local truncate_part_num12\n  local truncate_part_num13\n  local truncate_part_num14\n\
    \  local truncate_part_num15\n  local truncate_part_num16\n  local truncate_part_num17\n\
    \  local truncate_part_num18\n  local truncate_part_num19\n  local truncate_part_num20\n\
    \  local truncate_part_num21\n  local truncate_part_num22\n  local truncate_part_num23\n\
    \  local truncate_part_num24\n  local truncate_part_num25\n  local truncate_part_num26\n\
    \  local truncate_part_num27\n  local truncate_part_num28\n  local truncate_part_num29\n\
    \  local truncate_part_num30\n  local truncate_part_num31\n  local truncate_part_num32\n\
    \  local truncate_part_num33\n  local truncate_part_num34\n  local truncate_part_num35\n\
    \  local truncate_part_num36\n  local truncate_part_num37\n  local truncate_part_num38\n\
    \  local truncate_part_num39\n  local truncate_part_num40\n  local truncate_part_num41\n\
    \  local truncate_part_num42\n  local truncate_part_num43\n  local truncate_part_num44\n\
    \  local truncate_part_num45\n  local truncate_part_num46\n  local truncate_part_num47\n\
    \  local truncate_part_num48\n  local truncate_part_num49\n  local truncate_part_num50\n\
    \  local truncate_part_num51\n  local truncate_part_num52\n  local truncate_part_num53\n\
    \  local truncate_part_num54\n  local truncate_part_num55\n  local truncate_part_num56\n\
    \  local truncate_part_num57\n  local truncate_part_num58\n  local truncate_part_num59\n\
    \  local truncate_part_num60\n  local truncate_part_num61\n  local trun\n}\n\n\
    candidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimal_part=0\n  local decimal_part_string=\"\
    \"\n  local trunc_number=0\n  local trunc_number_string=\"\"\n\n  while [ $number\
    \ -gt 0 ]; do\n    decimals=$(( decimals + 1 ))\n    decimal_part=$(( number %\
    \ 10 ))\n    decimal_part_string=\"$decimal_part_string$decimal_part\"\n    number=$((\
    \ number / 10 ))\n  done\n\n  trunc_number=$(( number ))\n  trunc_number_string=\"\
    $trunc_number_string$trunc_number\"\n\n  if [ $decimals -gt 0 ]; then\n    decimals_string=\"\
    $decimals_string$decimals\"\n  fi\n\n  trunc_number_string=\"$trunc_number_string$decimal_part_string\"\
    \n\n  echo \"$trunc_number_string\"\n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6fc6icbu.sh: line 17: [: 3.5: integer expression expected

    /tmp/tmp6fc6icbu.sh: line 24: 3.5: syntax error: invalid arithmetic operator (error
    token is ".5")

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local trunc_number=0\n    local trunc_decimals=0\n    local\
    \ trunc_digits=0\n    local trunc_digits_left=0\n    local trunc_digits_right=0\n\
    \    local trunc_digits_left_digits=0\n    local trunc_digits_right_digits=0\n\
    \    local trunc_digits_left_digits_left=0\n    local trunc_digits_left_digits_right=0\n\
    \    local trunc_digits_right_digits_left=0\n    local trunc_digits_right_digits_right=0\n\
    \    local trunc_digits_left_digits_left_digits=0\n    local trunc_digits_left_digits_right_digits=0\n\
    \    local trunc_digits_right_digits_left_digits=0\n    local trunc_digits_right_digits_right_digits=0\n\
    \    local trunc_digits_left_digits_left_digits_left=0\n    local trunc_digits_left_digits_right_digits_left=0\n\
    \    local trunc_digits_right_digits_left_digits_left=0\n    local trunc_digits_right_digits_right_digits_left=0\n\
    \    local trunc_digits_left_digits_left_digits_right=0\n    local trunc_digits_left_digits_right_digits_right=0\n\
    \    local trunc_digits_right_digits_left_digits_right=0\n    local trunc_digits_right_digits_right_digits_right=0\n\
    \    local trunc_digits_left_digits_left_digits_left_digits=0\n    local trunc_digits_left_digits_right_digits_left_digits=0\n\
    \    local trunc_digits_right_digits_left_digits_left_digits=0\n    local trunc_digits_right_digits_right_digits_left_digits=0\n\
    \    local trunc_digits_left_digits_left_digits_right_digits=0\n    local trunc_digits_left_digits_right_digits_right_digits=0\n\
    \    local trunc_digits_right_digits_left_digits_right_digits=0\n    local trunc_digits_right_digits_right_digits_right_digits=0\n\
    \    local trunc_digits_left_digits_left_digits_left_digits_left=0\n    local\
    \ trunc_digits_left_digits_right_digits_left_digits_left=0\n    local trunc_digits_right_digits_left_digits_left_digits_left=0\n\
    \    local trunc_digits_right_digits_right_digits_left_digits_left=0\n    local\
    \ trunc_digit\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_string=\"\"\n  local truncate_string2=\"\
    \"\n  local truncate_string3=\"\"\n  local truncate_string4=\"\"\n  local truncate_string5=\"\
    \"\n  local truncate_string6=\"\"\n  local truncate_string7=\"\"\n  local truncate_string8=\"\
    \"\n  local truncate_string9=\"\"\n  local truncate_string10=\"\"\n  local truncate_string11=\"\
    \"\n  local truncate_string12=\"\"\n  local truncate_string13=\"\"\n  local truncate_string14=\"\
    \"\n  local truncate_string15=\"\"\n  local truncate_string16=\"\"\n  local truncate_string17=\"\
    \"\n  local truncate_string18=\"\"\n  local truncate_string19=\"\"\n  local truncate_string20=\"\
    \"\n  local truncate_string21=\"\"\n  local truncate_string22=\"\"\n  local truncate_string23=\"\
    \"\n  local truncate_string24=\"\"\n  local truncate_string25=\"\"\n  local truncate_string26=\"\
    \"\n  local truncate_string27=\"\"\n  local truncate_string28=\"\"\n  local truncate_string29=\"\
    \"\n  local truncate_string30=\"\"\n  local truncate_string31=\"\"\n  local truncate_string32=\"\
    \"\n  local truncate_string33=\"\"\n  local truncate_string34=\"\"\n  local truncate_string35=\"\
    \"\n  local truncate_string36=\"\"\n  local truncate_string37=\"\"\n  local truncate_string38=\"\
    \"\n  local truncate_string39=\"\"\n  local truncate_string40=\"\"\n  local truncate_string41=\"\
    \"\n  local truncate_string42=\"\"\n  local truncate_string43=\"\"\n  local truncate_string44=\"\
    \"\n  local truncate_string45=\"\"\n  local truncate_string46=\"\"\n  local truncate_string47=\"\
    \"\n  local truncate_string48=\"\"\n  local truncate_string49=\"\"\n  local truncate_string50=\"\
    \"\n  local truncate_string51=\"\"\n  local truncate_string52=\"\"\n  local truncate_string53=\"\
    \"\n  local truncate_string54=\"\"\n  local truncate_string55=\"\"\n  local truncate_string56=\"\
    \"\n  local truncate_string57=\"\"\n  local truncate_string58=\"\"\n  local truncate_string59=\"\
    \"\n  local truncate_string60=\"\"\n  local truncate_string61=\"\"\n  local truncate_string62\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_digits=0\n  local\
    \ trunc_digits_left=0\n  local trunc_digits_right=0\n  local trunc_digits_left_to_right=0\n\
    \  local trunc_digits_right_to_left=0\n  local trunc_digits_left_to_right_to_left=0\n\
    \  local trunc_digits_right_to_left_to_right=0\n  local trunc_digits_left_to_right_to_left_to_right=0\n\
    \  local trunc_digits_right_to_left_to_right_to_left=0\n  local trunc_digits_right_to_left_to_right_to_left_to_right=0\n\
    \  local trunc_digits_right_to_left_to_right_to_left_to_right_to_left=0\n  local\
    \ trunc_digits_right_to_left_to_right_to_left_to_right_to_left_to_right=0\n  local\
    \ trunc_digits_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left=0\n\
    \  local trunc_digits_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right=0\n\
    \  local trunc_digits_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left=0\n\
    \  local trunc_digits_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left=0\n\
    \  local trunc_digits_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_right_to_left_to_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local trunc_number=0\n    local trunc_decimals=0\n    local\
    \ trunc_digits=0\n    local trunc_digits_left=0\n    local trunc_digits_right=0\n\
    \    local trunc_digits_left_digits=0\n    local trunc_digits_right_digits=0\n\
    \    local trunc_digits_left_digits_left=0\n    local trunc_digits_left_digits_right=0\n\
    \    local trunc_digits_right_digits_left=0\n    local trunc_digits_right_digits_right=0\n\
    \    local trunc_digits_left_digits_left_digits=0\n    local trunc_digits_left_digits_right_digits=0\n\
    \    local trunc_digits_right_digits_left_digits=0\n    local trunc_digits_right_digits_right_digits=0\n\
    \    local trunc_digits_left_digits_left_digits_left=0\n    local trunc_digits_left_digits_left_digits_right=0\n\
    \    local trunc_digits_left_digits_right_digits_left=0\n    local trunc_digits_left_digits_right_digits_right=0\n\
    \    local trunc_digits_right_digits_left_digits_left=0\n    local trunc_digits_right_digits_left_digits_right=0\n\
    \    local trunc_digits_right_digits_right_digits_left=0\n    local trunc_digits_right_digits_right_digits_right=0\n\
    \    local trunc_digits_left_digits_left_digits_left_digits=0\n    local trunc_digits_left_digits_left_digits_right_digits=0\n\
    \    local trunc_digits_left_digits_right_digits_left_digits=0\n    local trunc_digits_left_digits_right_digits_right_digits=0\n\
    \    local trunc_digits_right_digits_left_digits_left_digits=0\n    local trunc_digits_right_digits_left_digits_right_digits=0\n\
    \    local trunc_digits_right_digits_right_digits_left_digits=0\n    local trunc_digits_right_digits_right_digits_right_digits=0\n\
    \    local trunc_digits_left_digits_left_digits_left_digits_left=0\n    local\
    \ trunc_digits_left_digits_left_digits_left_digits_right=0\n    local trunc_digits_left_digits_left_digits_right_digits_left=0\n\
    \    local trunc_digits_left_digits_left_digits_right_digits_right=0\n    local\
    \ trunc_digit\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local decimalPart\n  local integerPart\n  local integerPartLength\n\
    \  local decimalPartLength\n  local decimalPartLengthRemainder\n  local decimalPartRemainder\n\
    \  local decimalPartRemainderLength\n  local decimalPartRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainder\n  local decimalPartRemainderRemainderLength\n\
    \  local decimalPartRemainderRemainderLengthRemainder\n  local decimalPartRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderLength\n  local decimalPartRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderLength\n  local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemain\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_string=\"\"\n  local truncate_string_length=0\n\
    \  local truncate_string_length_string=\"\"\n  local truncate_string_length_string2=\"\
    \"\n  local truncate_string_length_string3=\"\"\n  local truncate_string_length_string4=\"\
    \"\n  local truncate_string_length_string5=\"\"\n  local truncate_string_length_string6=\"\
    \"\n  local truncate_string_length_string7=\"\"\n  local truncate_string_length_string8=\"\
    \"\n  local truncate_string_length_string9=\"\"\n  local truncate_string_length_string10=\"\
    \"\n  local truncate_string_length_string11=\"\"\n  local truncate_string_length_string12=\"\
    \"\n  local truncate_string_length_string13=\"\"\n  local truncate_string_length_string14=\"\
    \"\n  local truncate_string_length_string15=\"\"\n  local truncate_string_length_string16=\"\
    \"\n  local truncate_string_length_string17=\"\"\n  local truncate_string_length_string18=\"\
    \"\n  local truncate_string_length_string19=\"\"\n  local truncate_string_length_string20=\"\
    \"\n  local truncate_string_length_string21=\"\"\n  local truncate_string_length_string22=\"\
    \"\n  local truncate_string_length_string23=\"\"\n  local truncate_string_length_string24=\"\
    \"\n  local truncate_string_length_string25=\"\"\n  local truncate_string_length_string26=\"\
    \"\n  local truncate_string_length_string27=\"\"\n  local truncate_string_length_string28=\"\
    \"\n  local truncate_string_length_string29=\"\"\n  local truncate_string_length_string30=\"\
    \"\n  local truncate_string_length_string31=\"\"\n  local truncate_string_length_string32=\"\
    \"\n  local truncate_string_length_string33=\"\"\n  local truncate_string_length_string34=\"\
    \"\n  local truncate_string_length_string35=\"\"\n  local truncate_string_length_string36=\"\
    \"\n  local truncate_string_length_string37=\"\"\n  local truncate_string_length_string38=\"\
    \"\n  local truncate_string_length_string39=\"\"\n  local truncate_string_length_string40=\"\
    \"\n  local truncate_string_length_string41=\"\"\n  local truncate_string_length_string42=\"\
    \"\n  local truncate_string_length_string43=\"\"\n  local truncate_string_length_string44=\"\
    \"\n  local truncate_string_length_string45=\"\"\n  local truncate_string_length_string46=\"\
    \"\n  local truncate_string_length_string47=\"\"\n  local truncate_string_length_string48=\"\
    \"\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local truncate_decimals=0\n  local truncate_number=0\n  local truncate_number_inner=0\n\
    \  local truncate_number_outer=0\n  local truncate_number_outer_inner=0\n  local\
    \ truncate_number_outer_outer=0\n  local truncate_number_outer_outer_outer=0\n\
    \  local truncate_number_outer_outer_outer_inner=0\n  local truncate_number_outer_outer_outer_outer_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner=0\n  local truncate_number_outer_outer_outer_outer_inner_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner_inner_inner=0\n  local\
    \ truncate_number_outer_outer_outer_outer_inner_inner_inner_inner=0\n  local truncate_number_outer_outer_outer_outer_inner_inner_inner_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner_inner_inner_inner_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner_inner_inner_inner_inner_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner_inner_inner_inner_inner_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner_inner_inner_inner_inner_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner_inner_inner_inner_inner_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner_inner_inner_inner_inner_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner_inner_inner_inner_inner_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner_inner_inner_inner_inner_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner_inner_inner_inner_inner_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner_inner_inner_inner_inner_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner_inner_inner_inner_inner_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner_inner_inner_inner_inner_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner_inner_inner_inner_inner_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner_inner_inner_inner_inner_inner=0\n\
    \  local truncate_number_outer_outer_outer_outer_inner\n}\n\ncandidate() {\n \
    \   truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_string=\"\"\n  local truncate_number=\"\
    \"\n  local truncate_number_string=\"\"\n  local truncate_number_string2=\"\"\n\
    \  local truncate_number_string3=\"\"\n  local truncate_number_string4=\"\"\n\
    \  local truncate_number_string5=\"\"\n  local truncate_number_string6=\"\"\n\
    \  local truncate_number_string7=\"\"\n  local truncate_number_string8=\"\"\n\
    \  local truncate_number_string9=\"\"\n  local truncate_number_string10=\"\"\n\
    \  local truncate_number_string11=\"\"\n  local truncate_number_string12=\"\"\n\
    \  local truncate_number_string13=\"\"\n  local truncate_number_string14=\"\"\n\
    \  local truncate_number_string15=\"\"\n  local truncate_number_string16=\"\"\n\
    \  local truncate_number_string17=\"\"\n  local truncate_number_string18=\"\"\n\
    \  local truncate_number_string19=\"\"\n  local truncate_number_string20=\"\"\n\
    \  local truncate_number_string21=\"\"\n  local truncate_number_string22=\"\"\n\
    \  local truncate_number_string23=\"\"\n  local truncate_number_string24=\"\"\n\
    \  local truncate_number_string25=\"\"\n  local truncate_number_string26=\"\"\n\
    \  local truncate_number_string27=\"\"\n  local truncate_number_string28=\"\"\n\
    \  local truncate_number_string29=\"\"\n  local truncate_number_string30=\"\"\n\
    \  local truncate_number_string31=\"\"\n  local truncate_number_string32=\"\"\n\
    \  local truncate_number_string33=\"\"\n  local truncate_number_string34=\"\"\n\
    \  local truncate_number_string35=\"\"\n  local truncate_number_string36=\"\"\n\
    \  local truncate_number_string37=\"\"\n  local truncate_number_string38=\"\"\n\
    \  local truncate_number_string39=\"\"\n  local truncate_number_string40=\"\"\n\
    \  local truncate_number_string41=\"\"\n  local truncate_number_string42=\"\"\n\
    \  local truncate_number_string43=\"\"\n  local truncate_number_string44=\"\"\n\
    \  local truncate_number_string45=\"\"\n  local truncate_number_string46=\"\"\n\
    \  local truncate_number_string47=\"\"\n  local truncate_number_string48=\"\"\n\
    \  local truncate_number_string49=\"\"\n  local truncate_number_string50=\"\"\n\
    \  local truncate_number_string51=\"\"\n  local truncate_number_string52=\"\"\n\
    \  local truncate_number_string53=\"\"\n  local trun\n}\n\ncandidate() {\n   \
    \ truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_digits=0\n  local\
    \ trunc_digits_left=0\n  local trunc_digits_right=0\n  local trunc_digits_left_to_right=0\n\
    \  local trunc_digits_right_to_left=0\n  local trunc_digits_left_to_right_digits=0\n\
    \  local trunc_digits_right_to_left_digits=0\n  local trunc_digits_left_to_right_digits_left=0\n\
    \  local trunc_digits_right_to_left_digits_left=0\n  local trunc_digits_left_to_right_digits_right=0\n\
    \  local trunc_digits_right_to_left_digits_right=0\n  local trunc_digits_left_to_right_digits_left_to_right=0\n\
    \  local trunc_digits_right_to_left_digits_left_to_right=0\n  local trunc_digits_left_to_right_digits_left_to_right_digits=0\n\
    \  local trunc_digits_right_to_left_digits_left_to_right_digits=0\n  local trunc_digits_left_to_right_digits_left_to_right_digits_left=0\n\
    \  local trunc_digits_right_to_left_digits_left_to_right_digits_left=0\n  local\
    \ trunc_digits_left_to_right_digits_left_to_right_digits_right=0\n  local trunc_digits_right_to_left_digits_left_to_right_digits_right=0\n\
    \  local trunc_digits_left_to_right_digits_left_to_right_digits_left_to_right=0\n\
    \  local trunc_digits_right_to_left_digits_left_to_right_digits_left_to_right=0\n\
    \  local trunc_digits_left_to_right_digits_left_to_right_digits_left_to_right_digits=0\n\
    \  local trunc_digits_right_to_left_digits_left_to_right_digits_left_to_right_digits=0\n\
    \  local trunc_digits_left_to_right_digits_left_to_right_digits_left_to_right_digits_left=0\n\
    \  local trunc_digits_right_to_left_digits_left_to_right_digits_left_to_right_digits_left=0\n\
    \  local trunc_digits_left_to_right_digits_left_to_right_digits_left_to_right_digits_right=0\n\
    \  local trunc_digits_right_to_left_digits_left_to_right_digits_left_to_right_digits_right=0\n\
    \  local trunc_digits_left_to_right_digits_left_to_right_digits_left_to_right_digits_left_to_right=0\n\
    \  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimals_string=\"\"\n  local\
    \ integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  \n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_string=\"\"\n  local truncate_string2=\"\
    \"\n  local truncate_string3=\"\"\n  local truncate_string4=\"\"\n  local truncate_string5=\"\
    \"\n  local truncate_string6=\"\"\n  local truncate_string7=\"\"\n  local truncate_string8=\"\
    \"\n  local truncate_string9=\"\"\n  local truncate_string10=\"\"\n  local truncate_string11=\"\
    \"\n  local truncate_string12=\"\"\n  local truncate_string13=\"\"\n  local truncate_string14=\"\
    \"\n  local truncate_string15=\"\"\n  local truncate_string16=\"\"\n  local truncate_string17=\"\
    \"\n  local truncate_string18=\"\"\n  local truncate_string19=\"\"\n  local truncate_string20=\"\
    \"\n  local truncate_string21=\"\"\n  local truncate_string22=\"\"\n  local truncate_string23=\"\
    \"\n  local truncate_string24=\"\"\n  local truncate_string25=\"\"\n  local truncate_string26=\"\
    \"\n  local truncate_string27=\"\"\n  local truncate_string28=\"\"\n  local truncate_string29=\"\
    \"\n  local truncate_string30=\"\"\n  local truncate_string31=\"\"\n  local truncate_string32=\"\
    \"\n  local truncate_string33=\"\"\n  local truncate_string34=\"\"\n  local truncate_string35=\"\
    \"\n  local truncate_string36=\"\"\n  local truncate_string37=\"\"\n  local truncate_string38=\"\
    \"\n  local truncate_string39=\"\"\n  local truncate_string40=\"\"\n  local truncate_string41=\"\
    \"\n  local truncate_string42=\"\"\n  local truncate_string43=\"\"\n  local truncate_string44=\"\
    \"\n  local truncate_string45=\"\"\n  local truncate_string46=\"\"\n  local truncate_string47=\"\
    \"\n  local truncate_string48=\"\"\n  local truncate_string49=\"\"\n  local truncate_string50=\"\
    \"\n  local truncate_string51=\"\"\n  local truncate_string52=\"\"\n  local truncate_string53=\"\
    \"\n  local truncate_string54=\"\"\n  local truncate_string55=\"\"\n  local truncate_string56=\"\
    \"\n  local truncate_string57=\"\"\n  local truncate_string58=\"\"\n  local truncate_string59=\"\
    \"\n  local truncate_string60=\"\"\n  local truncate_string61=\"\"\n  local truncate_string62\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local integer\n\
    \  local decimal\n  local decimals\n  local decimals_string\n  local decimals_string_length\n\
    \  local decimals_string_length_string\n  local decimals_string_length_string_length\n\
    \  local decimals_string_length_string_length_string\n  local decimals_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string\n  local decimals_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_string=\"\"\n  local truncate_string2=\"\
    \"\n  local truncate_string3=\"\"\n  local truncate_string4=\"\"\n  local truncate_string5=\"\
    \"\n  local truncate_string6=\"\"\n  local truncate_string7=\"\"\n  local truncate_string8=\"\
    \"\n  local truncate_string9=\"\"\n  local truncate_string10=\"\"\n  local truncate_string11=\"\
    \"\n  local truncate_string12=\"\"\n  local truncate_string13=\"\"\n  local truncate_string14=\"\
    \"\n  local truncate_string15=\"\"\n  local truncate_string16=\"\"\n  local truncate_string17=\"\
    \"\n  local truncate_string18=\"\"\n  local truncate_string19=\"\"\n  local truncate_string20=\"\
    \"\n  local truncate_string21=\"\"\n  local truncate_string22=\"\"\n  local truncate_string23=\"\
    \"\n  local truncate_string24=\"\"\n  local truncate_string25=\"\"\n  local truncate_string26=\"\
    \"\n  local truncate_string27=\"\"\n  local truncate_string28=\"\"\n  local truncate_string29=\"\
    \"\n  local truncate_string30=\"\"\n  local truncate_string31=\"\"\n  local truncate_string32=\"\
    \"\n  local truncate_string33=\"\"\n  local truncate_string34=\"\"\n  local truncate_string35=\"\
    \"\n  local truncate_string36=\"\"\n  local truncate_string37=\"\"\n  local truncate_string38=\"\
    \"\n  local truncate_string39=\"\"\n  local truncate_string40=\"\"\n  local truncate_string41=\"\
    \"\n  local truncate_string42=\"\"\n  local truncate_string43=\"\"\n  local truncate_string44=\"\
    \"\n  local truncate_string45=\"\"\n  local truncate_string46=\"\"\n  local truncate_string47=\"\
    \"\n  local truncate_string48=\"\"\n  local truncate_string49=\"\"\n  local truncate_string50=\"\
    \"\n  local truncate_string51=\"\"\n  local truncate_string52=\"\"\n  local truncate_string53=\"\
    \"\n  local truncate_string54=\"\"\n  local truncate_string55=\"\"\n  local truncate_string56=\"\
    \"\n  local truncate_string57=\"\"\n  local truncate_string58=\"\"\n  local truncate_string59=\"\
    \"\n  local truncate_string60=\"\"\n  local truncate_string61=\"\"\n  local truncate_string62\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local truncate_part\n  local truncate_part_num\n  local truncate_part_dec\n\
    \  local truncate_part_decnum\n  local truncate_part_decdec\n  local truncate_part_decdecnum\n\
    \  local truncate_part_decdecdec\n  local truncate_part_decdecdecnum\n  local\
    \ truncate_part_decdecdecdec\n  local truncate_part_decdecdecdecnum\n  local truncate_part_decdecdecdecdec\n\
    \  local truncate_part_decdecdecdecnum\n  local truncate_part_decdecdecdecdec\n\
    \  local truncate_part_decdecdecdecdecnum\n  local truncate_part_decdecdecdecdecdec\n\
    \  local truncate_part_decdecdecdecdecnum\n  local truncate_part_decdecdecdecdecdec\n\
    \  local truncate_part_decdecdecdecdecnum\n  local truncate_part_decdecdecdecdecdec\n\
    \  local truncate_part_decdecdecdecdecnum\n  local truncate_part_decdecdecdecdecdec\n\
    \  local truncate_part_decdecdecdecdecnum\n  local truncate_part_decdecdecdecdecdec\n\
    \  local truncate_part_decdecdecdecdecnum\n  local truncate_part_decdecdecdecdecdec\n\
    \  local truncate_part_decdecdecdecdecnum\n  local truncate_part_decdecdecdecdecdec\n\
    \  local truncate_part_decdecdecdecnum\n  local truncate_part_decdecdecdecdec\n\
    \  local truncate_part_decdecdecdecnum\n  local truncate_part_decdecdecdecdec\n\
    \  local truncate_part_decdecdecdecnum\n  local truncate_part_decdecdecdecdec\n\
    \  local truncate_part_decdecdecdecnum\n  local truncate_part_decdecdecdecdec\n\
    \  local truncate_part_decdecdecdecnum\n  local truncate_part_decdecdecdecdec\n\
    \  local truncate_part_decdecdecdecnum\n  local truncate_part_decdecdecdecdec\n\
    \  local truncate_part_decdecdecdecnum\n  local truncate_part_decdecdecdecdec\n\
    \  local truncate_part_decdecdecdecnum\n  local truncate_part_decdecdecdecdec\n\
    \  local truncate_part_decdecdecdecnum\n  local truncate_part_decdecdecdecdec\n\
    \  local truncate_part_decdecdecdecnum\n  local truncate_part_\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n\n  while [ $number -gt 0 ]; do\n   \
    \ integer=$(( $integer + 1 ))\n    remainder=$(( $number % 10 ))\n    number=$((\
    \ $number / 10 ))\n    decimals=$(( $decimals + 1 ))\n  done\n\n  echo \"$decimals\"\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpeu4qehyq.sh: line 14: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimal\n  local\
    \ decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local decimals_string\n  local decimal_string\n  local decimal_string_length\n\
    \  local decimal_string_length_string\n  local decimal_string_length_string_length\n\
    \  local decimal_string_length_string_length_string\n  local decimal_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string\n  local decimal_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_digits=0\n  local\
    \ trunc_digits_max=0\n  local trunc_digits_max_digits=0\n  local trunc_digits_max_digits_max=0\n\
    \  local trunc_digits_max_digits_max_digits=0\n  local trunc_digits_max_digits_max_digits_max=0\n\
    \  local trunc_digits_max_digits_max_digits_max_digits=0\n  local trunc_digits_max_digits_max_digits_max_digits_max=0\n\
    \  local trunc_digits_max_digits_max_digits_max_digits_max_digits=0\n  local trunc_digits_max_digits_max_digits_max_digits_max_digits_max=0\n\
    \  local trunc_digits_max_digits_max_digits_max_digits_max_digits_max_digits=0\n\
    \  local trunc_digits_max_digits_max_digits_max_digits_max_digits_max_digits=0\n\
    \  local trunc_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max=0\n\
    \  local trunc_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits=0\n\
    \  local trunc_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max=0\n\
    \  local trunc_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max=0\n\
    \  local trunc_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits=0\n\
    \  local trunc_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max=0\n\
    \  local trunc_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits=0\n\
    \  local trunc_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max=0\n\
    \  local trunc_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits=0\n\
    \  local trunc_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_digits_max_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_number_in_int=0\n\
    \  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n  local trunc_decimals_in_float=0\n\
    \  local trunc_number_in_float_in_int=0\n  local trunc_decimals_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float=0\n  local trunc_decimals_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_decimals_in_float_in_float_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 2
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local integer=0\n    local remainder=0\n\n    if [[ $number\
    \ == *[!0-9]* ]]; then\n        echo \"$number\" | grep -q '^-?[0-9]+$'\n    \
    \    if [ $? -eq 0 ]; then\n            integer=$(( ${number#-} + 0 ))\n     \
    \       decimals=$(( ${number%%.*} + 0 ))\n        else\n            echo \"$number\"\
    \ | grep -q '^-?[0-9]*\\.[0-9]+$'\n            if [ $? -eq 0 ]; then\n       \
    \         integer=$(( ${number#-} + 0 ))\n                decimals=$(( ${number%%.*}\
    \ + 0 ))\n            else\n                echo \"$number\" | grep -q '^-?[0-9]+\\\
    .$'\n                if [ $? -eq 0 ]; then\n                    integer=$(( ${number#-}\
    \ + 0 ))\n                    decimals=$(( ${number%%.*} + 0 ))\n            \
    \    else\n                    echo \"$number\" | grep -q '^-?[0-9]+$'\n     \
    \               if [ $? -eq 0 ]; then\n                        integer=$(( ${number#-}\
    \ + 0 ))\n                        decimals=0\n                    else\n     \
    \                   echo \"$number\" | grep -q '^-?[0-9]*\\.[0-9]+$'\n       \
    \                 if [ $? -eq 0 ]; then\n                            integer=$((\
    \ ${number#-} + 0 ))\n                            decimals=$(( ${number%%.*} +\
    \ 0 ))\n                        else\n                            echo \"$number\"\
    \ | grep -q '^-?[0-9]+\\.$'\n                            if [ $? -eq 0 ]; then\n\
    \                                integer=$(( ${number#-} + 0 ))\n            \
    \                    decimals=0\n                            else\n          \
    \                      echo \"$number\" | grep -q '^-?[0-9]+$'\n             \
    \                   if [ $? -eq 0 ]; then\n                                  \
    \  integer=$(( ${number#-} + 0 ))\n                                    decimals=0\n\
    \                                else\n                                    echo\
    \ \"$number\" | grep -q '^-?[0-9]*\\.[0-9]+$'\n                              \
    \      if [ $? -eq 0 ]; then\n                                        integer=$((\
    \ ${number#-} + 0 ))\n                                        decimals=$(( ${number%%.*}\
    \ + 0 ))\n                                    else\n                         \
    \               echo \"$number\" | grep -q '^-?[0-9]+\\.$'\n                 \
    \                       if [ $? -eq 0 ]; then\n                              \
    \              integer=$(( ${number#-} + 0 ))\n                              \
    \              decimals=0\n                                        else\n    \
    \                                        echo \"$number\" | grep -q '\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8vf18ar9.sh: line 60: unexpected EOF while looking for matching
    `''''

    /tmp/tmp8vf18ar9.sh: line 75: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local truncate_part\n  local truncate_part_str\n  local truncate_part_int\n\
    \  local truncate_part_dec\n  local truncate_part_dec_int truncate_part_dec_str\n\
    \  local truncate_part_dec_int\n  local truncate_part_dec_dec\n  local truncate_part_dec_dec_int\
    \ truncate_part_dec_dec_str\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_dec_int\
    \ truncate_part_dec_dec_dec_str\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_dec_int\
    \ truncate_part_dec_dec_dec_str\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_dec_int\
    \ truncate_part_dec_dec_dec_str\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_\n}\n\ncandidate() {\n  \
    \  truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local truncate_decimals=0\n  local truncate_number=0\n  local truncate_number_in_base=0\n\
    \  local truncate_number_in_base_in_base=0\n  local truncate_number_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base=0\n  local truncate_number_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base=0\n \
    \ local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local trunc_number\n  local trunc_number_in_int\n\n  decimal=$(echo\
    \ \"$number\" | awk '{print $1*10^$2}')\n  trunc_number=$(( number - decimal ))\n\
    \  decimals=$(( 10#$decimal ))\n\n  while [ \"$decimals\" -gt 0 ]; do\n    decimal=$((\
    \ decimal / 10 ))\n    decimals=$(( decimals - 1 ))\n  done\n\n  trunc_number_in_int=$((\
    \ trunc_number * 10 ))\n  trunc_number_in_int=$(( trunc_number_in_int + decimal\
    \ ))\n\n  echo \"$trunc_number_in_int\"\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph0v58wqq.sh: line 16: 3.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_number_index=0\n  local trunc_number_index2=0\n\
    \  local trunc_number_index3=0\n  local trunc_number_index4=0\n  local trunc_number_index5=0\n\
    \  local trunc_number_index6=0\n  local trunc_number_index7=0\n  local trunc_number_index8=0\n\
    \  local trunc_number_index9=0\n  local trunc_number_index10=0\n  local trunc_number_index11=0\n\
    \  local trunc_number_index12=0\n  local trunc_number_index13=0\n  local trunc_number_index14=0\n\
    \  local trunc_number_index15=0\n  local trunc_number_index16=0\n  local trunc_number_index17=0\n\
    \  local trunc_number_index18=0\n  local trunc_number_index19=0\n  local trunc_number_index20=0\n\
    \  local trunc_number_index21=0\n  local trunc_number_index22=0\n  local trunc_number_index23=0\n\
    \  local trunc_number_index24=0\n  local trunc_number_index25=0\n  local trunc_number_index26=0\n\
    \  local trunc_number_index27=0\n  local trunc_number_index28=0\n  local trunc_number_index29=0\n\
    \  local trunc_number_index30=0\n  local trunc_number_index31=0\n  local trunc_number_index32=0\n\
    \  local trunc_number_index33=0\n  local trunc_number_index34=0\n  local trunc_number_index35=0\n\
    \  local trunc_number_index36=0\n  local trunc_number_index37=0\n  local trunc_number_index38=0\n\
    \  local trunc_number_index39=0\n  local trunc_number_index40=0\n  local trunc_number_index41=0\n\
    \  local trunc_number_index42=0\n  local trunc_number_index43=0\n  local trunc_number_index44=0\n\
    \  local trunc_number_index45=0\n  local trunc_number_index46=0\n  local trunc_number_index47=0\n\
    \  local trunc_number_index48=0\n  local trunc_number_index49=0\n  local trunc_number_index50=0\n\
    \  local trunc_number_index51=0\n  local trunc_number_index52=0\n  local trunc_number_index53=0\n\
    \  local trunc_number_index54=0\n  local trunc_number_index55=0\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_number_index=0\n  local trunc_number_index2=0\n\
    \  local trunc_number_index3=0\n  local trunc_number_index4=0\n  local trunc_number_index5=0\n\
    \  local trunc_number_index6=0\n  local trunc_number_index7=0\n  local trunc_number_index8=0\n\
    \  local trunc_number_index9=0\n  local trunc_number_index10=0\n  local trunc_number_index11=0\n\
    \  local trunc_number_index12=0\n  local trunc_number_index13=0\n  local trunc_number_index14=0\n\
    \  local trunc_number_index15=0\n  local trunc_number_index16=0\n  local trunc_number_index17=0\n\
    \  local trunc_number_index18=0\n  local trunc_number_index19=0\n  local trunc_number_index20=0\n\
    \  local trunc_number_index21=0\n  local trunc_number_index22=0\n  local trunc_number_index23=0\n\
    \  local trunc_number_index24=0\n  local trunc_number_index25=0\n  local trunc_number_index26=0\n\
    \  local trunc_number_index27=0\n  local trunc_number_index28=0\n  local trunc_number_index29=0\n\
    \  local trunc_number_index30=0\n  local trunc_number_index31=0\n  local trunc_number_index32=0\n\
    \  local trunc_number_index33=0\n  local trunc_number_index34=0\n  local trunc_number_index35=0\n\
    \  local trunc_number_index36=0\n  local trunc_number_index37=0\n  local trunc_number_index38=0\n\
    \  local trunc_number_index39=0\n  local trunc_number_index40=0\n  local trunc_number_index41=0\n\
    \  local trunc_number_index42=0\n  local trunc_number_index43=0\n  local trunc_number_index44=0\n\
    \  local trunc_number_index45=0\n  local trunc_number_index46=0\n  local trunc_number_index47=0\n\
    \  local trunc_number_index48=0\n  local trunc_number_index49=0\n  local trunc_number_index50=0\n\
    \  local trunc_number_index51=0\n  local trunc_number_index52=0\n  local trunc_number_index53=0\n\
    \  local trunc_number_index54=0\n  local trunc_number_index55=0\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n\n  while [ $number -gt 0 ]; do\n    trunc_number=$((trunc_number\
    \ * 10 + $number % 10))\n    number=$((number / 10))\n    decimals=$((decimals\
    \ + 1))\n  done\n\n  echo \"$trunc_number\"\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpr83shfvp.sh: line 13: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local integer\n  local remainder\n  local remainder_as_float\n\
    \  local remainder_as_int\n  local remainder_as_string\n  local remainder_as_string2\n\
    \  local remainder_as_string3\n  local remainder_as_string4\n  local remainder_as_string5\n\
    \  local remainder_as_string6\n  local remainder_as_string7\n  local remainder_as_string8\n\
    \  local remainder_as_string9\n  local remainder_as_string10\n  local remainder_as_string11\n\
    \  local remainder_as_string12\n  local remainder_as_string13\n  local remainder_as_string14\n\
    \  local remainder_as_string15\n  local remainder_as_string16\n  local remainder_as_string17\n\
    \  local remainder_as_string18\n  local remainder_as_string19\n  local remainder_as_string20\n\
    \  local remainder_as_string21\n  local remainder_as_string22\n  local remainder_as_string23\n\
    \  local remainder_as_string24\n  local remainder_as_string25\n  local remainder_as_string26\n\
    \  local remainder_as_string27\n  local remainder_as_string28\n  local remainder_as_string29\n\
    \  local remainder_as_string30\n  local remainder_as_string31\n  local remainder_as_string32\n\
    \  local remainder_as_string33\n  local remainder_as_string34\n  local remainder_as_string35\n\
    \  local remainder_as_string36\n  local remainder_as_string37\n  local remainder_as_string38\n\
    \  local remainder_as_string39\n  local remainder_as_string40\n  local remainder_as_string41\n\
    \  local remainder_as_string42\n  local remainder_as_string43\n  local remainder_as_string44\n\
    \  local remainder_as_string45\n  local remainder_as_string46\n  local remainder_as_string47\n\
    \  local remainder_as_string48\n  local remainder_as_string49\n  local remainder_as_string50\n\
    \  local remainder_as_string51\n  local remainder_as_string52\n  local remainder_as_string53\n\
    \  local remainder_as_string54\n  local remainder_as_string55\n  local remainder_as_string56\n\
    \  local remainder_as_string57\n  local remainder_as_string58\n  local remainder_as_string59\n\
    \  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_number_in_int=0\n\
    \  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n  local trunc_decimals_in_float=0\n\
    \  local trunc_number_in_float_in_int=0\n  local trunc_decimals_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float=0\n  local trunc_decimals_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_decimals_in_float_in_float_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_decimals=0\n  local truncate_decimals_string=\"\
    \"\n  local truncate_decimals_string2=\"\"\n  local truncate_decimals_string3=\"\
    \"\n  local truncate_decimals_string4=\"\"\n  local truncate_decimals_string5=\"\
    \"\n  local truncate_decimals_string6=\"\"\n  local truncate_decimals_string7=\"\
    \"\n  local truncate_decimals_string8=\"\"\n  local truncate_decimals_string9=\"\
    \"\n  local truncate_decimals_string10=\"\"\n  local truncate_decimals_string11=\"\
    \"\n  local truncate_decimals_string12=\"\"\n  local truncate_decimals_string13=\"\
    \"\n  local truncate_decimals_string14=\"\"\n  local truncate_decimals_string15=\"\
    \"\n  local truncate_decimals_string16=\"\"\n  local truncate_decimals_string17=\"\
    \"\n  local truncate_decimals_string18=\"\"\n  local truncate_decimals_string19=\"\
    \"\n  local truncate_decimals_string20=\"\"\n  local truncate_decimals_string21=\"\
    \"\n  local truncate_decimals_string22=\"\"\n  local truncate_decimals_string23=\"\
    \"\n  local truncate_decimals_string24=\"\"\n  local truncate_decimals_string25=\"\
    \"\n  local truncate_decimals_string26=\"\"\n  local truncate_decimals_string27=\"\
    \"\n  local truncate_decimals_string28=\"\"\n  local truncate_decimals_string29=\"\
    \"\n  local truncate_decimals_string30=\"\"\n  local truncate_decimals_string31=\"\
    \"\n  local truncate_decimals_string32=\"\"\n  local truncate_decimals_string33=\"\
    \"\n  local truncate_decimals_string34=\"\"\n  local truncate_decimals_string35=\"\
    \"\n  local truncate_decimals_string36=\"\"\n  local truncate_decimals_string37=\"\
    \"\n  local truncate_decimals_string38=\"\"\n  local truncate_decimals_string39=\"\
    \"\n  local truncate_decimals_string40=\"\"\n  local truncate_decimals_string41=\"\
    \"\n  local truncate_decimals_string42=\"\"\n  local truncate_decimals_string43=\"\
    \"\n  local truncate_decimals_string44=\"\"\n  local truncate_decimals_string45=\"\
    \"\n  local truncate_decimals_string46=\"\"\n  local truncate_decimals_string47=\"\
    \"\n  local truncate_decimals_string48=\"\"\n  local truncate_decimals_\n}\n\n\
    candidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local decimals_string=\"\"\n    local trunc_number=0\n    local\
    \ trunc_number_string=\"\"\n    local trunc_number_string2=\"\"\n    local trunc_number_string3=\"\
    \"\n    local trunc_number_string4=\"\"\n    local trunc_number_string5=\"\"\n\
    \    local trunc_number_string6=\"\"\n    local trunc_number_string7=\"\"\n  \
    \  local trunc_number_string8=\"\"\n    local trunc_number_string9=\"\"\n    local\
    \ trunc_number_string10=\"\"\n    local trunc_number_string11=\"\"\n    local\
    \ trunc_number_string12=\"\"\n    local trunc_number_string13=\"\"\n    local\
    \ trunc_number_string14=\"\"\n    local trunc_number_string15=\"\"\n    local\
    \ trunc_number_string16=\"\"\n    local trunc_number_string17=\"\"\n    local\
    \ trunc_number_string18=\"\"\n    local trunc_number_string19=\"\"\n    local\
    \ trunc_number_string20=\"\"\n    local trunc_number_string21=\"\"\n    local\
    \ trunc_number_string22=\"\"\n    local trunc_number_string23=\"\"\n    local\
    \ trunc_number_string24=\"\"\n    local trunc_number_string25=\"\"\n    local\
    \ trunc_number_string26=\"\"\n    local trunc_number_string27=\"\"\n    local\
    \ trunc_number_string28=\"\"\n    local trunc_number_string29=\"\"\n    local\
    \ trunc_number_string30=\"\"\n    local trunc_number_string31=\"\"\n    local\
    \ trunc_number_string32=\"\"\n    local trunc_number_string33=\"\"\n    local\
    \ trunc_number_string34=\"\"\n    local trunc_number_string35=\"\"\n    local\
    \ trunc_number_string36=\"\"\n    local trunc_number_string37=\"\"\n    local\
    \ trunc_number_string38=\"\"\n    local trunc_number_string39=\"\"\n    local\
    \ trunc_number_string40=\"\"\n    local trunc_number_string41=\"\"\n    local\
    \ trunc_number_string42=\"\"\n    local trunc_number_string43=\"\"\n    local\
    \ trunc_number_string44=\"\"\n    local trunc_number_string45=\"\"\n    local\
    \ trunc_number_string46=\"\"\n    local trunc_number_string47=\"\"\n    local\
    \ trunc_number_string48=\"\"\n    local trunc_number_string49=\"\"\n    local\
    \ trunc_number_string50=\"\"\n    local trunc_number_string51=\"\"\n    local\
    \ trunc_number_string52=\"\"\n    local trunc_number_string53=\"\"\n    local\
    \ trunc_number_string54=\"\"\n    \n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local trunc_number=0\n    local trunc_decimal=0\n    local trunc_number_index=0\n\
    \    local trunc_decimal_index=0\n    local trunc_number_index2=0\n    local trunc_decimal_index2=0\n\
    \    local trunc_number_index3=0\n    local trunc_decimal_index3=0\n    local\
    \ trunc_number_index4=0\n    local trunc_decimal_index4=0\n    local trunc_number_index5=0\n\
    \    local trunc_decimal_index5=0\n    local trunc_number_index6=0\n    local\
    \ trunc_decimal_index6=0\n    local trunc_number_index7=0\n    local trunc_decimal_index7=0\n\
    \    local trunc_number_index8=0\n    local trunc_decimal_index8=0\n    local\
    \ trunc_number_index9=0\n    local trunc_decimal_index9=0\n    local trunc_number_index10=0\n\
    \    local trunc_decimal_index10=0\n    local trunc_number_index11=0\n    local\
    \ trunc_decimal_index11=0\n    local trunc_number_index12=0\n    local trunc_decimal_index12=0\n\
    \    local trunc_number_index13=0\n    local trunc_decimal_index13=0\n    local\
    \ trunc_number_index14=0\n    local trunc_decimal_index14=0\n    local trunc_number_index15=0\n\
    \    local trunc_decimal_index15=0\n    local trunc_number_index16=0\n    local\
    \ trunc_decimal_index16=0\n    local trunc_number_index17=0\n    local trunc_decimal_index17=0\n\
    \    local trunc_number_index18=0\n    local trunc_decimal_index18=0\n    local\
    \ trunc_number_index19=0\n    local trunc_decimal_index19=0\n    local trunc_number_index20=0\n\
    \    local trunc_decimal_index20=0\n    local trunc_number_index21=0\n    local\
    \ trunc_decimal_index21=0\n    local trunc_number_index22=0\n    local trunc_decimal_index22=0\n\
    \    local trunc_number_index23=0\n    local trunc_decimal_index23=0\n    local\
    \ trunc_number_index24=0\n    local trunc_decimal_index24=0\n    local trunc_number_index25=0\n\
    \    local trunc_decimal_index25=0\n    local trunc_number_index26=0\n    local\
    \ trunc_decimal_index26=0\n    local trunc_number_index27=0\n    local trunc_decimal_index27=0\n\
    \    local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_string=\"\"\n  local truncate_string2=\"\
    \"\n  local truncate_string3=\"\"\n  local truncate_string4=\"\"\n  local truncate_string5=\"\
    \"\n  local truncate_string6=\"\"\n  local truncate_string7=\"\"\n  local truncate_string8=\"\
    \"\n  local truncate_string9=\"\"\n  local truncate_string10=\"\"\n  local truncate_string11=\"\
    \"\n  local truncate_string12=\"\"\n  local truncate_string13=\"\"\n  local truncate_string14=\"\
    \"\n  local truncate_string15=\"\"\n  local truncate_string16=\"\"\n  local truncate_string17=\"\
    \"\n  local truncate_string18=\"\"\n  local truncate_string19=\"\"\n  local truncate_string20=\"\
    \"\n  local truncate_string21=\"\"\n  local truncate_string22=\"\"\n  local truncate_string23=\"\
    \"\n  local truncate_string24=\"\"\n  local truncate_string25=\"\"\n  local truncate_string26=\"\
    \"\n  local truncate_string27=\"\"\n  local truncate_string28=\"\"\n  local truncate_string29=\"\
    \"\n  local truncate_string30=\"\"\n  local truncate_string31=\"\"\n  local truncate_string32=\"\
    \"\n  local truncate_string33=\"\"\n  local truncate_string34=\"\"\n  local truncate_string35=\"\
    \"\n  local truncate_string36=\"\"\n  local truncate_string37=\"\"\n  local truncate_string38=\"\
    \"\n  local truncate_string39=\"\"\n  local truncate_string40=\"\"\n  local truncate_string41=\"\
    \"\n  local truncate_string42=\"\"\n  local truncate_string43=\"\"\n  local truncate_string44=\"\
    \"\n  local truncate_string45=\"\"\n  local truncate_string46=\"\"\n  local truncate_string47=\"\
    \"\n  local truncate_string48=\"\"\n  local truncate_string49=\"\"\n  local truncate_string50=\"\
    \"\n  local truncate_string51=\"\"\n  local truncate_string52=\"\"\n  local truncate_string53=\"\
    \"\n  local truncate_string54=\"\"\n  local truncate_string55=\"\"\n  local truncate_string56=\"\
    \"\n  local truncate_string57=\"\"\n  local truncate_string58=\"\"\n  local truncate_string59=\"\
    \"\n  local truncate_string60=\"\"\n  local truncate_string61=\"\"\n  local truncate_string62\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_str=\"\"\n  local trunc_number=0\n  local trunc_number_str=\"\
    \"\n  local trunc_number_str_len=0\n  local trunc_number_str_len2=0\n  local trunc_number_str_len3=0\n\
    \  local trunc_number_str_len4=0\n  local trunc_number_str_len5=0\n  local trunc_number_str_len6=0\n\
    \  local trunc_number_str_len7=0\n  local trunc_number_str_len8=0\n  local trunc_number_str_len9=0\n\
    \  local trunc_number_str_len10=0\n  local trunc_number_str_len11=0\n  local trunc_number_str_len12=0\n\
    \  local trunc_number_str_len13=0\n  local trunc_number_str_len14=0\n  local trunc_number_str_len15=0\n\
    \  local trunc_number_str_len16=0\n  local trunc_number_str_len17=0\n  local trunc_number_str_len18=0\n\
    \  local trunc_number_str_len19=0\n  local trunc_number_str_len20=0\n  local trunc_number_str_len21=0\n\
    \  local trunc_number_str_len22=0\n  local trunc_number_str_len23=0\n  local trunc_number_str_len24=0\n\
    \  local trunc_number_str_len25=0\n  local trunc_number_str_len26=0\n  local trunc_number_str_len27=0\n\
    \  local trunc_number_str_len28=0\n  local trunc_number_str_len29=0\n  local trunc_number_str_len30=0\n\
    \  local trunc_number_str_len31=0\n  local trunc_number_str_len32=0\n  local trunc_number_str_len33=0\n\
    \  local trunc_number_str_len34=0\n  local trunc_number_str_len35=0\n  local trunc_number_str_len36=0\n\
    \  local trunc_number_str_len37=0\n  local trunc_number_str_len38=0\n  local trunc_number_str_len39=0\n\
    \  local trunc_number_str_len40=0\n  local trunc_number_str_len41=0\n  local trunc_number_str_len42=0\n\
    \  local trunc_number_str_len43=0\n  local trunc_number_str_len44=0\n  local trunc_number_str_len45=0\n\
    \  local trunc_number_str_len46=0\n  local trunc_number_str_len47=0\n  local trunc_number_str_len48=0\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  \n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local truncate_decimals=0\n  local truncate_number=0\n  local truncate_number_index=0\n\
    \  local truncate_number_index2=0\n  local truncate_number_index3=0\n  local truncate_number_index4=0\n\
    \  local truncate_number_index5=0\n  local truncate_number_index6=0\n  local truncate_number_index7=0\n\
    \  local truncate_number_index8=0\n  local truncate_number_index9=0\n  local truncate_number_index10=0\n\
    \  local truncate_number_index11=0\n  local truncate_number_index12=0\n  local\
    \ truncate_number_index13=0\n  local truncate_number_index14=0\n  local truncate_number_index15=0\n\
    \  local truncate_number_index16=0\n  local truncate_number_index17=0\n  local\
    \ truncate_number_index18=0\n  local truncate_number_index19=0\n  local truncate_number_index20=0\n\
    \  local truncate_number_index21=0\n  local truncate_number_index22=0\n  local\
    \ truncate_number_index23=0\n  local truncate_number_index24=0\n  local truncate_number_index25=0\n\
    \  local truncate_number_index26=0\n  local truncate_number_index27=0\n  local\
    \ truncate_number_index28=0\n  local truncate_number_index29=0\n  local truncate_number_index30=0\n\
    \  local truncate_number_index31=0\n  local truncate_number_index32=0\n  local\
    \ truncate_number_index33=0\n  local truncate_number_index34=0\n  local truncate_number_index35=0\n\
    \  local truncate_number_index36=0\n  local truncate_number_index37=0\n  local\
    \ truncate_number_index38=0\n  local truncate_number_index39=0\n  local truncate_number_index40=0\n\
    \  local truncate_number_index41=0\n  local truncate_number_index42=0\n  local\
    \ truncate_number_index43=0\n  local truncate_number_index44=0\n  local truncate_number_index45=0\n\
    \  local truncate_number_index46=0\n  local truncate_number_index47=0\n  local\
    \ truncate_number_index48=0\n  local truncate_number_index49=0\n  local truncate_number_index50=0\n\
    \  local truncate_number_index51=0\n  local truncate_number_index52=0\n  local\
    \ truncate_number_index53=0\n  local truncate_number_index54=0\n\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local decimals\n  local decimal\n  local trunc_number\n  local\
    \ trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  local trunc_number\n  local trunc_number\n  local trunc_number\n  local trunc_number\n\
    \  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string_length=0\n  local decimals_string_length_string=\"\
    \"\n  local decimals_string_length_string_length=0\n  local decimals_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length=0\n  local decimals_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local decimalPart\n  local decimalPartCount\n  local decimalPartCountMax\n\
    \  local decimalPartCountMin\n  local decimalPartCountMinMax\n  local decimalPartCountMinMaxIndex\n\
    \  local decimalPartCountMinMaxIndexMax\n  local decimalPartCountMinMaxIndexMin\n\
    \  local decimalPartCountMinMaxIndexMinMax\n  local decimalPartCountMinMaxIndexMinMaxIndex\n\
    \  local decimalPartCountMinMaxIndexMinMaxIndexMax\n  local decimalPartCountMinMaxIndexMinMaxIndexMinMax\n\
    \  local decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndex\n  local decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndexMax\n\
    \  local decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndexMax\n  local decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndexMaxIndexMax\n\
    \  local decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndexMaxIndexMax\n  local\
    \ decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndexMaxIndexMaxIndexMax\n  local\
    \ decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndexMaxIndexMaxIndexMax\n  local\
    \ decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndexMaxIndexMaxIndexMaxIndexMax\n\
    \  local decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMax\n\
    \  local decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMax\n\
    \  local decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMax\n\
    \  local decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMax\n\
    \  local decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMax\n\
    \  local decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMax\n\
    \  local decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMax\n\
    \  local decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMaxIndexMax\n\
    \  local decimalPartCountMinMaxIndexMinMaxIndexMinMaxIndexMax\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ integer\n    local decimal\n    local decimals\n\n    integer=$(( number / 10\
    \ ))\n    decimal=$(( number % 10 ))\n    decimals=$(( 10 - decimal ))\n\n   \
    \ echo \"$integer $decimal\"\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppbbjt5ye.sh: line 14: 3.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_decimals=0\n  local truncate_decimals_string=\"\
    \"\n  local truncate_decimals_string2=\"\"\n  local truncate_decimals_string3=\"\
    \"\n  local truncate_decimals_string4=\"\"\n  local truncate_decimals_string5=\"\
    \"\n  local truncate_decimals_string6=\"\"\n  local truncate_decimals_string7=\"\
    \"\n  local truncate_decimals_string8=\"\"\n  local truncate_decimals_string9=\"\
    \"\n  local truncate_decimals_string10=\"\"\n  local truncate_decimals_string11=\"\
    \"\n  local truncate_decimals_string12=\"\"\n  local truncate_decimals_string13=\"\
    \"\n  local truncate_decimals_string14=\"\"\n  local truncate_decimals_string15=\"\
    \"\n  local truncate_decimals_string16=\"\"\n  local truncate_decimals_string17=\"\
    \"\n  local truncate_decimals_string18=\"\"\n  local truncate_decimals_string19=\"\
    \"\n  local truncate_decimals_string20=\"\"\n  local truncate_decimals_string21=\"\
    \"\n  local truncate_decimals_string22=\"\"\n  local truncate_decimals_string23=\"\
    \"\n  local truncate_decimals_string24=\"\"\n  local truncate_decimals_string25=\"\
    \"\n  local truncate_decimals_string26=\"\"\n  local truncate_decimals_string27=\"\
    \"\n  local truncate_decimals_string28=\"\"\n  local truncate_decimals_string29=\"\
    \"\n  local truncate_decimals_string30=\"\"\n  local truncate_decimals_string31=\"\
    \"\n  local truncate_decimals_string32=\"\"\n  local truncate_decimals_string33=\"\
    \"\n  local truncate_decimals_string34=\"\"\n  local truncate_decimals_string35=\"\
    \"\n  local truncate_decimals_string36=\"\"\n  local truncate_decimals_string37=\"\
    \"\n  local truncate_decimals_string38=\"\"\n  local truncate_decimals_string39=\"\
    \"\n  local truncate_decimals_string40=\"\"\n  local truncate_decimals_string41=\"\
    \"\n  local truncate_decimals_string42=\"\"\n  local truncate_decimals_string43=\"\
    \"\n  local truncate_decimals_string44=\"\"\n  local truncate_decimals_string45=\"\
    \"\n  local truncate_decimals_string46=\"\"\n  local truncate_decimals_string47=\"\
    \"\n  local truncate_decimals_string48=\"\"\n  local truncate_decimals_\n}\n\n\
    candidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal_part\n  local integer_part\n  local remainder\n  local remainder_part\n\
    \  local remainder_part_length\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n  local remainder_part_length_index\n  local remainder_part_index\n\
    \  local remainder_part_length_index\n  local remainder_part_index\n  local remainder_part_length_index\n\
    \  local remainder_part_index\n\n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_string=\"\"\n  local truncate_string2=\"\
    \"\n  local truncate_string3=\"\"\n  local truncate_string4=\"\"\n  local truncate_string5=\"\
    \"\n  local truncate_string6=\"\"\n  local truncate_string7=\"\"\n  local truncate_string8=\"\
    \"\n  local truncate_string9=\"\"\n  local truncate_string10=\"\"\n  local truncate_string11=\"\
    \"\n  local truncate_string12=\"\"\n  local truncate_string13=\"\"\n  local truncate_string14=\"\
    \"\n  local truncate_string15=\"\"\n  local truncate_string16=\"\"\n  local truncate_string17=\"\
    \"\n  local truncate_string18=\"\"\n  local truncate_string19=\"\"\n  local truncate_string20=\"\
    \"\n  local truncate_string21=\"\"\n  local truncate_string22=\"\"\n  local truncate_string23=\"\
    \"\n  local truncate_string24=\"\"\n  local truncate_string25=\"\"\n  local truncate_string26=\"\
    \"\n  local truncate_string27=\"\"\n  local truncate_string28=\"\"\n  local truncate_string29=\"\
    \"\n  local truncate_string30=\"\"\n  local truncate_string31=\"\"\n  local truncate_string32=\"\
    \"\n  local truncate_string33=\"\"\n  local truncate_string34=\"\"\n  local truncate_string35=\"\
    \"\n  local truncate_string36=\"\"\n  local truncate_string37=\"\"\n  local truncate_string38=\"\
    \"\n  local truncate_string39=\"\"\n  local truncate_string40=\"\"\n  local truncate_string41=\"\
    \"\n  local truncate_string42=\"\"\n  local truncate_string43=\"\"\n  local truncate_string44=\"\
    \"\n  local truncate_string45=\"\"\n  local truncate_string46=\"\"\n  local truncate_string47=\"\
    \"\n  local truncate_string48=\"\"\n  local truncate_string49=\"\"\n  local truncate_string50=\"\
    \"\n  local truncate_string51=\"\"\n  local truncate_string52=\"\"\n  local truncate_string53=\"\
    \"\n  local truncate_string54=\"\"\n  local truncate_string55=\"\"\n  local truncate_string56=\"\
    \"\n  local truncate_string57=\"\"\n  local truncate_string58=\"\"\n  local truncate_string59=\"\
    \"\n  local truncate_string60=\"\"\n  local truncate_string61=\"\"\n  local truncate_string62\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_string=\"\"\n  local truncate_string2=\"\
    \"\n  local truncate_string3=\"\"\n  local truncate_string4=\"\"\n  local truncate_string5=\"\
    \"\n  local truncate_string6=\"\"\n  local truncate_string7=\"\"\n  local truncate_string8=\"\
    \"\n  local truncate_string9=\"\"\n  local truncate_string10=\"\"\n  local truncate_string11=\"\
    \"\n  local truncate_string12=\"\"\n  local truncate_string13=\"\"\n  local truncate_string14=\"\
    \"\n  local truncate_string15=\"\"\n  local truncate_string16=\"\"\n  local truncate_string17=\"\
    \"\n  local truncate_string18=\"\"\n  local truncate_string19=\"\"\n  local truncate_string20=\"\
    \"\n  local truncate_string21=\"\"\n  local truncate_string22=\"\"\n  local truncate_string23=\"\
    \"\n  local truncate_string24=\"\"\n  local truncate_string25=\"\"\n  local truncate_string26=\"\
    \"\n  local truncate_string27=\"\"\n  local truncate_string28=\"\"\n  local truncate_string29=\"\
    \"\n  local truncate_string30=\"\"\n  local truncate_string31=\"\"\n  local truncate_string32=\"\
    \"\n  local truncate_string33=\"\"\n  local truncate_string34=\"\"\n  local truncate_string35=\"\
    \"\n  local truncate_string36=\"\"\n  local truncate_string37=\"\"\n  local truncate_string38=\"\
    \"\n  local truncate_string39=\"\"\n  local truncate_string40=\"\"\n  local truncate_string41=\"\
    \"\n  local truncate_string42=\"\"\n  local truncate_string43=\"\"\n  local truncate_string44=\"\
    \"\n  local truncate_string45=\"\"\n  local truncate_string46=\"\"\n  local truncate_string47=\"\
    \"\n  local truncate_string48=\"\"\n  local truncate_string49=\"\"\n  local truncate_string50=\"\
    \"\n  local truncate_string51=\"\"\n  local truncate_string52=\"\"\n  local truncate_string53=\"\
    \"\n  local truncate_string54=\"\"\n  local truncate_string55=\"\"\n  local truncate_string56=\"\
    \"\n  local truncate_string57=\"\"\n  local truncate_string58=\"\"\n  local truncate_string59=\"\
    \"\n  local truncate_string60=\"\"\n  local truncate_string61=\"\"\n  local truncate_string62\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimals_string=\"\"\n  local\
    \ integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  \n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimals_string=\"\"\n  local\
    \ integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local decimal_string=\"\
    \"\n  local integer_string=\"\"\n  \n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local trunc_number=0\n  local trunc_number_string=\"\
    \"\n  local trunc_number_string2=\"\"\n  local trunc_number_string3=\"\"\n  local\
    \ trunc_number_string4=\"\"\n  local trunc_number_string5=\"\"\n  local trunc_number_string6=\"\
    \"\n  local trunc_number_string7=\"\"\n  local trunc_number_string8=\"\"\n  local\
    \ trunc_number_string9=\"\"\n  local trunc_number_string10=\"\"\n  local trunc_number_string11=\"\
    \"\n  local trunc_number_string12=\"\"\n  local trunc_number_string13=\"\"\n \
    \ local trunc_number_string14=\"\"\n  local trunc_number_string15=\"\"\n  local\
    \ trunc_number_string16=\"\"\n  local trunc_number_string17=\"\"\n  local trunc_number_string18=\"\
    \"\n  local trunc_number_string19=\"\"\n  local trunc_number_string20=\"\"\n \
    \ local trunc_number_string21=\"\"\n  local trunc_number_string22=\"\"\n  local\
    \ trunc_number_string23=\"\"\n  local trunc_number_string24=\"\"\n  local trunc_number_string25=\"\
    \"\n  local trunc_number_string26=\"\"\n  local trunc_number_string27=\"\"\n \
    \ local trunc_number_string28=\"\"\n  local trunc_number_string29=\"\"\n  local\
    \ trunc_number_string30=\"\"\n  local trunc_number_string31=\"\"\n  local trunc_number_string32=\"\
    \"\n  local trunc_number_string33=\"\"\n  local trunc_number_string34=\"\"\n \
    \ local trunc_number_string35=\"\"\n  local trunc_number_string36=\"\"\n  local\
    \ trunc_number_string37=\"\"\n  local trunc_number_string38=\"\"\n  local trunc_number_string39=\"\
    \"\n  local trunc_number_string40=\"\"\n  local trunc_number_string41=\"\"\n \
    \ local trunc_number_string42=\"\"\n  local trunc_number_string43=\"\"\n  local\
    \ trunc_number_string44=\"\"\n  local trunc_number_string45=\"\"\n  local trunc_number_string46=\"\
    \"\n  local trunc_number_string47=\"\"\n  local trunc_number_string48=\"\"\n \
    \ local trunc_number_string49=\"\"\n  local trunc_number_string50=\"\"\n  local\
    \ trunc_number_string51=\"\"\n  local trunc_number_string52=\"\"\n  local trunc_number_string53=\"\
    \"\n  local trunc_number_string54=\"\"\n  \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local trunc_number=0\n  local trunc_number_string=\"\
    \"\n  local trunc_number_string2=\"\"\n  local trunc_number_string3=\"\"\n  local\
    \ trunc_number_string4=\"\"\n  local trunc_number_string5=\"\"\n  local trunc_number_string6=\"\
    \"\n  local trunc_number_string7=\"\"\n  local trunc_number_string8=\"\"\n  local\
    \ trunc_number_string9=\"\"\n  local trunc_number_string10=\"\"\n  local trunc_number_string11=\"\
    \"\n  local trunc_number_string12=\"\"\n  local trunc_number_string13=\"\"\n \
    \ local trunc_number_string14=\"\"\n  local trunc_number_string15=\"\"\n  local\
    \ trunc_number_string16=\"\"\n  local trunc_number_string17=\"\"\n  local trunc_number_string18=\"\
    \"\n  local trunc_number_string19=\"\"\n  local trunc_number_string20=\"\"\n \
    \ local trunc_number_string21=\"\"\n  local trunc_number_string22=\"\"\n  local\
    \ trunc_number_string23=\"\"\n  local trunc_number_string24=\"\"\n  local trunc_number_string25=\"\
    \"\n  local trunc_number_string26=\"\"\n  local trunc_number_string27=\"\"\n \
    \ local trunc_number_string28=\"\"\n  local trunc_number_string29=\"\"\n  local\
    \ trunc_number_string30=\"\"\n  local trunc_number_string31=\"\"\n  local trunc_number_string32=\"\
    \"\n  local trunc_number_string33=\"\"\n  local trunc_number_string34=\"\"\n \
    \ local trunc_number_string35=\"\"\n  local trunc_number_string36=\"\"\n  local\
    \ trunc_number_string37=\"\"\n  local trunc_number_string38=\"\"\n  local trunc_number_string39=\"\
    \"\n  local trunc_number_string40=\"\"\n  local trunc_number_string41=\"\"\n \
    \ local trunc_number_string42=\"\"\n  local trunc_number_string43=\"\"\n  local\
    \ trunc_number_string44=\"\"\n  local trunc_number_string45=\"\"\n  local trunc_number_string46=\"\
    \"\n  local trunc_number_string47=\"\"\n  local trunc_number_string48=\"\"\n \
    \ local trunc_number_string49=\"\"\n  local trunc_number_string50=\"\"\n  local\
    \ trunc_number_string51=\"\"\n  local trunc_number_string52=\"\"\n  local trunc_number_string53=\"\
    \"\n  local trunc_number_string54=\"\"\n  \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal_part\n  local integer_part\n  local remainder\n\n  integer_part=$((\
    \ number % 1 ))\n  decimals=$(( number % 1 ))\n  remainder=$(( number % 1 ))\n\
    \n  if (( decimals > 0 )) ; then\n    decimal_part=$(( decimals - 1 ))\n  else\n\
    \    decimal_part=0\n  fi\n\n  echo \"${integer_part}.${decimal_part}\"\n}\n\n\
    candidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb6vpeks9.sh: line 15: 3.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local truncate_decimals=0\n  local truncate_number=0\n  local truncate_number_in_base=0\n\
    \  local truncate_number_in_base_in_base=0\n  local truncate_number_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base=0\n  local truncate_number_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base=0\n \
    \ local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base=0\n\
    \  local truncate_number_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_base_in_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_part=0\n  local\
    \ trunc_part_decimals=0\n  local trunc_part_decimals_string=\"\"\n  local trunc_part_decimals_string_decimals=\"\
    \"\n  local trunc_part_decimals_string_decimals_string=\"\"\n  local trunc_part_decimals_string_decimals_string_decimals=\"\
    \"\n  local trunc_part_decimals_string_decimals_string_decimals_string=\"\"\n\
    \  local trunc_part_decimals_string_decimals_string_decimals_string_decimals=\"\
    \"\n  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string=\"\
    \"\n  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals=\"\
    \"\n  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string=\"\
    \"\n  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals=\"\
    \"\n  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string=\"\
    \"\n  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals=\"\
    \"\n  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals=\"\
    \"\n  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string=\"\
    \"\n  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals=\"\
    \"\n  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals=\"\
    \"\n  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals=\"\
    \"\n  local trunc_part_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_decimals_string_de\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local decimals_string=\"\"\n    local decimals_string2=\"\"\n\
    \    local decimals_string3=\"\"\n    local decimals_string4=\"\"\n    local decimals_string5=\"\
    \"\n    local decimals_string6=\"\"\n    local decimals_string7=\"\"\n    local\
    \ decimals_string8=\"\"\n    local decimals_string9=\"\"\n    local decimals_string10=\"\
    \"\n    local decimals_string11=\"\"\n    local decimals_string12=\"\"\n    local\
    \ decimals_string13=\"\"\n    local decimals_string14=\"\"\n    local decimals_string15=\"\
    \"\n    local decimals_string16=\"\"\n    local decimals_string17=\"\"\n    local\
    \ decimals_string18=\"\"\n    local decimals_string19=\"\"\n    local decimals_string20=\"\
    \"\n    local decimals_string21=\"\"\n    local decimals_string22=\"\"\n    local\
    \ decimals_string23=\"\"\n    local decimals_string24=\"\"\n    local decimals_string25=\"\
    \"\n    local decimals_string26=\"\"\n    local decimals_string27=\"\"\n    local\
    \ decimals_string28=\"\"\n    local decimals_string29=\"\"\n    local decimals_string30=\"\
    \"\n    local decimals_string31=\"\"\n    local decimals_string32=\"\"\n    local\
    \ decimals_string33=\"\"\n    local decimals_string34=\"\"\n    local decimals_string35=\"\
    \"\n    local decimals_string36=\"\"\n    local decimals_string37=\"\"\n    local\
    \ decimals_string38=\"\"\n    local decimals_string39=\"\"\n    local decimals_string40=\"\
    \"\n    local decimals_string41=\"\"\n    local decimals_string42=\"\"\n    local\
    \ decimals_string43=\"\"\n    local decimals_string44=\"\"\n    local decimals_string45=\"\
    \"\n    local decimals_string46=\"\"\n    local decimals_string47=\"\"\n    local\
    \ decimals_string48=\"\"\n    local decimals_string49=\"\"\n    local decimals_string50=\"\
    \"\n    local decimals_string51=\"\"\n    local decimals_string52=\"\"\n    local\
    \ decimals_string53=\"\"\n    local decimals_string54=\"\"\n    local decimals_string55=\"\
    \"\n    local decimals_string56=\"\"\n    local decimals_string57=\"\"\n    local\
    \ decimals_string58=\"\"\n    local decimals_string59=\"\"\n    local decimals_string60=\"\
    \"\n    local decimals_string61=\"\"\n    local decimals_string62=\"\"\n    local\
    \ decimals_string\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local truncate_decimal\n  local truncate_number\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  local truncate_number_index\n\
    \  local truncate_number_index\n  local truncate_number_index\n  \n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local truncate_part\n  local truncate_part_str\n  local truncate_part_int\n\
    \  local truncate_part_dec\n  local truncate_part_dec_int truncate_part_dec_str\n\
    \  local truncate_part_dec_int\n  local truncate_part_dec_dec\n  local truncate_part_dec_dec_int\
    \ truncate_part_dec_dec_str\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_dec_int\
    \ truncate_part_dec_dec_str\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_dec_int\
    \ truncate_part_dec_dec_str\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n\
    \  local truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local\
    \ truncate_part_dec_dec_int\n  local truncate_part_dec_dec_int\n  local truncate_part_dec_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_number_in_int=0\n\
    \  local trunc_decimals_in_int=0\n  local trunc_number_in_float=0\n  local trunc_decimals_in_float=0\n\
    \  local trunc_number_in_float_in_int=0\n  local trunc_decimals_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float=0\n  local trunc_decimals_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float=0\n  local trunc_decimals_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n  local trunc_decimals_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_decimals_in_float_in_float_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimals_in_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n  local decimal=0\n  local decimalpart=0\n\
    \  local decimalpart2=0\n  local decimalpart3=0\n  local decimalpart4=0\n  local\
    \ decimalpart5=0\n  local decimalpart6=0\n  local decimalpart7=0\n  local decimalpart8=0\n\
    \  local decimalpart9=0\n  local decimalpart10=0\n  local decimalpart11=0\n  local\
    \ decimalpart12=0\n  local decimalpart13=0\n  local decimalpart14=0\n  local decimalpart15=0\n\
    \  local decimalpart16=0\n  local decimalpart17=0\n  local decimalpart18=0\n \
    \ local decimalpart19=0\n  local decimalpart20=0\n  local decimalpart21=0\n  local\
    \ decimalpart22=0\n  local decimalpart23=0\n  local decimalpart24=0\n  local decimalpart25=0\n\
    \  local decimalpart26=0\n  local decimalpart27=0\n  local decimalpart28=0\n \
    \ local decimalpart29=0\n  local decimalpart30=0\n  local decimalpart31=0\n  local\
    \ decimalpart32=0\n  local decimalpart33=0\n  local decimalpart34=0\n  local decimalpart35=0\n\
    \  local decimalpart36=0\n  local decimalpart37=0\n  local decimalpart38=0\n \
    \ local decimalpart39=0\n  local decimalpart40=0\n  local decimalpart41=0\n  local\
    \ decimalpart42=0\n  local decimalpart43=0\n  local decimalpart44=0\n  local decimalpart45=0\n\
    \  local decimalpart46=0\n  local decimalpart47=0\n  local decimalpart48=0\n \
    \ local decimalpart49=0\n  local decimalpart50=0\n  local decimalpart51=0\n  local\
    \ decimalpart52=0\n  local decimalpart53=0\n  local decimalpart54=0\n  local decimalpart55=0\n\
    \  local decimalpart56=0\n  local decimalpart57=0\n  local decimalpart58=0\n \
    \ local decimalpart59=0\n  local decimalpart60=0\n  local decimalpart61=0\n  local\
    \ decimalpart62=0\n  local decimalpart63=0\n  local decimalpart64=0\n  local decimalpart65=0\n\
    \  local decimalpart66=0\n  local decimalpart67=0\n  local decimalpart68=0\n \
    \ local decimalpart69=0\n  local \n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string2=\"\"\n  local decimals_string3=\"\
    \"\n  local decimals_string4=\"\"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\
    \"\n  local decimals_string7=\"\"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\
    \"\n  local decimals_string10=\"\"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\
    \"\n  local decimals_string13=\"\"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\
    \"\n  local decimals_string16=\"\"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\
    \"\n  local decimals_string19=\"\"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\
    \"\n  local decimals_string22=\"\"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\
    \"\n  local decimals_string25=\"\"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\
    \"\n  local decimals_string28=\"\"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\
    \"\n  local decimals_string31=\"\"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\
    \"\n  local decimals_string34=\"\"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\
    \"\n  local decimals_string37=\"\"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\
    \"\n  local decimals_string40=\"\"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\
    \"\n  local decimals_string43=\"\"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\
    \"\n  local decimals_string46=\"\"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\
    \"\n  local decimals_string49=\"\"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\
    \"\n  local decimals_string52=\"\"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\
    \"\n  local decimals_string55=\"\"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\
    \"\n  local decimals_string58=\"\"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\
    \"\n  local decimals_string61=\"\"\n  local decimals_string62=\"\"\n  local decimals_string\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local integer=0\n    local remainder=0\n\n    while [[ $number\
    \ -gt 0 ]]; do\n        remainder=$((number % 1))\n        integer=$((integer\
    \ + remainder))\n        decimals=$((decimals + 1))\n        number=$((number\
    \ / 1))\n    done\n\n    echo \"$decimals\"\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo97v2ghl.sh: line 14: [[: 3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local trunc_number=0\n  local trunc_number_string=\"\
    \"\n  local trunc_number_string_length=0\n  local trunc_number_string_length_string=\"\
    \"\n  local trunc_number_string_length_string_length=0\n  local trunc_number_string_length_string_length_string=\"\
    \"\n  local trunc_number_string_length_string_length_string_length=0\n  local\
    \ trunc_number_string_length_string_length_string_length_string=\"\"\n  local\
    \ trunc_number_string_length_string_length_string_length_string_length=0\n  local\
    \ trunc_number_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local trunc_number_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local trunc_number_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string_length=0\n  local decimals_string_length_string=\"\
    \"\n  local decimals_string_length_string_length=0\n  local decimals_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length=0\n  local decimals_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string2=\"\"\n  local decimals_string3=\"\
    \"\n  local decimals_string4=\"\"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\
    \"\n  local decimals_string7=\"\"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\
    \"\n  local decimals_string10=\"\"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\
    \"\n  local decimals_string13=\"\"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\
    \"\n  local decimals_string16=\"\"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\
    \"\n  local decimals_string19=\"\"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\
    \"\n  local decimals_string22=\"\"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\
    \"\n  local decimals_string25=\"\"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\
    \"\n  local decimals_string28=\"\"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\
    \"\n  local decimals_string31=\"\"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\
    \"\n  local decimals_string34=\"\"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\
    \"\n  local decimals_string37=\"\"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\
    \"\n  local decimals_string40=\"\"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\
    \"\n  local decimals_string43=\"\"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\
    \"\n  local decimals_string46=\"\"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\
    \"\n  local decimals_string49=\"\"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\
    \"\n  local decimals_string52=\"\"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\
    \"\n  local decimals_string55=\"\"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\
    \"\n  local decimals_string58=\"\"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\
    \"\n  local decimals_string61=\"\"\n  local decimals_string62=\"\"\n  local decimals_string\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_left=0\n  local trunc_number=0\n  local trunc_number_index=0\n\
    \  local trunc_number_length=0\n  local trunc_number_decimals=0\n  local trunc_number_decimals_left=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n  local trunc_number_decimals_left_length=0\n\
    \  local trunc_number_decimals_left_index=0\n\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local trunc_number=0\n    local trunc_number_index=0\n    local\
    \ trunc_number_string=\"\"\n    local trunc_number_string_length=0\n    local\
    \ trunc_number_string_length_index=0\n    local trunc_number_string_index=0\n\
    \    local trunc_number_string_length_string=\"\"\n    local trunc_number_string_length_string_index=0\n\
    \    local trunc_number_string_length_string_length=0\n    local trunc_number_string_length_string_length_index=0\n\
    \    local trunc_number_string_length_string_length_string=\"\"\n    local trunc_number_string_length_string_length_string_index=0\n\
    \    local trunc_number_string_length_string_length_string_length=0\n    local\
    \ trunc_number_string_length_string_length_string_length_index=0\n    local trunc_number_string_length_string_length_string_length_string=\"\
    \"\n    local trunc_number_string_length_string_length_string_length_string_index=0\n\
    \    local trunc_number_string_length_string_length_string_length_string_length=0\n\
    \    local trunc_number_string_length_string_length_string_length_string_length_index=0\n\
    \    local trunc_number_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local trunc_number_string_length_string_length_string_length_string_length_string_index=0\n\
    \    local trunc_number_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local trunc_number_string_length_string_length_string_length_string_length_string_length_index=0\n\
    \    local trunc_number_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local trunc_number_string_length_string_length_string_length_string_length_string_length_string_index=0\n\
    \    local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_index=0\n\
    \    local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_index=0\n\
    \    local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_index=0\n\
    \    local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_index=0\n\
    \    local trunc_number_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035836
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_number1=0\n  local trunc_number2=0\n  local\
    \ trunc_number3=0\n  local trunc_number4=0\n  local trunc_number5=0\n  local trunc_number6=0\n\
    \  local trunc_number7=0\n  local trunc_number8=0\n  local trunc_number9=0\n \
    \ local trunc_number10=0\n  local trunc_number11=0\n  local trunc_number12=0\n\
    \  local trunc_number13=0\n  local trunc_number14=0\n  local trunc_number15=0\n\
    \  local trunc_number16=0\n  local trunc_number17=0\n  local trunc_number18=0\n\
    \  local trunc_number19=0\n  local trunc_number20=0\n  local trunc_number21=0\n\
    \  local trunc_number22=0\n  local trunc_number23=0\n  local trunc_number24=0\n\
    \  local trunc_number25=0\n  local trunc_number26=0\n  local trunc_number27=0\n\
    \  local trunc_number28=0\n  local trunc_number29=0\n  local trunc_number30=0\n\
    \  local trunc_number31=0\n  local trunc_number32=0\n  local trunc_number33=0\n\
    \  local trunc_number34=0\n  local trunc_number35=0\n  local trunc_number36=0\n\
    \  local trunc_number37=0\n  local trunc_number38=0\n  local trunc_number39=0\n\
    \  local trunc_number40=0\n  local trunc_number41=0\n  local trunc_number42=0\n\
    \  local trunc_number43=0\n  local trunc_number44=0\n  local trunc_number45=0\n\
    \  local trunc_number46=0\n  local trunc_number47=0\n  local trunc_number48=0\n\
    \  local trunc_number49=0\n  local trunc_number50=0\n  local trunc_number51=0\n\
    \  local trunc_number52=0\n  local trunc_number53=0\n  local trunc_number54=0\n\
    \  local trunc_number55=0\n  local trunc_number56=0\n  local trunc_number57=0\n\
    \  local trunc_number58=0\n  local trunc_number59=0\n  local trunc_number60=0\n\
    \  local trunc_number61=0\n  local trunc_number\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local decimals_left=0\n    local trunc_number=0\n\n    if [[\
    \ $number == *[!0-9]* ]]; then\n        echo \"$number\" | sed 's/^0*//'\n   \
    \     return 0\n    fi\n\n    decimals=$((${#number} - 1))\n    decimals_left=$((${#number}\
    \ - ${#number}%1))\n\n    if [[ $decimals_left -eq 0 ]]; then\n        trunc_number=$number\n\
    \    else\n        trunc_number=$((${number}%1))\n    fi\n\n    echo \"$trunc_number\"\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local truncate_decimals=0\n  local truncate_number=0\n  local truncate_number_in_int=0\n\
    \  local truncate_number_in_float=0\n  local truncate_number_in_int=0\n  local\
    \ truncate_number_in_float=0\n  local truncate_number_in_int=0\n  local truncate_number_in_float=0\n\
    \  local truncate_number_in_int=0\n  local truncate_number_in_float=0\n  local\
    \ truncate_number_in_int=0\n  local truncate_number_in_float=0\n  local truncate_number_in_int=0\n\
    \  local truncate_number_in_float=0\n  local truncate_number_in_int=0\n  local\
    \ truncate_number_in_float=0\n  local truncate_number_in_int=0\n  local truncate_number_in_float=0\n\
    \  local truncate_number_in_int=0\n  local truncate_number_in_float=0\n  local\
    \ truncate_number_in_int=0\n  local truncate_number_in_float=0\n  local truncate_number_in_int=0\n\
    \  local truncate_number_in_float=0\n  local truncate_number_in_int=0\n  local\
    \ truncate_number_in_float=0\n  local truncate_number_in_int=0\n  local truncate_number_in_float=0\n\
    \  local truncate_number_in_int=0\n  local truncate_number_in_float=0\n  local\
    \ truncate_number_in_int=0\n  local truncate_number_in_float=0\n  local truncate_number_in_int=0\n\
    \  local truncate_number_in_float=0\n  local truncate_number_in_int=0\n  local\
    \ truncate_number_in_float=0\n  local truncate_number_in_int=0\n  local truncate_number_in_float=0\n\
    \  local truncate_number_in_int=0\n  local truncate_number_in_float=0\n  local\
    \ truncate_number_in_int=0\n  local truncate_number_in_float=0\n  local truncate_number_in_int=0\n\
    \  local truncate_number_in_float=0\n  local truncate_number_in_int=0\n  local\
    \ truncate_number_in_float=0\n  local truncate_number_in_int=0\n  local truncate_number_in_float=0\n\
    \  local truncate_number_in_int=0\n  local truncate_number_in_float=0\n  local\
    \ truncate_number_in_int=0\n  local truncate_number_in_float=0\n  local truncate_number_in_int=0\n\
    \  local truncate_number_in_float=0\n  local truncate_number_in_int=0\n  local\
    \ truncate_number_in_float=0\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_decimals=0\n  local trunc_digits=0\n  local\
    \ trunc_digits_left=0\n  local trunc_digits_right=0\n  local trunc_digits_left_digits=0\n\
    \  local trunc_digits_right_digits=0\n  local trunc_digits_left_digits_left=0\n\
    \  local trunc_digits_left_digits_right=0\n  local trunc_digits_right_digits_left=0\n\
    \  local trunc_digits_right_digits_right=0\n  local trunc_digits_left_digits_left_digits=0\n\
    \  local trunc_digits_left_digits_right_digits=0\n  local trunc_digits_right_digits_left_digits=0\n\
    \  local trunc_digits_right_digits_right_digits=0\n  local trunc_digits_left_digits_left_digits_left=0\n\
    \  local trunc_digits_left_digits_right_digits_left=0\n  local trunc_digits_right_digits_left_digits_left=0\n\
    \  local trunc_digits_right_digits_right_digits_left=0\n  local trunc_digits_left_digits_left_digits_right=0\n\
    \  local trunc_digits_left_digits_right_digits_right=0\n  local trunc_digits_right_digits_left_digits_right=0\n\
    \  local trunc_digits_right_digits_right_digits_right=0\n  local trunc_digits_left_digits_left_digits_left_digits=0\n\
    \  local trunc_digits_left_digits_right_digits_left_digits=0\n  local trunc_digits_right_digits_left_digits_left_digits=0\n\
    \  local trunc_digits_right_digits_right_digits_left_digits=0\n  local trunc_digits_left_digits_left_digits_right_digits=0\n\
    \  local trunc_digits_left_digits_right_digits_right_digits=0\n  local trunc_digits_right_digits_left_digits_right_digits=0\n\
    \  local trunc_digits_right_digits_right_digits_right_digits=0\n  local trunc_digits_left_digits_left_digits_left_digits_left=0\n\
    \  local trunc_digits_left_digits_right_digits_left_digits_left=0\n  local trunc_digits_right_digits_left_digits_left_digits_left=0\n\
    \  local trunc_digits_right_digits_right_digits_left_digits_left=0\n  local trunc_digit\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local decimals_string\n  local decimal_string\n  local decimal_part\n\
    \  local decimal_part_string\n  local decimal_part_string2\n  local decimal_part_string3\n\
    \  local decimal_part_string4\n  local decimal_part_string5\n  local decimal_part_string6\n\
    \  local decimal_part_string7\n  local decimal_part_string8\n  local decimal_part_string9\n\
    \  local decimal_part_string10\n  local decimal_part_string11\n  local decimal_part_string12\n\
    \  local decimal_part_string13\n  local decimal_part_string14\n  local decimal_part_string15\n\
    \  local decimal_part_string16\n  local decimal_part_string17\n  local decimal_part_string18\n\
    \  local decimal_part_string19\n  local decimal_part_string20\n  local decimal_part_string21\n\
    \  local decimal_part_string22\n  local decimal_part_string23\n  local decimal_part_string24\n\
    \  local decimal_part_string25\n  local decimal_part_string26\n  local decimal_part_string27\n\
    \  local decimal_part_string28\n  local decimal_part_string29\n  local decimal_part_string30\n\
    \  local decimal_part_string31\n  local decimal_part_string32\n  local decimal_part_string33\n\
    \  local decimal_part_string34\n  local decimal_part_string35\n  local decimal_part_string36\n\
    \  local decimal_part_string37\n  local decimal_part_string38\n  local decimal_part_string39\n\
    \  local decimal_part_string40\n  local decimal_part_string41\n  local decimal_part_string42\n\
    \  local decimal_part_string43\n  local decimal_part_string44\n  local decimal_part_string45\n\
    \  local decimal_part_string46\n  local decimal_part_string47\n  local decimal_part_string48\n\
    \  local decimal_part_string49\n  local decimal_part_string50\n  local decimal_part_string51\n\
    \  local decimal_part_string52\n  local decimal_part_string53\n  local decimal_part_string54\n\
    \  local decimal_part_string55\n  local decimal_part_string56\n  local decimal_part_string57\n\
    \  local decimal_part_string58\n  local decimal_part_string59\n  local decimal_part_string60\n\
    \  local decimal_part_string61\n  local decimal_part_string62\n  local decimal_part_string63\n\
    \  local decimal_part_string64\n  local decimal_part_string65\n  local decimal_part_string66\n\
    \  local decimal_part_string67\n  local decimal_part_string68\n  local decimal_part_string\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035836
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local integer=0\n  local remainder=0\n\n  while [ $number -gt 0 ]; do\n   \
    \ decimals=$((decimals + 1))\n    remainder=$((number % 1))\n    integer=$((integer\
    \ + remainder))\n    number=$((number / 1))\n  done\n\n  echo \"$decimals\"\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp600i1fc7.sh: line 14: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string_length=0\n  local decimals_string_length_string=\"\
    \"\n  local decimals_string_length_string_length=0\n  local decimals_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length=0\n  local decimals_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local decimal\n    local truncate_decimal\n    local truncate_number\n\
    \    local truncate_number_inner\n    local truncate_number_outer\n    local truncate_number_outer_inner\n\
    \    local truncate_number_outer_inner_inner\n    local truncate_number_outer_inner_inner_inner\n\
    \    local truncate_number_outer_inner_inner_inner_inner\n    local truncate_number_outer_inner_inner_inner_inner_inner\n\
    \    local truncate_number_outer_inner_inner_inner_inner_inner_inner\n    local\
    \ truncate_number_outer_inner_inner_inner_inner_inner_inner_inner\n    local truncate_number_outer_inner_inner_inner_inner_inner_inner_inner_inner\n\
    \    local truncate_number_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner\n\
    \    local truncate_number_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\n\
    \    local truncate_number_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\n\
    \    local truncate_number_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\n\
    \    local truncate_number_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\n\
    \    local truncate_number_outer_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner_inner\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035836
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal_part\n  local truncate_part\n  local truncate_part_num\n  local\
    \ truncate_part_num2\n  local truncate_part_num3\n  local truncate_part_num4\n\
    \  local truncate_part_num5\n  local truncate_part_num6\n  local truncate_part_num7\n\
    \  local truncate_part_num8\n  local truncate_part_num9\n  local truncate_part_num10\n\
    \  local truncate_part_num11\n  local truncate_part_num12\n  local truncate_part_num13\n\
    \  local truncate_part_num14\n  local truncate_part_num15\n  local truncate_part_num16\n\
    \  local truncate_part_num17\n  local truncate_part_num18\n  local truncate_part_num19\n\
    \  local truncate_part_num20\n  local truncate_part_num21\n  local truncate_part_num22\n\
    \  local truncate_part_num23\n  local truncate_part_num24\n  local truncate_part_num25\n\
    \  local truncate_part_num26\n  local truncate_part_num27\n  local truncate_part_num28\n\
    \  local truncate_part_num29\n  local truncate_part_num30\n  local truncate_part_num31\n\
    \  local truncate_part_num32\n  local truncate_part_num33\n  local truncate_part_num34\n\
    \  local truncate_part_num35\n  local truncate_part_num36\n  local truncate_part_num37\n\
    \  local truncate_part_num38\n  local truncate_part_num39\n  local truncate_part_num40\n\
    \  local truncate_part_num41\n  local truncate_part_num42\n  local truncate_part_num43\n\
    \  local truncate_part_num44\n  local truncate_part_num45\n  local truncate_part_num46\n\
    \  local truncate_part_num47\n  local truncate_part_num48\n  local truncate_part_num49\n\
    \  local truncate_part_num50\n  local truncate_part_num51\n  local truncate_part_num52\n\
    \  local truncate_part_num53\n  local truncate_part_num54\n  local truncate_part_num55\n\
    \  local truncate_part_num56\n  local truncate_part_num57\n  local truncate_part_num58\n\
    \  local truncate_part_num59\n  local truncate_part_num60\n  local truncate_part_num61\n\
    \  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string2=\"\"\n  local decimals_string3=\"\
    \"\n  local decimals_string4=\"\"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\
    \"\n  local decimals_string7=\"\"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\
    \"\n  local decimals_string10=\"\"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\
    \"\n  local decimals_string13=\"\"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\
    \"\n  local decimals_string16=\"\"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\
    \"\n  local decimals_string19=\"\"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\
    \"\n  local decimals_string22=\"\"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\
    \"\n  local decimals_string25=\"\"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\
    \"\n  local decimals_string28=\"\"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\
    \"\n  local decimals_string31=\"\"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\
    \"\n  local decimals_string34=\"\"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\
    \"\n  local decimals_string37=\"\"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\
    \"\n  local decimals_string40=\"\"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\
    \"\n  local decimals_string43=\"\"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\
    \"\n  local decimals_string46=\"\"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\
    \"\n  local decimals_string49=\"\"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\
    \"\n  local decimals_string52=\"\"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\
    \"\n  local decimals_string55=\"\"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\
    \"\n  local decimals_string58=\"\"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\
    \"\n  local decimals_string61=\"\"\n  local decimals_string62=\"\"\n  local decimals_string\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string_length=0\n  local decimals_string_length_string=\"\
    \"\n  local decimals_string_length_string_length=0\n  local decimals_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length=0\n  local decimals_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length\n}\n\
    \ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n\
    \    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local truncate_decimal\n  local truncate_number\n  local truncate_number_inner\n\
    \  local truncate_number_outer\n  local truncate_number_outer_inner\n  local truncate_number_outer_inner_inner\n\
    \  local truncate_number_outer_outer_inner\n  local truncate_number_outer_outer_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner\n  local truncate_number_outer_outer_outer_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner\n  local truncate_number_outer_outer_outer_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner\n  local truncate_number_outer_outer_outer_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner\n  local truncate_number_outer_outer_outer_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner\n  local\
    \ truncate_number_outer_outer_outer_inner_inner_inner_inner_inner\n  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner\n  local\
    \ truncate_number_outer_outer_outer_inner_inner_inner_inner_inner\n  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner_inner_inner\n\
    \  local truncate_number_outer_outer_outer_inner_inner_inner_inner_inner_inner_inner_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local truncate_decimal\n  local truncate_number\n  local truncate_number_in_place\n\
    \  local truncate_number_in_place_in_place\n  local truncate_number_in_place_in_place_in_place\n\
    \  local truncate_number_in_place_in_place_in_place_in_place\n  local truncate_number_in_place_in_place_in_place_in_place_in_place\n\
    \  local truncate_number_in_place_in_place_in_place_in_place_in_place_in_place\n\
    \  local truncate_number_in_place_in_place_in_place_in_place_in_place_in_place_in_place\n\
    \  local truncate_number_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place\n\
    \  local truncate_number_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place\n\
    \  local truncate_number_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place\n\
    \  local truncate_number_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place\n\
    \  local truncate_number_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place\n\
    \  local truncate_number_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place\n\
    \  local truncate_number_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place\n\
    \  local truncate_number_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place\n\
    \  local truncate_number_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place\n\
    \  local truncate_number_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place\n\
    \  local truncate_number_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place\n\
    \  local truncate_number_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place\n\
    \  local truncate_number_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_place_in_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035836
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local truncate_string=\"\"\n  local truncate_string2=\"\
    \"\n  local truncate_string3=\"\"\n  local truncate_string4=\"\"\n  local truncate_string5=\"\
    \"\n  local truncate_string6=\"\"\n  local truncate_string7=\"\"\n  local truncate_string8=\"\
    \"\n  local truncate_string9=\"\"\n  local truncate_string10=\"\"\n  local truncate_string11=\"\
    \"\n  local truncate_string12=\"\"\n  local truncate_string13=\"\"\n  local truncate_string14=\"\
    \"\n  local truncate_string15=\"\"\n  local truncate_string16=\"\"\n  local truncate_string17=\"\
    \"\n  local truncate_string18=\"\"\n  local truncate_string19=\"\"\n  local truncate_string20=\"\
    \"\n  local truncate_string21=\"\"\n  local truncate_string22=\"\"\n  local truncate_string23=\"\
    \"\n  local truncate_string24=\"\"\n  local truncate_string25=\"\"\n  local truncate_string26=\"\
    \"\n  local truncate_string27=\"\"\n  local truncate_string28=\"\"\n  local truncate_string29=\"\
    \"\n  local truncate_string30=\"\"\n  local truncate_string31=\"\"\n  local truncate_string32=\"\
    \"\n  local truncate_string33=\"\"\n  local truncate_string34=\"\"\n  local truncate_string35=\"\
    \"\n  local truncate_string36=\"\"\n  local truncate_string37=\"\"\n  local truncate_string38=\"\
    \"\n  local truncate_string39=\"\"\n  local truncate_string40=\"\"\n  local truncate_string41=\"\
    \"\n  local truncate_string42=\"\"\n  local truncate_string43=\"\"\n  local truncate_string44=\"\
    \"\n  local truncate_string45=\"\"\n  local truncate_string46=\"\"\n  local truncate_string47=\"\
    \"\n  local truncate_string48=\"\"\n  local truncate_string49=\"\"\n  local truncate_string50=\"\
    \"\n  local truncate_string51=\"\"\n  local truncate_string52=\"\"\n  local truncate_string53=\"\
    \"\n  local truncate_string54=\"\"\n  local truncate_string55=\"\"\n  local truncate_string56=\"\
    \"\n  local truncate_string57=\"\"\n  local truncate_string58=\"\"\n  local truncate_string59=\"\
    \"\n  local truncate_string60=\"\"\n  local truncate_string61=\"\"\n  local truncate_string62\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimals_string=\"\"\n  local decimals_string2=\"\"\n  local decimals_string3=\"\
    \"\n  local decimals_string4=\"\"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\
    \"\n  local decimals_string7=\"\"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\
    \"\n  local decimals_string10=\"\"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\
    \"\n  local decimals_string13=\"\"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\
    \"\n  local decimals_string16=\"\"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\
    \"\n  local decimals_string19=\"\"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\
    \"\n  local decimals_string22=\"\"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\
    \"\n  local decimals_string25=\"\"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\
    \"\n  local decimals_string28=\"\"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\
    \"\n  local decimals_string31=\"\"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\
    \"\n  local decimals_string34=\"\"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\
    \"\n  local decimals_string37=\"\"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\
    \"\n  local decimals_string40=\"\"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\
    \"\n  local decimals_string43=\"\"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\
    \"\n  local decimals_string46=\"\"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\
    \"\n  local decimals_string49=\"\"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\
    \"\n  local decimals_string52=\"\"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\
    \"\n  local decimals_string55=\"\"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\
    \"\n  local decimals_string58=\"\"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\
    \"\n  local decimals_string61=\"\"\n  local decimals_string62=\"\"\n  local decimals_string\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n    local number=$1\n    local\
    \ decimals=0\n    local decimals_string=\"\"\n    local trunc_number=0\n    local\
    \ trunc_number_string=\"\"\n    local trunc_number_string2=\"\"\n    local trunc_number_string3=\"\
    \"\n    local trunc_number_string4=\"\"\n    local trunc_number_string5=\"\"\n\
    \    local trunc_number_string6=\"\"\n    local trunc_number_string7=\"\"\n  \
    \  local trunc_number_string8=\"\"\n    local trunc_number_string9=\"\"\n    local\
    \ trunc_number_string10=\"\"\n    local trunc_number_string11=\"\"\n    local\
    \ trunc_number_string12=\"\"\n    local trunc_number_string13=\"\"\n    local\
    \ trunc_number_string14=\"\"\n    local trunc_number_string15=\"\"\n    local\
    \ trunc_number_string16=\"\"\n    local trunc_number_string17=\"\"\n    local\
    \ trunc_number_string18=\"\"\n    local trunc_number_string19=\"\"\n    local\
    \ trunc_number_string20=\"\"\n    local trunc_number_string21=\"\"\n    local\
    \ trunc_number_string22=\"\"\n    local trunc_number_string23=\"\"\n    local\
    \ trunc_number_string24=\"\"\n    local trunc_number_string25=\"\"\n    local\
    \ trunc_number_string26=\"\"\n    local trunc_number_string27=\"\"\n    local\
    \ trunc_number_string28=\"\"\n    local trunc_number_string29=\"\"\n    local\
    \ trunc_number_string30=\"\"\n    local trunc_number_string31=\"\"\n    local\
    \ trunc_number_string32=\"\"\n    local trunc_number_string33=\"\"\n    local\
    \ trunc_number_string34=\"\"\n    local trunc_number_string35=\"\"\n    local\
    \ trunc_number_string36=\"\"\n    local trunc_number_string37=\"\"\n    local\
    \ trunc_number_string38=\"\"\n    local trunc_number_string39=\"\"\n    local\
    \ trunc_number_string40=\"\"\n    local trunc_number_string41=\"\"\n    local\
    \ trunc_number_string42=\"\"\n    local trunc_number_string43=\"\"\n    local\
    \ trunc_number_string44=\"\"\n    local trunc_number_string45=\"\"\n    local\
    \ trunc_number_string46=\"\"\n    local trunc_number_string47=\"\"\n    local\
    \ trunc_number_string48=\"\"\n    local trunc_number_string49=\"\"\n    local\
    \ trunc_number_string50=\"\"\n    local trunc_number_string51=\"\"\n    local\
    \ trunc_number_string52=\"\"\n    local trunc_number_string53=\"\"\n    local\
    \ trunc_number_string54=\"\"\n    \n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035835
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local decimal\n  local decimals_string\n  local decimals_string_length\n  local\
    \ decimals_string_length_string\n  local decimals_string_length_string_length\n\
    \  local decimals_string_length_string_length_string\n  local decimals_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string\n  local decimals_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035836
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    #\n# $1 is a floating point\ntruncate_number() {\n  local number=$1\n  local decimals=0\n\
    \  local trunc_number=0\n  local trunc_number_in_int=0\n  local trunc_number_in_float=0\n\
    \  local trunc_number_in_float_in_int=0\n  local trunc_number_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035836

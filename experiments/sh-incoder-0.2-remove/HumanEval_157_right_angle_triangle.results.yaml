language: sh
name: HumanEval_157_right_angle_triangle
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    result=$((side1+side2+side3)==(side1*side2*side3))\n\
    \    echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8o576h0d.sh: command substitution: line 16: syntax error near unexpected
    token `==''

    /tmp/tmp8o576h0d.sh: command substitution: line 16: `(side1+side2+side3)==(side1*side2*side3)''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq 0 ] || [ $side2 -eq 0 ] || [ $side3 -eq\
    \ 0 ]; then\n        echo \"ERROR: sides are 0\"\n        exit 1\n    fi\n   \
    \ if [ $side1 -eq $side2 ] || [ $side1 -eq $side3 ] || [ $side2 -eq $side3 ];\
    \ then\n        echo \"ERROR: sides are equal\"\n        exit 1\n    fi\n    if\
    \ [ $side1 -eq 0 ] && [ $side2 -eq 0 ] && [ $side3 -eq 0 ]; then\n        echo\
    \ \"ERROR: sides are 0\"\n        exit 1\n    fi\n    if [ $side1 -eq 0 ] && [\
    \ $side2 -eq 0 ] && [ $side3 -eq 1 ]; then\n        echo \"ERROR: sides are 0\"\
    \n        exit 1\n    fi\n    if [ $side1 -eq 1 ] && [ $side2 -eq 0 ] && [ $side3\
    \ -eq 0 ]; then\n        echo \"ERROR: sides are 1\"\n        exit 1\n    fi\n\
    \    if [ $side1 -eq 1 ] && [ $side2 -eq 1 ] && [ $side3 -eq 0 ]; then\n     \
    \   echo \"ERROR: sides are 1\"\n        exit 1\n    fi\n    if [ $side1 -eq 1\
    \ ] && [ $side2 -eq 1 ] && [ $side3 -eq 1 ]; then\n        echo \"ERROR: sides\
    \ are 1\"\n        exit 1\n    fi\n    if [ $side1 -eq 2 ] && [ $side2 -eq 1 ]\
    \ && [ $side3 -eq 1 ]; then\n        echo \"ERROR: sides are 1\"\n        exit\
    \ 1\n    fi\n    if [ $side1 -eq 2 ] && [ $side2 -eq 2 ] && [ $side3 -eq 1 ];\
    \ then\n        echo \"ERROR: sides are 1\"\n        exit 1\n    fi\n    if [\
    \ $side1 -eq 2 ] && [ $side2 -eq 2 ] && [ $side3 -eq 2 ]; then\n        echo \"\
    ERROR: sides are 1\"\n        exit 1\n    fi\n    if [ $side1 -eq 3 ] && [ $side2\
    \ -eq 2 ] && [ $side3 -eq 2 ]; then\n        echo \"ERROR: sides are 1\"\n   \
    \     exit 1\n    fi\n    if [ $side1 -eq 3 ] && [ $side2 -eq 3 ] && [ $side3\
    \ -eq 2 ]; then\n        echo \"ERROR: sides are 1\"\n        exit 1\n    fi\n\
    \    if [ $side1 -eq 3 ] && [ $side2 -eq 3 ] && [ $side3 -eq 3 ]; then\n     \
    \   echo \"ERROR: sides are \n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpelun83x7.sh: line 83: unexpected EOF while looking for matching
    `"''

    /tmp/tmpelun83x7.sh: line 87: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  \n  if ((side1 == side2) && (side2 == side3)) ;\
    \ then\n    result=true\n  else\n    result=false\n  fi\n  \n  return $result\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptqylyltt.sh: line 17: side1: command not found

    /tmp/tmptqylyltt.sh: line 23: return: false: numeric argument required

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1 + side2 > side3))\n  echo $result\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq $side2 -a $side1 -eq $side3 ]; then\n\
    \        echo \"$side1 is a right-angled triangle\"\n    else\n        echo \"\
    $side1 is not a right-angled triangle\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result=0\n  if [ $side1 -eq 0 ]\n  then\n    if [ $side2 -eq\
    \ 0 ]\n    then\n      if [ $side3 -eq 0 ]\n      then\n        result=1\n   \
    \   else\n        result=0\n      fi\n    else\n      result=0\n    fi\n  else\n\
    \    if [ $side2 -eq 0 ]\n    then\n      result=0\n    else\n      if [ $side3\
    \ -eq 0 ]\n      then\n        result=1\n      else\n        result=0\n      fi\n\
    \    fi\n  fi\n  echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\tlocal side1_length\n\tlocal side2_length\n\tlocal\
    \ side3_length\n\tlocal side1_length2\n\tlocal side2_length2\n\tlocal side3_length2\n\
    \tlocal side1_length3\n\tlocal side2_length3\n\tlocal side3_length3\n\tlocal side1_length4\n\
    \tlocal side2_length4\n\tlocal side3_length4\n\tlocal side1_length5\n\tlocal side2_length5\n\
    \tlocal side3_length5\n\tlocal side1_length6\n\tlocal side2_length6\n\tlocal side3_length6\n\
    \tlocal side1_length7\n\tlocal side2_length7\n\tlocal side3_length7\n\tlocal side1_length8\n\
    \tlocal side2_length8\n\tlocal side3_length8\n\tlocal side1_length9\n\tlocal side2_length9\n\
    \tlocal side3_length9\n\tlocal side1_length10\n\tlocal side2_length10\n\tlocal\
    \ side3_length10\n\tlocal side1_length11\n\tlocal side2_length11\n\tlocal side3_length11\n\
    \tlocal side1_length12\n\tlocal side2_length12\n\tlocal side3_length12\n\tlocal\
    \ side1_length13\n\tlocal side2_length13\n\tlocal side3_length13\n\tlocal side1_length14\n\
    \tlocal side2_length14\n\tlocal side3_length14\n\tlocal side1_length15\n\tlocal\
    \ side2_length15\n\tlocal side3_length15\n\tlocal side1_length16\n\tlocal side2_length16\n\
    \tlocal side3_length16\n\tlocal side1_length17\n\tlocal side2_length17\n\tlocal\
    \ side3_length17\n\tlocal side1_length18\n\tlocal side2_length18\n\tlocal side3_length18\n\
    \tlocal side1_length19\n\tlocal side2_length19\n\tlocal side3_length19\n\tlocal\
    \ side1_length20\n\tlocal side2_length20\n\tlocal side3_length20\n\tlocal side1_length21\n\
    \tlocal side2_length21\n\tlocal side3_length21\n\tlocal side1_length22\n\tlocal\
    \ side2_length22\n\tlocal side3_length22\n\tlocal side1_length23\n\tlocal side2_length23\n\
    \tlocal side3_length23\n\tlocal side1_length24\n\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local \n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    if [ $side1 -eq 0 ] || [ $side2 -eq\
    \ 0 ] || [ $side3 -eq 0 ]; then\n        echo \"Invalid input\"\n        exit\
    \ 1\n    fi\n    if [ $side1 -eq $side2 ] || [ $side1 -eq $side3 ] || [ $side2\
    \ -eq $side3 ]; then\n        result=\"True\"\n    else\n        result=\"False\"\
    \n    fi\n    echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local length1=$1\n    local length2=$2\n\
    \    local length3=$3\n    if [ $length1 -eq $length2 ]; then\n        if [ $length1\
    \ -eq $length3 ]; then\n            return 0\n        else\n            return\
    \ 1\n        fi\n    else\n        if [ $length2 -eq $length3 ]; then\n      \
    \      return 0\n        else\n            return 1\n        fi\n    fi\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1 + side2 + side3 > 0))\n  if [ $result\
    \ -eq 0 ]; then\n    result=$((side1 + side2 > 0))\n    if [ $result -eq 0 ];\
    \ then\n      result=$((side1 + side3 > 0))\n    fi\n  fi\n  return $result\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1 * side1 + side2 * side2 - side3\
    \ * side3 > 0))\n  echo $result\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  if [ $side1 -eq 0 -o $side2 -eq 0 -o $side3 -eq 0 ]; then\n    return\
    \ 1\n  fi\n  if [ $side1 -eq 0 -o $side2 -eq 0 ]; then\n    return 0\n  fi\n \
    \ if [ $side1 -eq 0 ]; then\n    return 0\n  fi\n  if [ $side2 -eq 0 ]; then\n\
    \    return 0\n  fi\n  if [ $side3 -eq 0 ]; then\n    return 0\n  fi\n  if [ $side1\
    \ -eq $side2 -a $side1 -eq $side3 ]; then\n    return 0\n  fi\n  if [ $side1 -eq\
    \ $side3 -a $side2 -eq $side3 ]; then\n    return 0\n  fi\n  if [ $side2 -eq $side3\
    \ -a $side1 -eq $side2 ]; then\n    return 0\n  fi\n  if [ $side1 -eq $side3 -a\
    \ $side2 -eq $side3 ]; then\n    return 0\n  fi\n  if [ $side1 -eq $side2 -a $side3\
    \ -eq $side1 ]; then\n    return 0\n  fi\n  if [ $side2 -eq $side3 -a $side1 -eq\
    \ $side2 ]; then\n    return 0\n  fi\n  if [ $side3 -eq $side1 -a $side1 -eq $side3\
    \ ]; then\n    return 0\n  fi\n  if [ $side1 -eq $side2 -a $side3 -eq $side1 ];\
    \ then\n    return 0\n  fi\n  if [ $side2 -eq $side3 -a $side1 -eq $side2 ]; then\n\
    \    return 0\n  fi\n  if [ $side3 -eq $side1 -a $side1 -eq $side3 ]; then\n \
    \   return 0\n  fi\n  if [ $side1 -eq $side2 -a $side3 -eq $side1 ]; then\n  \
    \  return 0\n  fi\n  if [ $side2 -eq $side3 -a $side1 -eq $side2 ]; then\n   \
    \ return 0\n  fi\n  if [ $side3 -eq $side1 -a $side1 -eq $side3 ]; then\n    return\
    \ 0\n  fi\n  if [ $side1 -eq $side2 -a $side3 -eq $side1 ]; then\n    return 0\n\
    \  fi\n  if [ $side2 -eq $side3 \n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp64jkw6mg.sh: line 73: syntax error near unexpected token `}''

    /tmp/tmp64jkw6mg.sh: line 73: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local side1_length\n  local side2_length\n  local\
    \ side3_length\n  local side1_length2\n  local side2_length2\n  local side3_length2\n\
    \  local side1_length3\n  local side2_length3\n  local side3_length3\n  local\
    \ side1_length4\n  local side2_length4\n  local side3_length4\n  local side1_length5\n\
    \  local side2_length5\n  local side3_length5\n  local side1_length6\n  local\
    \ side2_length6\n  local side3_length6\n  local side1_length7\n  local side2_length7\n\
    \  local side3_length7\n  local side1_length8\n  local side2_length8\n  local\
    \ side3_length8\n  local side1_length9\n  local side2_length9\n  local side3_length9\n\
    \  local side1_length10\n  local side2_length10\n  local side3_length10\n  local\
    \ side1_length11\n  local side2_length11\n  local side3_length11\n  local side1_length12\n\
    \  local side2_length12\n  local side3_length12\n  local side1_length13\n  local\
    \ side2_length13\n  local side3_length13\n  local side1_length14\n  local side2_length14\n\
    \  local side3_length14\n  local side1_length15\n  local side2_length15\n  local\
    \ side3_length15\n  local side1_length16\n  local side2_length16\n  local side3_length16\n\
    \  local side1_length17\n  local side2_length17\n  local side3_length17\n  local\
    \ side1_length18\n  local side2_length18\n  local side3_length18\n  local side1_length19\n\
    \  local side2_length19\n  local side3_length19\n  local side1_length20\n  local\
    \ side2_length20\n  local side3_length20\n  local side1_length21\n  local side2_length21\n\
    \  local side3_length21\n  local side1_length22\n  local side2_length22\n  local\
    \ side3_length22\n  local side1_length23\n  local side2_length23\n  local side3_length23\n\
    \  local side1_length24\n\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result=0\n    if [ $side1 -gt $side2 ]; then\n\
    \        result=1\n    elif [ $side1 -eq $side2 ]; then\n        if [ $side1 -eq\
    \ $side3 ]; then\n            result=0\n        else\n            result=1\n \
    \       fi\n    else\n        result=1\n    fi\n    echo $result\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\t\n\tresult=$((side1 + side2 + side3) % 360)\n\t\
    if [ $result -eq 0 ]; then\n\t\treturn 0\n\telse\n\t\treturn 1\n\tfi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps2850by4.sh: command substitution: line 17: syntax error near unexpected
    token `%''

    /tmp/tmps2850by4.sh: command substitution: line 17: `(side1 + side2 + side3) %
    360''

    /tmp/tmps2850by4.sh: line 18: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq 0 ] || [ $side2 -eq 0 ] || [ $side3 -eq\
    \ 0 ]; then\n        echo \"Invalid input\"\n        exit 1\n    fi\n    if [\
    \ $side1 -eq $side2 ] || [ $side1 -eq $side3 ] || [ $side2 -eq $side3 ]; then\n\
    \        echo \"Invalid input\"\n        exit 1\n    fi\n    if [ $side1 -eq 0\
    \ ] && [ $side2 -eq 0 ] && [ $side3 -eq 0 ]; then\n        echo \"Invalid input\"\
    \n        exit 1\n    fi\n    if [ $side1 -eq 0 ] && [ $side2 -eq 0 ] && [ $side3\
    \ -eq $side3 ]; then\n        echo \"Invalid input\"\n        exit 1\n    fi\n\
    \    if [ $side1 -eq $side2 ] && [ $side1 -eq $side3 ] && [ $side2 -eq $side3\
    \ ]; then\n        echo \"Invalid input\"\n        exit 1\n    fi\n    if [ $side1\
    \ -eq $side2 ] && [ $side1 -eq $side3 ] && [ $side2 -eq $side3 ] && [ $side3 -eq\
    \ $side1 ]; then\n        echo \"Invalid input\"\n        exit 1\n    fi\n   \
    \ if [ $side1 -eq $side2 ] && [ $side1 -eq $side3 ] && [ $side2 -eq $side3 ] &&\
    \ [ $side3 -eq $side2 ] && [ $side3 -eq $side3 ]; then\n        echo \"Invalid\
    \ input\"\n        exit 1\n    fi\n    if [ $side1 -eq $side2 ] && [ $side1 -eq\
    \ $side3 ] && [ $side2 -eq $side3 ] && [ $side3 -eq $side2 ] && [ $side3 -eq $side3\
    \ ] && [ $side1 -eq $side1 ]; then\n        echo \"Invalid input\"\n        exit\
    \ 1\n    fi\n    if [ $side1 -eq $side2 ] && [ $side1 -eq $side3 ] && [ $side2\
    \ -eq $side3 ] && [ $side3 -eq $side2 ] && [ $side3 -eq $side3 ] && [ $side1 -eq\
    \ $side1 ] && [ $side1 -eq $side2 ]; then\n        echo \"Invalid input\"\n  \
    \      exit 1\n    fi\n    if [ $side1 -eq $side2 ] && [ $side1 -eq $side3 ] &&\
    \ [ $side2 -eq $side3 ] && [ $side3 -eq $side2 ] && [ $side3 -eq $side3 ] && [\
    \ $side1 \n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpus3_f1oi.sh: line 52: syntax error near unexpected token `}''

    /tmp/tmpus3_f1oi.sh: line 52: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1+side2+side3)==(side1*side2*side3))\n\
    \  echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6da0rna7.sh: command substitution: line 16: syntax error near unexpected
    token `==''

    /tmp/tmp6da0rna7.sh: command substitution: line 16: `(side1+side2+side3)==(side1*side2*side3)''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result=0\n  if [ $side1 -eq 0 ]; then\n    side1=1\n  fi\n\
    \  if [ $side2 -eq 0 ]; then\n    side2=1\n  fi\n  if [ $side3 -eq 0 ]; then\n\
    \    side3=1\n  fi\n  if [ $side1 -eq $side2 -a $side1 -eq $side3 ]; then\n  \
    \  result=1\n  fi\n  if [ $side2 -eq $side3 -a $side2 -eq $side1 ]; then\n   \
    \ result=1\n  fi\n  if [ $side3 -eq $side1 -a $side3 -eq $side2 ]; then\n    result=1\n\
    \  fi\n  if [ $result -eq 1 ]; then\n    return 0\n  else\n    return 1\n  fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1 * side2) + (side2 * side3) + (side3\
    \ * side1))\n  if [ $result -eq $((side1 * side1 + side2 * side2 + side3 * side3))\
    \ ]\n  then\n    return 0\n  else\n    return 1\n  fi\n}\n\ncandidate() {\n  \
    \  right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0548iarz.sh: command substitution: line 16: syntax error near unexpected
    token `+''

    /tmp/tmp0548iarz.sh: command substitution: line 16: `(side1 * side2) + (side2
    * side3) + (side3 * side1)''

    /tmp/tmp0548iarz.sh: line 17: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    if [ $side1 -eq 0 ]\n    then\n   \
    \     result=$((side2 > side3))\n    else\n        result=$((side2 > side1) &&\
    \ $((side1 > side3)))\n    fi\n    echo $result\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphv9cz3mv.sh: line 20: side2: command not found

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq $side2 -a $side1 -eq $side3 ]; then\n\
    \        echo \"$side1 is a right-angled triangle\"\n    else\n        echo \"\
    $side1 is not a right-angled triangle\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local \n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq $side2 -a $side1 -eq $side3 ]\n    then\n\
    \        echo \"$side1 is a right-angled triangle\"\n    else\n        echo \"\
    $side1 is not a right-angled triangle\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1 + side2 > side3 && side1 + side3\
    \ < side2 || side2 + side3 > side1 && side2 + side3 < side1))\n  echo $result\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result=0\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local \n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1 + side2 > side3))\n  echo $result\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result=0\n  local side\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local \n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local length1=$1\n    local length2=$2\n\
    \    local length3=$3\n    if [ $length1 -eq 0 ] || [ $length2 -eq 0 ] || [ $length3\
    \ -eq 0 ]; then\n        echo \"Error: Invalid input\"\n        exit 1\n    fi\n\
    \    if [ $length1 -eq 1 ] || [ $length2 -eq 1 ] || [ $length3 -eq 1 ]; then\n\
    \        echo \"Error: Invalid input\"\n        exit 1\n    fi\n    if [ $length1\
    \ -eq 2 ] || [ $length2 -eq 2 ] || [ $length3 -eq 2 ]; then\n        echo \"Error:\
    \ Invalid input\"\n        exit 1\n    fi\n    if [ $length1 -eq 3 ] || [ $length2\
    \ -eq 3 ] || [ $length3 -eq 3 ]; then\n        echo \"Error: Invalid input\"\n\
    \        exit 1\n    fi\n    if [ $length1 -eq 4 ] || [ $length2 -eq 4 ] || [\
    \ $length3 -eq 4 ]; then\n        echo \"Error: Invalid input\"\n        exit\
    \ 1\n    fi\n    if [ $length1 -eq 5 ] || [ $length2 -eq 5 ] || [ $length3 -eq\
    \ 5 ]; then\n        echo \"Error: Invalid input\"\n        exit 1\n    fi\n \
    \   if [ $length1 -eq 6 ] || [ $length2 -eq 6 ] || [ $length3 -eq 6 ]; then\n\
    \        echo \"Error: Invalid input\"\n        exit 1\n    fi\n    if [ $length1\
    \ -eq 7 ] || [ $length2 -eq 7 ] || [ $length3 -eq 7 ]; then\n        echo \"Error:\
    \ Invalid input\"\n        exit 1\n    fi\n    if [ $length1 -eq 8 ] || [ $length2\
    \ -eq 8 ] || [ $length3 -eq 8 ]; then\n        echo \"Error: Invalid input\"\n\
    \        exit 1\n    fi\n    if [ $length1 -eq 9 ] || [ $length2 -eq 9 ] || [\
    \ $length3 -eq 9 ]; then\n        echo \"Error: Invalid input\"\n        exit\
    \ 1\n    fi\n    if [ $length1 -eq 10 ] || [ $length2 -eq 10 ] || [ $length3 -eq\
    \ 10 ]; then\n        echo \"Error: Invalid input\"\n        exit 1\n    fi\n\
    \    if [ $length1 -eq 11 ] || [ $length2 -eq 11 ] || [ $length3 -eq 11 ]; then\n\
    \        echo \"Error: Invalid input\"\n        exit 1\n    fi\n    if [ $length1\
    \ -eq 12 ] || [ $length2 -eq 12 ] || [ $length3 -eq 12 ]; then\n        echo \"\
    Error: Invalid input\"\n        exit 1\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_dlxf1zj.sh: line 66: syntax error near unexpected token `}''

    /tmp/tmp_dlxf1zj.sh: line 66: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1+side2+side3)==(side1*side2+side2*side3))\n\
    \  echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyyfgiz1u.sh: command substitution: line 16: syntax error near unexpected
    token `==''

    /tmp/tmpyyfgiz1u.sh: command substitution: line 16: `(side1+side2+side3)==(side1*side2+side2*side3)''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  \n  if ((side1 == side2) && (side2 == side3)) ;\
    \ then\n    result=true\n  else\n    result=false\n  fi\n  \n  return $result\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptqylyltt.sh: line 17: side1: command not found

    /tmp/tmptqylyltt.sh: line 23: return: false: numeric argument required

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\t\n\tif ((side1 == side2 && side2 == side3)) || ((side1\
    \ == side3 && side2 == side3)) || ((side1 == side2 && side3 == side3)) || ((side1\
    \ == side3 && side2 == side3)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == \n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfoppq5d4.sh: line 17: unexpected EOF while looking for matching
    `)''

    /tmp/tmpfoppq5d4.sh: line 40: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\t\n\tresult=$(echo \"$side1 * $side2 * $side3\" |\
    \ bc -l)\n\tif [ $result -eq 0 ]; then\n\t\treturn 0\n\telse\n\t\treturn 1\n\t\
    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\tlocal i\n\t\n\tresult=0\n\t\n\tfor i in $(seq 1\
    \ $((side1 + side2 + side3))); do\n\t\t(( result |= ( ( (side1 & 1) != (side2\
    \ & 1) != (side3 & 1) ) != 0 ) ))\n\tdone\n\t\n\treturn $result\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq 0 ]; then\n        echo \"$side1 is an\
    \ invalid side length\"\n        return 1\n    elif [ $side2 -eq 0 ]; then\n \
    \       echo \"$side2 is an invalid side length\"\n        return 1\n    elif\
    \ [ $side3 -eq 0 ]; then\n        echo \"$side3 is an invalid side length\"\n\
    \        return 1\n    elif [ $side1 -eq $side2 ]; then\n        echo \"$side1\
    \ and $side2 are equal\"\n        return 1\n    elif [ $side1 -eq $side3 ]; then\n\
    \        echo \"$side1 and $side3 are equal\"\n        return 1\n    elif [ $side2\
    \ -eq $side3 ]; then\n        echo \"$side2 and $side3 are equal\"\n        return\
    \ 1\n    elif [ $side1 -gt $side2 ]; then\n        echo \"$side1 must be greater\
    \ than $side2\"\n        return 1\n    elif [ $side1 -gt $side3 ]; then\n    \
    \    echo \"$side1 must be greater than $side3\"\n        return 1\n    elif [\
    \ $side2 -gt $side3 ]; then\n        echo \"$side2 must be greater than $side3\"\
    \n        return 1\n    elif [ $side1 -eq 0 ] && [ $side2 -eq 0 ] && [ $side3\
    \ -eq 0 ]; then\n        echo \"Triangle is equilateral\"\n        return 0\n\
    \    elif [ $side1 -eq 0 ] && [ $side2 -eq 0 ] && [ $side3 -gt 0 ]; then\n   \
    \     echo \"Triangle is isosceles\"\n        return 0\n    elif [ $side1 -eq\
    \ 0 ] && [ $side2 -gt 0 ] && [ $side3 -eq 0 ]; then\n        echo \"Triangle is\
    \ scalene\"\n        return 0\n    elif [ $side1 -eq 0 ] && [ $side2 -gt 0 ] &&\
    \ [ $side3 -gt 0 ]; then\n        echo \"Triangle is scalene\"\n        return\
    \ 0\n    elif [ $side1 -gt 0 ] && [ $side2 -eq 0 ] && [ $side3 -eq 0 ]; then\n\
    \        echo \"Triangle is isosceles\"\n        return 0\n    elif [ $side1 -gt\
    \ 0 ] && [ $side2 -eq 0 ] && [ $side3 -gt 0 ]; then\n        echo \"Triangle is\
    \ isosceles\"\n        return 0\n    elif [ $side1 -gt 0 ] && [ $side2 -gt 0 ]\
    \ && [ $side3 -eq 0 ]; then\n        echo \"Triangle is scalene\"\n        return\
    \ 0\n    elif [ $side1 -gt 0 ] && [ $side2 -gt 0 ] && [ $side3 -gt \n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6355cpsw.sh: line 64: syntax error near unexpected token `}''

    /tmp/tmp6355cpsw.sh: line 64: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local side1_length\n    local side2_length\n\
    \    local side3_length\n    local side1_length\n    local side2_length\n    local\
    \ side3_length\n    local side1_length\n    local side2_length\n    local side3_length\n\
    \    local side1_length\n    local side2_length\n    local side3_length\n    local\
    \ side1_length\n    local side2_length\n    local side3_length\n    local side1_length\n\
    \    local side2_length\n    local side3_length\n    local side1_length\n    local\
    \ side2_length\n    local side3_length\n    local side1_length\n    local side2_length\n\
    \    local side3_length\n    local side1_length\n    local side2_length\n    local\
    \ side3_length\n    local side1_length\n    local side2_length\n    local side3_length\n\
    \    local side1_length\n    local side2_length\n    local side3_length\n    local\
    \ side1_length\n    local side2_length\n    local side3_length\n    local side1_length\n\
    \    local side2_length\n    local side3_length\n    local side1_length\n    local\
    \ side2_length\n    local side3_length\n    local side1_length\n    local side2_length\n\
    \    local side3_length\n    local side1_length\n    local side2_length\n    local\
    \ side3_length\n    local side1_length\n    local side2_length\n    local side3_length\n\
    \    local side1_length\n    local side2_length\n    local side3_length\n    local\
    \ side1_length\n    local side2_length\n    local side3_length\n    local side1_length\n\
    \    local side2_length\n    local side3_length\n    local side1_length\n    local\
    \ side2_length\n    local side3_length\n    local side1_length\n    local side2_length\n\
    \    local side3_length\n    local side1_length\n    local side2_length\n    local\
    \ side3_length\n    local side1_length\n    local side2_length\n    local side3_length\n\
    \    local side1_length\n    local side2_length\n    local side3_length\n    local\
    \ side1_length\n    local side2_length\n    local side3_length\n    local side1_length\n\
    \    local side2_length\n    local side3_length\n    \n}\n\ncandidate() {\n  \
    \  right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result=0\n    local side\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local \n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    if [ $side1 -eq 0 ] || [ $side2 -eq\
    \ 0 ] || [ $side3 -eq 0 ]; then\n        result=0\n    else\n        result=$((side1\
    \ -eq side2 -eq side3 ))\n    fi\n    echo $result\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6w4jy942.sh: line 19: side1 -eq side2 -eq side3 : syntax error
    in expression (error token is "side2 -eq side3 ")

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1==side2 && side2==side3 && side1==side3\
    \ && side1==side2 || side1==side2 && side2==side3 && side3==side1 || side1==side2\
    \ && side3==side2 || side1==side3 && side2==side3 && side3==side1))\n  echo $result\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\t\n\tif ((side1 == side2 && side2 == side3)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side3)) || ((side2 == side3 && side1 == side1)) || ((side2\
    \ == side1 && side3 == side1)) || ((side3 == side1 && side1 == side2)) ; then\n\
    \t\tresult=true\n\telse\n\t\tresult=false\n\tfi\n\t\n\treturn $result\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0w8lbvy8.sh: line 23: return: false: numeric argument required

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq $side2 -a $side1 -eq $side3 ]\n    then\n\
    \        echo \"$side1 is a right-angled triangle\"\n    else\n        echo \"\
    $side1 is not a right-angled triangle\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq 0 ] || [ $side2 -eq 0 ] || [ $side3 -eq\
    \ 0 ]; then\n        echo \"Error: Invalid input\"\n        exit 1\n    fi\n \
    \   if [ $side1 -eq $side2 ] || [ $side1 -eq $side3 ] || [ $side2 -eq $side3 ];\
    \ then\n        echo \"Error: Invalid input\"\n        exit 1\n    fi\n    if\
    \ [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ]; then\n        echo \"Error:\
    \ Invalid input\"\n        exit 1\n    fi\n    if [ $side1 -eq $side3 ] && [ $side3\
    \ -eq $side2 ]; then\n        echo \"Error: Invalid input\"\n        exit 1\n\
    \    fi\n    if [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ] && [ $side3 -eq\
    \ $side1 ]; then\n        echo \"Error: Invalid input\"\n        exit 1\n    fi\n\
    \    if [ $side1 -eq $side3 ] && [ $side3 -eq $side1 ] && [ $side1 -eq $side2\
    \ ]; then\n        echo \"Error: Invalid input\"\n        exit 1\n    fi\n   \
    \ if [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ] && [ $side3 -eq $side1 ];\
    \ then\n        echo \"Error: Invalid input\"\n        exit 1\n    fi\n    if\
    \ [ $side1 -eq $side3 ] && [ $side3 -eq $side1 ] && [ $side1 -eq $side2 ]; then\n\
    \        echo \"Error: Invalid input\"\n        exit 1\n    fi\n    if [ $side1\
    \ -eq $side2 ] && [ $side2 -eq $side3 ] && [ $side3 -eq $side1 ]; then\n     \
    \   echo \"Error: Invalid input\"\n        exit 1\n    fi\n    if [ $side1 -eq\
    \ $side3 ] && [ $side3 -eq $side1 ] && [ $side1 -eq $side2 ]; then\n        echo\
    \ \"Error: Invalid input\"\n        exit 1\n    fi\n    if [ $side1 -eq $side2\
    \ ] && [ $side2 -eq $side3 ] && [ $side3 -eq $side1 ]; then\n        echo \"Error:\
    \ Invalid input\"\n        exit 1\n    fi\n    if [ $side1 -eq $side3 ] && [ $side3\
    \ -eq $side1 ] && [ $side1 -eq $side2 ]; then\n        echo \"Error: Invalid input\"\
    \n        exit 1\n    fi\n    if [ $side1 -eq $side2 ] && [ $side2 -eq $side3\
    \ ] && [ $\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpltalbr6x.sh: line 64: syntax error near unexpected token `}''

    /tmp/tmpltalbr6x.sh: line 64: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  \n  if [ $side1 -eq $side2 -a $side1 -eq $side3\
    \ ]; then\n    result=true\n  else\n    if [ $side1 -eq $side3 -a $side2 -eq $side3\
    \ ]; then\n      result=true\n    else\n      if [ $side1 -eq $side2 -a $side3\
    \ -eq $side2 ]; then\n        result=true\n      else\n        result=false\n\
    \      fi\n    fi\n  fi\n  \n  echo $result\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq 0 ] || [ $side2 -eq 0 ] || [ $side3 -eq\
    \ 0 ]; then\n        echo \"Invalid input\"\n        exit 1\n    fi\n    if [\
    \ $side1 -eq $side2 -a $side1 -eq $side3 ]; then\n        echo \"$side1 is a right-angled\
    \ triangle\"\n        return 0\n    elif [ $side1 -eq $side3 -a $side2 -eq $side3\
    \ ]; then\n        echo \"$side2 is a right-angled triangle\"\n        return\
    \ 0\n    elif [ $side2 -eq $side3 -a $side1 -eq $side2 ]; then\n        echo \"\
    $side3 is a right-angled triangle\"\n        return 0\n    elif [ $side1 -eq $side2\
    \ -a $side2 -eq $side3 ]; then\n        echo \"$side1 is a right-angled triangle\"\
    \n        return 0\n    elif [ $side1 -eq $side3 -a $side3 -eq $side1 ]; then\n\
    \        echo \"$side3 is a right-angled triangle\"\n        return 0\n    elif\
    \ [ $side2 -eq $side3 -a $side3 -eq $side2 ]; then\n        echo \"$side2 is a\
    \ right-angled triangle\"\n        return 0\n    elif [ $side1 -eq $side3 -a $side3\
    \ -eq $side3 ]; then\n        echo \"$side3 is a right-angled triangle\"\n   \
    \     return 0\n    elif [ $side1 -eq $side2 -a $side2 -eq $side3 ]; then\n  \
    \      echo \"$side1 is a right-angled triangle\"\n        return 0\n    elif\
    \ [ $side1 -eq $side3 -a $side3 -eq $side1 ]; then\n        echo \"$side3 is a\
    \ right-angled triangle\"\n        return 0\n    elif [ $side2 -eq $side3 -a $side3\
    \ -eq $side2 ]; then\n        echo \"$side2 is a right-angled triangle\"\n   \
    \     return 0\n    elif [ $side1 -eq $side2 -a $side2 -eq $side3 ]; then\n  \
    \      echo \"$side1 is a right-angled triangle\"\n        return 0\n    elif\
    \ [ $side1 -eq $side3 -a $side3 -eq $side1 ]; then\n        echo \"$side3 is a\
    \ right-angled triangle\"\n        return 0\n    elif [ $side2 -eq $side3 -a $side3\
    \ -eq $side2 ]; then\n        echo \"$side2 is a right-angled triangle\"\n   \
    \     return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp249z5g03.sh: line 58: syntax error near unexpected token `}''

    /tmp/tmp249z5g03.sh: line 58: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq 0 ] || [ $side2 -eq 0 ] || [ $side3 -eq\
    \ 0 ]; then\n        echo \"Error: Invalid input\"\n        exit 1\n    fi\n \
    \   local result\n    if [ $side1 -eq $side2 -a $side1 -eq $side3 ]; then\n  \
    \      result=true\n    elif [ $side1 -eq $side2 -a $side1 -eq $side3 -a $side2\
    \ -eq $side3 ]; then\n        result=false\n    elif [ $side1 -eq $side2 -a $side1\
    \ -eq $side3 -a $side2 -eq $side3 -a $side1 -eq $side3 ]; then\n        result=true\n\
    \    else\n        result=false\n    fi\n    echo $result\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  \n  if [ $side1 -eq 0 ] || [ $side2 -eq 0 ] || [\
    \ $side3 -eq 0 ]; then\n    echo \"Invalid input\"\n    return 1\n  fi\n  \n \
    \ if [ $side1 -eq $side2 ] || [ $side1 -eq $side3 ] || [ $side2 -eq $side3 ];\
    \ then\n    echo \"Invalid input\"\n    return 1\n  fi\n  \n  if [ $side1 -eq\
    \ $side2 ] && [ $side2 -eq $side3 ]; then\n    echo \"Invalid input\"\n    return\
    \ 1\n  fi\n  \n  if [ $side1 -eq $side3 ] && [ $side3 -eq $side2 ]; then\n   \
    \ echo \"Invalid input\"\n    return 1\n  fi\n  \n  if [ $side1 -eq $side2 ] &&\
    \ [ $side2 -eq $side3 ] && [ $side3 -eq $side1 ]; then\n    echo \"Invalid input\"\
    \n    return 1\n  fi\n  \n  if [ $side1 -eq $side3 ] && [ $side3 -eq $side2 ]\
    \ && [ $side2 -eq $side1 ]; then\n    echo \"Invalid input\"\n    return 1\n \
    \ fi\n  \n  if [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ] && [ $side3 -eq\
    \ $side1 ] && [ $side1 -eq $side3 ]; then\n    echo \"Invalid input\"\n    return\
    \ 1\n  fi\n  \n  if [ $side1 -eq $side3 ] && [ $side3 -eq $side2 ] && [ $side2\
    \ -eq $side1 ] && [ $side1 -eq $side2 ]; then\n    echo \"Invalid input\"\n  \
    \  return 1\n  fi\n  \n  if [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ] &&\
    \ [ $side3 -eq $side1 ] && [ $side1 -eq $side3 ] && [ $side2 -eq $side1 ]; then\n\
    \    echo \"Invalid input\"\n    return 1\n  fi\n  \n  if [ $side1 -eq $side3\
    \ ] && [ $side3 -eq $side2 ] && [ $side2 -eq $side1 ] && [ $side1 -eq $side2 ]\
    \ && [ $side2 -eq $side3 ]; then\n    echo \"Invalid input\"\n    return 1\n \
    \ fi\n  \n  if [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ] && [ $side3 -eq\
    \ $side1 ] && [ $side1 -\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppw1btqi6.sh: line 68: syntax error near unexpected token `}''

    /tmp/tmppw1btqi6.sh: line 68: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result=0\n  if [ $side1 -gt $side2 ]; then\n    if [ $side1\
    \ -gt $side3 ]; then\n      result=1\n    else\n      result=0\n    fi\n  else\n\
    \    if [ $side2 -gt $side3 ]; then\n      result=1\n    else\n      result=0\n\
    \    fi\n  fi\n  echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -gt $side2 ]; then\n        if [ $side1 -gt\
    \ $side3 ]; then\n            if [ $side2 -gt $side3 ]; then\n               \
    \ echo \"True\"\n            else\n                echo \"False\"\n          \
    \  fi\n        else\n            if [ $side2 -gt $side1 ]; then\n            \
    \    echo \"True\"\n            else\n                echo \"False\"\n       \
    \     fi\n        fi\n    else\n        if [ $side1 -gt $side3 ]; then\n     \
    \       if [ $side2 -gt $side3 ]; then\n                echo \"True\"\n      \
    \      else\n                echo \"False\"\n            fi\n        else\n  \
    \          if [ $side2 -gt $side1 ]; then\n                echo \"True\"\n   \
    \         else\n                echo \"False\"\n            fi\n        fi\n \
    \   fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  if [ $side1 -eq $side2 -a $side1 -eq $side3 ]; then\n    echo \"\
    $side1 is a right-angled triangle\"\n  else\n    echo \"$side1 is not a right-angled\
    \ triangle\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq 0 ] || [ $side2 -eq 0 ] || [ $side3 -eq\
    \ 0 ]; then\n        echo \"Invalid input\"\n        exit 1\n    fi\n    if [\
    \ $side1 -eq $side2 ] || [ $side1 -eq $side3 ] || [ $side2 -eq $side3 ]; then\n\
    \        echo \"Invalid input\"\n        exit 1\n    fi\n    if [ $side1 -eq $side2\
    \ ] && [ $side2 -eq $side3 ]; then\n        echo \"$side1 is a right-angled triangle\"\
    \n        return 0\n    fi\n    if [ $side1 -eq $side3 ] && [ $side2 -eq $side3\
    \ ]; then\n        echo \"$side1 is a right-angled triangle\"\n        return\
    \ 0\n    fi\n    if [ $side1 -eq $side2 ] && [ $side3 -eq $side2 ]; then\n   \
    \     echo \"$side1 is a right-angled triangle\"\n        return 0\n    fi\n \
    \   if [ $side1 -eq $side3 ] && [ $side3 -eq $side2 ]; then\n        echo \"$side1\
    \ is a right-angled triangle\"\n        return 0\n    fi\n    if [ $side1 -eq\
    \ $side2 ] && [ $side2 -eq $side3 ]; then\n        echo \"$side1 is a right-angled\
    \ triangle\"\n        return 0\n    fi\n    if [ $side1 -eq $side3 ] && [ $side3\
    \ -eq $side2 ]; then\n        echo \"$side1 is a right-angled triangle\"\n   \
    \     return 0\n    fi\n    if [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ];\
    \ then\n        echo \"$side1 is a right-angled triangle\"\n        return 0\n\
    \    fi\n    if [ $side1 -eq $side3 ] && [ $side3 -eq $side2 ]; then\n       \
    \ echo \"$side1 is a right-angled triangle\"\n        return 0\n    fi\n    if\
    \ [ $side1 -eq $side2 ] && [ $side3 -eq $side1 ]; then\n        echo \"$side1\
    \ is a right-angled triangle\"\n        return 0\n    fi\n    if [ $side1 -eq\
    \ $side3 ] && [ $side3 -eq $side1 ]; then\n        echo \"$side1 is a right-angled\
    \ triangle\"\n        return 0\n    fi\n    if [ $side1 -eq $side2 ] && [ $side2\
    \ -eq $side3 ]; then\n        echo \"$side1 is a right-angled triangle\"\n   \
    \     return 0\n    fi\n    if [ $side1 -eq $side3 ] && [ $side3 -eq $side2 \n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpihhbpn3r.sh: line 68: syntax error near unexpected token `}''

    /tmp/tmpihhbpn3r.sh: line 68: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\t\n\tif ((side1 == side2) && (side2 == side3)) {\n\
    \t\tresult=true\n\t} else {\n\t\tresult=false\n\t}\n\t\n\techo $result\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "/tmp/tmpdl119gur.sh: line 17: syntax error near unexpected token `{'\n\
    /tmp/tmpdl119gur.sh: line 17: `\tif ((side1 == side2) && (side2 == side3)) {'\n"
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local side1_length\n  local side2_length\n  local\
    \ side3_length\n  local side1_length\n  local side2_length\n  local side3_length\n\
    \  local side1_length\n  local side2_length\n  local side3_length\n  local side1_length\n\
    \  local side2_length\n  local side3_length\n  local side1_length\n  local side2_length\n\
    \  local side3_length\n  local side1_length\n  local side2_length\n  local side3_length\n\
    \  local side1_length\n  local side2_length\n  local side3_length\n  local side1_length\n\
    \  local side2_length\n  local side3_length\n  local side1_length\n  local side2_length\n\
    \  local side3_length\n  local side1_length\n  local side2_length\n  local side3_length\n\
    \  local side1_length\n  local side2_length\n  local side3_length\n  local side1_length\n\
    \  local side2_length\n  local side3_length\n  local side1_length\n  local side2_length\n\
    \  local side3_length\n  local side1_length\n  local side2_length\n  local side3_length\n\
    \  local side1_length\n  local side2_length\n  local side3_length\n  local side1_length\n\
    \  local side2_length\n  local side3_length\n  local side1_length\n  local side2_length\n\
    \  local side3_length\n  local side1_length\n  local side2_length\n  local side3_length\n\
    \  local side1_length\n  local side2_length\n  local side3_length\n  local side1_length\n\
    \  local side2_length\n  local side3_length\n  local side1_length\n  local side2_length\n\
    \  local side3_length\n  local side1_length\n  local side2_length\n  local side3_length\n\
    \  local side1_length\n  local side2_length\n  local side3_length\n  local side1_length\n\
    \  local side2_length\n  local side3_length\n  local side1_length\n  local side2_length\n\
    \  local side3_length\n  local side1_length\n  local side2_length\n  local side3_length\n\
    \  local side1_length\n  local side2_length\n  local side3_length\n  \n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  if [ $side1 -eq $side2 -a $side1 -eq $side3 ]\n  then\n    echo\
    \ 1\n  else\n    echo 0\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tif [ $side1 -eq $side2 ]; then\n\t\tif [ $side1 -eq $side3 ]; then\n\
    \t\t\techo \"$side1 is a right-angled triangle\"\n\t\t\treturn 0\n\t\telse\n\t\
    \t\techo \"$side1 is a right angled triangle\"\n\t\t\treturn 1\n\t\tfi\n\telse\n\
    \t\tif [ $side2 -eq $side3 ]; then\n\t\t\techo \"$side2 is a right-angled triangle\"\
    \n\t\t\treturn 0\n\t\telse\n\t\t\techo \"$side2 is a right angled triangle\"\n\
    \t\t\treturn 1\n\t\tfi\n\tfi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq 0 ] || [ $side2 -eq 0 ] || [ $side3 -eq\
    \ 0 ]; then\n        return 0\n    fi\n    local result\n    result=$((side1 +\
    \ side2 + side3) | 0)\n    if [ $result -eq 0 ]; then\n        return 0\n    fi\n\
    \    if [ $result -eq $side1 ]; then\n        return 1\n    elif [ $result -eq\
    \ $side2 ]; then\n        return 1\n    elif [ $result -eq $side3 ]; then\n  \
    \      return 1\n    else\n        return 0\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppgg3fktu.sh: line 19: side1: command not found

    /tmp/tmppgg3fktu.sh: line 19: 0: command not found

    /tmp/tmppgg3fktu.sh: line 20: [: -eq: unary operator expected

    /tmp/tmppgg3fktu.sh: line 23: [: -eq: unary operator expected

    /tmp/tmppgg3fktu.sh: line 25: [: -eq: unary operator expected

    /tmp/tmppgg3fktu.sh: line 27: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result=0\n\tif ((side1 -eq side2) || (side1 -eq side3)) {\n\
    \t\tresult=1\n\t} else\n\t\tif ((side2 -eq side3) || (side2 -eq side1)) {\n\t\t\
    \tresult=1\n\t\t} else\n\t\t\tif ((side3 -eq side1) || (side3 -eq side2)) {\n\t\
    \t\t\tresult=1\n\t\t\t}\n\t\tfi\n\tfi\n\techo $result\n}\n\ncandidate() {\n  \
    \  right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "/tmp/tmp21_oh9xg.sh: line 16: syntax error near unexpected token `{'\n\
    /tmp/tmp21_oh9xg.sh: line 16: `\tif ((side1 -eq side2) || (side1 -eq side3)) {'\n"
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq 0 ] || [ $side2 -eq 0 ] || [ $side3 -eq\
    \ 0 ]; then\n        return 0\n    fi\n    if [ $side1 -eq $side2 ] || [ $side1\
    \ -eq $side3 ] || [ $side2 -eq $side3 ]; then\n        return 1\n    fi\n    if\
    \ [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ]; then\n        return 0\n   \
    \ fi\n    if [ $side1 -eq $side3 ] && [ $side3 -eq $side2 ]; then\n        return\
    \ 0\n    fi\n    if [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ] && [ $side3\
    \ -eq $side1 ]; then\n        return 0\n    fi\n    if [ $side1 -eq $side3 ] &&\
    \ [ $side3 -eq $side1 ] && [ $side1 -eq $side2 ]; then\n        return 0\n   \
    \ fi\n    if [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ] && [ $side3 -eq $side1\
    \ ]; then\n        return 1\n    fi\n    if [ $side1 -eq $side3 ] && [ $side3\
    \ -eq $side1 ] && [ $side1 -eq $side2 ]; then\n        return 1\n    fi\n    if\
    \ [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ] && [ $side3 -eq $side1 ]; then\n\
    \        return 1\n    fi\n    if [ $side1 -eq $side3 ] && [ $side3 -eq $side1\
    \ ] && [ $side1 -eq $side2 ]; then\n        return 1\n    fi\n    if [ $side1\
    \ -eq $side2 ] && [ $side2 -eq $side3 ] && [ $side3 -eq $side1 ]; then\n     \
    \   return 1\n    fi\n    if [ $side1 -eq $side3 ] && [ $side3 -eq $side1 ] &&\
    \ [ $side1 -eq $side2 ]; then\n        return 1\n    fi\n    if [ $side1 -eq $side2\
    \ ] && [ $side2 -eq $side3 ] && [ $side3 -eq $side1 ]; then\n        return 1\n\
    \    fi\n    if [ $side1 -eq $side3 ] && [ $side3 -eq $side1 ] && [ $side1 -eq\
    \ $side2 ]; then\n        return 1\n    fi\n    if [ $side1 -eq $side2 ] && [\
    \ $side2 -eq $side3 ] && [ $side3 -eq $side1 ]; then\n        return 1\n    fi\n\
    \    if [ $side1 -eq $side3 ] && [ $side3 -eq $side\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgxs3r9qr.sh: line 61: syntax error near unexpected token `}''

    /tmp/tmpgxs3r9qr.sh: line 61: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq $side2 -a $side1 -eq $side3 ]; then\n\
    \        echo \"$side1 is a right-angled triangle\"\n    else\n        echo \"\
    $side1 is not a right-angled triangle\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    if [ $side1 -eq 0 ] || [ $side2 -eq\
    \ 0 ] || [ $side3 -eq 0 ]; then\n        result=0\n    else\n        result=$((side1\
    \ * side2) -\n                  $((side1 * side3) -\n                   $((side2\
    \ * side3)))\n        if [ $result -eq 0 ]; then\n            result=1\n     \
    \   fi\n    fi\n    echo $result\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl3hlurgl.sh: line 19: unexpected EOF while looking for matching
    `)''

    /tmp/tmpl3hlurgl.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result=0\n    local side1_length=$((side1*2))\n\
    \    local side2_length=$((side2*2))\n    local side3_length=$((side3*2))\n  \
    \  local side1_side2_length=$((side1_length+side2_length))\n    local side1_side3_length=$((side1_length+side3_length))\n\
    \    local side2_side3_length=$((side2_length+side3_length))\n    local side1_side2_side3_length=$((side1_side2_length+side2_side3_length))\n\
    \    local side1_side3_side2_length=$((side1_side3_length+side2_side3_length))\n\
    \    local side1_side3_side2_side3_length=$((side1_side3_side2_length+side2_side3_side3_length))\n\
    \    local side1_side2_side3_side3_length=$((side1_side2_side3_length+side3_side3_length))\n\
    \    local side1_side3_side2_side3_side3_length=$((side1_side3_side2_side3_length+side3_side3_side3_length))\n\
    \    local side1_side2_side3_side3_side2_length=$((side1_side2_side3_side3_length+side2_side2_length))\n\
    \    local side1_side3_side2_side3_side2_side3_length=$((side1_side3_side2_side3_length+side2_side2_side3_length))\n\
    \    local side1_side2_side3_side2_side3_side2_side3_length=$((side1_side2_side3_side2_side3_length+side3_side2_side3_length))\n\
    \    local side1_side3_side2_side3_side2_side3_side3_length=$((side1_side3_side2_side3_side3_length+side2_side3_side3_length))\n\
    \    local side1_side2_side3_side2_side3_side2_side3_side3_length=$((side1_side2_side3_side2_side3_side3_length+side3_side2_side3_side3_length))\n\
    \    local side1_side3_side2_side3_side2_side3_side2_side3_length=$((side1_side3_side2_side3_side2_side3_side3_length+side2_side3_side2_side3_length))\n\
    \    local side1_side3_side2_side3_side2_side3_side2_side\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tif [ $side1 -eq $side2 -a $side1 -eq $side3 ]; then\n\t\treturn\
    \ 0\n\telif [ $side1 -eq $side2 -a $side3 -eq $side1 ]; then\n\t\treturn 1\n\t\
    elif [ $side1 -eq $side3 -a $side2 -eq $side3 ]; then\n\t\treturn 1\n\telif [\
    \ $side1 -eq $side3 -a $side3 -eq $side1 ]; then\n\t\treturn 0\n\telse\n\t\treturn\
    \ 1\n\tfi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq $side2 ]; then\n        if [ $side1 -eq\
    \ $side3 ]; then\n            echo \"$side1 $side2 $side3\"\n            return\
    \ 0\n        fi\n        echo \"$side1 $side3 $side2\"\n        return 0\n   \
    \ fi\n    if [ $side2 -eq $side3 ]; then\n        echo \"$side1 $side2 $side3\"\
    \n        return 0\n    fi\n    if [ $side1 -eq $side3 ]; then\n        echo \"\
    $side1 $side3 $side2\"\n        return 0\n    fi\n    if [ $side2 -eq $side1 ];\
    \ then\n        echo \"$side1 $side2 $side3\"\n        return 0\n    fi\n    echo\
    \ \"$side1 $side2 $side3\"\n    return 1\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  if [ $side1 -eq $side2 -a $side1 -eq $side3 ]; then\n    echo 1\n\
    \  else\n    echo 0\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1 + side2 + side3 > 0))\n  if [ $result\
    \ -eq 0 ]; then\n    result=$((side1 + side2 + side3 == 0))\n  fi\n  return $result\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    if [ $side1 -eq $side2 -a $side1 -eq\
    \ $side3 ]; then\n        result=true\n    elif [ $side1 -eq $side3 -a $side2\
    \ -eq $side3 ]; then\n        result=true\n    elif [ $side1 -eq $side2 -a $side3\
    \ -eq $side2 ]; then\n        result=true\n    elif [ $side1 -eq $side3 -a $side3\
    \ -eq $side1 ]; then\n        result=true\n    else\n        result=false\n  \
    \  fi\n    echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local length=$1\n  local length2=$2\n \
    \ local length3=$3\n  local sum\n  local sum2\n  local sum3\n  local result\n\
    \  local result2\n  local result3\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  if [ $side1 -eq 0 ] || [ $side2 -eq 0 ] || [ $side3 -eq 0 ]; then\n\
    \    return 0\n  fi\n  if [ $side1 -eq $side2 ] || [ $side1 -eq $side3 ] || [\
    \ $side2 -eq $side3 ]; then\n    return 1\n  fi\n  local angle1=$((180/$side1))\n\
    \  local angle2=$((180/$side2))\n  local angle3=$((180/$side3))\n  if [ $angle1\
    \ -eq $angle2 ] || [ $angle1 -eq $angle3 ] || [ $angle2 -eq $angle3 ]; then\n\
    \    return 1\n  fi\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1^side2^side3))\n  result=$((result^((side1^side2)^side3)))\n\
    \  result=$((result^((side1^side3)^side2)))\n  result=$((result^((side2^side3)^side1)))\n\
    \  result=$((result^((side3^side1)^side2)))\n  result=$((result^((side3^side2)^side1)))\n\
    \  result=$((result^((side3^side1)^side3)))\n  result=$((result^((side1^side2)^side3)))\n\
    \  result=$((result^((side1^side3)^side2)))\n  result=$((result^((side2^side3)^side1)))\n\
    \  result=$((result^((side3^side1)^side2)))\n  result=$((result^((side3^side2)^side1)))\n\
    \  result=$((result^((side3^side1)^side3)))\n  result=$((result^((side1^side2)^side3)))\n\
    \  result=$((result^((side1^side3)^side2)))\n  result=$((result^((side2^side3)^side1)))\n\
    \  result=$((result^((side3^side1)^side2)))\n  result=$((result^((side3^side2)^side1)))\n\
    \  result=$((result^((side3^side1)^side3)))\n  result=$((result^((side1^side2)^side3)))\n\
    \  result=$((result^((side1^side3)^side2)))\n  result=$((result^((side2^side3)^side1)))\n\
    \  result=$((result^((side3^side1)^side2)))\n  result=$((result^((side3^side2)^side1)))\n\
    \  result=$((result^((side3^side1)^side3)))\n  result=$((result^((side1^side2)^side3)))\n\
    \  result=$((result^((side1^side3)^side2)))\n  result=$((result^((side2^side3)^side1)))\n\
    \  result=$((result^((side3^side1)^side2)))\n  result=$((result^((side3^side2)^side1)))\n\
    \  result=$((result^((side3^side1)^side3)))\n\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1 + side2 > side3))\n  echo \"$result\"\
    \n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq $side2 ]; then\n        if [ $side1 -eq\
    \ $side3 ]; then\n            if [ $side2 -eq 90 ]; then\n                return\
    \ 0\n            else\n                return 1\n            fi\n        else\n\
    \            return 1\n        fi\n    else\n        if [ $side2 -eq $side3 ];\
    \ then\n            if [ $side1 -eq 90 ]; then\n                return 0\n   \
    \         else\n                return 1\n            fi\n        else\n     \
    \       return 1\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq $side2 ]; then\n        if [ $side1 -eq\
    \ $side3 ]; then\n            echo \"$side1 $side2 $side3\"\n            return\
    \ 0\n        fi\n        echo \"$side1 $side3 $side2\"\n        return 0\n   \
    \ fi\n    if [ $side2 -eq $side3 ]; then\n        echo \"$side1 $side2 $side3\"\
    \n        return 0\n    fi\n    if [ $side1 -eq $side3 ]; then\n        echo \"\
    $side1 $side3 $side2\"\n        return 0\n    fi\n    echo \"$side1 $side2 $side3\"\
    \n    return 1\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    if [ $side1 -eq 0 ] || [ $side2 -eq\
    \ 0 ] || [ $side3 -eq 0 ]; then\n        result=0\n    else\n        result=$((($side1\
    \ + $side2 + $side3) % 2))\n        if [ $result -eq 0 ]; then\n            result=1\n\
    \        fi\n    fi\n    echo $result\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\tlocal side1_length\n\tlocal side2_length\n\tlocal\
    \ side3_length\n\tlocal side1_length_square\n\tlocal side2_length_square\n\tlocal\
    \ side3_length_square\n\tlocal side1_square\n\tlocal side2_square\n\tlocal side3_square\n\
    \tlocal side1_square_root\n\tlocal side2_square_root\n\tlocal side3_square_root\n\
    \tlocal side1_square_root_2\n\tlocal side2_square_root_2\n\tlocal side3_square_root_2\n\
    \tlocal side1_square_root_3\n\tlocal side2_square_root_3\n\tlocal side3_square_root_3\n\
    \tlocal side1_square_root_4\n\tlocal side2_square_root_4\n\tlocal side3_square_root_4\n\
    \tlocal side1_square_root_5\n\tlocal side2_square_root_5\n\tlocal side3_square_root_5\n\
    \tlocal side1_square_root_6\n\tlocal side2_square_root_6\n\tlocal side3_square_root_6\n\
    \tlocal side1_square_root_7\n\tlocal side2_square_root_7\n\tlocal side3_square_root_7\n\
    \tlocal side1_square_root_8\n\tlocal side2_square_root_8\n\tlocal side3_square_root_8\n\
    \tlocal side1_square_root_9\n\tlocal side2_square_root_9\n\tlocal side3_square_root_9\n\
    \tlocal side1_square_root_10\n\tlocal side2_square_root_10\n\tlocal side3_square_root_10\n\
    \tlocal side1_square_root_11\n\tlocal side2_square_root_11\n\tlocal side3_square_root_11\n\
    \tlocal side1_square_root_12\n\tlocal side2_square_root_12\n\tlocal side3_square_root_12\n\
    \tlocal side1_square_root_13\n\tlocal side2_square_root_13\n\tlocal side3_square_root_13\n\
    \tlocal side1_square_root_14\n\tlocal side2_square_root_14\n\tlocal side3_square_root_14\n\
    \tlocal side1_square_root_15\n\tlocal side2_square_root_15\n\tlocal side3_square_root_15\n\
    \tlocal side1_square_root_16\n\tlocal side2_square_root_16\n\tlocal side3_square_root_16\n\
    \t\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1==side2 && side2==side3 && side1==side3\
    \ && side1==side2 || side1==side2 && side2==side3 && side3==side1 || side1==side2\
    \ && side3==side3 && side2==side1 || side1==side3 && side3==side2 && side2==side1))\n\
    \  echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1*side2+side2*side3+side3*side1-side1*side3-side2*side1))\n\
    \  if [ $result -eq 0 ]; then\n    return 0\n  else\n    return 1\n  fi\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\tresult=$((side1^side2^side3))\n\tif [ $result -eq\
    \ 0 ]; then\n\t\tresult=$((side1^side2^side3))\n\telse\n\t\tresult=$((side1^side2^side3))\n\
    \tfi\n\tif [ $result -eq 0 ]; then\n\t\tresult=$((side1^side2^side3))\n\telse\n\
    \t\tresult=$((side1^side2^side3))\n\tfi\n\tif [ $result -eq 0 ]; then\n\t\tresult=$((side1^side2^side3))\n\
    \telse\n\t\tresult=$((side1^side2^side3))\n\tfi\n\tif [ $result -eq 0 ]; then\n\
    \t\tresult=$((side1^side2^side3))\n\telse\n\t\tresult=$((side1^side2^side3))\n\
    \tfi\n\tif [ $result -eq 0 ]; then\n\t\tresult=$((side1^side2^side3))\n\telse\n\
    \t\tresult=$((side1^side2^side3))\n\tfi\n\tif [ $result -eq 0 ]; then\n\t\tresult=$((side1^side2^side3))\n\
    \telse\n\t\tresult=$((side1^side2^side3))\n\tfi\n\tif [ $result -eq 0 ]; then\n\
    \t\tresult=$((side1^side2^side3))\n\telse\n\t\tresult=$((side1^side2^side3))\n\
    \tfi\n\tif [ $result -eq 0 ]; then\n\t\tresult=$((side1^side2^side3))\n\telse\n\
    \t\tresult=$((side1^side2^side3))\n\tfi\n\tif [ $result -eq 0 ]; then\n\t\tresult=$((side1^side2^side3))\n\
    \telse\n\t\tresult=$((side1^side2^side3))\n\tfi\n\tif [ $result -eq 0 ]; then\n\
    \t\tresult=$((side1^side2^side3))\n\telse\n\t\tresult=$((side1^side2^side3))\n\
    \tfi\n\tif [ $result -eq 0 ]; then\n\t\tresult=$((side1^side2^side3))\n\telse\n\
    \t\tresult=$((side1^side2^side3))\n\tfi\n\tif [ $result -eq 0 ]; then\n\t\tresult=$((side1^side2^side3))\n\
    \telse\n\t\tresult=$((side1^side2^side3))\n\tfi\n\tif [ $result -eq 0 \n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqxnhr87i.sh: line 78: syntax error near unexpected token `}''

    /tmp/tmpqxnhr87i.sh: line 78: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\t\n\tif [ $side1 -eq 0 ] || [ $side2 -eq 0 ] || [\
    \ $side3 -eq 0 ]; then\n\t\treturn 0\n\tfi\n\t\n\tresult=$((side1 + side2 + side3\
    \ > 0))\n\t\n\tif [ $result -eq 0 ]; then\n\t\tresult=$((side1 + side2 > 0))\n\
    \tfi\n\t\n\tif [ $result -eq 0 ]; then\n\t\tresult=$((side1 + side3 > 0))\n\t\
    fi\n\t\n\tif [ $result -eq 0 ]; then\n\t\tresult=$((side2 + side3 > 0))\n\tfi\n\
    \t\n\tif [ $result -eq 0 ]; then\n\t\tresult=$((side1 + side3 > 0))\n\tfi\n\t\n\
    \tif [ $result -eq 0 ]; then\n\t\tresult=$((side2 + side3 > 0))\n\tfi\n\t\n\t\
    if [ $result -eq 0 ]; then\n\t\tresult=$((side1 + side2 > 0))\n\tfi\n\t\n\tif\
    \ [ $result -eq 0 ]; then\n\t\tresult=$((side1 + side2 > 0))\n\tfi\n\t\n\tif [\
    \ $result -eq 0 ]; then\n\t\tresult=$((side1 + side3 > 0))\n\tfi\n\t\n\tif [ $result\
    \ -eq 0 ]; then\n\t\tresult=$((side2 + side3 > 0))\n\tfi\n\t\n\tif [ $result -eq\
    \ 0 ]; then\n\t\tresult=$((side1 + side3 > 0))\n\tfi\n\t\n\tif [ $result -eq 0\
    \ ]; then\n\t\tresult=$((side2 + side3 > 0))\n\tfi\n\t\n\tif [ $result -eq 0 ];\
    \ then\n\t\tresult=$((side1 + side2 > 0))\n\tfi\n\t\n\tif [ $result -eq 0 ]; then\n\
    \t\tresult=$((side1 + side2 > 0))\n\tfi\n\t\n\tif [ $result -eq 0 ]; then\n\t\t\
    result=$((side1 + side3 > 0))\n\tfi\n\t\n\tif [ $result -eq 0 ]; then\n\t\tresult=$((side2\
    \ + side3 > 0))\n\tfi\n\t\n\tif [ $result -eq 0 ]; then\n\t\tresult=$((side1 +\
    \ side3 > 0))\n\tfi\n\t\n\tif [ $result -eq 0 ]; then\n\t\tresult=$((side2 + side3\
    \ > 0))\n\tfi\n\t\n\tif [ $result -eq 0 ]; then\n\t\tresult\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_972r5u4.sh: line 93: syntax error near unexpected token `}''

    /tmp/tmp_972r5u4.sh: line 93: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1*side1 + side2*side2 + side3*side3\
    \ - 2*side1*side3 - 2*side2*side3))\n  if ((result <= 0)); then\n    result=0\n\
    \  fi\n  if ((result >= side1*side1 + side2*side2 + side3*side3)); then\n    result=side1*side1\
    \ + side2*side2 + side3*side3\n  fi\n  if ((result >= 0)); then\n    result=1\n\
    \  fi\n  if ((result <= 0)); then\n    result=0\n  fi\n  echo $result\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq 0 ] || [ $side2 -eq 0 ] || [ $side3 -eq\
    \ 0 ]; then\n        return 0\n    fi\n    if [ $side1 -eq $side2 ] || [ $side1\
    \ -eq $side3 ] || [ $side2 -eq $side3 ]; then\n        return 1\n    fi\n    if\
    \ [ $side1 -eq $side2 ] || [ $side2 -eq $side3 ] || [ $side3 -eq $side1 ]; then\n\
    \        return 1\n    fi\n    if [ $side1 -eq $side2 ] || [ $side2 -eq $side3\
    \ ] || [ $side3 -eq $side1 ]; then\n        return 1\n    fi\n    if [ $side1\
    \ -eq $side2 ] || [ $side2 -eq $side3 ] || [ $side3 -eq $side1 ]; then\n     \
    \   return 1\n    fi\n    if [ $side1 -eq $side2 ] || [ $side2 -eq $side3 ] ||\
    \ [ $side3 -eq $side1 ]; then\n        return 1\n    fi\n    if [ $side1 -eq $side2\
    \ ] || [ $side2 -eq $side3 ] || [ $side3 -eq $side1 ]; then\n        return 1\n\
    \    fi\n    if [ $side1 -eq $side2 ] || [ $side2 -eq $side3 ] || [ $side3 -eq\
    \ $side1 ]; then\n        return 1\n    fi\n    if [ $side1 -eq $side2 ] || [\
    \ $side2 -eq $side3 ] || [ $side3 -eq $side1 ]; then\n        return 1\n    fi\n\
    \    if [ $side1 -eq $side2 ] || [ $side2 -eq $side3 ] || [ $side3 -eq $side1\
    \ ]; then\n        return 1\n    fi\n    if [ $side1 -eq $side2 ] || [ $side2\
    \ -eq $side3 ] || [ $side3 -eq $side1 ]; then\n        return 1\n    fi\n    if\
    \ [ $side1 -eq $side2 ] || [ $side2 -eq $side3 ] || [ $side3 -eq $side1 ]; then\n\
    \        return 1\n    fi\n    if [ $side1 -eq $side2 ] || [ $side2 -eq $side3\
    \ ] || [ $side3 -eq $side1 ]; then\n        return 1\n    fi\n    if [ $side1\
    \ -eq $side2 ] || [ $side2 -eq $side3 ] || [ $side3 -eq $side1 ]; then\n     \
    \   return 1\n    fi\n    if [ $side1 -eq $side2 ] || [ $side2 -eq $side3 ] ||\
    \ [ $side3 -eq $side1 ]; then\n        return 1\n    fi\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal length=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal\
    \ m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal\
    \ t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal\
    \ a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal\
    \ h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal\
    \ o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal\
    \ v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal\
    \ c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal\
    \ j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal\
    \ q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal\
    \ x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal\
    \ e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal\
    \ l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal\
    \ s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal\
    \ z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal\
    \ g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal\
    \ n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal\
    \ u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -gt $side2 ]; then\n        echo \"$side1\
    \ $side2 $side3 $side1 $side2 $side3 $side1 $side2 $side3\"\n        echo \"$side1\
    \ $side2 $side3 $side1 $side2 $side3 $side1 $side2 $side3\"\n        echo \"$side1\
    \ $side2 $side3 $side1 $side2 $side3 $side1 $side2 $side3\"\n        echo \"$side1\
    \ $side2 $side3 $side1 $side2 $side3 $side1 $side2 $side3\"\n        echo \"$side1\
    \ $side2 $side3 $side1 $side2 $side3 $side1 $side2 $side3\"\n        echo \"$side1\
    \ $side2 $side3 $side1 $side2 $side3 $side1 $side2 $side3\"\n        echo \"$side1\
    \ $side2 $side3 $side1 $side2 $side3 $side1 $side2 $side3\"\n        echo \"$side1\
    \ $side2 $side3 $side1 $side2 $side3 $side1 $side2 $side3\"\n        echo \"$side1\
    \ $side2 $side3 $side1 $side2 $side3 $side1 $side2 $side3\"\n        echo \"$side1\
    \ $side2 $side3 $side1 $side2 $side3 $side1 $side2 $side3\"\n        echo \"$side1\
    \ $side2 $side3 $side1 $side2 $side3 $side1 $side2 $side3\"\n        echo \"$side1\
    \ $side2 $side3 $side1 $side2 $side3 $side1 $side2 $side3\"\n        echo \"$side1\
    \ $side2 $side3 $side1 $side2 $side3 $side1 $side2 $side3\"\n        echo \"$side1\
    \ $side2 $side3 $side1 $side2 $side3 $side1 $side2 $side3\"\n        echo \"$side1\
    \ $side2 $side3 $side1 $side2 $side3 $side1 $side2 $side3\"\n        echo \"$side1\
    \ $side2 $side3 $side1 $side2 $side3 $side1 $side2 $side3\"\n\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpovio_mxv.sh: line 33: syntax error near unexpected token `}''

    /tmp/tmpovio_mxv.sh: line 33: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result=0\n    local side1_length=$((side1*2))\n\
    \    local side2_length=$((side2*2))\n    local side3_length=$((side3*2))\n  \
    \  local side1_length_minus_side2_length=$((side1_length-side2_length))\n    local\
    \ side1_length_minus_side3_length=$((side1_length-side3_length))\n    local side2_length_minus_side3_length=$((side2_length-side3_length))\n\
    \    local side1_length_minus_side2_length_minus_side3_length=$((side1_length_minus_side2_length-side3_length))\n\
    \    local side1_length_minus_side2_length_minus_side3_length_minus_side1_length=$((side1_length_minus_side2_length_minus_side3_length-side1_length))\n\
    \    local side1_length_minus_side2_length_minus_side3_length_minus_side1_length_minus_side2_length=$((side1_length_minus_side2_length_minus_side3_length_minus_side1_length-side2_length))\n\
    \    local side1_length_minus_side2_length_minus_side3_length_minus_side1_length_minus_side2_length_minus_side3_length=$((side1_length_minus_side2_length_minus_side3_length_minus_side1_length-side3_length))\n\
    \    local side1_length_minus_side2_length_minus_side3_length_minus_side1_length_minus_side2_length_minus_side3_length_minus_side1_length=$((side1_length_minus_side2_length_minus_side3_length_minus_side1_length-side1_length))\n\
    \    local side1_length_minus_side2_length_minus_side3_length_minus_side1_length_minus_side2_length_minus_side3_length_minus_side1_length_minus_side2_length=$((side1_length_minus_side2_length_minus_side3_length_minus_side1_length_minus_side2_length-side2_length))\n\
    \    local side1_length_minus_side2_length_minus_side3_length_minus_side1_length_minus_side2_length_minus_side3_length_minus_side1_length_minus_side2_length_minus_side3_length=$((side1_length_minus_side2_length_minus_side3_length_minus_side1_length_minus_side2_length_minus_side3_length-side3_length))\n\
    \    local side1_length_minus_side\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\tresult=$((side1*side1 + side2*side2 + side3*side3\
    \ - 2*side1*side3 - 2*side2*side3))\n\tif ((result < 0)); then\n\t\treturn 0\n\
    \telse\n\t\treturn 1\n\tfi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  \n  if ((side1 == side2 && side2 == side3)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side3)) || ((side2 == side3 && side1 == side1)) || ((side2\
    \ == side1 && side3 == side1)) || ((side3 == side1 && side1 == side2)) ; then\n\
    \    result=true\n  else\n    result=false\n  fi\n  \n  echo $result\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local length=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq $side2 -a $side1 -eq $side3 ]\n    then\n\
    \        echo \"$side1 is a right-angle triangle\"\n    elif [ $side1 -eq $side2\
    \ -a $side3 -eq $side1 ]\n    then\n        echo \"$side1 is a right-angle triangle\"\
    \n    elif [ $side2 -eq $side3 -a $side2 -eq $side1 ]\n    then\n        echo\
    \ \"$side2 is a right-angle triangle\"\n    elif [ $side3 -eq $side1 -a $side3\
    \ -eq $side2 ]\n    then\n        echo \"$side3 is a right-angle triangle\"\n\
    \    else\n        echo \"$side1 $side2 $side3 are not a right-angle triangle\"\
    \n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  \n  if ((side1 == side2 && side2 == side3)) || ((side1\
    \ == side3 && side2 == side3)) || ((side1 == side2 && side3 == side3)) || ((side1\
    \ == side3 && side2 == side3)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == \n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp09dj23ol.sh: line 17: unexpected EOF while looking for matching
    `)''

    /tmp/tmp09dj23ol.sh: line 40: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local side1_length\n  local side2_length\n  local\
    \ side3_length\n  local side1_length2\n  local side2_length2\n  local side3_length2\n\
    \  local side1_length3\n  local side2_length3\n  local side3_length3\n  local\
    \ side1_length4\n  local side2_length4\n  local side3_length4\n  local side1_length5\n\
    \  local side2_length5\n  local side3_length5\n  local side1_length6\n  local\
    \ side2_length6\n  local side3_length6\n  local side1_length7\n  local side2_length7\n\
    \  local side3_length7\n  local side1_length8\n  local side2_length8\n  local\
    \ side3_length8\n  local side1_length9\n  local side2_length9\n  local side3_length9\n\
    \  local side1_length10\n  local side2_length10\n  local side3_length10\n  local\
    \ side1_length11\n  local side2_length11\n  local side3_length11\n  local side1_length12\n\
    \  local side2_length12\n  local side3_length12\n  local side1_length13\n  local\
    \ side2_length13\n  local side3_length13\n  local side1_length14\n  local side2_length14\n\
    \  local side3_length14\n  local side1_length15\n  local side2_length15\n  local\
    \ side3_length15\n  local side1_length16\n  local side2_length16\n  local side3_length16\n\
    \  local side1_length17\n  local side2_length17\n  local side3_length17\n  local\
    \ side1_length18\n  local side2_length18\n  local side3_length18\n  local side1_length19\n\
    \  local side2_length19\n  local side3_length19\n  local side1_length20\n  local\
    \ side2_length20\n  local side3_length20\n  local side1_length21\n  local side2_length21\n\
    \  local side3_length21\n  local side1_length22\n  local side2_length22\n  local\
    \ side3_length22\n  local side1_length23\n  local side2_length23\n  local side3_length23\n\
    \  local side1_length24\n\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq $side2 ]; then\n        if [ $side1 -eq\
    \ $side3 ]; then\n            echo \"$side1 is a right-angled triangle\"\n   \
    \         return 0\n        else\n            echo \"$side1 is a right-angled\
    \ triangle\"\n            return 1\n        fi\n    else\n        if [ $side2\
    \ -eq $side3 ]; then\n            echo \"$side2 is a right-angled triangle\"\n\
    \            return 0\n        else\n            echo \"$side2 is a right-angled\
    \ triangle\"\n            return 1\n        fi\n    fi\n}\n\ncandidate() {\n \
    \   right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1==side2 && side2==side3 && side3==side1)\
    \ || \\\n    (side1==side2 && side2==side3 && side3==side1) || \\\n    (side1==side2\
    \ && side2==side3 && side3==side1) || \\\n    (side1==side2 && side2==side3 &&\
    \ side3==side1) || \\\n    (side1==side2 && side2==side3 && side3==side1) || \\\
    \n    (side1==side2 && side2==side3 && side3==side1) || \\\n    (side1==side2\
    \ && side2==side3 && side3==side1) || \\\n    (side1==side2 && side2==side3 &&\
    \ side3==side1) || \\\n    (side1==side2 && side2==side3 && side3==side1) || \\\
    \n    (side1==side2 && side2==side3 && side3==side1) || \\\n    (side1==side2\
    \ && side2==side3 && side3==side1) || \\\n    (side1==side2 && side2==side3 &&\
    \ side3==side1) || \\\n    (side1==side2 && side2==side3 && side3==side1) || \\\
    \n    (side1==side2 && side2==side3 && side3==side1) || \\\n    (side1==side2\
    \ && side2==side3 && side3==side1) || \\\n    (side1==side2 && side2==side3 &&\
    \ side3==side1) || \\\n    (side1==side2 && side2==side3 && side3==side1) || \\\
    \n    (side1==side2 && side2==side3 && side3==side1) || \\\n    (side1==side2\
    \ && side2==side3 && side3==side1) || \\\n    (side1==side2 && side2==side3 &&\
    \ side3==side1) || \\\n    (side1==side2 && side2==side3 && side3==side1) || \\\
    \n    (side1==side2 && side2==side3 && side3==side1) || \\\n    (side1==side2\
    \ && side2==side3 && side3==side1) || \\\n    (side1==side2 && side2==side3 &&\
    \ side3==side1) || \\\n    (side1==\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp82m_m4tb.sh: line 16: unexpected EOF while looking for matching
    `)''

    /tmp/tmp82m_m4tb.sh: line 63: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq 0 ]\n    then\n        echo \"$side1\
    \ is an invalid side length.\"\n        return 1\n    elif [ $side2 -eq 0 ]\n\
    \    then\n        echo \"$side2 is an invalid side length.\"\n        return\
    \ 1\n    elif [ $side3 -eq 0 ]\n    then\n        echo \"$side3 is an invalid\
    \ side length.\"\n        return 1\n    elif [ $side1 -eq $side2 ]\n    then\n\
    \        echo \"$side1 and $side2 are equal.\"\n        return 1\n    elif [ $side1\
    \ -eq $side3 ]\n    then\n        echo \"$side1 and $side3 are equal.\"\n    \
    \    return 1\n    elif [ $side2 -eq $side3 ]\n    then\n        echo \"$side2\
    \ and $side3 are equal.\"\n        return 1\n    elif [ $side1 -gt $side2 ]\n\
    \    then\n        echo \"$side1 must be less than $side2.\"\n        return 1\n\
    \    elif [ $side1 -gt $side3 ]\n    then\n        echo \"$side1 must be less\
    \ than $side3.\"\n        return 1\n    elif [ $side2 -gt $side3 ]\n    then\n\
    \        echo \"$side2 must be less than $side3.\"\n        return 1\n    elif\
    \ [ $side1 -eq 0 ]\n    then\n        echo \"$side1 and $side2 are both zero.\"\
    \n        return 1\n    elif [ $side2 -eq 0 ]\n    then\n        echo \"$side2\
    \ and $side3 are both zero.\"\n        return 1\n    elif [ $side3 -eq 0 ]\n \
    \   then\n        echo \"$side3 and $side1 are both zero.\"\n        return 1\n\
    \    elif [ $side1 -gt $side2 ]\n    then\n        echo \"$side1 must be less\
    \ than $side2.\"\n        return 1\n    elif [ $side1 -gt $side3 ]\n    then\n\
    \        echo \"$side1 must be less than $side3.\"\n        return 1\n    elif\
    \ [ $side2 -gt $side3 ]\n    then\n        echo \"$side2 must be less than $side3.\"\
    \n        return 1\n    elif [ $side1 -eq $side2 ]\n    then\n        echo \"\
    $side1 and $side2 are equal.\"\n        return 1\n    elif [ $side1 -eq $side3\
    \ ]\n    then\n        echo \"$side1 and $side3 are equal.\"\n        return 1\n\
    \    elif [ $side2 -eq $side3 ]\n    then\n        echo \"$side2 and $side\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoob6xbmd.sh: line 104: unexpected EOF while looking for matching
    `"''

    /tmp/tmpoob6xbmd.sh: line 108: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local length=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $length -gt $side2 ]; then\n        echo \"$side2\
    \ > $length\"\n        exit 1\n    fi\n    if [ $length -gt $side3 ]; then\n \
    \       echo \"$side3 > $length\"\n        exit 1\n    fi\n    if [ $side2 -eq\
    \ $side3 ]; then\n        echo \"$side2 == $side3\"\n        return 0\n    fi\n\
    \    if [ $side2 -eq 0 ]; then\n        echo \"$side2 == 0\"\n        return 1\n\
    \    fi\n    if [ $side3 -eq 0 ]; then\n        echo \"$side3 == 0\"\n       \
    \ return 1\n    fi\n    if [ $side2 -eq $side3 ]; then\n        echo \"$side2\
    \ == $side3\"\n        return 0\n    fi\n    if [ $side2 -gt $side3 ]; then\n\
    \        echo \"$side2 > $side3\"\n        exit 1\n    fi\n    if [ $side3 -gt\
    \ $side2 ]; then\n        echo \"$side3 > $side2\"\n        exit 1\n    fi\n \
    \   if [ $side2 -gt $side3 ]; then\n        echo \"$side2 > $side3\"\n       \
    \ exit 1\n    fi\n    if [ $side3 -gt $side2 ]; then\n        echo \"$side3 >\
    \ $side2\"\n        exit 1\n    fi\n    if [ $side2 -eq $side3 ]; then\n     \
    \   echo \"$side2 == $side3\"\n        return 0\n    fi\n    if [ $side2 -gt $side3\
    \ ]; then\n        echo \"$side2 > $side3\"\n        exit 1\n    fi\n    if [\
    \ $side3 -gt $side2 ]; then\n        echo \"$side3 > $side2\"\n        exit 1\n\
    \    fi\n    if [ $side2 -gt $side3 ]; then\n        echo \"$side2 > $side3\"\n\
    \        exit 1\n    fi\n    if [ $side3 -gt $side2 ]; then\n        echo \"$side3\
    \ > $side2\"\n        exit 1\n    fi\n    if [ $side2 -eq $side3 ]; then\n   \
    \     echo \"$side2 == $side3\"\n        return 0\n    fi\n    if [ $side2 -gt\
    \ $side3 ]; then\n        echo \"$side2 > $side3\"\n        exit 1\n    fi\n \
    \   if [ $side3 -gt $side2 ]; then\n        echo \"$side3 > $side2\"\n       \
    \ exit 1\n    fi\n    if [ $side2 -gt $side3 ]; then\n        echo \"$side2 >\
    \ $side3\"\n        exit 1\n    fi\n    if [ $side3 -gt $side2 ]; then\n     \
    \   echo \"$side3 > $\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpobp5yrm1.sh: line 111: unexpected EOF while looking for matching
    `"''

    /tmp/tmpobp5yrm1.sh: line 115: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq $side2 ]; then\n        if [ $side1 -eq\
    \ $side3 ]; then\n            echo \"$side1 $side2 $side3\"\n            return\
    \ 0\n        fi\n        echo \"$side1 $side3 $side2\"\n        return 0\n   \
    \ fi\n    if [ $side2 -eq $side3 ]; then\n        echo \"$side1 $side2 $side3\"\
    \n        return 0\n    fi\n    if [ $side1 -eq $side3 ]; then\n        echo \"\
    $side1 $side3 $side2\"\n        return 0\n    fi\n    if [ $side1 -eq $side2 ];\
    \ then\n        echo \"$side1 $side2 $side3\"\n        return 0\n    fi\n    if\
    \ [ $side2 -eq $side3 ]; then\n        echo \"$side1 $side3 $side2\"\n       \
    \ return 0\n    fi\n    if [ $side1 -eq $side3 ]; then\n        echo \"$side1\
    \ $side3 $side2\"\n        return 0\n    fi\n    if [ $side1 -eq $side2 ]; then\n\
    \        echo \"$side1 $side2 $side3\"\n        return 0\n    fi\n    if [ $side2\
    \ -eq $side3 ]; then\n        echo \"$side1 $side3 $side2\"\n        return 0\n\
    \    fi\n    if [ $side1 -eq $side2 ]; then\n        echo \"$side1 $side2 $side3\"\
    \n        return 0\n    fi\n    if [ $side2 -eq $side3 ]; then\n        echo \"\
    $side1 $side3 $side2\"\n        return 0\n    fi\n    if [ $side1 -eq $side3 ];\
    \ then\n        echo \"$side1 $side3 $side2\"\n        return 0\n    fi\n    if\
    \ [ $side1 -eq $side2 ]; then\n        echo \"$side1 $side2 $side3\"\n       \
    \ return 0\n    fi\n    if [ $side2 -eq $side3 ]; then\n        echo \"$side1\
    \ $side3 $side2\"\n        return 0\n    fi\n    if [ $side1 -eq $side3 ]; then\n\
    \        echo \"$side1 $side3 $side2\"\n        return 0\n    fi\n    if [ $side1\
    \ -eq $side2 ]; then\n        echo \"$side1 $side2 $side3\"\n        return 0\n\
    \    fi\n    if [ $side2 -eq $side3 ]; then\n        echo \"$side1 $side3 $side2\"\
    \n        return 0\n    fi\n    if [ $side1 -eq $side3 ]; then\n        echo \"\
    $side1 $side3 $side2\"\n        return 0\n    fi\n    if [ $side1 \n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2b6cx3qr.sh: line 88: syntax error near unexpected token `}''

    /tmp/tmp2b6cx3qr.sh: line 88: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\tresult=$(echo \"$side1 * $side2 * $side3\" | bc\
    \ -l)\n\tif [ $result -eq 0 ]; then\n\t\treturn 0\n\telse\n\t\treturn 1\n\tfi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1 + side2 + side3 > 0))\n  if [ $result\
    \ -eq 0 ]; then\n    result=$((side1 + side2 + side3 > side1 + side3 > side2))\n\
    \  fi\n  if [ $result -eq 0 ]; then\n    result=$((side1 + side2 + side3 > side1\
    \ + side2 > side3))\n  fi\n  if [ $result -eq 0 ]; then\n    result=$((side1 +\
    \ side2 + side3 > side1 + side3 > side2))\n  fi\n  if [ $result -eq 0 ]; then\n\
    \    result=$((side1 + side2 + side3 > side1 + side2 > side3))\n  fi\n  if [ $result\
    \ -eq 0 ]; then\n    result=$((side1 + side2 + side3 > side1 + side3 > side2))\n\
    \  fi\n  if [ $result -eq 0 ]; then\n    result=$((side1 + side2 + side3 > side1\
    \ + side2 > side3))\n  fi\n  if [ $result -eq 0 ]; then\n    result=$((side1 +\
    \ side2 + side3 > side1 + side3 > side2))\n  fi\n  if [ $result -eq 0 ]; then\n\
    \    result=$((side1 + side2 + side3 > side1 + side2 > side3))\n  fi\n  if [ $result\
    \ -eq 0 ]; then\n    result=$((side1 + side2 + side3 > side1 + side3 > side2))\n\
    \  fi\n  if [ $result -eq 0 ]; then\n    result=$((side1 + side2 + side3 > side1\
    \ + side2 > side3))\n  fi\n  if [ $result -eq 0 ]; then\n    result=$((side1 +\
    \ side2 + side3 > side1 + side3 > side2))\n  fi\n  if [ $result -eq 0 ]; then\n\
    \    result=$((side1 + side2 + side3 > side1 + side2 > side3))\n  fi\n  if [ $result\
    \ -eq 0 ]; then\n    result=$((side1 + side2 + side3 > side1 + side3 > side2))\n\
    \  fi\n  if [ $result -eq 0 ]; then\n    result=$((side1 + side2 + side3 > side1\
    \ + side2 > side3))\n  fi\n  if [ $result -eq 0 ]; then\n    result=$((side1 +\
    \ side2 + side3 > side1 + side3 > side2))\n  fi\n  if [ $result -eq 0 ]; then\n\
    \    result=$((side1 + side2 + side3 > side1 + side2 > \n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx5m3x8jv.sh: line 63: unexpected EOF while looking for matching
    `)''

    /tmp/tmpx5m3x8jv.sh: line 86: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq 0 ] || [ $side2 -eq 0 ] || [ $side3 -eq\
    \ 0 ]; then\n        return 0\n    fi\n    local result\n    result=$(( (side1\
    \ + side2 + side3) % 2 ))\n    if [ $result -eq 0 ]; then\n        return 0\n\
    \    else\n        return 1\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result=0\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local \n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  if ((side1 == side2 && side2 == side3)) || ((side1\
    \ == side3 && side2 == side3)) || ((side1 == side2 && side3 == side3)) || ((side1\
    \ == side3 && side2 == side3)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) \n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx4sv3u5y.sh: line 17: syntax error near unexpected token `}''

    /tmp/tmpx4sv3u5y.sh: line 17: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq 0 ] || [ $side2 -eq 0 ] || [ $side3 -eq\
    \ 0 ]; then\n        echo \"Invalid input\"\n        return 1\n    fi\n    if\
    \ [ $side1 -eq $side2 ] || [ $side1 -eq $side3 ] || [ $side2 -eq $side3 ]; then\n\
    \        echo \"Invalid input\"\n        return 1\n    fi\n    if [ $side1 -eq\
    \ $side3 ] && [ $side2 -eq $side3 ] && [ $side3 -eq $side1 ]; then\n        echo\
    \ \"Invalid input\"\n        return 1\n    fi\n    if [ $side1 -eq $side3 ] &&\
    \ [ $side2 -eq $side3 ] && [ $side3 -eq $side2 ]; then\n        echo \"Invalid\
    \ input\"\n        return 1\n    fi\n    if [ $side1 -eq $side2 ] && [ $side2\
    \ -eq $side3 ] && [ $side3 -eq $side1 ]; then\n        echo \"Invalid input\"\n\
    \        return 1\n    fi\n    if [ $side1 -eq $side2 ] && [ $side2 -eq $side3\
    \ ] && [ $side3 -eq $side2 ]; then\n        echo \"Invalid input\"\n        return\
    \ 1\n    fi\n    if [ $side1 -eq $side3 ] && [ $side2 -eq $side3 ] && [ $side3\
    \ -eq $side1 ]; then\n        echo \"Invalid input\"\n        return 1\n    fi\n\
    \    if [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ] && [ $side3 -eq $side2\
    \ ]; then\n        echo \"Invalid input\"\n        return 1\n    fi\n    if [\
    \ $side1 -eq $side3 ] && [ $side2 -eq $side3 ] && [ $side3 -eq $side1 ]; then\n\
    \        echo \"Invalid input\"\n        return 1\n    fi\n    if [ $side1 -eq\
    \ $side2 ] && [ $side2 -eq $side3 ] && [ $side3 -eq $side2 ]; then\n        echo\
    \ \"Invalid input\"\n        return 1\n    fi\n    if [ $side1 -eq $side3 ] &&\
    \ [ $side2 -eq $side3 ] && [ $side3 -eq $side1 ]; then\n        echo \"Invalid\
    \ input\"\n        return 1\n    fi\n    if [ $side1 -eq $side2 ] && [ $side2\
    \ -eq $side3 ] && [ $side3 -eq $side2 ]; then\n        echo \"Invalid input\"\n\
    \        return 1\n    fi\n    if [ $side1 -eq $side3 ] && [ $side2 -eq $side3\
    \ ] && [ $side3 -eq $side\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnzpsep7r.sh: line 64: syntax error near unexpected token `}''

    /tmp/tmpnzpsep7r.sh: line 64: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local side1_length\n    local side2_length\n\
    \    local side3_length\n    local side1_length2\n    local side2_length2\n  \
    \  local side3_length2\n    local side1_length3\n    local side2_length3\n   \
    \ local side3_length3\n    local side1_length4\n    local side2_length4\n    local\
    \ side3_length4\n    local side1_length5\n    local side2_length5\n    local side3_length5\n\
    \    local side1_length6\n    local side2_length6\n    local side3_length6\n \
    \   local side1_length7\n    local side2_length7\n    local side3_length7\n  \
    \  local side1_length8\n    local side2_length8\n    local side3_length8\n   \
    \ local side1_length9\n    local side2_length9\n    local side3_length9\n    local\
    \ side1_length10\n    local side2_length10\n    local side3_length10\n    local\
    \ side1_length11\n    local side2_length11\n    local side3_length11\n    local\
    \ side1_length12\n    local side2_length12\n    local side3_length12\n    local\
    \ side1_length13\n    local side2_length13\n    local side3_length13\n    local\
    \ side1_length14\n    local side2_length14\n    local side3_length14\n    local\
    \ side1_length15\n    local side2_length15\n    local side3_length15\n    local\
    \ side1_length16\n    local side2_length16\n    local side3_length16\n    local\
    \ side1_length17\n    local side2_length17\n    local side3_length17\n    local\
    \ side1_length18\n    local side2_length18\n    local side3_length18\n    local\
    \ side1_length19\n    local side2_length19\n    local side3_length19\n    local\
    \ side1_length20\n    local side2_length20\n    local side3_length20\n    local\
    \ side1_length21\n    local side2_length21\n    local side3_length21\n    local\
    \ side1_length22\n    local side2_length22\n    local side3_length22\n    local\
    \ side1_length23\n    local side2_length23\n    local side3_length23\n    local\
    \ side1_length24\n\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq 0 ] || [ $side2 -eq 0 ] || [ $side3 -eq\
    \ 0 ]; then\n        echo \"ERROR: Invalid input\"\n        exit 1\n    fi\n \
    \   if [ $side1 -eq $side2 ] || [ $side1 -eq $side3 ] || [ $side2 -eq $side3 ];\
    \ then\n        echo \"ERROR: Invalid input\"\n        exit 1\n    fi\n    if\
    \ [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ]; then\n        echo \"ERROR:\
    \ Invalid input\"\n        exit 1\n    fi\n    if [ $side1 -eq $side3 ] && [ $side3\
    \ -eq $side2 ]; then\n        echo \"ERROR: Invalid input\"\n        exit 1\n\
    \    fi\n    if [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ] && [ $side3 -eq\
    \ $side1 ]; then\n        echo \"ERROR: Invalid input\"\n        exit 1\n    fi\n\
    \    if [ $side1 -eq $side3 ] && [ $side3 -eq $side1 ] && [ $side2 -eq $side1\
    \ ]; then\n        echo \"ERROR: Invalid input\"\n        exit 1\n    fi\n   \
    \ if [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ] && [ $side3 -eq $side1 ] &&\
    \ [ $side1 -eq $side3 ]; then\n        echo \"ERROR: Invalid input\"\n       \
    \ exit 1\n    fi\n    if [ $side1 -eq $side3 ] && [ $side3 -eq $side1 ] && [ $side2\
    \ -eq $side1 ] && [ $side1 -eq $side2 ]; then\n        echo \"ERROR: Invalid input\"\
    \n        exit 1\n    fi\n    if [ $side1 -eq $side2 ] && [ $side2 -eq $side3\
    \ ] && [ $side3 -eq $side1 ] && [ $side1 -eq $side2 ] && [ $side3 -eq $side1 ];\
    \ then\n        echo \"ERROR: Invalid input\"\n        exit 1\n    fi\n    if\
    \ [ $side1 -eq $side3 ] && [ $side3 -eq $side1 ] && [ $side2 -eq $side1 ] && [\
    \ $side1 -eq $side3 ] && [ $side2 -eq $side3 ]; then\n        echo \"ERROR: Invalid\
    \ input\"\n        exit 1\n    fi\n    if [ $side1 -eq $side2 ] && [ $side2 -eq\
    \ $side3 ] && [ $side3 -eq $side1 ] && [ $side1 -eq $side2 ] && [ $side3 -eq $side1\
    \ ] && [ $side\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpajfjj1sp.sh: line 56: syntax error near unexpected token `}''

    /tmp/tmpajfjj1sp.sh: line 56: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    if [ $side1 -eq $side2 ]; then\n  \
    \      if [ $side1 -eq $side3 ]; then\n            result=true\n        else\n\
    \            result=false\n        fi\n    else\n        if [ $side2 -eq $side3\
    \ ]; then\n            result=true\n        else\n            result=false\n \
    \       fi\n    fi\n    echo $result\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    result=$((side1+side2+side3)==(side1*side2*side3))\n\
    \    echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8o576h0d.sh: command substitution: line 16: syntax error near unexpected
    token `==''

    /tmp/tmp8o576h0d.sh: command substitution: line 16: `(side1+side2+side3)==(side1*side2*side3)''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1+side2+side3)==(side1*side2*side3))\n\
    \  echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6da0rna7.sh: command substitution: line 16: syntax error near unexpected
    token `==''

    /tmp/tmp6da0rna7.sh: command substitution: line 16: `(side1+side2+side3)==(side1*side2*side3)''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local side1_length\n    local side2_length\n\
    \    local side3_length\n    local side1_length\n    local side2_length\n    local\
    \ side3_length\n    local side1_length\n    local side2_length\n    local side3_length\n\
    \    local side1_length\n    local side2_length\n    local side3_length\n    local\
    \ side1_length\n    local side2_length\n    local side3_length\n    local side1_length\n\
    \    local side2_length\n    local side3_length\n    local side1_length\n    local\
    \ side2_length\n    local side3_length\n    local side1_length\n    local side2_length\n\
    \    local side3_length\n    local side1_length\n    local side2_length\n    local\
    \ side3_length\n    local side1_length\n    local side2_length\n    local side3_length\n\
    \    local side1_length\n    local side2_length\n    local side3_length\n    local\
    \ side1_length\n    local side2_length\n    local side3_length\n    local side1_length\n\
    \    local side2_length\n    local side3_length\n    local side1_length\n    local\
    \ side2_length\n    local side3_length\n    local side1_length\n    local side2_length\n\
    \    local side3_length\n    local side1_length\n    local side2_length\n    local\
    \ side3_length\n    local side1_length\n    local side2_length\n    local side3_length\n\
    \    local side1_length\n    local side2_length\n    local side3_length\n    local\
    \ side1_length\n    local side2_length\n    local side3_length\n    local side1_length\n\
    \    local side2_length\n    local side3_length\n    local side1_length\n    local\
    \ side2_length\n    local side3_length\n    local side1_length\n    local side2_length\n\
    \    local side3_length\n    local side1_length\n    local side2_length\n    local\
    \ side3_length\n    local side1_length\n    local side2_length\n    local side3_length\n\
    \    local side1_length\n    local side2_length\n    local side3_length\n    local\
    \ side1_length\n    local side2_length\n    local side3_length\n    local side1_length\n\
    \    local side2_length\n    local side3_length\n    \n}\n\ncandidate() {\n  \
    \  right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$(echo \"$side1 $side2 $side3\" | bc -l)\n\
    \  if [ $result -eq 0 ]; then\n    return 0\n  else\n    return 1\n  fi\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    /tmp/tmpks55nfg8.sh: line 17: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    if [ $side1 -eq 0 ]; then\n       \
    \ result=$((side2 > side3))\n    else\n        result=$((side1 > side2))\n   \
    \ fi\n    echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result=0\n  if [ $side1 -eq $side2 ]; then\n    if [ $side1\
    \ -eq $side3 ]; then\n      result=1\n    else\n      result=0\n    fi\n  else\n\
    \    if [ $side2 -eq $side3 ]; then\n      result=1\n    else\n      result=0\n\
    \    fi\n  fi\n  echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  \n  if ((side1 == side2 && side2 == side3)) || ((side1\
    \ == side3 && side2 == side3)) || ((side1 == side2 && side3 == side3)) || ((side1\
    \ == side3 && side2 == side3)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == \n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp09dj23ol.sh: line 17: unexpected EOF while looking for matching
    `)''

    /tmp/tmp09dj23ol.sh: line 40: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result=0\n    if [ $side1 -eq 0 ]; then\n     \
    \   echo \"$side1 is an invalid side length\"\n        return 1\n    elif [ $side2\
    \ -eq 0 ]; then\n        echo \"$side2 is an invalid side length\"\n        return\
    \ 1\n    elif [ $side3 -eq 0 ]; then\n        echo \"$side3 is an invalid side\
    \ length\"\n        return 1\n    elif [ $side1 -eq $side2 -a $side1 -eq $side3\
    \ ]; then\n        echo \"$side1 and $side3 are equal\"\n        return 0\n  \
    \  elif [ $side1 -eq $side2 -a $side1 -eq $side3 -a $side2 -eq $side3 ]; then\n\
    \        echo \"$side1 and $side3 are equal\"\n        return 0\n    elif [ $side1\
    \ -eq $side2 -a $side1 -eq $side3 -a $side2 -eq $side3 -a $side1 -eq $side3 ];\
    \ then\n        echo \"$side1 and $side3 are equal\"\n        return 0\n    elif\
    \ [ $side1 -eq $side2 -a $side1 -eq $side3 -a $side2 -eq $side3 -a $side1 -eq\
    \ $side3 -a $side1 -eq $side2 ]; then\n        echo \"$side1 and $side3 are equal\"\
    \n        return 0\n    elif [ $side1 -eq $side2 -a $side1 -eq $side3 -a $side2\
    \ -eq $side3 -a $side1 -eq $side3 -a $side1 -eq $side2 -a $side1 -eq $side3 ];\
    \ then\n        echo \"$side1 and $side3 are equal\"\n        return 0\n    elif\
    \ [ $side1 -eq $side2 -a $side1 -eq $side3 -a $side2 -eq $side3 -a $side1 -eq\
    \ $side3 -a $side1 -eq $side2 -a $side1 -eq $side3 -a $side1 -eq $side2 ]; then\n\
    \        echo \"$side1 and $side3 are equal\"\n        return 0\n    elif [ $side1\
    \ -eq $side2 -a $side1 -eq $side3 -a $side2 -eq $side3 -a $side1 -eq $side3 -a\
    \ $side1 -eq $side2 -a $side1 -eq $\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx13xotwu.sh: line 44: syntax error near unexpected token `}''

    /tmp/tmpx13xotwu.sh: line 44: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  \n  result=$((side1 * side1 + side2 * side2 + side3\
    \ * side3 > 0))\n  \n  if [ $result -eq 0 ]; then\n    result=$((side1 * side2\
    \ + side2 * side3 > 0))\n  fi\n  \n  if [ $result -eq 0 ]; then\n    result=$((side1\
    \ * side3 + side3 * side2 > 0))\n  fi\n  \n  if [ $result -eq 0 ]; then\n    result=$((side2\
    \ * side3 + side3 * side1 > 0))\n  fi\n  \n  if [ $result -eq 0 ]; then\n    result=$((side1\
    \ * side2 + side3 * side1 > 0))\n  fi\n  \n  if [ $result -eq 0 ]; then\n    result=$((side1\
    \ * side3 + side2 * side1 > 0))\n  fi\n  \n  if [ $result -eq 0 ]; then\n    result=$((side2\
    \ * side1 + side3 * side2 > 0))\n  fi\n  \n  if [ $result -eq 0 ]; then\n    result=$((side1\
    \ * side2 + side2 * side3 > 0))\n  fi\n  \n  if [ $result -eq 0 ]; then\n    result=$((side1\
    \ * side3 + side1 * side2 > 0))\n  fi\n  \n  if [ $result -eq 0 ]; then\n    result=$((side2\
    \ * side1 + side3 * side3 > 0))\n  fi\n  \n  if [ $result -eq 0 ]; then\n    result=$((side1\
    \ * side2 + side2 * side1 > 0))\n  fi\n  \n  if [ $result -eq 0 ]; then\n    result=$((side1\
    \ * side3 + side1 * side3 > 0))\n  fi\n  \n  if [ $result -eq 0 ]; then\n    result=$((side2\
    \ * side1 + side1 * side1 > 0))\n  fi\n  \n  if [ $result -eq 0 ]; then\n    result=$((side1\
    \ * side2 + side1 * side3 > 0))\n  fi\n  \n  if [ $result -eq 0 ]; then\n    result=$((side1\
    \ * side3 + side2 * side2 > 0))\n  fi\n  \n  if [ $result -eq 0 ]; then\n    result=$((side2\
    \ * side1 + side2 * side3 > 0))\n  fi\n  \n  if [ $result -eq 0 ]; then\n    result=$((side2\
    \ * side3 + side1 * side1 > 0))\n  fi\n  \n  if [ $result -eq 0 ]; then\n    result=$((side2\
    \ * side3 + side2 * side1 > 0))\n\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps66b5wh4.sh: line 86: syntax error near unexpected token `}''

    /tmp/tmps66b5wh4.sh: line 86: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal\
    \ m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal\
    \ t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal\
    \ a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal\
    \ h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal\
    \ o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal\
    \ v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal\
    \ c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal\
    \ j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal\
    \ q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal\
    \ x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal\
    \ e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal\
    \ l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal\
    \ s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal\
    \ z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal\
    \ g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal\
    \ n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal\
    \ u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    if [ $side1 -eq 0 ]\n    then\n   \
    \     result=$((side2 > side3))\n    else\n        result=$((side1 > side2))\n\
    \    fi\n    return $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i1\n  local i2\n  local j1\n  local j2\n  local k1\n  local k2\n\
    \  local l1\n  local l2\n  local m1\n  local m2\n  local n1\n  local n2\n  local\
    \ o1\n  local o2\n  local p1\n  local p2\n  local q1\n  local q2\n  local r1\n\
    \  local r2\n  local s1\n  local s2\n  local t1\n  local t2\n  local u1\n  local\
    \ u2\n  local v1\n  local v2\n  local w1\n  local w2\n  local x1\n  local x2\n\
    \  local y1\n  local y2\n  local z1\n  local z2\n  local a1\n  local b1\n  local\
    \ c1\n  local d1\n  local e1\n  local f1\n  local g1\n  local h1\n  local i11\n\
    \  local i12\n  local j11\n  local j12\n  local k11\n  local k12\n  local l11\n\
    \  local l12\n  local m11\n  local m12\n  local n11\n  local n12\n  local o11\n\
    \  local o12\n  local p11\n  local p12\n  local q11\n  local q12\n  local r11\n\
    \  local r12\n  local s11\n  local s12\n  local t11\n  local t12\n  local u11\n\
    \  local u12\n  local v11\n  local v12\n  local w11\n  local w12\n  local x11\n\
    \  local x12\n  local y11\n  local y12\n  local z11\n  local z12\n  local a11\n\
    \  local b11\n  local c11\n\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local side\n  local sides\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local \n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i1\n  local i2\n  local i3\n  local j1\n  local j2\n  local j3\n\
    \  local k1\n  local k2\n  local k3\n  local l1\n  local l2\n  local l3\n  local\
    \ m1\n  local m2\n  local m3\n  local n1\n  local n2\n  local n3\n  local o1\n\
    \  local o2\n  local o3\n  local p1\n  local p2\n  local p3\n  local q1\n  local\
    \ q2\n  local q3\n  local r1\n  local r2\n  local r3\n  local s1\n  local s2\n\
    \  local s3\n  local t1\n  local t2\n  local t3\n  local u1\n  local u2\n  local\
    \ u3\n  local v1\n  local v2\n  local v3\n  local w1\n  local w2\n  local w3\n\
    \  local x1\n  local x2\n  local x3\n  local y1\n  local y2\n  local y3\n  local\
    \ z1\n  local z2\n  local z3\n  local a1\n  local a2\n  local a3\n  local b1\n\
    \  local b2\n  local b3\n  local c1\n  local c2\n  local c3\n  local d1\n  local\
    \ d2\n  local d3\n  local e1\n  local e2\n  local e3\n  local f1\n  local f2\n\
    \  local f3\n  local g1\n  local g2\n  local g3\n  local h1\n  local h2\n  local\
    \ h3\n  local i1\n  local i2\n  local i3\n  local j1\n  local j2\n  local j3\n\
    \  local k1\n  local k2\n  local k3\n  \n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result=0\n  local side1_length=$((side1*2))\n  local side2_length=$((side2*2))\n\
    \  local side3_length=$((side3*2))\n  local side1_square=$((side1_length*side1_length))\n\
    \  local side2_square=$((side2_length*side2_length))\n  local side3_square=$((side3_length*side3_length))\n\
    \  local side1_square_root=$((side1_square**0.5))\n  local side2_square_root=$((side2_square**0.5))\n\
    \  local side3_square_root=$((side3_square**0.5))\n  local side1_square_root_2=$((side1_square_root*side1_square_root))\n\
    \  local side2_square_root_2=$((side2_square_root*side2_square_root))\n  local\
    \ side3_square_root_2=$((side3_square_root*side3_square_root))\n  local side1_square_root_3=$((side1_square_root*side1_square_root))\n\
    \  local side2_square_root_3=$((side2_square_root*side2_square_root))\n  local\
    \ side3_square_root_3=$((side3_square_root*side3_square_root))\n  local side1_square_root_4=$((side1_square_root*side1_square_root))\n\
    \  local side2_square_root_4=$((side2_square_root*side2_square_root))\n  local\
    \ side3_square_root_4=$((side3_square_root*side3_square_root))\n  local side1_square_root_5=$((side1_square_root*side1_square_root))\n\
    \  local side2_square_root_5=$((side2_square_root*side2_square_root))\n  local\
    \ side3_square_root_5=$((side3_square_root*side3_square_root))\n  local side1_square_root_6=$((side1_square_root*side1_square_root))\n\
    \  local side2_square_root_6=$((side2_square_root*side2_square_root))\n  local\
    \ side3_square_root_6=$((side3_square_root*side3_square_root))\n  local side1_square_root_7=$((side1_\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpduopytxx.sh: line 40: unexpected EOF while looking for matching
    `)''

    /tmp/tmpduopytxx.sh: line 63: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local length=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  \n  result=$((side2 > side3 && side2 > side3 &&\
    \ side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 >\
    \ side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 &&\
    \ side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 >\
    \ side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 &&\
    \ side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 >\
    \ side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 &&\
    \ side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 >\
    \ side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 &&\
    \ side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 >\
    \ side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 &&\
    \ side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 >\
    \ side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 &&\
    \ side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 >\
    \ side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 &&\
    \ side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 >\
    \ side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 &&\
    \ side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 >\
    \ side3 && side2 > side3 && side2 \n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz93y9z93.sh: line 17: unexpected EOF while looking for matching
    `)''

    /tmp/tmpz93y9z93.sh: line 40: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result=0\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local \n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1 + side2 > side3))\n  if [ $result\
    \ -eq 0 ]; then\n    result=$((side1 + side3 > side2))\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$((side2 + side3 > side1))\n  fi\n  if [ $result -eq 0\
    \ ]; then\n    result=$((side1 + side2 > side3))\n  fi\n  if [ $result -eq 0 ];\
    \ then\n    result=$((side2 + side3 > side1))\n  fi\n  if [ $result -eq 0 ]; then\n\
    \    result=$((side1 + side3 > side2))\n  fi\n  if [ $result -eq 0 ]; then\n \
    \   result=$((side2 + side3 > side1))\n  fi\n  if [ $result -eq 0 ]; then\n  \
    \  result=$((side1 + side2 > side3))\n  fi\n  if [ $result -eq 0 ]; then\n   \
    \ result=$((side2 + side3 > side1))\n  fi\n  if [ $result -eq 0 ]; then\n    result=$((side1\
    \ + side3 > side2))\n  fi\n  if [ $result -eq 0 ]; then\n    result=$((side2 +\
    \ side3 > side1))\n  fi\n  if [ $result -eq 0 ]; then\n    result=$((side1 + side2\
    \ > side3))\n  fi\n  if [ $result -eq 0 ]; then\n    result=$((side2 + side3 >\
    \ side1))\n  fi\n  if [ $result -eq 0 ]; then\n    result=$((side1 + side3 > side2))\n\
    \  fi\n  if [ $result -eq 0 ]; then\n    result=$((side2 + side3 > side1))\n \
    \ fi\n  if [ $result -eq 0 ]; then\n    result=$((side1 + side2 > side3))\n  fi\n\
    \  if [ $result -eq 0 ]; then\n    result=$((side2 + side3 > side1))\n  fi\n \
    \ if [ $result -eq 0 ]; then\n    result=$((side1 + side3 > side2))\n  fi\n  if\
    \ [ $result -eq 0 ]; then\n    result=$((side2 + side3 > side1))\n  fi\n  if [\
    \ $result -eq 0 ]; then\n    result=$((side1 + side2 > side3))\n  fi\n  if [ $result\
    \ -eq 0 ]; then\n    result=$((side2 + side3 > side1))\n  fi\n  if [ $result -eq\
    \ 0 ]; then\n    result=$((side1 + side\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx5bixgav.sh: line 78: unexpected EOF while looking for matching
    `)''

    /tmp/tmpx5bixgav.sh: line 101: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq $side2 -a $side1 -eq $side3 ]; then\n\
    \        echo \"$side1 is a right-angled triangle\"\n    else\n        echo \"\
    $side1 is not a right-angled triangle\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local length\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\tresult=$((side1 + side2 > side3))\n\treturn $result\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal length1=$1\n\tlocal length2=$2\n\t\
    local length3=$3\n\tlocal result\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\
    \tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\t\
    local t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\t\
    local a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\t\
    local h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\t\
    local o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\t\
    local v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\t\
    local c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\t\
    local j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\t\
    local q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\t\
    local x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\t\
    local e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\t\
    local l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\t\
    local s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\t\
    local z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\t\
    local g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\t\
    local n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\t\
    local u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  \n  if ((side1 == side2 && side2 == side3)) || ((side1\
    \ == side3 && side2 == side3)) || ((side1 == side2 && side3 == side3)) || ((side1\
    \ == side3 && side2 == side3)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == \n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp09dj23ol.sh: line 17: unexpected EOF while looking for matching
    `)''

    /tmp/tmp09dj23ol.sh: line 40: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local length=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side2 > side3 && side2 > side3 && side2\
    \ > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3\
    \ && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2\
    \ > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3\
    \ && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2\
    \ > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3\
    \ && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2\
    \ > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3\
    \ && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2\
    \ > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3\
    \ && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2\
    \ > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3\
    \ && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2\
    \ > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3\
    \ && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2\
    \ > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3\
    \ && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2\
    \ > side3 && side2 > side3 && side2 > side3 && side2 > side3 && side2 > side3\
    \ && side2 > side3 && side2 > side\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjxwei631.sh: line 16: unexpected EOF while looking for matching
    `)''

    /tmp/tmpjxwei631.sh: line 39: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local side1_length\n    local side2_length\n\
    \    local side3_length\n    local side1_length2\n    local side2_length2\n  \
    \  local side3_length2\n    local side1_length3\n    local side2_length3\n   \
    \ local side3_length3\n    local side1_length4\n    local side2_length4\n    local\
    \ side3_length4\n    local side1_length5\n    local side2_length5\n    local side3_length5\n\
    \    local side1_length6\n    local side2_length6\n    local side3_length6\n \
    \   local side1_length7\n    local side2_length7\n    local side3_length7\n  \
    \  local side1_length8\n    local side2_length8\n    local side3_length8\n   \
    \ local side1_length9\n    local side2_length9\n    local side3_length9\n    local\
    \ side1_length10\n    local side2_length10\n    local side3_length10\n    local\
    \ side1_length11\n    local side2_length11\n    local side3_length11\n    local\
    \ side1_length12\n    local side2_length12\n    local side3_length12\n    local\
    \ side1_length13\n    local side2_length13\n    local side3_length13\n    local\
    \ side1_length14\n    local side2_length14\n    local side3_length14\n    local\
    \ side1_length15\n    local side2_length15\n    local side3_length15\n    local\
    \ side1_length16\n    local side2_length16\n    local side3_length16\n    local\
    \ side1_length17\n    local side2_length17\n    local side3_length17\n    local\
    \ side1_length18\n    local side2_length18\n    local side3_length18\n    local\
    \ side1_length19\n    local side2_length19\n    local side3_length19\n    local\
    \ side1_length20\n    local side2_length20\n    local side3_length20\n    local\
    \ side1_length21\n    local side2_length21\n    local side3_length21\n    local\
    \ side1_length22\n    local side2_length22\n    local side3_length22\n    local\
    \ side1_length23\n    local side2_length23\n    local side3_length23\n    local\
    \ side1_length24\n\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  \n  if ((side1 -eq side2 -eq side3) || (side1 -eq\
    \ side3 -eq side2)); then\n    result=true\n  else\n    result=false\n  fi\n \
    \ \n  return $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcqka3r2r.sh: line 17: side1: command not found

    /tmp/tmpcqka3r2r.sh: line 17: side1: command not found

    /tmp/tmpcqka3r2r.sh: line 23: return: false: numeric argument required

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\tlocal length\n\tlocal i\n\tlocal j\n\tlocal k\n\t\
    local l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\t\
    local s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\t\
    local z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\t\
    local g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\t\
    local n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\t\
    local u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\t\
    local b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\t\
    local i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\t\
    local p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\t\
    local w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\t\
    local d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\t\
    local k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal q\n\t\
    local r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\t\
    local y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\t\
    local f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\t\
    local m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\t\
    local t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local length1=$1\n    local length2=$2\n\
    \    local length3=$3\n    local result\n    if [ $length1 -eq 0 ] || [ $length2\
    \ -eq 0 ] || [ $length3 -eq 0 ]; then\n        echo \"Usage: right_angle_triangle\
    \ <length1> <length2> <length3>\"\n        exit 1\n    fi\n    if [ $length1 -gt\
    \ $length2 ] || [ $length1 -gt $length3 ] || [ $length2 -gt $length3 ]; then\n\
    \        echo \"Usage: right_angle_triangle <length1> <length2> <length3>\"\n\
    \        exit 1\n    fi\n    if [ $length1 -eq $length2 -a $length1 -eq $length3\
    \ ]; then\n        result=true\n    elif [ $length1 -eq $length2 -a $length2 -eq\
    \ $length3 ]; then\n        result=false\n    elif [ $length1 -eq $length3 -a\
    \ $length3 -eq $length2 ]; then\n        result=false\n    elif [ $length1 -eq\
    \ $length3 -a $length1 -eq $length2 ]; then\n        result=true\n    elif [ $length2\
    \ -eq $length3 -a $length2 -eq $length1 ]; then\n        result=false\n    elif\
    \ [ $length2 -eq $length3 -a $length3 -eq $length1 ]; then\n        result=true\n\
    \    elif [ $length3 -eq $length1 -a $length3 -eq $length2 ]; then\n        result=false\n\
    \    elif [ $length3 -eq $length1 -a $length1 -eq $length2 ]; then\n        result=true\n\
    \    else\n        result=false\n    fi\n    echo $result\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  \n  result=$((side1 + side2 + side3 > 0))\n  \n\
    \  return $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result=0\n    local side1_length=$((side1*2))\n\
    \    local side2_length=$((side2*2))\n    local side3_length=$((side3*2))\n  \
    \  local side1_square=$((side1_length*side1_length))\n    local side2_square=$((side2_length*side2_length))\n\
    \    local side3_square=$((side3_length*side3_length))\n    local side1_square_root=$((side1_square/2))\n\
    \    local side2_square_root=$((side2_square/2))\n    local side3_square_root=$((side3_square/2))\n\
    \    local side1_square_root_2=$((side1_square_root*side1_square_root))\n    local\
    \ side2_square_root_2=$((side2_square_root*side2_square_root))\n    local side3_square_root_2=$((side3_square_root*side3_square_root))\n\
    \    local side1_square_root_3=$((side1_square_root*side1_square_root))\n    local\
    \ side2_square_root_3=$((side2_square_root*side2_square_root))\n    local side3_square_root_3=$((side3_square_root*side3_square_root))\n\
    \    local side1_square_root_4=$((side1_square_root*side1_square_root))\n    local\
    \ side2_square_root_4=$((side2_square_root*side2_square_root))\n    local side3_square_root_4=$((side3_square_root*side3_square_root))\n\
    \    local side1_square_root_5=$((side1_square_root*side1_square_root))\n    local\
    \ side2_square_root_5=$((side2_square_root*side2_square_root))\n    local side3_square_root_5=$((side3_square_root*side3_square_root))\n\
    \    local side1_square_root_6=$((side1_square_root*side1_square_root))\n    local\
    \ side2_square_root_6=$((side2_square_root*side2_square_root))\n    local side3_square_root_6=$((side3_square_root*side3_square_root))\n\
    \    local side1_square_root_7=$((side1_square_root\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpszjoccvy.sh: line 40: unexpected EOF while looking for matching
    `)''

    /tmp/tmpszjoccvy.sh: line 63: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local length\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$(echo \"$side1 $side2 $side3\" | awk '{print\
    \ $1}')\n  result=$(echo \"$side1 $side3 $side2\" | awk '{print $1}')\n  result=$(echo\
    \ \"$side2 $side3 $side1\" | awk '{print $1}')\n  result=$(echo \"$side2 $side1\
    \ $side3\" | awk '{print $1}')\n  result=$(echo \"$side3 $side1 $side2\" | awk\
    \ '{print $1}')\n  result=$(echo \"$side3 $side2 $side1\" | awk '{print $1}')\n\
    \  result=$(echo \"$side1 $side2 $side3\" | awk '{print $1}')\n  result=$(echo\
    \ \"$side1 $side3 $side2\" | awk '{print $1}')\n  result=$(echo \"$side2 $side3\
    \ $side1\" | awk '{print $1}')\n  result=$(echo \"$side2 $side1 $side3\" | awk\
    \ '{print $1}')\n  result=$(echo \"$side3 $side1 $side2\" | awk '{print $1}')\n\
    \  result=$(echo \"$side3 $side2 $side1\" | awk '{print $1}')\n  result=$(echo\
    \ \"$side1 $side2 $side3\" | awk '{print $1}')\n  result=$(echo \"$side1 $side3\
    \ $side2\" | awk '{print $1}')\n  result=$(echo \"$side2 $side3 $side1\" | awk\
    \ '{print $1}')\n  result=$(echo \"$side2 $side1 $side3\" | awk '{print $1}')\n\
    \  result=$(echo \"$side3 $side1 $side2\" | awk '{print $1}')\n  result=$(echo\
    \ \"$side3 $side2 $side1\" | awk '{print $1}')\n  result=$(echo \"$side1 $side2\
    \ $side3\" | awk '{print $1}')\n  result=$(echo \"$side1 $side3 $side2\" | awk\
    \ '{print $1}')\n  result=$(echo \"$side2 $side3 $side1\" | awk '{print $1}')\n\
    \  result=$(echo \"$side2 $side1 $side3\" | awk '{print $1}')\n  result=$(echo\
    \ \"$side3 $side1 $side2\" | awk '{print $1}')\n  result=$(echo \"\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqepl65u6.sh: line 58: unexpected EOF while looking for matching
    `"''

    /tmp/tmpqepl65u6.sh: line 62: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    if [ $side1 -eq 0 ] || [ $side2 -eq\
    \ 0 ] || [ $side3 -eq 0 ]; then\n        result=false\n    else\n        result=true\n\
    \    fi\n    echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq $side2 -a $side1 -eq $side3 ]; then\n\
    \        echo \"$side1 is a right-angled triangle\"\n    elif [ $side1 -eq $side3\
    \ -a $side2 -eq $side3 ]; then\n        echo \"$side1 is a right-angled triangle\"\
    \n    elif [ $side2 -eq $side3 -a $side1 -eq $side3 ]; then\n        echo \"$side2\
    \ is a right-angled triangle\"\n    elif [ $side1 -eq $side3 -a $side2 -eq $side1\
    \ ]; then\n        echo \"$side1 is a right-angled triangle\"\n    elif [ $side2\
    \ -eq $side1 -a $side1 -eq $side2 ]; then\n        echo \"$side2 is a right-angled\
    \ triangle\"\n    elif [ $side1 -eq $side2 -a $side1 -eq $side3 ]; then\n    \
    \    echo \"$side1 is a right-angled triangle\"\n    elif [ $side1 -eq $side3\
    \ -a $side2 -eq $side1 ]; then\n        echo \"$side1 is a right-angled triangle\"\
    \n    elif [ $side2 -eq $side1 -a $side1 -eq $side3 ]; then\n        echo \"$side2\
    \ is a right-angled triangle\"\n    elif [ $side1 -eq $side2 -a $side2 -eq $side3\
    \ ]; then\n        echo \"$side1 is a right-angled triangle\"\n    elif [ $side1\
    \ -eq $side3 -a $side2 -eq $side1 ]; then\n        echo \"$side1 is a right-angled\
    \ triangle\"\n    elif [ $side2 -eq $side1 -a $side2 -eq $side3 ]; then\n    \
    \    echo \"$side2 is a right-angled triangle\"\n    elif [ $side1 -eq $side2\
    \ -a $side3 -eq $side1 ]; then\n        echo \"$side1 is a right-angled triangle\"\
    \n    elif [ $side1 -eq $side3 -a $side3 -eq $side1 ]; then\n        echo \"$side1\
    \ is a right-angled triangle\"\n    elif [ $side2 -eq $side1 -a $side3 -eq $side2\
    \ ]; then\n        echo \"$side2 is a right-angled triangle\"\n    elif [ $side1\
    \ -eq $side2 -a $side3 -eq $side2 ]; then\n        echo \"$side1 is a right-angle\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7ojksv79.sh: line 63: unexpected EOF while looking for matching
    `"''

    /tmp/tmp7ojksv79.sh: line 67: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local side\n  result=$((side1*side1 + side2*side2\
    \ + side3*side3 > 0))\n  if [ $result -eq 0 ]; then\n    side=$((side1 + side2\
    \ + side3))\n    if [ $side -eq 0 ]; then\n      result=0\n    elif [ $side -eq\
    \ 1 ]; then\n      result=1\n    elif [ $side -eq 2 ]; then\n      result=1\n\
    \    elif [ $side -eq 3 ]; then\n      result=1\n    elif [ $side -eq 4 ]; then\n\
    \      result=1\n    elif [ $side -eq 5 ]; then\n      result=1\n    elif [ $side\
    \ -eq 6 ]; then\n      result=1\n    elif [ $side -eq 7 ]; then\n      result=1\n\
    \    elif [ $side -eq 8 ]; then\n      result=1\n    elif [ $side -eq 9 ]; then\n\
    \      result=1\n    elif [ $side -eq 10 ]; then\n      result=1\n    elif [ $side\
    \ -eq 11 ]; then\n      result=1\n    elif [ $side -eq 12 ]; then\n      result=1\n\
    \    elif [ $side -eq 13 ]; then\n      result=1\n    elif [ $side -eq 14 ]; then\n\
    \      result=1\n    elif [ $side -eq 15 ]; then\n      result=1\n    elif [ $side\
    \ -eq 16 ]; then\n      result=1\n    elif [ $side -eq 17 ]; then\n      result=1\n\
    \    elif [ $side -eq 18 ]; then\n      result=1\n    elif [ $side -eq 19 ]; then\n\
    \      result=1\n    elif [ $side -eq 20 ]; then\n      result=1\n    elif [ $side\
    \ -eq 21 ]; then\n      result=1\n    elif [ $side -eq 22 ]; then\n      result=1\n\
    \    elif [ $side -eq 23 ]; then\n      result=1\n    elif [ $side -eq 24 ]; then\n\
    \      result=1\n    elif [ $side -eq 25 ]; then\n      result=1\n    elif [ $side\
    \ -eq 26 ]; then\n      result=1\n    elif [ $side -eq 27 ]; then\n      result=1\n\
    \    elif [ $side -eq 28 ]; then\n      result=1\n    elif [ $side -eq 29 ]; then\n\
    \      result=1\n    elif [ $side -eq 30 ]; then\n      result=1\n    elif [ $side\
    \ -eq 31 ]; then\n      result=1\n    elif [ $side -eq 32 ]; then\n      result=1\n\
    \    elif [ $side -eq 33 ]; then\n      result=1\n    elif \n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbi_5yk8c.sh: line 89: syntax error near unexpected token `}''

    /tmp/tmpbi_5yk8c.sh: line 89: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal\
    \ m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal\
    \ t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal\
    \ a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal\
    \ h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal\
    \ o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal\
    \ v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal\
    \ c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal\
    \ j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal\
    \ q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal\
    \ x\n\tlocal y\n\tlocal z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal\
    \ e\n\tlocal f\n\tlocal g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal\
    \ l\n\tlocal m\n\tlocal n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal\
    \ s\n\tlocal t\n\tlocal u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal\
    \ z\n\tlocal a\n\tlocal b\n\tlocal c\n\tlocal d\n\tlocal e\n\tlocal f\n\tlocal\
    \ g\n\tlocal h\n\tlocal i\n\tlocal j\n\tlocal k\n\tlocal l\n\tlocal m\n\tlocal\
    \ n\n\tlocal o\n\tlocal p\n\tlocal q\n\tlocal r\n\tlocal s\n\tlocal t\n\tlocal\
    \ u\n\tlocal v\n\tlocal w\n\tlocal x\n\tlocal y\n\tlocal z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n\tlocal side1=$1\n\tlocal side2=$2\n\tlocal\
    \ side3=$3\n\tlocal result\n\t\n\tresult=$((side1 + side2 + side3 > 0))\n\t\n\t\
    return $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    if [ $side1 -gt $side2 ]; then\n  \
    \      result=$((side1 > side2 || side2 > side3 || side1 > side3 ))\n    else\n\
    \        result=$((side2 > side1 || side1 > side3 || side3 > side2))\n    fi\n\
    \    echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  \n  if ((side1 == side2 && side2 == side3)) || ((side1\
    \ == side3 && side2 == side1)) || ((side1 == side2 && side3 == side1)) || ((side1\
    \ == side3 && side2 == side3)) || ((side2 == side3 && side1 == side1)) || ((side2\
    \ == side1 && side3 == side1)) || ((side3 == side1 && side1 == side2)) ; then\n\
    \    result=true\n  else\n    result=false\n  fi\n  \n  echo $result\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local side\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$(echo \"$side1 + $side2 + $side3\" | bc)\n\
    \  if [ $result -eq 0 ]; then\n    return 0\n  else\n    return 1\n  fi\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -gt $side2 ]; then\n        if [ $side1 -gt\
    \ $side3 ]; then\n            if [ $side2 -gt $side3 ]; then\n               \
    \ echo \"True\"\n            else\n                echo \"False\"\n          \
    \  fi\n        else\n            if [ $side2 -gt $side1 ]; then\n            \
    \    echo \"False\"\n            else\n                echo \"True\"\n       \
    \     fi\n        fi\n    else\n        if [ $side1 -gt $side3 ]; then\n     \
    \       if [ $side2 -gt $side3 ]; then\n                echo \"False\"\n     \
    \       else\n                echo \"True\"\n            fi\n        else\n  \
    \          if [ $side2 -gt $side1 ]; then\n                echo \"True\"\n   \
    \         else\n                echo \"False\"\n            fi\n        fi\n \
    \   fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  result=$((side1+side2+side3)==(side1*side2*side3))\n\
    \  echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6da0rna7.sh: command substitution: line 16: syntax error near unexpected
    token `==''

    /tmp/tmp6da0rna7.sh: command substitution: line 16: `(side1+side2+side3)==(side1*side2*side3)''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    local result\n    if [ $side1 -eq $side2 ]; then\n  \
    \      result=$((side1 + side2 + side3))\n        if [ $result -eq $side3 ]; then\n\
    \            return 0\n        fi\n        if [ $result -eq $side1 ]; then\n \
    \           return 1\n        fi\n    fi\n    if [ $side1 -eq $side3 ]; then\n\
    \        result=$((side1 + side2 + side3))\n        if [ $result -eq $side2 ];\
    \ then\n            return 1\n        fi\n        if [ $result -eq $side3 ]; then\n\
    \            return 0\n        fi\n    fi\n    if [ $side2 -eq $side3 ]; then\n\
    \        result=$((side1 + side2 + side3))\n        if [ $result -eq $side1 ];\
    \ then\n            return 1\n        fi\n        if [ $result -eq $side2 ]; then\n\
    \            return 0\n        fi\n    fi\n    return 0\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq $side2 -a $side1 -eq $side3 ]; then\n\
    \        echo \"$side1 is a right-angled triangle\"\n        return 0\n    elif\
    \ [ $side1 -eq $side3 -a $side2 -eq $side3 ]; then\n        echo \"$side2 is a\
    \ right-angled triangle\"\n        return 0\n    elif [ $side1 -eq $side3 -a $side3\
    \ -eq $side2 ]; then\n        echo \"$side3 is a right-angled triangle\"\n   \
    \     return 0\n    elif [ $side1 -eq $side2 -a $side2 -eq $side1 ]; then\n  \
    \      echo \"$side2 is a right-angled triangle\"\n        return 0\n    elif\
    \ [ $side1 -eq $side2 -a $side1 -eq $side3 ]; then\n        echo \"$side1 is a\
    \ right-angled triangle\"\n        return 0\n    elif [ $side1 -eq $side3 -a $side3\
    \ -eq $side1 ]; then\n        echo \"$side3 is a right-angled triangle\"\n   \
    \     return 0\n    elif [ $side1 -eq $side3 -a $side3 -eq $side2 ]; then\n  \
    \      echo \"$side3 is a right-angled triangle\"\n        return 0\n    elif\
    \ [ $side1 -eq $side2 -a $side2 -eq $side1 ]; then\n        echo \"$side2 is a\
    \ right-angled triangle\"\n        return 0\n    elif [ $side1 -eq $side2 -a $side1\
    \ -eq $side3 ]; then\n        echo \"$side1 is a right-angled triangle\"\n   \
    \     return 0\n    elif [ $side1 -eq $side3 -a $side3 -eq $side1 ]; then\n  \
    \      echo \"$side3 is a right-angled triangle\"\n        return 0\n    elif\
    \ [ $side1 -eq $side3 -a $side3 -eq $side2 ]; then\n        echo \"$side3 is a\
    \ right-angled triangle\"\n        return 0\n    elif [ $side1 -eq $side2 -a $side2\
    \ -eq $side1 ]; then\n        echo \"$side2 is a right-angled triangle\"\n   \
    \     return 0\n    elif [ $side1 -eq $side2 -a $side1 -eq $side3 ]; then\n  \
    \      echo \"$side1 is a right-angled triangle\"\n        return 0\n    elif\
    \ [ $side1 -eq $side3 -a $side3 -eq $side1 ]; then\n        echo \"$side3 is a\
    \ right-angled triangle\"\n        return 0\n    elif \n}\n\ncandidate() {\n \
    \   right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbx0iho4q.sh: line 58: syntax error near unexpected token `}''

    /tmp/tmpbx0iho4q.sh: line 58: `}''

    '
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local length1 length2 length3\n    length1=$1\n\
    \    length2=$2\n    length3=$3\n    if [ $length1 -eq 0 ]; then\n        echo\
    \ \"$length1 is an invalid length\"\n        return 1\n    elif [ $length2 -eq\
    \ 0 ]; then\n        echo \"$length2 is an invalid length\"\n        return 1\n\
    \    elif [ $length3 -eq 0 ]; then\n        echo \"$length3 is an invalid length\"\
    \n        return 1\n    elif [ $length1 -gt $length2 ]; then\n        echo \"\
    $length1 must be less than $length2\"\n        return 1\n    elif [ $length2 -gt\
    \ $length3 ]; then\n        echo \"$length2 must be less than $length3\"\n   \
    \     return 1\n    elif [ $length1 -gt $length3 ]; then\n        echo \"$length1\
    \ must be less than $length3\"\n        return 1\n    elif [ $length1 -eq $length2\
    \ -a $length1 -eq $length3 ]; then\n        echo \"$length1 is a right-angled\
    \ triangle\"\n        return 0\n    else\n        echo \"$length1 is not a right-angled\
    \ triangle\"\n        return 1\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  \n  if [ $side1 -eq 0 ] || [ $side2 -eq 0 ] || [\
    \ $side3 -eq 0 ]; then\n    return 0\n  fi\n  \n  if [ $side1 -eq $side2 ] ||\
    \ [ $side1 -eq $side3 ] || [ $side2 -eq $side3 ]; then\n    return 1\n  fi\n \
    \ \n  if [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ]; then\n    return 0\n\
    \  fi\n  \n  if [ $side1 -eq $side3 ] && [ $side3 -eq $side2 ]; then\n    return\
    \ 1\n  fi\n  \n  if [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ] && [ $side3\
    \ -eq $side1 ]; then\n    return 0\n  fi\n  \n  return 1\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n  local side1=$1\n  local side2=$2\n  local\
    \ side3=$3\n  local result\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033495
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an\
    \ integer\nright_angle_triangle() {\n    local side1=$1\n    local side2=$2\n\
    \    local side3=$3\n    if [ $side1 -eq $side2 -a $side1 -eq $side3 ]; then\n\
    \        echo \"$side1 is a right-angled triangle\"\n        return 0\n    fi\n\
    \    if [ $side1 -eq $side3 -a $side2 -eq $side3 ]; then\n        echo \"$side1\
    \ is a right-angled triangle\"\n        return 0\n    fi\n    if [ $side2 -eq\
    \ $side3 -a $side1 -eq $side2 ]; then\n        echo \"$side2 is a right-angled\
    \ triangle\"\n        return 0\n    fi\n    if [ $side1 -eq $side3 -a $side2 -eq\
    \ $side1 ]; then\n        echo \"$side1 is a right-angled triangle\"\n       \
    \ return 0\n    fi\n    if [ $side2 -eq $side1 -a $side1 -eq $side3 ]; then\n\
    \        echo \"$side1 is a right-angled triangle\"\n        return 0\n    fi\n\
    \    if [ $side1 -eq $side2 -a $side2 -eq $side1 ]; then\n        echo \"$side2\
    \ is a right-angled triangle\"\n        return 0\n    fi\n    if [ $side1 -eq\
    \ $side3 -a $side3 -eq $side1 ]; then\n        echo \"$side1 is a right-angled\
    \ triangle\"\n        return 0\n    fi\n    if [ $side2 -eq $side1 -a $side1 -eq\
    \ $side2 ]; then\n        echo \"$side1 is a right-angled triangle\"\n       \
    \ return 0\n    fi\n    if [ $side1 -eq $side2 -a $side2 -eq $side1 ]; then\n\
    \        echo \"$side2 is a right-angled triangle\"\n        return 0\n    fi\n\
    \    if [ $side1 -eq $side3 -a $side3 -eq $side1 ]; then\n        echo \"$side1\
    \ is a right-angled triangle\"\n        return 0\n    fi\n    if [ $side2 -eq\
    \ $side1 -a $side1 -eq $side2 ]; then\n        echo \"$side1 is a right-angled\
    \ triangle\"\n        return 0\n    fi\n    if [ $side1 -eq $side2 -a $side2 -eq\
    \ $side1 ]; then\n        echo \"$side2 is a right-angled triangle\"\n       \
    \ return 0\n    fi\n    if [ $side1 -eq $side3 -a $side3 -eq $side1 ]; then\n\
    \        echo \"$side1 is a right-angled triangle\"\n        return 0\n    fi\n\
    \    if [ $side2 -eq $side1 -\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4dcisi4f.sh: line 68: syntax error near unexpected token `}''

    /tmp/tmp4dcisi4f.sh: line 68: `}''

    '
  stdout: ''
  timestamp: 1660033495

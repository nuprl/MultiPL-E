language: sh
name: HumanEval_131_digits
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )); do\n \
    \       product=$(( product * n % 10 ))\n        n=$(( n / 10 ))\n    done\n \
    \   if (( n == 0 )); then\n        product=0\n    fi\n    return $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    if\
    \ (( n % 2 )); then\n      product=$(( product * n ))\n    fi\n    n=$(( n / 2\
    \ ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"\
    54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"\
    5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    (( n\
    \ % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    local digit\n    while ((\
    \ n > 0 )) ; do\n        digit=$(( n % 10 ))\n        product=$(( product * digit\
    \ ))\n        n=$(( n / 10 ))\n    done\n    return $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )); do\n \
    \       (( n % 2 )) && product=$product*$(( n / 2 ))\n        (( n /= 2 ))\n \
    \   done\n    return $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"\
    54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"\
    5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp85gs71i0.sh: line 14: return: 1*2*0: numeric argument required

    '
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * $((n % 10))))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    (( n\
    \ % 2 )) && product=$product*$(( n / 2 ))\n    (( n /= 2 ))\n  done\n  echo $product\n\
    }\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )) ; do\n\
    \        (( n % 2 )) && product=$product*$(( n / 10 ))\n        n=$(( n / 10 ))\n\
    \    done\n    return $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"\
    54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"\
    5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    local digit\n    for (( digit=0;\
    \ digit<n; digit++ )); do\n        (( product*=10 ))\n        (( product+=( $(\
    \ echo \"$n\" | sed -n \"${digit}p\" ) %2 ) ))\n    done\n    return $product\n\
    }\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'sed: -e expression #1, char 2: invalid usage of line address 0

    /tmp/tmpkciwvshh.sh: line 13: ((: product+=(  %2 ) : syntax error: operand expected
    (error token is "%2 ) ")

    /tmp/tmpkciwvshh.sh: line 13: ((: product+=(  %2 ) : syntax error: operand expected
    (error token is "%2 ) ")

    /tmp/tmpkciwvshh.sh: line 13: ((: product+=(  %2 ) : syntax error: operand expected
    (error token is "%2 ) ")

    /tmp/tmpkciwvshh.sh: line 13: ((: product+=(  %2 ) : syntax error: operand expected
    (error token is "%2 ) ")

    '
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 2 ))\n    (( n /= 2 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )) ; do\n\
    \        (( n % 2 )) && product=0\n        product=$product*$(( n % 10 ))\n  \
    \      n=$(( n / 10 ))\n    done\n    return $product\n}\n\ncandidate() {\n  \
    \  digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\"\
    \ ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsx37w2_i.sh: line 15: return: 0*5: numeric argument required

    '
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )) ; do\n\
    \        (( n % 2 )) && product=0\n        product=$(( product * n % 10 ))\n \
    \       n=$(( n / 10 ))\n    done\n    return $product\n}\n\ncandidate() {\n \
    \   digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\"\
    \ ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )) ; do\n\
    \        (( n % 2 )) && product=0\n        product=$product*$(( n % 10 ))\n  \
    \      n=$(( n / 10 ))\n    done\n    return $product\n}\n\ncandidate() {\n  \
    \  digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\"\
    \ ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsx37w2_i.sh: line 15: return: 0*5: numeric argument required

    '
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )) ; do\n\
    \        product=$(( product * n % 10 ))\n        n=$(( n / 10 ))\n    done\n\
    \    return $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\"\
    \ ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"\
    5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    product=$((\
    \ product * $(( n % 10 )) ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    product=$((\
    \ product * $(( n % 10 )) ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    local digit\n    local i\n\
    \    for (( i = 1; i <= n; i++ )); do\n        digit=$(( n % 10 ))\n        product=$((\
    \ product * digit ))\n        (( n = n / 10 ))\n    done\n    return $product\n\
    }\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local result=1\n  while (( n > 0 )); do\n    (( n\
    \ % 2 )) && result=$(( result * n ))\n    (( n /= 2 ))\n  done\n  echo $result\n\
    }\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )) ; do\n\
    \        (( n % 2 )) && product=$product*$(( n / 10 ))\n        n=$(( n / 10 ))\n\
    \    done\n    return $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"\
    54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"\
    5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )) ; do\n\
    \        (( n % 2 )) && product=$product*$(( n / 10 ))\n        (( n /= 10 ))\n\
    \    done\n    return $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"\
    54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"\
    5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=0\n    (( product *= n % 10 ))\n    (( n /= 10 ))\n  done\n\
    \  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\"\
    \ ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"\
    5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 2 ))\n    (( n /= 2 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local result=1\n  local i\n  for (( i=1; i<=n; i++\
    \ )); do\n    (( result *= $(( i % 2 )) )) && result\n  done\n  echo $result\n\
    }\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpa2970nt_.sh: line 12: result: command not found

    '
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )); do\n \
    \       (( n % 2 )) && product=$product*$(( n / 10 ))\n        n=$(( n / 10 ))\n\
    \    done\n    return $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"\
    54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"\
    5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local result=0\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      result=$((\
    \ result * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $result\n}\n\n\
    candidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )) ; do\n\
    \        (( n % 2 )) && product=0\n        product=$product*$(( n % 10 ))\n  \
    \      n=$(( n / 10 ))\n    done\n    return $product\n}\n\ncandidate() {\n  \
    \  digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\"\
    \ ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsx37w2_i.sh: line 15: return: 0*5: numeric argument required

    '
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    if\
    \ (( n % 2 )); then\n      product=$product*$(( n / 10 ))\n    fi\n    n=$(( n\
    \ - 1 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )) ; do\n\
    \        (( n % 2 )) && product=0\n        product*=$(( n % 10 ))\n        ((\
    \ n /= 10 ))\n    done\n    return $product\n}\n\ncandidate() {\n    digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[\
    \ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n   \
    \ [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\"\
    \ ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpn366rgjs.sh: line 12: product*=5: command not found

    '
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=0\n    (( product *= n % 10 ))\n    (( n /= 10 ))\n  done\n\
    \  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\"\
    \ ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"\
    5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )); do\n \
    \       product=$(( product * n % 10 ))\n        n=$(( n / 10 ))\n    done\n \
    \   if (( n == 0 )); then\n        product=0\n    fi\n    return $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    local digit\n    while ((\
    \ n > 0 )) ; do\n        digit=$(( n % 10 ))\n        product=$(( product * digit\
    \ ))\n        n=$(( n / 10 ))\n    done\n    return $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    (( n\
    \ % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )) ; do\n\
    \        (( n % 2 )) && product=$product*$(( n % 10 ))\n        (( n /= 10 ))\n\
    \    done\n    return $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"\
    54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"\
    5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcefy6v7s.sh: line 14: return: 1*5: numeric argument required

    '
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local result=1\n  while (( n > 0 )) ; do\n    local\
    \ digit=$(( n % 10 ))\n    result=$(( result * digit ))\n    n=$(( n / 10 ))\n\
    \  done\n  echo $result\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\"\
    ) = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\"\
    ) = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"\
    5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    (( n\
    \ % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    if\
    \ (( n % 2 )); then\n      product=$(( product * n ))\n    fi\n    n=$(( n / 2\
    \ ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"\
    54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"\
    5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    (( n\
    \ % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    local digit\n    while ((\
    \ n > 0 )) ; do\n        digit=$(( n % 10 ))\n        product=$(( product * digit\
    \ ))\n        n=$(( n / 10 ))\n    done\n    return $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    (( n\
    \ % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local result\n  result=0\n  while (( n > 0 )) ; do\n\
    \    (( n % 2 )) && result=$(( result * n ))\n    (( n /= 2 ))\n  done\n  echo\
    \ $result\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    local digit\n    while ((\
    \ n > 0 )) ; do\n        digit=$(( n % 10 ))\n        product=$(( product * digit\
    \ ))\n        n=$(( n / 10 ))\n    done\n    return $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 2 ))\n    (( n /= 2 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n / 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    if\
    \ (( n % 2 )); then\n      product=$product*$(( n / 10 ))\n    fi\n    n=$(( n\
    \ / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    if ((\
    \ n % 2 )); then\n      product=$product*$(( n - 1 ))\n    fi\n    n=$(( n - 1\
    \ ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"\
    54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"\
    5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    if\
    \ (( n % 2 )); then\n      product=$product*$(( n / 10 ))\n    fi\n    n=$(( n\
    \ / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    local digit\n    while ((\
    \ n > 0 )) ; do\n        digit=$(( n % 10 ))\n        product=$(( product * digit\
    \ ))\n        n=$(( n / 10 ))\n    done\n    if (( n == 0 )) ; then\n        echo\
    \ 0\n    else\n        echo $product\n    fi\n}\n\ncandidate() {\n    digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[\
    \ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n   \
    \ [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\"\
    \ ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )); do\n \
    \       (( n % 2 )) && product=$product*$(( n / 2 ))\n        (( n /= 2 ))\n \
    \   done\n    return $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"\
    54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"\
    5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp85gs71i0.sh: line 14: return: 1*2*0: numeric argument required

    '
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=0\n    (( product *= n % 10 ))\n    (( n /= 10 ))\n  done\n\
    \  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\"\
    \ ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"\
    5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((product\
    \ * n % 10))\n    n=$((n / 10))\n  done\n  echo $product\n}\n\ncandidate() {\n\
    \    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"\
    5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"\
    1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    ((\
    \ n % 2 )) && product=$product*$(( n % 10 ))\n    (( n /= 10 ))\n  done\n  echo\
    \ $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n\
    \    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\"\
    \ ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\"\
    ) = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\
    \ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  local digit\n  while (( n > 0 ))\
    \ ; do\n    digit=$(( n % 10 ))\n    product=$(( product * digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: -1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local result\n  result=0\n  while ((n>0)); do\n  \
    \  ((n%=10)) && result=$((result*10+n%2)) || return 0\n  done\n  echo $result\n\
    }\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=30 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=23 encoding='utf-8'>
  timestamp: 1660033338
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    if\
    \ (( n % 2 )); then\n      product=$product*$(( n / 10 ))\n    fi\n    n=$(( n\
    \ - 1 ))\n  done\n  echo $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate\
    \ \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )); do\n    (( n\
    \ % 2 )) && product=$product*$(( n - 1 ))\n    (( n /= 2 ))\n  done\n  echo $product\n\
    }\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate\
    \ \"120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate\
    \ \"98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n   \
    \ [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )) ; do\n\
    \        (( n % 2 )) && product=$product*$(( n / 10 ))\n        (( n /= 10 ))\n\
    \    done\n    return $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"\
    54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"\
    5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n  local n=$1\n  local product=1\n  while (( n > 0 )) ; do\n    product=$((\
    \ product * n % 10 ))\n    n=$(( n / 10 ))\n  done\n  echo $product\n}\n\ncandidate()\
    \ {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") =\
    \ \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"120\"\
    ) = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"98765\"\
    ) = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
    \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
    \ digits.\n# Return 0 if all digits are even.\n# For example:\n#\n# $1 is an integer\n\
    digits() {\n    local n=$1\n    local product=1\n    while (( n > 0 )) ; do\n\
    \        (( n % 2 )) && product=$product*$(( n / 10 ))\n        n=$(( n / 10 ))\n\
    \    done\n    return $product\n}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"\
    54\") = \"5\" ]]\n    [[ $(candidate \"120\") = \"1\" ]]\n    [[ $(candidate \"\
    5014\") = \"5\" ]]\n    [[ $(candidate \"98765\") = \"315\" ]]\n    [[ $(candidate\
    \ \"5576543\") = \"2625\" ]]\n    [[ $(candidate \"2468\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033333

language: sh
name: HumanEval_0_has_close_elements
results:
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min_distance\n  local min_element\n  local min_i\n  local min_j\n  local\
    \ min_distance\n  local min_element\n  local min_i\n  local min_j\n  local min_distance\n\
    \  local min_element\n  local min_i\n  local min_j\n  local min_distance\n  local\
    \ min_element\n  local min_i\n  local min_j\n  local min_distance\n  local min_element\n\
    \  local min_i\n  local min_j\n  local min_distance\n  local min_element\n  local\
    \ min_i\n  local min_j\n  local min_distance\n  local min_element\n  local min_i\n\
    \  local min_j\n  local min_distance\n  local min_element\n  local min_i\n  local\
    \ min_j\n  local min_distance\n  local min_element\n  local min_i\n  local min_j\n\
    \  local min_distance\n  local min_element\n  local min_i\n  local min_j\n  local\
    \ min_distance\n  local min_element\n  local min_i\n  local min_j\n  local min_distance\n\
    \  local min_element\n  local min_i\n  local min_j\n  local min_distance\n  local\
    \ min_element\n  local min_i\n  local min_j\n  local min_distance\n  local min_element\n\
    \  local min_i\n  local min_j\n  local min_distance\n  local min_element\n  local\
    \ min_i\n  local min_j\n  local min_distance\n  local min_element\n  local min_i\n\
    \  local min_j\n  local min_distance\n  local min_element\n  local min_i\n  local\
    \ min_j\n  local min_distance\n  local min_element\n  local min_i\n  local min_j\n\
    \  local min_distance\n  local min_element\n  local min_i\n  local min_j\n  local\
    \ min_distance\n  local min_element\n  local min_i\n  local min_j\n  local min_distance\n\
    \  local min_element\n  local min_i\n  local min_j\n  local min_distance\n  local\
    \ min_element\n  local min_i\n  local min_j\n  local min_distance\n  local min_element\n\
    \  local min_i\n  local min_j\n  local min_distance\n  local min_element\n  local\
    \ min_i\n  local min_j\n  local min_distance\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    local i\n    local j\n  \
    \  local distance\n    local diff\n    local diff1\n    local diff2\n    local\
    \ diff3\n    local diff4\n    local diff5\n    local diff6\n    local diff7\n\
    \    local diff8\n    local diff9\n    local diff10\n    local diff11\n    local\
    \ diff12\n    local diff13\n    local diff14\n    local diff15\n    local diff16\n\
    \    local diff17\n    local diff18\n    local diff19\n    local diff20\n    local\
    \ diff21\n    local diff22\n    local diff23\n    local diff24\n    local diff25\n\
    \    local diff26\n    local diff27\n    local diff28\n    local diff29\n    local\
    \ diff30\n    local diff31\n    local diff32\n    local diff33\n    local diff34\n\
    \    local diff35\n    local diff36\n    local diff37\n    local diff38\n    local\
    \ diff39\n    local diff40\n    local diff41\n    local diff42\n    local diff43\n\
    \    local diff44\n    local diff45\n    local diff46\n    local diff47\n    local\
    \ diff48\n    local diff49\n    local diff50\n    local diff51\n    local diff52\n\
    \    local diff53\n    local diff54\n    local diff55\n    local diff56\n    local\
    \ diff57\n    local diff58\n    local diff59\n    local diff60\n    local diff61\n\
    \    local diff62\n    local diff63\n    local diff64\n    local diff65\n    local\
    \ diff66\n    local diff67\n    local diff68\n    local diff69\n    local diff70\n\
    \    local diff71\n    local diff72\n    local diff73\n    local diff74\n    local\
    \ diff75\n    local diff76\n    local diff77\n    local diff78\n    local diff79\n\
    \    local diff80\n    local diff81\n    local diff82\n    local diff83\n    local\
    \ diff84\n    local diff85\n    local diff86\n    local diff87\n    local diff88\n\
    \    local diff89\n    local diff90\n    local diff91\n    local diff92\n    local\
    \ diff93\n    local diff94\n    local diff95\n    local diff96\n\n}\n\ncandidate()\
    \ {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted\n  local elements_sorted_idx\n\
    \  local elements_sorted_idx1\n  local elements_sorted_idx2\n  local elements_sorted_idx3\n\
    \  local elements_sorted_idx4\n  local elements_sorted_idx5\n  local elements_sorted_idx6\n\
    \  local elements_sorted_idx7\n  local elements_sorted_idx8\n  local elements_sorted_idx9\n\
    \  local elements_sorted_idx10\n  local elements_sorted_idx11\n  local elements_sorted_idx12\n\
    \  local elements_sorted_idx13\n  local elements_sorted_idx14\n  local elements_sorted_idx15\n\
    \  local elements_sorted_idx16\n  local elements_sorted_idx17\n  local elements_sorted_idx18\n\
    \  local elements_sorted_idx19\n  local elements_sorted_idx20\n  local elements_sorted_idx21\n\
    \  local elements_sorted_idx22\n  local elements_sorted_idx23\n  local elements_sorted_idx24\n\
    \  local elements_sorted_idx25\n  local elements_sorted_idx26\n  local elements_sorted_idx27\n\
    \  local elements_sorted_idx28\n  local elements_sorted_idx29\n  local elements_sorted_idx30\n\
    \  local elements_sorted_idx31\n  local elements_sorted_idx32\n  local elements_sorted_idx33\n\
    \  local elements_sorted_idx34\n  local elements_sorted_idx35\n  local elements_sorted_idx36\n\
    \  local elements_sorted_idx37\n  local elements_sorted_idx38\n  local elements_sorted_idx39\n\
    \  local elements_sorted_idx40\n  local elements_sorted_idx41\n  local elements_sorted_idx42\n\
    \  local elements_sorted_idx43\n  local elements_sorted_idx44\n  local elements_sorted_idx45\n\
    \  local elements_sorted_idx46\n  local elements_sorted_idx47\n  local elements_sorted_idx48\n\
    \  local elements_sorted_idx49\n  local elements_sorted_idx50\n  local elements_sorted_idx51\n\
    \  local elements_sorted_idx52\n  local elements_sorted_idx53\n  local elements_sorted_idx54\n\
    \  local elements_sorted_idx55\n  local elements_sorted_idx56\n  local elements_sorted_idx57\n\
    \  local elements_sorted_idx58\n  local elements_sorted_idx59\n  local elements_sorted_idx60\n\
    \  local elements_sorted_idx61\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local i\n    local j\n    local diff\n    local\
    \ diff1\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n\
    \    local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n    local diff95\n\
    \    local diff96\n    local diff97\n    local diff\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local i\n    local j\n    local diff\n    local diff1\n\
    \    local diff2\n    local diff3\n    local diff4\n    local diff5\n    local\
    \ diff6\n    local diff7\n    local diff8\n    local diff9\n    local diff10\n\
    \    local diff11\n    local diff12\n    local diff13\n    local diff14\n    local\
    \ diff15\n    local diff16\n    local diff17\n    local diff18\n    local diff19\n\
    \    local diff20\n    local diff21\n    local diff22\n    local diff23\n    local\
    \ diff24\n    local diff25\n    local diff26\n    local diff27\n    local diff28\n\
    \    local diff29\n    local diff30\n    local diff31\n    local diff32\n    local\
    \ diff33\n    local diff34\n    local diff35\n    local diff36\n    local diff37\n\
    \    local diff38\n    local diff39\n    local diff40\n    local diff41\n    local\
    \ diff42\n    local diff43\n    local diff44\n    local diff45\n    local diff46\n\
    \    local diff47\n    local diff48\n    local diff49\n    local diff50\n    local\
    \ diff51\n    local diff52\n    local diff53\n    local diff54\n    local diff55\n\
    \    local diff56\n    local diff57\n    local diff58\n    local diff59\n    local\
    \ diff60\n    local diff61\n    local diff62\n    local diff63\n    local diff64\n\
    \    local diff65\n    local diff66\n    local diff67\n    local diff68\n    local\
    \ diff69\n    local diff70\n    local diff71\n    local diff72\n    local diff73\n\
    \    local diff74\n    local diff75\n    local diff76\n    local diff77\n    local\
    \ diff78\n    local diff79\n    local diff80\n    local diff81\n    local diff82\n\
    \    local diff83\n    local diff84\n    local diff85\n    local diff86\n    local\
    \ diff87\n    local diff88\n    local diff89\n    local diff90\n    local diff91\n\
    \    local diff92\n    local diff93\n    local diff94\n    local diff95\n    local\
    \ diff96\n    local diff97\n    local diff\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff1\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n \
    \ local diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n \
    \ local diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n\
    \  local diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n\
    \  local diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n\
    \  local diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n\
    \  local diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n\
    \  local diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n\
    \  local diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n\
    \  local diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n\
    \  local diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n\
    \  local diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n\
    \  local diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n\
    \  local diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n\
    \  local diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n\
    \  local diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n\
    \  local diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n\
    \  local diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n\
    \  local diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n\
    \  local diff96\n  local diff97\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    local i\n    local j\n  \
    \  local diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n\
    \    local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff97\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local result=0\n  local i\n  local j\n  local distance\n\
    \  local min\n  local max\n  local min_index\n  local max_index\n  local min_index2\n\
    \  local max_index2\n  local min_index3\n  local max_index3\n  local min_index4\n\
    \  local max_index4\n  local min_index5\n  local max_index5\n  local min_index6\n\
    \  local max_index6\n  local min_index7\n  local max_index7\n  local min_index8\n\
    \  local max_index8\n  local min_index9\n  local max_index9\n  local min_index10\n\
    \  local max_index10\n  local min_index11\n  local max_index11\n  local min_index12\n\
    \  local max_index12\n  local min_index13\n  local max_index13\n  local min_index14\n\
    \  local max_index14\n  local min_index15\n  local max_index15\n  local min_index16\n\
    \  local max_index16\n  local min_index17\n  local max_index17\n  local min_index18\n\
    \  local max_index18\n  local min_index19\n  local max_index19\n  local min_index20\n\
    \  local max_index20\n  local min_index21\n  local max_index21\n  local min_index22\n\
    \  local max_index22\n  local min_index23\n  local max_index23\n  local min_index24\n\
    \  local max_index24\n  local min_index25\n  local max_index25\n  local min_index26\n\
    \  local max_index26\n  local min_index27\n  local max_index27\n  local min_index28\n\
    \  local max_index28\n  local min_index29\n  local max_index29\n  local min_index30\n\
    \  local max_index30\n  local min_index31\n  local max_index31\n  local min_index32\n\
    \  local max_index32\n  local min_index33\n  local max_index33\n  local min_index34\n\
    \  local max_index34\n  local min_index35\n  local max_index35\n  local min_index36\n\
    \  local max_index36\n  local min_index37\n  local max_index37\n  local min_index38\n\
    \  local max_index38\n  local min_index39\n  local max_index39\n  local min_index40\n\
    \  local max_\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local count=0\n  local element\n  local element1\n  local\
    \ element2\n  local diff\n  local diff1\n  local diff2\n  local diff3\n  local\
    \ diff4\n  local diff5\n  local diff6\n  local diff7\n  local diff8\n  local diff9\n\
    \  local diff10\n  local diff11\n  local diff12\n  local diff13\n  local diff14\n\
    \  local diff15\n  local diff16\n  local diff17\n  local diff18\n  local diff19\n\
    \  local diff20\n  local diff21\n  local diff22\n  local diff23\n  local diff24\n\
    \  local diff25\n  local diff26\n  local diff27\n  local diff28\n  local diff29\n\
    \  local diff30\n  local diff31\n  local diff32\n  local diff33\n  local diff34\n\
    \  local diff35\n  local diff36\n  local diff37\n  local diff38\n  local diff39\n\
    \  local diff40\n  local diff41\n  local diff42\n  local diff43\n  local diff44\n\
    \  local diff45\n  local diff46\n  local diff47\n  local diff48\n  local diff49\n\
    \  local diff50\n  local diff51\n  local diff52\n  local diff53\n  local diff54\n\
    \  local diff55\n  local diff56\n  local diff57\n  local diff58\n  local diff59\n\
    \  local diff60\n  local diff61\n  local diff62\n  local diff63\n  local diff64\n\
    \  local diff65\n  local diff66\n  local diff67\n  local diff68\n  local diff69\n\
    \  local diff70\n  local diff71\n  local diff72\n  local diff73\n  local diff74\n\
    \  local diff75\n  local diff76\n  local diff77\n  local diff78\n  local diff79\n\
    \  local diff80\n  local diff81\n  local diff82\n  local diff83\n  local diff84\n\
    \  local diff85\n  local diff86\n  local diff87\n  local diff88\n  local diff89\n\
    \  local diff90\n  local diff91\n  local diff92\n  local diff93\n  local diff94\n\
    \  local diff95\n  local \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local min_distance\n\
    \  local min_distance_index\n  local min_distance_index2\n  local min_distance_index3\n\
    \  local min_distance_index4\n  local min_distance_index5\n  local min_distance_index6\n\
    \  local min_distance_index7\n  local min_distance_index8\n  local min_distance_index9\n\
    \  local min_distance_index10\n  local min_distance_index11\n  local min_distance_index12\n\
    \  local min_distance_index13\n  local min_distance_index14\n  local min_distance_index15\n\
    \  local min_distance_index16\n  local min_distance_index17\n  local min_distance_index18\n\
    \  local min_distance_index19\n  local min_distance_index20\n  local min_distance_index21\n\
    \  local min_distance_index22\n  local min_distance_index23\n  local min_distance_index24\n\
    \  local min_distance_index25\n  local min_distance_index26\n  local min_distance_index27\n\
    \  local min_distance_index28\n  local min_distance_index29\n  local min_distance_index30\n\
    \  local min_distance_index31\n  local min_distance_index32\n  local min_distance_index33\n\
    \  local min_distance_index34\n  local min_distance_index35\n  local min_distance_index36\n\
    \  local min_distance_index37\n  local min_distance_index38\n  local min_distance_index39\n\
    \  local min_distance_index40\n  local min_distance_index41\n  local min_distance_index42\n\
    \  local min_distance_index43\n  local min_distance_index44\n  local min_distance_index45\n\
    \  local min_distance_index46\n  local min_distance_index47\n  local min_distance_index48\n\
    \  local min_distance_index49\n  local min_distance_index50\n  local min_distance_index51\n\
    \  local min_distance_index52\n  local min_distance_index53\n  local min_distance_index54\n\
    \  local min_distance_index55\n  local min_distance_index56\n  local min_distance_index57\n\
    \  local min_distance_index58\n  local min_distance_index59\n  local min_distance_index60\n\
    \  local min_distance_index61\n  local min_distance_index62\n  local min_distance_index63\n\
    \  local min_distance_index64\n  local min_distance_index65\n  local min_distance_index66\n\
    \  local min_distance_index67\n  local min_distance_index68\n  local min_distance_index69\n\
    \  local min_\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local min_distance\n\
    \  local min_distance_index\n  local min_distance_value\n  local min_distance_element\n\
    \  local min_distance_element_index\n  local min_distance_element_value\n  local\
    \ min_distance_element_value_index\n  local min_distance_element_value_array\n\
    \  local min_distance_element_value_array_index\n  local min_distance_element_value_array_value\n\
    \  local min_distance_element_value_array_value_1\n  local min_distance_element_value_array_value_2\n\
    \  local min_distance_element_value_array_value_3\n  local min_distance_element_value_array_value_4\n\
    \  local min_distance_element_value_array_value_5\n  local min_distance_element_value_array_value_6\n\
    \  local min_distance_element_value_array_value_7\n  local min_distance_element_value_array_value_8\n\
    \  local min_distance_element_value_array_value_9\n  local min_distance_element_value_array_value_10\n\
    \  local min_distance_element_value_array_value_11\n  local min_distance_element_value_array_value_12\n\
    \  local min_distance_element_value_array_value_13\n  local min_distance_element_value_array_value_14\n\
    \  local min_distance_element_value_array_value_15\n  local min_distance_element_value_array_value_16\n\
    \  local min_distance_element_value_array_value_17\n  local min_distance_element_value_array_value_18\n\
    \  local min_distance_element_value_array_value_19\n  local min_distance_element_value_array_value_20\n\
    \  local min_distance_element_value_array_value_21\n  local min_distance_element_value_array_value_22\n\
    \  local min_distance_element_value_array_value_23\n  local min_distance_element_value_array_value_24\n\
    \  local min_distance_element_value_array_value_25\n  local min_distance_element_value_array_value_26\n\
    \  local min_distance_element_value_array_value_27\n  local min_distance_element_value_array_value_28\n\
    \  local min_distance_element_value_array_value_29\n  local min_distance_element_value_array_value_30\n\
    \  local min_distance_element_value_array_value_31\n  local min_distance_element_value_array_value_32\n\
    \  local min_distance_element_value_array_value_33\n  local min_distance_element_value_array_value_34\n\
    \  local min_distance_element_value_array_value_35\n  local min_distance_element_value_array_value_36\n\
    \  local min_distance_element_value_array_value_37\n  local min_distance_element_value_array_value_38\n\
    \  local min_distance_element_value_array_value_39\n  local min_distance_element_value_array_value_40\n\
    \  local min_distance_element_value_array_value_41\n  local min_distance_element_value_array_value_42\n\
    }\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_count=${#elements[@]}\n  local threshold=$2\n\
    \  local i\n  local j\n  local distance\n  local min_distance\n  local min_i\n\
    \  local min_j\n  local min_distance\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n\n}\n\ncandidate() {\n    has_close_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"\
    0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_count=${#elements[@]}\n  local i\n  local\
    \ j\n  local distance\n  local min_distance\n  local min_i\n  local min_j\n  local\
    \ min_distance_index\n  local min_distance_index2\n  local min_distance_index3\n\
    \  local min_distance_index4\n  local min_distance_index5\n  local min_distance_index6\n\
    \  local min_distance_index7\n  local min_distance_index8\n  local min_distance_index9\n\
    \  local min_distance_index10\n  local min_distance_index11\n  local min_distance_index12\n\
    \  local min_distance_index13\n  local min_distance_index14\n  local min_distance_index15\n\
    \  local min_distance_index16\n  local min_distance_index17\n  local min_distance_index18\n\
    \  local min_distance_index19\n  local min_distance_index20\n  local min_distance_index21\n\
    \  local min_distance_index22\n  local min_distance_index23\n  local min_distance_index24\n\
    \  local min_distance_index25\n  local min_distance_index26\n  local min_distance_index27\n\
    \  local min_distance_index28\n  local min_distance_index29\n  local min_distance_index30\n\
    \  local min_distance_index31\n  local min_distance_index32\n  local min_distance_index33\n\
    \  local min_distance_index34\n  local min_distance_index35\n  local min_distance_index36\n\
    \  local min_distance_index37\n  local min_distance_index38\n  local min_distance_index39\n\
    \  local min_distance_index40\n  local min_distance_index41\n  local min_distance_index42\n\
    \  local min_distance_index43\n  local min_distance_index44\n  local min_distance_index45\n\
    \  local min_distance_index46\n  local min_distance_index47\n  local min_distance_index48\n\
    \  local min_distance_index49\n  local min_distance_index50\n  local min_distance_index51\n\
    \  local min_distance_index52\n  local min_distance_index53\n  local min_distance_index54\n\
    \  local min_distance_index55\n  local min_distance_index56\n  local min_distance_index57\n\
    \  local min_distance_index58\n  local min_distance_index59\n  local min_distance_index60\n\
    \  local min_distance_index61\n  local min_distance_index62\n  local min_distance_index63\n\
    \  local min_distance_index64\n  local min_distance_index65\n  local min_distance_index66\n\
    \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local element1\n  local element2\n\
    \  local diff\n  local i\n  local j\n  local count\n  local found\n  local found1\n\
    \  local found2\n  local found3\n  local found4\n  local found5\n  local found6\n\
    \  local found7\n  local found8\n  local found9\n  local found10\n  local found11\n\
    \  local found12\n  local found13\n  local found14\n  local found15\n  local found16\n\
    \  local found17\n  local found18\n  local found19\n  local found20\n  local found21\n\
    \  local found22\n  local found23\n  local found24\n  local found25\n  local found26\n\
    \  local found27\n  local found28\n  local found29\n  local found30\n  local found31\n\
    \  local found32\n  local found33\n  local found34\n  local found35\n  local found36\n\
    \  local found37\n  local found38\n  local found39\n  local found40\n  local found41\n\
    \  local found42\n  local found43\n  local found44\n  local found45\n  local found46\n\
    \  local found47\n  local found48\n  local found49\n  local found50\n  local found51\n\
    \  local found52\n  local found53\n  local found54\n  local found55\n  local found56\n\
    \  local found57\n  local found58\n  local found59\n  local found60\n  local found61\n\
    \  local found62\n  local found63\n  local found64\n  local found65\n  local found66\n\
    \  local found67\n  local found68\n  local found69\n  local found70\n  local found71\n\
    \  local found72\n  local found73\n  local found74\n  local found75\n  local found76\n\
    \  local found77\n  local found78\n  local found79\n  local found80\n  local found81\n\
    \  local found82\n  local found83\n  local found84\n  local found85\n  local found86\n\
    \  local found87\n  local found88\n  local found89\n  local found90\n  local found91\n\
    \  local found92\n  local found93\n  \n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_count=${#elements[@]}\n  local i=0 j=0\n\
    \  while (( i < elements_count )); do\n    (( i++ ))\n    (( j++ ))\n    if [[\
    \ ${elements[i]} -le ${elements[j]} ]]; then\n      if (( ${elements[i]} <= ${threshold}\
    \ && ${elements[j]} <= ${threshold} )) ; then\n        return 0\n      fi\n  \
    \  fi\n  done\n  return 1\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcr9oy6hv.sh: line 16: ((: <= 0.3 &&  <= 0.3 : syntax error: operand
    expected (error token is "<= 0.3 &&  <= 0.3 ")

    '
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local result=0\n  local element\n  local i\n  local j\n\
    \  local distance\n  local min\n  local max\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  local min_distance\n  local max_distance\n  local min_index\n  local max_index\n\
    \  \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff1\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n \
    \ local diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n \
    \ local diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n\
    \  local diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n\
    \  local diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n\
    \  local diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n\
    \  local diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n\
    \  local diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n\
    \  local diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n\
    \  local diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n\
    \  local diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n\
    \  local diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n\
    \  local diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n\
    \  local diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n\
    \  local diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n\
    \  local diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n\
    \  local diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n\
    \  local diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n\
    \  local diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n\
    \  local diff96\n  local diff97\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local result=0\n  local element\n  local element1\n \
    \ local element2\n  local diff\n  local diff1\n  local diff2\n  local diff3\n\
    \  local diff4\n  local diff5\n  local diff6\n  local diff7\n  local diff8\n \
    \ local diff9\n  local diff10\n  local diff11\n  local diff12\n  local diff13\n\
    \  local diff14\n  local diff15\n  local diff16\n  local diff17\n  local diff18\n\
    \  local diff19\n  local diff20\n  local diff21\n  local diff22\n  local diff23\n\
    \  local diff24\n  local diff25\n  local diff26\n  local diff27\n  local diff28\n\
    \  local diff29\n  local diff30\n  local diff31\n  local diff32\n  local diff33\n\
    \  local diff34\n  local diff35\n  local diff36\n  local diff37\n  local diff38\n\
    \  local diff39\n  local diff40\n  local diff41\n  local diff42\n  local diff43\n\
    \  local diff44\n  local diff45\n  local diff46\n  local diff47\n  local diff48\n\
    \  local diff49\n  local diff50\n  local diff51\n  local diff52\n  local diff53\n\
    \  local diff54\n  local diff55\n  local diff56\n  local diff57\n  local diff58\n\
    \  local diff59\n  local diff60\n  local diff61\n  local diff62\n  local diff63\n\
    \  local diff64\n  local diff65\n  local diff66\n  local diff67\n  local diff68\n\
    \  local diff69\n  local diff70\n  local diff71\n  local diff72\n  local diff73\n\
    \  local diff74\n  local diff75\n  local diff76\n  local diff77\n  local diff78\n\
    \  local diff79\n  local diff80\n  local diff81\n  local diff82\n  local diff83\n\
    \  local diff84\n  local diff85\n  local diff86\n  local diff87\n  local diff88\n\
    \  local diff89\n  local diff90\n  local diff91\n  local diff92\n  local diff93\n\
    \  local diff94\n  local diff95\n  local \n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_array=($elements)\n    local max_diff=0\n\
    \    local max_diff_element=\"\"\n    local max_diff_element_index=0\n    local\
    \ max_diff_element_index2=0\n    local max_diff_element_index3=0\n    local max_diff_element_index4=0\n\
    \    local max_diff_element_index5=0\n    local max_diff_element_index6=0\n  \
    \  local max_diff_element_index7=0\n    local max_diff_element_index8=0\n    local\
    \ max_diff_element_index9=0\n    local max_diff_element_index10=0\n    local max_diff_element_index11=0\n\
    \    local max_diff_element_index12=0\n    local max_diff_element_index13=0\n\
    \    local max_diff_element_index14=0\n    local max_diff_element_index15=0\n\
    \    local max_diff_element_index16=0\n    local max_diff_element_index17=0\n\
    \    local max_diff_element_index18=0\n    local max_diff_element_index19=0\n\
    \    local max_diff_element_index20=0\n    local max_diff_element_index21=0\n\
    \    local max_diff_element_index22=0\n    local max_diff_element_index23=0\n\
    \    local max_diff_element_index24=0\n    local max_diff_element_index25=0\n\
    \    local max_diff_element_index26=0\n    local max_diff_element_index27=0\n\
    \    local max_diff_element_index28=0\n    local max_diff_element_index29=0\n\
    \    local max_diff_element_index30=0\n    local max_diff_element_index31=0\n\
    \    local max_diff_element_index32=0\n    local max_diff_element_index33=0\n\
    \    local max_diff_element_index34=0\n    local max_diff_element_index35=0\n\
    \    local max_diff_element_index36=0\n    local max_diff_element_index37=0\n\
    \    local max_diff_element_index38=0\n    local max_diff_element_index39=0\n\
    \    local max_diff_element_index40=0\n    local max_diff_element_index41=0\n\
    \    local max_diff_element_index42=0\n    local max_diff_element_index43=0\n\
    \    local max_diff_element_index44=0\n    local max_diff_element_index45=0\n\
    \    local max_diff_element_index46=0\n    local max_diff_element_index47=0\n\
    \    local max_diff_element_index48=0\n    local max_diff_element_index49=0\n\
    \    local max_diff_element_index50=0\n    local max_diff_element_index51=0\n\
    \    local max_diff_element_index52=0\n    local max_diff_element_index53=0\n\
    \    \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local i\n    local j\n    local diff\n    local\
    \ diff1\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n\
    \    local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n    local diff95\n\
    \    local diff96\n    local diff97\n    local diff\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min_distance\n  local min_i\n  local min_j\n  local min_distance\n  local\
    \ min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_count=${#elements[@]}\n    local i\n\
    \    local j\n    local distance\n    local min_distance\n    local min_element\n\
    \    local min_element_index\n    local min_element_distance\n    local min_element_count\n\
    \    local min_element_index2\n    local min_element_distance2\n    local min_element_count2\n\
    \    local min_element_index3\n    local min_element_distance3\n    local min_element_count3\n\
    \    local min_element_index4\n    local min_element_distance4\n    local min_element_count4\n\
    \    local min_element_index5\n    local min_element_distance5\n    local min_element_count5\n\
    \    local min_element_index6\n    local min_element_distance6\n    local min_element_count6\n\
    \    local min_element_index7\n    local min_element_distance7\n    local min_element_count7\n\
    \    local min_element_index8\n    local min_element_distance8\n    local min_element_count8\n\
    \    local min_element_index9\n    local min_element_distance9\n    local min_element_count9\n\
    \    local min_element_index10\n    local min_element_distance10\n    local min_element_count10\n\
    \    local min_element_index11\n    local min_element_distance11\n    local min_element_count11\n\
    \    local min_element_index12\n    local min_element_distance12\n    local min_element_count12\n\
    \    local min_element_index13\n    local min_element_distance13\n    local min_element_count13\n\
    \    local min_element_index14\n    local min_element_distance14\n    local min_element_count14\n\
    \    local min_element_index15\n    local min_element_distance15\n    local min_element_count15\n\
    \    local min_element_index16\n    local min_element_distance16\n    local min_element_count16\n\
    \    local min_element_index17\n    local min_element_distance17\n    local min_element_count17\n\
    \    local min_element_index18\n    local min_element_distance18\n    local min_element_count18\n\
    \    local min_element_index19\n    local min_element_distance19\n    local min_element_count19\n\
    \    local min_element_index20\n    local min_element_distance20\n    local min_element_count20\n\
    \    local min_element_index21\n    local min_element_distance21\n    local min_element_count21\n\
    \    local min_element_index22\n    local min_element_distance22\n    local min_element_count22\n\
    \    local min_element_index23\n\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_count=${#elements[@]}\n    local i\n\
    \    local j\n    local distance\n    local min_distance\n    local min_element\n\
    \    local min_element_index\n    local min_element_distance\n    local min_element_count\n\
    \    local min_element_index2\n    local min_element_distance2\n    local min_element_count2\n\
    \    local min_element_index3\n    local min_element_distance3\n    local min_element_count3\n\
    \    local min_element_index4\n    local min_element_distance4\n    local min_element_count4\n\
    \    local min_element_index5\n    local min_element_distance5\n    local min_element_count5\n\
    \    local min_element_index6\n    local min_element_distance6\n    local min_element_count6\n\
    \    local min_element_index7\n    local min_element_distance7\n    local min_element_count7\n\
    \    local min_element_index8\n    local min_element_distance8\n    local min_element_count8\n\
    \    local min_element_index9\n    local min_element_distance9\n    local min_element_count9\n\
    \    local min_element_index10\n    local min_element_distance10\n    local min_element_count10\n\
    \    local min_element_index11\n    local min_element_distance11\n    local min_element_count11\n\
    \    local min_element_index12\n    local min_element_distance12\n    local min_element_count12\n\
    \    local min_element_index13\n    local min_element_distance13\n    local min_element_count13\n\
    \    local min_element_index14\n    local min_element_distance14\n    local min_element_count14\n\
    \    local min_element_index15\n    local min_element_distance15\n    local min_element_count15\n\
    \    local min_element_index16\n    local min_element_distance16\n    local min_element_count16\n\
    \    local min_element_index17\n    local min_element_distance17\n    local min_element_count17\n\
    \    local min_element_index18\n    local min_element_distance18\n    local min_element_count18\n\
    \    local min_element_index19\n    local min_element_distance19\n    local min_element_count19\n\
    \    local min_element_index20\n    local min_element_distance20\n    local min_element_count20\n\
    \    local min_element_index21\n    local min_element_distance21\n    local min_element_count21\n\
    \    local min_element_index22\n    local min_element_distance22\n    local min_element_count22\n\
    \    local min_element_index23\n\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local elements_array_length=${#elements_array[@]}\n\
    \  local max_distance=0\n  local max_index=0\n  local max_element=${elements_array[0]}\n\
    \  local max_element_distance=${elements_array[1]}\n  local i\n  local j\n  local\
    \ distance\n  local element_distance\n  local distance_index\n  local distance_index2\n\
    \  local distance_index3\n  local distance_index4\n  local distance_index5\n \
    \ local distance_index6\n  local distance_index7\n  local distance_index8\n  local\
    \ distance_index9\n  local distance_index10\n  local distance_index11\n  local\
    \ distance_index12\n  local distance_index13\n  local distance_index14\n  local\
    \ distance_index15\n  local distance_index16\n  local distance_index17\n  local\
    \ distance_index18\n  local distance_index19\n  local distance_index20\n  local\
    \ distance_index21\n  local distance_index22\n  local distance_index23\n  local\
    \ distance_index24\n  local distance_index25\n  local distance_index26\n  local\
    \ distance_index27\n  local distance_index28\n  local distance_index29\n  local\
    \ distance_index30\n  local distance_index31\n  local distance_index32\n  local\
    \ distance_index33\n  local distance_index34\n  local distance_index35\n  local\
    \ distance_index36\n  local distance_index37\n  local distance_index38\n  local\
    \ distance_index39\n  local distance_index40\n  local distance_index41\n  local\
    \ distance_index42\n  local distance_index43\n  local distance_index44\n  local\
    \ distance_index45\n  local distance_index46\n  local distance_index47\n  local\
    \ distance_index48\n  local distance_index49\n  local distance_index50\n  local\
    \ distance_index51\n  local distance_index52\n  local distance_index53\n  local\
    \ distance_index54\n  local distance_index55\n  local distance_index56\n  local\
    \ distance_index57\n  local distance_index58\n  local distance_index59\n  local\
    \ distance_index60\n  local distance_index61\n  local distance_index62\n  local\
    \ distance_index63\n  local distance_index64\n  local distance_index65\n  local\
    \ distance_index66\n  local distance_index67\n  local distance_index68\n  local\
    \ distance_index69\n  local distance_index70\n  local distance_index71\n}\n\n\
    candidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"\
    1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\
    \ 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min\n  local max\n  local min_index\n  local max_index\n  local min_distance\n\
    \  local max_distance\n  local min_element\n  local max_element\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local \n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local min_diff=$threshold\n\
    \  local min_diff_index\n  local min_diff_index2\n  local min_diff_index3\n  local\
    \ min_diff_index4\n  local min_diff_index5\n  local min_diff_index6\n  local min_diff_index7\n\
    \  local min_diff_index8\n  local min_diff_index9\n  local min_diff_index10\n\
    \  local min_diff_index11\n  local min_diff_index12\n  local min_diff_index13\n\
    \  local min_diff_index14\n  local min_diff_index15\n  local min_diff_index16\n\
    \  local min_diff_index17\n  local min_diff_index18\n  local min_diff_index19\n\
    \  local min_diff_index20\n  local min_diff_index21\n  local min_diff_index22\n\
    \  local min_diff_index23\n  local min_diff_index24\n  local min_diff_index25\n\
    \  local min_diff_index26\n  local min_diff_index27\n  local min_diff_index28\n\
    \  local min_diff_index29\n  local min_diff_index30\n  local min_diff_index31\n\
    \  local min_diff_index32\n  local min_diff_index33\n  local min_diff_index34\n\
    \  local min_diff_index35\n  local min_diff_index36\n  local min_diff_index37\n\
    \  local min_diff_index38\n  local min_diff_index39\n  local min_diff_index40\n\
    \  local min_diff_index41\n  local min_diff_index42\n  local min_diff_index43\n\
    \  local min_diff_index44\n  local min_diff_index45\n  local min_diff_index46\n\
    \  local min_diff_index47\n  local min_diff_index48\n  local min_diff_index49\n\
    \  local min_diff_index50\n  local min_diff_index51\n  local min_diff_index52\n\
    \  local min_diff_index53\n  local min_diff_index54\n  local min_diff_index55\n\
    \  local min_diff_index56\n  local min_diff_index57\n  local min_diff_index58\n\
    \  local min_diff_index59\n  local min_diff_index60\n  local min_diff_index61\n\
    \  local min_diff_index62\n  local min_diff_index63\n  local min_diff_index64\n\
    \  local min_diff_index65\n  local min_diff_index66\n  local min_diff_index67\n\
    \  local min_diff_index68\n  local min_diff_index69\n  \n}\n\ncandidate() {\n\
    \    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_array=($elements)\n    local min_diff=$threshold\n\
    \    local min_diff_index=0\n    local min_diff_index2=0\n    local diff\n   \
    \ local i\n    local j\n    local k\n    local l\n    local m\n    local n\n \
    \   local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n\n}\n\ncandidate() {\n    has_close_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"\
    0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_count=${#elements[@]}\n  local max_diff=0\n\
    \  local max_element\n  local max_element_index\n  local max_element_diff\n  local\
    \ max_element_count\n  local max_element_index2\n  local max_element_diff2\n \
    \ local max_element_count2\n  local max_element_index3\n  local max_element_diff3\n\
    \  local max_element_count3\n  local max_element_index4\n  local max_element_diff4\n\
    \  local max_element_count4\n  local max_element_index5\n  local max_element_diff5\n\
    \  local max_element_count5\n  local max_element_index6\n  local max_element_diff6\n\
    \  local max_element_count6\n  local max_element_index7\n  local max_element_diff7\n\
    \  local max_element_count7\n  local max_element_index8\n  local max_element_diff8\n\
    \  local max_element_count8\n  local max_element_index9\n  local max_element_diff9\n\
    \  local max_element_count9\n  local max_element_index10\n  local max_element_diff10\n\
    \  local max_element_count10\n  local max_element_index11\n  local max_element_diff11\n\
    \  local max_element_count11\n  local max_element_index12\n  local max_element_diff12\n\
    \  local max_element_count12\n  local max_element_index13\n  local max_element_diff13\n\
    \  local max_element_count13\n  local max_element_index14\n  local max_element_diff14\n\
    \  local max_element_count14\n  local max_element_index15\n  local max_element_diff15\n\
    \  local max_element_count15\n  local max_element_index16\n  local max_element_diff16\n\
    \  local max_element_count16\n  local max_element_index17\n  local max_element_diff17\n\
    \  local max_element_count17\n  local max_element_index18\n  local max_element_diff18\n\
    \  local max_element_count18\n  local max_element_index19\n  local max_element_diff19\n\
    \  local max_element_count19\n  local max_element_index20\n  local max_element_diff20\n\
    \  local max_element_count20\n  local max_element_index21\n  local max_element_diff21\n\
    \  local max_element_count21\n  local max_element_index22\n  local max_element_diff22\n\
    \  local max_element_count22\n  local max_element_index23\n  local max_element_diff23\n\
    \  local max_element_\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local min_elements_array=($elements)\n\
    \  local max_elements_array=($elements)\n  local min_elements=$threshold\n  local\
    \ max_elements=$threshold\n  local min_elements_index=0\n  local max_elements_index=0\n\
    \  local min_elements_index2=0\n  local max_elements_index2=0\n  local min_elements_index3=0\n\
    \  local max_elements_index3=0\n  local min_elements_index4=0\n  local max_elements_index4=0\n\
    \  local min_elements_index5=0\n  local max_elements_index5=0\n  local min_elements_index6=0\n\
    \  local max_elements_index6=0\n  local min_elements_index7=0\n  local max_elements_index7=0\n\
    \  local min_elements_index8=0\n  local max_elements_index8=0\n  local min_elements_index9=0\n\
    \  local max_elements_index9=0\n  local min_elements_index10=0\n  local max_elements_index10=0\n\
    \  local min_elements_index11=0\n  local max_elements_index11=0\n  local min_elements_index12=0\n\
    \  local max_elements_index12=0\n  local min_elements_index13=0\n  local max_elements_index13=0\n\
    \  local min_elements_index14=0\n  local max_elements_index14=0\n  local min_elements_index15=0\n\
    \  local max_elements_index15=0\n  local min_elements_index16=0\n  local max_elements_index16=0\n\
    \  local min_elements_index17=0\n  local max_elements_index17=0\n  local min_elements_index18=0\n\
    \  local max_elements_index18=0\n  local min_elements_index19=0\n  local max_elements_index19=0\n\
    \  local min_elements_index20=0\n  local max_elements_index20=0\n  local min_elements_index21=0\n\
    \  local max_elements_index21=0\n  local min_elements_index22=0\n  local max_elements_index22=0\n\
    \  local min_elements_index23=0\n  local max_elements_index23=0\n  local min_elements_index24=0\n\
    \  local max_elements_index24=0\n  local min_elements_index25=0\n  local max_elements_index25=0\n\
    \  local min_element\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local count\n  local i\n  local\
    \ j\n  local diff\n  local diff1\n  local diff2\n  local diff3\n  local diff4\n\
    \  local diff5\n  local diff6\n  local diff7\n  local diff8\n  local diff9\n \
    \ local diff10\n  local diff11\n  local diff12\n  local diff13\n  local diff14\n\
    \  local diff15\n  local diff16\n  local diff17\n  local diff18\n  local diff19\n\
    \  local diff20\n  local diff21\n  local diff22\n  local diff23\n  local diff24\n\
    \  local diff25\n  local diff26\n  local diff27\n  local diff28\n  local diff29\n\
    \  local diff30\n  local diff31\n  local diff32\n  local diff33\n  local diff34\n\
    \  local diff35\n  local diff36\n  local diff37\n  local diff38\n  local diff39\n\
    \  local diff40\n  local diff41\n  local diff42\n  local diff43\n  local diff44\n\
    \  local diff45\n  local diff46\n  local diff47\n  local diff48\n  local diff49\n\
    \  local diff50\n  local diff51\n  local diff52\n  local diff53\n  local diff54\n\
    \  local diff55\n  local diff56\n  local diff57\n  local diff58\n  local diff59\n\
    \  local diff60\n  local diff61\n  local diff62\n  local diff63\n  local diff64\n\
    \  local diff65\n  local diff66\n  local diff67\n  local diff68\n  local diff69\n\
    \  local diff70\n  local diff71\n  local diff72\n  local diff73\n  local diff74\n\
    \  local diff75\n  local diff76\n  local diff77\n  local diff78\n  local diff79\n\
    \  local diff80\n  local diff81\n  local diff82\n  local diff83\n  local diff84\n\
    \  local diff85\n  local diff86\n  local diff87\n  local diff88\n  local diff89\n\
    \  local diff90\n  local diff91\n  local diff92\n  local diff93\n  local diff94\n\
    \  local diff95\n  local diff96\n\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local threshold=$2\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=$(echo $elements | tr \" \" \"\\\
    n\" | sort -n)\n  local close_count=0\n  local close_index=0\n  local close_value\n\
    \  local close_index2\n  local close_value2\n  local close_index3\n  local close_value3\n\
    \  local close_index4\n  local close_value4\n  local close_index5\n  local close_value5\n\
    \  local close_index6\n  local close_value6\n  local close_index7\n  local close_value7\n\
    \  local close_index8\n  local close_value8\n  local close_index9\n  local close_value9\n\
    \  local close_index10\n  local close_value10\n  local close_index11\n  local\
    \ close_value11\n  local close_index12\n  local close_value12\n  local close_index13\n\
    \  local close_value13\n  local close_index14\n  local close_value14\n  local\
    \ close_index15\n  local close_value15\n  local close_index16\n  local close_value16\n\
    \  local close_index17\n  local close_value17\n  local close_index18\n  local\
    \ close_value18\n  local close_index19\n  local close_value19\n  local close_index20\n\
    \  local close_value20\n  local close_index21\n  local close_value21\n  local\
    \ close_index22\n  local close_value22\n  local close_index23\n  local close_value23\n\
    \  local close_index24\n  local close_value24\n  local close_index25\n  local\
    \ close_value25\n  local close_index26\n  local close_value26\n  local close_index27\n\
    \  local close_value27\n  local close_index28\n  local close_value28\n  local\
    \ close_index29\n  local close_value29\n  local close_index30\n  local close_value30\n\
    \  local close_index31\n  local close_value31\n  local close_index32\n  local\
    \ close_value32\n  local close_index33\n  local close_value33\n  local close_index34\n\
    \  local close_value34\n  local close_index35\n  local close_value35\n  local\
    \ close_index36\n  local close_value36\n  local close_index37\n  local close_value37\n\
    \  local close_index38\n  local close_value38\n  local close_index39\n  local\
    \ close_value39\n  local close_index40\n  local close\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=(${elements//,/ })\n  local min_distance=$((${#elements_array[@]}\
    \ - 1))\n  local min_distance_index\n  local min_distance_element\n  local min_distance_element_index\n\
    \  local min_distance_element_value\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_value_index\n  local min_distance_element_value_index\n\
    \  local min_distance_element_\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_array=(${elements// / })\n    local\
    \ min_diff=${threshold}\n    local min_diff_index=0\n    local min_diff_index2=0\n\
    \    local min_diff_index3=0\n    local min_diff_index4=0\n    local min_diff_index5=0\n\
    \    local min_diff_index6=0\n    local min_diff_index7=0\n    local min_diff_index8=0\n\
    \    local min_diff_index9=0\n    local min_diff_index10=0\n    local min_diff_index11=0\n\
    \    local min_diff_index12=0\n    local min_diff_index13=0\n    local min_diff_index14=0\n\
    \    local min_diff_index15=0\n    local min_diff_index16=0\n    local min_diff_index17=0\n\
    \    local min_diff_index18=0\n    local min_diff_index19=0\n    local min_diff_index20=0\n\
    \    local min_diff_index21=0\n    local min_diff_index22=0\n    local min_diff_index23=0\n\
    \    local min_diff_index24=0\n    local min_diff_index25=0\n    local min_diff_index26=0\n\
    \    local min_diff_index27=0\n    local min_diff_index28=0\n    local min_diff_index29=0\n\
    \    local min_diff_index30=0\n    local min_diff_index31=0\n    local min_diff_index32=0\n\
    \    local min_diff_index33=0\n    local min_diff_index34=0\n    local min_diff_index35=0\n\
    \    local min_diff_index36=0\n    local min_diff_index37=0\n    local min_diff_index38=0\n\
    \    local min_diff_index39=0\n    local min_diff_index40=0\n    local min_diff_index41=0\n\
    \    local min_diff_index42=0\n    local min_diff_index43=0\n    local min_diff_index44=0\n\
    \    local min_diff_index45=0\n    local min_diff_index46=0\n    local min_diff_index47=0\n\
    \    local min_diff_index48=0\n    local min_diff_index49=0\n    local min_diff_index50=0\n\
    \    local min_diff_index51=0\n    local min_diff_index52=0\n    local min_diff_index53=0\n\
    \    local min_diff_index54=0\n    local min_diff_index55=0\n    local min_diff_index56=0\n\
    \    local min_diff_index57=0\n    local min_diff_index58=0\n    local min_diff_index59=0\n\
    \    local min_diff_index60=0\n    \n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local min_element=${elements_array[0]}\n\
    \  local max_element=${elements_array[0]}\n  local min_distance=${threshold}\n\
    \  local max_distance=${threshold}\n  local min_distance_index=0\n  local max_distance_index=0\n\
    \  local min_distance_index2=0\n  local max_distance_index2=0\n  local min_distance_index3=0\n\
    \  local max_distance_index3=0\n  local min_distance_index4=0\n  local max_distance_index4=0\n\
    \  local min_distance_index5=0\n  local max_distance_index5=0\n  local min_distance_index6=0\n\
    \  local max_distance_index6=0\n  local min_distance_index7=0\n  local max_distance_index7=0\n\
    \  local min_distance_index8=0\n  local max_distance_index8=0\n  local min_distance_index9=0\n\
    \  local max_distance_index9=0\n  local min_distance_index10=0\n  local max_distance_index10=0\n\
    \  local min_distance_index11=0\n  local max_distance_index11=0\n  local min_distance_index12=0\n\
    \  local max_distance_index12=0\n  local min_distance_index13=0\n  local max_distance_index13=0\n\
    \  local min_distance_index14=0\n  local max_distance_index14=0\n  local min_distance_index15=0\n\
    \  local max_distance_index15=0\n  local min_distance_index16=0\n  local max_distance_index16=0\n\
    \  local min_distance_index17=0\n  local max_distance_index17=0\n  local min_distance_index18=0\n\
    \  local max_distance_index18=0\n  local min_distance_index19=0\n  local max_distance_index19=0\n\
    \  local min_distance_index20=0\n  local max_distance_index20=0\n  local min_distance_index21=0\n\
    \  local max_distance_index21=0\n  local min_distance_index22=0\n  local max_distance_index22=0\n\
    \  local min_distance_index23=0\n  local max_distance_index23=0\n  local min_distance_index24=0\n\
    \  local max_distance_index24=0\n  local min_distance_index25=0\n  local max_distance_index25=0\n\
    \  local min_distance_index26=0\n  local max_distance_index26=0\n  local min_distance_index27=0\n\
    \  local max_distance_index27=0\n  local min_distance_index28=0\n  local max_distance_index28=0\n\
    \  local min_distance_index29\n}\n\ncandidate() {\n    has_close_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"\
    0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted\n  local i\n  local j\n  local\
    \ distance\n  local min_distance\n  local min_element\n  local min_element_index\n\
    \  local max_element\n  local max_element_index\n  local max_distance\n  local\
    \ max_element_index\n  local max_distance_index\n  local max_element_index\n \
    \ local max_element_index\n  local max_distance_index\n  local max_element_index\n\
    \  local max_distance_index\n  local max_element_index\n  local max_distance_index\n\
    \  local max_element_index\n  local max_distance_index\n  local max_element_index\n\
    \  local max_distance_index\n  local max_element_index\n  local max_distance_index\n\
    \  local max_element_index\n  local max_distance_index\n  local max_element_index\n\
    \  local max_distance_index\n  local max_element_index\n  local max_distance_index\n\
    \  local max_element_index\n  local max_distance_index\n  local max_element_index\n\
    \  local max_distance_index\n  local max_element_index\n  local max_distance_index\n\
    \  local max_element_index\n  local max_distance_index\n  local max_element_index\n\
    \  local max_distance_index\n  local max_element_index\n  local max_distance_index\n\
    \  local max_element_index\n  local max_distance_index\n  local max_element_index\n\
    \  local max_distance_index\n  local max_element_index\n  local max_distance_index\n\
    \  local max_element_index\n  local max_distance_index\n  local max_element_index\n\
    \  local max_distance_index\n  local max_element_index\n  local max_distance_index\n\
    \  local max_element_index\n  local max_distance_index\n  local max_element_index\n\
    \  local max_distance_index\n  local max_element_index\n  local max_distance_index\n\
    \  local max_element_index\n  local max_distance_index\n  local max_element_index\n\
    \  local max_distance_index\n  local max_element_index\n  local max_distance_index\n\
    \  local max_element_index\n  local max_distance_index\n  local max_element_index\n\
    \  local max_distance_index\n  local max_element_index\n  local max_distance_index\n\
    \  local max_element_index\n  local max_distance_index\n  local max_element_index\n\
    \  local max_distance_index\n  local max_element_index\n  local max_distance_index\n\
    \  local max_element_index\n  local max_distance_index\n  local max_element_index\n\
    \  local max_distance_index\n  local max_element_index\n  local max_distance_index\n\
    \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local i\n  local j\n  local distance\n  local min_distance\n\
    \  local min_element\n  local min_element_index\n  local max_element\n  local\
    \ max_element_index\n  local max_distance\n  local max_element_distance\n  local\
    \ max_element_index\n  local max_element_distance_index\n  local max_element_distance_index\n\
    \  local max_element_distance_index\n  local max_element_distance_index\n  local\
    \ max_element_distance_index\n  local max_element_distance_index\n  local max_element_distance_index\n\
    \  local max_element_distance_index\n  local max_element_distance_index\n  local\
    \ max_element_distance_index\n  local max_element_distance_index\n  local max_element_distance_index\n\
    \  local max_element_distance_index\n  local max_element_distance_index\n  local\
    \ max_element_distance_index\n  local max_element_distance_index\n  local max_element_distance_index\n\
    \  local max_element_distance_index\n  local max_element_distance_index\n  local\
    \ max_element_distance_index\n  local max_element_distance_index\n  local max_element_distance_index\n\
    \  local max_element_distance_index\n  local max_element_distance_index\n  local\
    \ max_element_distance_index\n  local max_element_distance_index\n  local max_element_distance_index\n\
    \  local max_element_distance_index\n  local max_element_distance_index\n  local\
    \ max_element_distance_index\n  local max_element_distance_index\n  local max_element_distance_index\n\
    \  local max_element_distance_index\n  local max_element_distance_index\n  local\
    \ max_element_distance_index\n  local max_element_distance_index\n  local max_element_distance_index\n\
    \  local max_element_distance_index\n  local max_element_distance_index\n  local\
    \ max_element_distance_index\n  local max_element_distance_index\n  local max_element_distance_index\n\
    \  local max_element_distance_index\n  local max_element_distance_index\n  local\
    \ max_element_distance_index\n  local max_element_distance_index\n  local max_element_distance_index\n\
    \  local max_element_distance_index\n  local max_element_distance_index\n  local\
    \ max_element_distance_index\n  local max_element_distance_index\n  local max_element_distance_index\n\
    \  local max_element_distance_index\n  local max_element_distance_index\n  local\
    \ max_element_distance_index\n  local max_element_distance_index\n  local max_element_distance_index\n\
    \  local max_element_distance_index\n  local max_element_distance_index\n  local\
    \ max_element_distance_index\n  local max_element_distance_index\n  local max_element_distance_index\n\
    \  local max_element_distance_index\n  local max_\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min\n  local max\n  local min_index\n  local max_index\n  local min_index2\n\
    \  local max_index2\n  local min_distance\n  local max_distance\n  local min_distance2\n\
    \  local max_distance2\n  local min_distance3\n  local max_distance3\n  local\
    \ min_distance4\n  local max_distance4\n  local min_distance5\n  local max_distance5\n\
    \  local min_distance6\n  local max_distance6\n  local min_distance7\n  local\
    \ max_distance7\n  local min_distance8\n  local max_distance8\n  local min_distance9\n\
    \  local max_distance9\n  local min_distance10\n  local max_distance10\n  local\
    \ min_distance11\n  local max_distance11\n  local min_distance12\n  local max_distance12\n\
    \  local min_distance13\n  local max_distance13\n  local min_distance14\n  local\
    \ max_distance14\n  local min_distance15\n  local max_distance15\n  local min_distance16\n\
    \  local max_distance16\n  local min_distance17\n  local max_distance17\n  local\
    \ min_distance18\n  local max_distance18\n  local min_distance19\n  local max_distance19\n\
    \  local min_distance20\n  local max_distance20\n  local min_distance21\n  local\
    \ max_distance21\n  local min_distance22\n  local max_distance22\n  local min_distance23\n\
    \  local max_distance23\n  local min_distance24\n  local max_distance24\n  local\
    \ min_distance25\n  local max_distance25\n  local min_distance26\n  local max_distance26\n\
    \  local min_distance27\n  local max_distance27\n  local min_distance28\n  local\
    \ max_distance28\n  local min_distance29\n  local max_distance29\n  local min_distance30\n\
    \  local max_distance30\n  local min_distance31\n  local max_distance31\n  local\
    \ min_distance32\n  local max_distance32\n  local min_distance33\n  local max_distance33\n\
    \  local min_distance34\n  local max_distance34\n  local min_distance35\n  local\
    \ max_distance35\n  local min_distance36\n  local max_distance36\n  local min_distance37\n\
    \  local max_distance37\n  local min_distance38\n  local max_distance38\n\n}\n\
    \ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"\
    1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\
    \ 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    for element in $list; do\n\
    \        if [ \"$element\" -le \"$threshold\" ]; then\n            return 0\n\
    \        fi\n    done\n    return 1\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjpweqrno.sh: line 12: [: 1.0: integer expression expected

    /tmp/tmpjpweqrno.sh: line 12: [: 2.0: integer expression expected

    /tmp/tmpjpweqrno.sh: line 12: [: 3.9: integer expression expected

    /tmp/tmpjpweqrno.sh: line 12: [: 4.0: integer expression expected

    /tmp/tmpjpweqrno.sh: line 12: [: 5.0: integer expression expected

    /tmp/tmpjpweqrno.sh: line 12: [: 2.2: integer expression expected

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_count=${#elements[@]}\n  local i\n  local\
    \ j\n  local distance\n  local min_distance\n  local min_element\n  local min_distance_index\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_value\n  local min_element_count\n\
    \  local min_element_index\n  local min_element_\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local count=0\n    local min\n    local max\n   \
    \ local element\n    local i\n    for element in $elements; do\n        if ((\
    \ count > 0 )); then\n            if (( min > threshold )); then\n           \
    \     min=$element\n            else\n                max=$element\n         \
    \   fi\n        fi\n        (( count++ ))\n    done\n    if (( count > 0 )); then\n\
    \        if (( min > threshold )); then\n            echo \"$min $max\"\n    \
    \    else\n            echo \"$max $min\"\n        fi\n    fi\n}\n\ncandidate()\
    \ {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9esbi604.sh: line 17: ((: 0.3: syntax error: invalid arithmetic
    operator (error token is ".3")

    /tmp/tmp9esbi604.sh: line 17: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp9esbi604.sh: line 17: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp9esbi604.sh: line 17: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp9esbi604.sh: line 17: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp9esbi604.sh: line 26: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local i\n  local j\n  local diff\n  local diff1\n\
    \  local diff2\n  local diff3\n  local diff4\n  local diff5\n  local diff6\n \
    \ local diff7\n  local diff8\n  local diff9\n  local diff10\n  local diff11\n\
    \  local diff12\n  local diff13\n  local diff14\n  local diff15\n  local diff16\n\
    \  local diff17\n  local diff18\n  local diff19\n  local diff20\n  local diff21\n\
    \  local diff22\n  local diff23\n  local diff24\n  local diff25\n  local diff26\n\
    \  local diff27\n  local diff28\n  local diff29\n  local diff30\n  local diff31\n\
    \  local diff32\n  local diff33\n  local diff34\n  local diff35\n  local diff36\n\
    \  local diff37\n  local diff38\n  local diff39\n  local diff40\n  local diff41\n\
    \  local diff42\n  local diff43\n  local diff44\n  local diff45\n  local diff46\n\
    \  local diff47\n  local diff48\n  local diff49\n  local diff50\n  local diff51\n\
    \  local diff52\n  local diff53\n  local diff54\n  local diff55\n  local diff56\n\
    \  local diff57\n  local diff58\n  local diff59\n  local diff60\n  local diff61\n\
    \  local diff62\n  local diff63\n  local diff64\n  local diff65\n  local diff66\n\
    \  local diff67\n  local diff68\n  local diff69\n  local diff70\n  local diff71\n\
    \  local diff72\n  local diff73\n  local diff74\n  local diff75\n  local diff76\n\
    \  local diff77\n  local diff78\n  local diff79\n  local diff80\n  local diff81\n\
    \  local diff82\n  local diff83\n  local diff84\n  local diff85\n  local diff86\n\
    \  local diff87\n  local diff88\n  local diff89\n  local diff90\n  local diff91\n\
    \  local diff92\n  local diff93\n  local diff94\n  local diff95\n  local diff96\n\
    \  local diff97\n  local diff\n}\n\ncandidate() {\n    has_close_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"\
    0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff1\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n \
    \ local diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n \
    \ local diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n\
    \  local diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n\
    \  local diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n\
    \  local diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n\
    \  local diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n\
    \  local diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n\
    \  local diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n\
    \  local diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n\
    \  local diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n\
    \  local diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n\
    \  local diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n\
    \  local diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n\
    \  local diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n\
    \  local diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n\
    \  local diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n\
    \  local diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n\
    \  local diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n\
    \  local diff96\n  local diff97\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local i\n  local j\n  local diff\n  local diff1\n  local\
    \ diff2\n  local diff3\n  local diff4\n  local diff5\n  local diff6\n  local diff7\n\
    \  local diff8\n  local diff9\n  local diff10\n  local diff11\n  local diff12\n\
    \  local diff13\n  local diff14\n  local diff15\n  local diff16\n  local diff17\n\
    \  local diff18\n  local diff19\n  local diff20\n  local diff21\n  local diff22\n\
    \  local diff23\n  local diff24\n  local diff25\n  local diff26\n  local diff27\n\
    \  local diff28\n  local diff29\n  local diff30\n  local diff31\n  local diff32\n\
    \  local diff33\n  local diff34\n  local diff35\n  local diff36\n  local diff37\n\
    \  local diff38\n  local diff39\n  local diff40\n  local diff41\n  local diff42\n\
    \  local diff43\n  local diff44\n  local diff45\n  local diff46\n  local diff47\n\
    \  local diff48\n  local diff49\n  local diff50\n  local diff51\n  local diff52\n\
    \  local diff53\n  local diff54\n  local diff55\n  local diff56\n  local diff57\n\
    \  local diff58\n  local diff59\n  local diff60\n  local diff61\n  local diff62\n\
    \  local diff63\n  local diff64\n  local diff65\n  local diff66\n  local diff67\n\
    \  local diff68\n  local diff69\n  local diff70\n  local diff71\n  local diff72\n\
    \  local diff73\n  local diff74\n  local diff75\n  local diff76\n  local diff77\n\
    \  local diff78\n  local diff79\n  local diff80\n  local diff81\n  local diff82\n\
    \  local diff83\n  local diff84\n  local diff85\n  local diff86\n  local diff87\n\
    \  local diff88\n  local diff89\n  local diff90\n  local diff91\n  local diff92\n\
    \  local diff93\n  local diff94\n  local diff95\n  local diff96\n  local diff97\n\
    \  local diff\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local count=0\n    local element\n    for element\
    \ in $elements; do\n        if (( $(echo \"$element < $threshold\" | bc -l) ));\
    \ then\n            count=$(( $count + 1 ))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local count=0\n  local element\n  local i\n  local j\n\
    \  local distance\n  local min\n  local max\n  local min_index\n  local max_index\n\
    \  local min_index2\n  local max_index2\n  local min_index3\n  local max_index3\n\
    \  local min_index4\n  local max_index4\n  local min_index5\n  local max_index5\n\
    \  local min_index6\n  local max_index6\n  local min_index7\n  local max_index7\n\
    \  local min_index8\n  local max_index8\n  local min_index9\n  local max_index9\n\
    \  local min_index10\n  local max_index10\n  local min_index11\n  local max_index11\n\
    \  local min_index12\n  local max_index12\n  local min_index13\n  local max_index13\n\
    \  local min_index14\n  local max_index14\n  local min_index15\n  local max_index15\n\
    \  local min_index16\n  local max_index16\n  local min_index17\n  local max_index17\n\
    \  local min_index18\n  local max_index18\n  local min_index19\n  local max_index19\n\
    \  local min_index20\n  local max_index20\n  local min_index21\n  local max_index21\n\
    \  local min_index22\n  local max_index22\n  local min_index23\n  local max_index23\n\
    \  local min_index24\n  local max_index24\n  local min_index25\n  local max_index25\n\
    \  local min_index26\n  local max_index26\n  local min_index27\n  local max_index27\n\
    \  local min_index28\n  local max_index28\n  local min_index29\n  local max_index29\n\
    \  local min_index30\n  local max_index30\n  local min_index31\n  local max_index31\n\
    \  local min_index32\n  local max_index32\n  local min_index33\n  local max_index33\n\
    \  local min_index34\n  local max_index34\n  local min_index35\n  local max_index35\n\
    \  local min_index36\n  local max_index36\n  local min_index37\n  local max_index37\n\
    \  local min_index38\n  local max_index38\n  local min_index39\n  local max_index39\n\
    \  local min_index40\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min\n  local max\n  local min_index\n  local max_index\n  local min_distance\n\
    \  local max_distance\n  local min_element\n  local max_element\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_element\n  local max_element\n  local min_distance_index\n  local\
    \ max_distance_index\n  local min_element\n  local max_element\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_element\n  local max_element\n  local\
    \ min_distance_index\n  local max_distance_index\n  local min_element\n  local\
    \ max_element\n  local min_distance_index\n  local max_distance_index\n  local\
    \ min_element\n  local max_element\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_element\n  local max_element\n  local min_distance_index\n  local\
    \ max_distance_index\n  local min_element\n  local max_element\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_element\n  local max_element\n  local\
    \ min_distance_index\n  local max_distance_index\n  local min_element\n  local\
    \ max_element\n  local min_distance_index\n  local max_distance_index\n  local\
    \ min_element\n  local max_element\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_element\n  local max_element\n  local min_distance_index\n  local\
    \ max_distance_index\n  local min_element\n  local max_element\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_element\n  local max_element\n  local\
    \ min_distance_index\n  local max_distance_index\n  local min_element\n  local\
    \ max_element\n  local min_distance_index\n  local max_distance_index\n  local\
    \ min_element\n  local max_element\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_element\n  local max_element\n  local min_distance_index\n  local\
    \ max_distance_index\n  local min_element\n  local max_element\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_element\n  local max_element\n  local\
    \ min_distance_index\n  local max_distance_index\n  local min_element\n  local\
    \ max_element\n  local min_distance_index\n  local max_distance_index\n  local\
    \ min_element\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff1\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n \
    \ local diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n \
    \ local diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n\
    \  local diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n\
    \  local diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n\
    \  local diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n\
    \  local diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n\
    \  local diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n\
    \  local diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n\
    \  local diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n\
    \  local diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n\
    \  local diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n\
    \  local diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n\
    \  local diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n\
    \  local diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n\
    \  local diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n\
    \  local diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n\
    \  local diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n\
    \  local diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n\
    \  local diff96\n  local diff97\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local i\n  local j\n  local distance\n  local min_distance\n\
    \  local min_i\n  local min_j\n  local min_distance\n  local min_distance\n  local\
    \ min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff2\n  local diff3\n  local diff4\n  local diff5\n  local diff6\n \
    \ local diff7\n  local diff8\n  local diff9\n  local diff10\n  local diff11\n\
    \  local diff12\n  local diff13\n  local diff14\n  local diff15\n  local diff16\n\
    \  local diff17\n  local diff18\n  local diff19\n  local diff20\n  local diff21\n\
    \  local diff22\n  local diff23\n  local diff24\n  local diff25\n  local diff26\n\
    \  local diff27\n  local diff28\n  local diff29\n  local diff30\n  local diff31\n\
    \  local diff32\n  local diff33\n  local diff34\n  local diff35\n  local diff36\n\
    \  local diff37\n  local diff38\n  local diff39\n  local diff40\n  local diff41\n\
    \  local diff42\n  local diff43\n  local diff44\n  local diff45\n  local diff46\n\
    \  local diff47\n  local diff48\n  local diff49\n  local diff50\n  local diff51\n\
    \  local diff52\n  local diff53\n  local diff54\n  local diff55\n  local diff56\n\
    \  local diff57\n  local diff58\n  local diff59\n  local diff60\n  local diff61\n\
    \  local diff62\n  local diff63\n  local diff64\n  local diff65\n  local diff66\n\
    \  local diff67\n  local diff68\n  local diff69\n  local diff70\n  local diff71\n\
    \  local diff72\n  local diff73\n  local diff74\n  local diff75\n  local diff76\n\
    \  local diff77\n  local diff78\n  local diff79\n  local diff80\n  local diff81\n\
    \  local diff82\n  local diff83\n  local diff84\n  local diff85\n  local diff86\n\
    \  local diff87\n  local diff88\n  local diff89\n  local diff90\n  local diff91\n\
    \  local diff92\n  local diff93\n  local diff94\n  local diff95\n  local diff96\n\
    \  local diff97\n  local diff98\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local min_distance=1000000000\n\
    \  local min_element\n  local max_element\n  local i\n  local j\n  local distance\n\
    \  local element\n  local min_distance_index\n  local min_distance_index2\n  local\
    \ min_distance_index3\n  local min_distance_index4\n  local min_distance_index5\n\
    \  local min_distance_index6\n  local min_distance_index7\n  local min_distance_index8\n\
    \  local min_distance_index9\n  local min_distance_index10\n  local min_distance_index11\n\
    \  local min_distance_index12\n  local min_distance_index13\n  local min_distance_index14\n\
    \  local min_distance_index15\n  local min_distance_index16\n  local min_distance_index17\n\
    \  local min_distance_index18\n  local min_distance_index19\n  local min_distance_index20\n\
    \  local min_distance_index21\n  local min_distance_index22\n  local min_distance_index23\n\
    \  local min_distance_index24\n  local min_distance_index25\n  local min_distance_index26\n\
    \  local min_distance_index27\n  local min_distance_index28\n  local min_distance_index29\n\
    \  local min_distance_index30\n  local min_distance_index31\n  local min_distance_index32\n\
    \  local min_distance_index33\n  local min_distance_index34\n  local min_distance_index35\n\
    \  local min_distance_index36\n  local min_distance_index37\n  local min_distance_index38\n\
    \  local min_distance_index39\n  local min_distance_index40\n  local min_distance_index41\n\
    \  local min_distance_index42\n  local min_distance_index43\n  local min_distance_index44\n\
    \  local min_distance_index45\n  local min_distance_index46\n  local min_distance_index47\n\
    \  local min_distance_index48\n  local min_distance_index49\n  local min_distance_index50\n\
    \  local min_distance_index51\n  local min_distance_index52\n  local min_distance_index53\n\
    \  local min_distance_index54\n  local min_distance_index55\n  local min_distance_index56\n\
    \  local min_distance_index57\n  local min_distance_index58\n  local min_distance_index59\n\
    \  local min_distance_index60\n  local min_distance_index61\n  local min_distance_index62\n\
    \  local min_distance_index63\n  local min_distance_index64\n  local min_distance_index65\n\
    \  local \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff1\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n \
    \ local diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n \
    \ local diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n\
    \  local diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n\
    \  local diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n\
    \  local diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n\
    \  local diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n\
    \  local diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n\
    \  local diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n\
    \  local diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n\
    \  local diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n\
    \  local diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n\
    \  local diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n\
    \  local diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n\
    \  local diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n\
    \  local diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n\
    \  local diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n\
    \  local diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n\
    \  local diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n\
    \  local diff96\n  local diff97\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_array=($elements)\n    local close=0\n\
    \    local close_index=0\n    local close_value\n    local close_index2\n    local\
    \ close_value2\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local \n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local count=0\n    local min\n    local max\n   \
    \ local element\n    local i\n    for element in $elements; do\n        if ((\
    \ count > 0 )); then\n            if (( min > threshold )); then\n           \
    \     min=$element\n            elif (( max < threshold )); then\n           \
    \     max=$element\n            fi\n        fi\n        (( count++ ))\n    done\n\
    \    if (( count > 0 )); then\n        if (( min > threshold )); then\n      \
    \      min=$min\n        elif (( max < threshold )); then\n            max=$max\n\
    \        fi\n    fi\n    echo $min\n    echo $max\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8j75kdm4.sh: line 17: ((: 0.3: syntax error: invalid arithmetic
    operator (error token is ".3")

    /tmp/tmp8j75kdm4.sh: line 19: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp8j75kdm4.sh: line 17: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp8j75kdm4.sh: line 19: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp8j75kdm4.sh: line 17: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp8j75kdm4.sh: line 19: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp8j75kdm4.sh: line 17: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp8j75kdm4.sh: line 19: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp8j75kdm4.sh: line 17: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp8j75kdm4.sh: line 19: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp8j75kdm4.sh: line 26: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp8j75kdm4.sh: line 28: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local numbers=$1\n\
    \    local threshold=$2\n    local count=0\n    local min\n    local max\n   \
    \ local i\n    local j\n    local diff\n    local diff1\n    local diff2\n   \
    \ local diff3\n    local diff4\n    local diff5\n    local diff6\n    local diff7\n\
    \    local diff8\n    local diff9\n    local diff10\n    local diff11\n    local\
    \ diff12\n    local diff13\n    local diff14\n    local diff15\n    local diff16\n\
    \    local diff17\n    local diff18\n    local diff19\n    local diff20\n    local\
    \ diff21\n    local diff22\n    local diff23\n    local diff24\n    local diff25\n\
    \    local diff26\n    local diff27\n    local diff28\n    local diff29\n    local\
    \ diff30\n    local diff31\n    local diff32\n    local diff33\n    local diff34\n\
    \    local diff35\n    local diff36\n    local diff37\n    local diff38\n    local\
    \ diff39\n    local diff40\n    local diff41\n    local diff42\n    local diff43\n\
    \    local diff44\n    local diff45\n    local diff46\n    local diff47\n    local\
    \ diff48\n    local diff49\n    local diff50\n    local diff51\n    local diff52\n\
    \    local diff53\n    local diff54\n    local diff55\n    local diff56\n    local\
    \ diff57\n    local diff58\n    local diff59\n    local diff60\n    local diff61\n\
    \    local diff62\n    local diff63\n    local diff64\n    local diff65\n    local\
    \ diff66\n    local diff67\n    local diff68\n    local diff69\n    local diff70\n\
    \    local diff71\n    local diff72\n    local diff73\n    local diff74\n    local\
    \ diff75\n    local diff76\n    local diff77\n    local diff78\n    local diff79\n\
    \    local diff80\n    local diff81\n    local diff82\n    local diff83\n    local\
    \ diff84\n    local diff85\n    local diff86\n    local diff87\n    local diff88\n\
    \    local diff89\n    local diff90\n    local diff91\n    local diff92\n    local\
    \ diff93\n    local diff94\n    local diff95\n\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_count=${#elements[@]}\n  local max_distance=0\n\
    \  local max_index=0\n  local max_element=${elements[0]}\n  local max_element_distance=${elements[0]}\n\
    \  local max_element_index=0\n  local max_element_distance_index=0\n  local max_element_distance_index2=0\n\
    \  local max_element_distance_index3=0\n  local max_element_distance_index4=0\n\
    \  local max_element_distance_index5=0\n  local max_element_distance_index6=0\n\
    \  local max_element_distance_index7=0\n  local max_element_distance_index8=0\n\
    \  local max_element_distance_index9=0\n  local max_element_distance_index10=0\n\
    \  local max_element_distance_index11=0\n  local max_element_distance_index12=0\n\
    \  local max_element_distance_index13=0\n  local max_element_distance_index14=0\n\
    \  local max_element_distance_index15=0\n  local max_element_distance_index16=0\n\
    \  local max_element_distance_index17=0\n  local max_element_distance_index18=0\n\
    \  local max_element_distance_index19=0\n  local max_element_distance_index20=0\n\
    \  local max_element_distance_index21=0\n  local max_element_distance_index22=0\n\
    \  local max_element_distance_index23=0\n  local max_element_distance_index24=0\n\
    \  local max_element_distance_index25=0\n  local max_element_distance_index26=0\n\
    \  local max_element_distance_index27=0\n  local max_element_distance_index28=0\n\
    \  local max_element_distance_index29=0\n  local max_element_distance_index30=0\n\
    \  local max_element_distance_index31=0\n  local max_element_distance_index32=0\n\
    \  local max_element_distance_index33=0\n  local max_element_distance_index34=0\n\
    \  local max_element_distance_index35=0\n  local max_element_distance_index36=0\n\
    \  local max_element_distance_index37=0\n  local max_element_distance_index38=0\n\
    \  local max_element_distance_index39=0\n  local max_element_distance_index40=0\n\
    \  local max_element_distance_index41=0\n  local max_element_distance_index42=0\n\
    \  local max_element_distance_index43=0\n  local max_element_distance_index44=0\n\
    \  local max_element_distance_index45=0\n  local max_element_distance_index46=0\n\
    \  local max_element_distance_index47=0\n  local max_element_distance_index48=0\n\
    \  local max_element_distance_index49=0\n  local max_element_distance_index50=0\n\
    \  \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_count=${#elements[@]}\n  local max_diff=0\n\
    \  local max_diff_element=\"\"\n  local max_diff_element_index=0\n  local max_diff_element_count=0\n\
    \  local max_diff_element_count2=0\n  local max_diff_element_count3=0\n  local\
    \ max_diff_element_count4=0\n  local max_diff_element_count5=0\n  local max_diff_element_count6=0\n\
    \  local max_diff_element_count7=0\n  local max_diff_element_count8=0\n  local\
    \ max_diff_element_count9=0\n  local max_diff_element_count10=0\n  local max_diff_element_count11=0\n\
    \  local max_diff_element_count12=0\n  local max_diff_element_count13=0\n  local\
    \ max_diff_element_count14=0\n  local max_diff_element_count15=0\n  local max_diff_element_count16=0\n\
    \  local max_diff_element_count17=0\n  local max_diff_element_count18=0\n  local\
    \ max_diff_element_count19=0\n  local max_diff_element_count20=0\n  local max_diff_element_count21=0\n\
    \  local max_diff_element_count22=0\n  local max_diff_element_count23=0\n  local\
    \ max_diff_element_count24=0\n  local max_diff_element_count25=0\n  local max_diff_element_count26=0\n\
    \  local max_diff_element_count27=0\n  local max_diff_element_count28=0\n  local\
    \ max_diff_element_count29=0\n  local max_diff_element_count30=0\n  local max_diff_element_count31=0\n\
    \  local max_diff_element_count32=0\n  local max_diff_element_count33=0\n  local\
    \ max_diff_element_count34=0\n  local max_diff_element_count35=0\n  local max_diff_element_count36=0\n\
    \  local max_diff_element_count37=0\n  local max_diff_element_count38=0\n  local\
    \ max_diff_element_count39=0\n  local max_diff_element_count40=0\n  local max_diff_element_count41=0\n\
    \  local max_diff_element_count42=0\n  local max_diff_element_count43=0\n  local\
    \ max_diff_element_count44=0\n  local max_diff_element_count45=0\n  local max_diff_element_count46=0\n\
    \  local max_diff_element_count47=0\n  local max_diff_element_count48=0\n  local\
    \ max_diff_element_count49=0\n  local max_diff_element_count50=0\n  local max_diff_element_count51=0\n\
    \  local max_diff_element_count52=0\n\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff1\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n \
    \ local diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n \
    \ local diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n\
    \  local diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n\
    \  local diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n\
    \  local diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n\
    \  local diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n\
    \  local diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n\
    \  local diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n\
    \  local diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n\
    \  local diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n\
    \  local diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n\
    \  local diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n\
    \  local diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n\
    \  local diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n\
    \  local diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n\
    \  local diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n\
    \  local diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n\
    \  local diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n\
    \  local diff96\n  local diff97\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=(${elements// / })\n  local threshold=$2\n\
    \  local min_diff\n  local min_diff_index\n  local i\n  local j\n  local diff\n\
    \  local diff_index\n  local diff_value\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n  local diff_value_index\n  local diff_value_index\n\
    \  local diff_value_index\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local numbers=$1\n\
    \  local threshold=$2\n  local count=0\n  local i\n  for i in $numbers\n  do\n\
    \    ((count++))\n  done\n  if ((count > 1))\n  then\n    local j\n    for j in\
    \ $numbers\n    do\n      ((count--))\n      if ((count < 1))\n      then\n  \
    \      echo \"$j\"\n        return\n      fi\n    done\n  fi\n  local i\n  for\
    \ i in $numbers\n  do\n    local j\n    for j in $numbers\n    do\n      ((count++))\n\
    \      if ((count > 1))\n      then\n        local diff\n        diff=$(( $j -\
    \ $i ))\n        if ((diff < threshold))\n        then\n          echo \"$i $j\"\
    \n          return\n        fi\n      fi\n    done\n  done\n}\n\ncandidate() {\n\
    \    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local result=0\n  local i\n  for i in $elements; do\n\
    \    local j\n    for j in $elements; do\n      if [ $((i-j)) -le $threshold ];\
    \ then\n        result=1\n        break\n      fi\n    done\n    if [ $result\
    \ -eq 1 ]; then\n      break\n    fi\n  done\n  echo $result\n}\n\ncandidate()\
    \ {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp65zh4vc3.sh: line 15: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local result=0\n  local element\n  local i\n  for ((\
    \ i=0; i<${#elements[@]}; i++ )); do\n    element=${elements[i]}\n    if [[ ${element}\
    \ -le ${threshold} ]]; then\n      result=1\n      break\n    fi\n  done\n  return\
    \ ${result}\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxphj9ovl.sh: line 15: [[: 1.0 2.0 3.9 4.0 5.0 2.2: syntax error:
    invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2")

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local count=0\n    local i\n    local j\n    local\
    \ diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n \
    \   local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    for element in $list; do\n\
    \        if [ \"$element\" -gt \"$threshold\" ]; then\n            return 1\n\
    \        fi\n    done\n    return 0\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjm_l1qvw.sh: line 12: [: 1.0: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 2.0: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 3.9: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 4.0: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 5.0: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 2.2: integer expression expected

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=$(IFS=,; echo \"${elements[*]}\"\
    \ | sort)\n  local elements_count=${#elements_sorted}\n  local elements_index=0\n\
    \  local elements_index_previous=0\n  local elements_index_current=0\n  local\
    \ elements_index_next=0\n  local elements_index_next_previous=0\n  local elements_index_currently_checked=0\n\
    \  local elements_index_currently_checked_previous=0\n  local elements_index_currently_checked_next=0\n\
    \  local elements_index_currently_checked_next_previous=0\n  local elements_index_currently_checked_current=0\n\
    \  local elements_index_currently_checked_current_previous=0\n  local elements_index_currently_checked_current_next=0\n\
    \  local elements_index_currently_checked_current_next_previous=0\n  local elements_index_currently_checked_next=0\n\
    \  local elements_index_currently_checked_next_previous=0\n  local elements_index_currently_checked_current=0\n\
    \  local elements_index_currently_checked_current_previous=0\n  local elements_index_currently_checked_current_next=0\n\
    \  local elements_index_currently_checked_current_next_previous=0\n  local elements_index_currently_checked_next=0\n\
    \  local elements_index_currently_checked_next_previous=0\n  local elements_index_currently_checked_current=0\n\
    \  local elements_index_currently_checked_current_previous=0\n  local elements_index_currently_checked_current_next=0\n\
    \  local elements_index_currently_checked_current_next_previous=0\n  local elements_index_currently_checked_next=0\n\
    \  local elements_index_currently_checked_next_previous=0\n  local elements_index_currently_checked_current=0\n\
    \  local elements_index_currently_checked_current_previous=0\n  local elements_index_currently_checked_current_next=0\n\
    \  local elements_index_currently_checked_current_next_previous=0\n  local elements_index_currently_checked_next=0\n\
    \  local elements_index_currently_checked_next_previous=0\n  local elements_index_currently_checked_current=0\n\
    \  local elements_index_currently_checked_current_previous=0\n  local elements_index_currently_checked_current_next=0\n\
    \  local elements_index_currently_checked_current_next_previous=0\n  \n}\n\ncandidate()\
    \ {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local max_diff=0\n\
    \  local max_diff_element=0\n  local max_diff_element_index=0\n  local max_diff_element_index2=0\n\
    \  local max_diff_element_index3=0\n  local max_diff_element_index4=0\n  local\
    \ max_diff_element_index5=0\n  local max_diff_element_index6=0\n  local max_diff_element_index7=0\n\
    \  local max_diff_element_index8=0\n  local max_diff_element_index9=0\n  local\
    \ max_diff_element_index10=0\n  local max_diff_element_index11=0\n  local max_diff_element_index12=0\n\
    \  local max_diff_element_index13=0\n  local max_diff_element_index14=0\n  local\
    \ max_diff_element_index15=0\n  local max_diff_element_index16=0\n  local max_diff_element_index17=0\n\
    \  local max_diff_element_index18=0\n  local max_diff_element_index19=0\n  local\
    \ max_diff_element_index20=0\n  local max_diff_element_index21=0\n  local max_diff_element_index22=0\n\
    \  local max_diff_element_index23=0\n  local max_diff_element_index24=0\n  local\
    \ max_diff_element_index25=0\n  local max_diff_element_index26=0\n  local max_diff_element_index27=0\n\
    \  local max_diff_element_index28=0\n  local max_diff_element_index29=0\n  local\
    \ max_diff_element_index30=0\n  local max_diff_element_index31=0\n  local max_diff_element_index32=0\n\
    \  local max_diff_element_index33=0\n  local max_diff_element_index34=0\n  local\
    \ max_diff_element_index35=0\n  local max_diff_element_index36=0\n  local max_diff_element_index37=0\n\
    \  local max_diff_element_index38=0\n  local max_diff_element_index39=0\n  local\
    \ max_diff_element_index40=0\n  local max_diff_element_index41=0\n  local max_diff_element_index42=0\n\
    \  local max_diff_element_index43=0\n  local max_diff_element_index44=0\n  local\
    \ max_diff_element_index45=0\n  local max_diff_element_index46=0\n  local max_diff_element_index47=0\n\
    \  local max_diff_element_index48=0\n  local max_diff_element_index49=0\n  local\
    \ max_diff_element_index50=0\n  local max_diff_element_index51=0\n  local max_diff_element_index52=0\n\
    \  local max_diff_element_index53=0\n  \n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local min_distance=$threshold\n\
    \  local min_element_index\n  local max_element_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local i\n  local j\n  local distance\n  local element_index\n\
    \  local distance_index\n  local min_element\n  local max_element\n  local min_element_index\n\
    \  local max_element_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance\n  local max_distance\n  local min_element_value\n  local\
    \ max_element_value\n  local min_distance_value\n  local max_distance_value\n\
    \  local min_element_value_index\n  local max_element_value_index\n  local min_distance_value_index\n\
    \  local max_distance_value_index\n  local min_element_value_index\n  local max_element_value_index\n\
    \  local min_distance_value_index\n  local max_distance_value_index\n  local min_element_value\n\
    \  local max_element_value\n  local min_distance_value\n  local max_distance_value\n\
    \  local min_element_value_index\n  local max_element_value_index\n  local min_distance_value_index\n\
    \  local max_distance_value_index\n  local min_element_value_index\n  local max_element_value_index\n\
    \  local min_distance_value_index\n  local max_distance_value_index\n  local min_element_value\n\
    \  local max_element_value\n  local min_distance_value\n  local max_distance_value\n\
    \  local min_element_value_index\n  local max_element_value_index\n  local min_distance_value_index\n\
    \  local max_distance_value_index\n  local min_element_value_index\n  local max_element_value_index\n\
    \  local min_distance_value_index\n  local max_distance_value_index\n  local min_element_value\n\
    \  local max_element_value\n  local min_distance_value\n  local max_distance_value\n\
    \  local min_element_value_index\n  local max_element_value_index\n  local min_distance_value_index\n\
    \  local max_distance_value_index\n  local min_element_value_index\n  local max_element_value_index\n\
    \  local min_distance_value_index\n  local max_distance_value_index\n  local min_element_value_index\n\
    \  local max_element_value_index\n  local min_distance_value_index\n  local max_distance_value_index\n\
    \  local min_element_value_index\n  local max_element_value_index\n  local min_distance_value_index\n\
    \  local max_distance_value_index\n  local min_element_value_index\n  local max_element_value_index\n\
    \  local min_\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local element\n  local diff\n  local i\n  local j\n \
    \ local k\n  local diff1\n  local diff2\n  local diff3\n  local diff4\n  local\
    \ diff5\n  local diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n\
    \  local diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n\
    \  local diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n\
    \  local diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n\
    \  local diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n\
    \  local diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n\
    \  local diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n\
    \  local diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n\
    \  local diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n\
    \  local diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n\
    \  local diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n\
    \  local diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n\
    \  local diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n\
    \  local diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n\
    \  local diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n\
    \  local diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n\
    \  local diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n\
    \  local diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n\
    \  local diff96\n\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local i\n    local j\n    local diff\n    local\
    \ diff1\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n\
    \    local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n    local diff95\n\
    \    local diff96\n    local diff97\n    local diff\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_count=${#elements[@]}\n  local max_distance=0\n\
    \  local max_index=0\n  local max_element=${elements[0]}\n  local max_element_distance=${elements[0]}\n\
    \  local max_element_index=0\n  local max_element_distance_index=0\n  local max_element_distance_index2=0\n\
    \  local max_element_distance_index3=0\n  local max_element_distance_index4=0\n\
    \  local max_element_distance_index5=0\n  local max_element_distance_index6=0\n\
    \  local max_element_distance_index7=0\n  local max_element_distance_index8=0\n\
    \  local max_element_distance_index9=0\n  local max_element_distance_index10=0\n\
    \  local max_element_distance_index11=0\n  local max_element_distance_index12=0\n\
    \  local max_element_distance_index13=0\n  local max_element_distance_index14=0\n\
    \  local max_element_distance_index15=0\n  local max_element_distance_index16=0\n\
    \  local max_element_distance_index17=0\n  local max_element_distance_index18=0\n\
    \  local max_element_distance_index19=0\n  local max_element_distance_index20=0\n\
    \  local max_element_distance_index21=0\n  local max_element_distance_index22=0\n\
    \  local max_element_distance_index23=0\n  local max_element_distance_index24=0\n\
    \  local max_element_distance_index25=0\n  local max_element_distance_index26=0\n\
    \  local max_element_distance_index27=0\n  local max_element_distance_index28=0\n\
    \  local max_element_distance_index29=0\n  local max_element_distance_index30=0\n\
    \  local max_element_distance_index31=0\n  local max_element_distance_index32=0\n\
    \  local max_element_distance_index33=0\n  local max_element_distance_index34=0\n\
    \  local max_element_distance_index35=0\n  local max_element_distance_index36=0\n\
    \  local max_element_distance_index37=0\n  local max_element_distance_index38=0\n\
    \  local max_element_distance_index39=0\n  local max_element_distance_index40=0\n\
    \  local max_element_distance_index41=0\n  local max_element_distance_index42=0\n\
    \  local max_element_distance_index43=0\n  local max_element_distance_index44=0\n\
    \  local max_element_distance_index45=0\n  local max_element_distance_index46=0\n\
    \  local max_element_distance_index47=0\n  local max_element_distance_index48=0\n\
    \  local max_element_distance_index49=0\n  local max_element_distance_index50=0\n\
    \  \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=(${elements//,/ })\n  local diff=0\n\
    \  local i\n  local j\n  local k\n  local diff\n  local diff1\n  local diff2\n\
    \  local diff3\n  local diff4\n  local diff5\n  local diff6\n  local diff7\n \
    \ local diff8\n  local diff9\n  local diff10\n  local diff11\n  local diff12\n\
    \  local diff13\n  local diff14\n  local diff15\n  local diff16\n  local diff17\n\
    \  local diff18\n  local diff19\n  local diff20\n  local diff21\n  local diff22\n\
    \  local diff23\n  local diff24\n  local diff25\n  local diff26\n  local diff27\n\
    \  local diff28\n  local diff29\n  local diff30\n  local diff31\n  local diff32\n\
    \  local diff33\n  local diff34\n  local diff35\n  local diff36\n  local diff37\n\
    \  local diff38\n  local diff39\n  local diff40\n  local diff41\n  local diff42\n\
    \  local diff43\n  local diff44\n  local diff45\n  local diff46\n  local diff47\n\
    \  local diff48\n  local diff49\n  local diff50\n  local diff51\n  local diff52\n\
    \  local diff53\n  local diff54\n  local diff55\n  local diff56\n  local diff57\n\
    \  local diff58\n  local diff59\n  local diff60\n  local diff61\n  local diff62\n\
    \  local diff63\n  local diff64\n  local diff65\n  local diff66\n  local diff67\n\
    \  local diff68\n  local diff69\n  local diff70\n  local diff71\n  local diff72\n\
    \  local diff73\n  local diff74\n  local diff75\n  local diff76\n  local diff77\n\
    \  local diff78\n  local diff79\n  local diff80\n  local diff81\n  local diff82\n\
    \  local diff83\n  local diff84\n  local diff85\n  local diff86\n  local diff87\n\
    \  local diff88\n  local diff89\n  local diff90\n  local diff91\n  local diff92\n\
    \  local diff93\n  \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min\n  local max\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_index\n  local max_index\n  local min_index\n\
    \  \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local max_diff=0\n\
    \  local max_index=0\n  local max_diff_index=0\n  local max_diff_element=0\n \
    \ local max_diff_element_index=0\n  local max_diff_element_count=0\n  local max_diff_element_count_index=0\n\
    \  local max_diff_element_count2=0\n  local max_diff_element_count2_index=0\n\
    \  local max_diff_element_count3=0\n  local max_diff_element_count3_index=0\n\
    \  local max_diff_element_count4=0\n  local max_diff_element_count4_index=0\n\
    \  local max_diff_element_count5=0\n  local max_diff_element_count5_index=0\n\
    \  local max_diff_element_count6=0\n  local max_diff_element_count6_index=0\n\
    \  local max_diff_element_count7=0\n  local max_diff_element_count7_index=0\n\
    \  local max_diff_element_count8=0\n  local max_diff_element_count8_index=0\n\
    \  local max_diff_element_count9=0\n  local max_diff_element_count9_index=0\n\
    \  local max_diff_element_count10=0\n  local max_diff_element_count10_index=0\n\
    \  local max_diff_element_count11=0\n  local max_diff_element_count11_index=0\n\
    \  local max_diff_element_count12=0\n  local max_diff_element_count12_index=0\n\
    \  local max_diff_element_count13=0\n  local max_diff_element_count13_index=0\n\
    \  local max_diff_element_count14=0\n  local max_diff_element_count14_index=0\n\
    \  local max_diff_element_count15=0\n  local max_diff_element_count15_index=0\n\
    \  local max_diff_element_count16=0\n  local max_diff_element_count16_index=0\n\
    \  local max_diff_element_count17=0\n  local max_diff_element_count17_index=0\n\
    \  local max_diff_element_count18=0\n  local max_diff_element_count18_index=0\n\
    \  local max_diff_element_count19=0\n  local max_diff_element_count19_index=0\n\
    \  local max_diff_element_count20=0\n  local max_diff_element_count20_index=0\n\
    \  local max_diff_element_count21=0\n  local max_diff_element_count21_index=0\n\
    \  local max_diff_element_count22=0\n  local max_diff_element_count22_index=0\n\
    \  local max_diff_element_count23=0\n  local max_diff_element_count23_index=0\n\
    \  local max_diff_element_count24=0\n  local max_diff_element_count24_index=0\n\
    \  local \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local numbers=$1\n\
    \    local threshold=$2\n    local close\n    local i\n    local j\n    local\
    \ diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n \
    \   local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff97\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local count=0\n  local element\n  local element1\n  local\
    \ element2\n  local diff\n  local diff1\n  local diff2\n  local diff3\n  local\
    \ diff4\n  local diff5\n  local diff6\n  local diff7\n  local diff8\n  local diff9\n\
    \  local diff10\n  local diff11\n  local diff12\n  local diff13\n  local diff14\n\
    \  local diff15\n  local diff16\n  local diff17\n  local diff18\n  local diff19\n\
    \  local diff20\n  local diff21\n  local diff22\n  local diff23\n  local diff24\n\
    \  local diff25\n  local diff26\n  local diff27\n  local diff28\n  local diff29\n\
    \  local diff30\n  local diff31\n  local diff32\n  local diff33\n  local diff34\n\
    \  local diff35\n  local diff36\n  local diff37\n  local diff38\n  local diff39\n\
    \  local diff40\n  local diff41\n  local diff42\n  local diff43\n  local diff44\n\
    \  local diff45\n  local diff46\n  local diff47\n  local diff48\n  local diff49\n\
    \  local diff50\n  local diff51\n  local diff52\n  local diff53\n  local diff54\n\
    \  local diff55\n  local diff56\n  local diff57\n  local diff58\n  local diff59\n\
    \  local diff60\n  local diff61\n  local diff62\n  local diff63\n  local diff64\n\
    \  local diff65\n  local diff66\n  local diff67\n  local diff68\n  local diff69\n\
    \  local diff70\n  local diff71\n  local diff72\n  local diff73\n  local diff74\n\
    \  local diff75\n  local diff76\n  local diff77\n  local diff78\n  local diff79\n\
    \  local diff80\n  local diff81\n  local diff82\n  local diff83\n  local diff84\n\
    \  local diff85\n  local diff86\n  local diff87\n  local diff88\n  local diff89\n\
    \  local diff90\n  local diff91\n  local diff92\n  local diff93\n  local diff94\n\
    \  local diff95\n  local \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local result=0\n    local element\n    for element\
    \ in $elements; do\n        if (( $(echo \"$element - $threshold\" | bc -l) >\
    \  $(echo \"$element + $threshold\" | bc -l) )) ; then\n            result=1\n\
    \            break\n        fi\n    done\n    return $result\n}\n\ncandidate()\
    \ {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8g1zq3zb.sh: line 13: ((: .7 >  1.3 : syntax error: operand expected
    (error token is ".7 >  1.3 ")

    /tmp/tmp8g1zq3zb.sh: line 13: ((: 1.7 >  2.3 : syntax error: invalid arithmetic
    operator (error token is ".7 >  2.3 ")

    /tmp/tmp8g1zq3zb.sh: line 13: ((: 3.6 >  4.2 : syntax error: invalid arithmetic
    operator (error token is ".6 >  4.2 ")

    /tmp/tmp8g1zq3zb.sh: line 13: ((: 3.7 >  4.3 : syntax error: invalid arithmetic
    operator (error token is ".7 >  4.3 ")

    /tmp/tmp8g1zq3zb.sh: line 13: ((: 4.7 >  5.3 : syntax error: invalid arithmetic
    operator (error token is ".7 >  5.3 ")

    /tmp/tmp8g1zq3zb.sh: line 13: ((: 1.9 >  2.5 : syntax error: invalid arithmetic
    operator (error token is ".9 >  2.5 ")

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_sorted=$(echo $elements | tr \" \"\
    \ \"\\n\" | sort -n)\n    local elements_sorted_length=$(echo $elements_sorted\
    \ | wc -l)\n    local elements_sorted_first=$(echo $elements_sorted | head -n\
    \ 1)\n    local elements_sorted_last=$(echo $elements_sorted | tail -n 1)\n  \
    \  local elements_sorted_first_length=$(echo $elements_sorted_first | wc -l)\n\
    \    local elements_sorted_last_length=$(echo $elements_sorted_last | wc -l)\n\
    \    local elements_sorted_first_element=$(echo $elements_sorted_first | cut -d\
    \ \" \" -f 1)\n    local elements_sorted_last_element=$(echo $elements_sorted_last\
    \ | cut -d \" \" -f 1)\n    local elements_sorted_first_element_length=$(echo\
    \ $elements_sorted_first_element | wc -l)\n    local elements_sorted_last_element_length=$(echo\
    \ $elements_sorted_last_element | wc -l)\n    local elements_sorted_first_element_element=$(echo\
    \ $elements_sorted_first_element | cut -d \" \" -f 1)\n    local elements_sorted_last_element_element=$(echo\
    \ $elements_sorted_last_element | cut -d \" \" -f 1)\n    local elements_sorted_first_element_element_length=$(echo\
    \ $elements_sorted_first_element_element | wc -l)\n    local elements_sorted_last_element_element_length=$(echo\
    \ $elements_sorted_last_element_element | wc -l)\n    local elements_sorted_first_element_element_element=$(echo\
    \ $elements_sorted_first_element_element | cut -d \" \" -f 1)\n    local elements_sorted_last_element_element_element=$(echo\
    \ $elements_sorted_last_element_element | cut -d \" \" -f 1)\n    local elements_sorted_first_element_element_element_length=$(echo\
    \ $elements_sorted_first_element_element_element | wc -l)\n    local elements_sorted_last_element_element_element_length=$(echo\
    \ $elements_sorted_last_element_element_element | wc -l)\n    local elements_sorted_first_element_element_element_element=$(echo\
    \ $elements_sorted_first_element_element_element | cut -d \" \" -f 1)\n    local\
    \ elements_sorted_last_element_element_element_element=$(echo $elements_sorted_last_element_element_element\
    \ | cut -d \" \" -f 1)\n    local elements_sorted_first_element_element_element_element_length=$(echo\
    \ $elements_sorted_first_element_element_element_element | wc -l)\n    local elements_sorted_last_element_element_element_element_length=$(echo\
    \ $elements_sorted_last_element_element_element_element | wc -l)\n    local elements_sorted_first_element_element_element_\n\
    }\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    for element in $list; do\n\
    \        if (( $(echo \"$element - $threshold < 0\" | bc -l) )); then\n      \
    \      return 0\n        fi\n    done\n    return 1\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=(${elements// / })\n  local threshold=$2\n\
    \  local i\n  local j\n  local min_diff\n  local min_diff_index\n  local min_diff_index2\n\
    \  local min_diff_index3\n  local min_diff_index4\n  local min_diff_index5\n \
    \ local min_diff_index6\n  local min_diff_index7\n  local min_diff_index8\n  local\
    \ min_diff_index9\n  local min_diff_index10\n  local min_diff_index11\n  local\
    \ min_diff_index12\n  local min_diff_index13\n  local min_diff_index14\n  local\
    \ min_diff_index15\n  local min_diff_index16\n  local min_diff_index17\n  local\
    \ min_diff_index18\n  local min_diff_index19\n  local min_diff_index20\n  local\
    \ min_diff_index21\n  local min_diff_index22\n  local min_diff_index23\n  local\
    \ min_diff_index24\n  local min_diff_index25\n  local min_diff_index26\n  local\
    \ min_diff_index27\n  local min_diff_index28\n  local min_diff_index29\n  local\
    \ min_diff_index30\n  local min_diff_index31\n  local min_diff_index32\n  local\
    \ min_diff_index33\n  local min_diff_index34\n  local min_diff_index35\n  local\
    \ min_diff_index36\n  local min_diff_index37\n  local min_diff_index38\n  local\
    \ min_diff_index39\n  local min_diff_index40\n  local min_diff_index41\n  local\
    \ min_diff_index42\n  local min_diff_index43\n  local min_diff_index44\n  local\
    \ min_diff_index45\n  local min_diff_index46\n  local min_diff_index47\n  local\
    \ min_diff_index48\n  local min_diff_index49\n  local min_diff_index50\n  local\
    \ min_diff_index51\n  local min_diff_index52\n  local min_diff_index53\n  local\
    \ min_diff_index54\n  local min_diff_index55\n  local min_diff_index56\n  local\
    \ min_diff_index57\n  local min_diff_index58\n  local min_diff_index59\n  local\
    \ min_diff_index60\n  local min_diff_index61\n  local min_diff_index62\n  local\
    \ min_diff_index63\n  local min_diff_index64\n  local min_diff_index65\n  local\
    \ min_diff_index66\n  local min_diff_index67\n  \n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_count=${#elements[@]}\n    local threshold=$2\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local elements_count=${#elements[@]}\n    local elements_count=${#elements[@]}\n\
    \    local \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local element\n    local i\n    local j\n    local\
    \ diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n \
    \   local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff97\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local count=0\n  local element\n  local element1\n  local\
    \ element2\n  local diff\n  local diff1\n  local diff2\n  local diff3\n  local\
    \ diff4\n  local diff5\n  local diff6\n  local diff7\n  local diff8\n  local diff9\n\
    \  local diff10\n  local diff11\n  local diff12\n  local diff13\n  local diff14\n\
    \  local diff15\n  local diff16\n  local diff17\n  local diff18\n  local diff19\n\
    \  local diff20\n  local diff21\n  local diff22\n  local diff23\n  local diff24\n\
    \  local diff25\n  local diff26\n  local diff27\n  local diff28\n  local diff29\n\
    \  local diff30\n  local diff31\n  local diff32\n  local diff33\n  local diff34\n\
    \  local diff35\n  local diff36\n  local diff37\n  local diff38\n  local diff39\n\
    \  local diff40\n  local diff41\n  local diff42\n  local diff43\n  local diff44\n\
    \  local diff45\n  local diff46\n  local diff47\n  local diff48\n  local diff49\n\
    \  local diff50\n  local diff51\n  local diff52\n  local diff53\n  local diff54\n\
    \  local diff55\n  local diff56\n  local diff57\n  local diff58\n  local diff59\n\
    \  local diff60\n  local diff61\n  local diff62\n  local diff63\n  local diff64\n\
    \  local diff65\n  local diff66\n  local diff67\n  local diff68\n  local diff69\n\
    \  local diff70\n  local diff71\n  local diff72\n  local diff73\n  local diff74\n\
    \  local diff75\n  local diff76\n  local diff77\n  local diff78\n  local diff79\n\
    \  local diff80\n  local diff81\n  local diff82\n  local diff83\n  local diff84\n\
    \  local diff85\n  local diff86\n  local diff87\n  local diff88\n  local diff89\n\
    \  local diff90\n  local diff91\n  local diff92\n  local diff93\n  local diff94\n\
    \  local diff95\n  local \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local i\n    local j\n    local distance\n    local\
    \ min_distance\n    local min_i\n    local min_j\n    local min_distance\n   \
    \ local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_\n}\n\ncandidate()\
    \ {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_count=${#elements[@]}\n    local i\n\
    \    local j\n    local distance\n    local min_index\n    local min_distance\n\
    \    local min_element\n    local min_element_index\n    local min_element_distance\n\
    \    local min_element_count\n    local min_element_index2\n    local min_element_distance2\n\
    \    local min_element_count2\n    local min_element_index3\n    local min_element_distance3\n\
    \    local min_element_count3\n    local min_element_index4\n    local min_element_distance4\n\
    \    local min_element_count4\n    local min_element_index5\n    local min_element_distance5\n\
    \    local min_element_count5\n    local min_element_index6\n    local min_element_distance6\n\
    \    local min_element_count6\n    local min_element_index7\n    local min_element_distance7\n\
    \    local min_element_count7\n    local min_element_index8\n    local min_element_distance8\n\
    \    local min_element_count8\n    local min_element_index9\n    local min_element_distance9\n\
    \    local min_element_count9\n    local min_element_index10\n    local min_element_distance10\n\
    \    local min_element_count10\n    local min_element_index11\n    local min_element_distance11\n\
    \    local min_element_count11\n    local min_element_index12\n    local min_element_distance12\n\
    \    local min_element_count12\n    local min_element_index13\n    local min_element_distance13\n\
    \    local min_element_count13\n    local min_element_index14\n    local min_element_distance14\n\
    \    local min_element_count14\n    local min_element_index15\n    local min_element_distance15\n\
    \    local min_element_count15\n    local min_element_index16\n    local min_element_distance16\n\
    \    local min_element_count16\n    local min_element_index17\n    local min_element_distance17\n\
    \    local min_element_count17\n    local min_element_index18\n    local min_element_distance18\n\
    \    local min_element_count18\n    local min_element_index19\n    local min_element_distance19\n\
    \    local min_element_count19\n    local min_element_index20\n    local min_element_distance20\n\
    \    local min_element_count20\n    local min_element_index21\n    local min_element_distance21\n\
    \    local min_element_count21\n    local min_element_index22\n    local min_element_distance22\n\
    \    local min_element_count22\n    local \n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_count=${#elements[@]}\n    local i\n\
    \    local j\n    local distance\n    local min_distance\n    local min_i\n  \
    \  local min_j\n    local min_distance\n    local min_distance_index\n    local\
    \ min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \    local min_distance_index\n    local min_distance_index\n    local min_distance_index\n\
    \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_count=${#elements[@]}\n    local threshold=$2\n\
    \    local i\n    local j\n    local distance\n    local min_distance\n    local\
    \ min_i\n    local min_j\n    local min_distance\n    local min_distance_index\n\
    \    local min_distance_element\n    local min_distance_element_index\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_element_count\n    local\
    \ min_distance_element_count\n    local min_distance_\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff2\n  local diff3\n  local diff4\n  local diff5\n  local diff6\n \
    \ local diff7\n  local diff8\n  local diff9\n  local diff10\n  local diff11\n\
    \  local diff12\n  local diff13\n  local diff14\n  local diff15\n  local diff16\n\
    \  local diff17\n  local diff18\n  local diff19\n  local diff20\n  local diff21\n\
    \  local diff22\n  local diff23\n  local diff24\n  local diff25\n  local diff26\n\
    \  local diff27\n  local diff28\n  local diff29\n  local diff30\n  local diff31\n\
    \  local diff32\n  local diff33\n  local diff34\n  local diff35\n  local diff36\n\
    \  local diff37\n  local diff38\n  local diff39\n  local diff40\n  local diff41\n\
    \  local diff42\n  local diff43\n  local diff44\n  local diff45\n  local diff46\n\
    \  local diff47\n  local diff48\n  local diff49\n  local diff50\n  local diff51\n\
    \  local diff52\n  local diff53\n  local diff54\n  local diff55\n  local diff56\n\
    \  local diff57\n  local diff58\n  local diff59\n  local diff60\n  local diff61\n\
    \  local diff62\n  local diff63\n  local diff64\n  local diff65\n  local diff66\n\
    \  local diff67\n  local diff68\n  local diff69\n  local diff70\n  local diff71\n\
    \  local diff72\n  local diff73\n  local diff74\n  local diff75\n  local diff76\n\
    \  local diff77\n  local diff78\n  local diff79\n  local diff80\n  local diff81\n\
    \  local diff82\n  local diff83\n  local diff84\n  local diff85\n  local diff86\n\
    \  local diff87\n  local diff88\n  local diff89\n  local diff90\n  local diff91\n\
    \  local diff92\n  local diff93\n  local diff94\n  local diff95\n  local diff96\n\
    \  local diff97\n  local diff98\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local count=0\n    local element\n    for element\
    \ in $elements; do\n        if (( $(echo \"$element - $threshold < $element\"\
    \ | bc -l) )); then\n            (( count++ ))\n        fi\n    done\n    (( count\
    \ > 0 ))\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff1\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n \
    \ local diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n \
    \ local diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n\
    \  local diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n\
    \  local diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n\
    \  local diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n\
    \  local diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n\
    \  local diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n\
    \  local diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n\
    \  local diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n\
    \  local diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n\
    \  local diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n\
    \  local diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n\
    \  local diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n\
    \  local diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n\
    \  local diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n\
    \  local diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n\
    \  local diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n\
    \  local diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n\
    \  local diff96\n  local diff97\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    local i\n    local j\n  \
    \  local distance\n    local min\n    local max\n    local min_index\n    local\
    \ max_index\n    local min_index2\n    local max_index2\n    local min_index3\n\
    \    local max_index3\n    local min_index4\n    local max_index4\n    local min_index5\n\
    \    local max_index5\n    local min_index6\n    local max_index6\n    local min_index7\n\
    \    local max_index7\n    local min_index8\n    local max_index8\n    local min_index9\n\
    \    local max_index9\n    local min_index10\n    local max_index10\n    local\
    \ min_index11\n    local max_index11\n    local min_index12\n    local max_index12\n\
    \    local min_index13\n    local max_index13\n    local min_index14\n    local\
    \ max_index14\n    local min_index15\n    local max_index15\n    local min_index16\n\
    \    local max_index16\n    local min_index17\n    local max_index17\n    local\
    \ min_index18\n    local max_index18\n    local min_index19\n    local max_index19\n\
    \    local min_index20\n    local max_index20\n    local min_index21\n    local\
    \ max_index21\n    local min_index22\n    local max_index22\n    local min_index23\n\
    \    local max_index23\n    local min_index24\n    local max_index24\n    local\
    \ min_index25\n    local max_index25\n    local min_index26\n    local max_index26\n\
    \    local min_index27\n    local max_index27\n    local min_index28\n    local\
    \ max_index28\n    local min_index29\n    local max_index29\n    local min_index30\n\
    \    local max_index30\n    local min_index31\n    local max_index31\n    local\
    \ min_index32\n    local max_index32\n    local min_index33\n    local max_index33\n\
    \    local min_index34\n    local max_index34\n    local min_index35\n    local\
    \ max_index35\n    local min_index36\n    local max_index36\n    local min_index37\n\
    \    local max_index37\n    local min_index38\n    local max_index38\n    local\
    \ min_index39\n    local max_index39\n    local min_index40\n    local max_index\n\
    }\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_array=($elements)\n    local min_diff=$((threshold*2))\n\
    \    local min_diff_index=0\n    local min_diff_value=$threshold\n    local min_diff_element=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_element_value=${elements_array[0]}\n\
    \    local min_diff_element_index=0\n    local min_diff_\n}\n\ncandidate() {\n\
    \    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp83aidp3g.sh: line 11: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff2\n  local diff3\n  local diff4\n  local diff5\n  local diff6\n \
    \ local diff7\n  local diff8\n  local diff9\n  local diff10\n  local diff11\n\
    \  local diff12\n  local diff13\n  local diff14\n  local diff15\n  local diff16\n\
    \  local diff17\n  local diff18\n  local diff19\n  local diff20\n  local diff21\n\
    \  local diff22\n  local diff23\n  local diff24\n  local diff25\n  local diff26\n\
    \  local diff27\n  local diff28\n  local diff29\n  local diff30\n  local diff31\n\
    \  local diff32\n  local diff33\n  local diff34\n  local diff35\n  local diff36\n\
    \  local diff37\n  local diff38\n  local diff39\n  local diff40\n  local diff41\n\
    \  local diff42\n  local diff43\n  local diff44\n  local diff45\n  local diff46\n\
    \  local diff47\n  local diff48\n  local diff49\n  local diff50\n  local diff51\n\
    \  local diff52\n  local diff53\n  local diff54\n  local diff55\n  local diff56\n\
    \  local diff57\n  local diff58\n  local diff59\n  local diff60\n  local diff61\n\
    \  local diff62\n  local diff63\n  local diff64\n  local diff65\n  local diff66\n\
    \  local diff67\n  local diff68\n  local diff69\n  local diff70\n  local diff71\n\
    \  local diff72\n  local diff73\n  local diff74\n  local diff75\n  local diff76\n\
    \  local diff77\n  local diff78\n  local diff79\n  local diff80\n  local diff81\n\
    \  local diff82\n  local diff83\n  local diff84\n  local diff85\n  local diff86\n\
    \  local diff87\n  local diff88\n  local diff89\n  local diff90\n  local diff91\n\
    \  local diff92\n  local diff93\n  local diff94\n  local diff95\n  local diff96\n\
    \  local diff97\n  local diff98\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    local i\n    local j\n  \
    \  local diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n\
    \    local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff97\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    for element in $list; do\n\
    \        if [ \"$element\" -le \"$threshold\" ]; then\n            return 0\n\
    \        fi\n    done\n    return 1\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjpweqrno.sh: line 12: [: 1.0: integer expression expected

    /tmp/tmpjpweqrno.sh: line 12: [: 2.0: integer expression expected

    /tmp/tmpjpweqrno.sh: line 12: [: 3.9: integer expression expected

    /tmp/tmpjpweqrno.sh: line 12: [: 4.0: integer expression expected

    /tmp/tmpjpweqrno.sh: line 12: [: 5.0: integer expression expected

    /tmp/tmpjpweqrno.sh: line 12: [: 2.2: integer expression expected

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local numbers=$1\n\
    \    local threshold=$2\n    local result=0\n    local i\n    local j\n    local\
    \ diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n \
    \   local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=$(echo $elements | tr \" \" \"\\\
    n\" | sort -n)\n  local last_element=${elements_sorted[-1]}\n  local last_element_distance=$(echo\
    \ $last_element | awk '{print $1}')\n  local last_element_distance_to_threshold=$(echo\
    \ $last_element | awk '{print $2}')\n  local last_element_distance_to_threshold_diff=$(echo\
    \ $last_element_distance_to_threshold - $threshold)\n  local last_element_distance_to_threshold_diff_abs=$(echo\
    \ $last_element_distance_to_threshold_diff | abs)\n  local last_element_distance_to_threshold_diff_abs_min=$((last_element_distance_to_threshold_diff_abs\
    \ - 1))\n  local last_element_distance_to_threshold_diff_abs_max=$((last_element_distance_to_threshold_diff_abs\
    \ + 1))\n  local last_element_distance_to_threshold_diff_abs_min=$((last_element_distance_to_threshold_diff_abs_min\
    \ + 1))\n  local last_element_distance_to_threshold_diff_abs_max=$((last_element_distance_to_threshold_diff_abs_max\
    \ - 1))\n  local last_element_distance_to_threshold_diff_abs_min=$((last_element_distance_to_threshold_diff_abs_min\
    \ - 1))\n  local last_element_distance_to_threshold_diff_abs_max=$((last_element_distance_to_threshold_diff_abs_max\
    \ + 1))\n  local last_element_distance_to_threshold_diff_abs_min=$((last_element_distance_to_threshold_diff_abs_min\
    \ - 1))\n  local last_element_distance_to_threshold_diff_abs_max=$((last_element_distance_to_threshold_diff_abs_max\
    \ + 1))\n  local last_element_distance_to_threshold_diff_abs_min=$((last_element_distance_to_threshold_diff_abs_min\
    \ - 1))\n  local last_element_distance_to_threshold_diff_abs_max=$((last_element_distance_to_threshold_diff_abs_max\
    \ + 1))\n  local last_element_distance_to_threshold_diff_abs_min=$((last_element_distance_to_threshold_diff_abs_min\
    \ - 1))\n  local last_element_distance_to_threshold_diff_abs_max=$((last_element_distance_to_threshold_diff_abs_max\
    \ + 1))\n  local last_element_distance_to_threshold_diff_abs_min=$((last_element_distance_to_threshold_diff_abs_min\
    \ - 1))\n  local last_element_distance_to_threshold_diff_abs_max=$((last_element_distance_to_threshold_diff_abs_max\
    \ + 1))\n  local last_element_distance_to_threshold_diff_abs_min=$((last_element_distance_to_threshold_diff_abs_min\
    \ - 1))\n  local last_element_distance_to_threshold_diff_abs_max=$((last_element_distance_to_threshold_diff_abs_max\
    \ + 1))\n  local last_element_distance_to_threshold_diff_abs_min=$((last_element_distance_to_threshold_diff_abs_min\
    \ - 1))\n  local last_element_distance_to_\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpldv8wlyt.sh: line 11: elements_sorted: bad array subscript

    /tmp/tmpldv8wlyt.sh: line 15: abs: command not found

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local count=0\n  local i\n  for i in $elements; do\n\
    \    ((count++))\n    if [ $count -gt 1 ]; then\n      if (( $(echo \"$i - $j\"\
    \ | bc -l) -gt $threshold )); then\n        echo \"$i $j\"\n        break\n  \
    \    fi\n    fi\n  done\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 2: syntax error

    /tmp/tmp5dpnmns0.sh: line 15: ((: -gt 0.3 : syntax error in expression (error
    token is "0.3 ")

    (standard_in) 2: syntax error

    /tmp/tmp5dpnmns0.sh: line 15: ((: -gt 0.3 : syntax error in expression (error
    token is "0.3 ")

    (standard_in) 2: syntax error

    /tmp/tmp5dpnmns0.sh: line 15: ((: -gt 0.3 : syntax error in expression (error
    token is "0.3 ")

    (standard_in) 2: syntax error

    /tmp/tmp5dpnmns0.sh: line 15: ((: -gt 0.3 : syntax error in expression (error
    token is "0.3 ")

    (standard_in) 2: syntax error

    /tmp/tmp5dpnmns0.sh: line 15: ((: -gt 0.3 : syntax error in expression (error
    token is "0.3 ")

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    local i\n    local j\n  \
    \  local diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n\
    \    local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff97\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=$(echo \"$elements\" | tr ' ' '\\\
    n' | sort -n)\n  local closed_elements=\"\"\n  local elements_count=${#elements_sorted}\n\
    \  local elements_index=0\n  local elements_index_next\n  local elements_index_next_next\n\
    \  local elements_index_next_next_next\n  local elements_index_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next\n  local elements_index_next_next_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next_next_next\n  local elements_index_next_next_next_next_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next_next_next_next_next\n  local\
    \ elements_index_next_next_next_next_next_next_next_next_next_next\n  local elements_index_next_next_next_next_next_next_next_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next_next_next_next_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next_next_next_next_next_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next_next_next_next_next_next_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\n\
    \  local elements_index_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_\n\
    }\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local numbers=$1\n\
    \    local threshold=$2\n    local count=0\n    local min\n    local max\n   \
    \ local i\n    local j\n    local diff\n    local diff1\n    local diff2\n   \
    \ local diff3\n    local diff4\n    local diff5\n    local diff6\n    local diff7\n\
    \    local diff8\n    local diff9\n    local diff10\n    local diff11\n    local\
    \ diff12\n    local diff13\n    local diff14\n    local diff15\n    local diff16\n\
    \    local diff17\n    local diff18\n    local diff19\n    local diff20\n    local\
    \ diff21\n    local diff22\n    local diff23\n    local diff24\n    local diff25\n\
    \    local diff26\n    local diff27\n    local diff28\n    local diff29\n    local\
    \ diff30\n    local diff31\n    local diff32\n    local diff33\n    local diff34\n\
    \    local diff35\n    local diff36\n    local diff37\n    local diff38\n    local\
    \ diff39\n    local diff40\n    local diff41\n    local diff42\n    local diff43\n\
    \    local diff44\n    local diff45\n    local diff46\n    local diff47\n    local\
    \ diff48\n    local diff49\n    local diff50\n    local diff51\n    local diff52\n\
    \    local diff53\n    local diff54\n    local diff55\n    local diff56\n    local\
    \ diff57\n    local diff58\n    local diff59\n    local diff60\n    local diff61\n\
    \    local diff62\n    local diff63\n    local diff64\n    local diff65\n    local\
    \ diff66\n    local diff67\n    local diff68\n    local diff69\n    local diff70\n\
    \    local diff71\n    local diff72\n    local diff73\n    local diff74\n    local\
    \ diff75\n    local diff76\n    local diff77\n    local diff78\n    local diff79\n\
    \    local diff80\n    local diff81\n    local diff82\n    local diff83\n    local\
    \ diff84\n    local diff85\n    local diff86\n    local diff87\n    local diff88\n\
    \    local diff89\n    local diff90\n    local diff91\n    local diff92\n    local\
    \ diff93\n    local diff94\n    local diff95\n\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 2
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=$(echo $elements | tr ' ' '\\n'\
    \ | sort -n)\n  local threshold=$2\n  local elements_sorted_length=$(echo $elements_sorted\
    \ | wc -l)\n  local elements_sorted_length_minus_one=$(echo $elements_sorted_length\
    \ | awk '{print $1}')\n  local elements_sorted_length_minus_one_minus_one=$(echo\
    \ $elements_sorted_length_minus_one | awk '{print $1}')\n  local elements_sorted_length_minus_one_minus_one_minus_one=$(echo\
    \ $elements_sorted_length_minus_one_minus_one | awk '{print $1}')\n  local elements_sorted_length_minus_one_minus_one_minus_one_minus_one=$(echo\
    \ $elements_sorted_length_minus_one_minus_one_minus_one | awk '{print $1}')\n\
    \  local elements_sorted_length_minus_one_minus_one_minus_one_minus_one_minus_one=$(echo\
    \ $elements_sorted_length_minus_one_minus_one_minus_one_minus_one | awk '{print\
    \ $1}')\n  local elements_sorted_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$(echo\
    \ $elements_sorted_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ | awk '{print $1}')\n  local elements_sorted_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$(echo\
    \ $elements_sorted_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ | awk '{print $1}')\n  local elements_sorted_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$(echo\
    \ $elements_sorted_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ | awk '{print $1}')\n  local elements_sorted_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$(echo\
    \ $elements_sorted_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_\n\
    }\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv09er62c.sh: line 21: unexpected EOF while looking for matching
    `)''

    /tmp/tmpv09er62c.sh: line 40: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local element\n    local i\n    local j\n    local\
    \ distance\n    local min_distance\n    local min_i\n    local min_j\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n}\n\ncandidate()\
    \ {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local count=0\n    local min\n    local max\n   \
    \ local element\n    local i\n\n    for element in $elements; do\n        if ((\
    \ $(echo \"$element > $threshold\" | bc -l) )); then\n            count=$(( $count\
    \ + 1 ))\n        fi\n    done\n\n    if (( $count > 0 )); then\n        min=$(\
    \ echo $elements | sort -n | head -1 )\n        max=$( echo $elements | sort -n\
    \ | tail -1 )\n        echo \"$min $max\"\n    fi\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local element\n    local i\n    local j\n    local\
    \ distance\n    local min_distance\n    local min_i\n    local min_j\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n    local min_distance\n\
    \    local min_distance\n    local min_distance\n    local min_distance\n    local\
    \ min_distance\n    local min_distance\n    local min_distance\n}\n\ncandidate()\
    \ {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local count=0\n  local element\n  local i\n  local j\n\
    \  local distance\n  local min\n  local max\n  local min_index\n  local max_index\n\
    \  local min_index2\n  local max_index2\n  local min_index3\n  local max_index3\n\
    \  local min_index4\n  local max_index4\n  local min_index5\n  local max_index5\n\
    \  local min_index6\n  local max_index6\n  local min_index7\n  local max_index7\n\
    \  local min_index8\n  local max_index8\n  local min_index9\n  local max_index9\n\
    \  local min_index10\n  local max_index10\n  local min_index11\n  local max_index11\n\
    \  local min_index12\n  local max_index12\n  local min_index13\n  local max_index13\n\
    \  local min_index14\n  local max_index14\n  local min_index15\n  local max_index15\n\
    \  local min_index16\n  local max_index16\n  local min_index17\n  local max_index17\n\
    \  local min_index18\n  local max_index18\n  local min_index19\n  local max_index19\n\
    \  local min_index20\n  local max_index20\n  local min_index21\n  local max_index21\n\
    \  local min_index22\n  local max_index22\n  local min_index23\n  local max_index23\n\
    \  local min_index24\n  local max_index24\n  local min_index25\n  local max_index25\n\
    \  local min_index26\n  local max_index26\n  local min_index27\n  local max_index27\n\
    \  local min_index28\n  local max_index28\n  local min_index29\n  local max_index29\n\
    \  local min_index30\n  local max_index30\n  local min_index31\n  local max_index31\n\
    \  local min_index32\n  local max_index32\n  local min_index33\n  local max_index33\n\
    \  local min_index34\n  local max_index34\n  local min_index35\n  local max_index35\n\
    \  local min_index36\n  local max_index36\n  local min_index37\n  local max_index37\n\
    \  local min_index38\n  local max_index38\n  local min_index39\n  local max_index39\n\
    \  local min_index40\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    local i\n    local j\n  \
    \  local diff\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n\
    \    local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n    local diff95\n\
    \    local diff96\n    local diff97\n    local diff98\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 2
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_count=${#elements[@]}\n  local elements_count_minus_one=$((elements_count\
    \ - 1))\n  local elements_count_minus_two=$((elements_count - 2))\n  local elements_count_minus_three=$((elements_count\
    \ - 3))\n  local elements_count_minus_four=$((elements_count - 4))\n  local elements_count_minus_five=$((elements_count\
    \ - 5))\n  local elements_count_minus_six=$((elements_count - 6))\n  local elements_count_minus_seven=$((elements_count\
    \ - 7))\n  local elements_count_minus_eight=$((elements_count - 8))\n  local elements_count_minus_nine=$((elements_count\
    \ - 9))\n  local elements_count_minus_ten=$((elements_count - 10))\n  local elements_count_minus_eleven=$((elements_count\
    \ - 11))\n  local elements_count_minus_twelve=$((elements_count - 12))\n  local\
    \ elements_count_minus_thirteen=$((elements_count - 13))\n  local elements_count_minus_fourteen=$((elements_count\
    \ - 14))\n  local elements_count_minus_fifteen=$((elements_count - 15))\n  local\
    \ elements_count_minus_sixteen=$((elements_count - 16))\n  local elements_count_minus_seventeen=$((elements_count\
    \ - 17))\n  local elements_count_minus_eighteen=$((elements_count - 18))\n  local\
    \ elements_count_minus_nineteen=$((elements_count - 19))\n  local elements_count_minus_twenty=$((elements_count\
    \ - 20))\n  local elements_count_minus_twenty_one=$((elements_count - 21))\n \
    \ local elements_count_minus_twenty_two=$((elements_count - 22))\n  local elements_count_minus_twenty_three=$((elements_count\
    \ - 23))\n  local elements_count_minus_twenty_four=$((elements_count - 24))\n\
    \  local elements_count_minus_twenty_five=$((elements_count - 25))\n  local elements_count_minus_twenty_six=$((elements_count\
    \ - 26))\n  local elements_count_minus_twenty_seven=$((elements_count \n}\n\n\
    candidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"\
    1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\
    \ 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpllpmxhx6.sh: line 37: unexpected EOF while looking for matching
    `)''

    /tmp/tmpllpmxhx6.sh: line 56: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local elements_array_length=${#elements_array[@]}\n\
    \  local i\n  local j\n  local distance\n  local min_distance\n  local min_i\n\
    \  local min_j\n  local min_distance\n  local min_distance_index\n  local min_distance_element\n\
    \  local min_distance_element_index\n  local min_distance_element_index\n  local\
    \ min_distance_element_index\n  local min_distance_element_index\n  local min_distance_element_index\n\
    \  local min_distance_element_index\n  local min_distance_element_index\n  local\
    \ min_distance_element_index\n  local min_distance_element_index\n  local min_distance_element_index\n\
    \  local min_distance_element_index\n  local min_distance_element_index\n  local\
    \ min_distance_element_index\n  local min_distance_element_index\n  local min_distance_element_index\n\
    \  local min_distance_element_index\n  local min_distance_element_index\n  local\
    \ min_distance_element_index\n  local min_distance_element_index\n  local min_distance_element_index\n\
    \  local min_distance_element_index\n  local min_distance_element_index\n  local\
    \ min_distance_element_index\n  local min_distance_element_index\n  local min_distance_element_index\n\
    \  local min_distance_element_index\n  local min_distance_element_index\n  local\
    \ min_distance_element_index\n  local min_distance_element_index\n  local min_distance_element_index\n\
    \  local min_distance_element_index\n  local min_distance_element_index\n  local\
    \ min_distance_element_index\n  local min_distance_element_index\n  local min_distance_element_index\n\
    \  local min_distance_element_index\n  local min_distance_element_index\n  local\
    \ min_distance_element_index\n  local min_distance_element_index\n  local min_distance_element_index\n\
    \  local min_distance_element_index\n  local min_distance_element_index\n  local\
    \ min_distance_element_index\n  local min_distance_element_index\n  local min_distance_element_index\n\
    \  local min_distance_element_index\n  local min_distance_element_index\n  local\
    \ min_distance_element_index\n  local min_distance_element_index\n  local min_distance_element_index\n\
    \  local min_distance_element_index\n  local min_distance_element_index\n  local\
    \ min_distance_element_index\n  local min_distance_element_index\n  local min_distance_element_index\n\
    \  local min_distance_element_index\n  local min_distance_element_index\n  local\
    \ min_distance_element_index\n  local min_distance_element_index\n  local min_distance_element_index\n\
    \  local min_distance_element_index\n  local min_distance_element_\n}\n\ncandidate()\
    \ {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=$(IFS=,; echo \"$elements\") #\
    \ commas escaped\n  local elements_sorted_num=$(echo \"$elements_sorted\" | tr\
    \ \",\" \"\\n\" | sort -n | uniq -c)\n  local elements_sorted_num_size=$(echo\
    \ \"$elements_sorted_num\" | wc -l)\n  local elements_sorted_num_min=$((elements_sorted_num_size\
    \ - 1))\n  local elements_sorted_num_max=0\n  local elements_sorted_num_min_index=0\n\
    \  local elements_sorted_num_max_index=0\n  local elements_sorted_num_min_diff=0\n\
    \  local elements_sorted_num_max_diff=0\n  local elements_sorted_num_min_diff_index=0\n\
    \  local elements_sorted_num_max_diff_index=0\n  local elements_sorted_num_min_diff_size=0\n\
    \  local elements_sorted_num_max_diff_size=0\n  local elements_sorted_num_min_diff_size_index=0\n\
    \  local elements_sorted_num_max_diff_size_index=0\n  local elements_sorted_num_min_diff_index=0\n\
    \  local elements_sorted_num_max_diff_index=0\n  local elements_sorted_num_min_diff_size=0\n\
    \  local elements_sorted_num_max_diff_size=0\n  local elements_sorted_num_min_diff_size_index=0\n\
    \  local elements_sorted_num_max_diff_size_index=0\n  local elements_sorted_num_min_diff_index=0\n\
    \  local elements_sorted_num_max_diff_index=0\n  local elements_sorted_num_min_diff_size=0\n\
    \  local elements_sorted_num_max_diff_size=0\n  local elements_sorted_num_min_diff_size_index=0\n\
    \  local elements_sorted_num_max_diff_size_index=0\n  local elements_sorted_num_min_diff_index=0\n\
    \  local elements_sorted_num_max_diff_index=0\n  local elements_sorted_num_min_diff_size=0\n\
    \  local elements_sorted_num_max_diff_size=0\n  local elements_sorted_num_min_diff_size_index=0\n\
    \  local elements_sorted_num_max_diff_size_index=0\n  local elements_sorted_num_min_diff_index=0\n\
    \  local elements_sorted_num_max_diff_index=0\n  local elements_sorted_num_min_diff_size=0\n\
    \  local elements_sorted_num_max_diff_size=0\n  local elements_sorted_num_min_diff_size_index=0\n\
    \  local elements_sorted_num_max_diff_size_index=0\n  local elements_sorted_num_min_diff_index=0\n\
    \  local elements_sorted_num_max_diff_index=0\n  local elements_sorted_num_\n\
    }\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local result=0\n  local element\n  local i\n  local j\n\
    \  local k\n  local diff\n  local diff1\n  local diff2\n  local diff3\n  local\
    \ diff4\n  local diff5\n  local diff6\n  local diff7\n  local diff8\n  local diff9\n\
    \  local diff10\n  local diff11\n  local diff12\n  local diff13\n  local diff14\n\
    \  local diff15\n  local diff16\n  local diff17\n  local diff18\n  local diff19\n\
    \  local diff20\n  local diff21\n  local diff22\n  local diff23\n  local diff24\n\
    \  local diff25\n  local diff26\n  local diff27\n  local diff28\n  local diff29\n\
    \  local diff30\n  local diff31\n  local diff32\n  local diff33\n  local diff34\n\
    \  local diff35\n  local diff36\n  local diff37\n  local diff38\n  local diff39\n\
    \  local diff40\n  local diff41\n  local diff42\n  local diff43\n  local diff44\n\
    \  local diff45\n  local diff46\n  local diff47\n  local diff48\n  local diff49\n\
    \  local diff50\n  local diff51\n  local diff52\n  local diff53\n  local diff54\n\
    \  local diff55\n  local diff56\n  local diff57\n  local diff58\n  local diff59\n\
    \  local diff60\n  local diff61\n  local diff62\n  local diff63\n  local diff64\n\
    \  local diff65\n  local diff66\n  local diff67\n  local diff68\n  local diff69\n\
    \  local diff70\n  local diff71\n  local diff72\n  local diff73\n  local diff74\n\
    \  local diff75\n  local diff76\n  local diff77\n  local diff78\n  local diff79\n\
    \  local diff80\n  local diff81\n  local diff82\n  local diff83\n  local diff84\n\
    \  local diff85\n  local diff86\n  local diff87\n  local diff88\n  local diff89\n\
    \  local diff90\n  local diff91\n  local diff92\n  local diff93\n  local diff94\n\
    \  local diff95\n\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local numbers=$1\n\
    \    local threshold=$2\n    local count=0\n    local i\n    local j\n    local\
    \ diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n \
    \   local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local element\n    local i\n    local j\n    local\
    \ distance\n    local min\n    local max\n    local min_index\n    local max_index\n\
    \    local min_distance\n    local max_distance\n    local min_distance_index\n\
    \    local max_distance_index\n    local min_distance_index\n    local max_distance_index\n\
    \    local min_distance_index\n    local max_distance_index\n    local min_distance_index\n\
    \    local max_distance_index\n    local min_distance_index\n    local max_distance_index\n\
    \    local min_distance_index\n    local max_distance_index\n    local min_distance_index\n\
    \    local max_distance_index\n    local min_distance_index\n    local max_distance_index\n\
    \    local min_distance_index\n    local max_distance_index\n    local min_distance_index\n\
    \    local max_distance_index\n    local min_distance_index\n    local max_distance_index\n\
    \    local min_distance_index\n    local max_distance_index\n    local min_distance_index\n\
    \    local max_distance_index\n    local min_distance_index\n    local max_distance_index\n\
    \    local min_distance_index\n    local max_distance_index\n    local min_distance_index\n\
    \    local max_distance_index\n    local min_distance_index\n    local max_distance_index\n\
    \    local min_distance_index\n    local max_distance_index\n    local min_distance_index\n\
    \    local max_distance_index\n    local min_distance_index\n    local max_distance_index\n\
    \    local min_distance_index\n    local max_distance_index\n    local min_distance_index\n\
    \    local max_distance_index\n    local min_distance_index\n    local max_distance_index\n\
    \    local min_distance_index\n    local max_distance_index\n    local min_distance_index\n\
    \    local max_distance_index\n    local min_distance_index\n    local max_distance_index\n\
    \    local min_distance_index\n    local max_distance_index\n    local min_distance_index\n\
    \    local max_distance_index\n    local min_distance_index\n    local max_distance_index\n\
    \    local min_distance_index\n    local max_distance_index\n    local min_distance_index\n\
    \    local max_distance_index\n    local min_distance_index\n    local max_distance_index\n\
    \    local min_distance_index\n    local max_distance_index\n    local min_distance_index\n\
    \    local max_distance_index\n    local min_distance_index\n    local max_distance_index\n\
    \    local min_distance_index\n    local max_distance_index\n    local min_distance_index\n\
    \    local max_distance_index\n    local min_distance_index\n    local max_distance_index\n\
    \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_count=${#elements[@]}\n  local min_distance=0\n\
    \  local min_element\n  local max_element\n  local max_distance\n  local i\n\n\
    \  for i in $(seq 0 $((elements_count-1))); do\n    min_element=${elements[$i]}\n\
    \    max_element=${elements[$((i+1))]}\n    max_distance=0\n    for j in $(seq\
    \ 0 $((elements_count-1))); do\n      distance=$(echo \"$((${elements[$j]} - ${min_element}))\"\
    \ \\\n          | bc)\n      if (( distance > max_distance )); then\n        max_distance=$distance\n\
    \        max_element=${elements[$((j+1))]}\n      fi\n    done\n    if (( max_distance\
    \ < threshold )); then\n      echo \"$min_element $max_element\"\n      return\
    \ 0\n    fi\n  done\n  return 1\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw6qo30d_.sh: line 23: 1.0 2.0 3.9 4.0 5.0 2.2 - 1.0 2.0 3.9 4.0
    5.0 2.2: syntax error: invalid arithmetic operator (error token is ".0 2.0 3.9
    4.0 5.0 2.2 - 1.0 2.0 3.9 4.0 5.0 2.2")

    /tmp/tmpw6qo30d_.sh: line 29: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local numbers=$1\n\
    \    local threshold=$2\n    local result=0\n    local i\n    local j\n    for\
    \ (( i=0; i<${#numbers[@]}; i++ )); do\n        for (( j=0; j<${#numbers[@]};\
    \ j++ )); do\n            if [[ ${numbers[$i]} -gt ${numbers[$j]} ]]; then\n \
    \               let result+=1\n            fi\n        done\n    done\n    if\
    \ [[ ${result} -gt 0 ]]; then\n        return 0\n    else\n        return 1\n\
    \    fi\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpankd94xy.sh: line 15: [[: 1.0 2.0 3.9 4.0 5.0 2.2: syntax error:
    invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2")

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted\n  local i\n  local j\n  local\
    \ distance\n  local min_distance\n  local min_i\n  local min_j\n  local min_distance\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n  local min_distance_index\n\
    \  local min_distance_index\n  local min_distance_index\n\n}\n\ncandidate() {\n\
    \    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    local i\n    local j\n  \
    \  local diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n\
    \    local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff97\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_count=${#elements[@]}\n    local i\n\
    \    local j\n    local distance\n    for ((i=0; i<${elements_count}; i++)); do\n\
    \        distance=0\n        for ((j=0; j<${elements_count}; j++)); do\n     \
    \       distance=$((distance + ${elements[$i]} - ${elements[$j]}))\n        done\n\
    \        if ((distance < threshold)) ; then\n            return 1\n        fi\n\
    \    done\n    return 0\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7ntuc21w.sh: line 17: distance + 1.0 2.0 3.9 4.0 5.0 2.2 - 1.0
    2.0 3.9 4.0 5.0 2.2: syntax error: invalid arithmetic operator (error token is
    ".0 2.0 3.9 4.0 5.0 2.2 - 1.0 2.0 3.9 4.0 5.0 2.2")

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_array=($elements)\n    local threshold=$threshold\n\
    \    local min_distance=0\n    local max_distance=0\n    local min_element=0\n\
    \    local max_element=0\n    local min_distance_index=0\n    local max_distance_index=0\n\
    \    local min_element_index=0\n    local max_element_index=0\n    local min_distance_value=0\n\
    \    local max_distance_value=0\n    local min_element_value=0\n    local max_element_value=0\n\
    \    local min_distance_index=0\n    local max_distance_index=0\n    local min_element_index=0\n\
    \    local max_element_index=0\n    local min_distance_value=0\n    local max_distance_value=0\n\
    \    local min_element_value=0\n    local max_element_value=0\n    local min_distance_index=0\n\
    \    local max_distance_index=0\n    local min_element_index=0\n    local max_element_index=0\n\
    \    local min_distance_value=0\n    local max_distance_value=0\n    local min_element_value=0\n\
    \    local max_element_value=0\n    local min_distance_index=0\n    local max_distance_index=0\n\
    \    local min_element_index=0\n    local max_element_index=0\n    local min_distance_value=0\n\
    \    local max_distance_value=0\n    local min_element_value=0\n    local max_element_value=0\n\
    \    local min_distance_index=0\n    local max_distance_index=0\n    local min_element_index=0\n\
    \    local max_element_index=0\n    local min_distance_value=0\n    local max_distance_value=0\n\
    \    local min_element_value=0\n    local max_element_value=0\n    local min_distance_index=0\n\
    \    local max_distance_index=0\n    local min_element_index=0\n    local max_element_index=0\n\
    \    local min_distance_value=0\n    local max_distance_value=0\n    local min_element_value=0\n\
    \    local max_element_value=0\n    local min_distance_index=0\n    local max_distance_index=0\n\
    \    local min_element_index=0\n    local max_element_index=0\n    local min_distance_value=0\n\
    \    local max_distance_value=0\n    local min_element_value=0\n    local max_element_value=0\n\
    \    local min_distance_index=0\n    local max_distance_index=0\n    local min_element_index=0\n\
    \    local max_element_index=0\n    local min_distance_value=0\n    local max_distance_value=0\n\
    \    local min_element_value=0\n    local max_element_value=0\n    local min_distance_index=0\n\
    \    local max_distance_index\n}\n\ncandidate() {\n    has_close_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"\
    0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_array=($elements)\n    local max_diff=0\n\
    \    local max_index=0\n    local max_diff_index=0\n    local max_diff_element=0\n\
    \    local max_diff_element_index=0\n    local max_diff_element_count=0\n    local\
    \ max_diff_element_count_index=0\n    local max_diff_element_count_element=0\n\
    \    local max_diff_element_count_element_index=0\n    local max_diff_element_count_element_count=0\n\
    \    local max_diff_element_count_element_count_index=0\n    local max_diff_element_count_element_count_element=0\n\
    \    local max_diff_element_count_element_count_element_index=0\n    local max_diff_element_count_element_count_element_count=0\n\
    \    local max_diff_element_count_element_count_element_count_index=0\n    local\
    \ max_diff_element_count_element_count_element_count_element=0\n    local max_diff_element_count_element_count_element_count_element_index=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count_index=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count_element_count=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count_element_count_index=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count_element_count_element=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count_element_count_element_index=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count_element_count_element_count=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count_element_count_element_count_index=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count_element_count_element_count_element_count=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count_element_count_element_count_element_count_index=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count_element_count_element_count_element_count_element_count=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count_element_count_element_count_element_count_element_count_index=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count_element_count_element_count_element_count_element_count=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count_element_count_element_count_element_count_element_count_index=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count_element_count_element_count_element_count_element_count_element_count=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count_element_count_element_count_element_count_element_count_index=0\n\
    \    local max_diff_element_count_element_count_element_count_element_count_\n\
    }\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local numbers=$1\n\
    \    local threshold=$2\n    local result=0\n    local i\n    local j\n    local\
    \ diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n \
    \   local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min\n  local max\n  local min_index\n  local max_index\n  local min_index\n\
    \  local max_index\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  local max_distance\n  local min_distance\n  local max_distance\n  local min_distance\n\
    \  \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min\n  local max\n  local min_index\n  local max_index\n  local min_index2\n\
    \  local max_index2\n  local min_index3\n  local max_index3\n  local min_index4\n\
    \  local max_index4\n  local min_index5\n  local max_index5\n  local min_index6\n\
    \  local max_index6\n  local min_index7\n  local max_index7\n  local min_index8\n\
    \  local max_index8\n  local min_index9\n  local max_index9\n  local min_index10\n\
    \  local max_index10\n  local min_index11\n  local max_index11\n  local min_index12\n\
    \  local max_index12\n  local min_index13\n  local max_index13\n  local min_index14\n\
    \  local max_index14\n  local min_index15\n  local max_index15\n  local min_index16\n\
    \  local max_index16\n  local min_index17\n  local max_index17\n  local min_index18\n\
    \  local max_index18\n  local min_index19\n  local max_index19\n  local min_index20\n\
    \  local max_index20\n  local min_index21\n  local max_index21\n  local min_index22\n\
    \  local max_index22\n  local min_index23\n  local max_index23\n  local min_index24\n\
    \  local max_index24\n  local min_index25\n  local max_index25\n  local min_index26\n\
    \  local max_index26\n  local min_index27\n  local max_index27\n  local min_index28\n\
    \  local max_index28\n  local min_index29\n  local max_index29\n  local min_index30\n\
    \  local max_index30\n  local min_index31\n  local max_index31\n  local min_index32\n\
    \  local max_index32\n  local min_index33\n  local max_index33\n  local min_index34\n\
    \  local max_index34\n  local min_index35\n  local max_index35\n  local min_index36\n\
    \  local max_index36\n  local min_index37\n  local max_index37\n  local min_index38\n\
    \  local max_index38\n  local min_index39\n  local max_index39\n  local min_index40\n\
    \  local max_index\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=( $elements )\n  local min_element=${elements_array[0]}\n\
    \  local max_element=${elements_array[0]}\n  local min_diff=${threshold}\n  local\
    \ max_diff=${threshold}\n  local min_diff_index=0\n  local max_diff_index=0\n\
    \  local min_diff_index2=0\n  local max_diff_index2=0\n  local min_diff_index3=0\n\
    \  local max_diff_index3=0\n  local min_diff_index4=0\n  local max_diff_index4=0\n\
    \  local min_diff_index5=0\n  local max_diff_index5=0\n  local min_diff_index6=0\n\
    \  local max_diff_index6=0\n  local min_diff_index7=0\n  local max_diff_index7=0\n\
    \  local min_diff_index8=0\n  local max_diff_index8=0\n  local min_diff_index9=0\n\
    \  local max_diff_index9=0\n  local min_diff_index10=0\n  local max_diff_index10=0\n\
    \  local min_diff_index11=0\n  local max_diff_index11=0\n  local min_diff_index12=0\n\
    \  local max_diff_index12=0\n  local min_diff_index13=0\n  local max_diff_index13=0\n\
    \  local min_diff_index14=0\n  local max_diff_index14=0\n  local min_diff_index15=0\n\
    \  local max_diff_index15=0\n  local min_diff_index16=0\n  local max_diff_index16=0\n\
    \  local min_diff_index17=0\n  local max_diff_index17=0\n  local min_diff_index18=0\n\
    \  local max_diff_index18=0\n  local min_diff_index19=0\n  local max_diff_index19=0\n\
    \  local min_diff_index20=0\n  local max_diff_index20=0\n  local min_diff_index21=0\n\
    \  local max_diff_index21=0\n  local min_diff_index22=0\n  local max_diff_index22=0\n\
    \  local min_diff_index23=0\n  local max_diff_index23=0\n  local min_diff_index24=0\n\
    \  local max_diff_index24=0\n  local min_diff_index25=0\n  local max_diff_index25=0\n\
    \  local min_diff_index26=0\n  local max_diff_index26=0\n  local min_diff_index27=0\n\
    \  local max_diff_index27=0\n  local min_diff_index28=0\n  local max_diff_index28=0\n\
    \  local min_diff_index\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    local i\n    local j\n  \
    \  local diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n\
    \    local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff97\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff2\n  local diff3\n  local diff4\n  local diff5\n  local diff6\n \
    \ local diff7\n  local diff8\n  local diff9\n  local diff10\n  local diff11\n\
    \  local diff12\n  local diff13\n  local diff14\n  local diff15\n  local diff16\n\
    \  local diff17\n  local diff18\n  local diff19\n  local diff20\n  local diff21\n\
    \  local diff22\n  local diff23\n  local diff24\n  local diff25\n  local diff26\n\
    \  local diff27\n  local diff28\n  local diff29\n  local diff30\n  local diff31\n\
    \  local diff32\n  local diff33\n  local diff34\n  local diff35\n  local diff36\n\
    \  local diff37\n  local diff38\n  local diff39\n  local diff40\n  local diff41\n\
    \  local diff42\n  local diff43\n  local diff44\n  local diff45\n  local diff46\n\
    \  local diff47\n  local diff48\n  local diff49\n  local diff50\n  local diff51\n\
    \  local diff52\n  local diff53\n  local diff54\n  local diff55\n  local diff56\n\
    \  local diff57\n  local diff58\n  local diff59\n  local diff60\n  local diff61\n\
    \  local diff62\n  local diff63\n  local diff64\n  local diff65\n  local diff66\n\
    \  local diff67\n  local diff68\n  local diff69\n  local diff70\n  local diff71\n\
    \  local diff72\n  local diff73\n  local diff74\n  local diff75\n  local diff76\n\
    \  local diff77\n  local diff78\n  local diff79\n  local diff80\n  local diff81\n\
    \  local diff82\n  local diff83\n  local diff84\n  local diff85\n  local diff86\n\
    \  local diff87\n  local diff88\n  local diff89\n  local diff90\n  local diff91\n\
    \  local diff92\n  local diff93\n  local diff94\n  local diff95\n  local diff96\n\
    \  local diff97\n  local diff98\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local element\n  local distance\n  local i\n  local j\n\
    \  local min\n  local max\n  local found\n  local count\n  local min_index\n \
    \ local max_index\n  local min_distance\n  local max_distance\n  local min_element\n\
    \  local max_element\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_element_index\n  local max_element_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_element_index\n  local max_element_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_element_index\n\
    \  local max_element_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_element_index\n  local max_element_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_element_index\n  local max_element_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_element_index\n\
    \  local max_element_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_element_index\n  local max_element_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_element_index\n  local max_element_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_element_index\n\
    \  local max_element_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_element_index\n  local max_element_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_element_index\n  local max_element_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_element_index\n\
    \  local max_element_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_element_index\n  local max_element_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_element_index\n  local max_element_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_element_index\n\
    \  local max_element_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_element_index\n  local max_element_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_element_index\n  local max_element_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_element_index\n\
    \  local max_element_index\n  local min_distance_index\n\n}\n\ncandidate() {\n\
    \    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local i\n    local j\n    local diff\n    local\
    \ diff1\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n\
    \    local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n    local diff95\n\
    \    local diff96\n    local diff97\n    local diff\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    local i\n    local j\n  \
    \  local diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n\
    \    local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff97\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local count=0\n  local element\n  local element1\n  local\
    \ element2\n  local diff\n  local diff1\n  local diff2\n  local diff3\n  local\
    \ diff4\n  local diff5\n  local diff6\n  local diff7\n  local diff8\n  local diff9\n\
    \  local diff10\n  local diff11\n  local diff12\n  local diff13\n  local diff14\n\
    \  local diff15\n  local diff16\n  local diff17\n  local diff18\n  local diff19\n\
    \  local diff20\n  local diff21\n  local diff22\n  local diff23\n  local diff24\n\
    \  local diff25\n  local diff26\n  local diff27\n  local diff28\n  local diff29\n\
    \  local diff30\n  local diff31\n  local diff32\n  local diff33\n  local diff34\n\
    \  local diff35\n  local diff36\n  local diff37\n  local diff38\n  local diff39\n\
    \  local diff40\n  local diff41\n  local diff42\n  local diff43\n  local diff44\n\
    \  local diff45\n  local diff46\n  local diff47\n  local diff48\n  local diff49\n\
    \  local diff50\n  local diff51\n  local diff52\n  local diff53\n  local diff54\n\
    \  local diff55\n  local diff56\n  local diff57\n  local diff58\n  local diff59\n\
    \  local diff60\n  local diff61\n  local diff62\n  local diff63\n  local diff64\n\
    \  local diff65\n  local diff66\n  local diff67\n  local diff68\n  local diff69\n\
    \  local diff70\n  local diff71\n  local diff72\n  local diff73\n  local diff74\n\
    \  local diff75\n  local diff76\n  local diff77\n  local diff78\n  local diff79\n\
    \  local diff80\n  local diff81\n  local diff82\n  local diff83\n  local diff84\n\
    \  local diff85\n  local diff86\n  local diff87\n  local diff88\n  local diff89\n\
    \  local diff90\n  local diff91\n  local diff92\n  local diff93\n  local diff94\n\
    \  local diff95\n  local \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_sorted=$(echo $elements | tr ' ' '\\\
    n' | sort -n)\n    local elements_sorted_length=$(echo $elements_sorted | wc -l)\n\
    \    local elements_sorted_length=$((elements_sorted_length-1))\n    local elements_sorted_last=$(echo\
    \ $elements_sorted | tail -1)\n    local elements_sorted_last_length=$(echo $elements_sorted_last\
    \ | wc -l)\n    local elements_sorted_last_length=$((elements_sorted_last_length-1))\n\
    \    local elements_sorted_last_element=$(echo $elements_sorted_last | cut -d\
    \ ' ' -f 1)\n    local elements_sorted_last_element_length=$(echo $elements_sorted_last_element\
    \ | wc -l)\n    local elements_sorted_last_element_length=$((elements_sorted_last_element_length-1))\n\
    \    local elements_sorted_last_element_first=$(echo $elements_sorted_last_element\
    \ | cut -d ' ' -f 2)\n    local elements_sorted_last_element_first_length=$(echo\
    \ $elements_sorted_last_element_first | wc -l)\n    local elements_sorted_last_element_first_length=$((elements_sorted_last_element_first_length-1))\n\
    \    local elements_sorted_last_element_last=$(echo $elements_sorted_last_element\
    \ | cut -d ' ' -f 3)\n    local elements_sorted_last_element_last_length=$(echo\
    \ $elements_sorted_last_element_last | wc -l)\n    local elements_sorted_last_element_last_length=$((elements_sorted_last_element_last_length-1))\n\
    \    local elements_sorted_last_element_last_element=$(echo $elements_sorted_last_element_last\
    \ | cut -d ' ' -f 1)\n    local elements_sorted_last_element_last_element_length=$(echo\
    \ $elements_sorted_last_element_last_element | wc -l)\n    local elements_sorted_last_element_last_element_length=$((elements_sorted_last_element_last_element_length-1))\n\
    \    local elements_sorted_last_element_last_element_first=$(echo $elements_sorted_last_element_last_element\
    \ | cut -d ' ' -f 2)\n    local elements_sorted_last_element_last_element_first_length=$(echo\
    \ $elements_sorted_last_element_last_element_first | wc -l)\n    local elements_sorted_last_element_last_element_first_length=$((elements_sorted_last_element_last_element_first_length-1))\n\
    \    local elements_sorted_last_element_last_element_last=$(echo $elements_sorted_last_element_last_element\
    \ | cut -d ' ' -f 3)\n    local elements_sorted_last_element_last_element_last_length=$(echo\
    \ $elements_sorted_last_element_last_element_last | wc -l)\n    local elements_\n\
    }\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local i\n  local j\n  local diff\n  local diff1\n\
    \  local diff2\n  local diff3\n  local diff4\n  local diff5\n  local diff6\n \
    \ local diff7\n  local diff8\n  local diff9\n  local diff10\n  local diff11\n\
    \  local diff12\n  local diff13\n  local diff14\n  local diff15\n  local diff16\n\
    \  local diff17\n  local diff18\n  local diff19\n  local diff20\n  local diff21\n\
    \  local diff22\n  local diff23\n  local diff24\n  local diff25\n  local diff26\n\
    \  local diff27\n  local diff28\n  local diff29\n  local diff30\n  local diff31\n\
    \  local diff32\n  local diff33\n  local diff34\n  local diff35\n  local diff36\n\
    \  local diff37\n  local diff38\n  local diff39\n  local diff40\n  local diff41\n\
    \  local diff42\n  local diff43\n  local diff44\n  local diff45\n  local diff46\n\
    \  local diff47\n  local diff48\n  local diff49\n  local diff50\n  local diff51\n\
    \  local diff52\n  local diff53\n  local diff54\n  local diff55\n  local diff56\n\
    \  local diff57\n  local diff58\n  local diff59\n  local diff60\n  local diff61\n\
    \  local diff62\n  local diff63\n  local diff64\n  local diff65\n  local diff66\n\
    \  local diff67\n  local diff68\n  local diff69\n  local diff70\n  local diff71\n\
    \  local diff72\n  local diff73\n  local diff74\n  local diff75\n  local diff76\n\
    \  local diff77\n  local diff78\n  local diff79\n  local diff80\n  local diff81\n\
    \  local diff82\n  local diff83\n  local diff84\n  local diff85\n  local diff86\n\
    \  local diff87\n  local diff88\n  local diff89\n  local diff90\n  local diff91\n\
    \  local diff92\n  local diff93\n  local diff94\n  local diff95\n  local diff96\n\
    \  local diff97\n  local diff\n}\n\ncandidate() {\n    has_close_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"\
    0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min_distance\n  local min_element\n  local min_i\n  local min_j\n  local\
    \ min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n  local min_distance\n  local min_distance\n  local min_distance\n\
    \  local min_distance\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=$(IFS=,; echo \"$elements\" | sort)\n\
    \  local elements_count=$(IFS=,; echo \"$elements_sorted\" | wc -l)\n  local elements_count_sorted=$(IFS=,;\
    \ echo \"$elements_count\" | sort)\n  local elements_count_sorted_count=$(IFS=,;\
    \ echo \"$elements_count_sorted\" | wc -l)\n  local elements_count_sorted_count_diff=$(IFS=,;\
    \ echo \"$elements_count_sorted_count\" - \"$elements_count_sorted\")\n  local\
    \ elements_count_sorted_count_diff_threshold=$(IFS=,; echo \"$elements_count_sorted_count_diff\"\
    \ | bc)\n  local elements_count_sorted_count_diff_threshold_count=$(IFS=,; echo\
    \ \"$elements_count_sorted_count_diff_threshold\" | wc -l)\n  local elements_count_sorted_count_diff_threshold_count_diff=$(IFS=,;\
    \ echo \"$elements_count_sorted_count_diff_threshold_count\" - \"$elements_count_sorted_count_diff_threshold\"\
    )\n  local elements_count_sorted_count_diff_threshold_count_diff_threshold=$(IFS=,;\
    \ echo \"$elements_count_sorted_count_diff_threshold_count_diff\" | bc)\n  local\
    \ elements_count_sorted_count_diff_threshold_count_diff_threshold_count=$(IFS=,;\
    \ echo \"$elements_count_sorted_count_diff_threshold_count_diff_threshold\" |\
    \ wc -l)\n  local elements_count_sorted_count_diff_threshold_count_diff_threshold_count_diff=$(IFS=,;\
    \ echo \"$elements_count_sorted_count_diff_threshold_count_diff_threshold_count\"\
    \ - \"$elements_count_sorted_count_diff_threshold_count_diff_threshold\")\n  local\
    \ elements_count_sorted_count_diff_threshold_count_diff_threshold_count_diff_threshold=$(IFS=,;\
    \ echo \"$elements_count_sorted_count_diff_threshold_count_diff_threshold_count_diff\"\
    \ | bc)\n  local elements_count_sorted_count_diff_threshold_count_diff_threshold_count_diff_threshold_count=$(IFS=,;\
    \ echo \"$elements_count_sorted_count_diff_threshold_count_diff_threshold_count_diff_threshold_count\"\
    \ | wc -l)\n  local elements_count_sorted_count_diff_threshold_count_diff_threshold_count_diff_threshold_count_diff=$(IFS=,;\
    \ echo \"$elements_count_sorted_count_diff_threshold_count_diff_threshold_count_diff_threshold_count_diff\"\
    \ | bc)\n  local elements_count_sorted_count_diff_threshold_count_diff_threshold_count_diff_threshold_count_diff_threshold=$(IFS=,;\
    \ echo \"$elements_count_sorted_count_diff_threshold_count_diff_threshold_count_diff_threshold_count_diff_threshold\"\
    \ | bc)\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=(${elements// / })\n  local min_diff=${threshold}\n\
    \  local min_diff_index=0\n  local min_diff_value=${elements_array[0]}\n  local\
    \ min_diff_index=0\n  local min_diff_value=${elements_array[0]}\n  local min_diff_index=0\n\
    \  local min_diff_value=${elements_array[0]}\n  local min_diff_index=0\n  local\
    \ min_diff_value=${elements_array[0]}\n  local min_diff_index=0\n  local min_diff_value=${elements_array[0]}\n\
    \  local min_diff_index=0\n  local min_diff_value=${elements_array[0]}\n  local\
    \ min_diff_index=0\n  local min_diff_value=${elements_array[0]}\n  local min_diff_index=0\n\
    \  local min_diff_value=${elements_array[0]}\n  local min_diff_index=0\n  local\
    \ min_diff_value=${elements_array[0]}\n  local min_diff_index=0\n  local min_diff_value=${elements_array[0]}\n\
    \  local min_diff_index=0\n  local min_diff_value=${elements_array[0]}\n  local\
    \ min_diff_index=0\n  local min_diff_value=${elements_array[0]}\n  local min_diff_index=0\n\
    \  local min_diff_value=${elements_array[0]}\n  local min_diff_index=0\n  local\
    \ min_diff_value=${elements_array[0]}\n  local min_diff_index=0\n  local min_diff_value=${elements_array[0]}\n\
    \  local min_diff_index=0\n  local min_diff_value=${elements_array[0]}\n  local\
    \ min_diff_index=0\n  local min_diff_value=${elements_array[0]}\n  local min_diff_index=0\n\
    \  local min_diff_value=${elements_array[0]}\n  local min_diff_index=0\n  local\
    \ min_diff_value=${elements_array[0]}\n  local min_diff_index=0\n  local min_diff_value=${elements_array[0]}\n\
    \  local min_diff_index=0\n  local min_diff_value=${elements_array[0]}\n  local\
    \ min_diff_index=0\n  local min_diff_value=${elements_array[0]}\n  local min_diff_index=0\n\
    \  local min_diff_value=${elements_array[0]}\n  local min_diff_index=0\n  local\
    \ min_diff_value=${elements_array[0]}\n  local min_diff_index=0\n  local min_diff_value=${elements_array[0]}\n\
    \  local min_diff_index\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff1\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n \
    \ local diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n \
    \ local diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n\
    \  local diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n\
    \  local diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n\
    \  local diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n\
    \  local diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n\
    \  local diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n\
    \  local diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n\
    \  local diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n\
    \  local diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n\
    \  local diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n\
    \  local diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n\
    \  local diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n\
    \  local diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n\
    \  local diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n\
    \  local diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n\
    \  local diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n\
    \  local diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n\
    \  local diff96\n  local diff97\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=$(echo $elements | tr ' ' '\\n'\
    \ | sort -n)\n  local last_element=${elements_sorted[-1]}\n  local first_element=${elements_sorted[0]}\n\
    \  local last_element_distance=$(echo $last_element | awk '{print $1}')\n  local\
    \ first_element_distance=$(echo $first_element | awk '{print $1}')\n  local last_element_distance=$(echo\
    \ $last_element | awk '{print $2}')\n  local first_element_distance=$(echo $first_element\
    \ | awk '{print $2}')\n  local last_element_distance=$(echo $last_element | awk\
    \ '{print $3}')\n  local first_element_distance=$(echo $first_element | awk '{print\
    \ $3}')\n  local last_element_distance=$(echo $last_element | awk '{print $4}')\n\
    \  local first_element_distance=$(echo $first_element | awk '{print $4}')\n  local\
    \ last_element_distance=$(echo $last_element | awk '{print $5}')\n  local first_element_distance=$(echo\
    \ $first_element | awk '{print $5}')\n  local last_element_distance=$(echo $last_element\
    \ | awk '{print $6}')\n  local first_element_distance=$(echo $first_element |\
    \ awk '{print $6}')\n  local last_element_distance=$(echo $last_element | awk\
    \ '{print $7}')\n  local first_element_distance=$(echo $first_element | awk '{print\
    \ $7}')\n  local last_element_distance=$(echo $last_element | awk '{print $8}')\n\
    \  local first_element_distance=$(echo $first_element | awk '{print $8}')\n  local\
    \ last_element_distance=$(echo $last_element | awk '{print $9}')\n  local first_element_distance=$(echo\
    \ $first_element | awk '{print $9}')\n  local last_element_distance=$(echo $last_element\
    \ | awk '{print $10}')\n  local first_element_distance=$(echo $first_element |\
    \ awk '{print $10}')\n  local last_element_distance=$(echo $last_element | awk\
    \ '{print $11}')\n  local first_element_distance=$(echo $first_element | awk '{print\
    \ $11}')\n  local last_element_distance=$(echo $last_element | awk '{print $12}')\n\
    \  local first_element_distance=$(echo $first_element | awk '{print $12}')\n \
    \ local last_element_distance=$(echo $last_element | awk '{print $13}')\n  local\
    \ first_element_distance=$(echo $first_element | awk '{print $13}')\n  local last_element_distance=$(echo\
    \ $last_element | awk '{print $14}')\n  \n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppyiad5wl.sh: line 11: elements_sorted: bad array subscript

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=$(echo $elements | tr ' ' '\\n'\
    \ | sort -n)\n  local elements_sorted_length=$(echo $elements_sorted | wc -l)\n\
    \  local elements_sorted_length_minus_one=$(echo $elements_sorted_length-1)\n\
    \  local elements_sorted_length_minus_one_minus_threshold=$(echo $elements_sorted_length_minus_one\
    \ - $threshold)\n  local elements_sorted_length_minus_one_minus_threshold_minus_one=$(echo\
    \ $elements_sorted_length_minus_one_minus_threshold - 1)\n  local elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold=$(echo\
    \ $elements_sorted_length_minus_one_minus_threshold_minus_one - 1)\n  local elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one=$(echo\
    \ $elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold\
    \ - 1)\n  local elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold=$(echo\
    \ $elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one\
    \ - 1)\n  local elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one=$(echo\
    \ $elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold\
    \ - 1)\n  local elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold=$(echo\
    \ $elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one\
    \ - 1)\n  local elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one=$(echo\
    \ $elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one\
    \ - 1)\n  local elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold=$(echo\
    \ $elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one\
    \ - 1)\n  local elements_sorted_length_\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local min_element=${elements_array[0]}\n\
    \  local max_element=${elements_array[0]}\n  local min_diff=${threshold}\n  local\
    \ max_diff=${threshold}\n  local min_diff_index=0\n  local max_diff_index=0\n\
    \  local min_diff_index=0\n  local max_diff_index=0\n  local min_diff_index=0\n\
    \  local max_diff_index=0\n  local min_diff_index=0\n  local max_diff_index=0\n\
    \  local min_diff_index=0\n  local max_diff_index=0\n  local min_diff_index=0\n\
    \  local max_diff_index=0\n  local min_diff_index=0\n  local max_diff_index=0\n\
    \  local min_diff_index=0\n  local max_diff_index=0\n  local min_diff_index=0\n\
    \  local max_diff_index=0\n  local min_diff_index=0\n  local max_diff_index=0\n\
    \  local min_diff_index=0\n  local max_diff_index=0\n  local min_diff_index=0\n\
    \  local max_diff_index=0\n  local min_diff_index=0\n  local max_diff_index=0\n\
    \  local min_diff_index=0\n  local max_diff_index=0\n  local min_diff_index=0\n\
    \  local max_diff_index=0\n  local min_diff_index=0\n  local max_diff_index=0\n\
    \  local min_diff_index=0\n  local max_diff_index=0\n  local min_diff_index=0\n\
    \  local max_diff_index=0\n  local min_diff_index=0\n  local max_diff_index=0\n\
    \  local min_diff_index=0\n  local max_diff_index=0\n  local min_diff_index=0\n\
    \  local max_diff_index=0\n  local min_diff_index=0\n  local max_diff_index=0\n\
    \  local min_diff_index=0\n  local max_diff_index=0\n  local min_diff_index=0\n\
    \  local max_diff_index=0\n  local min_diff_index=0\n  local max_diff_index=0\n\
    \  local min_diff_index=0\n  local max_diff_index=0\n  local min_diff_index=0\n\
    \  local max_diff_index=0\n  local min_diff_index=0\n  local max_diff_index=0\n\
    \  local min_diff_index=0\n  local max_diff_index=0\n  local min_diff_index=0\n\
    \  local max_diff_index=0\n  local min_diff_index=0\n  local max_diff_index=0\n\
    \  local min_diff_index=0\n  local max_diff_index=0\n  local min_diff\n}\n\ncandidate()\
    \ {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local i\n  local j\n  local diff\n  local diff1\n\
    \  local diff2\n  local diff3\n  local diff4\n  local diff5\n  local diff6\n \
    \ local diff7\n  local diff8\n  local diff9\n  local diff10\n  local diff11\n\
    \  local diff12\n  local diff13\n  local diff14\n  local diff15\n  local diff16\n\
    \  local diff17\n  local diff18\n  local diff19\n  local diff20\n  local diff21\n\
    \  local diff22\n  local diff23\n  local diff24\n  local diff25\n  local diff26\n\
    \  local diff27\n  local diff28\n  local diff29\n  local diff30\n  local diff31\n\
    \  local diff32\n  local diff33\n  local diff34\n  local diff35\n  local diff36\n\
    \  local diff37\n  local diff38\n  local diff39\n  local diff40\n  local diff41\n\
    \  local diff42\n  local diff43\n  local diff44\n  local diff45\n  local diff46\n\
    \  local diff47\n  local diff48\n  local diff49\n  local diff50\n  local diff51\n\
    \  local diff52\n  local diff53\n  local diff54\n  local diff55\n  local diff56\n\
    \  local diff57\n  local diff58\n  local diff59\n  local diff60\n  local diff61\n\
    \  local diff62\n  local diff63\n  local diff64\n  local diff65\n  local diff66\n\
    \  local diff67\n  local diff68\n  local diff69\n  local diff70\n  local diff71\n\
    \  local diff72\n  local diff73\n  local diff74\n  local diff75\n  local diff76\n\
    \  local diff77\n  local diff78\n  local diff79\n  local diff80\n  local diff81\n\
    \  local diff82\n  local diff83\n  local diff84\n  local diff85\n  local diff86\n\
    \  local diff87\n  local diff88\n  local diff89\n  local diff90\n  local diff91\n\
    \  local diff92\n  local diff93\n  local diff94\n  local diff95\n  local diff96\n\
    \  local diff97\n  local diff\n}\n\ncandidate() {\n    has_close_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"\
    0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min\n  local max\n  local min_index\n  local max_index\n  local min_index2\n\
    \  local max_index2\n  local min_index3\n  local max_index3\n  local min_index4\n\
    \  local max_index4\n  local min_index5\n  local max_index5\n  local min_index6\n\
    \  local max_index6\n  local min_index7\n  local max_index7\n  local min_index8\n\
    \  local max_index8\n  local min_index9\n  local max_index9\n  local min_index10\n\
    \  local max_index10\n  local min_index11\n  local max_index11\n  local min_index12\n\
    \  local max_index12\n  local min_index13\n  local max_index13\n  local min_index14\n\
    \  local max_index14\n  local min_index15\n  local max_index15\n  local min_index16\n\
    \  local max_index16\n  local min_index17\n  local max_index17\n  local min_index18\n\
    \  local max_index18\n  local min_index19\n  local max_index19\n  local min_index20\n\
    \  local max_index20\n  local min_index21\n  local max_index21\n  local min_index22\n\
    \  local max_index22\n  local min_index23\n  local max_index23\n  local min_index24\n\
    \  local max_index24\n  local min_index25\n  local max_index25\n  local min_index26\n\
    \  local max_index26\n  local min_index27\n  local max_index27\n  local min_index28\n\
    \  local max_index28\n  local min_index29\n  local max_index29\n  local min_index30\n\
    \  local max_index30\n  local min_index31\n  local max_index31\n  local min_index32\n\
    \  local max_index32\n  local min_index33\n  local max_index33\n  local min_index34\n\
    \  local max_index34\n  local min_index35\n  local max_index35\n  local min_index36\n\
    \  local max_index36\n  local min_index37\n  local max_index37\n  local min_index38\n\
    \  local max_index38\n  local min_index39\n  local max_index39\n  local min_index40\n\
    \  local max_index\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=$(IFS=,; echo \"${elements[*]}\"\
    \ | sort -n)\n  local max_distance=0\n  local max_element=0\n  local max_element_index=0\n\
    \  local max_element_distance=0\n  local max_element_index2=0\n  local max_element_distance2=0\n\
    \  local max_element_index3=0\n  local max_element_distance3=0\n  local max_element_index4=0\n\
    \  local max_element_distance4=0\n  local max_element_index5=0\n  local max_element_distance5=0\n\
    \  local max_element_index6=0\n  local max_element_distance6=0\n  local max_element_index7=0\n\
    \  local max_element_distance7=0\n  local max_element_index8=0\n  local max_element_distance8=0\n\
    \  local max_element_index9=0\n  local max_element_distance9=0\n  local max_element_index10=0\n\
    \  local max_element_distance10=0\n  local max_element_index11=0\n  local max_element_distance11=0\n\
    \  local max_element_index12=0\n  local max_element_distance12=0\n  local max_element_index13=0\n\
    \  local max_element_distance13=0\n  local max_element_index14=0\n  local max_element_distance14=0\n\
    \  local max_element_index15=0\n  local max_element_distance15=0\n  local max_element_index16=0\n\
    \  local max_element_distance16=0\n  local max_element_index17=0\n  local max_element_distance17=0\n\
    \  local max_element_index18=0\n  local max_element_distance18=0\n  local max_element_index19=0\n\
    \  local max_element_distance19=0\n  local max_element_index20=0\n  local max_element_distance20=0\n\
    \  local max_element_index21=0\n  local max_element_distance21=0\n  local max_element_index22=0\n\
    \  local max_element_distance22=0\n  local max_element_index23=0\n  local max_element_distance23=0\n\
    \  local max_element_index24=0\n  local max_element_distance24=0\n  local max_element_index25=0\n\
    \  local max_element_distance25=0\n  local max_element_index26=0\n  local max_element_distance26=0\n\
    \  local max_element_index27=0\n  local max_element_distance27=0\n  local max_element_index28=0\n\
    \  local max_element_distance28=0\n  local max_element_index29=0\n  local max_element_distance29=0\n\
    \  local max_\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local elements_array_length=${#elements_array[@]}\n\
    \  local max_distance=0\n  local max_index=0\n  local max_distance_index=0\n \
    \ local max_distance_element=${elements_array[0]}\n  local max_distance_element_index=0\n\
    \  local max_distance_element_distance=0\n  local i\n  for (( i=1; i<${elements_array_length};\
    \ i++ )); do\n    local distance=$(echo \"${elements_array[$i]} - ${max_distance_element}\"\
    \ | bc)\n    local distance_index=$(echo \"${i} - ${max_distance_element_index}\"\
    \ | bc)\n    local distance_element=$(echo \"${elements_array[$i]}\" | bc)\n \
    \   local distance_element_distance=$(echo \"${distance}\" | bc)\n    if [[ $max_distance\
    \ -eq 0 ]]; then\n      max_distance=$distance\n      max_distance_index=$distance_index\n\
    \      max_distance_element=$distance_element\n      max_distance_element_index=$distance_element_distance\n\
    \    elif [[ $max_distance -gt $distance ]]; then\n      max_distance=$distance\n\
    \      max_distance_index=$distance_index\n      max_distance_element=$distance_element\n\
    \      max_distance_element_index=$distance_element_distance\n    elif [[ $max_distance\
    \ -lt $distance ]]; then\n      max_distance=$distance\n      max_distance_index=$distance_index\n\
    \      max_distance_element=$distance_element\n      max_distance_element_index=$distance_element_distance\n\
    \    fi\n  done\n  if [[ $max_distance -eq $threshold ]]; then\n    return 0\n\
    \  else\n    return 1\n  fi\n}\n\ncandidate() {\n    has_close_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"\
    0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi50bf1mf.sh: line 24: [[: 1.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpi50bf1mf.sh: line 29: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpi50bf1mf.sh: line 34: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpi50bf1mf.sh: line 24: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpi50bf1mf.sh: line 29: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpi50bf1mf.sh: line 34: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpi50bf1mf.sh: line 24: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpi50bf1mf.sh: line 29: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpi50bf1mf.sh: line 34: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpi50bf1mf.sh: line 24: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpi50bf1mf.sh: line 29: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpi50bf1mf.sh: line 34: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpi50bf1mf.sh: line 41: [[: 1.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local element\n    local i\n    local j\n    local\
    \ diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n \
    \   local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff97\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local numbers=$1\n\
    \  local threshold=$2\n  local count=0\n  local element\n  local element1\n  local\
    \ element2\n  local diff\n  local diff1\n  local diff2\n  local diff3\n  local\
    \ diff4\n  local diff5\n  local diff6\n  local diff7\n  local diff8\n  local diff9\n\
    \  local diff10\n  local diff11\n  local diff12\n  local diff13\n  local diff14\n\
    \  local diff15\n  local diff16\n  local diff17\n  local diff18\n  local diff19\n\
    \  local diff20\n  local diff21\n  local diff22\n  local diff23\n  local diff24\n\
    \  local diff25\n  local diff26\n  local diff27\n  local diff28\n  local diff29\n\
    \  local diff30\n  local diff31\n  local diff32\n  local diff33\n  local diff34\n\
    \  local diff35\n  local diff36\n  local diff37\n  local diff38\n  local diff39\n\
    \  local diff40\n  local diff41\n  local diff42\n  local diff43\n  local diff44\n\
    \  local diff45\n  local diff46\n  local diff47\n  local diff48\n  local diff49\n\
    \  local diff50\n  local diff51\n  local diff52\n  local diff53\n  local diff54\n\
    \  local diff55\n  local diff56\n  local diff57\n  local diff58\n  local diff59\n\
    \  local diff60\n  local diff61\n  local diff62\n  local diff63\n  local diff64\n\
    \  local diff65\n  local diff66\n  local diff67\n  local diff68\n  local diff69\n\
    \  local diff70\n  local diff71\n  local diff72\n  local diff73\n  local diff74\n\
    \  local diff75\n  local diff76\n  local diff77\n  local diff78\n  local diff79\n\
    \  local diff80\n  local diff81\n  local diff82\n  local diff83\n  local diff84\n\
    \  local diff85\n  local diff86\n  local diff87\n  local diff88\n  local diff89\n\
    \  local diff90\n  local diff91\n  local diff92\n  local diff93\n  local diff94\n\
    \  local diff95\n  local \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff1\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n \
    \ local diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n \
    \ local diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n\
    \  local diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n\
    \  local diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n\
    \  local diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n\
    \  local diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n\
    \  local diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n\
    \  local diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n\
    \  local diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n\
    \  local diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n\
    \  local diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n\
    \  local diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n\
    \  local diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n\
    \  local diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n\
    \  local diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n\
    \  local diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n\
    \  local diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n\
    \  local diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n\
    \  local diff96\n  local diff97\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    local i\n    local j\n  \
    \  local diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n\
    \    local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff97\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff1\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n \
    \ local diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n \
    \ local diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n\
    \  local diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n\
    \  local diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n\
    \  local diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n\
    \  local diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n\
    \  local diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n\
    \  local diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n\
    \  local diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n\
    \  local diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n\
    \  local diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n\
    \  local diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n\
    \  local diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n\
    \  local diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n\
    \  local diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n\
    \  local diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n\
    \  local diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n\
    \  local diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n\
    \  local diff96\n  local diff97\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=($(sort -n <<<\"$elements\"))\n\
    \  local min_diff=$((${#elements_sorted} - 1))\n  local min_diff_index=0\n  local\
    \ min_diff_value=${elements_sorted[${min_diff}]}\n  local min_diff_element=${elements_sorted[${min_diff_index}]}\n\
    \  local max_diff=$((${#elements_sorted} - 2))\n  local max_diff_index=$((${#elements_sorted}\
    \ - 1))\n  local max_diff_value=${elements_sorted[${max_diff}]}\n  local max_diff_element=${elements_sorted[${max_diff_index}]}\n\
    \  local max_diff_element_index=$((${#elements_sorted} - 1))\n  local max_diff_element_value=${elements_sorted[${max_diff_element_index}]}\n\
    \  local max_diff_element_index=$((${#elements_sorted} - 1))\n  local max_diff_element_value=${elements_sorted[${max_diff_element_index}]}\n\
    \  local max_diff_element_index=$((${#elements_sorted} - 1))\n  local max_diff_element_value=${elements_sorted[${max_diff_element_index}]}\n\
    \  local max_diff_element_index=$((${#elements_sorted} - 1))\n  local max_diff_element_value=${elements_sorted[${max_diff_element_index}]}\n\
    \  local max_diff_element_index=$((${#elements_sorted} - 1))\n  local max_diff_element_value=${elements_sorted[${max_diff_element_index}]}\n\
    \  local max_diff_element_index=$((${#elements_sorted} - 1))\n  local max_diff_element_value=${elements_sorted[${max_diff_element_index}]}\n\
    \  local max_diff_element_index=$((${#elements_sorted} - 1))\n  local max_diff_element_value=${elements_sorted[${max_diff_element_index}]}\n\
    \  local max_diff_element_index=$((${#elements_sorted} - 1))\n  local max_diff_element_value=${elements_sorted[${max_diff_element_index}]}\n\
    \  local max_diff_element_index=$((${#elements_sorted} - 1))\n  local max_diff_element_value=${elements_sorted[${max_diff_element_index}]}\n\
    \  local max_diff_element_index=$((${#elements_sorted} - 1))\n  local max_diff_element_value=${elements_sorted[${max_diff_element_index}]}\n\
    \  local max_diff_element_index=$((${#elements_sorted} - 1))\n  local \n}\n\n\
    candidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"\
    1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\
    \ 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local count=0\n    local element\n    local i\n \
    \   local j\n    local distance\n    local min\n    local max\n    local min_index\n\
    \    local max_index\n    local min_index2\n    local max_index2\n    local min_index3\n\
    \    local max_index3\n    local min_index4\n    local max_index4\n    local min_index5\n\
    \    local max_index5\n    local min_index6\n    local max_index6\n    local min_index7\n\
    \    local max_index7\n    local min_index8\n    local max_index8\n    local min_index9\n\
    \    local max_index9\n    local min_index10\n    local max_index10\n    local\
    \ min_index11\n    local max_index11\n    local min_index12\n    local max_index12\n\
    \    local min_index13\n    local max_index13\n    local min_index14\n    local\
    \ max_index14\n    local min_index15\n    local max_index15\n    local min_index16\n\
    \    local max_index16\n    local min_index17\n    local max_index17\n    local\
    \ min_index18\n    local max_index18\n    local min_index19\n    local max_index19\n\
    \    local min_index20\n    local max_index20\n    local min_index21\n    local\
    \ max_index21\n    local min_index22\n    local max_index22\n    local min_index23\n\
    \    local max_index23\n    local min_index24\n    local max_index24\n    local\
    \ min_index25\n    local max_index25\n    local min_index26\n    local max_index26\n\
    \    local min_index27\n    local max_index27\n    local min_index28\n    local\
    \ max_index28\n    local min_index29\n    local max_index29\n    local min_index30\n\
    \    local max_index30\n    local min_index31\n    local max_index31\n    local\
    \ min_index32\n    local max_index32\n    local min_index33\n    local max_index33\n\
    \    local min_index34\n    local max_index34\n    local min_index35\n    local\
    \ max_index35\n    local min_index36\n    local max_index36\n    local min_index37\n\
    \    local max_index37\n    local min_index38\n    local max_index38\n    local\
    \ min_index39\n    local max_index39\n    local min_index40\n}\n\ncandidate()\
    \ {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min\n  local max\n  local min_index\n  local max_index\n  local min_index2\n\
    \  local max_index2\n  local min_index3\n  local max_index3\n  local min_index4\n\
    \  local max_index4\n  local min_index5\n  local max_index5\n  local min_index6\n\
    \  local max_index6\n  local min_index7\n  local max_index7\n  local min_index8\n\
    \  local max_index8\n  local min_index9\n  local max_index9\n  local min_index10\n\
    \  local max_index10\n  local min_index11\n  local max_index11\n  local min_index12\n\
    \  local max_index12\n  local min_index13\n  local max_index13\n  local min_index14\n\
    \  local max_index14\n  local min_index15\n  local max_index15\n  local min_index16\n\
    \  local max_index16\n  local min_index17\n  local max_index17\n  local min_index18\n\
    \  local max_index18\n  local min_index19\n  local max_index19\n  local min_index20\n\
    \  local max_index20\n  local min_index21\n  local max_index21\n  local min_index22\n\
    \  local max_index22\n  local min_index23\n  local max_index23\n  local min_index24\n\
    \  local max_index24\n  local min_index25\n  local max_index25\n  local min_index26\n\
    \  local max_index26\n  local min_index27\n  local max_index27\n  local min_index28\n\
    \  local max_index28\n  local min_index29\n  local max_index29\n  local min_index30\n\
    \  local max_index30\n  local min_index31\n  local max_index31\n  local min_index32\n\
    \  local max_index32\n  local min_index33\n  local max_index33\n  local min_index34\n\
    \  local max_index34\n  local min_index35\n  local max_index35\n  local min_index36\n\
    \  local max_index36\n  local min_index37\n  local max_index37\n  local min_index38\n\
    \  local max_index38\n  local min_index39\n  local max_index39\n  local min_index40\n\
    \  local max_index\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local distance\n\
    \  local count\n  local found\n  local min\n  local max\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_index\n  local min_index\n  local max_index\n  local min_index\n \
    \ local max_\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min\n  local max\n  local min_index\n  local max_index\n  local min_index2\n\
    \  local max_index2\n  local min_index3\n  local max_index3\n  local min_index4\n\
    \  local max_index4\n  local min_index5\n  local max_index5\n  local min_index6\n\
    \  local max_index6\n  local min_index7\n  local max_index7\n  local min_index8\n\
    \  local max_index8\n  local min_index9\n  local max_index9\n  local min_index10\n\
    \  local max_index10\n  local min_index11\n  local max_index11\n  local min_index12\n\
    \  local max_index12\n  local min_index13\n  local max_index13\n  local min_index14\n\
    \  local max_index14\n  local min_index15\n  local max_index15\n  local min_index16\n\
    \  local max_index16\n  local min_index17\n  local max_index17\n  local min_index18\n\
    \  local max_index18\n  local min_index19\n  local max_index19\n  local min_index20\n\
    \  local max_index20\n  local min_index21\n  local max_index21\n  local min_index22\n\
    \  local max_index22\n  local min_index23\n  local max_index23\n  local min_index24\n\
    \  local max_index24\n  local min_index25\n  local max_index25\n  local min_index26\n\
    \  local max_index26\n  local min_index27\n  local max_index27\n  local min_index28\n\
    \  local max_index28\n  local min_index29\n  local max_index29\n  local min_index30\n\
    \  local max_index30\n  local min_index31\n  local max_index31\n  local min_index32\n\
    \  local max_index32\n  local min_index33\n  local max_index33\n  local min_index34\n\
    \  local max_index34\n  local min_index35\n  local max_index35\n  local min_index36\n\
    \  local max_index36\n  local min_index37\n  local max_index37\n  local min_index38\n\
    \  local max_index38\n  local min_index39\n  local max_index39\n  local min_index40\n\
    \  local max_index\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff1\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n \
    \ local diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n \
    \ local diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n\
    \  local diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n\
    \  local diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n\
    \  local diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n\
    \  local diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n\
    \  local diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n\
    \  local diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n\
    \  local diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n\
    \  local diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n\
    \  local diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n\
    \  local diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n\
    \  local diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n\
    \  local diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n\
    \  local diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n\
    \  local diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n\
    \  local diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n\
    \  local diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n\
    \  local diff96\n  local diff97\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local count=0\n  local element\n  local element2\n  local\
    \ diff\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n  local diff6\n\
    \  local diff7\n  local diff8\n  local diff9\n  local diff10\n  local diff11\n\
    \  local diff12\n  local diff13\n  local diff14\n  local diff15\n  local diff16\n\
    \  local diff17\n  local diff18\n  local diff19\n  local diff20\n  local diff21\n\
    \  local diff22\n  local diff23\n  local diff24\n  local diff25\n  local diff26\n\
    \  local diff27\n  local diff28\n  local diff29\n  local diff30\n  local diff31\n\
    \  local diff32\n  local diff33\n  local diff34\n  local diff35\n  local diff36\n\
    \  local diff37\n  local diff38\n  local diff39\n  local diff40\n  local diff41\n\
    \  local diff42\n  local diff43\n  local diff44\n  local diff45\n  local diff46\n\
    \  local diff47\n  local diff48\n  local diff49\n  local diff50\n  local diff51\n\
    \  local diff52\n  local diff53\n  local diff54\n  local diff55\n  local diff56\n\
    \  local diff57\n  local diff58\n  local diff59\n  local diff60\n  local diff61\n\
    \  local diff62\n  local diff63\n  local diff64\n  local diff65\n  local diff66\n\
    \  local diff67\n  local diff68\n  local diff69\n  local diff70\n  local diff71\n\
    \  local diff72\n  local diff73\n  local diff74\n  local diff75\n  local diff76\n\
    \  local diff77\n  local diff78\n  local diff79\n  local diff80\n  local diff81\n\
    \  local diff82\n  local diff83\n  local diff84\n  local diff85\n  local diff86\n\
    \  local diff87\n  local diff88\n  local diff89\n  local diff90\n  local diff91\n\
    \  local diff92\n  local diff93\n  local diff94\n  local diff95\n  local diff96\n\
    \  local diff97\n  local \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local i\n  local j\n  local diff\n  local diff1\n\
    \  local diff2\n  local diff3\n  local diff4\n  local diff5\n  local diff6\n \
    \ local diff7\n  local diff8\n  local diff9\n  local diff10\n  local diff11\n\
    \  local diff12\n  local diff13\n  local diff14\n  local diff15\n  local diff16\n\
    \  local diff17\n  local diff18\n  local diff19\n  local diff20\n  local diff21\n\
    \  local diff22\n  local diff23\n  local diff24\n  local diff25\n  local diff26\n\
    \  local diff27\n  local diff28\n  local diff29\n  local diff30\n  local diff31\n\
    \  local diff32\n  local diff33\n  local diff34\n  local diff35\n  local diff36\n\
    \  local diff37\n  local diff38\n  local diff39\n  local diff40\n  local diff41\n\
    \  local diff42\n  local diff43\n  local diff44\n  local diff45\n  local diff46\n\
    \  local diff47\n  local diff48\n  local diff49\n  local diff50\n  local diff51\n\
    \  local diff52\n  local diff53\n  local diff54\n  local diff55\n  local diff56\n\
    \  local diff57\n  local diff58\n  local diff59\n  local diff60\n  local diff61\n\
    \  local diff62\n  local diff63\n  local diff64\n  local diff65\n  local diff66\n\
    \  local diff67\n  local diff68\n  local diff69\n  local diff70\n  local diff71\n\
    \  local diff72\n  local diff73\n  local diff74\n  local diff75\n  local diff76\n\
    \  local diff77\n  local diff78\n  local diff79\n  local diff80\n  local diff81\n\
    \  local diff82\n  local diff83\n  local diff84\n  local diff85\n  local diff86\n\
    \  local diff87\n  local diff88\n  local diff89\n  local diff90\n  local diff91\n\
    \  local diff92\n  local diff93\n  local diff94\n  local diff95\n  local diff96\n\
    \  local diff97\n  local diff\n}\n\ncandidate() {\n    has_close_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"\
    0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local element\n  local i\n  local j\n  local diff\n \
    \ local diff1\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n  local\
    \ diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n  local\
    \ diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n  local\
    \ diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n  local\
    \ diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n  local\
    \ diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n  local\
    \ diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n  local\
    \ diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n  local\
    \ diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n  local\
    \ diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n  local\
    \ diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n  local\
    \ diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n  local\
    \ diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n  local\
    \ diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n  local\
    \ diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n  local\
    \ diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n  local\
    \ diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n  local\
    \ diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n  local\
    \ diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n  local\
    \ diff96\n  local diff97\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min\n  local max\n  local min_index\n  local max_index\n  local min_distance\n\
    \  local max_distance\n  local min_element\n  local max_element\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local min_distance_index\n  local max_distance_index\n\
    \  local min_distance_index\n  local max_distance_index\n  local min_distance_index\n\
    \  local max_distance_index\n  local \n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local threshold=$2\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_array=($elements)\n  local elements_array=($elements)\n\
    \  local elements_array=($elements)\n  local elements_array=($elements)\n  local\
    \ elements_array=($elements)\n  local elements_\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff2\n  local diff3\n  local diff4\n  local diff5\n  local diff6\n \
    \ local diff7\n  local diff8\n  local diff9\n  local diff10\n  local diff11\n\
    \  local diff12\n  local diff13\n  local diff14\n  local diff15\n  local diff16\n\
    \  local diff17\n  local diff18\n  local diff19\n  local diff20\n  local diff21\n\
    \  local diff22\n  local diff23\n  local diff24\n  local diff25\n  local diff26\n\
    \  local diff27\n  local diff28\n  local diff29\n  local diff30\n  local diff31\n\
    \  local diff32\n  local diff33\n  local diff34\n  local diff35\n  local diff36\n\
    \  local diff37\n  local diff38\n  local diff39\n  local diff40\n  local diff41\n\
    \  local diff42\n  local diff43\n  local diff44\n  local diff45\n  local diff46\n\
    \  local diff47\n  local diff48\n  local diff49\n  local diff50\n  local diff51\n\
    \  local diff52\n  local diff53\n  local diff54\n  local diff55\n  local diff56\n\
    \  local diff57\n  local diff58\n  local diff59\n  local diff60\n  local diff61\n\
    \  local diff62\n  local diff63\n  local diff64\n  local diff65\n  local diff66\n\
    \  local diff67\n  local diff68\n  local diff69\n  local diff70\n  local diff71\n\
    \  local diff72\n  local diff73\n  local diff74\n  local diff75\n  local diff76\n\
    \  local diff77\n  local diff78\n  local diff79\n  local diff80\n  local diff81\n\
    \  local diff82\n  local diff83\n  local diff84\n  local diff85\n  local diff86\n\
    \  local diff87\n  local diff88\n  local diff89\n  local diff90\n  local diff91\n\
    \  local diff92\n  local diff93\n  local diff94\n  local diff95\n  local diff96\n\
    \  local diff97\n  local diff98\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local min_element=${elements_array[0]}\n\
    \  local max_element=${elements_array[0]}\n  local min_distance=${threshold}\n\
    \  local max_distance=${threshold}\n  local min_distance_index=0\n  local max_distance_index=0\n\
    \  local min_distance_index2=0\n  local max_distance_index2=0\n  local min_distance_index3=0\n\
    \  local max_distance_index3=0\n  local min_distance_index4=0\n  local max_distance_index4=0\n\
    \  local min_distance_index5=0\n  local max_distance_index5=0\n  local min_distance_index6=0\n\
    \  local max_distance_index6=0\n  local min_distance_index7=0\n  local max_distance_index7=0\n\
    \  local min_distance_index8=0\n  local max_distance_index8=0\n  local min_distance_index9=0\n\
    \  local max_distance_index9=0\n  local min_distance_index10=0\n  local max_distance_index10=0\n\
    \  local min_distance_index11=0\n  local max_distance_index11=0\n  local min_distance_index12=0\n\
    \  local max_distance_index12=0\n  local min_distance_index13=0\n  local max_distance_index13=0\n\
    \  local min_distance_index14=0\n  local max_distance_index14=0\n  local min_distance_index15=0\n\
    \  local max_distance_index15=0\n  local min_distance_index16=0\n  local max_distance_index16=0\n\
    \  local min_distance_index17=0\n  local max_distance_index17=0\n  local min_distance_index18=0\n\
    \  local max_distance_index18=0\n  local min_distance_index19=0\n  local max_distance_index19=0\n\
    \  local min_distance_index20=0\n  local max_distance_index20=0\n  local min_distance_index21=0\n\
    \  local max_distance_index21=0\n  local min_distance_index22=0\n  local max_distance_index22=0\n\
    \  local min_distance_index23=0\n  local max_distance_index23=0\n  local min_distance_index24=0\n\
    \  local max_distance_index24=0\n  local min_distance_index25=0\n  local max_distance_index25=0\n\
    \  local min_distance_index26=0\n  local max_distance_index26=0\n  local min_distance_index27=0\n\
    \  local max_distance_index27=0\n  local min_distance_index28=0\n  local max_distance_index28=0\n\
    \  local min_distance_index29\n}\n\ncandidate() {\n    has_close_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"\
    0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 2
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=$(echo $elements | tr ' ' '\\n'\
    \ | sort -n)\n  local elements_count=$(echo $elements_sorted | wc -l)\n  local\
    \ elements_threshold=$(($elements_count - 1))\n  local elements_threshold_index=$(($elements_threshold\
    \ + 1))\n  local elements_threshold_values=$(echo $elements_sorted | sed -n $elements_threshold_indexp)\n\
    \  local elements_threshold_values_count=$(echo $elements_threshold_values | wc\
    \ -l)\n  local elements_threshold_values_sum=$(echo $elements_threshold_values\
    \ | awk '{s+=$1} END {print s}')\n  local elements_threshold_values_sum_index=$(($elements_threshold_values_sum\
    \ + 1))\n  local elements_threshold_values_sum_threshold=$(($elements_threshold_values_sum_index\
    \ + 1))\n  local elements_threshold_values_sum_threshold_index=$(($elements_threshold_values_sum_threshold\
    \ + 1))\n  local elements_threshold_values_sum_threshold_values=$(echo $elements_threshold_values\
    \ | sed -n $elements_threshold_values_sum_threshold_indexp)\n  local elements_threshold_values_sum_threshold_values_count=$(echo\
    \ $elements_threshold_values_sum_threshold_values | wc -l)\n  local elements_threshold_values_sum_threshold_values_sum=$(echo\
    \ $elements_threshold_values_sum_threshold_values | awk '{s+=$1} END {print s}')\n\
    \  local elements_threshold_values_sum_threshold_values_sum_index=$(($elements_threshold_values_sum_threshold_values_sum\
    \ + 1))\n  local elements_threshold_values_sum_threshold_values_sum_threshold=$(($elements_threshold_values_sum_threshold_values_sum_index\
    \ + 1))\n  local elements_threshold_values_sum_threshold_values_sum_threshold_index=$(($elements_threshold_values_sum_threshold_values_sum_threshold\
    \ + 1))\n  local elements_threshold_values_sum_threshold_values_sum_threshold_values=$(echo\
    \ $elements_threshold_values | sed -n $elements_threshold_values_sum_threshold_values_sum_threshold_indexp)\n\
    \  local elements_threshold_values_sum_threshold_values_sum_threshold_values_count=$(echo\
    \ $elements_threshold_values_sum_threshold_values_sum_threshold_values | wc -l)\n\
    \  local elements_threshold_values_sum_threshold_values_sum_threshold_values_sum=$(echo\
    \ $elements_threshold_values_sum_threshold_values_sum_threshold_values | awk '{s+=$1}\
    \ END {print s}')\n  local elements_threshold_values_sum_threshold_values_sum_threshold_values_sum_index=$(($elements_threshold_values_sum_threshold_values_sum_threshold_values_sum\
    \ + 1))\n  local elements_threshold_values_sum_threshold_values_sum_threshold_values_sum_threshold=$(($element\n\
    }\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl64ps96t.sh: line 30: unexpected EOF while looking for matching
    `)''

    /tmp/tmpl64ps96t.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    local i\n    local j\n  \
    \  local diff\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n\
    \    local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n    local diff95\n\
    \    local diff96\n    local diff97\n    local diff98\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local i\n  local j\n  local diff\n  local diff1\n  local\
    \ diff2\n  local diff3\n  local diff4\n  local diff5\n  local diff6\n  local diff7\n\
    \  local diff8\n  local diff9\n  local diff10\n  local diff11\n  local diff12\n\
    \  local diff13\n  local diff14\n  local diff15\n  local diff16\n  local diff17\n\
    \  local diff18\n  local diff19\n  local diff20\n  local diff21\n  local diff22\n\
    \  local diff23\n  local diff24\n  local diff25\n  local diff26\n  local diff27\n\
    \  local diff28\n  local diff29\n  local diff30\n  local diff31\n  local diff32\n\
    \  local diff33\n  local diff34\n  local diff35\n  local diff36\n  local diff37\n\
    \  local diff38\n  local diff39\n  local diff40\n  local diff41\n  local diff42\n\
    \  local diff43\n  local diff44\n  local diff45\n  local diff46\n  local diff47\n\
    \  local diff48\n  local diff49\n  local diff50\n  local diff51\n  local diff52\n\
    \  local diff53\n  local diff54\n  local diff55\n  local diff56\n  local diff57\n\
    \  local diff58\n  local diff59\n  local diff60\n  local diff61\n  local diff62\n\
    \  local diff63\n  local diff64\n  local diff65\n  local diff66\n  local diff67\n\
    \  local diff68\n  local diff69\n  local diff70\n  local diff71\n  local diff72\n\
    \  local diff73\n  local diff74\n  local diff75\n  local diff76\n  local diff77\n\
    \  local diff78\n  local diff79\n  local diff80\n  local diff81\n  local diff82\n\
    \  local diff83\n  local diff84\n  local diff85\n  local diff86\n  local diff87\n\
    \  local diff88\n  local diff89\n  local diff90\n  local diff91\n  local diff92\n\
    \  local diff93\n  local diff94\n  local diff95\n  local diff96\n  local diff97\n\
    \  local diff\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    for element in $list; do\n\
    \        if [ \"$element\" -gt \"$threshold\" ]; then\n            return 1\n\
    \        fi\n    done\n    return 0\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjm_l1qvw.sh: line 12: [: 1.0: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 2.0: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 3.9: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 4.0: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 5.0: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 2.2: integer expression expected

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min\n  local max\n  local min_index\n  local max_index\n  local min_index2\n\
    \  local max_index2\n  local min_index3\n  local max_index3\n  local min_index4\n\
    \  local max_index4\n  local min_index5\n  local max_index5\n  local min_index6\n\
    \  local max_index6\n  local min_index7\n  local max_index7\n  local min_index8\n\
    \  local max_index8\n  local min_index9\n  local max_index9\n  local min_index10\n\
    \  local max_index10\n  local min_index11\n  local max_index11\n  local min_index12\n\
    \  local max_index12\n  local min_index13\n  local max_index13\n  local min_index14\n\
    \  local max_index14\n  local min_index15\n  local max_index15\n  local min_index16\n\
    \  local max_index16\n  local min_index17\n  local max_index17\n  local min_index18\n\
    \  local max_index18\n  local min_index19\n  local max_index19\n  local min_index20\n\
    \  local max_index20\n  local min_index21\n  local max_index21\n  local min_index22\n\
    \  local max_index22\n  local min_index23\n  local max_index23\n  local min_index24\n\
    \  local max_index24\n  local min_index25\n  local max_index25\n  local min_index26\n\
    \  local max_index26\n  local min_index27\n  local max_index27\n  local min_index28\n\
    \  local max_index28\n  local min_index29\n  local max_index29\n  local min_index30\n\
    \  local max_index30\n  local min_index31\n  local max_index31\n  local min_index32\n\
    \  local max_index32\n  local min_index33\n  local max_index33\n  local min_index34\n\
    \  local max_index34\n  local min_index35\n  local max_index35\n  local min_index36\n\
    \  local max_index36\n  local min_index37\n  local max_index37\n  local min_index38\n\
    \  local max_index38\n  local min_index39\n  local max_index39\n  local min_index40\n\
    \  local max_index\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    for element in $list; do\n\
    \        if (( $(echo \"$list | grep $element\" | wc -l) > 0 )); then\n      \
    \      return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min\n  local max\n  local min_index\n  local max_index\n  local min_index2\n\
    \  local max_index2\n  local min_distance\n  local max_distance\n  local min_distance2\n\
    \  local max_distance2\n  local min_distance3\n  local max_distance3\n  local\
    \ min_distance4\n  local max_distance4\n  local min_distance5\n  local max_distance5\n\
    \  local min_distance6\n  local max_distance6\n  local min_distance7\n  local\
    \ max_distance7\n  local min_distance8\n  local max_distance8\n  local min_distance9\n\
    \  local max_distance9\n  local min_distance10\n  local max_distance10\n  local\
    \ min_distance11\n  local max_distance11\n  local min_distance12\n  local max_distance12\n\
    \  local min_distance13\n  local max_distance13\n  local min_distance14\n  local\
    \ max_distance14\n  local min_distance15\n  local max_distance15\n  local min_distance16\n\
    \  local max_distance16\n  local min_distance17\n  local max_distance17\n  local\
    \ min_distance18\n  local max_distance18\n  local min_distance19\n  local max_distance19\n\
    \  local min_distance20\n  local max_distance20\n  local min_distance21\n  local\
    \ max_distance21\n  local min_distance22\n  local max_distance22\n  local min_distance23\n\
    \  local max_distance23\n  local min_distance24\n  local max_distance24\n  local\
    \ min_distance25\n  local max_distance25\n  local min_distance26\n  local max_distance26\n\
    \  local min_distance27\n  local max_distance27\n  local min_distance28\n  local\
    \ max_distance28\n  local min_distance29\n  local max_distance29\n  local min_distance30\n\
    \  local max_distance30\n  local min_distance31\n  local max_distance31\n  local\
    \ min_distance32\n  local max_distance32\n  local min_distance33\n  local max_distance33\n\
    \  local min_distance34\n  local max_distance34\n  local min_distance35\n  local\
    \ max_distance35\n  local min_distance36\n  local max_distance36\n  local min_distance37\n\
    \  local max_distance37\n  local min_distance38\n  local max_distance38\n\n}\n\
    \ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"\
    1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\
    \ 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff1\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n \
    \ local diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n \
    \ local diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n\
    \  local diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n\
    \  local diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n\
    \  local diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n\
    \  local diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n\
    \  local diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n\
    \  local diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n\
    \  local diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n\
    \  local diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n\
    \  local diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n\
    \  local diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n\
    \  local diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n\
    \  local diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n\
    \  local diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n\
    \  local diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n\
    \  local diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n\
    \  local diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n\
    \  local diff96\n  local diff97\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=(${elements//,/ })\n  local diff\n\
    \  local i\n  local j\n  local diff1\n  local diff2\n  local diff3\n  local diff4\n\
    \  local diff5\n  local diff6\n  local diff7\n  local diff8\n  local diff9\n \
    \ local diff10\n  local diff11\n  local diff12\n  local diff13\n  local diff14\n\
    \  local diff15\n  local diff16\n  local diff17\n  local diff18\n  local diff19\n\
    \  local diff20\n  local diff21\n  local diff22\n  local diff23\n  local diff24\n\
    \  local diff25\n  local diff26\n  local diff27\n  local diff28\n  local diff29\n\
    \  local diff30\n  local diff31\n  local diff32\n  local diff33\n  local diff34\n\
    \  local diff35\n  local diff36\n  local diff37\n  local diff38\n  local diff39\n\
    \  local diff40\n  local diff41\n  local diff42\n  local diff43\n  local diff44\n\
    \  local diff45\n  local diff46\n  local diff47\n  local diff48\n  local diff49\n\
    \  local diff50\n  local diff51\n  local diff52\n  local diff53\n  local diff54\n\
    \  local diff55\n  local diff56\n  local diff57\n  local diff58\n  local diff59\n\
    \  local diff60\n  local diff61\n  local diff62\n  local diff63\n  local diff64\n\
    \  local diff65\n  local diff66\n  local diff67\n  local diff68\n  local diff69\n\
    \  local diff70\n  local diff71\n  local diff72\n  local diff73\n  local diff74\n\
    \  local diff75\n  local diff76\n  local diff77\n  local diff78\n  local diff79\n\
    \  local diff80\n  local diff81\n  local diff82\n  local diff83\n  local diff84\n\
    \  local diff85\n  local diff86\n  local diff87\n  local diff88\n  local diff89\n\
    \  local diff90\n  local diff91\n  local diff92\n  local diff93\n  local diff94\n\
    \  local diff95\n\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_array=($elements)\n    local min_distance=-1\n\
    \    local min_element\n    local max_element\n    local min_distance_index\n\
    \    local max_distance_index\n    local i\n    local j\n    local distance\n\
    \    local distance_index\n    local element\n    local element_index\n    local\
    \ element_count\n    local min_distance_index\n    local max_distance_index\n\
    \    local min_distance\n    local max_distance\n    local min_element\n    local\
    \ max_element\n    local min_element_index\n    local max_element_index\n    local\
    \ min_element_count\n    local max_element_count\n    local min_element_count\n\
    \    local max_element_count\n    local min_element_count\n    local max_element_count\n\
    \    local min_element_count\n    local max_element_count\n    local min_element_count\n\
    \    local max_element_count\n    local min_element_count\n    local max_element_count\n\
    \    local min_element_count\n    local max_element_count\n    local min_element_count\n\
    \    local max_element_count\n    local min_element_count\n    local max_element_count\n\
    \    local min_element_count\n    local max_element_count\n    local min_element_count\n\
    \    local max_element_count\n    local min_element_count\n    local max_element_count\n\
    \    local min_element_count\n    local max_element_count\n    local min_element_count\n\
    \    local max_element_count\n    local min_element_count\n    local max_element_count\n\
    \    local min_element_count\n    local max_element_count\n    local min_element_count\n\
    \    local max_element_count\n    local min_element_count\n    local max_element_count\n\
    \    local min_element_count\n    local max_element_count\n    local min_element_count\n\
    \    local max_element_count\n    local min_element_count\n    local max_element_count\n\
    \    local min_element_count\n    local max_element_count\n    local min_element_count\n\
    \    local max_element_count\n    local min_element_count\n    local max_element_count\n\
    \    local min_element_count\n    local max_element_count\n    local min_element_count\n\
    \    local max_element_count\n    local min_element_count\n    local max_element_count\n\
    \    local min_element_count\n    local max_element_count\n    local min_element_count\n\
    \    local max_element_count\n    local min_element_count\n    local max_element_count\n\
    \    local min_element_count\n    local max_element_count\n    local min_element_count\n\
    \    local max_element_count\n    local \n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local count=0\n  local min\n  local max\n  local diff\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local numbers=$1\n\
    \  local threshold=$2\n  local result=0\n  local number\n  local i\n  local j\n\
    \  for (( i=0; i<${#numbers[@]}; i++ )); do\n    number=${numbers[$i]}\n    for\
    \ (( j=0; j<${#numbers[@]}; j++ )); do\n      if (( i == j )); then\n        continue\n\
    \      fi\n      if (( number - ${numbers[$j]} < threshold )); then\n        result=1\n\
    \        break\n      fi\n    done\n  done\n  echo $result\n}\n\ncandidate() {\n\
    \    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local i\n  for i in $elements; do\n    local j\n    for\
    \ j in $elements; do\n      if [ \"$i\" != \"$j\" ]; then\n        local diff\n\
    \        diff=$(( $(echo \"$i - $j\" | bc -l) )); if [ \"$diff\" -gt \"$threshold\"\
    \ ]; then\n          return 1\n        fi\n      fi\n    done\n  done\n  return\
    \ 0\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n \
    \   [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"\
    0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjadbuuxr.sh: line 16: -1.0 : syntax error: invalid arithmetic operator
    (error token is ".0 ")

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local max_distance=0\n\
    \  local max_index=0\n  local max_distance_index=0\n  local max_distance_element=0\n\
    \  local max_distance_element_index=0\n  local max_distance_element_count=0\n\
    \  local max_distance_element_count2=0\n  local max_distance_element_count3=0\n\
    \  local max_distance_element_count4=0\n  local max_distance_element_count5=0\n\
    \  local max_distance_element_count6=0\n  local max_distance_element_count7=0\n\
    \  local max_distance_element_count8=0\n  local max_distance_element_count9=0\n\
    \  local max_distance_element_count10=0\n  local max_distance_element_count11=0\n\
    \  local max_distance_element_count12=0\n  local max_distance_element_count13=0\n\
    \  local max_distance_element_count14=0\n  local max_distance_element_count15=0\n\
    \  local max_distance_element_count16=0\n  local max_distance_element_count17=0\n\
    \  local max_distance_element_count18=0\n  local max_distance_element_count19=0\n\
    \  local max_distance_element_count20=0\n  local max_distance_element_count21=0\n\
    \  local max_distance_element_count22=0\n  local max_distance_element_count23=0\n\
    \  local max_distance_element_count24=0\n  local max_distance_element_count25=0\n\
    \  local max_distance_element_count26=0\n  local max_distance_element_count27=0\n\
    \  local max_distance_element_count28=0\n  local max_distance_element_count29=0\n\
    \  local max_distance_element_count30=0\n  local max_distance_element_count31=0\n\
    \  local max_distance_element_count32=0\n  local max_distance_element_count33=0\n\
    \  local max_distance_element_count34=0\n  local max_distance_element_count35=0\n\
    \  local max_distance_element_count36=0\n  local max_distance_element_count37=0\n\
    \  local max_distance_element_count38=0\n  local max_distance_element_count39=0\n\
    \  local max_distance_element_count40=0\n  local max_distance_element_count41=0\n\
    \  local max_distance_element_count42=0\n  local max_distance_element_count43=0\n\
    \  local max_distance_element_count44=0\n  local max_distance_element_count45=0\n\
    \  local max_distance_element_count46=0\n  local max_distance_element_count47=0\n\
    \  local max_distance_element_count48=0\n  local max_distance_element_count49=0\n\
    \  local max_distance_element_count50=0\n  local max_distance_element_count51\n\
    }\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    local i\n    local j\n  \
    \  local diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n\
    \    local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff97\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=(${elements//,/ })\n  local max_diff=0\n\
    \  local max_index=0\n  local max_diff_index=0\n  local max_diff_element=0\n \
    \ local max_diff_element_index=0\n  local max_diff_element_count=0\n  local max_diff_element_count_index=0\n\
    \  local max_diff_element_count2=0\n  local max_diff_element_count2_index=0\n\
    \  local max_diff_element_count3=0\n  local max_diff_element_count3_index=0\n\
    \  local max_diff_element_count4=0\n  local max_diff_element_count4_index=0\n\
    \  local max_diff_element_count5=0\n  local max_diff_element_count5_index=0\n\
    \  local max_diff_element_count6=0\n  local max_diff_element_count6_index=0\n\
    \  local max_diff_element_count7=0\n  local max_diff_element_count7_index=0\n\
    \  local max_diff_element_count8=0\n  local max_diff_element_count8_index=0\n\
    \  local max_diff_element_count9=0\n  local max_diff_element_count9_index=0\n\
    \  local max_diff_element_count10=0\n  local max_diff_element_count10_index=0\n\
    \  local max_diff_element_count11=0\n  local max_diff_element_count11_index=0\n\
    \  local max_diff_element_count12=0\n  local max_diff_element_count12_index=0\n\
    \  local max_diff_element_count13=0\n  local max_diff_element_count13_index=0\n\
    \  local max_diff_element_count14=0\n  local max_diff_element_count14_index=0\n\
    \  local max_diff_element_count15=0\n  local max_diff_element_count15_index=0\n\
    \  local max_diff_element_count16=0\n  local max_diff_element_count16_index=0\n\
    \  local max_diff_element_count17=0\n  local max_diff_element_count17_index=0\n\
    \  local max_diff_element_count18=0\n  local max_diff_element_count18_index=0\n\
    \  local max_diff_element_count19=0\n  local max_diff_element_count19_index=0\n\
    \  local max_diff_element_count20=0\n  local max_diff_element_count20_index=0\n\
    \  local max_diff_element_count21=0\n  local max_diff_element_count21_index=0\n\
    \  local max_diff_element_count22=0\n  local max_diff_element_count22_index=0\n\
    \  local max_diff_element_count23=0\n  local max_diff_element_count23_index=0\n\
    \  local max_diff_element_count24=0\n  local max_diff_element_count24_index=0\n\
    }\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_count=${#elements[@]}\n  local i\n  local\
    \ j\n  local distance\n  local min_distance\n  local min_i\n  local min_j\n  local\
    \ min_distance_index\n  local min_distance_index2\n  local min_distance_index3\n\
    \  local min_distance_index4\n  local min_distance_index5\n  local min_distance_index6\n\
    \  local min_distance_index7\n  local min_distance_index8\n  local min_distance_index9\n\
    \  local min_distance_index10\n  local min_distance_index11\n  local min_distance_index12\n\
    \  local min_distance_index13\n  local min_distance_index14\n  local min_distance_index15\n\
    \  local min_distance_index16\n  local min_distance_index17\n  local min_distance_index18\n\
    \  local min_distance_index19\n  local min_distance_index20\n  local min_distance_index21\n\
    \  local min_distance_index22\n  local min_distance_index23\n  local min_distance_index24\n\
    \  local min_distance_index25\n  local min_distance_index26\n  local min_distance_index27\n\
    \  local min_distance_index28\n  local min_distance_index29\n  local min_distance_index30\n\
    \  local min_distance_index31\n  local min_distance_index32\n  local min_distance_index33\n\
    \  local min_distance_index34\n  local min_distance_index35\n  local min_distance_index36\n\
    \  local min_distance_index37\n  local min_distance_index38\n  local min_distance_index39\n\
    \  local min_distance_index40\n  local min_distance_index41\n  local min_distance_index42\n\
    \  local min_distance_index43\n  local min_distance_index44\n  local min_distance_index45\n\
    \  local min_distance_index46\n  local min_distance_index47\n  local min_distance_index48\n\
    \  local min_distance_index49\n  local min_distance_index50\n  local min_distance_index51\n\
    \  local min_distance_index52\n  local min_distance_index53\n  local min_distance_index54\n\
    \  local min_distance_index55\n  local min_distance_index56\n  local min_distance_index57\n\
    \  local min_distance_index58\n  local min_distance_index59\n  local min_distance_index60\n\
    \  local min_distance_index61\n  local min_distance_index62\n  local min_distance_index63\n\
    \  local min_distance_index64\n  local min_distance_index65\n  local min_distance_index66\n\
    \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local numbers=$1\n\
    \    local threshold=$2\n    local output=0\n    local i\n    local j\n    local\
    \ diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n \
    \   local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local count=0\n    local element\n    local element1\n\
    \    local element2\n    local diff\n    local diff1\n    local diff2\n    local\
    \ diff3\n    local diff4\n    local diff5\n    local diff6\n    local diff7\n\
    \    local diff8\n    local diff9\n    local diff10\n    local diff11\n    local\
    \ diff12\n    local diff13\n    local diff14\n    local diff15\n    local diff16\n\
    \    local diff17\n    local diff18\n    local diff19\n    local diff20\n    local\
    \ diff21\n    local diff22\n    local diff23\n    local diff24\n    local diff25\n\
    \    local diff26\n    local diff27\n    local diff28\n    local diff29\n    local\
    \ diff30\n    local diff31\n    local diff32\n    local diff33\n    local diff34\n\
    \    local diff35\n    local diff36\n    local diff37\n    local diff38\n    local\
    \ diff39\n    local diff40\n    local diff41\n    local diff42\n    local diff43\n\
    \    local diff44\n    local diff45\n    local diff46\n    local diff47\n    local\
    \ diff48\n    local diff49\n    local diff50\n    local diff51\n    local diff52\n\
    \    local diff53\n    local diff54\n    local diff55\n    local diff56\n    local\
    \ diff57\n    local diff58\n    local diff59\n    local diff60\n    local diff61\n\
    \    local diff62\n    local diff63\n    local diff64\n    local diff65\n    local\
    \ diff66\n    local diff67\n    local diff68\n    local diff69\n    local diff70\n\
    \    local diff71\n    local diff72\n    local diff73\n    local diff74\n    local\
    \ diff75\n    local diff76\n    local diff77\n    local diff78\n    local diff79\n\
    \    local diff80\n    local diff81\n    local diff82\n    local diff83\n    local\
    \ diff84\n    local diff85\n    local diff86\n    local diff87\n    local diff88\n\
    \    local diff89\n    local diff90\n    local diff91\n    local diff92\n    local\
    \ diff93\n    local diff94\n    local diff95\n    local \n}\n\ncandidate() {\n\
    \    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    for element in $list; do\n\
    \        if [ \"$element\" -gt \"$threshold\" ]; then\n            return 1\n\
    \        fi\n    done\n    return 0\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjm_l1qvw.sh: line 12: [: 1.0: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 2.0: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 3.9: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 4.0: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 5.0: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 2.2: integer expression expected

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local element\n  local i\n  local j\n  local diff\n \
    \ local diff2\n  local diff3\n  local diff4\n  local diff5\n  local diff6\n  local\
    \ diff7\n  local diff8\n  local diff9\n  local diff10\n  local diff11\n  local\
    \ diff12\n  local diff13\n  local diff14\n  local diff15\n  local diff16\n  local\
    \ diff17\n  local diff18\n  local diff19\n  local diff20\n  local diff21\n  local\
    \ diff22\n  local diff23\n  local diff24\n  local diff25\n  local diff26\n  local\
    \ diff27\n  local diff28\n  local diff29\n  local diff30\n  local diff31\n  local\
    \ diff32\n  local diff33\n  local diff34\n  local diff35\n  local diff36\n  local\
    \ diff37\n  local diff38\n  local diff39\n  local diff40\n  local diff41\n  local\
    \ diff42\n  local diff43\n  local diff44\n  local diff45\n  local diff46\n  local\
    \ diff47\n  local diff48\n  local diff49\n  local diff50\n  local diff51\n  local\
    \ diff52\n  local diff53\n  local diff54\n  local diff55\n  local diff56\n  local\
    \ diff57\n  local diff58\n  local diff59\n  local diff60\n  local diff61\n  local\
    \ diff62\n  local diff63\n  local diff64\n  local diff65\n  local diff66\n  local\
    \ diff67\n  local diff68\n  local diff69\n  local diff70\n  local diff71\n  local\
    \ diff72\n  local diff73\n  local diff74\n  local diff75\n  local diff76\n  local\
    \ diff77\n  local diff78\n  local diff79\n  local diff80\n  local diff81\n  local\
    \ diff82\n  local diff83\n  local diff84\n  local diff85\n  local diff86\n  local\
    \ diff87\n  local diff88\n  local diff89\n  local diff90\n  local diff91\n  local\
    \ diff92\n  local diff93\n  local diff94\n  local diff95\n  local diff96\n  local\
    \ diff97\n  local diff98\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 2
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=$(echo $elements | tr ' ' '\\n'\
    \ | sort -n)\n  local elements_sorted_length=$(echo $elements_sorted | wc -l)\n\
    \  local elements_sorted_length=$((elements_sorted_length-1))\n  local elements_sorted_last=$(echo\
    \ $elements_sorted | tail -1)\n  local elements_sorted_last_length=$(echo $elements_sorted_last\
    \ | wc -l)\n  local elements_sorted_last_length=$((elements_sorted_last_length-1))\n\
    \  local elements_sorted_last_last=$(echo $elements_sorted_last | tail -1)\n \
    \ local elements_sorted_last_last_length=$(echo $elements_sorted_last_last | wc\
    \ -l)\n  local elements_sorted_last_last_length=$((elements_sorted_last_last_length-1))\n\
    \  local elements_sorted_last_last_last=$(echo $elements_sorted_last_last | tail\
    \ -1)\n  local elements_sorted_last_last_last_length=$(echo $elements_sorted_last_last_last\
    \ | wc -l)\n  local elements_sorted_last_last_last_length=$((elements_sorted_last_last_last_length-1))\n\
    \  local elements_sorted_last_last_last_last=$(echo $elements_sorted_last_last_last\
    \ | tail -1)\n  local elements_sorted_last_last_last_last_length=$(echo $elements_sorted_last_last_last_last\
    \ | wc -l)\n  local elements_sorted_last_last_last_last_length=$((elements_sorted_last_last_last_last_length-1))\n\
    \  local elements_sorted_last_last_last_last_last=$(echo $elements_sorted_last_last_last_last\
    \ | tail -1)\n  local elements_sorted_last_last_last_last_last_length=$(echo $elements_sorted_last_last_last_last_last\
    \ | wc -l)\n  local elements_sorted_last_last_last_last_last_length=$((elements_sorted_last_last_last_last_last_length-1))\n\
    \  local elements_sorted_last_last_last_last_last_last=$(echo $elements_sorted_last_last_last_last_last\
    \ | tail -1)\n  local elements_sorted_last_last_last_last_last_last_length=$(echo\
    \ $elements_sorted_last_last_last_last_last_last | wc -l)\n  local elements_sorted_last_last_last_last_last_last_length=$((elements_sorted_last_last_last_last_last_last_length-1))\n\
    \  local elements_sorted_last_last_last_last_last_last_last=$(echo $elements_sorted_last_last_last_last_last_last\
    \ | tail -1)\n  local elements_sorted_last_last_last_last_last_last_last_length=$(echo\
    \ $elements_sorted_last_last_last_last_last_last_last | w\n}\n\ncandidate() {\n\
    \    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0\
    \ 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\"\
    \ \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\")\
    \ = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv6lzgk7y.sh: line 32: unexpected EOF while looking for matching
    `)''

    /tmp/tmpv6lzgk7y.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local numbers=$1\n\
    \    local threshold=$2\n    local result=0\n    local number\n    local i\n \
    \   for (( i=0; i<${#numbers}; i++ )); do\n        number=${numbers[i]}\n    \
    \    if (( number > threshold )); then\n            result=1\n            break\n\
    \        fi\n    done\n    return $result\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp11zs_iow.sh: line 15: ((: 1.0 2.0 3.9 4.0 5.0 2.2: syntax error:
    invalid arithmetic operator (error token is ".0 2.0 3.9 4.0 5.0 2.2")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error: invalid arithmetic operator
    (error token is ".3")

    /tmp/tmp11zs_iow.sh: line 15: ((: 0.3: syntax error'
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min\n  local max\n  local min_index\n  local max_index\n  local min_index2\n\
    \  local max_index2\n  local min_distance\n  local max_distance\n  local min_index3\n\
    \  local max_index3\n  local min_distance2\n  local max_distance2\n  local min_index4\n\
    \  local max_index4\n  local min_distance3\n  local max_distance3\n  local min_index5\n\
    \  local max_index5\n  local min_distance4\n  local max_distance4\n  local min_index6\n\
    \  local max_index6\n  local min_distance5\n  local max_distance5\n  local min_index7\n\
    \  local max_index7\n  local min_distance6\n  local max_distance6\n  local min_index8\n\
    \  local max_index8\n  local min_distance7\n  local max_distance7\n  local min_index9\n\
    \  local max_index9\n  local min_distance8\n  local max_distance8\n  local min_index10\n\
    \  local max_index10\n  local min_distance9\n  local max_distance9\n  local min_index11\n\
    \  local max_index11\n  local min_distance10\n  local max_distance10\n  local\
    \ min_index12\n  local max_index12\n  local min_distance11\n  local max_distance11\n\
    \  local min_index13\n  local max_index13\n  local min_distance12\n  local max_distance12\n\
    \  local min_index14\n  local max_index14\n  local min_distance13\n  local max_distance13\n\
    \  local min_index15\n  local max_index15\n  local min_distance14\n  local max_distance14\n\
    \  local min_index16\n  local max_index16\n  local min_distance15\n  local max_distance15\n\
    \  local min_index17\n  local max_index17\n  local min_distance16\n  local max_distance16\n\
    \  local min_index18\n  local max_index18\n  local min_distance17\n  local max_distance17\n\
    \  local min_index19\n  local max_index19\n  local min_distance18\n  local max_distance18\n\
    \  local min_index20\n  local max_index20\n  local min_distance19\n  local max_distance19\n\
    \  local min_index21\n  local max_index21\n\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local i\n    local j\n    local diff\n    local\
    \ diff1\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n\
    \    local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n    local diff95\n\
    \    local diff96\n    local diff97\n    local diff\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff1\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n \
    \ local diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n \
    \ local diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n\
    \  local diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n\
    \  local diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n\
    \  local diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n\
    \  local diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n\
    \  local diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n\
    \  local diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n\
    \  local diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n\
    \  local diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n\
    \  local diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n\
    \  local diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n\
    \  local diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n\
    \  local diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n\
    \  local diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n\
    \  local diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n\
    \  local diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n\
    \  local diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n\
    \  local diff96\n  local diff97\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted\n  local i\n  local j\n  local\
    \ diff\n  local diff1\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n\
    \  local diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n\
    \  local diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n\
    \  local diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n\
    \  local diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n\
    \  local diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n\
    \  local diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n\
    \  local diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n\
    \  local diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n\
    \  local diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n\
    \  local diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n\
    \  local diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n\
    \  local diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n\
    \  local diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n\
    \  local diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n\
    \  local diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n\
    \  local diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n\
    \  local diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n\
    \  local diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n\
    \  local diff96\n  local \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local elements_array=($elements)\n    local elements_array_length=${#elements_array[@]}\n\
    \    local elements_array_length_minus_one=$((elements_array_length - 1))\n  \
    \  local elements_array_length_minus_one_minus_one=$((elements_array_length_minus_one\
    \ - 1))\n    local elements_array_length_minus_one_minus_one_minus_one=$((elements_array_length_minus_one_minus_one\
    \ - 1))\n    local elements_array_length_minus_one_minus_one_minus_one_minus_one=$((elements_array_length_minus_one_minus_one_minus_one\
    \ - 1))\n    local elements_array_length_minus_one_minus_one_minus_one_minus_one_minus_one=$((elements_array_length_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\n    local elements_array_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$((elements_array_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\n    local elements_array_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$((elements_array_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\n    local elements_array_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$((elements_array_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\n    local elements_array_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$((elements_array_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\n    local elements_array_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\n\
    }\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_count=${#elements[@]}\n  local i\n  local\
    \ j\n  local distance\n  local min_distance\n  local min_element\n  local min_element_index\n\
    \  local min_element_distance\n  local min_element_count\n  local min_element_index2\n\
    \  local min_element_distance2\n  local min_element_count2\n  local min_element_index3\n\
    \  local min_element_distance3\n  local min_element_count3\n  local min_element_index4\n\
    \  local min_element_distance4\n  local min_element_count4\n  local min_element_index5\n\
    \  local min_element_distance5\n  local min_element_count5\n  local min_element_index6\n\
    \  local min_element_distance6\n  local min_element_count6\n  local min_element_index7\n\
    \  local min_element_distance7\n  local min_element_count7\n  local min_element_index8\n\
    \  local min_element_distance8\n  local min_element_count8\n  local min_element_index9\n\
    \  local min_element_distance9\n  local min_element_count9\n  local min_element_index10\n\
    \  local min_element_distance10\n  local min_element_count10\n  local min_element_index11\n\
    \  local min_element_distance11\n  local min_element_count11\n  local min_element_index12\n\
    \  local min_element_distance12\n  local min_element_count12\n  local min_element_index13\n\
    \  local min_element_distance13\n  local min_element_count13\n  local min_element_index14\n\
    \  local min_element_distance14\n  local min_element_count14\n  local min_element_index15\n\
    \  local min_element_distance15\n  local min_element_count15\n  local min_element_index16\n\
    \  local min_element_distance16\n  local min_element_count16\n  local min_element_index17\n\
    \  local min_element_distance17\n  local min_element_count17\n  local min_element_index18\n\
    \  local min_element_distance18\n  local min_element_count18\n  local min_element_index19\n\
    \  local min_element_distance19\n  local min_element_count19\n  local min_element_index20\n\
    \  local min_element_distance20\n  local min_element_count20\n  local min_element_index21\n\
    \  local min_element_distance21\n  local min_element_count21\n  local min_element_index22\n\
    \  local min_element_distance22\n  local min_element_count22\n  local min_element_index23\n\
    \n}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    local i\n    local j\n  \
    \  local diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n\
    \    local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff97\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    for element in $list; do\n\
    \        if [ \"$element\" -gt \"$threshold\" ]; then\n            return 1\n\
    \        fi\n    done\n    return 0\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjm_l1qvw.sh: line 12: [: 1.0: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 2.0: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 3.9: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 4.0: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 5.0: integer expression expected

    /tmp/tmpjm_l1qvw.sh: line 12: [: 2.2: integer expression expected

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local list=\"$1\"\
    \n    local threshold=\"$2\"\n    local element\n    local i\n    local j\n  \
    \  local diff\n    local diff1\n    local diff2\n    local diff3\n    local diff4\n\
    \    local diff5\n    local diff6\n    local diff7\n    local diff8\n    local\
    \ diff9\n    local diff10\n    local diff11\n    local diff12\n    local diff13\n\
    \    local diff14\n    local diff15\n    local diff16\n    local diff17\n    local\
    \ diff18\n    local diff19\n    local diff20\n    local diff21\n    local diff22\n\
    \    local diff23\n    local diff24\n    local diff25\n    local diff26\n    local\
    \ diff27\n    local diff28\n    local diff29\n    local diff30\n    local diff31\n\
    \    local diff32\n    local diff33\n    local diff34\n    local diff35\n    local\
    \ diff36\n    local diff37\n    local diff38\n    local diff39\n    local diff40\n\
    \    local diff41\n    local diff42\n    local diff43\n    local diff44\n    local\
    \ diff45\n    local diff46\n    local diff47\n    local diff48\n    local diff49\n\
    \    local diff50\n    local diff51\n    local diff52\n    local diff53\n    local\
    \ diff54\n    local diff55\n    local diff56\n    local diff57\n    local diff58\n\
    \    local diff59\n    local diff60\n    local diff61\n    local diff62\n    local\
    \ diff63\n    local diff64\n    local diff65\n    local diff66\n    local diff67\n\
    \    local diff68\n    local diff69\n    local diff70\n    local diff71\n    local\
    \ diff72\n    local diff73\n    local diff74\n    local diff75\n    local diff76\n\
    \    local diff77\n    local diff78\n    local diff79\n    local diff80\n    local\
    \ diff81\n    local diff82\n    local diff83\n    local diff84\n    local diff85\n\
    \    local diff86\n    local diff87\n    local diff88\n    local diff89\n    local\
    \ diff90\n    local diff91\n    local diff92\n    local diff93\n    local diff94\n\
    \    local diff95\n    local diff96\n    local diff97\n}\n\ncandidate() {\n  \
    \  has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9\
    \ 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\"\
    \ \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local i\n  local j\n  local diff\n  local diff1\n\
    \  local diff2\n  local diff3\n  local diff4\n  local diff5\n  local diff6\n \
    \ local diff7\n  local diff8\n  local diff9\n  local diff10\n  local diff11\n\
    \  local diff12\n  local diff13\n  local diff14\n  local diff15\n  local diff16\n\
    \  local diff17\n  local diff18\n  local diff19\n  local diff20\n  local diff21\n\
    \  local diff22\n  local diff23\n  local diff24\n  local diff25\n  local diff26\n\
    \  local diff27\n  local diff28\n  local diff29\n  local diff30\n  local diff31\n\
    \  local diff32\n  local diff33\n  local diff34\n  local diff35\n  local diff36\n\
    \  local diff37\n  local diff38\n  local diff39\n  local diff40\n  local diff41\n\
    \  local diff42\n  local diff43\n  local diff44\n  local diff45\n  local diff46\n\
    \  local diff47\n  local diff48\n  local diff49\n  local diff50\n  local diff51\n\
    \  local diff52\n  local diff53\n  local diff54\n  local diff55\n  local diff56\n\
    \  local diff57\n  local diff58\n  local diff59\n  local diff60\n  local diff61\n\
    \  local diff62\n  local diff63\n  local diff64\n  local diff65\n  local diff66\n\
    \  local diff67\n  local diff68\n  local diff69\n  local diff70\n  local diff71\n\
    \  local diff72\n  local diff73\n  local diff74\n  local diff75\n  local diff76\n\
    \  local diff77\n  local diff78\n  local diff79\n  local diff80\n  local diff81\n\
    \  local diff82\n  local diff83\n  local diff84\n  local diff85\n  local diff86\n\
    \  local diff87\n  local diff88\n  local diff89\n  local diff90\n  local diff91\n\
    \  local diff92\n  local diff93\n  local diff94\n  local diff95\n  local diff96\n\
    \  local diff97\n  local diff\n}\n\ncandidate() {\n    has_close_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"\
    0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n    local elements=$1\n\
    \    local threshold=$2\n    local count=0\n    local max=0\n    local min=0\n\
    \    local diff\n    local i\n    local j\n    local k\n    local diff\n    local\
    \ diff1\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n\
    \    local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n\n}\n\ncandidate() {\n    has_close_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0\
    \ 2.2\" \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.05\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff2\n  local diff3\n  local diff4\n  local diff5\n  local diff6\n \
    \ local diff7\n  local diff8\n  local diff9\n  local diff10\n  local diff11\n\
    \  local diff12\n  local diff13\n  local diff14\n  local diff15\n  local diff16\n\
    \  local diff17\n  local diff18\n  local diff19\n  local diff20\n  local diff21\n\
    \  local diff22\n  local diff23\n  local diff24\n  local diff25\n  local diff26\n\
    \  local diff27\n  local diff28\n  local diff29\n  local diff30\n  local diff31\n\
    \  local diff32\n  local diff33\n  local diff34\n  local diff35\n  local diff36\n\
    \  local diff37\n  local diff38\n  local diff39\n  local diff40\n  local diff41\n\
    \  local diff42\n  local diff43\n  local diff44\n  local diff45\n  local diff46\n\
    \  local diff47\n  local diff48\n  local diff49\n  local diff50\n  local diff51\n\
    \  local diff52\n  local diff53\n  local diff54\n  local diff55\n  local diff56\n\
    \  local diff57\n  local diff58\n  local diff59\n  local diff60\n  local diff61\n\
    \  local diff62\n  local diff63\n  local diff64\n  local diff65\n  local diff66\n\
    \  local diff67\n  local diff68\n  local diff69\n  local diff70\n  local diff71\n\
    \  local diff72\n  local diff73\n  local diff74\n  local diff75\n  local diff76\n\
    \  local diff77\n  local diff78\n  local diff79\n  local diff80\n  local diff81\n\
    \  local diff82\n  local diff83\n  local diff84\n  local diff85\n  local diff86\n\
    \  local diff87\n  local diff88\n  local diff89\n  local diff90\n  local diff91\n\
    \  local diff92\n  local diff93\n  local diff94\n  local diff95\n  local diff96\n\
    \  local diff97\n  local diff98\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=$(IFS=,; echo \"$elements\" | tr\
    \ \" \" \"\\n\")\n  local elements_sorted_length=${#elements_sorted}\n  local\
    \ elements_sorted_index=0\n  local elements_sorted_index_previous=0\n  local elements_sorted_index_current=0\n\
    \  local elements_sorted_index_next=0\n  local elements_sorted_index_next_previous=0\n\
    \  local elements_sorted_index_next_current=0\n  local elements_sorted_index_next_next_previous=0\n\
    \  local elements_sorted_index_next_next_current=0\n  local elements_sorted_index_next_next_next_previous=0\n\
    \  local elements_sorted_index_next_next_next_current=0\n  local elements_sorted_index_next_next_next_next_previous=0\n\
    \  local elements_sorted_index_next_next_next_next_current=0\n  local elements_sorted_index_next_next_next_next_next_previous=0\n\
    \  local elements_sorted_index_next_next_next_next_next_current=0\n  local elements_sorted_index_next_next_next_next_next_next_previous=0\n\
    \  local elements_sorted_index_next_next_next_next_next_next_current=0\n  local\
    \ elements_sorted_index_next_next_next_next_next_next_next_previous=0\n  local\
    \ elements_sorted_index_next_next_next_next_next_next_next_current=0\n  local\
    \ elements_sorted_index_next_next_next_next_next_next_next_next_previous=0\n \
    \ local elements_sorted_index_next_next_next_next_next_next_next_next_current=0\n\
    \  local elements_sorted_index_next_next_next_next_next_next_next_next_next_previous=0\n\
    \  local elements_sorted_index_next_next_next_next_next_next_next_next_next_current=0\n\
    \  local elements_sorted_index_next_next_next_next_next_next_next_next_next_previous=0\n\
    \  local elements_sorted_index_next_next_next_next_next_next_next_next_next_current=0\n\
    \  local elements_sorted_index_next_next_next_next_next_next_next_next_next_previous=0\n\
    \  local elements_sorted_index_next_next_next_next_next_next_next_next_next_next_current=0\n\
    \  local elements_sorted_index_next_next_next_next_next_next_next_next_next_next_previous=0\n\
    \  local elements_sorted_index_next_next_next_next_next_next_next_next_next_next_next_current=0\n\
    \  local elements_sorted_index_next_next_next_next_next_next_next_next_next_next_previous=0\n\
    \  local elements_sorted_index_next_next_next_next_next_next_next_next_next_next_current=0\n\
    \  local elements_sorted_index_next_next_next_next_next_next_next_next_next_\n\
    }\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local diff\n\
    \  local diff1\n  local diff2\n  local diff3\n  local diff4\n  local diff5\n \
    \ local diff6\n  local diff7\n  local diff8\n  local diff9\n  local diff10\n \
    \ local diff11\n  local diff12\n  local diff13\n  local diff14\n  local diff15\n\
    \  local diff16\n  local diff17\n  local diff18\n  local diff19\n  local diff20\n\
    \  local diff21\n  local diff22\n  local diff23\n  local diff24\n  local diff25\n\
    \  local diff26\n  local diff27\n  local diff28\n  local diff29\n  local diff30\n\
    \  local diff31\n  local diff32\n  local diff33\n  local diff34\n  local diff35\n\
    \  local diff36\n  local diff37\n  local diff38\n  local diff39\n  local diff40\n\
    \  local diff41\n  local diff42\n  local diff43\n  local diff44\n  local diff45\n\
    \  local diff46\n  local diff47\n  local diff48\n  local diff49\n  local diff50\n\
    \  local diff51\n  local diff52\n  local diff53\n  local diff54\n  local diff55\n\
    \  local diff56\n  local diff57\n  local diff58\n  local diff59\n  local diff60\n\
    \  local diff61\n  local diff62\n  local diff63\n  local diff64\n  local diff65\n\
    \  local diff66\n  local diff67\n  local diff68\n  local diff69\n  local diff70\n\
    \  local diff71\n  local diff72\n  local diff73\n  local diff74\n  local diff75\n\
    \  local diff76\n  local diff77\n  local diff78\n  local diff79\n  local diff80\n\
    \  local diff81\n  local diff82\n  local diff83\n  local diff84\n  local diff85\n\
    \  local diff86\n  local diff87\n  local diff88\n  local diff89\n  local diff90\n\
    \  local diff91\n  local diff92\n  local diff93\n  local diff94\n  local diff95\n\
    \  local diff96\n  local diff97\n}\n\ncandidate() {\n    has_close_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\"\
    \ \"0.3\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n   \
    \ [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1.1 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2\
    \ 3.1 4.1 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035470
- exit_code: 2
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_sorted=$(echo $elements | tr ' ' '\\n'\
    \ | sort -n)\n  local elements_sorted_length=$(echo $elements_sorted | wc -l)\n\
    \  local elements_sorted_length_minus_one=$((elements_sorted_length-1))\n  local\
    \ elements_sorted_length_minus_one_minus_threshold=$((elements_sorted_length_minus_one-threshold))\n\
    \  local elements_sorted_length_minus_one_minus_threshold_minus_one=$((elements_sorted_length_minus_one_minus_threshold-1))\n\
    \  local elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold=$((elements_sorted_length_minus_one_minus_threshold_minus_one-1))\n\
    \  local elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one=$((elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold-1))\n\
    \  local elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold=$((elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one-1))\n\
    \  local elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one=$((elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one-1))\n\
    \  local elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold=$((elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one-1))\n\
    \  local elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold=$((elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold-1))\n\
    \  local elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one=$((elements_sorted_length_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_one_minus_threshold_minus_\n\
    }\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n    [[\
    \ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
    \ 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\"\
    \ \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\")\
    \ = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphjdu683b.sh: line 21: unexpected EOF while looking for matching
    `)''

    /tmp/tmphjdu683b.sh: line 40: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local elements=$1\n\
    \  local threshold=$2\n  local elements_array=($elements)\n  local min_element=${elements_array[0]}\n\
    \  local max_element=${elements_array[0]}\n  local min_diff=${threshold}\n  local\
    \ max_diff=${threshold}\n  local min_diff_index=0\n  local max_diff_index=0\n\
    \  local min_diff_index2=0\n  local max_diff_index2=0\n  local min_diff_index3=0\n\
    \  local max_diff_index3=0\n  local min_diff_index4=0\n  local max_diff_index4=0\n\
    \  local min_diff_index5=0\n  local max_diff_index5=0\n  local min_diff_index6=0\n\
    \  local max_diff_index6=0\n  local min_diff_index7=0\n  local max_diff_index7=0\n\
    \  local min_diff_index8=0\n  local max_diff_index8=0\n  local min_diff_index9=0\n\
    \  local max_diff_index9=0\n  local min_diff_index10=0\n  local max_diff_index10=0\n\
    \  local min_diff_index11=0\n  local max_diff_index11=0\n  local min_diff_index12=0\n\
    \  local max_diff_index12=0\n  local min_diff_index13=0\n  local max_diff_index13=0\n\
    \  local min_diff_index14=0\n  local max_diff_index14=0\n  local min_diff_index15=0\n\
    \  local max_diff_index15=0\n  local min_diff_index16=0\n  local max_diff_index16=0\n\
    \  local min_diff_index17=0\n  local max_diff_index17=0\n  local min_diff_index18=0\n\
    \  local max_diff_index18=0\n  local min_diff_index19=0\n  local max_diff_index19=0\n\
    \  local min_diff_index20=0\n  local max_diff_index20=0\n  local min_diff_index21=0\n\
    \  local max_diff_index21=0\n  local min_diff_index22=0\n  local max_diff_index22=0\n\
    \  local min_diff_index23=0\n  local max_diff_index23=0\n  local min_diff_index24=0\n\
    \  local max_diff_index24=0\n  local min_diff_index25=0\n  local max_diff_index25=0\n\
    \  local min_diff_index26=0\n  local max_diff_index26=0\n  local min_diff_index27=0\n\
    \  local max_diff_index27=0\n  local min_diff_index28=0\n  local max_diff_index28=0\n\
    \  local min_diff_index29\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471
- exit_code: 1
  program: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers\
    \ closer to each other than\n# given threshold.\n#\n# $1 is a space-separated\
    \ list\n# $2 is a floating point\nhas_close_elements() {\n  local list=\"$1\"\n\
    \  local threshold=\"$2\"\n  local element\n  local i\n  local j\n  local distance\n\
    \  local min\n  local max\n  local min_index\n  local max_index\n  local min_distance\n\
    \  local max_distance\n  local min_index2\n  local max_index2\n  local min_distance2\n\
    \  local max_distance2\n  local min_index3\n  local max_index3\n  local min_distance3\n\
    \  local max_distance3\n  local min_index4\n  local max_index4\n  local min_distance4\n\
    \  local max_distance4\n  local min_index5\n  local max_index5\n  local min_distance5\n\
    \  local max_distance5\n  local min_index6\n  local max_index6\n  local min_distance6\n\
    \  local max_distance6\n  local min_index7\n  local max_index7\n  local min_distance7\n\
    \  local max_distance7\n  local min_index8\n  local max_index8\n  local min_distance8\n\
    \  local max_distance8\n  local min_index9\n  local max_index9\n  local min_distance9\n\
    \  local max_distance9\n  local min_index10\n  local max_index10\n  local min_distance10\n\
    \  local max_distance10\n  local min_index11\n  local max_index11\n  local min_distance11\n\
    \  local max_distance11\n  local min_index12\n  local max_index12\n  local min_distance12\n\
    \  local max_distance12\n  local min_index13\n  local max_index13\n  local min_distance13\n\
    \  local max_distance13\n  local min_index14\n  local max_index14\n  local min_distance14\n\
    \  local max_distance14\n  local min_index15\n  local max_index15\n  local min_distance15\n\
    \  local max_distance15\n  local min_index16\n  local max_index16\n  local min_distance16\n\
    \  local max_distance16\n  local min_index17\n  local max_index17\n  local min_distance17\n\
    \  local max_distance17\n  local min_index18\n  local max_index18\n  local min_distance18\n\
    \  local max_distance18\n  local min_index19\n  local max_index19\n  local min_distance19\n\
    \  local max_distance19\n  local min_index20\n  local max_index20\n  local min_distance20\n\
    \  local max_distance20\n\n}\n\ncandidate() {\n    has_close_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"\
    false\" ]]\n    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1\
    \ 2.2 3.1 4.1 5.1\" \"1.0\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1\
    \ 5.1\" \"0.5\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035471

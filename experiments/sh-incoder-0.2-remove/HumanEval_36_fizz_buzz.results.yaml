language: sh
name: HumanEval_36_fizz_buzz
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 11 != 0 )) && count=$(( count + 1 ))\n    (( n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n % 11 == 0 )) && count=$(( count + 1 ))\n  \
    \  (( n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 )) && count=$((\
    \ count + 1 ))\n    (( n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11\
    \ == 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count\
    \ + 1 ))\n    (( n % 11 != 0 )) && count=$(( count + 1 ))\n    (( n % 13 != 0\
    \ )) && count=$(( count + 1 ))\n    (( n % 11 == 0 )) && count=$(( count + 1 ))\n\
    \    (( n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 )) && count=$((\
    \ count + 1 ))\n    (( n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11\
    \ == 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count\
    \ + 1 ))\n    (( n % 11 != 0 )) && count=$(( count + 1 ))\n    (( n % 13 != 0\
    \ )) && count=$(( count + 1 ))\n    (( n % 11 == 0 )) && count=$(( count + 1 ))\n\
    \    (( n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 )) && count=$((\
    \ count + 1 ))\n    (( n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11\
    \ == 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count\
    \ + 1 ))\n    (( n % 11 != 0 )) && count=$(( count + 1 ))\n    (( n % 13 != 0\
    \ )) && count=$(( count + 1 ))\n    (( n % 11 == 0 )) && count=$(( count + \n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpg20j6ykz.sh: line 37: unexpected EOF while looking for matching
    `)''

    /tmp/tmpg20j6ykz.sh: line 57: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if (( $i % 11 == 0 )); then\n      if (( $i % 13 == 0 )); then\n        ((\
    \ count++ ))\n      else\n        echo \"$i\"\n      fi\n    fi\n  done\n  echo\
    \ \"$count\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$(($count\
    \ + 1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [[ $((i % 11)) -eq 0 ]] && [[ $((i % 13)) -eq 0 ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 7 == 0 )) && count=$(( count + 1 ))\n    (( n % n % 11 == 0 ))\
    \ && count=$(( count + 1 ))\n    (( n % n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % n % 7 == 0 )) && count=$(( count + 1 ))\n    (( n /= 11 )) &&\
    \ count=$(( count + 1 ))\n    (( n /= 13 )) && count=$(( count + 1 ))\n    ((\
    \ n /= 7 )) && count=$(( count + 1 ))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$(($count\
    \ + 1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [[ $((i % 11)) -eq 0 ]] && [[ $((i % 13)) -eq 0 ]]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local digit=$((\
    \ n % 10 ))\n    if [ $digit -eq 7 ]; then\n      (( count++ ))\n    fi\n    n=$((\
    \ n / 10 ))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      ((count++))\n    fi\n   \
    \ n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local digit=$((\
    \ n % 10 ))\n    if [ $digit -eq 7 ]; then\n      (( count++ ))\n    fi\n    n=$((\
    \ n / 10 ))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local digit=$((n\
    \ % 10))\n    if [ $digit -eq 7 ]; then\n      count=$((count + 1))\n    fi\n\
    \    n=$((n / 10))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[\
    \ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[\
    \ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n  \
    \  [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\"\
    \ ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [[ $((i % 11)) -eq 0 ]] && [[ $((i % 13)) -eq 0 ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    return $count\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [[ $((i % 11)) -eq 0 ]] || [[ $((i % 13)) -eq 0 ]]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [[ $((i % 11)) -eq 0 ]] && [[ $((i % 13)) -eq 0 ]]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$(($count\
    \ + 1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 -a $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local digit=$((n\
    \ % 10))\n    if [ $digit -eq 7 ]; then\n      ((count++))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            ((count++))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$(($count\
    \ + 1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local remainder=$((\
    \ $n % 10 ))\n    local remainder2=$(( $n % 100 ))\n    if [ $remainder -eq 7\
    \ ] && [ $remainder2 -eq 7 ]; then\n      count=$(( $count + 1 ))\n    fi\n  \
    \  n=$(( $n / 10 ))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$(($count\
    \ + 1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      ((count++))\n    fi\n   \
    \ n=$((n - 1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ]; then\n      if [ $((n % 13)) -eq 0 ]; then\n        ((count++))\n\
    \      fi\n    fi\n    ((n--))\n  done\n  echo $count\n}\n\ncandidate() {\n  \
    \  fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"\
    0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"\
    3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") =\
    \ \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\"\
    ) = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local remainder=$((\
    \ $n % 10 ))\n    local multiple=$(( $n % 11 ))\n    local multiple2=$(( $n %\
    \ 13 ))\n    if [ $remainder -eq 7 ]; then\n      if [ $multiple -eq 0 ]; then\n\
    \        if [ $multiple2 -eq 0 ]; then\n          count=$(( $count + 1 ))\n  \
    \      fi\n      fi\n    fi\n    n=$(( $n / 10 ))\n  done\n  echo $count\n}\n\n\
    candidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if (( i % 11 == 0 )) && (( i % 13 == 0 )); then\n      count=$(( $count + 1\
    \ ))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if (( $i % 11 == 0 )) && (( $i % 13 == 0 )); then\n      count=$(( $count +\
    \ 1 ))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$(($count\
    \ + 1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            ((count++))\n\
    \        fi\n        ((n--))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [[ $((i % 11)) -eq 0 ]] && [[ $((i % 13)) -eq 0 ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local remainder=$((\
    \ n % 10 ))\n    if [ $remainder -eq 7 ]; then\n      count=$(( count + 1 ))\n\
    \    fi\n    n=$(( n - remainder ))\n  done\n  echo $count\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=28 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=18 encoding='utf-8'>
  timestamp: 1660033284
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local digit=$((\
    \ n % 10 ))\n    if [ $digit -eq 7 ]; then\n      (( count++ ))\n    fi\n    ((\
    \ n = n / 10 ))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 7 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n % 13 != 0 )) && count=$(( count + 1 ))\n  \
    \  (( n % 7 != 0 )) && count=$(( count + 1 ))\n    (( n /= 11 )) && count=$((\
    \ count + 1 ))\n    (( n /= 13 )) && count=$(( count + 1 ))\n    (( n /= 7 ))\
    \ && count=$(( count + 1 ))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local remainder=$((n\
    \ % 11))\n    local remainder2=$((n % 13))\n    if [ $remainder -eq 0 ] && [ $remainder2\
    \ -eq 0 ]; then\n      count=$((count+1))\n    fi\n    n=$((n - remainder))\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=56 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=27 encoding='utf-8'>
  timestamp: 1660033284
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if (( $i % 11 == 0 )); then\n      if (( $i % 13 == 0 )); then\n        ((\
    \ count++ ))\n      fi\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n  \
    \  fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"\
    0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"\
    3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") =\
    \ \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\"\
    ) = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local digit=$((n\
    \ % 10))\n    case \"$digit\" in\n      7)\n        ((count++))\n        ;;\n\
    \      *)\n        ;;\n    esac\n    n=$((n / 10))\n  done\n  echo $count\n}\n\
    \ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$(($count\
    \ + 1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$(($count\
    \ + 1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 -a $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    return $count\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$((count+1))\n    (( n % 13 == 0 )) && count=$((count+1))\n  \
    \  (( n % 11 != 0 )) && (( n % 13 != 0 )) && count=$((count+1))\n    (( n % 11\
    \ != 0 )) && (( n % 13 != 0 )) && (( n % 11 != 0 )) && count=$((count+1))\n  \
    \  (( n % 11 != 0 )) && (( n % 13 != 0 )) && (( n % 11 != 0 )) && (( n % 13 !=\
    \ 0 )) && count=$((count+1))\n    (( n % 11 != 0 )) && (( n % 13 != 0 )) && ((\
    \ n % 11 != 0 )) && (( n % 13 != 0 )) && (( n % 11 != 0 )) && count=$((count+1))\n\
    \    (( n % 11 != 0 )) && (( n % 13 != 0 )) && (( n % 11 != 0 )) && (( n % 13\
    \ != 0 )) && (( n % 11 != 0 )) && (( n % 13 != 0 )) && count=$((count+1))\n  \
    \  (( n % 11 != 0 )) && (( n % 13 != 0 )) && (( n % 11 != 0 )) && (( n % 13 !=\
    \ 0 )) && (( n % 11 != 0 )) && (( n % 13 != 0 )) && (( n % 11 != 0 )) && count=$((count+1))\n\
    \    (( n % 11 != 0 )) && (( n % 13 != 0 )) && (( n % 11 != 0 )) && (( n % 13\
    \ != 0 )) && (( n % 11 != 0 )) && (( n % 13 != 0 )) && (( n % 11 != 0 )) && ((\
    \ n % 13 != 0 )) && count=$((count+1))\n    (( n % 11 != 0 )) && (( n % 13 !=\
    \ 0 )) && (( n % 11 != 0 )) && (( n % 13 != 0 )) && (( n % 11 != 0 )) && (( n\
    \ % 13 != 0 )) && (( n % 11 != 0 )) && (( n % 13 != 0 )) && (( n % 11 != 0 ))\
    \ && count=$((count+1))\n    (( n % 11 != 0 )) && (( n % 13 != 0 )) && (( n %\
    \ 11 != 0 )) && (( n % 13 != 0 )) && (( n % 11 != 0 )) && (( n % 13 != 0 )) &&\
    \ (( n % 11 != 0 )) && (( n % 13 != 0 )) && (( n % 11 != 0 )) && (( n % 13 !=\
    \ 0 )) && count=$((count+1))\n    (( n % 11 != 0 )) && (( n % 13 != 0 )) && ((\
    \ n % 11 != 0 )) && (( n % 13 != 0 )) && (( n % 11 != 0 )) && (( n % 13 != 0 ))\
    \ && (( n % 11 != 0 )) && (( n % 13 != 0 )) && (( n % 11 != 0 )) && (\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5v0gmho0.sh: line 21: syntax error near unexpected token `}''

    /tmp/tmp5v0gmho0.sh: line 21: `}''

    '
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local div=$((\
    \ $n % 11 ))\n    local mod=$(( $n % 13 ))\n    if [ $div -eq 0 ]; then\n    \
    \  if [ $mod -eq 0 ]; then\n        (( count++ ))\n      fi\n    fi\n    local\
    \ next=$(( $n / 10 ))\n    if [ $next -eq 0 ]; then\n      (( count++ ))\n   \
    \ fi\n    n=$next\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[\
    \ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[\
    \ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n  \
    \  [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\"\
    \ ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local div=$((\
    \ $n % 11 ))\n    local mod=$(( $n % 13 ))\n    if [ $mod -eq 0 ]; then\n    \
    \  if [ $div -eq 0 ]; then\n        (( count++ ))\n      else\n        (( count++\
    \ ))\n      fi\n    fi\n    n=$(( $n / 13 ))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ]; then\n      if [ $((n % 13)) -eq 0 ]; then\n        ((count++))\n\
    \      fi\n    fi\n    ((n--))\n  done\n  echo $count\n}\n\ncandidate() {\n  \
    \  fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"\
    0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"\
    3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") =\
    \ \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\"\
    ) = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [[ $((i % 11)) -eq 0 ]] && [[ $((i % 13)) -eq 0 ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 7 == 0 )) && count=$(( count + 1 ))\n    (( n /= 7 ))\n  done\n\
    \  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 11 != 0 )) && count=$(( count + 1 ))\n    (( n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n /= 11 )) && count=$(( count + 1 ))\n    ((\
    \ n /= 13 )) && count=$(( count + 1 ))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 11 != 0 )) && count=$(( count + 1 ))\n    (( n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13 != 0 )) && count=$(( count\
    \ + 1 ))\n    (( n % 11 != 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n   \
    \ (( n % 11 == 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 !=\
    \ 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13\
    \ != 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13 != 0 )) && count=$((\
    \ count + 1 ))\n    (( n % 11 != 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n\
    \    (( n % 11 == 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11\
    \ != 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n %\
    \ 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13 != 0 )) && count=$(( count\
    \ + 1 ))\n    (( n % 11 != 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n   \
    \ (( n % 11 == 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11 !=\
    \ 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13\
    \ == 0 )) && count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13 != 0 )) && count=$((\
    \ count + 1 ))\n    (( n % 11 != 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n\
    \    (( n % 11 != 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11\
    \ == 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( \n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwqz9mtje.sh: line 33: unexpected EOF while looking for matching
    `)''

    /tmp/tmpwqz9mtje.sh: line 53: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033279
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 11 != 0 )) && count=$(( count + 1 ))\n    (( n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13 != 0 )) && count=$(( count\
    \ + 1 ))\n    (( n % 11 != 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n   \
    \ (( n % 11 == 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 !=\
    \ 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13\
    \ != 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13 != 0 )) && count=$((\
    \ count + 1 ))\n    (( n % 11 != 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n\
    \    (( n % 11 == 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11\
    \ != 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n %\
    \ 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13 != 0 )) && count=$(( count\
    \ + 1 ))\n    (( n % 11 != 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n   \
    \ (( n % 11 == 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11 !=\
    \ 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13\
    \ == 0 )) && count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13 != 0 )) && count=$((\
    \ count + 1 ))\n    (( n % 11 != 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n\
    \    (( n % 11 != 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11\
    \ == 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( \n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwqz9mtje.sh: line 33: unexpected EOF while looking for matching
    `)''

    /tmp/tmpwqz9mtje.sh: line 53: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033279
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local remainder=$((n\
    \ % 11))\n    local remainder2=$((n % 13))\n    if [ $remainder -eq 0 ] && [ $remainder2\
    \ -eq 0 ]; then\n      count=$((count + 1))\n    fi\n    n=$((n - remainder))\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=42 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=40 encoding='utf-8'>
  timestamp: 1660033284
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local remainder=$((\
    \ n % 10 ))\n    local digit=$(( remainder % 2 ))\n    if [ $digit -eq 0 ]; then\n\
    \      count=$(( count + 1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $count\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 11 != 0 )) && count=$(( count + 1 ))\n    (( n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n /= 11 )) && count=$(( count + 1 ))\n    ((\
    \ n /= 13 )) && count=$(( count + 1 ))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [[ $((i % 11)) -eq 0 ]] && [[ $((i % 13)) -eq 0 ]]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 11 != 0 )) && count=$(( count + 1 ))\n    (( n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13 != 0 )) && count=$(( count\
    \ + 1 ))\n    (( n % 11 != 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n   \
    \ (( n % 11 == 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 !=\
    \ 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13\
    \ != 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13 != 0 )) && count=$((\
    \ count + 1 ))\n    (( n % 11 != 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n\
    \    (( n % 11 == 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11\
    \ != 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n %\
    \ 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13 != 0 )) && count=$(( count\
    \ + 1 ))\n    (( n % 11 != 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n   \
    \ (( n % 11 == 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11 !=\
    \ 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13\
    \ == 0 )) && count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13 != 0 )) && count=$((\
    \ count + 1 ))\n    (( n % 11 != 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n\
    \    (( n % 11 != 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11\
    \ == 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( \n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwqz9mtje.sh: line 33: unexpected EOF while looking for matching
    `)''

    /tmp/tmpwqz9mtje.sh: line 53: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            ((count++))\n\
    \        fi\n        n=$((n - 1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      ((count++))\n    fi\n   \
    \ n=$((n - 1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 11 != 0 )) && count=$(( count + 1 ))\n    (( n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n /= 11 )) && count=$(( count + 1 ))\n    ((\
    \ n /= 13 )) && count=$(( count + 1 ))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 11 != 0 )) && count=$(( count + 1 ))\n    (( n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n /= 11 )) && count=$(( count + 1 ))\n    ((\
    \ n /= 13 )) && count=$(( count + 1 ))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local remainder=$((\
    \ n % 10 ))\n    if [ $remainder -eq 7 ]; then\n      (( count++ ))\n    fi\n\
    \    n=$(( n / 10 ))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if (( $i % 11 == 0 )); then\n      (( count++ ))\n    elif (( $i % 13 == 0\
    \ )); then\n      (( count++ ))\n    else\n      (( count++ ))\n    fi\n  done\n\
    \  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 11 != 0 )) && count=$(( count + 1 ))\n    (( n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n /= 11 )) && count=$(( count + 1 ))\n    ((\
    \ n /= 13 )) && count=$(( count + 1 ))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$(($count\
    \ + 1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if (( $i % 11 == 0 )); then\n      if (( $i % 13 == 0 )); then\n        ((\
    \ count++ ))\n      fi\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n  \
    \  fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"\
    0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"\
    3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") =\
    \ \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\"\
    ) = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    return $count\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$(($count\
    \ + 1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    return $count\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 11 != 0 )) && count=$(( count + 1 ))\n    (( n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n /= 11 )) && count=$(( count + 1 ))\n    ((\
    \ n /= 13 )) && count=$(( count + 1 ))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$(($count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 11 != 0 )) && count=$(( count + 1 ))\n    (( n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13 != 0 )) && count=$(( count\
    \ + 1 ))\n    (( n % 11 != 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n   \
    \ (( n % 11 != 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11 ==\
    \ 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13\
    \ != 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13 == 0 )) && count=$((\
    \ count + 1 ))\n    (( n % 11 == 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n\
    \    (( n % 11 != 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11\
    \ != 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 == 0 && n %\
    \ 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13 == 0 )) && count=$(( count\
    \ + 1 ))\n    (( n % 11 == 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n   \
    \ (( n % 11 != 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11 !=\
    \ 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13\
    \ != 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13 != 0 )) && count=$((\
    \ count + 1 ))\n    (( n % 11 != 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n\
    \    (( n % 11 == 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11\
    \ != 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( \n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0xnbrzfw.sh: line 33: unexpected EOF while looking for matching
    `)''

    /tmp/tmp0xnbrzfw.sh: line 53: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [[ $((i % 11)) -eq 0 ]] && [[ $((i % 13)) -eq 0 ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 7 == 0 )) && count=$(( count + 1 ))\n    (( n % 5 == 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n % 3 == 0 )) && count=$(( count + 1 ))\n   \
    \ (( n % 2 == 0 )) && count=$(( count + 1 ))\n    (( n % 1 == 0 )) && count=$((\
    \ count + 1 ))\n    (( n != 0 )) && n=$(( n - 1 ))\n  done\n  echo $count\n}\n\
    \ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 || n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n /= 11 )) && (( n /=\
    \ 13 ))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 -a $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 11 != 0 )) && count=$(( count + 1 ))\n    (( n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n /= 11 )) && count=$(( count + 1 ))\n    ((\
    \ n /= 13 )) && count=$(( count + 1 ))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [[ $((i % 11)) -eq 0 ]] && [[ $((i % 13)) -eq 0 ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if (( $i % 11 == 0 )); then\n      if (( $i % 13 == 0 )); then\n        ((\
    \ count++ ))\n      else\n        echo \"$i\"\n      fi\n    fi\n  done\n  echo\
    \ $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$((count+1))\n    (( n % 13 == 0 )) && count=$((count+1))\n  \
    \  (( n % 11 != 0 )) && count=$((count+1))\n    (( n % 13 != 0 )) && count=$((count+1))\n\
    \    (( n % 11 == 0 && n % 13 != 0 )) && count=$((count+1))\n    (( n % 11 !=\
    \ 0 && n % 13 != 0 )) && count=$((count+1))\n    (( n % 11 == 0 && n % 13 == 0\
    \ )) && count=$((count+1))\n    (( n % 11 != 0 && n % 13 == 0 )) && count=$((count+1))\n\
    \    (( n % 11 == 0 && n % 13 != 0 )) && count=$((count+1))\n    (( n % 11 !=\
    \ 0 && n % 13 != 0 )) && count=$((count+1))\n    (( n % 11 != 0 && n % 13 == 0\
    \ )) && count=$((count+1))\n    (( n % 11 == 0 && n % 13 != 0 )) && count=$((count+1))\n\
    \    (( n % 11 != 0 && n % 13 != 0 )) && count=$((count+1))\n    (( n % 11 !=\
    \ 0 && n % 13 == 0 )) && count=$((count+1))\n    (( n % 11 == 0 && n % 13 != 0\
    \ )) && count=$((count+1))\n    (( n % 11 != 0 && n % 13 != 0 )) && count=$((count+1))\n\
    \    (( n % 11 != 0 && n % 13 == 0 )) && count=$((count+1))\n    (( n % 11 ==\
    \ 0 && n % 13 != 0 )) && count=$((count+1))\n    (( n % 11 != 0 && n % 13 != 0\
    \ )) && count=$((count+1))\n    (( n % 11 != 0 && n % 13 == 0 )) && count=$((count+1))\n\
    \    (( n % 11 == 0 && n % 13 != 0 )) && count=$((count+1))\n    (( n % 11 !=\
    \ 0 && n % 13 != 0 )) && count=$((count+1))\n    (( n % 11 != 0 && n % 13 == 0\
    \ )) && count=$((count+1))\n    (( n % 11 == 0 && n % 13 != 0 )) && count=$((count+1))\n\
    \    (( n % 11 != 0 && n % 13 != 0 )) && count=$((count+1))\n    (( n % 11 !=\
    \ 0 && n % 13 == 0 )) && count=$((count+1))\n    (( n % 11 == 0 && n % 13 != 0\
    \ )) && \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp12bah8zl.sh: line 36: syntax error near unexpected token `}''

    /tmp/tmp12bah8zl.sh: line 36: `}''

    '
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    (( n % 11 ==\
    \ 0 )) && count=$(( count + 1 ))\n    (( n % 13 == 0 )) && count=$(( count + 1\
    \ ))\n    (( n % 11 != 0 )) && count=$(( count + 1 ))\n    (( n % 13 != 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13 != 0 )) && count=$(( count\
    \ + 1 ))\n    (( n % 11 != 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n   \
    \ (( n % 11 == 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 !=\
    \ 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13\
    \ == 0 )) && count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13 != 0 )) && count=$((\
    \ count + 1 ))\n    (( n % 11 != 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n\
    \    (( n % 11 != 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11\
    \ == 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n %\
    \ 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13 == 0 )) &&\
    \ count=$(( count + 1 ))\n    (( n % 11 == 0 && n % 13 != 0 )) && count=$(( count\
    \ + 1 ))\n    (( n % 11 != 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n   \
    \ (( n % 11 != 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 ==\
    \ 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13\
    \ != 0 )) && count=$(( count + 1 ))\n    (( n % 11 != 0 && n % 13 == 0 )) && count=$((\
    \ count + 1 ))\n    (( n % 11 == 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n\
    \    (( n % 11 != 0 && n % 13 != 0 )) && count=$(( count + 1 ))\n    (( n % 11\
    \ != 0 && n % 13 == 0 )) && count=$(( count + 1 ))\n    (( \n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyc5t96fe.sh: line 33: unexpected EOF while looking for matching
    `)''

    /tmp/tmpyc5t96fe.sh: line 53: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            ((count++))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$(($count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [[ $((i % 11)) -eq 0 ]] && [[ $((i % 13)) -eq 0 ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            ((count++))\n\
    \        fi\n        n=$((n - 1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local digit=$((n\
    \ % 10))\n    if [ $digit -eq 7 ]; then\n      ((count++))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$(($count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if (( $i % 11 == 0 )); then\n      if (( $i % 13 == 0 )); then\n        ((\
    \ count++ ))\n      fi\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n  \
    \  fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"\
    0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"\
    3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") =\
    \ \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\"\
    ) = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$(($count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [[ $((i % 11)) -eq 0 ]] && [[ $((i % 13)) -eq 0 ]]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local digit=$((n\
    \ % 10))\n    if [ $digit -eq 7 ]; then\n      ((count++))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    local remainder=$((n\
    \ % 10))\n    if [ $remainder -eq 7 ]; then\n      count=$((count + 1))\n    fi\n\
    \    n=$((n / 10))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[\
    \ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[\
    \ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n  \
    \  [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\"\
    \ ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if (( $i % 11 == 0 )); then\n      if (( $i % 13 == 0 )); then\n        ((\
    \ count++ ))\n      else\n        (( count++ ))\n      fi\n    fi\n  done\n  echo\
    \ $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  while [ $n -gt 0 ]; do\n    if [ $((n %\
    \ 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n\
    \    n=$((n-1))\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local count=0\n    while [ $n -gt 0 ]; do\n        if\
    \ [ $((n % 11)) -eq 0 ] && [ $((n % 13)) -eq 0 ]; then\n            count=$((count+1))\n\
    \        fi\n        n=$((n-1))\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local n=$1\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n  \
    \  if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033279

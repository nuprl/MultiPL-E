language: sh
name: HumanEval_30_get_positive
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local list=\"$1\"\n    local positive\n\
    \    positive=0\n    for number in $list; do\n        if [[ $number -gt 0 ]];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[[:space:]]+[0-9]+[[:space:]]+$\
    \ ]]; then\n      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n \
    \ echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [[ $number -gt 0 ]];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [ $number -gt 0 ]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for i in $list; do\n    if [[ $i =~ ^[0-9]+$ ]]; then\n     \
    \ positive=$((positive + i))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^-?[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for item in $list; do\n    if [[ $item -gt 0 ]]; then\n     \
    \ positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [ $number -gt 0 ];\
    \ then\n            positive=$((positive+1))\n        fi\n    done\n    echo \"\
    $positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for item in $list; do\n    if [[ $item =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + item))\n    fi\n  done\n  echo $positive\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n    if\
    \ [[ \"$line\" =~ ^[0-9]+$ ]]; then\n      echo \"$positive\"\n      break\n \
    \   fi\n  done <<< \"$list\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n \
    \   [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for item in $list; do\n    if [[ $item -gt 0 ]]; then\n     \
    \ positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [ $number -gt 0 ];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [ $number -gt 0 ]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [ $number -gt 0 ];\
    \ then\n            positive=$((positive+1))\n        fi\n    done\n    echo \"\
    $positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local list=\"$1\"\n    local positive\n\
    \    positive=0\n    for number in $list; do\n        if [[ $number -gt 0 ]];\
    \ then\n            positive=1\n            break\n        fi\n    done\n    echo\
    \ $positive\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for item in $list; do\n    if [[ $item -gt 0 ]]; then\n     \
    \ positive=1\n      break\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=false\n  for number in $list; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=true\n      break\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local list=\"$1\"\n    local positive\n\
    \    positive=0\n    for number in $list; do\n        if [[ $number -gt 0 ]];\
    \ then\n            positive=$((positive+1))\n        fi\n    done\n    echo \"\
    $positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for i in $numbers\n  do\n    if [[ $i -gt 0 ]]\n    then\n  \
    \    positive=$((positive+i))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local list=\"$1\"\n    local positive\n\
    \    positive=0\n    for number in $list; do\n        if [[ $number -gt 0 ]];\
    \ then\n            positive=1\n            break\n        fi\n    done\n    echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [ $number -gt 0 ];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [ $number -gt 0 ]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local list=\"$1\"\n    local positive\n\
    \    positive=0\n    for element in $list; do\n        if [[ $element -gt 0 ]];\
    \ then\n            positive=1\n            break\n        fi\n    done\n    if\
    \ [[ $positive == 0 ]]; then\n        echo \"$list\"\n    fi\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[[:space:]]+[0-9]+[[:space:]]+$\
    \ ]]; then\n      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n \
    \ echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ \"$line\" =~ ^-?[0-9]+$ ]];\
    \ then\n      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^-[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [ $number -gt 0 ];\
    \ then\n            positive=$((positive+1))\n        fi\n    done\n    echo \"\
    $positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local list=\"$1\"\n    local positive\n\
    \    positive=0\n    for number in $list; do\n        if [[ $number -gt 0 ]];\
    \ then\n            positive=1\n            break\n        fi\n    done\n    echo\
    \ $positive\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for item in $list; do\n    if [[ $item == +([0-9]) ]]; then\n\
    \      positive=$((positive + item))\n    fi\n  done\n  echo $positive\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [[ $number -gt 0 ]];\
    \ then\n            positive=$((positive+1))\n        fi\n    done\n    echo \"\
    $positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positives=()\n\
    \  for number in ${numbers[*]}; do\n    if [[ $number -gt 0 ]]; then\n      positives+=(\"\
    $number\")\n    fi\n  done\n  echo \"${positives[*]}\"\n}\n\ncandidate() {\n \
    \   get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2\
    \ 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\")\
    \ = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for i in $numbers\n  do\n    if [ $i -gt 0 ]\n    then\n    \
    \  positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if (( $number > 0 ));\
    \ then\n            positive=$(( $positive + $number ))\n        fi\n    done\n\
    \    echo $positive\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [ $number -gt 0 ];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [ $number -gt 0 ]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for i in $numbers\n  do\n    if [[ $i -gt 0 ]]\n    then\n  \
    \    positive=$((positive+i))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [[ $number -gt 0 ]];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ $positive\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [ $number -gt 0 ];\
    \ then\n            positive=1\n            break\n        fi\n    done\n    echo\
    \ $positive\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ \"$line\" =~ ^-?[0-9]+$ ]];\
    \ then\n      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [[ $number -gt 0 ]];\
    \ then\n            positive=1\n            break\n        fi\n    done\n    echo\
    \ $positive\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ \"$line\" =~ ^-[0-9]+$ ]];\
    \ then\n      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for i in $numbers\n  do\n    if [ $i -gt 0 ]; then\n      positive=$i\n\
    \    fi\n  done\n  echo $positive\n}\n\ncandidate() {\n    get_positive \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n\
    \    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [[ $number -gt 0 ]];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for i in $numbers\n  do\n    if [[ $i -gt 0 ]]; then\n      positive=$((positive\
    \ + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local list=\"$1\"\n    local positive\n\
    \    positive=0\n    for number in $list; do\n        if [[ $number -gt 0 ]];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ \"$line\" =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for item in $list; do\n    if [[ $item -gt 0 ]]; then\n     \
    \ positive=1\n      break\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local list=\"$1\"\n    local positive\n\
    \    positive=0\n    while read -r line; do\n        if [[ $line =~ ^[+-]?[0-9]+$\
    \ ]]; then\n            positive=$((positive + 1))\n        fi\n    done <<< \"\
    $list\"\n    echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n\
    \    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=\n  for number in $list; do\n    if [[ $number -gt 0 ]]; then\n  \
    \    positive=\"$positive $number\"\n    fi\n  done\n  echo \"$positive\"\n}\n\
    \ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for i in $numbers\n  do\n    if [ $i -gt 0 ]; then\n      positive=$((positive\
    \ + i))\n    fi\n  done\n  echo $positive\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local list=\"$1\"\n    local positive\n\
    \    positive=0\n    for number in $list; do\n        if (( number > 0 )); then\n\
    \            positive=1\n            break\n        fi\n    done\n    echo \"\
    $positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positives=$(echo\
    \ $numbers | grep -E '^[0-9]+$')\n    echo $positives\n}\n\ncandidate() {\n  \
    \  get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2\
    \ 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\")\
    \ = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [ $number -gt 0 ];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ $positive\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [ $number -gt 0 ];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local list=\"$1\"\n    local positive\n\
    \    positive=0\n    for element in $list; do\n        if [[ $element =~ ^[0-9]+$\
    \ ]]; then\n            positive=$((positive + 1))\n        fi\n    done\n   \
    \ echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for item in $list; do\n    if [[ $item =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + item))\n    fi\n  done\n  echo $positive\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=false\n  for number in $list; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=true\n      break\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=1\n      break\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [ $number -gt 0 ];\
    \ then\n            positive=$((positive+1))\n        fi\n    done\n    echo \"\
    $positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [ $number -gt 0 ];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if (( $number > 0 ));\
    \ then\n            positive=$(( $positive + $number ))\n        fi\n    done\n\
    \    echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ \"$line\" =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[[:digit:]]+$ ]];\
    \ then\n      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[[:digit:]]+$ ]];\
    \ then\n      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if (( $number > 0 ));\
    \ then\n            positive=$(( $positive + $number ))\n        fi\n    done\n\
    \    echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positives=$(echo\
    \ $numbers | tr \" \" \"\\n\" | grep \"^[0-9]*$\" | grep -v \"^0$\")\n  echo $positives\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [ $number -gt 0 ]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [ $number -gt 0 ];\
    \ then\n            positive=$((positive+1))\n        fi\n    done\n    echo \"\
    $positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [ $number -gt 0 ]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local list=\"$1\"\n    local positive\n\
    \    positive=0\n    while read -r line; do\n        if [[ \"$line\" =~ ^-?[0-9]+$\
    \ ]]; then\n            positive=$((positive + 1))\n        fi\n    done <<< \"\
    $list\"\n    echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n\
    \    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[[:digit:]]+$ ]];\
    \ then\n      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ \"$line\" =~ ^-[0-9]+$ ]];\
    \ then\n      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for i in $list; do\n    if [[ $i =~ ^[0-9]+$ ]]; then\n     \
    \ positive=$((positive + i))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [ $number -gt 0 ]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ \"$line\" =~ ^-?[0-9]+$ ]];\
    \ then\n      positive=$((positive + 1))\n    fi\n  done < <(echo \"$list\")\n\
    \  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [[ $number -gt 0 ]];\
    \ then\n            positive=1\n            break\n        fi\n    done\n    if\
    \ [[ $positive -eq 0 ]]; then\n        echo \"No positive numbers\"\n        return\
    \ 1\n    fi\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [[ $number -gt 0 ]];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^-?[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for i in $list; do\n    if [[ $i =~ ^[0-9]+$ ]]; then\n     \
    \ positive=$((positive + i))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ \"$line\" =~ ^-?[0-9]+$ ]];\
    \ then\n      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local list=\"$1\"\n    local positive\n\
    \    positive=0\n    for element in $list; do\n        if [[ $element -gt 0 ]];\
    \ then\n            positive=1\n            break\n        fi\n    done\n    if\
    \ [[ $positive -eq 0 ]]; then\n        echo \"$list\"\n    fi\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if (( $number > 0 ));\
    \ then\n            positive=$(( $positive + $number ))\n        fi\n    done\n\
    \    echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ \"$line\" =~ ^-?[0-9]+$ ]];\
    \ then\n      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [ $number -gt 0 ]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [ $number -gt 0 ]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[[:digit:]]+$ ]];\
    \ then\n      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [[ $number -gt 0 ]];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for item in $list; do\n    if [[ $item -gt 0 ]]; then\n     \
    \ positive=1\n      break\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for item in $list; do\n    if [[ $item -gt 0 ]]; then\n     \
    \ positive=1\n      break\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local list=\"$1\"\n    local positive\n\
    \    positive=0\n    for element in $list; do\n        if [[ $element -gt 0 ]];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if (( $number > 0 ));\
    \ then\n            positive=$(( $positive + $number ))\n        fi\n    done\n\
    \    echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=1\n      break\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if (( $number > 0 ));\
    \ then\n            positive=$(( $positive + $number ))\n        fi\n    done\n\
    \    echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [ $number -gt 0 ];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local list=\"$1\"\n    local positive\n\
    \    positive=0\n    for element in $list; do\n        if [[ $element -gt 0 ]];\
    \ then\n            positive=1\n            break\n        fi\n    done\n    echo\
    \ $positive\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positives=()\n\
    \    for number in $numbers; do\n        if (( number > 0 )); then\n         \
    \   positives+=(\"$number\")\n        fi\n    done\n    echo \"${positives[*]}\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + ${line}))\n\
    \  done <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpaqmxca9o.sh: line 10: positive + -1 -2 4 5 6: syntax error in expression
    (error token is "4 5 6")

    '
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [ $number -gt 0 ];\
    \ then\n            positive=$((positive+1))\n        fi\n    done\n    echo \"\
    $positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if (( $number > 0 ));\
    \ then\n            positive=$(( $positive + $number ))\n        fi\n    done\n\
    \    echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ \"$line\" =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for item in $list; do\n    if [[ $item -gt 0 ]]; then\n     \
    \ positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for item in $list; do\n    if [[ $item -gt 0 ]]; then\n     \
    \ positive=1\n      break\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [ $number -gt 0 ];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive+1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  while read -r number; do\n    (( ${#number} > 0 )) && positive=$((\
    \ ${positive} + 1 ))\n  done <<< \"$numbers\"\n  echo \"$positive\"\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for number in $list; do\n    if [[ $number -gt 0 ]]; then\n \
    \     positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for i in $list; do\n    if [[ $i =~ ^[0-9]+$ ]]; then\n     \
    \ positive=$((positive + i))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for number in $list; do\n    if [[ $number -gt 0 ]]; then\n \
    \     positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [ $number -gt 0 ]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local list=\"$1\"\n    local positive\n\
    \    positive=0\n    for number in $list; do\n        if (( number > 0 )); then\n\
    \            positive=$((positive+1))\n        fi\n    done\n    echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for i in $list; do\n    if [[ $i =~ ^[0-9]+$ ]]; then\n     \
    \ positive=$((positive + i))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [[ $number -gt 0 ]];\
    \ then\n            positive=$((positive + 1))\n        fi\n    done\n    echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    positive=$((positive + 1))\n  done\
    \ <<< \"$list\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positives=$(echo\
    \ $numbers | tr \" \" \"\\n\" | grep \"^[0-9]*$\" | grep -v \"^0$\")\n    echo\
    \ $positives\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=1\n      break\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local list=\"$1\"\n    local positive\n\
    \    positive=0\n    for number in $list; do\n        if (( number > 0 )); then\n\
    \            positive=$((positive+1))\n        fi\n    done\n    echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ \"$line\" =~ ^-[0-9]+$ ]];\
    \ then\n      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo\
    \ \"$positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  while read -r number; do\n    (( positive += number ))\n  done\
    \ <<< \"$numbers\"\n  echo \"$positive\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfhbv1vcj.sh: line 10: ((: -1 -2 4 5 6: syntax error in expression
    (error token is "4 5 6")

    '
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if (( $number > 0 ));\
    \ then\n            positive=$(( $positive + 1 ))\n        fi\n    done\n    echo\
    \ $positive\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=()\n  for number in $list; do\n    if [[ $number =~ ^[0-9]+$ ]]; then\n\
    \      positive+=(\"$number\")\n    fi\n  done\n  echo \"${positive[@]}\"\n}\n\
    \ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [[ $number -gt 0 ]];\
    \ then\n            positive=$((positive+1))\n        fi\n    done\n    echo \"\
    $positive\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for i in $list; do\n    if [[ $i =~ ^[0-9]+$ ]]; then\n     \
    \ positive=$((positive + i))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for item in $list; do\n    if [[ $item =~ ^[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n    local numbers=$1\n    local positive\n\
    \    positive=0\n    for number in $numbers; do\n        if [ $number -gt 0 ];\
    \ then\n            positive=$((positive+1))\n        fi\n    done\n    echo $positive\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for number in $list; do\n    if [[ $number -gt 0 ]]; then\n \
    \     positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for i in $list; do\n    if [[ $i =~ ^[0-9]+$ ]]; then\n     \
    \ positive=$((positive + i))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  while read -r line; do\n    if [[ $line =~ ^-?[0-9]+$ ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done <<< \"$list\"\n  echo \"$positive\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for number in $list; do\n    if [[ $number -gt 0 ]]; then\n \
    \     positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  while read -r number; do\n    (( ${#number} > 0 )) && positive=$((\
    \ ${positive} + 1 ))\n  done <<< \"$numbers\"\n  echo \"$positive\"\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local numbers=$1\n  local positive\n\
    \  positive=0\n  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive=$((positive + 1))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n#\n# $1 is a\
    \ space-separated list\nget_positive() {\n  local list=\"$1\"\n  local positive\n\
    \  positive=0\n  for i in $list; do\n    if [[ $i =~ ^[0-9]+$ ]]; then\n     \
    \ positive=$((positive + i))\n    fi\n  done\n  echo $positive\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035453

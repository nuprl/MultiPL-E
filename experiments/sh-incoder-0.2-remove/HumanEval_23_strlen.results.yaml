language: sh
name: HumanEval_23_strlen
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local i\n  for i in $1; do\n    ((len++))\n  done\n  echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo ${#1}\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local c\n  for c in $1; do\n    ((len++))\n  done\n  echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    local i\n    for (( i=1; i<${#str};\
    \ i++ )); do\n        ((len+=1))\n    done\n    echo \"${len}\"\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo $1 | wc -c\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") =\
    \ \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local length\n  length=${#1}\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    while [ \"${str:0:1}\" != \"\"\
    \ ]; do\n        str=\"${str:1}\"\n        len=$((len+1))\n    done\n    echo\
    \ \"${len}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n \
    \   [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local c\n  while [[ $1 ]]; do\n    ((len++))\n    shift\n\
    \  done\n  echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    while [ \"${str:0:1}\" != \"\"\
    \ ]; do\n        str=\"${str:1}\"\n        len=$((len+1))\n    done\n    echo\
    \ \"$len\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n \
    \   [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local len=0\n    while [ -n \"$1\" ]; do\n        len=$((len+1))\n  \
    \      shift\n    done\n    echo \"$len\"\n}\n\ncandidate() {\n    strlen \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local len=0\n    while [ \"${1:0:1}\" != \"$1\" ]; do\n        len=$((len+1))\n\
    \        shift\n    done\n    echo \"$len\"\n}\n\ncandidate() {\n    strlen \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    while [ \"${str:0:1}\" != \"\"\
    \ ]; do\n        str=\"${str:1}\"\n        len=$((len+1))\n    done\n    echo\
    \ \"$len\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n \
    \   [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    for (( i = 0; i < ${#str}; i++\
    \ )); do\n        (( len++ ))\n    done\n    echo \"${len}\"\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=$1\n    local len=0\n    local i\n    for (( i=1; i<${#str};\
    \ i++ )); do\n        ((len+=${#str}-i))\n    done\n    echo \"$len\"\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local i\n  for i in $@; do\n    ((len++))\n  done\n  echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: -1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local str=\"$1\"\n  local len=0\n  while [ \"${str:0:1}\" != \"$\" ] &&\
    \ [ \"${str:0:1}\" != \"-\" ] && [ \"${str:0:1}\" != \"/\" ] && [ \"${str:0:1}\"\
    \ != \"$'\" ]; do\n    len=$((len+1))\n    str=\"${str:1}\"\n  done\n  echo \"\
    ${len}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n  \
    \  [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=14 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=3 encoding='utf-8'>
  timestamp: 1660039255
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    local i\n    for (( i=1; i<${#str};\
    \ i++ )); do\n        ((len++))\n    done\n    echo \"${len}\"\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo ${#1}\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo $1 | wc -c\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") =\
    \ \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    while [ \"${str:0:1}\" != \"\"\
    \ ]; do\n        str=\"${str:1}\"\n        len=$((len+1))\n    done\n    echo\
    \ \"$len\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n \
    \   [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 2
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local i\n  for i in $1 do\n    ((len++))\n  done\n  echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv2cfaq30.sh: line 9: syntax error near unexpected token `len++''

    /tmp/tmpv2cfaq30.sh: line 9: `    ((len++))''

    '
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local str=\"$1\"\n  local len=0\n  while [ \"${str:0:1}\" != \"\" ]; do\n\
    \    len=$((len+1))\n    str=\"${str:1}\"\n  done\n  echo $len\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    local i=0\n    while [[ $i -lt\
    \ ${#str} ]]; do\n        ((i++))\n        len=$((len+1))\n    done\n    echo\
    \ \"$len\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n \
    \   [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    for (( i=1; i<${#str}; i++ ));\
    \ do\n        ((len+=${#str:$i:1}))\n    done\n    echo \"$len\"\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo $1 | wc -c\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") =\
    \ \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  printf \"%d\" \"$1\" | bc\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local c\n  while [[ $1 ]]; do\n    ((++len))\n    c=$1\n\
    \    shift\n    [[ $c ]] || break\n  done\n  echo $len\n}\n\ncandidate() {\n \
    \   strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\")\
    \ = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local str=\"$1\"\n  local len=0\n  while [ \"${str:0:1}\" != \"\" ]; do\n\
    \    len=$((len+1))\n    str=\"${str:1}\"\n  done\n  echo \"${len}\"\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local c\n  while [ $1 ]; do\n    ((len++))\n    shift\n\
    \  done\n  echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    while [[ $str != \"\" ]]; do\n\
    \        str=\"${str%?}\"\n        len=$((len+1))\n    done\n    echo \"$len\"\
    \n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"\
    asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local i\n  for i in $*; do\n    ((len++))\n  done\n  echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo ${#1}\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local str=\"$1\"\n  local len=0\n  while [ \"${str:0:1}\" != \"\" ]; do\n\
    \    len=$((len+1))\n    str=\"${str:1}\"\n  done\n  echo $len\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    while [ \"${str:0:1}\" != \"\"\
    \ ]; do\n        len=$((len+1))\n        str=\"${str:1}\"\n    done\n    echo\
    \ \"$len\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n \
    \   [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    while [ \"${str:0:1}\" != \"\"\
    \ ]; do\n        str=\"${str:1}\"\n        len=$((len+1))\n    done\n    echo\
    \ \"$len\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n \
    \   [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local i\n  for i in $@; do\n    ((len++))\n  done\n  echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local i\n  for i in $1; do\n    ((len++))\n  done\n  echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 2
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local i\n  for i in $1 do\n    ((len++))\n  done\n  echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv2cfaq30.sh: line 9: syntax error near unexpected token `len++''

    /tmp/tmpv2cfaq30.sh: line 9: `    ((len++))''

    '
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  while [ -n \"$1\" ]; do\n    ((len++))\n    shift\n  done\n\
    \  echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n \
    \   [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    local i\n    for (( i=1; i<${#str};\
    \ i++ )); do\n        ((len+=${#str}[i]))\n    done\n    echo \"${len}\"\n}\n\n\
    candidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"\
    asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local i\n  for i in $*; do\n    ((len++))\n  done\n  echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local length=0\n    while [ -n \"$1\" ]; do\n        ((length++))\n \
    \       shift\n    done\n    echo \"$length\"\n}\n\ncandidate() {\n    strlen\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local str=$1\n  local len=0\n  while [[ $str != \"\" ]]; do\n    ((len++))\n\
    \    str=${str%?}\n  done\n  echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    while [[ $str != \"\" ]]; do\n\
    \        len=$((len+1))\n        str=${str%?}\n    done\n    echo $len\n}\n\n\
    candidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"\
    asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local len=0\n    for (( i=0; i<${#1}; i++ )); do\n        len=$((len+1))\n\
    \    done\n    echo \"$len\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo $1 | wc -c\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") =\
    \ \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local len=0\n    local i\n    for (( i=1; i<=$1; i++ )); do\n       \
    \ len=$((len+1))\n    done\n    echo \"$len\"\n}\n\ncandidate() {\n    strlen\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp24ifdq5m.sh: line 8: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=$1\n    local len=0\n    while [[ $str != \"\" ]]; do\n   \
    \     len=$((len+1))\n        str=${str%?}\n    done\n    echo $len\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    for (( i=0; i<${#str}; i++ ));\
    \ do\n        ((len+=${#str}[i]))\n    done\n    echo \"$len\"\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6ax79wc5.sh: line 9: ((: len+=1[i]: syntax error: invalid arithmetic
    operator (error token is "[i]")

    '
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local len=0\n    for (( i=0; i<${#1}; i++ )); do\n        len=$((len+1))\n\
    \    done\n    echo \"$len\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local c\n  while [[ $1 ]]; do\n    ((len++))\n    shift\n\
    \  done\n  echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo $1 | wc -c\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") =\
    \ \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    local i\n    for (( i=1; i<${#str};\
    \ i++ )); do\n        len=$((len+1))\n    done\n    echo \"${len}\"\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo ${#1}\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    for (( i=0; i<${#str}; i++ ));\
    \ do\n        ((len++))\n    done\n    echo \"${len}\"\n}\n\ncandidate() {\n \
    \   strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\")\
    \ = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local len=0\n    for (( i=1; i<=$1; i++ )); do\n        len=$((len+1))\n\
    \    done\n    echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") =\
    \ \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplyi3kgph.sh: line 7: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    while [ -n \"$str\" ]; do\n  \
    \      str=\"${str%?}\"\n        len=$((len+1))\n    done\n    echo \"$len\"\n\
    }\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"\
    asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    local i\n    for (( i=1; i<${#str};\
    \ i++ )); do\n        (( len++ ))\n    done\n    echo \"${len}\"\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    local i\n    for (( i=1; i<${#str};\
    \ i++ )); do\n        ((len++))\n    done\n    echo \"${len}\"\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local c\n  for (( c=0; c<${#1}; c++ )); do\n    ((len++))\n\
    \  done\n  echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local len=0\n    for (( i=1; i<=$1; i++ )); do\n        len=$((len+1))\n\
    \    done\n    echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") =\
    \ \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplyi3kgph.sh: line 7: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local i\n  for i in $*; do\n    ((len++))\n  done\n  echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: -1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local str=$1\n  while [ \"${str:0:1}\" != \"$\" ]; do\n\
    \    len=$((len+1))\n    str=${str:1}\n  done\n  echo $len\n}\n\ncandidate() {\n\
    \    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\")\
    \ = \"9\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=16 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=13 encoding='utf-8'>
  timestamp: 1660039255
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  while [[ $1 ]]; do\n    ((len++))\n    shift\n  done\n \
    \ echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n \
    \   [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  while [ \"${1:0:1}\" != \"$1\" ]; do\n    ((len++))\n  \
    \  shift\n  done\n  echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local str=\"$1\"\n  local len=0\n  while [ \"${str:0:1}\" != \"\" ]; do\n\
    \    len=$((len+1))\n    str=\"${str:1}\"\n  done\n  echo \"$len\"\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local len=0\n    for (( i=1; i<=$1; i++ )); do\n        len=$((len+1))\n\
    \    done\n    echo \"$len\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptwus64s5.sh: line 7: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: -1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    while [ \"${str:0:1}\" != \"$\"\
    \ ] && [ \"${str:0:1}\" != \"-\" ] && [ \"${str:0:1}\" != \"/\" ] && [ \"${str:0:1}\"\
    \ != \"$'\" ]; do\n        len=$((len+1))\n        str=\"${str:1}\"\n    done\n\
    \    echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=40 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=7 encoding='utf-8'>
  timestamp: 1660039255
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local -i len=0\n    local -i i\n    local str=\"$1\"\n    for (( i=1;\
    \ i<=${#str}; i++ )); do\n        len=$((len+1))\n    done\n    echo \"${len}\"\
    \n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"\
    asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local c\n  for c in \"${1//[^[:print:]]/}\"; do\n    ((len++))\n\
    \  done\n  echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo $1 | wc -c\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") =\
    \ \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo $1 | wc -c\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") =\
    \ \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo ${#1}\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local len=0\n    for (( c=0; c<${#1}; c++ )); do\n        len=$((len+1))\n\
    \    done\n    echo \"$len\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local str=\"$1\"\n  local len=0\n  local i\n  for i in \"${str}\"; do\n\
    \    ((len++))\n  done\n  echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    local i\n    for (( i=1; i<${#str};\
    \ i++ )); do\n        [[ ${str:$i:1} == \"$\" ]] && len=$((len+1))\n    done\n\
    \    echo \"$len\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo ${#1}\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    local i\n    for (( i=1; i<${#str};\
    \ i++ )); do\n        ((len++))\n    done\n    echo \"${len}\"\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    while [ \"${str:0:1}\" != \"\"\
    \ ]; do\n        str=\"${str:1}\"\n        len=$((len+1))\n    done\n    echo\
    \ \"$len\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n \
    \   [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  while [[ $1 ]]; do\n    ((len++))\n    shift\n  done\n \
    \ echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n \
    \   [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local i\n  for i in $*; do\n    ((len++))\n  done\n  echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    while [ \"${str:0:1}\" != \"\"\
    \ ]; do\n        str=\"${str:1}\"\n        len=$((len+1))\n    done\n    echo\
    \ \"$len\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n \
    \   [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local -i len=0\n    while [[ $1 ]]; do\n        len=$((len+1))\n    \
    \    shift\n    done\n    echo \"$len\"\n}\n\ncandidate() {\n    strlen \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local str=\"$1\"\n  local len=0\n  while [ -n \"$str\" ]; do\n    ((len++))\n\
    \    str=\"${str%?}\"\n  done\n  echo \"$len\"\n}\n\ncandidate() {\n    strlen\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 2
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local i\n  for i in $1 do\n    ((len++))\n  done\n  echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv2cfaq30.sh: line 9: syntax error near unexpected token `len++''

    /tmp/tmpv2cfaq30.sh: line 9: `    ((len++))''

    '
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local str=\"$1\"\n  local len=0\n  while [ \"${str:0:1}\" != \"\" ]; do\n\
    \    len=$((len+1))\n    str=\"${str:1}\"\n  done\n  echo \"${len}\"\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    while [ \"${str:0:1}\" != \"\"\
    \ ]; do\n        str=\"${str:1}\"\n        let \"len++\"\n    done\n    echo \"\
    $len\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local c\n  while [[ $1 ]]; do\n    ((len++))\n    shift\n\
    \  done\n  echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local c\n  while [[ $1 ]]; do\n    ((len++))\n    shift\n\
    \  done\n  echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  printf '%s' \"${1#*[![:space:]]}\"\n}\n\ncandidate() {\n    strlen \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local len=0\n    while [ \"${1:0:1}\" != \"$1\" ]; do\n        len=$((len+1))\n\
    \        shift\n    done\n    echo \"$len\"\n}\n\ncandidate() {\n    strlen \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: -1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    while [ \"${str:0:1}\" != \"$\"\
    \ ]; do\n        len=$((len+1))\n        str=\"${str:1}\"\n    done\n    echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=17 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=22 encoding='utf-8'>
  timestamp: 1660039255
- exit_code: 2
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local i\n  for i in $1 do\n    ((len++))\n  done\n  echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv2cfaq30.sh: line 9: syntax error near unexpected token `len++''

    /tmp/tmpv2cfaq30.sh: line 9: `    ((len++))''

    '
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    while [[ $str != \"\" ]]; do\n\
    \        len=$((len+1))\n        str=${str%?}\n    done\n    echo \"$len\"\n}\n\
    \ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"\
    asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local -i len=0\n  local -i i\n  for i in ${1//[^[:ascii:]]/}; do\n    ((len++))\n\
    \  done\n  echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local c\n  for c in $1; do\n    ((len++))\n  done\n  echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    for (( i=0; i<${#str}; i++ ));\
    \ do\n        ((len++))\n    done\n    echo \"${len}\"\n}\n\ncandidate() {\n \
    \   strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\")\
    \ = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo ${#1}\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  printf '%s\\n' \"${@}\" | wc -c\n}\n\ncandidate() {\n    strlen \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo ${#1}\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo $1 | wc -c\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") =\
    \ \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo $1 | wc -c\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") =\
    \ \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    echo $1 | wc -c\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") =\
    \ \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 2
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local i\n  for i in $1 do\n    ((len++))\n  done\n  echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv2cfaq30.sh: line 9: syntax error near unexpected token `len++''

    /tmp/tmpv2cfaq30.sh: line 9: `    ((len++))''

    '
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    local i\n    for (( i=1; i<${#str};\
    \ i++ )); do\n        ((len+=${#str}[i]))\n    done\n    echo \"${len}\"\n}\n\n\
    candidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"\
    asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n    local str=\"$1\"\n    local len=0\n    local i\n    for (( i=1; i<${#str};\
    \ i++ )); do\n        (( len++ ))\n    done\n    echo \"$len\"\n}\n\ncandidate()\
    \ {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\"\
    ) = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250
- exit_code: 2
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  local len=0\n  local i\n  for i in $1 do\n    ((len++))\n  done\n  echo\
    \ $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[\
    \ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv2cfaq30.sh: line 9: syntax error near unexpected token `len++''

    /tmp/tmpv2cfaq30.sh: line 9: `    ((len++))''

    '
  stdout: ''
  timestamp: 1660039250
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n#\n# $1 is a string\nstrlen()\
    \ {\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660039250

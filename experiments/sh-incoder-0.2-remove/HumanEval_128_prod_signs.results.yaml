language: sh
name: HumanEval_128_prod_signs
results:
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        (( ${arr[i]} == 0 )) && return 0\n        (( ${arr[i]} >\
    \ 0 )) && sign=-1\n        (( ${arr[i]} < 0 )) && sign=1\n        (( sum+=sign*${arr[i]}\
    \ ))\n    done\n    return $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp_d5_3c24.sh: line 14: ((: 1 2 2 -4 == 0 : syntax error in expression
    (error token is "2 2 -4 == 0 ")

    /tmp/tmp_d5_3c24.sh: line 15: ((: 1 2 2 -4 > 0 : syntax error in expression (error
    token is "2 2 -4 > 0 ")

    /tmp/tmp_d5_3c24.sh: line 16: ((: 1 2 2 -4 < 0 : syntax error in expression (error
    token is "2 2 -4 < 0 ")

    /tmp/tmp_d5_3c24.sh: line 17: ((: sum+=sign*1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        (( ${arr[i]} == 0 )) && return 0\n        (( ${arr[i]} >\
    \ 0 )) && sign=-1\n        (( ${arr[i]} < 0 )) && sign=1\n        (( ${arr[i]}\
    \ > 0 )) && sum+=${arr[i]}*${sign}\n    done\n    return $sum\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0a0i3s6i.sh: line 14: ((: 1 2 2 -4 == 0 : syntax error in expression
    (error token is "2 2 -4 == 0 ")

    /tmp/tmp0a0i3s6i.sh: line 15: ((: 1 2 2 -4 > 0 : syntax error in expression (error
    token is "2 2 -4 > 0 ")

    /tmp/tmp0a0i3s6i.sh: line 16: ((: 1 2 2 -4 < 0 : syntax error in expression (error
    token is "2 2 -4 < 0 ")

    /tmp/tmp0a0i3s6i.sh: line 17: ((: 1 2 2 -4 > 0 : syntax error in expression (error
    token is "2 2 -4 > 0 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for i in \"${arr[@]}\"; do\n    product=$((product*sign))\n    sign=$((sign*-1))\n\
    \    sum=$((sum+product))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        (( sign *= (${arr[i]} > 0 ? 1 : -1)))\n  \
    \      (( sum += sign * ${arr[i]} ))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwjxzrtbd.sh: line 14: ((: sign *= (1 2 2 -4 > 0 ? 1 : -1): missing
    `)'' (error token is "2 2 -4 > 0 ? 1 : -1)")

    /tmp/tmpwjxzrtbd.sh: line 15: ((: sum += sign * 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  local\
    \ i\n  for i in ${arr[@]}; do\n    sign=$((${sign} * ${i}))\n    sum=$((${sum}\
    \ + ${sign}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[\
    \ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"\
    -10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2\
    \ -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[\
    \ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"\
    0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sign=${arr[i]}\n    product=${product}\
    \ * ${sign}\n    ((sum+=product))\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\"\
    ) = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1\
    \ 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\"\
    ) = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1aad_nzj.sh: line 17: 0: command not found

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((sum + ${arr[i]}*sign))\n\
    \    sign=$((sign*-1))\n  done\n  product=$((product*sign))\n  echo \"$sum $product\"\
    \n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n\
    \    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\"\
    ) = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate\
    \ \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n  \
    \  [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnj0btvn7.sh: line 16: sum + 1 2 2 -4*sign: syntax error in expression
    (error token is "2 2 -4*sign")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        (( sign *= ( ${arr[i]} > 0 ? 1 : -1 ) ))\n\
    \        (( sum += sign * ${arr[i]} ))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4aelufl5.sh: line 14: ((: sign *= ( 1 2 2 -4 > 0 ? 1 : -1 ) : missing
    `)'' (error token is "2 2 -4 > 0 ? 1 : -1 ) ")

    /tmp/tmp4aelufl5.sh: line 15: ((: sum += sign * 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        (( sign *= ( ${arr[i]} > 0 ) ))\n        (( sum += sign\
    \ * ${arr[i]} ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk0e1mhg9.sh: line 14: ((: sign *= ( 1 2 2 -4 > 0 ) : missing `)''
    (error token is "2 2 -4 > 0 ) ")

    /tmp/tmpk0e1mhg9.sh: line 15: ((: sum += sign * 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sign=${arr[$i]}\n    product=$((product*sign))\n\
    \    sum=$((sum+product))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpucpdkg7y.sh: line 17: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    local product=1\n\
    \    local i\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        local val=${arr[i]}\n\
    \        if [[ ${val} -eq 0 ]]; then\n            sum=$((sum+sign*product))\n\
    \            product=1\n            sign=1\n        elif [[ ${val} -gt 0 ]]; then\n\
    \            product=$((product*sign))\n            sign=$((sign*-1))\n      \
    \  elif [[ ${val} -lt 0 ]]; then\n            product=$((product*sign))\n    \
    \        sign=$((sign*-1))\n        fi\n    done\n    sum=$((sum+sign*product))\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb07pvbya.sh: line 17: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    /tmp/tmpb07pvbya.sh: line 21: [[: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    /tmp/tmpb07pvbya.sh: line 24: [[: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for i in ${arr[@]}; do\n    sign=$((sign*i))\n    product=$((product*sign))\n\
    \    sum=$((sum+sign*i))\n  done\n  echo $sum\n  echo $product\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    local product=1\n\
    \    local i\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sign=${arr[$i]}\n\
    \        product=$((product*sign))\n        sum=$((sum+product))\n    done\n \
    \   echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphqsak1g3.sh: line 17: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sum\n  sum=0\n  local sign\n  sign=0\n  for\
    \ (( i=0; i<${#arr[@]}; i++ )); do\n    sign=$(( ${arr[i]} * sign ))\n    sum=$((\
    \ ${sum} + ${sign} ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5wdmpr3s.sh: line 17: 1 2 2 -4 * sign : syntax error in expression
    (error token is "2 2 -4 * sign ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sign\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local prod\n    local signs\n\
    \    local sign\n    local signs\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n    local sign\n    local sign\n    local sign\n\
    \    local sign\n    local sign\n\n}\n\ncandidate() {\n    prod_signs \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[\
    \ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"\
    -10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2\
    \ -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[\
    \ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"\
    0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for i in \"${arr[@]}\"; do\n    product=$((product * sign))\n    sum=$((sum\
    \ + sign * i))\n    sign=$((sign * -1))\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_8_pck1e.sh: line 17: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        local val=${arr[i]}\n        (( val > 0 ))\
    \ && sign=1 && sum+=$val || sign=-1 && sum-=$val\n    done\n    echo $sum\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsouhwtej.sh: line 15: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    /tmp/tmpsouhwtej.sh: line 15: sum-=1: command not found

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local sum=0\n  local sign=1\n  local i\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    sum=$((sum + ${arr[i]} * sign))\n    sign=$((sign\
    \ * -1))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[\
    \ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"\
    -10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2\
    \ -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[\
    \ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"\
    0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj30us5kf.sh: line 15: sum + 1 2 2 -4 * sign: syntax error in expression
    (error token is "2 2 -4 * sign")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    local elem=${arr[i]}\n    local\
    \ sign=${elem}\n    if (( sign )); then\n      sum=$((sum + sign*elem))\n    \
    \  product=$((product*sign))\n    else\n      sum=$((sum + elem))\n      product=$((product*sign))\n\
    \    fi\n  done\n  echo $((sum*product))\n}\n\ncandidate() {\n    prod_signs \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\"\
    ) = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgy4blk28.sh: line 18: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    /tmp/tmpgy4blk28.sh: line 22: 1 2 2 -4: syntax error in expression (error token
    is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  local\
    \ i\n  for i in \"${arr[@]}\"; do\n    sign=$((sign*i))\n    sum=$((sum+sign))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpmv6fvd2g.sh: line 18: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local i\n  for i in\
    \ \"${arr[@]}\"; do\n    (( sum += sign * i ))\n    (( sign *= -1 ))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe_cmlxym.sh: line 15: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local signs=0\n  local i\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    signs=$((${signs} * ${arr[i]}))\n    ((sum+=${arr[i]}))\n  done\n\
    \  echo $((${signs} * ${sum}))\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp2v7mmvsk.sh: line 15: 0 * 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    local product=1\n\
    \    local i\n\n    for i in $arr; do\n        (( sign *= ( $i < 0 ? -1 : 1 )\
    \ ))\n        (( product *= ( $i < 0 ? 1 : -1 ) ))\n        (( sum += $i * sign\
    \ ))\n    done\n    echo \"$sum * $product\"\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  local\
    \ i\n  for i in ${arr[@]}; do\n    sign=$((sign*i))\n  done\n  for i in ${arr[@]};\
    \ do\n    sum=$((sum+sign*i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local sum=0\n    local sign=1\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        (( arr[i]*sign ))\n        (( sum+=sign ))\n\
    \        (( sign=-sign ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n \
    \   prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\"\
    ) = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1\
    \ 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\"\
    ) = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnet80pnw.sh: line 14: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sign\n    local sum=0\n    local product=1\n\
    \    local i\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sign=${arr[i]}\n\
    \        sum=$((sum + sign*product))\n        product=$((product * sign))\n  \
    \  done\n    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp0lshp9t8.sh: line 17: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        local elem=${arr[$i]}\n        (( sign*=elem\
    \ ))\n        (( sum+=sign ))\n    done\n    echo $sum\n}\n\ncandidate() {\n \
    \   prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\"\
    ) = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1\
    \ 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\"\
    ) = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6ae6vmqm.sh: line 15: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign\n  local i\n  for i in \"\
    ${arr[@]}\"; do\n    sign=$(( ${i} == ${i} ? 1 : -1))\n    sum=$(( ${sum} * ${sign}\
    \ ))\n  done\n  echo \"${sum}\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmppws_inpo.sh: line 15: 1 2 2 -4 == 1 2 2 -4 ? 1 : -1: syntax error
    in expression (error token is "2 2 -4 == 1 2 2 -4 ? 1 : -1")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  local\
    \ i\n  for i in \"${arr[@]}\"; do\n    sign=$((sign*i))\n  done\n  for i in \"\
    ${arr[@]}\"; do\n    sum=$((sum+sign*i))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3p4xe0jg.sh: line 18: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local signs=0\n  local product=1\n \
    \ local i\n  for i in \"${arr[@]}\"; do\n    signs=$((signs + i))\n  done\n  for\
    \ i in \"${arr[@]}\"; do\n    product=$((product * i))\n  done\n  sum=$((signs\
    \ * product))\n  echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpwyjo17j_.sh: line 16: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        (( ${arr[i]} == 0 )) && return 0\n        (( ${arr[i]} >\
    \ 0 )) && sign=-1\n        (( ${arr[i]} < 0 )) && sign=1\n        (( ${arr[i]}\
    \ > 0 )) && sum=$(( ${sum} + ${sign} * ${arr[i]} ))\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppx6fjz5g.sh: line 14: ((: 1 2 2 -4 == 0 : syntax error in expression
    (error token is "2 2 -4 == 0 ")

    /tmp/tmppx6fjz5g.sh: line 15: ((: 1 2 2 -4 > 0 : syntax error in expression (error
    token is "2 2 -4 > 0 ")

    /tmp/tmppx6fjz5g.sh: line 16: ((: 1 2 2 -4 < 0 : syntax error in expression (error
    token is "2 2 -4 < 0 ")

    /tmp/tmppx6fjz5g.sh: line 17: ((: 1 2 2 -4 > 0 : syntax error in expression (error
    token is "2 2 -4 > 0 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        (( sign *= ( ${arr[i]} > 0 ) ))\n        ((\
    \ sum += sign * ${arr[i]} ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcapbwr8y.sh: line 14: ((: sign *= ( 1 2 2 -4 > 0 ) : missing `)''
    (error token is "2 2 -4 > 0 ) ")

    /tmp/tmpcapbwr8y.sh: line 15: ((: sum += sign * 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        (( ${arr[i]} == 0 )) && return 0\n        (( ${arr[i]} >\
    \ 0 )) && sign=-1\n        (( ${arr[i]} < 0 )) && sign=1\n        (( ${arr[i]}\
    \ > 0 )) && sum+=${arr[i]}*${sign}\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfrrd7bzq.sh: line 14: ((: 1 2 2 -4 == 0 : syntax error in expression
    (error token is "2 2 -4 == 0 ")

    /tmp/tmpfrrd7bzq.sh: line 15: ((: 1 2 2 -4 > 0 : syntax error in expression (error
    token is "2 2 -4 > 0 ")

    /tmp/tmpfrrd7bzq.sh: line 16: ((: 1 2 2 -4 < 0 : syntax error in expression (error
    token is "2 2 -4 < 0 ")

    /tmp/tmpfrrd7bzq.sh: line 17: ((: 1 2 2 -4 > 0 : syntax error in expression (error
    token is "2 2 -4 > 0 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local sum=0\n    local sign\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        sign=${arr[i]}\n        (( sum+=sign*sign\
    \ ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[\
    \ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"\
    -10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2\
    \ -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[\
    \ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"\
    0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp51eao1ds.sh: line 15: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local i\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    sum=$((sum+${arr[i]}*${sign}))\n    sign=${sign*(-1)}\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpj14q2ef2.sh: line 15: sum+1 2 2 -4*1: syntax error in expression
    (error token is "2 2 -4*1")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign\n    for sign in {1..3};\
    \ do\n        sum=$((sum + ${arr[@]} ${sign}))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpes2m4ppb.sh: line 14: sum + 1 2 2 -4 1: syntax error in expression
    (error token is "2 2 -4 1")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr\n    arr=$1\n    local sign\n    sign=0\n    local sum\n  \
    \  sum=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        sign=$((${arr[i]}*sign))\n\
    \        sum=$((${sum}+sign))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4ggbz559.sh: line 17: 1 2 2 -4*sign: syntax error in expression
    (error token is "2 2 -4*sign")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local i\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    local j\n    for ((j=0; j<${#arr[@]}; j++)); do\n\
    \      if [[ ${arr[$i]} -eq ${arr[$j]} ]]; then\n        ((sign*=-1))\n      else\n\
    \        ((sign*=1))\n      fi\n    done\n    ((sum+=sign*${arr[$i]}))\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7cs4qbmq.sh: line 17: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    /tmp/tmp7cs4qbmq.sh: line 23: ((: sum+=sign*1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local signs=0\n  local product=1\n \
    \ local i\n  local j\n  for ((i=0; i<${#arr[@]}; i++)); do\n    signs=$((signs+${arr[i]}))\n\
    \  done\n  for ((i=0; i<${#arr[@]}; i++)); do\n    product=$((product*${arr[i]}))\n\
    \  done\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((sum+${arr[i]}*${signs}))\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp5z1y0ljo.sh: line 17: signs+1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign\n  local i\n  for i in \"\
    ${arr[@]}\"; do\n    sign=$(( ${i} == ${i} ))\n    sum=$(( ${sum} + ${sign} *\
    \ ${i} ))\n  done\n  echo \"${sum}\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpei4a98_4.sh: line 15: 1 2 2 -4 == 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 == 1 2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local signs=0\n  local product=1\n \
    \ local i\n  for i in \"${arr[@]}\"; do\n    signs=$((signs * i))\n    sum=$((sum\
    \ + i))\n    product=$((product * i))\n  done\n  echo $((signs * product))\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph93f6m3r.sh: line 16: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local signs=0\n  local product=1\n \
    \ local i\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    signs=$((${signs}*${arr[i]}))\n\
    \    sum=$((${sum}+${signs}))\n  done\n\n  product=$((${product}*${signs}))\n\
    \  echo \"${sum} * ${product}\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp23k53hoa.sh: line 17: 0*1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n    sign=$((${sign}*${arr[i]}))\n    sum=$((${sum}+${sign}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpzcwkgz49.sh: line 17: 0*1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local sign=1\n  local i\n  for i in \"${arr[@]}\"\
    ; do\n    sum=$((sum + sign*i))\n    sign=$((sign*-1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphiifq35q.sh: line 15: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local sum=0\n  local sign\n  for sign in {1..3};\
    \ do\n    sum=$((sum + arr[$((sign-1))] * sign))\n  done\n  echo \"$sum\"\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpez9e69xh.sh: line 14: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  local\
    \ i\n  for i in \"${arr[@]}\"; do\n    sign=$((sign*i))\n  done\n  for i in \"\
    ${arr[@]}\"; do\n    sum=$((sum+sign*i))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3p4xe0jg.sh: line 18: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    local product=1\n\
    \    local i\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sign=${arr[$i]}\n\
    \        product=$((product*sign))\n        sum=$((sum+product))\n    done\n \
    \   echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9r8n_09x.sh: line 17: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  local\
    \ i\n  for i in \"${arr[@]}\"; do\n    sign=$((sign*i))\n  done\n  for i in \"\
    ${arr[@]}\"; do\n    sum=$((sum+sign*i))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3p4xe0jg.sh: line 18: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    local i\n    local\
    \ j\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=$((sum+${arr[i]}*sign))\n\
    \        sign=$((sign*-1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmp8vhe7k.sh: line 16: sum+1 2 2 -4*sign: syntax error in expression
    (error token is "2 2 -4*sign")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local signs=0\n    local product=1\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        signs=$(( signs * ${arr[i]}\
    \ ))\n        sum=$(( sum + ${arr[i]} ))\n        product=$(( product * ${arr[i]}\
    \ ))\n    done\n    echo $sum\n    echo $signs\n    echo $product\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpax83vlbc.sh: line 15: signs * 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign\n    for sign in {1..3};\
    \ do\n        sum=$((sum+${arr[@]} ${sign}))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0s3087hj.sh: line 14: sum+1 2 2 -4 1: syntax error in expression
    (error token is "2 2 -4 1")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local sum=0\n  local sign=1\n  local product=1\n\
    \  local i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((sum + ${arr[i]} *\
    \ sign))\n    sign=$((sign * -1))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6vm10red.sh: line 16: sum + 1 2 2 -4 * sign: syntax error in expression
    (error token is "2 2 -4 * sign")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        sign=${arr[i]}\n        (( sum+=sign ))\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyn7er4w8.sh: line 15: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sum\n  sum=0\n  local sign\n  sign=0\n  for\
    \ (( i=0; i<${#arr[@]}; i++ )); do\n    sign=$(( ${arr[i]} * sign ))\n    sum=$((\
    \ sum + ${arr[i]} * sign ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxq7q2py0.sh: line 17: 1 2 2 -4 * sign : syntax error in expression
    (error token is "2 2 -4 * sign ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr\n    arr=$1\n    local sum\n    sum=0\n    local sign\n   \
    \ sign=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        sign=$(( ${arr[i]}\
    \ * sign ))\n        sum=$(( ${sum} + ${sign} ))\n    done\n    echo \"${sum}\"\
    \n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n\
    \    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\"\
    ) = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate\
    \ \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n  \
    \  [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptf05pps5.sh: line 17: 1 2 2 -4 * sign : syntax error in expression
    (error token is "2 2 -4 * sign ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        local elem=${arr[i]}\n        local sign=${elem}\n\
    \        (( sign*=sign ))\n        (( sum+=sign ))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n\
    \    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\"\
    ) = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate\
    \ \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n  \
    \  [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp75ht_spg.sh: line 16: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    /tmp/tmp75ht_spg.sh: line 17: ((: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        (( ${arr[i]} == 0 )) && return 0\n        (( ${arr[i]} >\
    \ 0 )) && sign=-1\n        (( ${arr[i]} < 0 )) && sign=1\n        (( sum+=${arr[i]}*sign\
    \ ))\n    done\n    return $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpb6d02fpo.sh: line 14: ((: 1 2 2 -4 == 0 : syntax error in expression
    (error token is "2 2 -4 == 0 ")

    /tmp/tmpb6d02fpo.sh: line 15: ((: 1 2 2 -4 > 0 : syntax error in expression (error
    token is "2 2 -4 > 0 ")

    /tmp/tmpb6d02fpo.sh: line 16: ((: 1 2 2 -4 < 0 : syntax error in expression (error
    token is "2 2 -4 < 0 ")

    /tmp/tmpb6d02fpo.sh: line 17: ((: sum+=1 2 2 -4*sign : syntax error in expression
    (error token is "2 2 -4*sign ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for i in ${arr[@]}; do\n    sign=$((sign*i))\n    product=$((product*sign))\n\
    \    sum=$((sum+sign*i))\n  done\n  echo $sum\n  echo $product\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local sum=0\n    local signs=0\n    local product=1\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        signs=$(( signs * ${arr[i]}\
    \ ))\n        sum=$(( sum + ${arr[i]} ))\n    done\n    product=$(( signs * product\
    \ ))\n    echo \"$sum * $product\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[\
    \ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"\
    -10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2\
    \ -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[\
    \ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"\
    0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm9gx830x.sh: line 15: signs * 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local sum=0\n    local sign=1\n    for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n        sum=$((sum+${arr[i]}*sign))\n        sign=$((sign*-1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpu9faq_nn.sh: line 14: sum+1 2 2 -4*sign: syntax error in expression
    (error token is "2 2 -4*sign")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local signs=0\n    local i\n \
    \   local sign\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sign=${arr[$i]}\n\
    \        signs=$((signs*sign))\n        sum=$((sum+signs))\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppd8dpd65.sh: line 17: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        (( ${arr[i]} == 0 )) && return 0\n        (( ${arr[i]} >\
    \ 0 )) && sign=-1\n        (( ${arr[i]} < 0 )) && sign=1\n        (( sum+=sign*${arr[i]}\
    \ ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp7b83qjs8.sh: line 14: ((: 1 2 2 -4 == 0 : syntax error in expression
    (error token is "2 2 -4 == 0 ")

    /tmp/tmp7b83qjs8.sh: line 15: ((: 1 2 2 -4 > 0 : syntax error in expression (error
    token is "2 2 -4 > 0 ")

    /tmp/tmp7b83qjs8.sh: line 16: ((: 1 2 2 -4 < 0 : syntax error in expression (error
    token is "2 2 -4 < 0 ")

    /tmp/tmp7b83qjs8.sh: line 17: ((: sum+=sign*1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sign\n  local sum\n  local product\n  local i\n\
    \  local j\n  local signs\n  local sign\n  local signs\n  local sign\n  local\
    \ sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n\
    \  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local\
    \ sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n\
    \  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local\
    \ sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n\
    \  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local\
    \ sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n\
    \  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local\
    \ sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n\
    \  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local\
    \ sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n\
    \  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local\
    \ sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n\
    \  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local\
    \ sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n\
    \  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local\
    \ sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n\
    \  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local\
    \ sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n\
    \  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local\
    \ sign\n  local sign\n  local sign\n  local sign\n  local sign\n  local sign\n\
    \  local sign\n\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sum\n  sum=0\n  for ((i=0; i<${#arr[@]}; i++));\
    \ do\n    local sign\n    sign=${arr[i]}\n    sum=$((sum + sign * sign))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw_zr4v6w.sh: line 17: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        local elem=${arr[i]}\n        if [[ ${elem}\
    \ -eq 0 ]]; then\n            sign=0\n        elif [[ ${elem} -gt 0 ]]; then\n\
    \            sign=1\n        elif [[ ${elem} -lt 0 ]]; then\n            sign=-1\n\
    \        fi\n        sum=$(( sum + ${elem} * sign ))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n\
    \    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\"\
    ) = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate\
    \ \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n  \
    \  [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzan83ovs.sh: line 15: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    /tmp/tmpzan83ovs.sh: line 17: [[: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    /tmp/tmpzan83ovs.sh: line 19: [[: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    /tmp/tmpzan83ovs.sh: line 22: sum + 1 2 2 -4 * sign : syntax error in expression
    (error token is "2 2 -4 * sign ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for i in \"${arr[@]}\"; do\n    sign=$((sign*i))\n    product=$((product*sign))\n\
    \    sum=$((sum+product))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpog1t3dxm.sh: line 16: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        (( sum+=${arr[i]}*sign ))\n        (( sign=sign*-1\
    \ ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[\
    \ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"\
    -10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2\
    \ -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[\
    \ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"\
    0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2ufrnrhu.sh: line 14: ((: sum+=1 2 2 -4*sign : syntax error in
    expression (error token is "2 2 -4*sign ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        (( sign*=arr[i] ))\n        (( sum+=sign ))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwj8iyg7e.sh: line 14: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sum\n  sum=0\n  local sign\n  sign=0\n  local\
    \ i\n  for i in \"${arr[@]}\"; do\n    sign=$((sign*i))\n  done\n  sum=$((sum+sign))\n\
    \  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo23mpy89.sh: line 18: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        (( sum += sign*${arr[i]} ))\n        (( sign *= -1 ))\n \
    \   done\n    echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpoh5_9sth.sh: line 14: ((: sum += sign*1 2 2 -4 : syntax error in
    expression (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local signs=0\n    local product=1\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        signs=${arr[$i]}\n        product=$((product*signs))\n\
    \        sum=$((sum+product))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp02on7i3x.sh: line 16: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sign\n    local sum\n    local product\n\
    \    local i\n    sum=0\n    product=1\n    for ((i=0; i<${#arr[@]}; i++)); do\n\
    \        sign=${arr[i]}\n        if (( sign )); then\n            sum=$(( sum\
    \ + sign * product ))\n            product=$(( product * sign ))\n        fi\n\
    \    done\n    if (( product )); then\n        sum=$(( sum + product ))\n    fi\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeg6flu4d.sh: line 19: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        (( ${arr[i]} == 0 )) && return 0\n        (( ${arr[i]} >\
    \ 0 )) && sign=-1\n        (( ${arr[i]} < 0 )) && sign=1\n        (( ${arr[i]}\
    \ > 0 )) && sum+=${arr[i]}*${sign}\n    done\n    return $sum\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0a0i3s6i.sh: line 14: ((: 1 2 2 -4 == 0 : syntax error in expression
    (error token is "2 2 -4 == 0 ")

    /tmp/tmp0a0i3s6i.sh: line 15: ((: 1 2 2 -4 > 0 : syntax error in expression (error
    token is "2 2 -4 > 0 ")

    /tmp/tmp0a0i3s6i.sh: line 16: ((: 1 2 2 -4 < 0 : syntax error in expression (error
    token is "2 2 -4 < 0 ")

    /tmp/tmp0a0i3s6i.sh: line 17: ((: 1 2 2 -4 > 0 : syntax error in expression (error
    token is "2 2 -4 > 0 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    local elem=${arr[i]}\n    if [[\
    \ ${elem} -gt 0 ]]; then\n      product=${product} * ${sign}\n    fi\n    sign=${sign}\
    \ * ${elem}\n  done\n  sum=${sum} + ${product}\n  echo \"${sum}\"\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn67lrt5m.sh: line 17: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    /tmp/tmpn67lrt5m.sh: line 20: 0: command not found

    /tmp/tmpn67lrt5m.sh: line 22: +: command not found

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local sum=0\n    local sign=1\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        (( arr[i]*sign )) && sum+=sign\n        sign=-sign\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp1l7s2ywe.sh: line 14: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local signs=0\n    local product=1\n\
    \    local i\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        signs=$(( signs\
    \ * ${arr[$i]} ))\n        sum=$(( sum + ${arr[$i]} ))\n        product=$(( product\
    \ * ${arr[$i]} ))\n    done\n    echo $(( signs * sum * product ))\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfzdp8xp1.sh: line 16: signs * 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    sign=${arr[$i]}\n    product=${product}\
    \ * $sign\n    (( sum += product ))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_ht02ug_.sh: line 18: 0: command not found

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign\n    for sign in {1..3};\
    \ do\n        sum=$((sum + ${arr[@]} ${sign}))\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpou3znstf.sh: line 14: sum + 1 2 2 -4 1: syntax error in expression
    (error token is "2 2 -4 1")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sign\n    local sum\n    local i\n    local\
    \ j\n    local signs\n    local sign\n    local product\n    local signs\n   \
    \ local product\n    local signs\n    local product\n    local signs\n    local\
    \ product\n    local signs\n    local product\n    local signs\n    local product\n\
    \    local signs\n    local product\n    local signs\n    local product\n    local\
    \ signs\n    local product\n    local signs\n    local product\n    local signs\n\
    \    local product\n    local signs\n    local product\n    local signs\n    local\
    \ product\n    local signs\n    local product\n    local signs\n    local product\n\
    \    local signs\n    local product\n    local signs\n    local product\n    local\
    \ signs\n    local product\n    local signs\n    local product\n    local signs\n\
    \    local product\n    local signs\n    local product\n    local signs\n    local\
    \ product\n    local signs\n    local product\n    local signs\n    local product\n\
    \    local signs\n    local product\n    local signs\n    local product\n    local\
    \ signs\n    local product\n    local signs\n    local product\n    local signs\n\
    \    local product\n    local signs\n    local product\n    local signs\n    local\
    \ product\n    local signs\n    local product\n    local signs\n    local product\n\
    \    local signs\n    local product\n    local signs\n    local product\n    local\
    \ signs\n    local product\n    local signs\n    local product\n    local signs\n\
    \    local product\n    local signs\n    local product\n    local signs\n    local\
    \ product\n    local signs\n    local product\n    local signs\n    local product\n\
    \    local signs\n    local product\n    local signs\n    local product\n    local\
    \ signs\n    local product\n    local signs\n    local product\n    local signs\n\
    \    local product\n    local signs\n    local product\n    local signs\n    local\
    \ product\n    local signs\n    local product\n    local signs\n    local product\n\
    \    local signs\n    local product\n    local signs\n    local product\n    local\
    \ signs\n    local product\n\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        sum=$(( sum + ${arr[i]} * sign ))\n      \
    \  sign=$(( sign * -1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n  \
    \  prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\"\
    ) = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1\
    \ 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\"\
    ) = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq1gf40zl.sh: line 14: sum + 1 2 2 -4 * sign : syntax error in expression
    (error token is "2 2 -4 * sign ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign\n  local i\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    sign=${arr[i]}\n    sum=$((sum + sign*sign))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpycut92p5.sh: line 16: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    local sign=${arr[$i]}\n    product=$((product\
    \ * sign))\n    ((sum+=product))\n  done\n  echo $sum\n}\n\ncandidate() {\n  \
    \  prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\"\
    ) = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1\
    \ 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\"\
    ) = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu7beayme.sh: line 17: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sum\n  sum=0\n  local sign\n  sign=1\n  for\
    \ (( i=0; i<${#arr[@]}; i++ )); do\n    sum=$(( sum + ${arr[i]} * sign ))\n  \
    \  sign=$(( sign * -1 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0nc6s_vw.sh: line 17: sum + 1 2 2 -4 * sign : syntax error in expression
    (error token is "2 2 -4 * sign ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  local\
    \ i\n  for i in \"${arr[@]}\"; do\n    sign=$((sign*i))\n  done\n  for i in \"\
    ${arr[@]}\"; do\n    sum=$((sum+sign*i))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3p4xe0jg.sh: line 18: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  local\
    \ i\n  for i in ${arr[@]}; do\n    sign=$((sign*i))\n  done\n  for i in ${arr[@]};\
    \ do\n    sum=$((sum+sign*i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local sum=0\n  local sign=1\n  local i\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    sum=$((sum + ${arr[i]} * sign))\n    ((sign *=\
    \ -1))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpa5aufzzj.sh: line 15: sum + 1 2 2 -4 * sign: syntax error in expression
    (error token is "2 2 -4 * sign")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    for element\
    \ in \"${arr[@]}\"; do\n        sum=$((sum+element*sign))\n        sign=$((sign*-1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpdpfe7ydw.sh: line 14: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local sign=1\n  local i\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    sum=$((sum+${arr[i]}*sign))\n    sign=$((sign*-1))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa5vqzzxr.sh: line 15: sum+1 2 2 -4*sign: syntax error in expression
    (error token is "2 2 -4*sign")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sum\n  sum=0\n  for i in $arr; do\n    local\
    \ sign\n    sign=$(( ${i} * ${i} ))\n    sum=$(( ${sum} + ${sign} ))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    local val=${arr[i]}\n    local\
    \ sign=${val}\n    product=$((product*sign))\n    sign=$((sign*-1))\n    sum=$((sum+product))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpq1f5xx7j.sh: line 19: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local sum=0\n  local signs=0\n  local product=1\n\
    \  local i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    signs=$((signs+${arr[i]}))\n\
    \  done\n  for ((i=0; i<${#arr[@]}; i++)); do\n    product=$((product*${arr[i]}))\n\
    \  done\n  sum=$((sum+signs*product))\n  echo \"$sum\"\n}\n\ncandidate() {\n \
    \   prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\"\
    ) = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1\
    \ 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\"\
    ) = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdhsngde5.sh: line 16: signs+1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local signs=$(echo \"${arr[*]}\" | sed 's/ //g'\
    \ | sort -n)\n    local sum=0\n    local product=1\n    for sign in $signs; do\n\
    \        sum=$((sum + $sign * $product))\n        product=$((product * $sign))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        local elem=${arr[$i]}\n        if [[ ${elem}\
    \ -gt 0 ]]; then\n            sum=$(( sum + sign * elem ))\n        fi\n     \
    \   sign=$(( sign * -1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n \
    \   prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\"\
    ) = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1\
    \ 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\"\
    ) = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqknyn7ik.sh: line 15: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr\n    arr=$1\n    local sign\n    sign=0\n    local sum\n  \
    \  sum=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        sign=$((${arr[i]}*sign))\n\
    \        sum=$((${sum}+sign))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4ggbz559.sh: line 17: 1 2 2 -4*sign: syntax error in expression
    (error token is "2 2 -4*sign")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((sum + ${arr[i]}*sign))\n\
    \    sign=$((sign*-1))\n    product=$((product*sign))\n  done\n  echo $sum\n \
    \ echo $product\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfea0w0pc.sh: line 16: sum + 1 2 2 -4*sign: syntax error in expression
    (error token is "2 2 -4*sign")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local sum=0\n  local sign=1\n  local product=1\n\
    \  local i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((sum + ${arr[i]} *\
    \ sign))\n    sign=$((sign * -1))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6vm10red.sh: line 16: sum + 1 2 2 -4 * sign: syntax error in expression
    (error token is "2 2 -4 * sign")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        (( sign *= ( ${arr[i]} > 0 ) ))\n        (( sum += sign\
    \ * ${arr[i]} ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpydo_lkr4.sh: line 14: ((: sign *= ( 1 2 2 -4 > 0 ) : missing `)''
    (error token is "2 2 -4 > 0 ) ")

    /tmp/tmpydo_lkr4.sh: line 15: ((: sum += sign * 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local signs=0\n    local product=1\n\
    \    local i\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        signs=$((signs\
    \ * ${arr[i]}))\n        product=$((product * ${arr[i]}))\n    done\n\n    sum=$((signs\
    \ * product))\n    echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpv5ldg2_k.sh: line 17: signs * 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  local\
    \ i\n  for i in ${arr[@]}; do\n    sign=$((${sign} * ${i}))\n    sum=$((${sum}\
    \ + ${sign}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[\
    \ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"\
    -10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2\
    \ -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[\
    \ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"\
    0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign\n    for sign in {1..3};\
    \ do\n        sum=$((sum + ${arr[@]} ${sign}))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpts9y79na.sh: line 14: sum + 1 2 2 -4 1: syntax error in expression
    (error token is "2 2 -4 1")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr\n    arr=$1\n    local sum\n    sum=0\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        local sign\n        sign=${arr[i]}\n        if (( sign ));\
    \ then\n            sum=$(( sum + sign ))\n        fi\n    done\n    if (( sum\
    \ )); then\n        echo \"$sum\"\n    else\n        echo \"None\"\n    fi\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4h270ml8.sh: line 17: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local signs=0\n    local i\n    local\
    \ j\n    for ((i=0; i<${#arr[@]}; i++)); do\n        signs=$((${signs} * ${arr[i]}))\n\
    \    done\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=$((${sum} + ${signs}\
    \ * ${arr[i]}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    prod_signs \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\"\
    ) = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmgx9kmax.sh: line 16: 0 * 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    sign=${arr[i]}\n    product=${product}\
    \ * ${sign}\n    (( sum += product ))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpma2t01pf.sh: line 17: 0: command not found

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sum\n  sum=0\n  local sign\n  sign=0\n  local\
    \ i\n  for i in \"${arr[@]}\"; do\n    sign=$((sign*i))\n  done\n  sum=$((sum+sign))\n\
    \  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo23mpy89.sh: line 18: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for x in ${arr[@]};\
    \ do\n        (( sum += sign * x ))\n        (( sign *= -1 ))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local sign=1\n  local i\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    sum=$((sum+${arr[i]}*${sign}))\n    sign=$((sign*-1))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptk_sojac.sh: line 15: sum+1 2 2 -4*1: syntax error in expression
    (error token is "2 2 -4*1")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sign\n    local sum\n    local i\n    sum=0\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        sign=${arr[$i]}\n        ((\
    \ sum+=sign*sign ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5ifzthxn.sh: line 17: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr\n    arr=$1\n    local sign\n    sign=0\n    local sum\n  \
    \  sum=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        sign=${arr[$i]}\n\
    \        if [ $sign -eq 1 ]; then\n            sum=$((sum+i))\n        elif [\
    \ $sign -eq -1 ]; then\n            sum=$((sum-i))\n        elif [ $sign -eq 0\
    \ ]; then\n            sum=$((sum*i))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n\
    \    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\"\
    ) = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate\
    \ \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n  \
    \  [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp18e1mu_7.sh: line 18: [: too many arguments

    /tmp/tmp18e1mu_7.sh: line 20: [: too many arguments

    /tmp/tmp18e1mu_7.sh: line 22: [: too many arguments

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=( $1 )\n  local sign\n  sign=0\n  local sum\n  sum=0\n\
    \  for (( i=0; i<${#arr[@]}; i++ )); do\n    sign=$(( ${arr[i]} * sign ))\n  \
    \  sum=$(( sum + sign ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign\n    for sign in $arr;\
    \ do\n        ((sum+=sign*$sign))\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    local i\n    for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n        ((sum+=${arr[i]}*${sign}))\n       \
    \ ((sign=sign*-1))\n    done\n    echo \"${sum}\"\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz3v2hpyi.sh: line 15: ((: sum+=1 2 2 -4*1: syntax error in expression
    (error token is "2 2 -4*1")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local signs=0\n  local product=1\n  local\
    \ i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    signs=$((signs + ${arr[i]}))\n\
    \    product=$((product * ${arr[i]}))\n  done\n  sum=$((signs * product))\n  echo\
    \ $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq3hiqol2.sh: line 16: signs + 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr\n    arr=$1\n    local sign\n    sign=0\n    for i in ${arr[@]};\
    \ do\n        sign=$((sign*i))\n    done\n    echo $sign\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr\n    arr=$1\n    local sign\n    sign=0\n    local sum\n  \
    \  sum=0\n    for i in ${arr[@]}; do\n        sign=$((sign*i))\n    done\n   \
    \ for i in ${arr[@]}; do\n        sum=$((sum+sign*i))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n\
    \    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\"\
    ) = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate\
    \ \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n  \
    \  [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local signs=0\n  local i\n  for i in\
    \ \"${arr[@]}\"; do\n    signs=$((signs * i))\n    sum=$((sum + i))\n  done\n\
    \  echo \"$sum * $signs\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp31a1wqoh.sh: line 15: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local signs=0\n    local product=1\n\
    \    local i\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        signs=${arr[i]}\n\
    \        product=${product} * ${signs}\n        sum=${sum} + ${signs} * ${arr[i]}\n\
    \    done\n    echo \"${sum}\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: '/tmp/tmpjqcyl_hl.sh: line 17: 0: command not found

    /tmp/tmpjqcyl_hl.sh: line 18: +: command not found

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local sign=1\n  local i\n  for i in ${arr[@]};\
    \ do\n    sum=$((sum + sign*i))\n    sign=$((sign*-1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        ((sum+=${arr[i]}*sign))\n        ((sign=sign*-1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfpnlz727.sh: line 14: ((: sum+=1 2 2 -4*sign: syntax error in expression
    (error token is "2 2 -4*sign")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sum\n  sum=0\n  local sign\n  sign=0\n  for\
    \ i in ${arr[@]}; do\n    sign=$((sign*i))\n    sum=$((sum+sign))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  local\
    \ i\n  for i in ${arr[@]}; do\n    sign=$(( sign * i ))\n  done\n  for i in ${arr[@]};\
    \ do\n    sum=$(( sum + $sign * $i ))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  local\
    \ i\n  for i in ${arr[@]}; do\n    sign=$((sign*i))\n  done\n  for i in ${arr[@]};\
    \ do\n    sum=$((sum+sign*i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr\n    arr=$1\n    local sign\n    sign=0\n    local sum\n  \
    \  sum=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        sign=$((${arr[i]}*sign))\n\
    \        sum=$((${sum}+${sign}))\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpojjz40t_.sh: line 17: 1 2 2 -4*sign: syntax error in expression
    (error token is "2 2 -4*sign")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        (( sum+=${arr[i]}*sign ))\n        (( sign=sign*-1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmprovfqyqe.sh: line 14: ((: sum+=1 2 2 -4*sign : syntax error in
    expression (error token is "2 2 -4*sign ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        sign=${arr[$i]}\n        (( sum+=sign*sign ))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx81xal0o.sh: line 15: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sum\n  sum=0\n  for i in ${arr[@]}; do\n \
    \   local sign\n    sign=$(( ${i}<0 ? -1 : 1 ))\n    sum=$(( ${sum} * ${sign}\
    \ ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign\n    for sign in {1..3};\
    \ do\n        sum=$((sum + ${arr[@]} ${sign}))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpts9y79na.sh: line 14: sum + 1 2 2 -4 1: syntax error in expression
    (error token is "2 2 -4 1")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  local\
    \ i\n  for i in ${arr[@]}; do\n    sign=$((sign*i))\n  done\n  for i in ${arr[@]};\
    \ do\n    sum=$((sum+sign*i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        (( ${arr[i]} == 0 )) && return 0\n        (( ${arr[i]} >\
    \ 0 )) && sign=-1\n        (( ${arr[i]} < 0 )) && sign=1\n        (( ${arr[i]}\
    \ > 0 )) && sum+=${sign}*${arr[i]}\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq1345_lu.sh: line 14: ((: 1 2 2 -4 == 0 : syntax error in expression
    (error token is "2 2 -4 == 0 ")

    /tmp/tmpq1345_lu.sh: line 15: ((: 1 2 2 -4 > 0 : syntax error in expression (error
    token is "2 2 -4 > 0 ")

    /tmp/tmpq1345_lu.sh: line 16: ((: 1 2 2 -4 < 0 : syntax error in expression (error
    token is "2 2 -4 < 0 ")

    /tmp/tmpq1345_lu.sh: line 17: ((: 1 2 2 -4 > 0 : syntax error in expression (error
    token is "2 2 -4 > 0 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        (( ${arr[i]} == 0 )) && return 0\n        (( ${arr[i]} >\
    \ 0 )) && sign=-1\n        (( ${arr[i]} < 0 )) && sign=1\n        (( ${arr[i]}\
    \ > 0 )) && sum+=${arr[i]}*${sign}\n    done\n    return $sum\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0a0i3s6i.sh: line 14: ((: 1 2 2 -4 == 0 : syntax error in expression
    (error token is "2 2 -4 == 0 ")

    /tmp/tmp0a0i3s6i.sh: line 15: ((: 1 2 2 -4 > 0 : syntax error in expression (error
    token is "2 2 -4 > 0 ")

    /tmp/tmp0a0i3s6i.sh: line 16: ((: 1 2 2 -4 < 0 : syntax error in expression (error
    token is "2 2 -4 < 0 ")

    /tmp/tmp0a0i3s6i.sh: line 17: ((: 1 2 2 -4 > 0 : syntax error in expression (error
    token is "2 2 -4 > 0 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sign=${arr[i]}\n    product=${product}\
    \ * ${sign}\n    ((sum+=product))\n  done\n  echo \"${sum}\"\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjmm2qyw5.sh: line 17: 0: command not found

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    local i\n    for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n        ((sign*=arr[i]))\n        ((sum+=sign*arr[i]))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpej0e9yfk.sh: line 15: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    /tmp/tmpej0e9yfk.sh: line 16: ((: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for i in \"${arr[@]}\"; do\n    product=$((product * sign))\n    sign=$((sign\
    \ * -1))\n    sum=$((sum + sign * i))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8vzqtb66.sh: line 18: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local sign=1\n  local i\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    sum=$((sum + ${arr[i]} * sign))\n    sign=$((sign * -1))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpscxtrhy5.sh: line 15: sum + 1 2 2 -4 * sign: syntax error in expression
    (error token is "2 2 -4 * sign")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sign\n    local sum=0\n    local product=1\n\
    \    for sign in $arr; do\n        sum=$((sum + sign*product))\n        product=$((product*sign))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        local val=${arr[$i]}\n        (( val > 0 ))\
    \ && sign=1 && sum+=$val\n        (( val < 0 )) && sign=-1 && sum+=$val\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbpk13u2u.sh: line 15: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    /tmp/tmpbpk13u2u.sh: line 16: ((: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local signs=0\n    local i\n    for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n        signs=$((signs*${arr[i]}))\n       \
    \ sum=$((sum+${arr[i]}))\n    done\n    if ((${#arr[@]} > 0)); then\n        echo\
    \ \"${signs} * ${sum}\"\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzd8mubov.sh: line 15: signs*1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local signs=0\n  local i\n  for i in $arr;\
    \ do\n    signs=$((signs * $i))\n    sum=$((sum + $i))\n  done\n  echo $((signs\
    \ * sum))\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local i\n\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    sign=${arr[i]}\n    sum=$((sum + sign*${arr[i]}))\n\
    \  done\n\n  echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpvym_rdss.sh: line 17: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr\n    arr=$1\n    local sign\n    sign=0\n    local sum\n  \
    \  sum=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        sign=${arr[$i]}\n\
    \        sum=$(( sum + sign*sign ))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg9b1g_34.sh: line 18: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sum\n  sum=0\n  local sign\n  sign=0\n  local\
    \ i\n  for i in ${arr[@]}; do\n    sign=$((sign*i))\n  done\n  sum=$((sum+sign))\n\
    \  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  local\
    \ i\n  for i in ${arr[@]}; do\n    sign=$((sign*i))\n  done\n  for i in ${arr[@]};\
    \ do\n    sum=$((sum+sign*i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sum\n  sum=0\n  for i in ${arr[@]}; do\n \
    \   sum=$((sum+$i*$((-$i))))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    local product=1\n\
    \    local i\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=$((sum+${arr[i]}*${sign}))\n\
    \        sign=${sign*(-1)}\n        product=$((product*${sign}))\n    done\n \
    \   echo \"${sum}\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpoxmkb771.sh: line 16: sum+1 2 2 -4*1: syntax error in expression
    (error token is "2 2 -4*1")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local signs=0\n  local product=1\n  local\
    \ i\n  for i in \"${arr[@]}\"; do\n    signs=$((signs * i))\n    product=$((product\
    \ * i))\n  done\n  sum=$((signs * product))\n  echo $sum\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvms9eus4.sh: line 16: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for x in $arr; do\n\
    \        (( sum += sign * x ))\n        (( sign *= -1 ))\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local i\n  for i in \"${arr[@]}\"\
    ; do\n    sign=$((sign*i))\n  done\n  echo $sign\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplspup7tf.sh: line 16: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 2
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local signs=0\n  local i\n  for i in \"\
    ${arr[@]}\"; do\n    ((signs+=(( ${i} * ${signs} )))\n    ((sum+=${i}))\n  done\n\
    \  echo \"${sum} * ${signs}\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpb5r5g47g.sh: line 15: syntax error near unexpected token `(''

    /tmp/tmpb5r5g47g.sh: line 15: `(signs+=(( ${i} * ${signs} )))''

    /tmp/tmpb5r5g47g.sh: line 16: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpb5r5g47g.sh: line 17: syntax error near unexpected token `done''

    /tmp/tmpb5r5g47g.sh: line 17: `  done''

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr\n    arr=$1\n    local sign\n    sign=0\n    local sum\n  \
    \  sum=0\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        sign=${arr[$i]}\n\
    \        (( sign*=sign ))\n        (( sum+=sign ))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n\
    \    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\"\
    ) = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate\
    \ \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n  \
    \  [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0lnwi0md.sh: line 18: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    /tmp/tmp0lnwi0md.sh: line 19: ((: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local sum=0\n  local sign=1\n  for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n    sum=$(( sum + ${arr[i]} * sign ))\n    sign=$(( sign * -1 ))\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpgyapv0kz.sh: line 14: sum + 1 2 2 -4 * sign : syntax error in expression
    (error token is "2 2 -4 * sign ")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local signs=0\n    local product=1\n\
    \    local i\n    for ((i=0; i<${#arr[@]}; i++)); do\n        signs=$((${arr[i]}*signs))\n\
    \        sum=$((${sum}+${signs}))\n        product=$((${product}*${arr[i]}))\n\
    \    done\n    echo $((${sum}*${product}))\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfafoneyf.sh: line 16: 1 2 2 -4*signs: syntax error in expression
    (error token is "2 2 -4*signs")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    for el in \"\
    ${arr[@]}\"; do\n        (( sign *= -1 ))\n        (( sum += sign * el ))\n  \
    \  done\n    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmplalpon2h.sh: line 15: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr\n    arr=$1\n    local sum\n    sum=0\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        local sign\n        sign=${arr[$i]}\n        (( sum+=sign*sign\
    \ ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[\
    \ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"\
    -10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2\
    \ -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[\
    \ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"\
    0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc16zkt7b.sh: line 17: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr\n    arr=$1\n    local sum\n    sum=0\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        local sign\n        sign=${arr[$i]}\n        (( sum+=sign*sign\
    \ ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[\
    \ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"\
    -10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2\
    \ -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[\
    \ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"\
    0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc16zkt7b.sh: line 17: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sign\n    local sum\n    local i\n    sum=0\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n        sign=${arr[i]}\n        (( sum\
    \ += sign * ${sign} * ${sign} ))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7bozhdv6.sh: line 17: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local sign=1\n  local i\n  for i in $arr;\
    \ do\n    (( sum += sign * i ))\n    (( sign *= -1 ))\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local signs=0\n  local product=1\n  local\
    \ i\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    signs=${arr[i]}\n    product=${product}\
    \ * ${signs}\n    ((sum+=product))\n  done\n\n  echo \"${sum}\"\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnix_9rf3.sh: line 18: 0: command not found

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sign\n  local sum\n  local i\n  local j\n  local\
    \ product\n  local signs\n  local sign\n  local signs\n  local sign\n  local signs\n\
    \  local sign\n  local signs\n  local sign\n  local signs\n  local sign\n  local\
    \ signs\n  local sign\n  local signs\n  local sign\n  local signs\n  local sign\n\
    \  local signs\n  local sign\n  local signs\n  local sign\n  local signs\n  local\
    \ sign\n  local signs\n  local sign\n  local signs\n  local sign\n  local signs\n\
    \  local sign\n  local signs\n  local sign\n  local signs\n  local sign\n  local\
    \ signs\n  local sign\n  local signs\n  local sign\n  local signs\n  local sign\n\
    \  local signs\n  local sign\n  local signs\n  local sign\n  local signs\n  local\
    \ sign\n  local signs\n  local sign\n  local signs\n  local sign\n  local signs\n\
    \  local sign\n  local signs\n  local sign\n  local signs\n  local sign\n  local\
    \ signs\n  local sign\n  local signs\n  local sign\n  local signs\n  local sign\n\
    \  local signs\n  local sign\n  local signs\n  local sign\n  local signs\n  local\
    \ sign\n  local signs\n  local sign\n  local signs\n  local sign\n  local signs\n\
    \  local sign\n  local signs\n  local sign\n  local signs\n  local sign\n  local\
    \ signs\n  local sign\n  local signs\n  local sign\n  local signs\n  local sign\n\
    \  local signs\n  local sign\n  local signs\n  local sign\n  local signs\n  local\
    \ sign\n  local signs\n  local sign\n  local signs\n  local sign\n  local signs\n\
    \  local sign\n  local signs\n  local sign\n  local signs\n  local sign\n  local\
    \ signs\n  local sign\n  local signs\n  local sign\n  local signs\n  local sign\n\
    \  local signs\n  local sign\n  local signs\n  local sign\n\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sign\n    local signs\n    local signs_sum\n\
    \    local signs_product\n    local signs_product2\n    local signs_product3\n\
    \    local signs_product4\n    local signs_product5\n    local signs_product6\n\
    \    local signs_product7\n    local signs_product8\n    local signs_product9\n\
    \    local signs_product10\n    local signs_product11\n    local signs_product12\n\
    \    local signs_product13\n    local signs_product14\n    local signs_product15\n\
    \    local signs_product16\n    local signs_product17\n    local signs_product18\n\
    \    local signs_product19\n    local signs_product20\n    local signs_product21\n\
    \    local signs_product22\n    local signs_product23\n    local signs_product24\n\
    \    local signs_product25\n    local signs_product26\n    local signs_product27\n\
    \    local signs_product28\n    local signs_product29\n    local signs_product30\n\
    \    local signs_product31\n    local signs_product32\n    local signs_product33\n\
    \    local signs_product34\n    local signs_product35\n    local signs_product36\n\
    \    local signs_product37\n    local signs_product38\n    local signs_product39\n\
    \    local signs_product40\n    local signs_product41\n    local signs_product42\n\
    \    local signs_product43\n    local signs_product44\n    local signs_product45\n\
    \    local signs_product46\n    local signs_product47\n    local signs_product48\n\
    \    local signs_product49\n    local signs_product50\n    local signs_product51\n\
    \    local signs_product52\n    local signs_product53\n    local signs_product54\n\
    \    local signs_product55\n    local signs_product56\n    local signs_product57\n\
    \    local signs_product58\n    local signs_product59\n    local signs_product60\n\
    \    local signs_product61\n    local signs_product62\n    local signs_product63\n\
    \    local signs_product64\n    local signs_product65\n    local signs_product66\n\
    \    local signs_product67\n    local signs_product68\n    local signs_product69\n\
    \    local signs_product70\n    local \n}\n\ncandidate() {\n    prod_signs \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\"\
    ) = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sign\n  local sum\n  local product\n  local i\n\
    \  local j\n  local len\n  local signs\n  local signs_len\n  local signs_product\n\
    \  local signs_product2\n  local signs_product3\n  local signs_product4\n  local\
    \ signs_product5\n  local signs_product6\n  local signs_product7\n  local signs_product8\n\
    \  local signs_product9\n  local signs_product10\n  local signs_product11\n  local\
    \ signs_product12\n  local signs_product13\n  local signs_product14\n  local signs_product15\n\
    \  local signs_product16\n  local signs_product17\n  local signs_product18\n \
    \ local signs_product19\n  local signs_product20\n  local signs_product21\n  local\
    \ signs_product22\n  local signs_product23\n  local signs_product24\n  local signs_product25\n\
    \  local signs_product26\n  local signs_product27\n  local signs_product28\n \
    \ local signs_product29\n  local signs_product30\n  local signs_product31\n  local\
    \ signs_product32\n  local signs_product33\n  local signs_product34\n  local signs_product35\n\
    \  local signs_product36\n  local signs_product37\n  local signs_product38\n \
    \ local signs_product39\n  local signs_product40\n  local signs_product41\n  local\
    \ signs_product42\n  local signs_product43\n  local signs_product44\n  local signs_product45\n\
    \  local signs_product46\n  local signs_product47\n  local signs_product48\n \
    \ local signs_product49\n  local signs_product50\n  local signs_product51\n  local\
    \ signs_product52\n  local signs_product53\n  local signs_product54\n  local signs_product55\n\
    \  local signs_product56\n  local signs_product57\n  local signs_product58\n \
    \ local signs_product59\n  local signs_product60\n  local signs_product61\n  local\
    \ signs_product62\n  local signs_product63\n  local signs_product64\n  local signs_product65\n\
    \  local signs_product66\n  local signs_product67\n  local sign\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=($1)\n  local sum\n  sum=0\n  local sign\n  sign=0\n \
    \ local i\n  for i in \"${arr[@]}\"; do\n    sign=$((sign*i))\n  done\n  sum=$((sum+sign))\n\
    \  for i in \"${arr[@]}\"; do\n    sign=$((sign*i))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local signs=0\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        signs=$(( signs * ${arr[i]} ))\n        sum=$((\
    \ sum + ${arr[i]} * signs ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcwc0i16y.sh: line 14: signs * 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sign\n    local sum\n    local product\n\
    \    local i\n    sum=0\n    product=1\n    for i in \"${arr[@]}\"; do\n     \
    \   sign=$(( ${i} == ${i} ))\n        sum=$(( ${sum} + ${sign} * ${product} ))\n\
    \        product=$(( ${product} * ${sign} ))\n    done\n    echo \"${sum}\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8v6y49zq.sh: line 18: 1 2 2 -4 == 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 == 1 2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    local product=1\n\
    \    local i\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        (( sign*=arr[i]\
    \ ))\n        (( sum+=sign*product ))\n        (( product*=sign ))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6e8fzey8.sh: line 16: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local i\n\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    local elem=${arr[i]}\n    local sign=${elem}\n\
    \    sum=$((sum + sign*elem))\n    sign=$((sign*-1))\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpij34z8f8.sh: line 18: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    local product=1\n\
    \    local i\n    local j\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=$((sum\
    \ + ${arr[i]}*sign))\n        sign=$((sign*-1))\n    done\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        product=$((product*${arr[i]}))\n    done\n    echo \"$sum\
    \ $product\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpneh1o41j.sh: line 17: sum + 1 2 2 -4*sign: syntax error in expression
    (error token is "2 2 -4*sign")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    local product=1\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        (( sign*=arr[i] ))\n      \
    \  (( sum+=sign ))\n        (( product*=sign ))\n    done\n    echo \"$sum\"\n\
    \    echo \"$product\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpswtjncjf.sh: line 15: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local signs=0\n  local i\n  for i in ${arr[@]};\
    \ do\n    signs=$((signs + $i))\n  done\n  for i in ${arr[@]}; do\n    sum=$((sum\
    \ + $i * $signs))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\"\
    ) = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sum\n  sum=0\n  for i in ${arr[@]}; do\n \
    \   sum=$((sum + $i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local signs=0\n    local product=1\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        signs=$(( signs * ${arr[i]}\
    \ ))\n        sum=$(( sum + ${arr[i]} * ${signs} ))\n        product=$(( product\
    \ * ${signs} ))\n    done\n    echo \"$sum $product\"\n}\n\ncandidate() {\n  \
    \  prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\"\
    ) = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1\
    \ 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\"\
    ) = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqxow8wlb.sh: line 15: signs * 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sign\n    local sum\n    local i\n    local\
    \ j\n    local signs\n    local signs_len\n    local signs_sum\n    local signs_product\n\
    \    local signs_product2\n    local signs_product3\n    local signs_product4\n\
    \    local signs_product5\n    local signs_product6\n    local signs_product7\n\
    \    local signs_product8\n    local signs_product9\n    local signs_product10\n\
    \    local signs_product11\n    local signs_product12\n    local signs_product13\n\
    \    local signs_product14\n    local signs_product15\n    local signs_product16\n\
    \    local signs_product17\n    local signs_product18\n    local signs_product19\n\
    \    local signs_product20\n    local signs_product21\n    local signs_product22\n\
    \    local signs_product23\n    local signs_product24\n    local signs_product25\n\
    \    local signs_product26\n    local signs_product27\n    local signs_product28\n\
    \    local signs_product29\n    local signs_product30\n    local signs_product31\n\
    \    local signs_product32\n    local signs_product33\n    local signs_product34\n\
    \    local signs_product35\n    local signs_product36\n    local signs_product37\n\
    \    local signs_product38\n    local signs_product39\n    local signs_product40\n\
    \    local signs_product41\n    local signs_product42\n    local signs_product43\n\
    \    local signs_product44\n    local signs_product45\n    local signs_product46\n\
    \    local signs_product47\n    local signs_product48\n    local signs_product49\n\
    \    local signs_product50\n    local signs_product51\n    local signs_product52\n\
    \    local signs_product53\n    local signs_product54\n    local signs_product55\n\
    \    local signs_product56\n    local signs_product57\n    local signs_product58\n\
    \    local signs_product59\n    local signs_product60\n    local signs_product61\n\
    \    local signs_product62\n    local signs_product63\n    local signs_product64\n\
    \    local signs_product65\n    local signs_product66\n    local signs_product67\n\
    \    local signs_product\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  local\
    \ i\n  for i in \"${arr[@]}\"; do\n    sign=$((sign*i))\n  done\n  for i in \"\
    ${arr[@]}\"; do\n    sum=$((sum+sign*i))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3p4xe0jg.sh: line 18: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local signs=0\n  local product=1\n  local\
    \ i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    signs=$((${signs} * ${arr[i]}))\n\
    \    product=$((${product} * ${arr[i]}))\n  done\n  sum=$((${sum} + ${signs}))\n\
    \  sum=$((${sum} + ${product}))\n  echo \"${sum}\"\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc3crwglt.sh: line 16: 0 * 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign\n  for sign in {1..3}; do\n\
    \    sum=$((sum + ${arr[@]} ${sign}))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpul21elm1.sh: line 14: sum + 1 2 2 -4 1: syntax error in expression
    (error token is "2 2 -4 1")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local sign=1\n  local i\n  for i in \"${arr[@]}\"\
    ; do\n    sum=$((sum + sign*i))\n    sign=$((sign*-1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphiifq35q.sh: line 15: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local signs=$(echo \"$arr\" | tr ' ' '\\n' | sort -n\
    \ | uniq -c | sort -n | awk '{print $2}')\n  local sum=0\n  local product=1\n\
    \  for sign in $signs; do\n    sum=$((sum + $sign*$product))\n    product=$((product\
    \ * $sign))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[\
    \ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"\
    -10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2\
    \ -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[\
    \ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"\
    0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        (( sign*=arr[i] ))\n        (( sum+=sign ))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwj8iyg7e.sh: line 14: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sum\n  sum=0\n  local sign\n  sign=0\n  local\
    \ i\n  for i in \"${arr[@]}\"; do\n    sign=$((sign*i))\n  done\n  sum=$((sum+sign))\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppj5lyse5.sh: line 18: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local signs=0\n  local product=1\n \
    \ local i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    signs=$((signs + ${arr[i]}))\n\
    \  done\n  for ((i=0; i<${#arr[@]}; i++)); do\n    product=$((product * ${signs}))\n\
    \    sum=$((sum + ${arr[i]} * ${product}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6esorp_v.sh: line 16: signs + 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local signs=0\n    local product=1\n\
    \    local i\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        signs=$(( signs\
    \ * ${arr[i]} ))\n        sum=$(( sum + ${arr[i]} ))\n    done\n    product=$((\
    \ signs * product ))\n    echo $sum\n    echo $product\n}\n\ncandidate() {\n \
    \   prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\"\
    ) = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1\
    \ 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\"\
    ) = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw5gmbx64.sh: line 16: signs * 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign\n    for sign in {1..3};\
    \ do\n        sum=$((sum + arr[$((${#arr[@]} - 1))] * sign))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkqv06eb6.sh: line 14: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((sum + ${arr[i]} * ${sign}))\n\
    \    sign=$((sign * -1))\n    product=$((product * ${sign}))\n  done\n  echo \"\
    ${sum}\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzjpthy_9.sh: line 16: sum + 1 2 2 -4 * 1: syntax error in expression
    (error token is "2 2 -4 * 1")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for i in ${arr[@]}; do\n    sum=$((sum+$i*$sign))\n    sign=$((sign*-1))\n\
    \    product=$((product*$sign))\n  done\n  echo $sum\n  echo $product\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local signs=0\n    local product=1\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        signs=$(( signs * ${arr[i]}\
    \ ))\n        sum=$(( sum + ${arr[i]} * signs ))\n        product=$(( product\
    \ * ${arr[i]} ))\n    done\n    echo $sum\n    echo $product\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0matk5q3.sh: line 15: signs * 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=\"$1\"\n  local sum=0\n  local sign\n  local i\n  for i in \"\
    ${arr[@]}\"; do\n    sign=$(( ${i} == ${i} ))\n    sum=$(( ${sum} + ${sign} *\
    \ ${i} ))\n  done\n  echo \"${sum}\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpei4a98_4.sh: line 15: 1 2 2 -4 == 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 == 1 2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sign\n    local sum=0\n    local product=1\n\
    \    for sign in $arr; do\n        sum=$((sum + sign))\n        product=$((product\
    \ * sign))\n    done\n    echo $sum\n    echo $product\n}\n\ncandidate() {\n \
    \   prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\"\
    ) = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1\
    \ 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\"\
    ) = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        sign=${arr[i]}\n        (( sum+=sign*sign ))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb9_bith0.sh: line 15: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sign\n    local sum=0\n    local product=1\n\
    \    for sign in $arr; do\n        sum=$((sum + sign*product))\n        product=$((product*sign))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  local\
    \ i\n  for i in ${arr[@]}; do\n    sign=$((sign*i))\n  done\n  for i in ${arr[@]};\
    \ do\n    sum=$((sum+sign*i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sign\n    local signs\n    local signs_sum\n\
    \    local signs_prod\n    local signs_prodsum\n    local signs_prodsum2\n   \
    \ local signs_prodsum3\n    local signs_prodsum4\n    local signs_prodsum5\n \
    \   local signs_prodsum6\n    local signs_prodsum7\n    local signs_prodsum8\n\
    \    local signs_prodsum9\n    local signs_prodsum10\n    local signs_prodsum11\n\
    \    local signs_prodsum12\n    local signs_prodsum13\n    local signs_prodsum14\n\
    \    local signs_prodsum15\n    local signs_prodsum16\n    local signs_prodsum17\n\
    \    local signs_prodsum18\n    local signs_prodsum19\n    local signs_prodsum20\n\
    \    local signs_prodsum21\n    local signs_prodsum22\n    local signs_prodsum23\n\
    \    local signs_prodsum24\n    local signs_prodsum25\n    local signs_prodsum26\n\
    \    local signs_prodsum27\n    local signs_prodsum28\n    local signs_prodsum29\n\
    \    local signs_prodsum30\n    local signs_prodsum31\n    local signs_prodsum32\n\
    \    local signs_prodsum33\n    local signs_prodsum34\n    local signs_prodsum35\n\
    \    local signs_prodsum36\n    local signs_prodsum37\n    local signs_prodsum38\n\
    \    local signs_prodsum39\n    local signs_prodsum40\n    local signs_prodsum41\n\
    \    local signs_prodsum42\n    local signs_prodsum43\n    local signs_prodsum44\n\
    \    local signs_prodsum45\n    local signs_prodsum46\n    local signs_prodsum47\n\
    \    local signs_prodsum48\n    local signs_prodsum49\n    local signs_prodsum50\n\
    \    local signs_prodsum51\n    local signs_prodsum52\n    local signs_prodsum53\n\
    \    local signs_prodsum54\n    local signs_prodsum55\n    local signs_prodsum56\n\
    \    local signs_prodsum57\n    local signs_prodsum58\n    local signs_prodsum59\n\
    \    local signs_prodsum60\n    local signs_prodsum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 2
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    local product=1\n\
    \    local i\n\n    for i in $arr; do\n        (( sign *= ( $i < 0 )) )\n    \
    \    (( product *= ( $i > 0 )) )\n        (( sum += $i * sign ))\n    done\n\n\
    \    echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5fiyq9yb.sh: line 17: syntax error near unexpected token `(''

    /tmp/tmp5fiyq9yb.sh: line 17: `( sign *= ( $i < 0 )) ''

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sign\n  sign=0\n  local sum\n  sum=0\n  local\
    \ i\n  for i in ${arr[@]}; do\n    sign=$((sign*i))\n  done\n  for i in ${arr[@]};\
    \ do\n    sum=$((sum+sign*i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local sign=1\n  local product=1\n  local\
    \ i\n  for i in ${arr[@]}; do\n    sign=$((sign*i))\n    product=$((product*sign))\n\
    \    sum=$((sum+sign*i))\n  done\n  echo $sum\n  echo $product\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033305
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sum\n  sum=0\n  for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n    local sign\n    sign=${arr[i]}\n    sum=$(( sum + sign*sign\
    \ ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpk0ey27zb.sh: line 17: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    local i\n    for\
    \ (( i=0; i<${#arr[@]}; i++ )); do\n        (( sign *= ( ${arr[i]} > 0 )))\n \
    \       (( sum += sign * ${arr[i]} ))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5kwah8kw.sh: line 15: ((: sign *= ( 1 2 2 -4 > 0 ): missing `)''
    (error token is "2 2 -4 > 0 )")

    /tmp/tmp5kwah8kw.sh: line 16: ((: sum += sign * 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr\n  arr=$1\n  local sum\n  sum=0\n  local sign\n  sign=1\n  for\
    \ (( i=0; i<${#arr[@]}; i++ )); do\n    sign=$(( sign * ${arr[i]} ))\n    sum=$((\
    \ sum + sign ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphsxh77qf.sh: line 17: sign * 1 2 2 -4 : syntax error in expression
    (error token is "2 2 -4 ")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sign\n    local sum\n    local i\n    local j\n\
    \    local sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n\
    \    local sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n\
    \    local sum11\n    local sum12\n    local sum13\n    local sum14\n    local\
    \ sum15\n    local sum16\n    local sum17\n    local sum18\n    local sum19\n\
    \    local sum20\n    local sum21\n    local sum22\n    local sum23\n    local\
    \ sum24\n    local sum25\n    local sum26\n    local sum27\n    local sum28\n\
    \    local sum29\n    local sum30\n    local sum31\n    local sum32\n    local\
    \ sum33\n    local sum34\n    local sum35\n    local sum36\n    local sum37\n\
    \    local sum38\n    local sum39\n    local sum40\n    local sum41\n    local\
    \ sum42\n    local sum43\n    local sum44\n    local sum45\n    local sum46\n\
    \    local sum47\n    local sum48\n    local sum49\n    local sum50\n    local\
    \ sum51\n    local sum52\n    local sum53\n    local sum54\n    local sum55\n\
    \    local sum56\n    local sum57\n    local sum58\n    local sum59\n    local\
    \ sum60\n    local sum61\n    local sum62\n    local sum63\n    local sum64\n\
    \    local sum65\n    local sum66\n    local sum67\n    local sum68\n    local\
    \ sum69\n    local sum70\n    local sum71\n    local sum72\n    local sum73\n\
    \    local sum74\n    local sum75\n    local sum76\n    local sum77\n    local\
    \ sum78\n    local sum79\n    local sum80\n    local sum81\n    local sum82\n\
    \    local sum83\n    local sum84\n    local sum85\n    local sum86\n    local\
    \ sum87\n    local sum88\n    local sum89\n    local sum90\n    local sum91\n\
    \    local sum92\n    local sum93\n    local sum94\n    local sum95\n    local\
    \ sum96\n    local sum97\n    local sum98\n\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    local i\n  \
    \  for ((i=0; i<${#arr[@]}; i++)); do\n        ((sign*=arr[i]))\n        sum+=sign*i\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp6s6o9wv0.sh: line 15: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n  local arr=$1\n  local sum=0\n  local sign=1\n  local i\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    sum=$((sum + ${arr[i]} * sign))\n    sign=$((sign * -1))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpscxtrhy5.sh: line 15: sum + 1 2 2 -4 * sign: syntax error in expression
    (error token is "2 2 -4 * sign")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local sign=1\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        local x=${arr[i]}\n        local sign=${sign}\n        if\
    \ [[ ${x} -eq 0 ]]; then\n            sign=0\n        fi\n        sum=$(( sum\
    \ + sign * x ))\n        sign=${sign}\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6g5ll74k.sh: line 16: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    /tmp/tmp6g5ll74k.sh: line 19: 1 2 2 -4: syntax error in expression (error token
    is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n#\n# $1 is a space-separated list\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local sum=0\n    local sign=1\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        local val=${arr[i]}\n        (( val > 0 ))\
    \ && sign=1 && sum+=$(( val * sign ))\n        (( val < 0 )) && sign=-1 && sum+=$((\
    \ val * sign ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp24zzdh1y.sh: line 15: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")

    /tmp/tmp24zzdh1y.sh: line 16: ((: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")

    '
  stdout: ''
  timestamp: 1660033306

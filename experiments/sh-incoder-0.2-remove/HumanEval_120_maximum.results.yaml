language: sh
name: HumanEval_120_maximum
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxnum\n    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n\
    \    local maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n\
    \    local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local len\n\n    len=${#arr[@]}\n    if [\
    \ $len -gt $k ]\n    then\n        echo \"$k is too large\"\n        return 1\n\
    \    fi\n\n    max=$arr[0]\n    for (( i=1; i<$len; i++ ))\n    do\n        if\
    \ [ $arr[$i] -gt $max ]\n        then\n            max=$arr[$i]\n        fi\n\
    \    done\n\n    for (( j=1; j<$k; j++ ))\n    do\n        arr[$j]=$max\n    done\n\
    \n    arr[$k]=$max\n    echo ${arr[@]}\n}\n\ncandidate() {\n    maximum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\"\
    \ ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"\
    -3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpx2ltmkip.sh: line 32: [: -3[1]: integer expression expected

    /tmp/tmpx2ltmkip.sh: line 32: [: -3[2]: integer expression expected

    '
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n\
    \    local maxidx\n    local maxval\n    local maxidx2\n    local maxval2\n  \
    \  local maxidx3\n    local maxval3\n    local maxidx4\n    local maxval4\n  \
    \  local maxidx5\n    local maxval5\n    local maxidx6\n    local maxval6\n  \
    \  local maxidx7\n    local maxval7\n    local maxidx8\n    local maxval8\n  \
    \  local maxidx9\n    local maxval9\n    local maxidx10\n    local maxval10\n\
    \    local maxidx11\n    local maxval11\n    local maxidx12\n    local maxval12\n\
    \    local maxidx13\n    local maxval13\n    local maxidx14\n    local maxval14\n\
    \    local maxidx15\n    local maxval15\n    local maxidx16\n    local maxval16\n\
    \    local maxidx17\n    local maxval17\n    local maxidx18\n    local maxval18\n\
    \    local maxidx19\n    local maxval19\n    local maxidx20\n    local maxval20\n\
    \    local maxidx21\n    local maxval21\n    local maxidx22\n    local maxval22\n\
    \    local maxidx23\n    local maxval23\n    local maxidx24\n    local maxval24\n\
    \    local maxidx25\n    local maxval25\n    local maxidx26\n    local maxval26\n\
    \    local maxidx27\n    local maxval27\n    local maxidx28\n    local maxval28\n\
    \    local maxidx29\n    local maxval29\n    local maxidx30\n    local maxval30\n\
    \    local maxidx31\n    local maxval31\n    local maxidx32\n    local maxval32\n\
    \    local maxidx33\n    local maxval33\n    local maxidx34\n    local maxval34\n\
    \    local maxidx35\n    local maxval35\n    local maxidx36\n    local maxval36\n\
    \    local maxidx37\n    local maxval37\n    local maxidx38\n    local maxval38\n\
    \    local maxidx39\n    local maxval39\n    local maxidx40\n\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local len=${#arr[@]}\n\
    \    local max\n    local i\n    local j\n    local maxIndex\n    local maxVal\n\
    \    local maxIndexVal\n    local maxIndexVal2\n    local maxIndexVal3\n    local\
    \ maxIndexVal4\n    local maxIndexVal5\n    local maxIndexVal6\n    local maxIndexVal7\n\
    \    local maxIndexVal8\n    local maxIndexVal9\n    local maxIndexVal10\n   \
    \ local maxIndexVal11\n    local maxIndexVal12\n    local maxIndexVal13\n    local\
    \ maxIndexVal14\n    local maxIndexVal15\n    local maxIndexVal16\n    local maxIndexVal17\n\
    \    local maxIndexVal18\n    local maxIndexVal19\n    local maxIndexVal20\n \
    \   local maxIndexVal21\n    local maxIndexVal22\n    local maxIndexVal23\n  \
    \  local maxIndexVal24\n    local maxIndexVal25\n    local maxIndexVal26\n   \
    \ local maxIndexVal27\n    local maxIndexVal28\n    local maxIndexVal29\n    local\
    \ maxIndexVal30\n    local maxIndexVal31\n    local maxIndexVal32\n    local maxIndexVal33\n\
    \    local maxIndexVal34\n    local maxIndexVal35\n    local maxIndexVal36\n \
    \   local maxIndexVal37\n    local maxIndexVal38\n    local maxIndexVal39\n  \
    \  local maxIndexVal40\n    local maxIndexVal41\n    local maxIndexVal42\n   \
    \ local maxIndexVal43\n    local maxIndexVal44\n    local maxIndexVal45\n    local\
    \ maxIndexVal46\n    local maxIndexVal47\n    local maxIndexVal48\n    local maxIndexVal49\n\
    \    local maxIndexVal50\n    local maxIndexVal51\n    local maxIndexVal52\n \
    \   local maxIndexVal53\n    local maxIndexVal54\n    local maxIndexVal55\n  \
    \  local maxIndexVal56\n    local maxIndexVal57\n    local maxIndexVal58\n   \
    \ local maxIndexVal59\n    local maxIndexVal60\n    local maxIndexVal61\n    local\
    \ maxIndexVal62\n    local maxIndexVal63\n    local maxIndexVal64\n    local maxIndexVal65\n\
    \    local maxIndexVal66\n    local maxIndexVal67\n    \n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxnum\n    local maxnums\n    local maxnums_str\n    local maxnums_str1\n\
    \    local maxnums_str2\n    local maxnums_str3\n    local maxnums_str4\n    local\
    \ maxnums_str5\n    local maxnums_str6\n    local maxnums_str7\n    local maxnums_str8\n\
    \    local maxnums_str9\n    local maxnums_str10\n    local maxnums_str11\n  \
    \  local maxnums_str12\n    local maxnums_str13\n    local maxnums_str14\n   \
    \ local maxnums_str15\n    local maxnums_str16\n    local maxnums_str17\n    local\
    \ maxnums_str18\n    local maxnums_str19\n    local maxnums_str20\n    local maxnums_str21\n\
    \    local maxnums_str22\n    local maxnums_str23\n    local maxnums_str24\n \
    \   local maxnums_str25\n    local maxnums_str26\n    local maxnums_str27\n  \
    \  local maxnums_str28\n    local maxnums_str29\n    local maxnums_str30\n   \
    \ local maxnums_str31\n    local maxnums_str32\n    local maxnums_str33\n    local\
    \ maxnums_str34\n    local maxnums_str35\n    local maxnums_str36\n    local maxnums_str37\n\
    \    local maxnums_str38\n    local maxnums_str39\n    local maxnums_str40\n \
    \   local maxnums_str41\n    local maxnums_str42\n    local maxnums_str43\n  \
    \  local maxnums_str44\n    local maxnums_str45\n    local maxnums_str46\n   \
    \ local maxnums_str47\n    local maxnums_str48\n    local maxnums_str49\n    local\
    \ maxnums_str50\n    local maxnums_str51\n    local maxnums_str52\n    local maxnums_str53\n\
    \    local maxnums_str54\n    local maxnums_str55\n    local maxnums_str56\n \
    \   local maxnums_str57\n    local \n}\n\ncandidate() {\n    maximum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\"\
    \ ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"\
    -3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local tmp\n    local len\n\n    len=${#arr[@]}\n\
    \    if [ $len -gt $k ]\n    then\n        echo \"$len is not a positive integer\"\
    \n        return 1\n    fi\n\n    max=$arr[0]\n    for (( i=1; i<$len; i++ ))\n\
    \    do\n        if [ $arr[$i] -gt $max ]\n        then\n            max=${arr[$i]}\n\
    \        fi\n    done\n\n    arr=( $max )\n    len=${#arr[@]}\n    for (( i=1;\
    \ i<$k; i++ ))\n    do\n        tmp=${arr[$i]}\n        for (( j=$i+1; j<$len;\
    \ j++ ))\n        do\n            if [ $tmp -gt ${arr[j]} ]\n            then\n\
    \                arr[$i]=${arr[j]}\n                arr[$j]=$tmp\n           \
    \ fi\n        done\n    done\n\n    echo ${arr[@]}\n}\n\ncandidate() {\n    maximum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"\
    -4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate\
    \ \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1\
    \ 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"\
    4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13\
    \ -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n\
    \    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\"\
    \ \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n\
    \    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpalnr1x3_.sh: line 33: [: -3[1]: integer expression expected

    /tmp/tmpalnr1x3_.sh: line 33: [: -3[2]: integer expression expected

    '
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxnum\n    local maxnums\n    local maxnums_str\n    local maxnums_str1\n\
    \    local maxnums_str2\n    local maxnums_str3\n    local maxnums_str4\n    local\
    \ maxnums_str5\n    local maxnums_str6\n    local maxnums_str7\n    local maxnums_str8\n\
    \    local maxnums_str9\n    local maxnums_str10\n    local maxnums_str11\n  \
    \  local maxnums_str12\n    local maxnums_str13\n    local maxnums_str14\n   \
    \ local maxnums_str15\n    local maxnums_str16\n    local maxnums_str17\n    local\
    \ maxnums_str18\n    local maxnums_str19\n    local maxnums_str20\n    local maxnums_str21\n\
    \    local maxnums_str22\n    local maxnums_str23\n    local maxnums_str24\n \
    \   local maxnums_str25\n    local maxnums_str26\n    local maxnums_str27\n  \
    \  local maxnums_str28\n    local maxnums_str29\n    local maxnums_str30\n   \
    \ local maxnums_str31\n    local maxnums_str32\n    local maxnums_str33\n    local\
    \ maxnums_str34\n    local maxnums_str35\n    local maxnums_str36\n    local maxnums_str37\n\
    \    local maxnums_str38\n    local maxnums_str39\n    local maxnums_str40\n \
    \   local maxnums_str41\n    local maxnums_str42\n    local maxnums_str43\n  \
    \  local maxnums_str44\n    local maxnums_str45\n    local maxnums_str46\n   \
    \ local maxnums_str47\n    local maxnums_str48\n    local maxnums_str49\n    local\
    \ maxnums_str50\n    local maxnums_str51\n    local maxnums_str52\n    local maxnums_str53\n\
    \    local maxnums_str54\n    local maxnums_str55\n    local maxnums_str56\n \
    \   local maxnums_str57\n    local \n}\n\ncandidate() {\n    maximum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\"\
    \ ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"\
    -3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max_arr=()\n\
    \    local max_num=-1\n    local max_idx=0\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local max_num\n    local i\n    local j\n    local\
    \ len\n    local max_idx\n    local \n}\n\ncandidate() {\n    maximum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\"\
    \ ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"\
    -3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n    local\
    \ maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n \
    \   local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n    local max\n}\n\n\
    candidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxidx\n    local maxval\n    local maxpos\n    local maxpos2\n    local\
    \ maxpos3\n    local maxpos4\n    local maxpos5\n    local maxpos6\n    local\
    \ maxpos7\n    local maxpos8\n    local maxpos9\n    local maxpos10\n    local\
    \ maxpos11\n    local maxpos12\n    local maxpos13\n    local maxpos14\n    local\
    \ maxpos15\n    local maxpos16\n    local maxpos17\n    local maxpos18\n    local\
    \ maxpos19\n    local maxpos20\n    local maxpos21\n    local maxpos22\n    local\
    \ maxpos23\n    local maxpos24\n    local maxpos25\n    local maxpos26\n    local\
    \ maxpos27\n    local maxpos28\n    local maxpos29\n    local maxpos30\n    local\
    \ maxpos31\n    local maxpos32\n    local maxpos33\n    local maxpos34\n    local\
    \ maxpos35\n    local maxpos36\n    local maxpos37\n    local maxpos38\n    local\
    \ maxpos39\n    local maxpos40\n    local maxpos41\n    local maxpos42\n    local\
    \ maxpos43\n    local maxpos44\n    local maxpos45\n    local maxpos46\n    local\
    \ maxpos47\n    local maxpos48\n    local maxpos49\n    local maxpos50\n    local\
    \ maxpos51\n    local maxpos52\n    local maxpos53\n    local maxpos54\n    local\
    \ maxpos55\n    local maxpos56\n    local maxpos57\n    local maxpos58\n    local\
    \ maxpos59\n    local maxpos60\n    local maxpos61\n    local maxpos62\n    local\
    \ maxpos63\n    local maxpos64\n    local maxpos65\n    local maxpos66\n    local\
    \ maxpos67\n    local maxpos68\n    local maxpos69\n    local maxpos70\n    local\
    \ maxpos71\n    local maxpos72\n    local maxpos73\n    local maxpos74\n    local\
    \ maxpos75\n    local maxpos76\n    local maxpos77\n    local maxpos\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local temp\n    local len\n    local maxlen\n \
    \   local maxnum\n    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n\
    \    local maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n\
    \    local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxidx\n\
    \    local maxval\n    local maxidx2\n    local maxval2\n    local maxidx3\n \
    \   local maxval3\n    local maxidx4\n    local maxval4\n    local maxidx5\n \
    \   local maxval5\n    local maxidx6\n    local maxval6\n    local maxidx7\n \
    \   local maxval7\n    local maxidx8\n    local maxval8\n    local maxidx9\n \
    \   local maxval9\n    local maxidx10\n    local maxval10\n    local maxidx11\n\
    \    local maxval11\n    local maxidx12\n    local maxval12\n    local maxidx13\n\
    \    local maxval13\n    local maxidx14\n    local maxval14\n    local maxidx15\n\
    \    local maxval15\n    local maxidx16\n    local maxval16\n    local maxidx17\n\
    \    local maxval17\n    local maxidx18\n    local maxval18\n    local maxidx19\n\
    \    local maxval19\n    local maxidx20\n    local maxval20\n    local maxidx21\n\
    \    local maxval21\n    local maxidx22\n    local maxval22\n    local maxidx23\n\
    \    local maxval23\n    local maxidx24\n    local maxval24\n    local maxidx25\n\
    \    local maxval25\n    local maxidx26\n    local maxval26\n    local maxidx27\n\
    \    local maxval27\n    local maxidx28\n    local maxval28\n    local maxidx29\n\
    \    local maxval29\n    local maxidx30\n    local maxval30\n    local maxidx31\n\
    \    local maxval31\n    local maxidx32\n    local maxval32\n    local maxidx33\n\
    \    local maxval33\n    local maxidx34\n    local maxval34\n    local maxidx35\n\
    \    local maxval35\n    local maxidx36\n    local maxval36\n    local maxidx37\n\
    \    local maxval37\n    local maxidx38\n    local maxval38\n    local maxidx39\n\
    \    local maxval39\n    local maxidx40\n    local maxval40\n    \n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxnum\n    local maxnums\n    local maxnums_str\n    local maxnums_strs\n\
    \    local maxnums_strs_str\n    local maxnums_strs_strs\n    local maxnums_strs_strs_str\n\
    \    local maxnums_strs_strs_strs\n    local maxnums_strs_strs_strs_str\n    local\
    \ maxnums_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_str\n   \
    \ local maxnums_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n    local\
    \ maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_str\n}\n\ncandidate() {\n   \
    \ maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"\
    3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n   \
    \ [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"\
    123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20\
    \ 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\"\
    \ \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"\
    2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10\
    \ 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ len=${#arr[@]}\n    local max=0\n    local i\n    local j\n    local tmp\n \
    \   \n    for ((i=0; i<len; i++)); do\n        tmp=${arr[i]}\n        for ((j=i+1;\
    \ j<len; j++)); do\n            if (( ${arr[j]} > tmp )); then\n             \
    \   tmp=${arr[j]}\n            fi\n        done\n        if (( ${max} < tmp ));\
    \ then\n            max=tmp\n        fi\n    done\n    \n    echo ${max}\n}\n\n\
    candidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local len=${#arr[@]}\n\
    \    local max\n    local i\n    local j\n    local tmp\n    local maxlen\n  \
    \  local maxidx\n    local maxval\n    local maxidx2\n    local maxval2\n    local\
    \ maxidx3\n    local maxval3\n    local maxidx4\n    local maxval4\n    local\
    \ maxidx5\n    local maxval5\n    local maxidx6\n    local maxval6\n    local\
    \ maxidx7\n    local maxval7\n    local maxidx8\n    local maxval8\n    local\
    \ maxidx9\n    local maxval9\n    local maxidx10\n    local maxval10\n    local\
    \ maxidx11\n    local maxval11\n    local maxidx12\n    local maxval12\n    local\
    \ maxidx13\n    local maxval13\n    local maxidx14\n    local maxval14\n    local\
    \ maxidx15\n    local maxval15\n    local maxidx16\n    local maxval16\n    local\
    \ maxidx17\n    local maxval17\n    local maxidx18\n    local maxval18\n    local\
    \ maxidx19\n    local maxval19\n    local maxidx20\n    local maxval20\n    local\
    \ maxidx21\n    local maxval21\n    local maxidx22\n    local maxval22\n    local\
    \ maxidx23\n    local maxval23\n    local maxidx24\n    local maxval24\n    local\
    \ maxidx25\n    local maxval25\n    local maxidx26\n    local maxval26\n    local\
    \ maxidx27\n    local maxval27\n    local maxidx28\n    local maxval28\n    local\
    \ maxidx29\n    local maxval29\n    local maxidx30\n    local maxval30\n    local\
    \ maxidx31\n    local maxval31\n    local maxidx32\n    local maxval32\n    local\
    \ maxidx33\n    local maxval33\n    local maxidx34\n    local maxval34\n    local\
    \ maxidx35\n    local maxval35\n    local maxidx36\n    local maxval36\n    local\
    \ maxidx37\n    local maxval37\n    local maxidx38\n    local maxval38\n    local\
    \ maxidx39\n    local maxval39\n    local maxidx\n}\n\ncandidate() {\n    maximum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"\
    -4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate\
    \ \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1\
    \ 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"\
    4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13\
    \ -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n\
    \    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\"\
    \ \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n\
    \    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local len=${#arr[@]}\n\
    \    local max\n    local i\n    local j\n    local tmp\n    local maxIndex\n\
    \    local maxVal\n    local maxIndex2\n    local maxVal2\n    local maxIndex3\n\
    \    local maxVal3\n    local maxIndex4\n    local maxVal4\n    local maxIndex5\n\
    \    local maxVal5\n    local maxIndex6\n    local maxVal6\n    local maxIndex7\n\
    \    local maxVal7\n    local maxIndex8\n    local maxVal8\n    local maxIndex9\n\
    \    local maxVal9\n    local maxIndex10\n    local maxVal10\n    local maxIndex11\n\
    \    local maxVal11\n    local maxIndex12\n    local maxVal12\n    local maxIndex13\n\
    \    local maxVal13\n    local maxIndex14\n    local maxVal14\n    local maxIndex15\n\
    \    local maxVal15\n    local maxIndex16\n    local maxVal16\n    local maxIndex17\n\
    \    local maxVal17\n    local maxIndex18\n    local maxVal18\n    local maxIndex19\n\
    \    local maxVal19\n    local maxIndex20\n    local maxVal20\n    local maxIndex21\n\
    \    local maxVal21\n    local maxIndex22\n    local maxVal22\n    local maxIndex23\n\
    \    local maxVal23\n    local maxIndex24\n    local maxVal24\n    local maxIndex25\n\
    \    local maxVal25\n    local maxIndex26\n    local maxVal26\n    local maxIndex27\n\
    \    local maxVal27\n    local maxIndex28\n    local maxVal28\n    local maxIndex29\n\
    \    local maxVal29\n    local maxIndex30\n    local maxVal30\n    local maxIndex31\n\
    \    local maxVal31\n    local maxIndex32\n    local maxVal32\n    local maxIndex33\n\
    \    local maxVal33\n    local maxIndex34\n    local maxVal34\n    local maxIndex35\n\
    \    local maxVal35\n    local maxIndex36\n    local maxVal36\n    local maxIndex37\n\
    \    local maxVal37\n    local maxIndex38\n    local maxVal38\n    local maxIndex39\n\
    \    local maxVal39\n    local maxIndex40\n    local max\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max_arr\n\
    \    local max_k\n    local i\n    local j\n    local max_i\n    local max_j\n\
    \    local max_val\n    local max_val_i\n    local max_val_j\n    local max_val_k\n\
    \    local max_val_k_index\n    local max_val_k_i\n    local max_val_k_j\n   \
    \ local max_val_k_k\n    local max_val_k_k_i\n    local max_val_k_k_j\n    local\
    \ max_val_k_k_k\n    local max_val_k_k_k_i\n    local max_val_k_k_k_j\n    local\
    \ max_val_k_k_k_k\n    local max_val_k_k_k_k_i\n    local max_val_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k\n    local max_val_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_i\n    local max_val_k_k_k_\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxVal\n    local maxIndex2\n\
    \    local maxVal2\n    local maxVal3\n    local maxVal4\n    local maxVal5\n\
    \    local maxVal6\n    local maxVal7\n    local maxVal8\n    local maxVal9\n\
    \    local maxVal10\n    local maxVal11\n    local maxVal12\n    local maxVal13\n\
    \    local maxVal14\n    local maxVal15\n    local maxVal16\n    local maxVal17\n\
    \    local maxVal18\n    local maxVal19\n    local maxVal20\n    local maxVal21\n\
    \    local maxVal22\n    local maxVal23\n    local maxVal24\n    local maxVal25\n\
    \    local maxVal26\n    local maxVal27\n    local maxVal28\n    local maxVal29\n\
    \    local maxVal30\n    local maxVal31\n    local maxVal32\n    local maxVal33\n\
    \    local maxVal34\n    local maxVal35\n    local maxVal36\n    local maxVal37\n\
    \    local maxVal38\n    local maxVal39\n    local maxVal40\n    local maxVal41\n\
    \    local maxVal42\n    local maxVal43\n    local maxVal44\n    local maxVal45\n\
    \    local maxVal46\n    local maxVal47\n    local maxVal48\n    local maxVal49\n\
    \    local maxVal50\n    local maxVal51\n    local maxVal52\n    local maxVal53\n\
    \    local maxVal54\n    local maxVal55\n    local maxVal56\n    local maxVal57\n\
    \    local maxVal58\n    local maxVal59\n    local maxVal60\n    local maxVal61\n\
    \    local maxVal62\n    local maxVal63\n    local maxVal64\n    local maxVal65\n\
    \    local maxVal66\n    local maxVal67\n    local maxVal68\n    local maxVal69\n\
    \    local maxVal70\n    local maxVal71\n    local maxVal72\n    local maxVal73\n\
    \    local maxVal74\n    local maxVal75\n    local maxVal76\n    local maxVal77\n\
    \    local maxVal78\n    local maxVal79\n    local maxVal\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local len\n    local maxlen\n    local maxidx\n\
    \    local maxval\n    local maxidx2\n    local maxval2\n    local maxidx3\n \
    \   local maxval3\n    local maxidx4\n    local maxval4\n    local maxidx5\n \
    \   local maxval5\n    local maxidx6\n    local maxval6\n    local maxidx7\n \
    \   local maxval7\n    local maxidx8\n    local maxval8\n    local maxidx9\n \
    \   local maxval9\n    local maxidx10\n    local maxval10\n    local maxidx11\n\
    \    local maxval11\n    local maxidx12\n    local maxval12\n    local maxidx13\n\
    \    local maxval13\n    local maxidx14\n    local maxval14\n    local maxidx15\n\
    \    local maxval15\n    local maxidx16\n    local maxval16\n    local maxidx17\n\
    \    local maxval17\n    local maxidx18\n    local maxval18\n    local maxidx19\n\
    \    local maxval19\n    local maxidx20\n    local maxval20\n    local maxidx21\n\
    \    local maxval21\n    local maxidx22\n    local maxval22\n    local maxidx23\n\
    \    local maxval23\n    local maxidx24\n    local maxval24\n    local maxidx25\n\
    \    local maxval25\n    local maxidx26\n    local maxval26\n    local maxidx27\n\
    \    local maxval27\n    local maxidx28\n    local maxval28\n    local maxidx29\n\
    \    local maxval29\n    local maxidx30\n    local maxval30\n    local maxidx31\n\
    \    local maxval31\n    local maxidx32\n    local maxval32\n    local maxidx33\n\
    \    local maxval33\n    local maxidx34\n    local maxval34\n    local maxidx35\n\
    \    local maxval35\n    local maxidx36\n    local maxval36\n    local maxidx37\n\
    \    local maxval37\n    local maxidx38\n    local maxval38\n    local maxidx39\n\
    \    local maxval39\n    local maxidx40\n    local maxval\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxValue\n    local maxIndex2\n\
    \    local maxValue2\n    local maxIndex3\n    local maxValue3\n    local maxIndex4\n\
    \    local maxValue4\n    local maxIndex5\n    local maxValue5\n    local maxIndex6\n\
    \    local maxValue6\n    local maxIndex7\n    local maxValue7\n    local maxIndex8\n\
    \    local maxValue8\n    local maxIndex9\n    local maxValue9\n    local maxIndex10\n\
    \    local maxValue10\n    local maxIndex11\n    local maxValue11\n    local maxIndex12\n\
    \    local maxValue12\n    local maxIndex13\n    local maxValue13\n    local maxIndex14\n\
    \    local maxValue14\n    local maxIndex15\n    local maxValue15\n    local maxIndex16\n\
    \    local maxValue16\n    local maxIndex17\n    local maxValue17\n    local maxIndex18\n\
    \    local maxValue18\n    local maxIndex19\n    local maxValue19\n    local maxIndex20\n\
    \    local maxValue20\n    local maxIndex21\n    local maxValue21\n    local maxIndex22\n\
    \    local maxValue22\n    local maxIndex23\n    local maxValue23\n    local maxIndex24\n\
    \    local maxValue24\n    local maxIndex25\n    local maxValue25\n    local maxIndex26\n\
    \    local maxValue26\n    local maxIndex27\n    local maxValue27\n    local maxIndex28\n\
    \    local maxValue28\n    local maxIndex29\n    local maxValue29\n    local maxIndex30\n\
    \    local maxValue30\n    local maxIndex31\n    local maxValue31\n    local maxIndex32\n\
    \    local maxValue32\n    local maxIndex33\n    local maxValue33\n    local maxIndex34\n\
    \    local maxValue34\n    local maxIndex35\n    local maxValue35\n    local maxIndex36\n\
    \    local maxValue36\n    local maxIndex37\n    local maxValue37\n    local maxIndex38\n\
    \    local maxValue38\n    local maxIndex39\n    local maxValue39\n    local maxIndex40\n\
    \    local maxValue40\n    local maxIndex41\n    local maxValue\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_strs\n    local maxnums_strs_len\n\
    \    local maxnums_strs_lens\n    local maxnums_strs_lens_len\n    local maxnums_strs_lens_lens\n\
    \    local maxnums_strs_lens_lens_len\n    local maxnums_strs_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens\n    local\
    \ maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_str\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 2
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr k\n    arr=$1\n    k=$2\n    local\
    \ i max\n    local tmp\n    max=-1\n    for ((i = 0; i < ${#arr[@]}; i++)); do\n\
    \        if (( ${arr[i]} > max )); then\n            max=${arr[i]}\n        fi\n\
    \    done\n    for ((i = 0; i < ${#arr[@]}; i++)); do\n        if (( ${arr[i]}\
    \ > max )); then\n            tmp=${arr[i]}\n            arr[i]=${arr[i+1]}\n\
    \            arr[i+1]=${tmp}\n        fi\n    done\n    for ((i = 0; i < ${#arr[@]};\
    \ i++)); do\n        if (( ${arr[i]} > max )); then\n            tmp=${arr[i]}\n\
    \            arr[i]=${arr[i+1]}\n            arr[i+1]=${tmp}\n        fi\n   \
    \ done\n    for ((i = 0; i < ${#arr[@]}; i++)); do\n        if (( ${arr[i]} >\
    \ max )); then\n            tmp=${arr[i]}\n            arr[i]=${arr[i+1]}\n  \
    \          arr[i+1]=${tmp}\n        fi\n    done\n    for ((i = 0; i < ${#arr[@]};\
    \ i++)); do\n        if (( ${arr[i]} > max )); then\n            tmp=${arr[i]}\n\
    \            arr[i]=${arr[i+1]}\n            arr[i+1]=${tmp}\n        fi\n   \
    \ done\n    for ((i = 0; i < ${#arr[@]}; i++)); do\n        if (( ${arr[i]} >\
    \ max )); then\n            tmp=${arr[i]}\n            arr[i]=${arr[i+1]}\n  \
    \          arr[i+1]=${tmp}\n        fi\n    done\n    for ((i = 0; i < ${#arr[@]};\
    \ i++)); do\n        if (( ${arr[i]} > max )); then\n            tmp=${arr[i]}\n\
    \            arr[i]=${arr[i+1]}\n            arr[i+1]=${tmp}\n        fi\n   \
    \ done\n    for ((i = 0; i < ${#arr[@]}; i++)); do\n        if (( ${arr[i]} >\
    \ max )); then\n            tmp=${arr[i]}\n            arr[i]=${arr[i+1]}\n  \
    \          arr[i+1]=${tmp}\n        fi\n    done\n    for ((i = 0; i < ${#arr[@]};\
    \ i++)); do\n        if (( ${arr[i]} > max )); then\n            tmp=${arr[i]}\n\
    \            arr[i]=${arr[i+1]}\n            arr[i+1]=${tmp}\n        fi\n   \
    \ done\n    for ((i = 0; i < ${#arr[@]}; i++)); do\n        if (( ${arr[i]} >\
    \ max )\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"\
    4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3gg39ypa.sh: line 106: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local len\n\n    len=${#arr[@]}\n    if [\
    \ $len -gt $k ]\n    then\n        echo \"$k numbers are too large\"\n       \
    \ return\n    fi\n\n    max=$(echo $(( ${arr[$k]} + 1 )) | bc)\n    arr[$k]=$max\n\
    \    i=$(( $k + 1 ))\n    j=$(( $len - 1 ))\n    while [ $i -le $j ]\n    do\n\
    \        if [ $arr[$i] -gt $arr[$j] ]\n        then\n            arr[$i]=$arr[$j]\n\
    \            arr[$j]=$max\n            i=$(( $i + 1 ))\n            j=$(( $j -\
    \ 1 ))\n        else\n            arr[$i]=$max\n            i=$(( $i + 1 ))\n\
    \        fi\n    done\n    arr[$i]=$max\n}\n\ncandidate() {\n    maximum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\"\
    \ ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"\
    -3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n    local\
    \ maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n \
    \   local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n    local max\n}\n\n\
    candidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n\
    \    local maxidx\n    local maxval\n    local maxidx2\n    local maxval2\n  \
    \  local maxidx3\n    local maxval3\n    local maxidx4\n    local maxval4\n  \
    \  local maxidx5\n    local maxval5\n    local maxidx6\n    local maxval6\n  \
    \  local maxidx7\n    local maxval7\n    local maxidx8\n    local maxval8\n  \
    \  local maxidx9\n    local maxval9\n    local maxidx10\n    local maxval10\n\
    \    local maxidx11\n    local maxval11\n    local maxidx12\n    local maxval12\n\
    \    local maxidx13\n    local maxval13\n    local maxidx14\n    local maxval14\n\
    \    local maxidx15\n    local maxval15\n    local maxidx16\n    local maxval16\n\
    \    local maxidx17\n    local maxval17\n    local maxidx18\n    local maxval18\n\
    \    local maxidx19\n    local maxval19\n    local maxidx20\n    local maxval20\n\
    \    local maxidx21\n    local maxval21\n    local maxidx22\n    local maxval22\n\
    \    local maxidx23\n    local maxval23\n    local maxidx24\n    local maxval24\n\
    \    local maxidx25\n    local maxval25\n    local maxidx26\n    local maxval26\n\
    \    local maxidx27\n    local maxval27\n    local maxidx28\n    local maxval28\n\
    \    local maxidx29\n    local maxval29\n    local maxidx30\n    local maxval30\n\
    \    local maxidx31\n    local maxval31\n    local maxidx32\n    local maxval32\n\
    \    local maxidx33\n    local maxval33\n    local maxidx34\n    local maxval34\n\
    \    local maxidx35\n    local maxval35\n    local maxidx36\n    local maxval36\n\
    \    local maxidx37\n    local maxval37\n    local maxidx38\n    local maxval38\n\
    \    local maxidx39\n    local maxval39\n    local maxidx40\n\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_strs\n    local maxnums_strs_str\n\
    \    local maxnums_strs_strs\n    local maxnums_strs_strs_str\n    local maxnums_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n    local\
    \ maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ len=${#arr[@]}\n    local max\n    local i\n    local j\n    local tmp\n   \
    \ local maxIndex\n    local maxVal\n    local maxIndex2\n    local maxVal2\n \
    \   local maxIndex3\n    local maxVal3\n    local maxIndex4\n    local maxVal4\n\
    \    local maxIndex5\n    local maxVal5\n    local maxIndex6\n    local maxVal6\n\
    \    local maxIndex7\n    local maxVal7\n    local maxIndex8\n    local maxVal8\n\
    \    local maxIndex9\n    local maxVal9\n    local maxIndex10\n    local maxVal10\n\
    \    local maxIndex11\n    local maxVal11\n    local maxIndex12\n    local maxVal12\n\
    \    local maxIndex13\n    local maxVal13\n    local maxIndex14\n    local maxVal14\n\
    \    local maxIndex15\n    local maxVal15\n    local maxIndex16\n    local maxVal16\n\
    \    local maxIndex17\n    local maxVal17\n    local maxIndex18\n    local maxVal18\n\
    \    local maxIndex19\n    local maxVal19\n    local maxIndex20\n    local maxVal20\n\
    \    local maxIndex21\n    local maxVal21\n    local maxIndex22\n    local maxVal22\n\
    \    local maxIndex23\n    local maxVal23\n    local maxIndex24\n    local maxVal24\n\
    \    local maxIndex25\n    local maxVal25\n    local maxIndex26\n    local maxVal26\n\
    \    local maxIndex27\n    local maxVal27\n    local maxIndex28\n    local maxVal28\n\
    \    local maxIndex29\n    local maxVal29\n    local maxIndex30\n    local maxVal30\n\
    \    local maxIndex31\n    local maxVal31\n    local maxIndex32\n    local maxVal32\n\
    \    local maxIndex33\n    local maxVal33\n    local maxIndex34\n    local maxVal34\n\
    \    local maxIndex35\n    local maxVal35\n    local maxIndex36\n    local maxVal36\n\
    \    local maxIndex37\n    local maxVal37\n    local maxIndex38\n    local maxVal38\n\
    \    local maxIndex39\n    local maxVal39\n    local maxIndex40\n\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxidx\n    local maxval\n    local maxidx2\n    local maxval2\n    local\
    \ maxidx3\n    local maxval3\n    local maxidx4\n    local maxval4\n    local\
    \ maxidx5\n    local maxval5\n    local maxidx6\n    local maxval6\n    local\
    \ maxidx7\n    local maxval7\n    local maxidx8\n    local maxval8\n    local\
    \ maxidx9\n    local maxval9\n    local maxidx10\n    local maxval10\n    local\
    \ maxidx11\n    local maxval11\n    local maxidx12\n    local maxval12\n    local\
    \ maxidx13\n    local maxval13\n    local maxidx14\n    local maxval14\n    local\
    \ maxidx15\n    local maxval15\n    local maxidx16\n    local maxval16\n    local\
    \ maxidx17\n    local maxval17\n    local maxidx18\n    local maxval18\n    local\
    \ maxidx19\n    local maxval19\n    local maxidx20\n    local maxval20\n    local\
    \ maxidx21\n    local maxval21\n    local maxidx22\n    local maxval22\n    local\
    \ maxidx23\n    local maxval23\n    local maxidx24\n    local maxval24\n    local\
    \ maxidx25\n    local maxval25\n    local maxidx26\n    local maxval26\n    local\
    \ maxidx27\n    local maxval27\n    local maxidx28\n    local maxval28\n    local\
    \ maxidx29\n    local maxval29\n    local maxidx30\n    local maxval30\n    local\
    \ maxidx31\n    local maxval31\n    local maxidx32\n    local maxval32\n    local\
    \ maxidx33\n    local maxval33\n    local maxidx34\n    local maxval34\n    local\
    \ maxidx35\n    local maxval35\n    local maxidx36\n    local maxval36\n    local\
    \ maxidx37\n    local maxval37\n    local maxidx38\n    local maxval38\n    local\
    \ maxidx39\n    local maxval39\n    local maxidx40\n    local max\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxVal\n\
    \    local maxIndexVal\n    local maxIndexValIndex\n    local maxIndexValIndexIndex2\n\
    \    local maxIndexValIndex3\n    local maxIndexValIndex4\n    local maxIndexValIndex5\n\
    \    local maxIndexValIndex6\n    local maxIndexValIndex7\n    local maxIndexValIndex8\n\
    \    local maxIndexValIndex9\n    local maxIndexValIndex10\n    local maxIndexValIndex11\n\
    \    local maxIndexValIndex12\n    local maxIndexValIndex13\n    local maxIndexValIndex14\n\
    \    local maxIndexValIndex15\n    local maxIndexValIndex16\n    local maxIndexValIndex17\n\
    \    local maxIndexValIndex18\n    local maxIndexValIndex19\n    local maxIndexValIndex20\n\
    \    local maxIndexValIndex21\n    local maxIndexValIndex22\n    local maxIndexValIndex23\n\
    \    local maxIndexValIndex24\n    local maxIndexValIndex25\n    local maxIndexValIndex26\n\
    \    local maxIndexValIndex27\n    local maxIndexValIndex28\n    local maxIndexValIndex29\n\
    \    local maxIndexValIndex30\n    local maxIndexValIndex31\n    local maxIndexValIndex32\n\
    \    local maxIndexValIndex33\n    local maxIndexValIndex34\n    local maxIndexValIndex35\n\
    \    local maxIndexValIndex36\n    local maxIndexValIndex37\n    local maxIndexValIndex38\n\
    \    local maxIndexValIndex39\n    local maxIndexValIndex40\n    local maxIndexValIndex41\n\
    \    local maxIndexValIndex42\n    local maxIndexValIndex43\n    local maxIndexValIndex44\n\
    \    local maxIndexValIndex45\n    local maxIndexValIndex46\n    local maxIndexValIndex47\n\
    \    local maxIndexValIndex48\n    local maxIndexValIndex49\n    local maxIndexValIndex50\n\
    \    local maxIndexValIndex51\n    local maxIndexValIndex52\n    local maxIndexValIndex53\n\
    \    local maxIndexValIndex54\n    local maxIndexValIndex55\n    local maxIndexValIndex56\n\
    \    local maxIndexValIndex57\n    local maxIndexValIndex58\n    local maxIndex\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ output\n    local i\n    local j\n    local max\n    local maxIndex\n    local\
    \ maxValue\n    local maxIndexValue\n    local maxIndexValueIndex\n    local maxIndexValueIndex2\n\
    \    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n\
    \    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n\
    \    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n\
    \    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n\
    \    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n\
    \    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n\
    \    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n\
    \    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n\
    \    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n\
    \    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n\
    \    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n\
    \    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n\
    \    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n\
    \    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n\
    \    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n\
    \    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n\
    \    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n\
    \    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n\
    \    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n    local \n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=(\"$@\")\n    local k=\"$2\"\n\
    \    local result=()\n    local i\n    local max\n    local j\n    local tmp\n\
    \    local len\n    local maxlen\n    local maxidx\n    local maxval\n    local\
    \ maxidx2\n    local maxval2\n    local maxidx3\n    local maxval3\n    local\
    \ maxidx4\n    local maxval4\n    local maxidx5\n    local maxval5\n    local\
    \ maxidx6\n    local maxval6\n    local maxidx7\n    local maxval7\n    local\
    \ maxidx8\n    local maxval8\n    local maxidx9\n    local maxval9\n    local\
    \ maxidx10\n    local maxval10\n    local maxidx11\n    local maxval11\n    local\
    \ maxidx12\n    local maxval12\n    local maxidx13\n    local maxval13\n    local\
    \ maxidx14\n    local maxval14\n    local maxidx15\n    local maxval15\n    local\
    \ maxidx16\n    local maxval16\n    local maxidx17\n    local maxval17\n    local\
    \ maxidx18\n    local maxval18\n    local maxidx19\n    local maxval19\n    local\
    \ maxidx20\n    local maxval20\n    local maxidx21\n    local maxval21\n    local\
    \ maxidx22\n    local maxval22\n    local maxidx23\n    local maxval23\n    local\
    \ maxidx24\n    local maxval24\n    local maxidx25\n    local maxval25\n    local\
    \ maxidx26\n    local maxval26\n    local maxidx27\n    local maxval27\n    local\
    \ maxidx28\n    local maxval28\n    local maxidx29\n    local maxval29\n    local\
    \ maxidx30\n    local maxval30\n    local maxidx31\n    local maxval31\n    local\
    \ maxidx32\n    local maxval32\n    local maxidx33\n    local maxval33\n    local\
    \ maxidx34\n    local maxval34\n    local maxidx35\n    local maxval35\n    local\
    \ maxidx36\n    local maxval36\n    local maxidx37\n    local maxval37\n    local\
    \ maxidx38\n    local maxval38\n    local maxidx39\n    local maxval39\n\n}\n\n\
    candidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxi\n    local maxj\n    local maxv\n    local maxk\n    local maxlenk\n\
    \    local maxlenktmp\n    local maxlenktmp2\n    local maxlenktmp3\n    local\
    \ maxlenktmp4\n    local maxlenktmp5\n    local maxlenktmp6\n    local maxlenktmp7\n\
    \    local maxlenktmp8\n    local maxlenktmp9\n    local maxlenktmp10\n    local\
    \ maxlenktmp11\n    local maxlenktmp12\n    local maxlenktmp13\n    local maxlenktmp14\n\
    \    local maxlenktmp15\n    local maxlenktmp16\n    local maxlenktmp17\n    local\
    \ maxlenktmp18\n    local maxlenktmp19\n    local maxlenktmp20\n    local maxlenktmp21\n\
    \    local maxlenktmp22\n    local maxlenktmp23\n    local maxlenktmp24\n    local\
    \ maxlenktmp25\n    local maxlenktmp26\n    local maxlenktmp27\n    local maxlenktmp28\n\
    \    local maxlenktmp29\n    local maxlenktmp30\n    local maxlenktmp31\n    local\
    \ maxlenktmp32\n    local maxlenktmp33\n    local maxlenktmp34\n    local maxlenktmp35\n\
    \    local maxlenktmp36\n    local maxlenktmp37\n    local maxlenktmp38\n    local\
    \ maxlenktmp39\n    local maxlenktmp40\n    local maxlenktmp41\n    local maxlenktmp42\n\
    \    local maxlenktmp43\n    local maxlenktmp44\n    local maxlenktmp45\n    local\
    \ maxlenktmp46\n    local maxlenktmp47\n    local maxlenktmp48\n    local maxlenktmp49\n\
    \    local maxlenktmp50\n    local maxlenktmp51\n    local maxlenktmp52\n    local\
    \ maxlenktmp53\n    local maxlenktmp54\n    local maxlenktmp55\n    local maxlenktmp56\n\
    \    local \n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"\
    4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local len\n\n    len=${#arr[@]}\n    if [\
    \ $len -gt $k ]\n    then\n        echo \"$len is not a positive integer <= $k\"\
    \n        return 1\n    fi\n\n    max=-1\n    for ((i=0; i<$k; i++)); do\n   \
    \     if [[ ${arr[$i]} -gt $max ]]; then\n            max=${arr[$i]}\n       \
    \ fi\n    done\n\n    for ((j=0; j<$k; j++)); do\n        if [[ ${arr[$j]} -eq\
    \ $max ]]; then\n            arr[$j]=$max\n        fi\n    done\n\n    arr=( \"\
    ${arr[@]}\" )\n    echo \"${arr[@]}\"\n}\n\ncandidate() {\n    maximum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\"\
    \ ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"\
    -3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxVal\n\
    \    local maxIndexVal\n    local maxIndexValIndex\n    local maxIndexValIndexIndex2\n\
    \    local maxIndexValIndex3\n    local maxIndexValIndex4\n    local maxIndexValIndex5\n\
    \    local maxIndexValIndex6\n    local maxIndexValIndex7\n    local maxIndexValIndex8\n\
    \    local maxIndexValIndex9\n    local maxIndexValIndex10\n    local maxIndexValIndex11\n\
    \    local maxIndexValIndex12\n    local maxIndexValIndex13\n    local maxIndexValIndex14\n\
    \    local maxIndexValIndex15\n    local maxIndexValIndex16\n    local maxIndexValIndex17\n\
    \    local maxIndexValIndex18\n    local maxIndexValIndex19\n    local maxIndexValIndex20\n\
    \    local maxIndexValIndex21\n    local maxIndexValIndex22\n    local maxIndexValIndex23\n\
    \    local maxIndexValIndex24\n    local maxIndexValIndex25\n    local maxIndexValIndex26\n\
    \    local maxIndexValIndex27\n    local maxIndexValIndex28\n    local maxIndexValIndex29\n\
    \    local maxIndexValIndex30\n    local maxIndexValIndex31\n    local maxIndexValIndex32\n\
    \    local maxIndexValIndex33\n    local maxIndexValIndex34\n    local maxIndexValIndex35\n\
    \    local maxIndexValIndex36\n    local maxIndexValIndex37\n    local maxIndexValIndex38\n\
    \    local maxIndexValIndex39\n    local maxIndexValIndex40\n    local maxIndexValIndex41\n\
    \    local maxIndexValIndex42\n    local maxIndexValIndex43\n    local maxIndexValIndex44\n\
    \    local maxIndexValIndex45\n    local maxIndexValIndex46\n    local maxIndexValIndex47\n\
    \    local maxIndexValIndex48\n    local maxIndexValIndex49\n    local maxIndexValIndex50\n\
    \    local maxIndexValIndex51\n    local maxIndexValIndex52\n    local maxIndexValIndex53\n\
    \    local maxIndexValIndex54\n    local maxIndexValIndex55\n    local maxIndexValIndex56\n\
    \    local maxIndexValIndex57\n    local maxIndexValIndex58\n    local maxIndex\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxVal\n\
    \    local maxIndex2\n    local maxVal2\n    local maxIndex3\n    local maxVal3\n\
    \    local maxIndex4\n    local maxVal4\n    local maxIndex5\n    local maxVal5\n\
    \    local maxIndex6\n    local maxVal6\n    local maxIndex7\n    local maxVal7\n\
    \    local maxIndex8\n    local maxVal8\n    local maxIndex9\n    local maxVal9\n\
    \    local maxIndex10\n    local maxVal10\n    local maxIndex11\n    local maxVal11\n\
    \    local maxIndex12\n    local maxVal12\n    local maxIndex13\n    local maxVal13\n\
    \    local maxIndex14\n    local maxVal14\n    local maxIndex15\n    local maxVal15\n\
    \    local maxIndex16\n    local maxVal16\n    local maxIndex17\n    local maxVal17\n\
    \    local maxIndex18\n    local maxVal18\n    local maxIndex19\n    local maxVal19\n\
    \    local maxIndex20\n    local maxVal20\n    local maxIndex21\n    local maxVal21\n\
    \    local maxIndex22\n    local maxVal22\n    local maxIndex23\n    local maxVal23\n\
    \    local maxIndex24\n    local maxVal24\n    local maxIndex25\n    local maxVal25\n\
    \    local maxIndex26\n    local maxVal26\n    local maxIndex27\n    local maxVal27\n\
    \    local maxIndex28\n    local maxVal28\n    local maxIndex29\n    local maxVal29\n\
    \    local maxIndex30\n    local maxVal30\n    local maxIndex31\n    local maxVal31\n\
    \    local maxIndex32\n    local maxVal32\n    local maxIndex33\n    local maxVal33\n\
    \    local maxIndex34\n    local maxVal34\n    local maxIndex35\n    local maxVal35\n\
    \    local maxIndex36\n    local maxVal36\n    local maxIndex37\n    local maxVal37\n\
    \    local maxIndex38\n    local maxVal38\n    local maxIndex39\n    local maxVal39\n\
    \    local maxIndex40\n    local maxVal40\n    local maxIndex41\n\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxVal\n\
    \    local maxIndexVal\n    local maxIndexValIndex\n    local maxIndexValIndexIndex2\n\
    \    local maxIndexValIndex3\n    local maxIndexValIndex4\n    local maxIndexValIndex5\n\
    \    local maxIndexValIndex6\n    local maxIndexValIndex7\n    local maxIndexValIndex8\n\
    \    local maxIndexValIndex9\n    local maxIndexValIndex10\n    local maxIndexValIndex11\n\
    \    local maxIndexValIndex12\n    local maxIndexValIndex13\n    local maxIndexValIndex14\n\
    \    local maxIndexValIndex15\n    local maxIndexValIndex16\n    local maxIndexValIndex17\n\
    \    local maxIndexValIndex18\n    local maxIndexValIndex19\n    local maxIndexValIndex20\n\
    \    local maxIndexValIndex21\n    local maxIndexValIndex22\n    local maxIndexValIndex23\n\
    \    local maxIndexValIndex24\n    local maxIndexValIndex25\n    local maxIndexValIndex26\n\
    \    local maxIndexValIndex27\n    local maxIndexValIndex28\n    local maxIndexValIndex29\n\
    \    local maxIndexValIndex30\n    local maxIndexValIndex31\n    local maxIndexValIndex32\n\
    \    local maxIndexValIndex33\n    local maxIndexValIndex34\n    local maxIndexValIndex35\n\
    \    local maxIndexValIndex36\n    local maxIndexValIndex37\n    local maxIndexValIndex38\n\
    \    local maxIndexValIndex39\n    local maxIndexValIndex40\n    local maxIndexValIndex41\n\
    \    local maxIndexValIndex42\n    local maxIndexValIndex43\n    local maxIndexValIndex44\n\
    \    local maxIndexValIndex45\n    local maxIndexValIndex46\n    local maxIndexValIndex47\n\
    \    local maxIndexValIndex48\n    local maxIndexValIndex49\n    local maxIndexValIndex50\n\
    \    local maxIndexValIndex51\n    local maxIndexValIndex52\n    local maxIndexValIndex53\n\
    \    local maxIndexValIndex54\n    local maxIndexValIndex55\n    local maxIndexValIndex56\n\
    \    local maxIndexValIndex57\n    local maxIndexValIndex58\n    local maxIndex\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local temp\n    local len\n\n    len=$(echo $arr\
    \ | wc -w)\n    if [ $len -gt $k ]; then\n        echo \"$arr: k must be less\
    \ than or equal to $len\"\n        return 1\n    fi\n\n    max=$(echo $arr | awk\
    \ '{print $k}')\n    arr=( $(echo $arr | awk '{print $1, $k}') )\n    arr=( $(echo\
    \ $arr | sort -n | tail -n $k) )\n    arr=( $(echo $arr | awk '{print $1, $k}')\
    \ )\n\n    echo $arr\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \n    # sort arr\n    local sorted_arr=$(sort -n <<< \"$arr\")\n\n    # find max\
    \ k numbers in arr\n    local max_k=0\n    local max_k_numbers=\"\"\n    for ((\
    \ i=0; i<k; i++ )); do\n        max_k=$((max_k+1))\n        max_k_numbers=\"$max_k_numbers\
    \ $sorted_arr[$((i*max_k))]\"\n    done\n\n    # sort max_k_numbers\n    local\
    \ max_k_numbers_sorted=$(sort -n <<< \"$max_k_numbers\")\n\n    # return max_k_numbers_sorted\n\
    \    echo \"$max_k_numbers_sorted\"\n}\n\ncandidate() {\n    maximum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\"\
    \ ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"\
    -3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxValue\n\
    \    local maxIndexValue\n    local maxIndexValueIndex\n    local maxIndexValueIndex2\n\
    \    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n\
    \    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n\
    \    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n\
    \    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n\
    \    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n\
    \    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n\
    \    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n\
    \    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n\
    \    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n\
    \    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n\
    \    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n\
    \    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n\
    \    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n\
    \    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n\
    \    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n\
    \    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n\
    \    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n\
    \    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n\
    \    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n    local maxIndexValue\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ len=${#arr[@]}\n    local max\n    local i\n    local j\n    local tmp\n\n \
    \   if [ $len -gt $k ]\n    then\n        echo \"$len is not greater than $k\"\
    \n        return 1\n    fi\n\n    max=$arr[0]\n    for ((i=1; i<len; i++)); do\n\
    \        if [ $arr[i] -gt $max ]; then\n            max=arr[i]\n        fi\n \
    \   done\n\n    for ((j=0; j<k; j++)); do\n        tmp=${arr[j]}\n        arr[j]=$max\n\
    \        arr[j+1]=$tmp\n    done\n\n    echo ${arr[@]}\n}\n\ncandidate() {\n \
    \   maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjmgrunco.sh: line 31: [: -3[i]: integer expression expected

    /tmp/tmpjmgrunco.sh: line 31: [: -3[i]: integer expression expected

    '
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxnum\n    local maxnums\n    local maxnums_str\n    local maxnums_strs\n\
    \    local maxnums_strs_str\n    local maxnums_strs_strs\n    local maxnums_strs_strs_str\n\
    \    local maxnums_strs_strs_strs\n    local maxnums_strs_strs_strs_str\n    local\
    \ maxnums_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_str\n   \
    \ local maxnums_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n    local\
    \ maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_str\n}\n\ncandidate() {\n   \
    \ maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"\
    3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n   \
    \ [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"\
    123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20\
    \ 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\"\
    \ \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"\
    2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10\
    \ 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local temp\n    local len\n    local maxlen\n \
    \   local maxnum\n    local maxnumlen\n    local maxnumstr\n    local maxnumstrlen\n\
    \    local maxnumstrlen2\n    local maxnumstrlen3\n    local maxnumstrlen4\n \
    \   local maxnumstrlen5\n    local maxnumstrlen6\n    local maxnumstrlen7\n  \
    \  local maxnumstrlen8\n    local maxnumstrlen9\n    local maxnumstrlen10\n  \
    \  local maxnumstrlen11\n    local maxnumstrlen12\n    local maxnumstrlen13\n\
    \    local maxnumstrlen14\n    local maxnumstrlen15\n    local maxnumstrlen16\n\
    \    local maxnumstrlen17\n    local maxnumstrlen18\n    local maxnumstrlen19\n\
    \    local maxnumstrlen20\n    local maxnumstrlen21\n    local maxnumstrlen22\n\
    \    local maxnumstrlen23\n    local maxnumstrlen24\n    local maxnumstrlen25\n\
    \    local maxnumstrlen26\n    local maxnumstrlen27\n    local maxnumstrlen28\n\
    \    local maxnumstrlen29\n    local maxnumstrlen30\n    local maxnumstrlen31\n\
    \    local maxnumstrlen32\n    local maxnumstrlen33\n    local maxnumstrlen34\n\
    \    local maxnumstrlen35\n    local maxnumstrlen36\n    local maxnumstrlen37\n\
    \    local maxnumstrlen38\n    local maxnumstrlen39\n    local maxnumstrlen40\n\
    \    local maxnumstrlen41\n    local maxnumstrlen42\n    local maxnumstrlen43\n\
    \    local maxnumstrlen44\n    local maxnumstrlen45\n    local maxnumstrlen46\n\
    \    local maxnumstrlen47\n    local maxnumstrlen48\n    local maxnumstrlen49\n\
    \    local maxnumstrlen50\n    local maxnumstrlen51\n    local maxnumstrlen52\n\
    \    local maxnumstrlen53\n    local maxnumstrlen54\n    local maxnumstrlen55\n\
    \    local maxnumstrlen56\n    local maxnumstrlen57\n    local max\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local len\n    local maxlen\n    local maxidx\n\
    \    local maxval\n    local maxidx2\n    local maxval2\n    local maxidx3\n \
    \   local maxval3\n    local maxidx4\n    local maxval4\n    local maxidx5\n \
    \   local maxval5\n    local maxidx6\n    local maxval6\n    local maxidx7\n \
    \   local maxval7\n    local maxidx8\n    local maxval8\n    local maxidx9\n \
    \   local maxval9\n    local maxidx10\n    local maxval10\n    local maxidx11\n\
    \    local maxval11\n    local maxidx12\n    local maxval12\n    local maxidx13\n\
    \    local maxval13\n    local maxidx14\n    local maxval14\n    local maxidx15\n\
    \    local maxval15\n    local maxidx16\n    local maxval16\n    local maxidx17\n\
    \    local maxval17\n    local maxidx18\n    local maxval18\n    local maxidx19\n\
    \    local maxval19\n    local maxidx20\n    local maxval20\n    local maxidx21\n\
    \    local maxval21\n    local maxidx22\n    local maxval22\n    local maxidx23\n\
    \    local maxval23\n    local maxidx24\n    local maxval24\n    local maxidx25\n\
    \    local maxval25\n    local maxidx26\n    local maxval26\n    local maxidx27\n\
    \    local maxval27\n    local maxidx28\n    local maxval28\n    local maxidx29\n\
    \    local maxval29\n    local maxidx30\n    local maxval30\n    local maxidx31\n\
    \    local maxval31\n    local maxidx32\n    local maxval32\n    local maxidx33\n\
    \    local maxval33\n    local maxidx34\n    local maxval34\n    local maxidx35\n\
    \    local maxval35\n    local maxidx36\n    local maxval36\n    local maxidx37\n\
    \    local maxval37\n    local maxidx38\n    local maxval38\n    local maxidx39\n\
    \    local maxval39\n    local maxidx40\n    local maxval\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxVal\n    local maxIndexVal\n\
    \    local maxIndexValIndex\n    local maxIndexValIndex2\n    local maxIndexValIndex3\n\
    \    local maxIndexValIndex4\n    local maxIndexValIndex5\n    local maxIndexValIndex6\n\
    \    local maxIndexValIndex7\n    local maxIndexValIndex8\n    local maxIndexValIndex9\n\
    \    local maxIndexValIndex10\n    local maxIndexValIndex11\n    local maxIndexValIndex12\n\
    \    local maxIndexValIndex13\n    local maxIndexValIndex14\n    local maxIndexValIndex15\n\
    \    local maxIndexValIndex16\n    local maxIndexValIndex17\n    local maxIndexValIndex18\n\
    \    local maxIndexValIndex19\n    local maxIndexValIndex20\n    local maxIndexValIndex21\n\
    \    local maxIndexValIndex22\n    local maxIndexValIndex23\n    local maxIndexValIndex24\n\
    \    local maxIndexValIndex25\n    local maxIndexValIndex26\n    local maxIndexValIndex27\n\
    \    local maxIndexValIndex28\n    local maxIndexValIndex29\n    local maxIndexValIndex30\n\
    \    local maxIndexValIndex31\n    local maxIndexValIndex32\n    local maxIndexValIndex33\n\
    \    local maxIndexValIndex34\n    local maxIndexValIndex35\n    local maxIndexValIndex36\n\
    \    local maxIndexValIndex37\n    local maxIndexValIndex38\n    local maxIndexValIndex39\n\
    \    local maxIndexValIndex40\n    local maxIndexValIndex41\n    local maxIndexValIndex42\n\
    \    local maxIndexValIndex43\n    local maxIndexValIndex44\n    local maxIndexValIndex45\n\
    \    local maxIndexValIndex46\n    local maxIndexValIndex47\n    local maxIndexValIndex48\n\
    \    local maxIndexValIndex49\n    local maxIndexValIndex50\n    local maxIndexValIndex51\n\
    \    local maxIndexValIndex52\n    local maxIndexValIndex53\n    local maxIndexValIndex54\n\
    \    local maxIndexValIndex55\n    local maxIndexValIndex56\n    local maxIndexValIndex57\n\
    \    local maxIndexValIndex58\n    local maxIndexValIndex59\n    \n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxVal\n\
    \    local maxIndex2\n    local maxVal2\n    local maxIndex3\n    local maxVal3\n\
    \    local maxIndex4\n    local maxVal4\n    local maxIndex5\n    local maxVal5\n\
    \    local maxIndex6\n    local maxVal6\n    local maxIndex7\n    local maxVal7\n\
    \    local maxIndex8\n    local maxVal8\n    local maxIndex9\n    local maxVal9\n\
    \    local maxIndex10\n    local maxVal10\n    local maxIndex11\n    local maxVal11\n\
    \    local maxIndex12\n    local maxVal12\n    local maxIndex13\n    local maxVal13\n\
    \    local maxIndex14\n    local maxVal14\n    local maxIndex15\n    local maxVal15\n\
    \    local maxIndex16\n    local maxVal16\n    local maxIndex17\n    local maxVal17\n\
    \    local maxIndex18\n    local maxVal18\n    local maxIndex19\n    local maxVal19\n\
    \    local maxIndex20\n    local maxVal20\n    local maxIndex21\n    local maxVal21\n\
    \    local maxIndex22\n    local maxVal22\n    local maxIndex23\n    local maxVal23\n\
    \    local maxIndex24\n    local maxVal24\n    local maxIndex25\n    local maxVal25\n\
    \    local maxIndex26\n    local maxVal26\n    local maxIndex27\n    local maxVal27\n\
    \    local maxIndex28\n    local maxVal28\n    local maxIndex29\n    local maxVal29\n\
    \    local maxIndex30\n    local maxVal30\n    local maxIndex31\n    local maxVal31\n\
    \    local maxIndex32\n    local maxVal32\n    local maxIndex33\n    local maxVal33\n\
    \    local maxIndex34\n    local maxVal34\n    local maxIndex35\n    local maxVal35\n\
    \    local maxIndex36\n    local maxVal36\n    local maxIndex37\n    local maxVal37\n\
    \    local maxIndex38\n    local maxVal38\n    local maxIndex39\n    local maxVal39\n\
    \    local maxIndex40\n    local maxVal40\n    local maxIndex41\n\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxVal\n    local maxIndexArr\n\
    \    local maxValArr\n    local maxIndexArrLen\n    local maxValArrLen\n    local\
    \ maxIndexArrLenLen\n    local maxValArrLen\n    local maxIndexArrLenLen\n   \
    \ local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArr\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=(\"$@\")\n    local k=\"$2\"\n\
    \    local max\n    local i\n    local j\n    local len\n    local maxlen\n  \
    \  local maxnum\n    local maxnums\n    local maxnums_str\n    local maxnums_strs\n\
    \    local maxnums_strs_str\n    local maxnums_strs_strs\n    local maxnums_strs_strs_str\n\
    \    local maxnums_strs_strs_strs\n    local maxnums_strs_strs_strs_str\n    local\
    \ maxnums_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_str\n   \
    \ local maxnums_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n    local\
    \ maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_\n}\n\ncandidate() {\n \
    \   maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr k\n    arr=$1\n    k=$2\n    local\
    \ -i i\n    local -a max\n    max=($(sort -n <<< \"${arr[@]}\" | head -n ${k}))\n\
    \    for ((i=1; i<${#max[@]}; i++)); do\n        if [[ ${max[$i]} -gt ${max[$((i-1))]\
    \ } ]]; then\n            ((i--))\n        fi\n    done\n    echo ${max[@]}\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjf12c6hb.sh: line 22: ${max[$((i-1))] }: bad substitution

    '
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local len=${#arr[@]}\n\
    \    local max\n    local i\n    local j\n    local tmp\n    local maxIndex\n\
    \    local maxValue\n    local maxIndex2\n    local maxValue2\n    local maxIndex3\n\
    \    local maxValue3\n    local maxIndex4\n    local maxValue4\n    local maxIndex5\n\
    \    local maxValue5\n    local maxIndex6\n    local maxValue6\n    local maxIndex7\n\
    \    local maxValue7\n    local maxIndex8\n    local maxValue8\n    local maxIndex9\n\
    \    local maxValue9\n    local maxIndex10\n    local maxValue10\n    local maxIndex11\n\
    \    local maxValue11\n    local maxIndex12\n    local maxValue12\n    local maxIndex13\n\
    \    local maxValue13\n    local maxIndex14\n    local maxValue14\n    local maxIndex15\n\
    \    local maxValue15\n    local maxIndex16\n    local maxValue16\n    local maxIndex17\n\
    \    local maxValue17\n    local maxIndex18\n    local maxValue18\n    local maxIndex19\n\
    \    local maxValue19\n    local maxIndex20\n    local maxValue20\n    local maxIndex21\n\
    \    local maxValue21\n    local maxIndex22\n    local maxValue22\n    local maxIndex23\n\
    \    local maxValue23\n    local maxIndex24\n    local maxValue24\n    local maxIndex25\n\
    \    local maxValue25\n    local maxIndex26\n    local maxValue26\n    local maxIndex27\n\
    \    local maxValue27\n    local maxIndex28\n    local maxValue28\n    local maxIndex29\n\
    \    local maxValue29\n    local maxIndex30\n    local maxValue30\n    local maxIndex31\n\
    \    local maxValue31\n    local maxIndex32\n    local maxValue32\n    local maxIndex33\n\
    \    local maxValue33\n    local maxIndex34\n    local maxValue34\n    local maxIndex35\n\
    \    local maxValue35\n    local maxIndex36\n    local maxValue36\n    local maxIndex37\n\
    \    local maxValue37\n    local maxIndex38\n    local maxValue38\n    local maxIndex39\n\
    \    local maxValue39\n    local maxIndex40\n    local max\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxValue\n    local maxIndex2\n\
    \    local maxValue2\n    local maxIndex3\n    local maxValue3\n    local maxIndex4\n\
    \    local maxValue4\n    local maxIndex5\n    local maxValue5\n    local maxIndex6\n\
    \    local maxValue6\n    local maxIndex7\n    local maxValue7\n    local maxIndex8\n\
    \    local maxValue8\n    local maxIndex9\n    local maxValue9\n    local maxIndex10\n\
    \    local maxValue10\n    local maxIndex11\n    local maxValue11\n    local maxIndex12\n\
    \    local maxValue12\n    local maxIndex13\n    local maxValue13\n    local maxIndex14\n\
    \    local maxValue14\n    local maxIndex15\n    local maxValue15\n    local maxIndex16\n\
    \    local maxValue16\n    local maxIndex17\n    local maxValue17\n    local maxIndex18\n\
    \    local maxValue18\n    local maxIndex19\n    local maxValue19\n    local maxIndex20\n\
    \    local maxValue20\n    local maxIndex21\n    local maxValue21\n    local maxIndex22\n\
    \    local maxValue22\n    local maxIndex23\n    local maxValue23\n    local maxIndex24\n\
    \    local maxValue24\n    local maxIndex25\n    local maxValue25\n    local maxIndex26\n\
    \    local maxValue26\n    local maxIndex27\n    local maxValue27\n    local maxIndex28\n\
    \    local maxValue28\n    local maxIndex29\n    local maxValue29\n    local maxIndex30\n\
    \    local maxValue30\n    local maxIndex31\n    local maxValue31\n    local maxIndex32\n\
    \    local maxValue32\n    local maxIndex33\n    local maxValue33\n    local maxIndex34\n\
    \    local maxValue34\n    local maxIndex35\n    local maxValue35\n    local maxIndex36\n\
    \    local maxValue36\n    local maxIndex37\n    local maxValue37\n    local maxIndex38\n\
    \    local maxValue38\n    local maxIndex39\n    local maxValue39\n    local maxIndex40\n\
    \    local maxValue40\n    local maxIndex41\n    local maxValue\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local len\n    local maxlen\n    local maxidx\n\
    \    local maxval\n    local maxidx2\n    local maxval2\n    local maxidx3\n \
    \   local maxval3\n    local maxidx4\n    local maxval4\n    local maxidx5\n \
    \   local maxval5\n    local maxidx6\n    local maxval6\n    local maxidx7\n \
    \   local maxval7\n    local maxidx8\n    local maxval8\n    local maxidx9\n \
    \   local maxval9\n    local maxidx10\n    local maxval10\n    local maxidx11\n\
    \    local maxval11\n    local maxidx12\n    local maxval12\n    local maxidx13\n\
    \    local maxval13\n    local maxidx14\n    local maxval14\n    local maxidx15\n\
    \    local maxval15\n    local maxidx16\n    local maxval16\n    local maxidx17\n\
    \    local maxval17\n    local maxidx18\n    local maxval18\n    local maxidx19\n\
    \    local maxval19\n    local maxidx20\n    local maxval20\n    local maxidx21\n\
    \    local maxval21\n    local maxidx22\n    local maxval22\n    local maxidx23\n\
    \    local maxval23\n    local maxidx24\n    local maxval24\n    local maxidx25\n\
    \    local maxval25\n    local maxidx26\n    local maxval26\n    local maxidx27\n\
    \    local maxval27\n    local maxidx28\n    local maxval28\n    local maxidx29\n\
    \    local maxval29\n    local maxidx30\n    local maxval30\n    local maxidx31\n\
    \    local maxval31\n    local maxidx32\n    local maxval32\n    local maxidx33\n\
    \    local maxval33\n    local maxidx34\n    local maxval34\n    local maxidx35\n\
    \    local maxval35\n    local maxidx36\n    local maxval36\n    local maxidx37\n\
    \    local maxval37\n    local maxidx38\n    local maxval38\n    local maxidx39\n\
    \    local maxval39\n    local maxidx40\n    local maxval\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxValue\n\
    \    local maxIndexValue\n    local maxIndexValueIndex\n    local maxIndexValueIndex2\n\
    \    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n\
    \    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n\
    \    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n\
    \    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n\
    \    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n\
    \    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n\
    \    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n\
    \    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n\
    \    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n\
    \    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n\
    \    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n\
    \    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n\
    \    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n\
    \    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n\
    \    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n\
    \    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n\
    \    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n\
    \    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n\
    \    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n    local maxIndexValue\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxidx\n    local maxval\n    local maxidx2\n    local maxval2\n    local\
    \ maxidx3\n    local maxval3\n    local maxidx4\n    local maxval4\n    local\
    \ maxidx5\n    local maxval5\n    local maxidx6\n    local maxval6\n    local\
    \ maxidx7\n    local maxval7\n    local maxidx8\n    local maxval8\n    local\
    \ maxidx9\n    local maxval9\n    local maxidx10\n    local maxval10\n    local\
    \ maxidx11\n    local maxval11\n    local maxidx12\n    local maxval12\n    local\
    \ maxidx13\n    local maxval13\n    local maxidx14\n    local maxval14\n    local\
    \ maxidx15\n    local maxval15\n    local maxidx16\n    local maxval16\n    local\
    \ maxidx17\n    local maxval17\n    local maxidx18\n    local maxval18\n    local\
    \ maxidx19\n    local maxval19\n    local maxidx20\n    local maxval20\n    local\
    \ maxidx21\n    local maxval21\n    local maxidx22\n    local maxval22\n    local\
    \ maxidx23\n    local maxval23\n    local maxidx24\n    local maxval24\n    local\
    \ maxidx25\n    local maxval25\n    local maxidx26\n    local maxval26\n    local\
    \ maxidx27\n    local maxval27\n    local maxidx28\n    local maxval28\n    local\
    \ maxidx29\n    local maxval29\n    local maxidx30\n    local maxval30\n    local\
    \ maxidx31\n    local maxval31\n    local maxidx32\n    local maxval32\n    local\
    \ maxidx33\n    local maxval33\n    local maxidx34\n    local maxval34\n    local\
    \ maxidx35\n    local maxval35\n    local maxidx36\n    local maxval36\n    local\
    \ maxidx37\n    local maxval37\n    local maxidx38\n    local maxval38\n    local\
    \ maxidx39\n    local maxval39\n    local maxidx40\n    local max\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxValue\n\
    \    local maxIndexValue\n    local maxIndexValueIndex\n    local maxIndexValueIndex2\n\
    \    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n\
    \    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n\
    \    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n\
    \    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n\
    \    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n\
    \    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n\
    \    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n\
    \    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n\
    \    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n\
    \    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n\
    \    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n\
    \    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n\
    \    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n\
    \    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n\
    \    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n\
    \    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n\
    \    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n\
    \    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n\
    \    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n    local maxIndexValue\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxValue\n    local maxIndex2\n\
    \    local maxValue2\n    local maxIndex3\n    local maxValue3\n    local maxIndex4\n\
    \    local maxValue4\n    local maxIndex5\n    local maxValue5\n    local maxIndex6\n\
    \    local maxValue6\n    local maxIndex7\n    local maxValue7\n    local maxIndex8\n\
    \    local maxValue8\n    local maxIndex9\n    local maxValue9\n    local maxIndex10\n\
    \    local maxValue10\n    local maxIndex11\n    local maxValue11\n    local maxIndex12\n\
    \    local maxValue12\n    local maxIndex13\n    local maxValue13\n    local maxIndex14\n\
    \    local maxValue14\n    local maxIndex15\n    local maxValue15\n    local maxIndex16\n\
    \    local maxValue16\n    local maxIndex17\n    local maxValue17\n    local maxIndex18\n\
    \    local maxValue18\n    local maxIndex19\n    local maxValue19\n    local maxIndex20\n\
    \    local maxValue20\n    local maxIndex21\n    local maxValue21\n    local maxIndex22\n\
    \    local maxValue22\n    local maxIndex23\n    local maxValue23\n    local maxIndex24\n\
    \    local maxValue24\n    local maxIndex25\n    local maxValue25\n    local maxIndex26\n\
    \    local maxValue26\n    local maxIndex27\n    local maxValue27\n    local maxIndex28\n\
    \    local maxValue28\n    local maxIndex29\n    local maxValue29\n    local maxIndex30\n\
    \    local maxValue30\n    local maxIndex31\n    local maxValue31\n    local maxIndex32\n\
    \    local maxValue32\n    local maxIndex33\n    local maxValue33\n    local maxIndex34\n\
    \    local maxValue34\n    local maxIndex35\n    local maxValue35\n    local maxIndex36\n\
    \    local maxValue36\n    local maxIndex37\n    local maxValue37\n    local maxIndex38\n\
    \    local maxValue38\n    local maxIndex39\n    local maxValue39\n    local maxIndex40\n\
    \    local maxValue40\n    local maxIndex41\n    local maxValue\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n    local\
    \ maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n \
    \   local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n    local max\n}\n\n\
    candidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_strs\n    local maxnums_strs_str\n\
    \    local maxnums_strs_strs\n    local maxnums_strs_strs_str\n    local maxnums_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n    local\
    \ maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local max\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxidx\n    local maxval\n    local maxidx2\n    local maxval2\n    local\
    \ maxidx3\n    local maxval3\n    local maxidx4\n    local maxval4\n    local\
    \ maxidx5\n    local maxval5\n    local maxidx6\n    local maxval6\n    local\
    \ maxidx7\n    local maxval7\n    local maxidx8\n    local maxval8\n    local\
    \ maxidx9\n    local maxval9\n    local maxidx10\n    local maxval10\n    local\
    \ maxidx11\n    local maxval11\n    local maxidx12\n    local maxval12\n    local\
    \ maxidx13\n    local maxval13\n    local maxidx14\n    local maxval14\n    local\
    \ maxidx15\n    local maxval15\n    local maxidx16\n    local maxval16\n    local\
    \ maxidx17\n    local maxval17\n    local maxidx18\n    local maxval18\n    local\
    \ maxidx19\n    local maxval19\n    local maxidx20\n    local maxval20\n    local\
    \ maxidx21\n    local maxval21\n    local maxidx22\n    local maxval22\n    local\
    \ maxidx23\n    local maxval23\n    local maxidx24\n    local maxval24\n    local\
    \ maxidx25\n    local maxval25\n    local maxidx26\n    local maxval26\n    local\
    \ maxidx27\n    local maxval27\n    local maxidx28\n    local maxval28\n    local\
    \ maxidx29\n    local maxval29\n    local maxidx30\n    local maxval30\n    local\
    \ maxidx31\n    local maxval31\n    local maxidx32\n    local maxval32\n    local\
    \ maxidx33\n    local maxval33\n    local maxidx34\n    local maxval34\n    local\
    \ maxidx35\n    local maxval35\n    local maxidx36\n    local maxval36\n    local\
    \ maxidx37\n    local maxval37\n    local maxidx38\n    local maxval38\n    local\
    \ maxidx39\n    local maxval39\n    local maxidx40\n    local max\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max_arr\n\
    \    local max_k\n    local i\n    local j\n    local max_i\n    local max_j\n\
    \    local max_val\n    local max_val_i\n    local max_val_j\n    local max_val_k\n\
    \    local max_val_k_index\n    local max_val_k_i\n    local max_val_k_j\n   \
    \ local max_val_k_k\n    local max_val_k_k_i\n    local max_val_k_k_j\n    local\
    \ max_val_k_k_k\n    local max_val_k_k_k_i\n    local max_val_k_k_k_j\n    local\
    \ max_val_k_k_k_k\n    local max_val_k_k_k_k_i\n    local max_val_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k\n    local max_val_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_k_i\n    local\
    \ max_val_k_k_k_k_k_k_k_j\n    local max_val_k_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_k_i\n\
    \    local max_val_k_k_k_k_k_k_k_j\n    local max_val_k_k_k_k_k_k_k_k\n    local\
    \ max_val_k_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_k_j\n    local max_val_k_k_k_k_k_k_k_k\n\
    \    local max_val_k_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_k_j\n    local\
    \ max_val_k_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k_k\n    local max_val_\n}\n\ncandidate() {\n \
    \   maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr k\n    arr=$1\n    k=$2\n    local\
    \ len\n    len=${#arr[@]}\n    local max\n    max=0\n    local i\n    for i in\
    \ $(seq 0 $((len-1)))\n    do\n        if [ $((arr[$i]>max)) -eq 0 ]\n       \
    \ then\n            max=arr[$i]\n        fi\n    done\n    echo $max\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp06x9ff3y.sh: line 25: -3 -4 5: syntax error in expression (error
    token is "5")

    '
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local len=${#arr[@]}\n\
    \    local max\n    local i\n    local j\n    local maxIndex\n    local maxValue\n\
    \    local maxIndexValue\n    local maxIndexValueIndex\n    local maxIndexValueIndex2\n\
    \    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n\
    \    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n\
    \    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n\
    \    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n\
    \    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n\
    \    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n\
    \    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n\
    \    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n\
    \    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n\
    \    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n\
    \    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n\
    \    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n\
    \    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n\
    \    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n\
    \    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n\
    \    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n\
    \    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n\
    \    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n\
    \    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxVal\n    local maxIndex2\n\
    \    local maxVal2\n    local maxIndex3\n    local maxVal3\n    local maxIndex4\n\
    \    local maxVal4\n    local maxIndex5\n    local maxVal5\n    local maxIndex6\n\
    \    local maxVal6\n    local maxIndex7\n    local maxVal7\n    local maxIndex8\n\
    \    local maxVal8\n    local maxIndex9\n    local maxVal9\n    local maxIndex10\n\
    \    local maxVal10\n    local maxIndex11\n    local maxVal11\n    local maxIndex12\n\
    \    local maxVal12\n    local maxIndex13\n    local maxVal13\n    local maxIndex14\n\
    \    local maxVal14\n    local maxIndex15\n    local maxVal15\n    local maxIndex16\n\
    \    local maxVal16\n    local maxIndex17\n    local maxVal17\n    local maxIndex18\n\
    \    local maxVal18\n    local maxIndex19\n    local maxVal19\n    local maxIndex20\n\
    \    local maxVal20\n    local maxIndex21\n    local maxVal21\n    local maxIndex22\n\
    \    local maxVal22\n    local maxIndex23\n    local maxVal23\n    local maxIndex24\n\
    \    local maxVal24\n    local maxIndex25\n    local maxVal25\n    local maxIndex26\n\
    \    local maxVal26\n    local maxIndex27\n    local maxVal27\n    local maxIndex28\n\
    \    local maxVal28\n    local maxIndex29\n    local maxVal29\n    local maxIndex30\n\
    \    local maxVal30\n    local maxIndex31\n    local maxVal31\n    local maxIndex32\n\
    \    local maxVal32\n    local maxIndex33\n    local maxVal33\n    local maxIndex34\n\
    \    local maxVal34\n    local maxIndex35\n    local maxVal35\n    local maxIndex36\n\
    \    local maxVal36\n    local maxIndex37\n    local maxVal37\n    local maxIndex38\n\
    \    local maxVal38\n    local maxIndex39\n    local maxVal39\n    local maxIndex40\n\
    \    local maxVal40\n    local maxIndex41\n    local maxVal\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr k\n    arr=$1\n    k=$2\n    local\
    \ i max\n    local -a maxArr\n    local -a sortedArr\n    local -a maxArrIndex\n\
    \    local -a sortedArrIndex\n    local -a sortedArrIndex2\n    local -a sortedArrIndex3\n\
    \    local -a sortedArrIndex4\n    local -a sortedArrIndex5\n    local -a sortedArrIndex6\n\
    \    local -a sortedArrIndex7\n    local -a sortedArrIndex8\n    local -a sortedArrIndex9\n\
    \    local -a sortedArrIndex10\n    local -a sortedArrIndex11\n    local -a sortedArrIndex12\n\
    \    local -a sortedArrIndex13\n    local -a sortedArrIndex14\n    local -a sortedArrIndex15\n\
    \    local -a sortedArrIndex16\n    local -a sortedArrIndex17\n    local -a sortedArrIndex18\n\
    \    local -a sortedArrIndex19\n    local -a sortedArrIndex20\n    local -a sortedArrIndex21\n\
    \    local -a sortedArrIndex22\n    local -a sortedArrIndex23\n    local -a sortedArrIndex24\n\
    \    local -a sortedArrIndex25\n    local -a sortedArrIndex26\n    local -a sortedArrIndex27\n\
    \    local -a sortedArrIndex28\n    local -a sortedArrIndex29\n    local -a sortedArrIndex30\n\
    \    local -a sortedArrIndex31\n    local -a sortedArrIndex32\n    local -a sortedArrIndex33\n\
    \    local -a sortedArrIndex34\n    local -a sortedArrIndex35\n    local -a sortedArrIndex36\n\
    \    local -a sortedArrIndex37\n    local -a sortedArrIndex38\n    local -a sortedArrIndex39\n\
    \    local -a sortedArrIndex40\n    local -a sortedArrIndex41\n    local -a sortedArrIndex42\n\
    \    local -a sortedArrIndex43\n    local -a sortedArrIndex44\n    local -a sortedArrIndex45\n\
    \    local -a sortedArrIndex46\n    local -a sortedArrIndex47\n    local -a sortedArrIndex48\n\
    \    local -a sortedArrIndex49\n    local -a sortedArrIndex50\n    local -a sortedArrIndex51\n\
    \    local -a sortedArrIndex52\n    local -\n}\n\ncandidate() {\n    maximum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4\
    \ -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate\
    \ \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1\
    \ 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"\
    4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13\
    \ -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n\
    \    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\"\
    \ \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n\
    \    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \n    # Write your code here\n    output=$(sort -n -k $k <<< $arr)\n    echo $output\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ len=${#arr[@]}\n    local max=0\n    local i\n    local j\n    local maxIndex\n\
    \    local maxValue\n\n    if [ $len -gt $k ]\n    then\n        echo \"$len must\
    \ be less than or equal to $k\"\n        return 1\n    fi\n\n    for i in $(seq\
    \ 0 $((k-1)) )\n    do\n        maxValue=${arr[$i]}\n        maxIndex=$i\n   \
    \     for j in $(seq 0 $((len-1)) )\n        do\n            if [ $arr[$j] -gt\
    \ $maxValue ]\n            then\n                maxValue=${arr[$j]}\n       \
    \         maxIndex=$j\n            fi\n        done\n        arr[$maxIndex]=${arr[$maxIndex]}\n\
    \        arr[$i]=${arr[$i]}\n    done\n\n    arr=( \"${arr[@]}\" )\n    echo \"\
    ${arr[@]}\"\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"\
    4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnfpwgmpz.sh: line 36: [: -3[0]: integer expression expected

    /tmp/tmpnfpwgmpz.sh: line 36: [: -3[1]: integer expression expected

    /tmp/tmpnfpwgmpz.sh: line 36: [: -3[2]: integer expression expected

    /tmp/tmpnfpwgmpz.sh: line 36: [: -3[0]: integer expression expected

    /tmp/tmpnfpwgmpz.sh: line 36: [: -3[1]: integer expression expected

    /tmp/tmpnfpwgmpz.sh: line 36: [: -3[2]: integer expression expected

    /tmp/tmpnfpwgmpz.sh: line 36: [: -3[0]: integer expression expected

    /tmp/tmpnfpwgmpz.sh: line 36: [: -3[1]: integer expression expected

    /tmp/tmpnfpwgmpz.sh: line 36: [: -3[2]: integer expression expected

    '
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxValue\n\
    \    local maxIndexValue\n    local maxIndexValueIndex\n    local maxIndexValueIndex2\n\
    \    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n\
    \    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n\
    \    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n\
    \    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n\
    \    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n\
    \    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n\
    \    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n\
    \    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n\
    \    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n\
    \    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n\
    \    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n\
    \    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n\
    \    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n\
    \    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n\
    \    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n\
    \    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n\
    \    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n\
    \    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n\
    \    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n    local maxIndexValue\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local len\n\n    len=${#arr[@]}\n    if [\
    \ $len -gt $k ]\n    then\n        echo \"$k exceeds the length of $len\"\n  \
    \      return 1\n    fi\n\n    max=$arr[0]\n    for (( i=1; i<$len; i++ ))\n \
    \   do\n        if [ $arr[$i] -gt $max ]\n        then\n            max=$arr[$i]\n\
    \        fi\n    done\n\n    for (( j=1; j<$k; j++ ))\n    do\n        arr[$j]=${arr[$j]}\n\
    \    done\n\n    arr[$k]=${max}\n\n    echo ${arr[@]}\n}\n\ncandidate() {\n  \
    \  maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"\
    3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n   \
    \ [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"\
    123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20\
    \ 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\"\
    \ \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"\
    2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10\
    \ 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: '/tmp/tmpq8nlhz9a.sh: line 32: [: -3[1]: integer expression expected

    /tmp/tmpq8nlhz9a.sh: line 32: [: -3[2]: integer expression expected

    '
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ len=${#arr[@]}\n    local max\n    local i\n    local j\n    local tmp\n   \
    \ local maxIndex\n    local maxVal\n    local maxIndex2\n    local maxVal2\n \
    \   local maxIndex3\n    local maxVal3\n    local maxIndex4\n    local maxVal4\n\
    \    local maxIndex5\n    local maxVal5\n    local maxIndex6\n    local maxVal6\n\
    \    local maxIndex7\n    local maxVal7\n    local maxIndex8\n    local maxVal8\n\
    \    local maxIndex9\n    local maxVal9\n    local maxIndex10\n    local maxVal10\n\
    \    local maxIndex11\n    local maxVal11\n    local maxIndex12\n    local maxVal12\n\
    \    local maxIndex13\n    local maxVal13\n    local maxIndex14\n    local maxVal14\n\
    \    local maxIndex15\n    local maxVal15\n    local maxIndex16\n    local maxVal16\n\
    \    local maxIndex17\n    local maxVal17\n    local maxIndex18\n    local maxVal18\n\
    \    local maxIndex19\n    local maxVal19\n    local maxIndex20\n    local maxVal20\n\
    \    local maxIndex21\n    local maxVal21\n    local maxIndex22\n    local maxVal22\n\
    \    local maxIndex23\n    local maxVal23\n    local maxIndex24\n    local maxVal24\n\
    \    local maxIndex25\n    local maxVal25\n    local maxIndex26\n    local maxVal26\n\
    \    local maxIndex27\n    local maxVal27\n    local maxIndex28\n    local maxVal28\n\
    \    local maxIndex29\n    local maxVal29\n    local maxIndex30\n    local maxVal30\n\
    \    local maxIndex31\n    local maxVal31\n    local maxIndex32\n    local maxVal32\n\
    \    local maxIndex33\n    local maxVal33\n    local maxIndex34\n    local maxVal34\n\
    \    local maxIndex35\n    local maxVal35\n    local maxIndex36\n    local maxVal36\n\
    \    local maxIndex37\n    local maxVal37\n    local maxIndex38\n    local maxVal38\n\
    \    local maxIndex39\n    local maxVal39\n    local maxIndex40\n\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxnum\n    local maxnums\n    local maxnums_str\n    local maxnums_strs\n\
    \    local maxnums_strs_str\n    local maxnums_strs_strs\n    local maxnums_strs_strs_str\n\
    \    local maxnums_strs_strs_strs\n    local maxnums_strs_strs_strs_str\n    local\
    \ maxnums_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_str\n   \
    \ local maxnums_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n    local\
    \ maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_str\n}\n\ncandidate() {\n   \
    \ maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"\
    3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n   \
    \ [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"\
    123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20\
    \ 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\"\
    \ \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"\
    2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10\
    \ 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=(\"$@\")\n    local k=\"$2\"\n\
    \    local len=\"${#arr[@]}\"\n    local max\n    local i\n    local j\n    local\
    \ tmp\n    local maxIndex\n    local maxVal\n    local maxIndex2\n    local maxVal2\n\
    \    local maxIndex3\n    local maxVal3\n    local maxIndex4\n    local maxVal4\n\
    \    local maxIndex5\n    local maxVal5\n    local maxIndex6\n    local maxVal6\n\
    \    local maxIndex7\n    local maxVal7\n    local maxIndex8\n    local maxVal8\n\
    \    local maxIndex9\n    local maxVal9\n    local maxIndex10\n    local maxVal10\n\
    \    local maxIndex11\n    local maxVal11\n    local maxIndex12\n    local maxVal12\n\
    \    local maxIndex13\n    local maxVal13\n    local maxIndex14\n    local maxVal14\n\
    \    local maxIndex15\n    local maxVal15\n    local maxIndex16\n    local maxVal16\n\
    \    local maxIndex17\n    local maxVal17\n    local maxIndex18\n    local maxVal18\n\
    \    local maxIndex19\n    local maxVal19\n    local maxIndex20\n    local maxVal20\n\
    \    local maxIndex21\n    local maxVal21\n    local maxIndex22\n    local maxVal22\n\
    \    local maxIndex23\n    local maxVal23\n    local maxIndex24\n    local maxVal24\n\
    \    local maxIndex25\n    local maxVal25\n    local maxIndex26\n    local maxVal26\n\
    \    local maxIndex27\n    local maxVal27\n    local maxIndex28\n    local maxVal28\n\
    \    local maxIndex29\n    local maxVal29\n    local maxIndex30\n    local maxVal30\n\
    \    local maxIndex31\n    local maxVal31\n    local maxIndex32\n    local maxVal32\n\
    \    local maxIndex33\n    local maxVal33\n    local maxIndex34\n    local maxVal34\n\
    \    local maxIndex35\n    local maxVal35\n    local maxIndex36\n    local maxVal36\n\
    \    local maxIndex37\n    local maxVal37\n    local maxIndex38\n    local maxVal38\n\
    \    local maxIndex39\n    local maxVal39\n    local maxIndex40\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxValue\n\
    \    local maxIndexValue\n    local maxIndexValue2\n    local maxIndexValue3\n\
    \    local maxIndexValue4\n    local maxIndexValue5\n    local maxIndexValue6\n\
    \    local maxIndexValue7\n    local maxIndexValue8\n    local maxIndexValue9\n\
    \    local maxIndexValue10\n    local maxIndexValue11\n    local maxIndexValue12\n\
    \    local maxIndexValue13\n    local maxIndexValue14\n    local maxIndexValue15\n\
    \    local maxIndexValue16\n    local maxIndexValue17\n    local maxIndexValue18\n\
    \    local maxIndexValue19\n    local maxIndexValue20\n    local maxIndexValue21\n\
    \    local maxIndexValue22\n    local maxIndexValue23\n    local maxIndexValue24\n\
    \    local maxIndexValue25\n    local maxIndexValue26\n    local maxIndexValue27\n\
    \    local maxIndexValue28\n    local maxIndexValue29\n    local maxIndexValue30\n\
    \    local maxIndexValue31\n    local maxIndexValue32\n    local maxIndexValue33\n\
    \    local maxIndexValue34\n    local maxIndexValue35\n    local maxIndexValue36\n\
    \    local maxIndexValue37\n    local maxIndexValue38\n    local maxIndexValue39\n\
    \    local maxIndexValue40\n    local maxIndexValue41\n    local maxIndexValue42\n\
    \    local maxIndexValue43\n    local maxIndexValue44\n    local maxIndexValue45\n\
    \    local maxIndexValue46\n    local maxIndexValue47\n    local maxIndexValue48\n\
    \    local maxIndexValue49\n    local maxIndexValue50\n    local maxIndexValue51\n\
    \    local maxIndexValue52\n    local maxIndexValue53\n    local maxIndexValue54\n\
    \    local maxIndexValue55\n    local maxIndexValue56\n    local maxIndexValue57\n\
    \    local maxIndexValue58\n    local maxIndexValue59\n    local maxIndexValue60\n\
    \    local maxIndexValue61\n    local maxIndexValue62\n    local maxIndexValue63\n\
    \    local maxIndexValue64\n    local maxIndexValue65\n    local maxIndexValue66\n\
    \    local maxIndexValue67\n    local maxIndexValue68\n}\n\ncandidate() {\n  \
    \  maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"\
    3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n   \
    \ [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"\
    123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20\
    \ 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\"\
    \ \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"\
    2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10\
    \ 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local temp\n    local maxIndex\n    local maxValue\n\
    \    local maxLength\n    local maxIndexLength\n    local maxIndexValue\n    local\
    \ maxIndexLengthValue\n    local maxIndexValueLength\n    local maxIndexValueLengthValue\n\
    \    local maxIndexValueLengthValueLength\n    local maxIndexValueLengthValueLengthValue\n\
    \    local maxIndexValueLengthValueLengthValueLength\n    local maxIndexValueLengthValueLengthValueLengthValue\n\
    \    local maxIndexValueLengthValueLengthValueLengthValueLength\n    local maxIndexValueLengthValueLengthValueLengthValueLengthValue\n\
    \    local maxIndexValueLengthValueLengthValueLengthValueLengthValueValue\n  \
    \  local maxIndexValueLengthValueLengthValueLengthValueLengthValueValue\n    local\
    \ maxIndexValueLengthValueLengthValueLengthValueLengthValueValue\n    local maxIndexValueLengthValueLengthValueLengthValueLengthValueValueLength\n\
    \    local maxIndexValueLengthValueLengthValueLengthValueLengthValueLengthValueLength\n\
    \    local maxIndexValueLengthValueLengthValueLengthValueLengthValueLengthValueLength\n\
    \    local maxIndexValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValue\n\
    \    local maxIndexValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValue\n\
    \    local maxIndexValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLength\n\
    \    local maxIndexValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValue\n\
    \    local maxIndexValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLength\n\
    \    local maxIndexValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLength\n\
    \    local maxIndexValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValue\n\
    \    local maxIndexValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLength\n\
    \    local maxIndexValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLength\n\
    \    local maxIndexValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLength\n\
    \    local maxIndexValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValueLengthValue\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ result=()\n    local i\n    local max\n    local j\n    local tmp\n    \n  \
    \  for i in \"${arr[@]}\"; do\n        if (( i > max )); then\n            max=i\n\
    \        fi\n    done\n    \n    for j in $(seq 0 $(( k - 1 ))); do\n        tmp=${arr[$j]}\n\
    \        arr[$j]=${arr[$(( j - 1 ))]}\n        arr[$(( j - 1 ))]=$tmp\n    done\n\
    \    \n    for j in \"${arr[@]}\"; do\n        result+=( $j )\n    done\n    \n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr k\n    arr=$1\n    k=$2\n    local\
    \ -i i\n    local max\n    max=0\n    for ((i=0; i<k; i++)); do\n        if ((\
    \ ${arr[i]} > max )); then\n            max=${arr[i]}\n        fi\n    done\n\
    \    echo $max\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplcqgext2.sh: line 22: ((: -3 -4 5 > max : syntax error in expression
    (error token is "5 > max ")

    /tmp/tmplcqgext2.sh: line 22: ((: > max : syntax error: operand expected (error
    token is "> max ")

    /tmp/tmplcqgext2.sh: line 22: ((: > max : syntax error: operand expected (error
    token is "> max ")

    '
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n    local\
    \ maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n \
    \   local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n    local max\n}\n\n\
    candidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=(\"${@}\")\n    local k=\"${2}\"\
    \n    local len=\"${#arr[@]}\"\n    local max\n    local i\n    local j\n    local\
    \ maxIndex\n    local maxVal\n    local maxIndexVal\n    local maxIndexVal2\n\
    \    local maxIndexVal3\n    local maxIndexVal4\n    local maxIndexVal5\n    local\
    \ maxIndexVal6\n    local maxIndexVal7\n    local maxIndexVal8\n    local maxIndexVal9\n\
    \    local maxIndexVal10\n    local maxIndexVal11\n    local maxIndexVal12\n \
    \   local maxIndexVal13\n    local maxIndexVal14\n    local maxIndexVal15\n  \
    \  local maxIndexVal16\n    local maxIndexVal17\n    local maxIndexVal18\n   \
    \ local maxIndexVal19\n    local maxIndexVal20\n    local maxIndexVal21\n    local\
    \ maxIndexVal22\n    local maxIndexVal23\n    local maxIndexVal24\n    local maxIndexVal25\n\
    \    local maxIndexVal26\n    local maxIndexVal27\n    local maxIndexVal28\n \
    \   local maxIndexVal29\n    local maxIndexVal30\n    local maxIndexVal31\n  \
    \  local maxIndexVal32\n    local maxIndexVal33\n    local maxIndexVal34\n   \
    \ local maxIndexVal35\n    local maxIndexVal36\n    local maxIndexVal37\n    local\
    \ maxIndexVal38\n    local maxIndexVal39\n    local maxIndexVal40\n    local maxIndexVal41\n\
    \    local maxIndexVal42\n    local maxIndexVal43\n    local maxIndexVal44\n \
    \   local maxIndexVal45\n    local maxIndexVal46\n    local maxIndexVal47\n  \
    \  local maxIndexVal48\n    local maxIndexVal49\n    local maxIndexVal50\n   \
    \ local maxIndexVal51\n    local maxIndexVal52\n    local maxIndexVal53\n    local\
    \ maxIndexVal54\n    local maxIndexVal55\n    local maxIndexVal56\n    local maxIndexVal57\n\
    \    local maxIndexVal58\n    local maxIndexVal59\n    local maxIndexVal60\n \
    \   local maxIndexVal61\n    local maxIndexVal62\n    local maxIndexVal63\n  \
    \  local maxIndexVal64\n    local maxIndexVal65\n    local maxIndexVal66\n   \
    \ local max\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"\
    4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max_arr=()\n\
    \    local max_k=0\n    local max_val=0\n    local i\n    local j\n    local tmp\n\
    \    local len\n    local count\n    local max_count\n    local max_index\n  \
    \  local max_val_index\n    local max_val_count\n    local max_val_count2\n  \
    \  local max_val_count3\n    local max_val_count4\n    local max_val_count5\n\
    \    local max_val_count6\n    local max_val_count7\n    local max_val_count8\n\
    \    local max_val_count9\n    local max_val_count10\n    local max_val_count11\n\
    \    local max_val_count12\n    local max_val_count13\n    local max_val_count14\n\
    \    local max_val_count15\n    local max_val_count16\n    local max_val_count17\n\
    \    local max_val_count18\n    local max_val_count19\n    local max_val_count20\n\
    \    local max_val_count21\n    local max_val_count22\n    local max_val_count23\n\
    \    local max_val_count24\n    local max_val_count25\n    local max_val_count26\n\
    \    local max_val_count27\n    local max_val_count28\n    local max_val_count29\n\
    \    local max_val_count30\n    local max_val_count31\n    local max_val_count32\n\
    \    local max_val_count33\n    local max_val_count34\n    local max_val_count35\n\
    \    local max_val_count36\n    local max_val_count37\n    local max_val_count38\n\
    \    local max_val_count39\n    local max_val_count40\n    local max_val_count41\n\
    \    local max_val_count42\n    local max_val_count43\n    local max_val_count44\n\
    \    local max_val_count45\n    local max_val_count46\n    local max_val_count47\n\
    \    local max_val_count48\n    local max_val_count49\n    local max_val_count50\n\
    \    local max_val_count51\n    local max_val_count52\n    local max_val_count53\n\
    \    local max_val_count54\n    local max_val_count55\n    local max_val_count56\n\
    \    local max_val_count57\n    local max_val_count58\n    local max_val_count59\n\
    \    local max_val_count60\n    local max_val_count61\n    local max_val_count62\n\
    \    local max_val_count63\n    local max_val_count\n}\n\ncandidate() {\n    maximum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"\
    -4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate\
    \ \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1\
    \ 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"\
    4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13\
    \ -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n\
    \    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\"\
    \ \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n\
    \    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxValue\n\
    \    local maxIndexValue\n    local maxIndexValueIndex\n    local maxIndexValueIndex2\n\
    \    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n\
    \    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n\
    \    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n\
    \    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n\
    \    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n\
    \    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n\
    \    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n\
    \    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n\
    \    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n\
    \    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n\
    \    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n\
    \    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n\
    \    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n\
    \    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n\
    \    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n\
    \    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n\
    \    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n\
    \    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n\
    \    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n    local maxIndexValue\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ len=${#arr[@]}\n    local max\n    local i\n    local j\n    local tmp\n\n \
    \   # Sort the array\n    for ((i = 0; i < len; i++)); do\n        for ((j = i\
    \ + 1; j < len; j++)); do\n            if (( ${arr[i]} > ${arr[j]} )) ; then\n\
    \                tmp=${arr[i]}\n                arr[i]=${arr[j]}\n           \
    \     arr[j]=${tmp}\n            fi\n        done\n    done\n\n    # Get the maximum\
    \ k elements\n    for ((i = 0; i < k; i++)); do\n        max=${arr[i]}\n     \
    \   for ((j = i + 1; j < len; j++)); do\n            if (( ${arr[j]} > max ))\
    \ ; then\n                max=${arr[j]}\n            fi\n        done\n      \
    \  arr[i]=${max}\n    done\n\n    # Print the result\n    for ((i = 0; i < len;\
    \ i++)); do\n        echo ${arr[i]}\n    done\n}\n\ncandidate() {\n    maximum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"\
    -4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate\
    \ \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1\
    \ 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"\
    4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13\
    \ -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n\
    \    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\"\
    \ \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n\
    \    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max_arr=()\n    local max_k=0\n    local i\n    local j\n    local tmp\n   \
    \ local len\n    len=${#arr[@]}\n    for (( i=0; i<$len; i++ )); do\n        tmp=${arr[i]}\n\
    \        if (( tmp > max_k )); then\n            max_k=$tmp\n            max_arr=()\n\
    \            max_arr+=( $tmp )\n        fi\n    done\n    for (( j=0; j<$k; j++\
    \ )); do\n        tmp=${max_arr[$j]}\n        max_arr[$j]=$tmp\n    done\n   \
    \ echo ${max_arr[@]}\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxValue\n    local maxIndexValue\n\
    \    local maxIndexValueIndex\n    local maxIndexValueIndex2\n    local maxIndexValueIndex3\n\
    \    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n    local maxIndexValueIndex6\n\
    \    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n    local maxIndexValueIndex9\n\
    \    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n    local maxIndexValueIndex12\n\
    \    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n    local maxIndexValueIndex15\n\
    \    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n    local maxIndexValueIndex18\n\
    \    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n    local maxIndexValueIndex21\n\
    \    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n    local maxIndexValueIndex24\n\
    \    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n    local maxIndexValueIndex27\n\
    \    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n    local maxIndexValueIndex30\n\
    \    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n    local maxIndexValueIndex33\n\
    \    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n    local maxIndexValueIndex36\n\
    \    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n    local maxIndexValueIndex39\n\
    \    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n    local maxIndexValueIndex42\n\
    \    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n    local maxIndexValueIndex45\n\
    \    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n    local maxIndexValueIndex48\n\
    \    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n    local maxIndexValueIndex51\n\
    \    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n    local maxIndexValueIndex54\n\
    \    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n    local maxIndexValueIndex57\n\
    \    local maxIndexValueIndex58\n    local maxIndexValueIndex59\n    \n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnumlen\n    local maxnumlen2\n    local maxnumlen3\n    local maxnumlen4\n\
    \    local maxnumlen5\n    local maxnumlen6\n    local maxnumlen7\n    local maxnumlen8\n\
    \    local maxnumlen9\n    local maxnumlen10\n    local maxnumlen11\n    local\
    \ maxnumlen12\n    local maxnumlen13\n    local maxnumlen14\n    local maxnumlen15\n\
    \    local maxnumlen16\n    local maxnumlen17\n    local maxnumlen18\n    local\
    \ maxnumlen19\n    local maxnumlen20\n    local maxnumlen21\n    local maxnumlen22\n\
    \    local maxnumlen23\n    local maxnumlen24\n    local maxnumlen25\n    local\
    \ maxnumlen26\n    local maxnumlen27\n    local maxnumlen28\n    local maxnumlen29\n\
    \    local maxnumlen30\n    local maxnumlen31\n    local maxnumlen32\n    local\
    \ maxnumlen33\n    local maxnumlen34\n    local maxnumlen35\n    local maxnumlen36\n\
    \    local maxnumlen37\n    local maxnumlen38\n    local maxnumlen39\n    local\
    \ maxnumlen40\n    local maxnumlen41\n    local maxnumlen42\n    local maxnumlen43\n\
    \    local maxnumlen44\n    local maxnumlen45\n    local maxnumlen46\n    local\
    \ maxnumlen47\n    local maxnumlen48\n    local maxnumlen49\n    local maxnumlen50\n\
    \    local maxnumlen51\n    local maxnumlen52\n    local maxnumlen53\n    local\
    \ maxnumlen54\n    local maxnumlen55\n    local maxnumlen56\n    local maxnumlen57\n\
    \    local maxnumlen58\n    local maxnumlen59\n    local maxnumlen60\n    local\
    \ maxnumlen61\n    local maxnumlen62\n    local maxnumlen63\n    local maxnumlen64\n\
    \    local maxnumlen65\n    local maxnumlen66\n    local maxnumlen67\n    local\
    \ maxnumlen68\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 2
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr k\n    arr=$1\n    k=$2\n    local\
    \ i max\n    max=$(echo $arr | wc -w)\n    for ((i=1; i<=$((k-1)); i++)); do\n\
    \        if [[ ${arr[$i]} -gt ${arr[$((i-1))]} ]]; then\n            arr[$i]=${arr[$((i-1))]}\n\
    \        fi\n    done\n    for ((i=1; i<=$((k-1)); i++)); do\n        if [[ ${arr[$i]}\
    \ -gt ${arr[$((i-1))]} ]]; then\n            arr[$i]=${arr[$((i-1))]}\n      \
    \  fi\n    done\n    for ((i=1; i<=$((k-1)); i++)); do\n        if [[ ${arr[$i]}\
    \ -gt ${arr[$((i-1))]} ]]; then\n            arr[$i]=${arr[$((i-1))]}\n      \
    \  fi\n    done\n    for ((i=1; i<=$((k-1)); i++)); do\n        if [[ ${arr[$i]}\
    \ -gt ${arr[$((i-1))]} ]]; then\n            arr[$i]=${arr[$((i-1))]}\n      \
    \  fi\n    done\n    for ((i=1; i<=$((k-1)); i++)); do\n        if [[ ${arr[$i]}\
    \ -gt ${arr[$((i-1))]} ]]; then\n            arr[$i]=${arr[$((i-1))]}\n      \
    \  fi\n    done\n    for ((i=1; i<=$((k-1)); i++)); do\n        if [[ ${arr[$i]}\
    \ -gt ${arr[$((i-1))]} ]]; then\n            arr[$i]=${arr[$((i-1))]}\n      \
    \  fi\n    done\n    for ((i=1; i<=$((k-1)); i++)); do\n        if [[ ${arr[$i]}\
    \ -gt ${arr[$((i-1))]} ]]; then\n            arr[$i]=${arr[$((i-1))]}\n      \
    \  fi\n    done\n    for ((i=1; i<=$((k-1)); i++)); do\n        if [[ ${arr[$i]}\
    \ -gt ${arr[$((i-1))]} ]]; then\n            arr[$i]=${arr[$((i-1))]}\n      \
    \  fi\n    done\n    for ((i=1; i<=$((k-1)); i++)); do\n        if [[ ${arr[$i]}\
    \ -gt ${arr[$((i-1))]} ]]; then\n            arr[$i]=${arr[$((i-1))]}\n      \
    \  fi\n    done\n    for ((i=1; i<=$((k-1)); i++)); do\n}\n\ncandidate() {\n \
    \   maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptrqsuhiy.sh: line 66: syntax error near unexpected token `}''

    /tmp/tmptrqsuhiy.sh: line 66: `}''

    '
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxVal\n    local maxIndexVal\n\
    \    local maxIndexVal2\n    local maxIndexVal3\n    local maxIndexVal4\n    local\
    \ maxIndexVal5\n    local maxIndexVal6\n    local maxIndexVal7\n    local maxIndexVal8\n\
    \    local maxIndexVal9\n    local maxIndexVal10\n    local maxIndexVal11\n  \
    \  local maxIndexVal12\n    local maxIndexVal13\n    local maxIndexVal14\n   \
    \ local maxIndexVal15\n    local maxIndexVal16\n    local maxIndexVal17\n    local\
    \ maxIndexVal18\n    local maxIndexVal19\n    local maxIndexVal20\n    local maxIndexVal21\n\
    \    local maxIndexVal22\n    local maxIndexVal23\n    local maxIndexVal24\n \
    \   local maxIndexVal25\n    local maxIndexVal26\n    local maxIndexVal27\n  \
    \  local maxIndexVal28\n    local maxIndexVal29\n    local maxIndexVal30\n   \
    \ local maxIndexVal31\n    local maxIndexVal32\n    local maxIndexVal33\n    local\
    \ maxIndexVal34\n    local maxIndexVal35\n    local maxIndexVal36\n    local maxIndexVal37\n\
    \    local maxIndexVal38\n    local maxIndexVal39\n    local maxIndexVal40\n \
    \   local maxIndexVal41\n    local maxIndexVal42\n    local maxIndexVal43\n  \
    \  local maxIndexVal44\n    local maxIndexVal45\n    local maxIndexVal46\n   \
    \ local maxIndexVal47\n    local maxIndexVal48\n    local maxIndexVal49\n    local\
    \ maxIndexVal50\n    local maxIndexVal51\n    local maxIndexVal52\n    local maxIndexVal53\n\
    \    local maxIndexVal54\n    local maxIndexVal55\n    local maxIndexVal56\n \
    \   local maxIndexVal57\n    local maxIndexVal58\n    local maxIndexVal59\n  \
    \  local maxIndexVal60\n    local maxIndexVal61\n    local maxIndexVal62\n   \
    \ local maxIndexVal63\n    local maxIndexVal64\n    local maxIndexVal65\n    local\
    \ maxIndexVal66\n    local maxIndexVal67\n    local maxIndexVal68\n    local max\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local len=${#arr[@]}\n\
    \    local max\n    local i\n    local j\n    local maxIndex\n    local maxVal\n\
    \    local maxIndex2\n    local maxVal2\n    local maxIndex3\n    local maxVal3\n\
    \    local maxIndex4\n    local maxVal4\n    local maxIndex5\n    local maxVal5\n\
    \    local maxIndex6\n    local maxVal6\n    local maxIndex7\n    local maxVal7\n\
    \    local maxIndex8\n    local maxVal8\n    local maxIndex9\n    local maxVal9\n\
    \    local maxIndex10\n    local maxVal10\n    local maxIndex11\n    local maxVal11\n\
    \    local maxIndex12\n    local maxVal12\n    local maxIndex13\n    local maxVal13\n\
    \    local maxIndex14\n    local maxVal14\n    local maxIndex15\n    local maxVal15\n\
    \    local maxIndex16\n    local maxVal16\n    local maxIndex17\n    local maxVal17\n\
    \    local maxIndex18\n    local maxVal18\n    local maxIndex19\n    local maxVal19\n\
    \    local maxIndex20\n    local maxVal20\n    local maxIndex21\n    local maxVal21\n\
    \    local maxIndex22\n    local maxVal22\n    local maxIndex23\n    local maxVal23\n\
    \    local maxIndex24\n    local maxVal24\n    local maxIndex25\n    local maxVal25\n\
    \    local maxIndex26\n    local maxVal26\n    local maxIndex27\n    local maxVal27\n\
    \    local maxIndex28\n    local maxVal28\n    local maxIndex29\n    local maxVal29\n\
    \    local maxIndex30\n    local maxVal30\n    local maxIndex31\n    local maxVal31\n\
    \    local maxIndex32\n    local maxVal32\n    local maxIndex33\n    local maxVal33\n\
    \    local maxIndex34\n    local maxVal34\n    local maxIndex35\n    local maxVal35\n\
    \    local maxIndex36\n    local maxVal36\n    local maxIndex37\n    local maxVal37\n\
    \    local maxIndex38\n    local maxVal38\n    local maxIndex39\n    local maxVal39\n\
    \    local maxIndex40\n    local maxVal40\n    \n}\n\ncandidate() {\n    maximum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"\
    -4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate\
    \ \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1\
    \ 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"\
    4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13\
    \ -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n\
    \    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\"\
    \ \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n\
    \    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n\n    len=${#arr[@]}\n    if [ $len\
    \ -gt $k ]\n    then\n        echo \"$k exceeds the length of $len\"\n       \
    \ return 1\n    fi\n\n    max=$arr[0]\n    for ((i=1; i<$len; i++)); do\n    \
    \    if [ $arr[$i] -gt $max ]\n        then\n            max=$arr[$i]\n      \
    \  fi\n    done\n\n    for ((j=0; j<$k; j++)); do\n        arr[$j]=$max\n    done\n\
    \n    arr[$k]=$max\n    echo ${arr[@]}\n}\n\ncandidate() {\n    maximum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\"\
    \ ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"\
    -3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxidx\n    local maxval\n    local maxidx2\n    local maxval2\n    local\
    \ maxidx3\n    local maxval3\n    local maxidx4\n    local maxval4\n    local\
    \ maxidx5\n    local maxval5\n    local maxidx6\n    local maxval6\n    local\
    \ maxidx7\n    local maxval7\n    local maxidx8\n    local maxval8\n    local\
    \ maxidx9\n    local maxval9\n    local maxidx10\n    local maxval10\n    local\
    \ maxidx11\n    local maxval11\n    local maxidx12\n    local maxval12\n    local\
    \ maxidx13\n    local maxval13\n    local maxidx14\n    local maxval14\n    local\
    \ maxidx15\n    local maxval15\n    local maxidx16\n    local maxval16\n    local\
    \ maxidx17\n    local maxval17\n    local maxidx18\n    local maxval18\n    local\
    \ maxidx19\n    local maxval19\n    local maxidx20\n    local maxval20\n    local\
    \ maxidx21\n    local maxval21\n    local maxidx22\n    local maxval22\n    local\
    \ maxidx23\n    local maxval23\n    local maxidx24\n    local maxval24\n    local\
    \ maxidx25\n    local maxval25\n    local maxidx26\n    local maxval26\n    local\
    \ maxidx27\n    local maxval27\n    local maxidx28\n    local maxval28\n    local\
    \ maxidx29\n    local maxval29\n    local maxidx30\n    local maxval30\n    local\
    \ maxidx31\n    local maxval31\n    local maxidx32\n    local maxval32\n    local\
    \ maxidx33\n    local maxval33\n    local maxidx34\n    local maxval34\n    local\
    \ maxidx35\n    local maxval35\n    local maxidx36\n    local maxval36\n    local\
    \ maxidx37\n    local maxval37\n    local maxidx38\n    local maxval38\n    local\
    \ maxidx39\n    local maxval39\n    local maxidx40\n    local max\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n    local\
    \ maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n \
    \   local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n    local max\n}\n\n\
    candidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ len=${#arr[@]}\n    local max\n    local i\n    local j\n    local maxIndex\n\
    \    local maxVal\n    local maxIndexVal\n    local maxIndexVal2\n    local maxIndexVal3\n\
    \    local maxIndexVal4\n    local maxIndexVal5\n    local maxIndexVal6\n    local\
    \ maxIndexVal7\n    local maxIndexVal8\n    local maxIndexVal9\n    local maxIndexVal10\n\
    \    local maxIndexVal11\n    local maxIndexVal12\n    local maxIndexVal13\n \
    \   local maxIndexVal14\n    local maxIndexVal15\n    local maxIndexVal16\n  \
    \  local maxIndexVal17\n    local maxIndexVal18\n    local maxIndexVal19\n   \
    \ local maxIndexVal20\n    local maxIndexVal21\n    local maxIndexVal22\n    local\
    \ maxIndexVal23\n    local maxIndexVal24\n    local maxIndexVal25\n    local maxIndexVal26\n\
    \    local maxIndexVal27\n    local maxIndexVal28\n    local maxIndexVal29\n \
    \   local maxIndexVal30\n    local maxIndexVal31\n    local maxIndexVal32\n  \
    \  local maxIndexVal33\n    local maxIndexVal34\n    local maxIndexVal35\n   \
    \ local maxIndexVal36\n    local maxIndexVal37\n    local maxIndexVal38\n    local\
    \ maxIndexVal39\n    local maxIndexVal40\n    local maxIndexVal41\n    local maxIndexVal42\n\
    \    local maxIndexVal43\n    local maxIndexVal44\n    local maxIndexVal45\n \
    \   local maxIndexVal46\n    local maxIndexVal47\n    local maxIndexVal48\n  \
    \  local maxIndexVal49\n    local maxIndexVal50\n    local maxIndexVal51\n   \
    \ local maxIndexVal52\n    local maxIndexVal53\n    local maxIndexVal54\n    local\
    \ maxIndexVal55\n    local maxIndexVal56\n    local maxIndexVal57\n    local maxIndexVal58\n\
    \    local maxIndexVal59\n    local maxIndexVal60\n    local maxIndexVal61\n \
    \   local maxIndexVal62\n    local maxIndexVal63\n    local maxIndexVal64\n  \
    \  local maxIndexVal65\n    local maxIndexVal66\n    local maxIndexVal\n}\n\n\
    candidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxval\n\
    \    local maxindex\n    local maxindex2\n    local maxindex3\n    local maxindex4\n\
    \    local maxindex5\n    local maxindex6\n    local maxindex7\n    local maxindex8\n\
    \    local maxindex9\n    local maxindex10\n    local maxindex11\n    local maxindex12\n\
    \    local maxindex13\n    local maxindex14\n    local maxindex15\n    local maxindex16\n\
    \    local maxindex17\n    local maxindex18\n    local maxindex19\n    local maxindex20\n\
    \    local maxindex21\n    local maxindex22\n    local maxindex23\n    local maxindex24\n\
    \    local maxindex25\n    local maxindex26\n    local maxindex27\n    local maxindex28\n\
    \    local maxindex29\n    local maxindex30\n    local maxindex31\n    local maxindex32\n\
    \    local maxindex33\n    local maxindex34\n    local maxindex35\n    local maxindex36\n\
    \    local maxindex37\n    local maxindex38\n    local maxindex39\n    local maxindex40\n\
    \    local maxindex41\n    local maxindex42\n    local maxindex43\n    local maxindex44\n\
    \    local maxindex45\n    local maxindex46\n    local maxindex47\n    local maxindex48\n\
    \    local maxindex49\n    local maxindex50\n    local maxindex51\n    local maxindex52\n\
    \    local maxindex53\n    local maxindex54\n    local maxindex55\n    local maxindex56\n\
    \    local maxindex57\n    local maxindex58\n    local maxindex59\n    local maxindex60\n\
    \    local maxindex61\n    local maxindex62\n    local maxindex63\n    local maxindex64\n\
    \    local maxindex65\n    local maxindex66\n    local maxindex67\n    local maxindex68\n\
    \    local maxindex69\n    local maxindex70\n    local maxindex71\n    local maxindex72\n\
    \    local maxindex73\n    local maxindex74\n    local maxindex75\n    local maxindex76\n\
    \    local maxindex77\n    local maxindex78\n    local maxindex79\n    \n}\n\n\
    candidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxnum\n    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n\
    \    local maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n\
    \    local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=(\"${@}\")\n    local k=\"${2}\"\
    \n    local result=()\n    local count=0\n    local max=0\n    local i\n    local\
    \ j\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp\n}\n\
    \ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local tmp\n    local len\n\n    len=${#arr[@]}\n\
    \    if [ $len -gt $k ]\n    then\n        echo \"$k exceeds the length of ${len}\"\
    \n        return 1\n    fi\n\n    max=${arr[0]}\n    for ((i=1; i<$k; i++)); do\n\
    \        if [ \"${arr[i]}\" -gt \"$max\" ]\n        then\n            max=${arr[i]}\n\
    \        fi\n    done\n\n    for ((j=0; j<$k; j++)); do\n        tmp=${arr[j]}\n\
    \        for ((i=j+1; i<$len; i++)); do\n            if [ \"${arr[i]}\" -gt \"\
    $tmp\" ]\n            then\n                tmp=${arr[i]}\n            fi\n  \
    \      done\n        arr[j]=$tmp\n    done\n\n    arr=( \"${arr[@]}\" )\n    echo\
    \ ${arr[@]}\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"\
    4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max_arr\n\
    \    local max_k\n    local i\n    local j\n    local max_i\n    local max_j\n\
    \    local max_val\n    local max_val_i\n    local max_val_j\n    local max_val_k\n\
    \    local max_val_k_index\n    local max_val_k_i\n    local max_val_k_j\n   \
    \ local max_val_k_k\n    local max_val_k_k_i\n    local max_val_k_k_j\n    local\
    \ max_val_k_k_k\n    local max_val_k_k_k_i\n    local max_val_k_k_k_j\n    local\
    \ max_val_k_k_k_k\n    local max_val_k_k_k_k_i\n    local max_val_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k\n    local max_val_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_k_i\n    local\
    \ max_val_k_k_k_k_k_k_k_j\n    local max_val_k_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_k_i\n\
    \    local max_val_k_k_k_k_k_k_k_j\n    local max_val_k_k_k_k_k_k_k_k\n    local\
    \ max_val_k_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_k_j\n    local max_val_k_k_k_k_k_k_k_k\n\
    \    local max_val_k_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_k_j\n    local\
    \ max_val_k_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k_k\n    local max_val_\n}\n\ncandidate() {\n \
    \   maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxValue\n\
    \    local maxIndexValue\n    local maxIndexValueIndex\n    local maxIndexValueIndex2\n\
    \    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n\
    \    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n\
    \    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n\
    \    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n\
    \    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n\
    \    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n\
    \    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n\
    \    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n\
    \    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n\
    \    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n\
    \    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n\
    \    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n\
    \    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n\
    \    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n\
    \    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n\
    \    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n\
    \    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n\
    \    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n\
    \    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n    local maxIndexValue\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local tmp\n    local len\n\n    len=${#arr[@]}\n\
    \    if [ $len -gt $k ]\n    then\n        echo \"$k is too large\"\n        return\
    \ 1\n    fi\n    \n    for (( i=0; i<$k; i++ ))\n    do\n        max=$(( ${arr[i]}\
    \ > max ? ${arr[i]} : max ))\n    done\n    \n    for (( j=0; j<$k; j++ ))\n \
    \   do\n        tmp=${arr[j]}\n        arr[j]=${arr[$j]}\n        arr[$j]=$tmp\n\
    \    done\n    \n    for (( i=0; i<$k; i++ ))\n    do\n        arr[i]=${arr[i]}\n\
    \    done\n    \n    echo ${arr[@]}\n}\n\ncandidate() {\n    maximum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\"\
    \ ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"\
    -3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ len=${#arr[@]}\n    local max\n    local i\n    local j\n    local tmp\n   \
    \ local maxIndex\n    local maxValue\n    local maxIndexValue\n    local maxIndexValue2\n\
    \    local maxIndexValue3\n    local maxIndexValue4\n    local maxIndexValue5\n\
    \    local maxIndexValue6\n    local maxIndexValue7\n    local maxIndexValue8\n\
    \    local maxIndexValue9\n    local maxIndexValue10\n    local maxIndexValue11\n\
    \    local maxIndexValue12\n    local maxIndexValue13\n    local maxIndexValue14\n\
    \    local maxIndexValue15\n    local maxIndexValue16\n    local maxIndexValue17\n\
    \    local maxIndexValue18\n    local maxIndexValue19\n    local maxIndexValue20\n\
    \    local maxIndexValue21\n    local maxIndexValue22\n    local maxIndexValue23\n\
    \    local maxIndexValue24\n    local maxIndexValue25\n    local maxIndexValue26\n\
    \    local maxIndexValue27\n    local maxIndexValue28\n    local maxIndexValue29\n\
    \    local maxIndexValue30\n    local maxIndexValue31\n    local maxIndexValue32\n\
    \    local maxIndexValue33\n    local maxIndexValue34\n    local maxIndexValue35\n\
    \    local maxIndexValue36\n    local maxIndexValue37\n    local maxIndexValue38\n\
    \    local maxIndexValue39\n    local maxIndexValue40\n    local maxIndexValue41\n\
    \    local maxIndexValue42\n    local maxIndexValue43\n    local maxIndexValue44\n\
    \    local maxIndexValue45\n    local maxIndexValue46\n    local maxIndexValue47\n\
    \    local maxIndexValue48\n    local maxIndexValue49\n    local maxIndexValue50\n\
    \    local maxIndexValue51\n    local maxIndexValue52\n    local maxIndexValue53\n\
    \    local maxIndexValue54\n    local maxIndexValue55\n    local maxIndexValue56\n\
    \    local maxIndexValue57\n    local maxIndexValue58\n    local maxIndexValue59\n\
    \    local maxIndexValue60\n    local maxIndexValue61\n    local maxIndexValue62\n\
    \    local maxIndexValue63\n    local maxIndexValue64\n    local maxIndexValue65\n\
    \    local maxIndexValue66\n    \n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n\
    \    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2\
    \ 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ output\n    local i\n    local j\n    local max\n    local maxIndex\n    local\
    \ maxValue\n    local maxIndexValue\n    local maxIndexValueIndex\n    local maxIndexValueIndex2\n\
    \    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n\
    \    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n\
    \    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n\
    \    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n\
    \    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n\
    \    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n\
    \    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n\
    \    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n\
    \    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n\
    \    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n\
    \    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n\
    \    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n\
    \    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n\
    \    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n\
    \    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n\
    \    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n\
    \    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n\
    \    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n\
    \    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n    local \n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n    local\
    \ maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n \
    \   local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n    local max\n}\n\n\
    candidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxValue\n    local maxIndexValue\n\
    \    local maxIndexValueIndex\n    local maxIndexValueIndex2\n    local maxIndexValueIndex3\n\
    \    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n    local maxIndexValueIndex6\n\
    \    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n    local maxIndexValueIndex9\n\
    \    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n    local maxIndexValueIndex12\n\
    \    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n    local maxIndexValueIndex15\n\
    \    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n    local maxIndexValueIndex18\n\
    \    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n    local maxIndexValueIndex21\n\
    \    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n    local maxIndexValueIndex24\n\
    \    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n    local maxIndexValueIndex27\n\
    \    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n    local maxIndexValueIndex30\n\
    \    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n    local maxIndexValueIndex33\n\
    \    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n    local maxIndexValueIndex36\n\
    \    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n    local maxIndexValueIndex39\n\
    \    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n    local maxIndexValueIndex42\n\
    \    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n    local maxIndexValueIndex45\n\
    \    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n    local maxIndexValueIndex48\n\
    \    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n    local maxIndexValueIndex51\n\
    \    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n    local maxIndexValueIndex54\n\
    \    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n    local maxIndexValueIndex57\n\
    \    local maxIndexValueIndex58\n    local maxIndexValueIndex59\n    \n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnumlen\n    local maxnumnum\n    local maxnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n    local maxnumnumnumlen\n\
    \    local maxnumnumnumlen\n    local maxnumnumnumlen\n}\n\ncandidate() {\n  \
    \  maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"\
    3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n   \
    \ [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"\
    123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20\
    \ 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\"\
    \ \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"\
    2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10\
    \ 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxValue\n\
    \    local maxIndexValue\n    local maxIndexValueIndex\n    local maxIndexValueIndex2\n\
    \    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n\
    \    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n\
    \    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n\
    \    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n\
    \    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n\
    \    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n\
    \    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n\
    \    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n\
    \    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n\
    \    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n\
    \    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n\
    \    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n\
    \    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n\
    \    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n\
    \    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n\
    \    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n\
    \    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n\
    \    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n\
    \    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n    local maxIndexValue\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n    local\
    \ maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n \
    \   local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n    local max\n}\n\n\
    candidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max_arr\n\
    \    local max_k\n    local i\n    local j\n    local len\n    local max_val\n\
    \    local max_index\n    local max_index2\n    local max_index3\n    local max_index4\n\
    \    local max_index5\n    local max_index6\n    local max_index7\n    local max_index8\n\
    \    local max_index9\n    local max_index10\n    local max_index11\n    local\
    \ max_index12\n    local max_index13\n    local max_index14\n    local max_index15\n\
    \    local max_index16\n    local max_index17\n    local max_index18\n    local\
    \ max_index19\n    local max_index20\n    local max_index21\n    local max_index22\n\
    \    local max_index23\n    local max_index24\n    local max_index25\n    local\
    \ max_index26\n    local max_index27\n    local max_index28\n    local max_index29\n\
    \    local max_index30\n    local max_index31\n    local max_index32\n    local\
    \ max_index33\n    local max_index34\n    local max_index35\n    local max_index36\n\
    \    local max_index37\n    local max_index38\n    local max_index39\n    local\
    \ max_index40\n    local max_index41\n    local max_index42\n    local max_index43\n\
    \    local max_index44\n    local max_index45\n    local max_index46\n    local\
    \ max_index47\n    local max_index48\n    local max_index49\n    local max_index50\n\
    \    local max_index51\n    local max_index52\n    local max_index53\n    local\
    \ max_index54\n    local max_index55\n    local max_index56\n    local max_index57\n\
    \    local max_index58\n    local max_index59\n    local max_index60\n    local\
    \ max_index61\n    local max_index62\n    local max_index63\n    local max_index64\n\
    \    local max_index65\n    local max_index66\n    local max_index67\n    local\
    \ max_index68\n    local max_index69\n    local max_index70\n    local max_index71\n\
    \    local max_index72\n    local max_index73\n    local max_index74\n    local\
    \ max_index75\n    local max_index76\n    local max_index77\n    local max_index78\n\
    \    local max_index79\n\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxidx\n    local maxval\n    local maxidx2\n    local maxval2\n    local\
    \ maxidx3\n    local maxval3\n    local maxidx4\n    local maxval4\n    local\
    \ maxidx5\n    local maxval5\n    local maxidx6\n    local maxval6\n    local\
    \ maxidx7\n    local maxval7\n    local maxidx8\n    local maxval8\n    local\
    \ maxidx9\n    local maxval9\n    local maxidx10\n    local maxval10\n    local\
    \ maxidx11\n    local maxval11\n    local maxidx12\n    local maxval12\n    local\
    \ maxidx13\n    local maxval13\n    local maxidx14\n    local maxval14\n    local\
    \ maxidx15\n    local maxval15\n    local maxidx16\n    local maxval16\n    local\
    \ maxidx17\n    local maxval17\n    local maxidx18\n    local maxval18\n    local\
    \ maxidx19\n    local maxval19\n    local maxidx20\n    local maxval20\n    local\
    \ maxidx21\n    local maxval21\n    local maxidx22\n    local maxval22\n    local\
    \ maxidx23\n    local maxval23\n    local maxidx24\n    local maxval24\n    local\
    \ maxidx25\n    local maxval25\n    local maxidx26\n    local maxval26\n    local\
    \ maxidx27\n    local maxval27\n    local maxidx28\n    local maxval28\n    local\
    \ maxidx29\n    local maxval29\n    local maxidx30\n    local maxval30\n    local\
    \ maxidx31\n    local maxval31\n    local maxidx32\n    local maxval32\n    local\
    \ maxidx33\n    local maxval33\n    local maxidx34\n    local maxval34\n    local\
    \ maxidx35\n    local maxval35\n    local maxidx36\n    local maxval36\n    local\
    \ maxidx37\n    local maxval37\n    local maxidx38\n    local maxval38\n    local\
    \ maxidx39\n    local maxval39\n    local maxidx40\n    local max\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local sortedArr\n\
    \    local max\n    local i\n    sortedArr=($(sort -n <<< \"${arr[@]}\" | head\
    \ -n ${k}))\n    max=${sortedArr[${#sortedArr[@]} - 1]}\n    for (( i=1; i<${#sortedArr[@]};\
    \ i++ )); do\n        if [[ ${sortedArr[${i}]} -gt ${max} ]]; then\n         \
    \   max=${sortedArr[${i}]}\n        fi\n    done\n    echo \"${sortedArr[@]:0:${k}}\"\
    \ # print first k elements\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxValue\n\
    \    local maxIndexValue\n    local maxIndexValueIndex\n    local maxIndexValueIndex2\n\
    \    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n\
    \    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n\
    \    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n\
    \    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n\
    \    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n\
    \    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n\
    \    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n\
    \    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n\
    \    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n\
    \    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n\
    \    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n\
    \    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n\
    \    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n\
    \    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n\
    \    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n\
    \    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n\
    \    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n\
    \    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n\
    \    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n    local maxIndexValue\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local sortedArr\n\
    \    local max\n    local i\n    sortedArr=$( echo $arr | tr \" \" \"\\n\" | sort\
    \ -n )\n    max=$( echo $sortedArr | wc -l )\n    sortedArr=$( echo $sortedArr\
    \ | sed 's/^/'$k'/' ) # k is now the length of the array\n    sortedArr=$( echo\
    \ $sortedArr | sed 's/$/\\n/' ) # k is now the length of the array\n    sortedArr=$(\
    \ echo $sortedArr | sed 's/^/'$max'/' ) # k is now the length of the array\n \
    \   echo $sortedArr\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxnum\n    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n\
    \    local maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n\
    \    local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxVal\n\
    \    local maxIndex2\n    local maxVal2\n    local maxIndex3\n    local maxVal3\n\
    \    local maxIndex4\n    local maxVal4\n    local maxIndex5\n    local maxVal5\n\
    \    local maxIndex6\n    local maxVal6\n    local maxIndex7\n    local maxVal7\n\
    \    local maxIndex8\n    local maxVal8\n    local maxIndex9\n    local maxVal9\n\
    \    local maxIndex10\n    local maxVal10\n    local maxIndex11\n    local maxVal11\n\
    \    local maxIndex12\n    local maxVal12\n    local maxIndex13\n    local maxVal13\n\
    \    local maxIndex14\n    local maxVal14\n    local maxIndex15\n    local maxVal15\n\
    \    local maxIndex16\n    local maxVal16\n    local maxIndex17\n    local maxVal17\n\
    \    local maxIndex18\n    local maxVal18\n    local maxIndex19\n    local maxVal19\n\
    \    local maxIndex20\n    local maxVal20\n    local maxIndex21\n    local maxVal21\n\
    \    local maxIndex22\n    local maxVal22\n    local maxIndex23\n    local maxVal23\n\
    \    local maxIndex24\n    local maxVal24\n    local maxIndex25\n    local maxVal25\n\
    \    local maxIndex26\n    local maxVal26\n    local maxIndex27\n    local maxVal27\n\
    \    local maxIndex28\n    local maxVal28\n    local maxIndex29\n    local maxVal29\n\
    \    local maxIndex30\n    local maxVal30\n    local maxIndex31\n    local maxVal31\n\
    \    local maxIndex32\n    local maxVal32\n    local maxIndex33\n    local maxVal33\n\
    \    local maxIndex34\n    local maxVal34\n    local maxIndex35\n    local maxVal35\n\
    \    local maxIndex36\n    local maxVal36\n    local maxIndex37\n    local maxVal37\n\
    \    local maxIndex38\n    local maxVal38\n    local maxIndex39\n    local maxVal39\n\
    \    local maxIndex40\n    local maxVal40\n    local maxIndex41\n\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ len=${#arr[@]}\n    local max\n    local i\n    local j\n    local maxIndex\n\
    \    local maxVal\n    local maxIndex2\n    local maxVal2\n    local maxIndex3\n\
    \    local maxVal3\n    local maxIndex4\n    local maxVal4\n    local maxIndex5\n\
    \    local maxVal5\n    local maxIndex6\n    local maxVal6\n    local maxIndex7\n\
    \    local maxVal7\n    local maxIndex8\n    local maxVal8\n    local maxIndex9\n\
    \    local maxVal9\n    local maxIndex10\n    local maxVal10\n    local maxIndex11\n\
    \    local maxVal11\n    local maxIndex12\n    local maxVal12\n    local maxIndex13\n\
    \    local maxVal13\n    local maxIndex14\n    local maxVal14\n    local maxIndex15\n\
    \    local maxVal15\n    local maxIndex16\n    local maxVal16\n    local maxIndex17\n\
    \    local maxVal17\n    local maxIndex18\n    local maxVal18\n    local maxIndex19\n\
    \    local maxVal19\n    local maxIndex20\n    local maxVal20\n    local maxIndex21\n\
    \    local maxVal21\n    local maxIndex22\n    local maxVal22\n    local maxIndex23\n\
    \    local maxVal23\n    local maxIndex24\n    local maxVal24\n    local maxIndex25\n\
    \    local maxVal25\n    local maxIndex26\n    local maxVal26\n    local maxIndex27\n\
    \    local maxVal27\n    local maxIndex28\n    local maxVal28\n    local maxIndex29\n\
    \    local maxVal29\n    local maxIndex30\n    local maxVal30\n    local maxIndex31\n\
    \    local maxVal31\n    local maxIndex32\n    local maxVal32\n    local maxIndex33\n\
    \    local maxVal33\n    local maxIndex34\n    local maxVal34\n    local maxIndex35\n\
    \    local maxVal35\n    local maxIndex36\n    local maxVal36\n    local maxIndex37\n\
    \    local maxVal37\n    local maxIndex38\n    local maxVal38\n    local maxIndex39\n\
    \    local maxVal39\n    local maxIndex40\n    local maxVal\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnumlen\n    local maxnumstr\n    local maxnumstrlen\n    local maxnumstrlen2\n\
    \    local maxnumstrlen3\n    local maxnumstrlen4\n    local maxnumstrlen5\n \
    \   local maxnumstrlen6\n    local maxnumstrlen7\n    local maxnumstrlen8\n  \
    \  local maxnumstrlen9\n    local maxnumstrlen10\n    local maxnumstrlen11\n \
    \   local maxnumstrlen12\n    local maxnumstrlen13\n    local maxnumstrlen14\n\
    \    local maxnumstrlen15\n    local maxnumstrlen16\n    local maxnumstrlen17\n\
    \    local maxnumstrlen18\n    local maxnumstrlen19\n    local maxnumstrlen20\n\
    \    local maxnumstrlen21\n    local maxnumstrlen22\n    local maxnumstrlen23\n\
    \    local maxnumstrlen24\n    local maxnumstrlen25\n    local maxnumstrlen26\n\
    \    local maxnumstrlen27\n    local maxnumstrlen28\n    local maxnumstrlen29\n\
    \    local maxnumstrlen30\n    local maxnumstrlen31\n    local maxnumstrlen32\n\
    \    local maxnumstrlen33\n    local maxnumstrlen34\n    local maxnumstrlen35\n\
    \    local maxnumstrlen36\n    local maxnumstrlen37\n    local maxnumstrlen38\n\
    \    local maxnumstrlen39\n    local maxnumstrlen40\n    local maxnumstrlen41\n\
    \    local maxnumstrlen42\n    local maxnumstrlen43\n    local maxnumstrlen44\n\
    \    local maxnumstrlen45\n    local maxnumstrlen46\n    local maxnumstrlen47\n\
    \    local maxnumstrlen48\n    local maxnumstrlen49\n    local maxnumstrlen50\n\
    \    local maxnumstrlen51\n    local maxnumstrlen52\n    local maxnumstrlen53\n\
    \    local maxnumstrlen54\n    local maxnumstrlen55\n    local maxnumstrlen56\n\
    \    local maxnumstrlen57\n    local maxnumstrlen58\n}\n\ncandidate() {\n    maximum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"\
    -4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate\
    \ \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1\
    \ 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"\
    4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13\
    \ -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n\
    \    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\"\
    \ \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n\
    \    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max_arr=()\n\
    \    local max_k=0\n    local i\n    local j\n    local max_i\n    local max_j\n\
    \    local max_val\n    local max_val_i\n    local max_val_j\n    local max_val_k\n\
    \    local max_val_k_index\n    local max_val_k_i\n    local max_val_k_j\n   \
    \ local max_val_k_k\n    local max_val_k_k_i\n    local max_val_k_k_j\n    local\
    \ max_val_k_k_k\n    local max_val_k_k_k_i\n    local max_val_k_k_k_j\n    local\
    \ max_val_k_k_k_k\n    local max_val_k_k_k_k_i\n    local max_val_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k\n    local max_val_k_k_k_k_k\n    local max_val_k_k_k_k_k_i\n\
    \    local max_val_k_k_k_k_k_j\n    local max_val_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k\n\
    \    local max_val_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_j\n    local max_val_k_k_k_k_k_k\n\
    \    local max_val_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_j\n\
    \    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_k\n\
    \    local max_val_k_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_k_j\n    local\
    \ max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_k\n\
    \    local max_val_k_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_k_j\n    local\
    \ max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_k\n\
    \    local max_val_k_k_k_k_k_k_k_i\n    local max_val_k_k_k_k_k_k_k_j\n    local\
    \ max_val_k_k_k_k_k_k_k_k\n    local max_val_k_k_k_k_k_k_k_k\n    local max_\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ output\n    local i\n    local j\n    local max\n    local maxIndex\n    local\
    \ maxValue\n    local maxCount\n    local count\n    local maxCountIndex\n   \
    \ local maxCountValue\n    local maxCountCount\n    local maxCountIndexCount\n\
    \    local maxCountValueCount\n    local maxCountCountValue\n    local maxCountIndexCountValue\n\
    \    local maxCountValueCountValue\n    local maxCountIndexCountValueValue\n \
    \   local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local maxCountValueCountValueValue\n    local maxCountIndexCountValueValue\n\
    \    local \n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"\
    4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local len=${#arr[@]}\n\
    \    local max\n    local i\n    local j\n    local tmp\n    local maxIndex\n\
    \    local maxVal\n    local maxIndex2\n    local maxVal2\n    local maxIndex3\n\
    \    local maxVal3\n    local maxIndex4\n    local maxVal4\n    local maxIndex5\n\
    \    local maxVal5\n    local maxIndex6\n    local maxVal6\n    local maxIndex7\n\
    \    local maxVal7\n    local maxIndex8\n    local maxVal8\n    local maxIndex9\n\
    \    local maxVal9\n    local maxIndex10\n    local maxVal10\n    local maxIndex11\n\
    \    local maxVal11\n    local maxIndex12\n    local maxVal12\n    local maxIndex13\n\
    \    local maxVal13\n    local maxIndex14\n    local maxVal14\n    local maxIndex15\n\
    \    local maxVal15\n    local maxIndex16\n    local maxVal16\n    local maxIndex17\n\
    \    local maxVal17\n    local maxIndex18\n    local maxVal18\n    local maxIndex19\n\
    \    local maxVal19\n    local maxIndex20\n    local maxVal20\n    local maxIndex21\n\
    \    local maxVal21\n    local maxIndex22\n    local maxVal22\n    local maxIndex23\n\
    \    local maxVal23\n    local maxIndex24\n    local maxVal24\n    local maxIndex25\n\
    \    local maxVal25\n    local maxIndex26\n    local maxVal26\n    local maxIndex27\n\
    \    local maxVal27\n    local maxIndex28\n    local maxVal28\n    local maxIndex29\n\
    \    local maxVal29\n    local maxIndex30\n    local maxVal30\n    local maxIndex31\n\
    \    local maxVal31\n    local maxIndex32\n    local maxVal32\n    local maxIndex33\n\
    \    local maxVal33\n    local maxIndex34\n    local maxVal34\n    local maxIndex35\n\
    \    local maxVal35\n    local maxIndex36\n    local maxVal36\n    local maxIndex37\n\
    \    local maxVal37\n    local maxIndex38\n    local maxVal38\n    local maxIndex39\n\
    \    local maxVal39\n    local maxIndex40\n    local max\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxIndex\n    local maxVal\n\
    \    local maxIndex2\n    local maxVal2\n    local maxIndex3\n    local maxVal3\n\
    \    local maxIndex4\n    local maxVal4\n    local maxIndex5\n    local maxVal5\n\
    \    local maxIndex6\n    local maxVal6\n    local maxIndex7\n    local maxVal7\n\
    \    local maxIndex8\n    local maxVal8\n    local maxIndex9\n    local maxVal9\n\
    \    local maxIndex10\n    local maxVal10\n    local maxIndex11\n    local maxVal11\n\
    \    local maxIndex12\n    local maxVal12\n    local maxIndex13\n    local maxVal13\n\
    \    local maxIndex14\n    local maxVal14\n    local maxIndex15\n    local maxVal15\n\
    \    local maxIndex16\n    local maxVal16\n    local maxIndex17\n    local maxVal17\n\
    \    local maxIndex18\n    local maxVal18\n    local maxIndex19\n    local maxVal19\n\
    \    local maxIndex20\n    local maxVal20\n    local maxIndex21\n    local maxVal21\n\
    \    local maxIndex22\n    local maxVal22\n    local maxIndex23\n    local maxVal23\n\
    \    local maxIndex24\n    local maxVal24\n    local maxIndex25\n    local maxVal25\n\
    \    local maxIndex26\n    local maxVal26\n    local maxIndex27\n    local maxVal27\n\
    \    local maxIndex28\n    local maxVal28\n    local maxIndex29\n    local maxVal29\n\
    \    local maxIndex30\n    local maxVal30\n    local maxIndex31\n    local maxVal31\n\
    \    local maxIndex32\n    local maxVal32\n    local maxIndex33\n    local maxVal33\n\
    \    local maxIndex34\n    local maxVal34\n    local maxIndex35\n    local maxVal35\n\
    \    local maxIndex36\n    local maxVal36\n    local maxIndex37\n    local maxVal37\n\
    \    local maxIndex38\n    local maxVal38\n    local maxIndex39\n    local maxVal39\n\
    \    local maxIndex40\n    local maxVal40\n    local maxIndex41\n\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_strs\n    local maxnums_strs_str\n\
    \    local maxnums_strs_strs\n    local maxnums_strs_strs_str\n    local maxnums_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n    local\
    \ maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n  \
    \  local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_str\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n\n    len=${#arr[@]}\n    if [ $len\
    \ -gt $k ]\n    then\n        echo \"$k numbers are too large\"\n        return\n\
    \    fi\n\n    max=$arr[0]\n    for ((i=1; i<$k; i++)); do\n        if [ $arr[$i]\
    \ > $max ]; then\n            max=$arr[$i]\n        fi\n    done\n\n    for ((j=0;\
    \ j<$len; j++)); do\n        if [ $arr[$j] -eq $max ]; then\n            arr[$j]=$max\n\
    \        fi\n    done\n\n    echo \"${arr[@]}\"\n}\n\ncandidate() {\n    maximum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"\
    -4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate\
    \ \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1\
    \ 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"\
    4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13\
    \ -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n\
    \    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\"\
    \ \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n\
    \    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp686m33j5.sh: line 31: $max: ambiguous redirect

    /tmp/tmp686m33j5.sh: line 31: $max: ambiguous redirect

    /tmp/tmp686m33j5.sh: line 37: [: -3: unary operator expected

    '
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_strs\n    local maxnums_strs_str\n\
    \    local maxnums_strs_strs\n    local maxnums_strs_strs_str\n    local maxnums_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n    local\
    \ maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_str\n}\n\ncandidate() {\n    maximum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\"\
    \ ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"\
    -3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxVal\n    local maxIndexArr\n\
    \    local maxValArr\n    local maxIndexArrLen\n    local maxValArrLen\n    local\
    \ maxIndexArrLenLen\n    local maxValArrLen\n    local maxIndexArrLenLen\n   \
    \ local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArr\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ result=()\n    local i\n    local j\n    local max\n    local maxIndex\n   \
    \ local maxValue\n    local maxIndexValue\n    local maxIndexValueIndex\n    local\
    \ maxIndexValueIndex2\n    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n\
    \    local maxIndexValueIndex5\n    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n\
    \    local maxIndexValueIndex8\n    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n\
    \    local maxIndexValueIndex11\n    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n\
    \    local maxIndexValueIndex14\n    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n\
    \    local maxIndexValueIndex17\n    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n\
    \    local maxIndexValueIndex20\n    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n\
    \    local maxIndexValueIndex23\n    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n\
    \    local maxIndexValueIndex26\n    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n\
    \    local maxIndexValueIndex29\n    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n\
    \    local maxIndexValueIndex32\n    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n\
    \    local maxIndexValueIndex35\n    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n\
    \    local maxIndexValueIndex38\n    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n\
    \    local maxIndexValueIndex41\n    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n\
    \    local maxIndexValueIndex44\n    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n\
    \    local maxIndexValueIndex47\n    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n\
    \    local maxIndexValueIndex50\n    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n\
    \    local maxIndexValueIndex53\n    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n\
    \    local maxIndexValueIndex56\n    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n\
    \n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxlen_index\n    local maxlen_value\n    local maxlen_index2\n    local\
    \ maxlen_value2\n    local maxlen_index3\n    local maxlen_value3\n    local maxlen_index4\n\
    \    local maxlen_value4\n    local maxlen_index5\n    local maxlen_value5\n \
    \   local maxlen_index6\n    local maxlen_value6\n    local maxlen_index7\n  \
    \  local maxlen_value7\n    local maxlen_index8\n    local maxlen_value8\n   \
    \ local maxlen_index9\n    local maxlen_value9\n    local maxlen_index10\n   \
    \ local maxlen_value10\n    local maxlen_index11\n    local maxlen_value11\n \
    \   local maxlen_index12\n    local maxlen_value12\n    local maxlen_index13\n\
    \    local maxlen_value13\n    local maxlen_index14\n    local maxlen_value14\n\
    \    local maxlen_index15\n    local maxlen_value15\n    local maxlen_index16\n\
    \    local maxlen_value16\n    local maxlen_index17\n    local maxlen_value17\n\
    \    local maxlen_index18\n    local maxlen_value18\n    local maxlen_index19\n\
    \    local maxlen_value19\n    local maxlen_index20\n    local maxlen_value20\n\
    \    local maxlen_index21\n    local maxlen_value21\n    local maxlen_index22\n\
    \    local maxlen_value22\n    local maxlen_index23\n    local maxlen_value23\n\
    \    local maxlen_index24\n    local maxlen_value24\n    local maxlen_index25\n\
    \    local maxlen_value25\n    local maxlen_index26\n    local maxlen_value26\n\
    \    local maxlen_index27\n    local maxlen_value27\n    local maxlen_index28\n\
    \    local maxlen_value28\n    local maxlen_index29\n    local maxlen_value29\n\
    \    local maxlen_index30\n    local maxlen_value30\n    local maxlen_index31\n\
    \    local maxlen_value31\n    local maxlen_index32\n    local maxlen_value32\n\
    \    local maxlen_index33\n    local maxlen_value33\n    local maxlen_index34\n\
    \    local maxlen_value34\n    \n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n\
    \    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2\
    \ 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local temp\n    local len\n    local maxlen\n \
    \   local maxidx\n    local maxval\n    local maxidx2\n    local maxval2\n   \
    \ local maxidx3\n    local maxval3\n    local maxidx4\n    local maxval4\n   \
    \ local maxidx5\n    local maxval5\n    local maxidx6\n    local maxval6\n   \
    \ local maxidx7\n    local maxval7\n    local maxidx8\n    local maxval8\n   \
    \ local maxidx9\n    local maxval9\n    local maxidx10\n    local maxval10\n \
    \   local maxidx11\n    local maxval11\n    local maxidx12\n    local maxval12\n\
    \    local maxidx13\n    local maxval13\n    local maxidx14\n    local maxval14\n\
    \    local maxidx15\n    local maxval15\n    local maxidx16\n    local maxval16\n\
    \    local maxidx17\n    local maxval17\n    local maxidx18\n    local maxval18\n\
    \    local maxidx19\n    local maxval19\n    local maxidx20\n    local maxval20\n\
    \    local maxidx21\n    local maxval21\n    local maxidx22\n    local maxval22\n\
    \    local maxidx23\n    local maxval23\n    local maxidx24\n    local maxval24\n\
    \    local maxidx25\n    local maxval25\n    local maxidx26\n    local maxval26\n\
    \    local maxidx27\n    local maxval27\n    local maxidx28\n    local maxval28\n\
    \    local maxidx29\n    local maxval29\n    local maxidx30\n    local maxval30\n\
    \    local maxidx31\n    local maxval31\n    local maxidx32\n    local maxval32\n\
    \    local maxidx33\n    local maxval33\n    local maxidx34\n    local maxval34\n\
    \    local maxidx35\n    local maxval35\n    local maxidx36\n    local maxval36\n\
    \    local maxidx37\n    local maxval37\n    local maxidx38\n    local maxval38\n\
    \    local maxidx39\n    local maxval39\n    local maxidx40\n    local max\n}\n\
    \ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr k\n    arr=$1\n    k=$2\n    local\
    \ i max\n    local maxi maxj\n    local maxk maxv\n    local maxv1 maxv2 maxv3\n\
    \    local maxv4 maxv5 maxv6 maxv7 maxv8 maxv9\n    local maxv10 maxv11 maxv12\
    \ maxv13 maxv14 maxv15 maxv16 maxv17 maxv18 maxv19 maxv20 maxv21 maxv22 maxv23\
    \ maxv24 maxv25 maxv26 maxv27 maxv28 maxv29 maxv30 maxv31 maxv32 maxv33 maxv34\
    \ maxv35 maxv36 maxv37 maxv38 maxv39 maxv40 maxv41 maxv42 maxv43 maxv44 maxv45\
    \ maxv46 maxv47 maxv48 maxv49 maxv50 maxv51 maxv52 maxv53 maxv54 maxv55 maxv56\
    \ maxv57 maxv58 maxv59 maxv60 maxv61 maxv62 maxv63 maxv64 maxv65 maxv66 maxv67\
    \ maxv68 maxv69 maxv70 maxv71 maxv72 maxv73 maxv74 maxv75 maxv76 maxv77 maxv78\
    \ maxv79 maxv80 maxv81 maxv82 maxv83 maxv84 maxv85 maxv86 maxv87 maxv88 maxv89\
    \ maxv90 maxv91 maxv92 maxv93 maxv94 maxv95 maxv96 maxv97 maxv98 maxv99 maxv100\
    \ maxv101 maxv102 maxv103 maxv104 maxv105 maxv106 maxv107 maxv108 maxv109 maxv110\
    \ maxv111 maxv112 maxv113 maxv114 maxv115 maxv116 maxv117 maxv118 maxv119 maxv120\
    \ maxv121 maxv122 maxv123 maxv124 maxv125 maxv126 maxv127 maxv128 maxv129 maxv130\
    \ maxv131 maxv132 max\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local temp\n    local len\n    local maxlen\n \
    \   local maxarr\n    local maxk\n    local maxval\n    local maxi\n    local\
    \ maxj\n    local maxtemp\n    local maxlen1\n    local maxarr1\n    local maxk1\n\
    \    local maxval1\n    local maxi1\n    local maxj1\n    local maxtemp1\n   \
    \ local maxlen2\n    local maxarr2\n    local maxk2\n    local maxval2\n    local\
    \ maxi2\n    local maxj2\n    local maxtemp2\n    local maxlen3\n    local maxarr3\n\
    \    local maxk3\n    local maxval3\n    local maxi3\n    local maxj3\n    local\
    \ maxtemp3\n    local maxlen4\n    local maxarr4\n    local maxk4\n    local maxval4\n\
    \    local maxi4\n    local maxj4\n    local maxtemp4\n    local maxlen5\n   \
    \ local maxarr5\n    local maxk5\n    local maxval5\n    local maxi5\n    local\
    \ maxj5\n    local maxtemp5\n    local maxlen6\n    local maxarr6\n    local maxk6\n\
    \    local maxval6\n    local maxi6\n    local maxj6\n    local maxtemp6\n   \
    \ local maxlen7\n    local maxarr7\n    local maxk7\n    local maxval7\n    local\
    \ maxi7\n    local maxj7\n    local maxtemp7\n    local maxlen8\n    local maxarr8\n\
    \    local maxk8\n    local maxval8\n    local maxi8\n    local maxj8\n    local\
    \ maxtemp8\n    local maxlen9\n    local maxarr9\n    local maxk9\n    local maxval9\n\
    \    local maxi9\n    local maxj9\n    local maxtemp9\n    local maxlen10\n  \
    \  local maxarr10\n    local maxk10\n    local maxval10\n    local maxi10\n  \
    \  local maxj10\n    local maxtemp10\n    local maxlen11\n    local maxarr11\n\
    \    local maxk11\n    local maxval11\n    local maxi11\n\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local len=${#arr[@]}\n\
    \    local max\n    local i\n    local j\n    local tmp\n    local maxIndex\n\
    \    local maxVal\n    local maxIndex2\n    local maxVal2\n    local maxIndex3\n\
    \    local maxVal3\n    local maxIndex4\n    local maxVal4\n    local maxIndex5\n\
    \    local maxVal5\n    local maxIndex6\n    local maxVal6\n    local maxIndex7\n\
    \    local maxVal7\n    local maxIndex8\n    local maxVal8\n    local maxIndex9\n\
    \    local maxVal9\n    local maxIndex10\n    local maxVal10\n    local maxIndex11\n\
    \    local maxVal11\n    local maxIndex12\n    local maxVal12\n    local maxIndex13\n\
    \    local maxVal13\n    local maxIndex14\n    local maxVal14\n    local maxIndex15\n\
    \    local maxVal15\n    local maxIndex16\n    local maxVal16\n    local maxIndex17\n\
    \    local maxVal17\n    local maxIndex18\n    local maxVal18\n    local maxIndex19\n\
    \    local maxVal19\n    local maxIndex20\n    local maxVal20\n    local maxIndex21\n\
    \    local maxVal21\n    local maxIndex22\n    local maxVal22\n    local maxIndex23\n\
    \    local maxVal23\n    local maxIndex24\n    local maxVal24\n    local maxIndex25\n\
    \    local maxVal25\n    local maxIndex26\n    local maxVal26\n    local maxIndex27\n\
    \    local maxVal27\n    local maxIndex28\n    local maxVal28\n    local maxIndex29\n\
    \    local maxVal29\n    local maxIndex30\n    local maxVal30\n    local maxIndex31\n\
    \    local maxVal31\n    local maxIndex32\n    local maxVal32\n    local maxIndex33\n\
    \    local maxVal33\n    local maxIndex34\n    local maxVal34\n    local maxIndex35\n\
    \    local maxVal35\n    local maxIndex36\n    local maxVal36\n    local maxIndex37\n\
    \    local maxVal37\n    local maxIndex38\n    local maxVal38\n    local maxIndex39\n\
    \    local maxVal39\n    local maxIndex40\n    local max\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=(\"$@\")\n    local k=\"$2\"\n\
    \    local len=\"${#arr[@]}\"\n    local max\n    local i\n    local j\n    local\
    \ maxIndex\n    local maxVal\n    local maxIndexVal\n    local maxIndexVal2\n\
    \    local maxIndexVal3\n    local maxIndexVal4\n    local maxIndexVal5\n    local\
    \ maxIndexVal6\n    local maxIndexVal7\n    local maxIndexVal8\n    local maxIndexVal9\n\
    \    local maxIndexVal10\n    local maxIndexVal11\n    local maxIndexVal12\n \
    \   local maxIndexVal13\n    local maxIndexVal14\n    local maxIndexVal15\n  \
    \  local maxIndexVal16\n    local maxIndexVal17\n    local maxIndexVal18\n   \
    \ local maxIndexVal19\n    local maxIndexVal20\n    local maxIndexVal21\n    local\
    \ maxIndexVal22\n    local maxIndexVal23\n    local maxIndexVal24\n    local maxIndexVal25\n\
    \    local maxIndexVal26\n    local maxIndexVal27\n    local maxIndexVal28\n \
    \   local maxIndexVal29\n    local maxIndexVal30\n    local maxIndexVal31\n  \
    \  local maxIndexVal32\n    local maxIndexVal33\n    local maxIndexVal34\n   \
    \ local maxIndexVal35\n    local maxIndexVal36\n    local maxIndexVal37\n    local\
    \ maxIndexVal38\n    local maxIndexVal39\n    local maxIndexVal40\n    local maxIndexVal41\n\
    \    local maxIndexVal42\n    local maxIndexVal43\n    local maxIndexVal44\n \
    \   local maxIndexVal45\n    local maxIndexVal46\n    local maxIndexVal47\n  \
    \  local maxIndexVal48\n    local maxIndexVal49\n    local maxIndexVal50\n   \
    \ local maxIndexVal51\n    local maxIndexVal52\n    local maxIndexVal53\n    local\
    \ maxIndexVal54\n    local maxIndexVal55\n    local maxIndexVal56\n    local maxIndexVal57\n\
    \    local maxIndexVal58\n    local maxIndexVal59\n    local maxIndexVal60\n \
    \   local maxIndexVal61\n    local maxIndexVal62\n    local maxIndexVal63\n  \
    \  local maxIndexVal64\n    local maxIndexVal65\n    local maxIndexVal66\n   \
    \ local maxIndex\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxIndex\n    local maxVal\n\
    \    local maxIndex2\n    local maxVal2\n    local maxIndex3\n    local maxVal3\n\
    \    local maxIndex4\n    local maxVal4\n    local maxIndex5\n    local maxVal5\n\
    \    local maxIndex6\n    local maxVal6\n    local maxIndex7\n    local maxVal7\n\
    \    local maxIndex8\n    local maxVal8\n    local maxIndex9\n    local maxVal9\n\
    \    local maxIndex10\n    local maxVal10\n    local maxIndex11\n    local maxVal11\n\
    \    local maxIndex12\n    local maxVal12\n    local maxIndex13\n    local maxVal13\n\
    \    local maxIndex14\n    local maxVal14\n    local maxIndex15\n    local maxVal15\n\
    \    local maxIndex16\n    local maxVal16\n    local maxIndex17\n    local maxVal17\n\
    \    local maxIndex18\n    local maxVal18\n    local maxIndex19\n    local maxVal19\n\
    \    local maxIndex20\n    local maxVal20\n    local maxIndex21\n    local maxVal21\n\
    \    local maxIndex22\n    local maxVal22\n    local maxIndex23\n    local maxVal23\n\
    \    local maxIndex24\n    local maxVal24\n    local maxIndex25\n    local maxVal25\n\
    \    local maxIndex26\n    local maxVal26\n    local maxIndex27\n    local maxVal27\n\
    \    local maxIndex28\n    local maxVal28\n    local maxIndex29\n    local maxVal29\n\
    \    local maxIndex30\n    local maxVal30\n    local maxIndex31\n    local maxVal31\n\
    \    local maxIndex32\n    local maxVal32\n    local maxIndex33\n    local maxVal33\n\
    \    local maxIndex34\n    local maxVal34\n    local maxIndex35\n    local maxVal35\n\
    \    local maxIndex36\n    local maxVal36\n    local maxIndex37\n    local maxVal37\n\
    \    local maxIndex38\n    local maxVal38\n    local maxIndex39\n    local maxVal39\n\
    \    local maxIndex40\n    local maxVal40\n    local maxIndex41\n\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=(\"${@}\")\n    local k=\"${2}\"\
    \n    local len=\"${#arr[@]}\"\n    local max\n    local i\n    local j\n    local\
    \ tmp\n\n    if [[ ${len} -eq 0 ]]; then\n        return 0\n    fi\n\n    if [[\
    \ ${k} -lt 0 || ${k} -gt ${len} ]]; then\n        return 0\n    fi\n\n    max=$((${k}+1))\n\
    \    for ((i=1; i<=${len}; i++)); do\n        tmp=${arr[i]}\n        for ((j=0;\
    \ j<=i; j++)); do\n            if [[ ${arr[j]} -gt ${tmp} ]]; then\n         \
    \       tmp=${arr[j]}\n            fi\n        done\n        arr[i]=${tmp}\n \
    \   done\n\n    arr=(\"${arr[@]}\")\n    echo ${arr[@]}\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: -1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local tmp\n\n    # Sort the array\n    for\
    \ ((i = 0; i < ${#arr[@]}; i++)); do\n        local tmp=${arr[i]}\n        arr[i]=${arr[i+1]}\n\
    \        arr[i+1]=${tmp}\n    done\n\n    # Find the maximum k numbers\n    for\
    \ ((i = 0; i < ${#arr[@]}; i++)); do\n        local j=0\n        local max=0\n\
    \        while ((j < k) && (arr[i] > max)); do\n            max=${arr[i]}\n  \
    \          j=$((j+1))\n        done\n        arr[i]=${max}\n    done\n\n    #\
    \ Return the result\n    echo ${arr[@]}\n}\n\ncandidate() {\n    maximum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\"\
    \ ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"\
    -3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=40 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=27 encoding='utf-8'>
  timestamp: 1660037999
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n\n    len=${#arr[@]}\n\
    \    if [ $len -gt $k ]\n    then\n        echo \"$k numbers are too large\"\n\
    \        return 1\n    fi\n\n    max=$(echo $arr | sort -n | tail -n $k)\n   \
    \ arr=()\n    arr+=(\"$max\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"\
    $arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"\
    $arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"\
    $arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"\
    $arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"\
    $arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"\
    $arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"\
    $arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"\
    $arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"\
    $arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"\
    $arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"\
    $arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"\
    $arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"$arr\")\n    arr+=(\"\
    $arr\")\n    arr+=(\"$arr\")\n    \n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n\
    \    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2\
    \ 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local len=${#arr[@]}\n\
    \    local max\n    local i\n    local j\n    local tmp\n    local maxIndex\n\
    \    local maxValue\n    local maxIndex2\n    local maxValue2\n    local maxIndex3\n\
    \    local maxValue3\n    local maxIndex4\n    local maxValue4\n    local maxIndex5\n\
    \    local maxValue5\n    local maxIndex6\n    local maxValue6\n    local maxIndex7\n\
    \    local maxValue7\n    local maxIndex8\n    local maxValue8\n    local maxIndex9\n\
    \    local maxValue9\n    local maxIndex10\n    local maxValue10\n    local maxIndex11\n\
    \    local maxValue11\n    local maxIndex12\n    local maxValue12\n    local maxIndex13\n\
    \    local maxValue13\n    local maxIndex14\n    local maxValue14\n    local maxIndex15\n\
    \    local maxValue15\n    local maxIndex16\n    local maxValue16\n    local maxIndex17\n\
    \    local maxValue17\n    local maxIndex18\n    local maxValue18\n    local maxIndex19\n\
    \    local maxValue19\n    local maxIndex20\n    local maxValue20\n    local maxIndex21\n\
    \    local maxValue21\n    local maxIndex22\n    local maxValue22\n    local maxIndex23\n\
    \    local maxValue23\n    local maxIndex24\n    local maxValue24\n    local maxIndex25\n\
    \    local maxValue25\n    local maxIndex26\n    local maxValue26\n    local maxIndex27\n\
    \    local maxValue27\n    local maxIndex28\n    local maxValue28\n    local maxIndex29\n\
    \    local maxValue29\n    local maxIndex30\n    local maxValue30\n    local maxIndex31\n\
    \    local maxValue31\n    local maxIndex32\n    local maxValue32\n    local maxIndex33\n\
    \    local maxValue33\n    local maxIndex34\n    local maxValue34\n    local maxIndex35\n\
    \    local maxValue35\n    local maxIndex36\n    local maxValue36\n    local maxIndex37\n\
    \    local maxValue37\n    local maxIndex38\n    local maxValue38\n    local maxIndex39\n\
    \    local maxValue39\n    local maxIndex40\n    local max\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxnum\n    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n\
    \    local maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n\
    \    local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max_arr\n\
    \    local max_k\n    local i\n    local j\n    local tmp\n    local len\n   \
    \ local max_len\n    local max_index\n    local max_value\n    local max_index2\n\
    \    local max_value2\n    local max_index3\n    local max_value3\n    local max_index4\n\
    \    local max_value4\n    local max_index5\n    local max_value5\n    local max_index6\n\
    \    local max_value6\n    local max_index7\n    local max_value7\n    local max_index8\n\
    \    local max_value8\n    local max_index9\n    local max_value9\n    local max_index10\n\
    \    local max_value10\n    local max_index11\n    local max_value11\n    local\
    \ max_index12\n    local max_value12\n    local max_index13\n    local max_value13\n\
    \    local max_index14\n    local max_value14\n    local max_index15\n    local\
    \ max_value15\n    local max_index16\n    local max_value16\n    local max_index17\n\
    \    local max_value17\n    local max_index18\n    local max_value18\n    local\
    \ max_index19\n    local max_value19\n    local max_index20\n    local max_value20\n\
    \    local max_index21\n    local max_value21\n    local max_index22\n    local\
    \ max_value22\n    local max_index23\n    local max_value23\n    local max_index24\n\
    \    local max_value24\n    local max_index25\n    local max_value25\n    local\
    \ max_index26\n    local max_value26\n    local max_index27\n    local max_value27\n\
    \    local max_index28\n    local max_value28\n    local max_index29\n    local\
    \ max_value29\n    local max_index30\n    local max_value30\n    local max_index31\n\
    \    local max_value31\n    local max_index32\n    local max_value32\n    local\
    \ max_index33\n    local max_value33\n    local max_index34\n    local max_value34\n\
    \    local max_index35\n    local max_value35\n    local max_index36\n    local\
    \ max_value36\n    local max_index37\n    local max_value37\n    local max_index38\n\
    \    local max_value38\n    local max_index39\n    local max_value39\n    local\
    \ max_\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4\
    \ -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n\n    len=${#arr[@]}\n\
    \    if [ $len -gt $k ]\n    then\n        echo \"$k numbers are too large\"\n\
    \        return 1\n    fi\n\n    max=-1\n    for ((i=0; i<$k; i++)); do\n    \
    \    tmp=${arr[$i]}\n        if [ $tmp -gt $max ]\n        then\n            max=tmp\n\
    \        fi\n    done\n\n    for ((j=$k; j>=0; j--)); do\n        tmp=${arr[$j]}\n\
    \        if [ $tmp -gt $max ]\n        then\n            max=tmp\n        fi\n\
    \    done\n\n    echo $max\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp77np0wgf.sh: line 33: [: -3: unary operator expected

    /tmp/tmp77np0wgf.sh: line 33: [: -gt: unary operator expected

    /tmp/tmp77np0wgf.sh: line 33: [: -gt: unary operator expected

    /tmp/tmp77np0wgf.sh: line 41: [: -gt: unary operator expected

    /tmp/tmp77np0wgf.sh: line 41: [: -gt: unary operator expected

    /tmp/tmp77np0wgf.sh: line 41: [: -gt: unary operator expected

    /tmp/tmp77np0wgf.sh: line 41: [: -3: unary operator expected

    '
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local maxIndex\n    local maxValue\n    local\
    \ maxCount\n    local maxCountIndex\n    local maxCountValue\n    local maxCountIndex\n\
    \    local maxCountValue\n    local maxCountIndex\n    local maxCountValue\n \
    \   local maxCountIndex\n    local maxCountValue\n    local maxCountIndex\n  \
    \  local maxCountValue\n    local maxCountIndex\n    local maxCountValue\n   \
    \ local maxCountIndex\n    local maxCountValue\n    local maxCountIndex\n    local\
    \ maxCountValue\n    local maxCountIndex\n    local maxCountValue\n    local maxCountIndex\n\
    \    local maxCountValue\n    local maxCountIndex\n    local maxCountValue\n \
    \   local maxCountIndex\n    local maxCountValue\n    local maxCountIndex\n  \
    \  local maxCountValue\n    local maxCountIndex\n    local maxCountValue\n   \
    \ local maxCountIndex\n    local maxCountValue\n    local maxCountIndex\n    local\
    \ maxCountValue\n    local maxCountIndex\n    local maxCountValue\n    local maxCountIndex\n\
    \    local maxCountValue\n    local maxCountIndex\n    local maxCountValue\n \
    \   local maxCountIndex\n    local maxCountValue\n    local maxCountIndex\n  \
    \  local maxCountValue\n    local maxCountIndex\n    local maxCountValue\n   \
    \ local maxCountIndex\n    local maxCountValue\n    local maxCountIndex\n    local\
    \ maxCountValue\n    local maxCountIndex\n    local maxCountValue\n    local maxCountIndex\n\
    \    local maxCountValue\n    local maxCountIndex\n    local maxCountValue\n \
    \   local maxCountIndex\n    local maxCountValue\n    local maxCountIndex\n  \
    \  local maxCountValue\n    local maxCountIndex\n    local maxCountValue\n   \
    \ local maxCountIndex\n    local maxCountValue\n    local maxCountIndex\n    local\
    \ maxCountValue\n    local maxCountIndex\n    local maxCountValue\n    local maxCountIndex\n\
    \    local maxCountValue\n    local maxCountIndex\n    local maxCountValue\n \
    \   local maxCountIndex\n    local maxCountValue\n    local maxCountIndex\n  \
    \  local maxCountValue\n    local maxCountIndex\n    local maxCountValue\n   \
    \ local maxCountIndex\n    local maxCountValue\n    local \n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=(\"${@}\")\n    local k=\"${2}\"\
    \n    local len=\"${#arr[@]}\"\n    local max\n    local i\n    local j\n    local\
    \ maxIndex\n    local maxVal\n    local maxIndexVal\n    local maxIndexValIndex\n\
    \    local maxIndexValIndex2\n    local maxIndexValIndex3\n    local maxIndexValIndex4\n\
    \    local maxIndexValIndex5\n    local maxIndexValIndex6\n    local maxIndexValIndex7\n\
    \    local maxIndexValIndex8\n    local maxIndexValIndex9\n    local maxIndexValIndex10\n\
    \    local maxIndexValIndex11\n    local maxIndexValIndex12\n    local maxIndexValIndex13\n\
    \    local maxIndexValIndex14\n    local maxIndexValIndex15\n    local maxIndexValIndex16\n\
    \    local maxIndexValIndex17\n    local maxIndexValIndex18\n    local maxIndexValIndex19\n\
    \    local maxIndexValIndex20\n    local maxIndexValIndex21\n    local maxIndexValIndex22\n\
    \    local maxIndexValIndex23\n    local maxIndexValIndex24\n    local maxIndexValIndex25\n\
    \    local maxIndexValIndex26\n    local maxIndexValIndex27\n    local maxIndexValIndex28\n\
    \    local maxIndexValIndex29\n    local maxIndexValIndex30\n    local maxIndexValIndex31\n\
    \    local maxIndexValIndex32\n    local maxIndexValIndex33\n    local maxIndexValIndex34\n\
    \    local maxIndexValIndex35\n    local maxIndexValIndex36\n    local maxIndexValIndex37\n\
    \    local maxIndexValIndex38\n    local maxIndexValIndex39\n    local maxIndexValIndex40\n\
    \    local maxIndexValIndex41\n    local maxIndexValIndex42\n    local maxIndexValIndex43\n\
    \    local maxIndexValIndex44\n    local maxIndexValIndex45\n    local maxIndexValIndex46\n\
    \    local maxIndexValIndex47\n    local maxIndexValIndex48\n    local maxIndexValIndex49\n\
    \    local maxIndexValIndex50\n    local maxIndexValIndex51\n    local maxIndexValIndex52\n\
    \    local maxIndexValIndex53\n    local maxIndexValIndex54\n    local maxIndexValIndex55\n\
    \    local maxIndexValIndex56\n    local maxIndexValIndex57\n    local max\n}\n\
    \ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=(\"${@}\")\n    local k=\"${2}\"\
    \n    local max\n    local i\n    local j\n    local tmp\n    local len\n    local\
    \ maxlen\n    local maxidx\n    local maxval\n    local maxidx2\n    local maxval2\n\
    \    local maxidx3\n    local maxval3\n    local maxidx4\n    local maxval4\n\
    \    local maxidx5\n    local maxval5\n    local maxidx6\n    local maxval6\n\
    \    local maxidx7\n    local maxval7\n    local maxidx8\n    local maxval8\n\
    \    local maxidx9\n    local maxval9\n    local maxidx10\n    local maxval10\n\
    \    local maxidx11\n    local maxval11\n    local maxidx12\n    local maxval12\n\
    \    local maxidx13\n    local maxval13\n    local maxidx14\n    local maxval14\n\
    \    local maxidx15\n    local maxval15\n    local maxidx16\n    local maxval16\n\
    \    local maxidx17\n    local maxval17\n    local maxidx18\n    local maxval18\n\
    \    local maxidx19\n    local maxval19\n    local maxidx20\n    local maxval20\n\
    \    local maxidx21\n    local maxval21\n    local maxidx22\n    local maxval22\n\
    \    local maxidx23\n    local maxval23\n    local maxidx24\n    local maxval24\n\
    \    local maxidx25\n    local maxval25\n    local maxidx26\n    local maxval26\n\
    \    local maxidx27\n    local maxval27\n    local maxidx28\n    local maxval28\n\
    \    local maxidx29\n    local maxval29\n    local maxidx30\n    local maxval30\n\
    \    local maxidx31\n    local maxval31\n    local maxidx32\n    local maxval32\n\
    \    local maxidx33\n    local maxval33\n    local maxidx34\n    local maxval34\n\
    \    local maxidx35\n    local maxval35\n    local maxidx36\n    local maxval36\n\
    \    local maxidx37\n    local maxval37\n    local maxidx38\n    local maxval38\n\
    \    local maxidx39\n    local maxval39\n    local maxidx40\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ len=${#arr[@]}\n    local max\n    local i\n    local j\n    local maxIndex\n\
    \    local maxVal\n    local maxIndex2\n    local maxVal2\n    local maxIndex3\n\
    \    local maxVal3\n    local maxIndex4\n    local maxVal4\n    local maxIndex5\n\
    \    local maxVal5\n    local maxIndex6\n    local maxVal6\n    local maxIndex7\n\
    \    local maxVal7\n    local maxIndex8\n    local maxVal8\n    local maxIndex9\n\
    \    local maxVal9\n    local maxIndex10\n    local maxVal10\n    local maxIndex11\n\
    \    local maxVal11\n    local maxIndex12\n    local maxVal12\n    local maxIndex13\n\
    \    local maxVal13\n    local maxIndex14\n    local maxVal14\n    local maxIndex15\n\
    \    local maxVal15\n    local maxIndex16\n    local maxVal16\n    local maxIndex17\n\
    \    local maxVal17\n    local maxIndex18\n    local maxVal18\n    local maxIndex19\n\
    \    local maxVal19\n    local maxIndex20\n    local maxVal20\n    local maxIndex21\n\
    \    local maxVal21\n    local maxIndex22\n    local maxVal22\n    local maxIndex23\n\
    \    local maxVal23\n    local maxIndex24\n    local maxVal24\n    local maxIndex25\n\
    \    local maxVal25\n    local maxIndex26\n    local maxVal26\n    local maxIndex27\n\
    \    local maxVal27\n    local maxIndex28\n    local maxVal28\n    local maxIndex29\n\
    \    local maxVal29\n    local maxIndex30\n    local maxVal30\n    local maxIndex31\n\
    \    local maxVal31\n    local maxIndex32\n    local maxVal32\n    local maxIndex33\n\
    \    local maxVal33\n    local maxIndex34\n    local maxVal34\n    local maxIndex35\n\
    \    local maxVal35\n    local maxIndex36\n    local maxVal36\n    local maxIndex37\n\
    \    local maxVal37\n    local maxIndex38\n    local maxVal38\n    local maxIndex39\n\
    \    local maxVal39\n    local maxIndex40\n    local maxVal\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n\n    len=$(echo $arr | wc -w)\n   \
    \ if [ $len -gt $k ]\n    then\n        echo \"$arr: too large\"\n        return\
    \ 1\n    fi\n\n    max=$arr[0]\n    for ((i=1; i<$len; i++)); do\n        if [\
    \ $arr[$i] -gt $max ]; then\n            max=arr[$i]\n        fi\n    done\n\n\
    \    for ((j=0; j<$k; j++)); do\n        if [ $arr[$j] -eq $max ]; then\n    \
    \        arr[$j]=$max\n        fi\n    done\n\n    echo $arr\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplwg8xg47.sh: line 31: [: -3: unary operator expected

    /tmp/tmplwg8xg47.sh: line 31: [: -3: unary operator expected

    /tmp/tmplwg8xg47.sh: line 37: [: -3: unary operator expected

    /tmp/tmplwg8xg47.sh: line 37: [: -3: unary operator expected

    /tmp/tmplwg8xg47.sh: line 37: [: -3: unary operator expected

    '
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local len\n\n    len=${#arr[@]}\n    if [\
    \ $len -gt $k ]\n    then\n        echo \"$k is too large\"\n        return\n\
    \    fi\n\n    for ((i=0; i<$k; i++)); do\n        max=$(( ${arr[i]} > max ? ${arr[i]}\
    \ : max ))\n    done\n\n    for ((j=$k; j<len; j++)); do\n        max=$(( ${arr[j]}\
    \ > max ? ${arr[j]} : max ))\n    done\n\n    echo $max\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: -1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local tmp\n\n    # Sort the array\n    for\
    \ ((i = 0; i < ${#arr[@]}; i++)); do\n        local tmp=${arr[i]}\n        arr[i]=${arr[i+1]}\n\
    \        arr[i+1]=${tmp}\n    done\n\n    # Find the maximum k numbers\n    for\
    \ ((i = 0; i < ${#arr[@]}; i++)); do\n        if (( ${arr[i]} > max )); then\n\
    \            max=${arr[i]}\n        fi\n    done\n\n    # Return the maximum k\
    \ numbers\n    echo ${arr[@]:0:k}\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n\
    \    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2\
    \ 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=26 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=18 encoding='utf-8'>
  timestamp: 1660037999
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ len=${#arr[@]}\n    local max\n    local i\n    local j\n    local tmp\n   \
    \ local maxIndex\n    local maxValue\n    local maxIndex2\n    local maxValue2\n\
    \    local maxIndex3\n    local maxValue3\n    local maxIndex4\n    local maxValue4\n\
    \    local maxIndex5\n    local maxValue5\n    local maxIndex6\n    local maxValue6\n\
    \    local maxIndex7\n    local maxValue7\n    local maxIndex8\n    local maxValue8\n\
    \    local maxIndex9\n    local maxValue9\n    local maxIndex10\n    local maxValue10\n\
    \    local maxIndex11\n    local maxValue11\n    local maxIndex12\n    local maxValue12\n\
    \    local maxIndex13\n    local maxValue13\n    local maxIndex14\n    local maxValue14\n\
    \    local maxIndex15\n    local maxValue15\n    local maxIndex16\n    local maxValue16\n\
    \    local maxIndex17\n    local maxValue17\n    local maxIndex18\n    local maxValue18\n\
    \    local maxIndex19\n    local maxValue19\n    local maxIndex20\n    local maxValue20\n\
    \    local maxIndex21\n    local maxValue21\n    local maxIndex22\n    local maxValue22\n\
    \    local maxIndex23\n    local maxValue23\n    local maxIndex24\n    local maxValue24\n\
    \    local maxIndex25\n    local maxValue25\n    local maxIndex26\n    local maxValue26\n\
    \    local maxIndex27\n    local maxValue27\n    local maxIndex28\n    local maxValue28\n\
    \    local maxIndex29\n    local maxValue29\n    local maxIndex30\n    local maxValue30\n\
    \    local maxIndex31\n    local maxValue31\n    local maxIndex32\n    local maxValue32\n\
    \    local maxIndex33\n    local maxValue33\n    local maxIndex34\n    local maxValue34\n\
    \    local maxIndex35\n    local maxValue35\n    local maxIndex36\n    local maxValue36\n\
    \    local maxIndex37\n    local maxValue37\n    local maxIndex38\n    local maxValue38\n\
    \    local maxIndex39\n    local maxValue39\n    local maxIndex40\n\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n\n    len=${#arr[@]}\n    if [[ $len\
    \ == 0 ]]; then\n        return 0\n    fi\n\n    if [[ $k -lt 1 || $k -lt $len\
    \ ]]; then\n        return 0\n    fi\n\n    max=$arr[0]\n    for ((i=1; i<$len;\
    \ i++)); do\n        if [[ $arr[i] -gt $max ]]; then\n            max=arr[i]\n\
    \        fi\n    done\n\n    for ((j=1; j<$k; j++)); do\n        arr[$j]=${arr[$j-1]}\n\
    \    done\n\n    arr[$k-1]=$max\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n\
    \    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2\
    \ 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxnum\n    local maxnums\n    local maxnums_str\n    local maxnums_strs\n\
    \    local maxnums_strs_str\n    local maxnums_strs_strs\n    local maxnums_strs_strs_str\n\
    \    local maxnums_strs_strs_strs\n    local maxnums_strs_strs_strs_str\n    local\
    \ maxnums_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_str\n   \
    \ local maxnums_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n    local\
    \ maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local maxnums_strs_strs_strs_strs_strs_strs_str\n}\n\ncandidate() {\n   \
    \ maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"\
    3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n   \
    \ [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"\
    123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20\
    \ 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\"\
    \ \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"\
    2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate\
    \ \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10\
    \ 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n    local\
    \ maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n \
    \   local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n    local max\n}\n\n\
    candidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_strs\n    local maxnums_strs_len\n\
    \    local maxnums_strs_lens\n    local maxnums_strs_lens_len\n    local maxnums_strs_lens_lens\n\
    \    local maxnums_strs_lens_lens_len\n    local maxnums_strs_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n   \
    \ local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n \
    \   local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local sortedArr\n\
    \    local max\n    local i\n    local j\n    local maxIndex\n    local maxValue\n\
    \    local maxIndexValue\n    local maxIndexValueIndex\n    local maxIndexValueIndex2\n\
    \    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n\
    \    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n\
    \    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n\
    \    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n\
    \    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n\
    \    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n\
    \    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n\
    \    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n\
    \    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n\
    \    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n\
    \    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n\
    \    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n\
    \    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n\
    \    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n\
    \    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n\
    \    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n\
    \    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n\
    \    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n\
    \    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n    local maxIndex\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max_arr=()\n\
    \    local max_k=0\n    local i\n    local j\n    local tmp\n    \n    for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n        tmp=${arr[i]}\n        if (( ${#tmp} > max_k\
    \ )); then\n            max_k=${#tmp}\n        fi\n    done\n    \n    for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n        tmp=${arr[i]}\n        if (( ${#tmp} > max_k\
    \ )); then\n            max_arr=(\"${max_arr[@]}\" ${tmp})\n        fi\n    done\n\
    \    \n    for ((j=0; j<${k}; j++)); do\n        tmp=${max_arr[j]}\n        max_arr=(\"\
    ${max_arr[@]}\" ${tmp})\n    done\n    \n    echo ${max_arr[@]}\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ len=${#arr[@]}\n    local max\n    local i\n    local j\n    local tmp\n   \
    \ local maxIndex\n    local maxVal\n    local maxIndex2\n    local maxVal2\n \
    \   local maxIndex3\n    local maxVal3\n    local maxIndex4\n    local maxVal4\n\
    \    local maxIndex5\n    local maxVal5\n    local maxIndex6\n    local maxVal6\n\
    \    local maxIndex7\n    local maxVal7\n    local maxIndex8\n    local maxVal8\n\
    \    local maxIndex9\n    local maxVal9\n    local maxIndex10\n    local maxVal10\n\
    \    local maxIndex11\n    local maxVal11\n    local maxIndex12\n    local maxVal12\n\
    \    local maxIndex13\n    local maxVal13\n    local maxIndex14\n    local maxVal14\n\
    \    local maxIndex15\n    local maxVal15\n    local maxIndex16\n    local maxVal16\n\
    \    local maxIndex17\n    local maxVal17\n    local maxIndex18\n    local maxVal18\n\
    \    local maxIndex19\n    local maxVal19\n    local maxIndex20\n    local maxVal20\n\
    \    local maxIndex21\n    local maxVal21\n    local maxIndex22\n    local maxVal22\n\
    \    local maxIndex23\n    local maxVal23\n    local maxIndex24\n    local maxVal24\n\
    \    local maxIndex25\n    local maxVal25\n    local maxIndex26\n    local maxVal26\n\
    \    local maxIndex27\n    local maxVal27\n    local maxIndex28\n    local maxVal28\n\
    \    local maxIndex29\n    local maxVal29\n    local maxIndex30\n    local maxVal30\n\
    \    local maxIndex31\n    local maxVal31\n    local maxIndex32\n    local maxVal32\n\
    \    local maxIndex33\n    local maxVal33\n    local maxIndex34\n    local maxVal34\n\
    \    local maxIndex35\n    local maxVal35\n    local maxIndex36\n    local maxVal36\n\
    \    local maxIndex37\n    local maxVal37\n    local maxIndex38\n    local maxVal38\n\
    \    local maxIndex39\n    local maxVal39\n    local maxIndex40\n\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxidx\n    local maxval\n    local maxpos\n    local maxneg\n    local\
    \ maxnegidx\n    local maxnegval\n    local maxnegpos\n    local maxnegneg\n \
    \   local maxnegnegidx\n    local maxnegnegval\n    local maxnegnegpos\n    local\
    \ maxnegnegneg\n    local maxnegnegnegidx\n    local maxnegnegnegval\n    local\
    \ maxnegnegnegpos\n    local maxnegnegnegneg\n    local maxnegnegnegnegidx\n \
    \   local maxnegnegnegnegval\n    local maxnegnegnegnegpos\n    local maxnegnegnegnegneg\n\
    \    local maxnegnegnegnegnegidx\n    local maxnegnegnegnegnegval\n    local maxnegnegnegnegnegpos\n\
    \    local maxnegnegnegnegnegneg\n    local maxnegnegnegnegnegnegidx\n    local\
    \ maxnegnegnegnegnegnegval\n    local maxnegnegnegnegnegnegpos\n    local maxnegnegnegnegnegnegneg\n\
    \    local maxnegnegnegnegnegnegnegidx\n    local maxnegnegnegnegnegnegnegval\n\
    \    local maxnegnegnegnegnegnegpos\n    local maxnegnegnegnegnegnegneg\n    local\
    \ maxnegnegnegnegnegnegnegidx\n    local maxnegnegnegnegnegnegnegval\n    local\
    \ maxnegnegnegnegnegnegnegpos\n    local maxnegnegnegnegnegnegnegneg\n    local\
    \ maxnegnegnegnegnegnegnegnegidx\n    local maxnegnegnegnegnegnegnegnegval\n \
    \   local maxnegnegnegnegnegnegnegnegpos\n    local maxnegnegnegnegnegnegnegnegneg\n\
    \    local maxnegnegnegnegnegnegnegnegnegidx\n    local maxnegnegnegnegnegnegnegnegnegval\n\
    \    local maxnegnegnegnegnegnegnegnegnegpos\n    local maxnegnegnegnegnegnegnegnegneg\n\
    \    local maxnegnegnegnegnegnegnegnegnegidx\n    local maxnegnegnegnegnegnegnegnegnegnegval\n\
    \    local maxnegnegnegnegnegnegnegnegnegnegpos\n    local maxnegnegneg\n}\n\n\
    candidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxVal\n    local maxIndexArr\n\
    \    local maxValArr\n    local maxIndexArrLen\n    local maxValArrLen\n    local\
    \ maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndex\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxnum\n    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n\
    \    local maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n\
    \    local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ len=${#arr[@]}\n    local max\n    local i\n    local j\n    local maxIndex\n\
    \    local maxVal\n    local maxIndexVal\n    local maxIndexValIndex\n    local\
    \ maxIndexValIndex2\n    local maxIndexValIndex3\n    local maxIndexValIndex4\n\
    \    local maxIndexValIndex5\n    local maxIndexValIndex6\n    local maxIndexValIndex7\n\
    \    local maxIndexValIndex8\n    local maxIndexValIndex9\n    local maxIndexValIndex10\n\
    \    local maxIndexValIndex11\n    local maxIndexValIndex12\n    local maxIndexValIndex13\n\
    \    local maxIndexValIndex14\n    local maxIndexValIndex15\n    local maxIndexValIndex16\n\
    \    local maxIndexValIndex17\n    local maxIndexValIndex18\n    local maxIndexValIndex19\n\
    \    local maxIndexValIndex20\n    local maxIndexValIndex21\n    local maxIndexValIndex22\n\
    \    local maxIndexValIndex23\n    local maxIndexValIndex24\n    local maxIndexValIndex25\n\
    \    local maxIndexValIndex26\n    local maxIndexValIndex27\n    local maxIndexValIndex28\n\
    \    local maxIndexValIndex29\n    local maxIndexValIndex30\n    local maxIndexValIndex31\n\
    \    local maxIndexValIndex32\n    local maxIndexValIndex33\n    local maxIndexValIndex34\n\
    \    local maxIndexValIndex35\n    local maxIndexValIndex36\n    local maxIndexValIndex37\n\
    \    local maxIndexValIndex38\n    local maxIndexValIndex39\n    local maxIndexValIndex40\n\
    \    local maxIndexValIndex41\n    local maxIndexValIndex42\n    local maxIndexValIndex43\n\
    \    local maxIndexValIndex44\n    local maxIndexValIndex45\n    local maxIndexValIndex46\n\
    \    local maxIndexValIndex47\n    local maxIndexValIndex48\n    local maxIndexValIndex49\n\
    \    local maxIndexValIndex50\n    local maxIndexValIndex51\n    local maxIndexValIndex52\n\
    \    local maxIndexValIndex53\n    local maxIndexValIndex54\n    local maxIndexValIndex55\n\
    \    local maxIndexValIndex56\n    local maxIndexValIndex57\n    local maxIndexVal\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxnum\n    local maxnumlen\n    local maxnumlen2\n    local maxnumlen3\n\
    \    local maxnumlen4\n    local maxnumlen5\n    local maxnumlen6\n    local maxnumlen7\n\
    \    local maxnumlen8\n    local maxnumlen9\n    local maxnumlen10\n    local\
    \ maxnumlen11\n    local maxnumlen12\n    local maxnumlen13\n    local maxnumlen14\n\
    \    local maxnumlen15\n    local maxnumlen16\n    local maxnumlen17\n    local\
    \ maxnumlen18\n    local maxnumlen19\n    local maxnumlen20\n    local maxnumlen21\n\
    \    local maxnumlen22\n    local maxnumlen23\n    local maxnumlen24\n    local\
    \ maxnumlen25\n    local maxnumlen26\n    local maxnumlen27\n    local maxnumlen28\n\
    \    local maxnumlen29\n    local maxnumlen30\n    local maxnumlen31\n    local\
    \ maxnumlen32\n    local maxnumlen33\n    local maxnumlen34\n    local maxnumlen35\n\
    \    local maxnumlen36\n    local maxnumlen37\n    local maxnumlen38\n    local\
    \ maxnumlen39\n    local maxnumlen40\n    local maxnumlen41\n    local maxnumlen42\n\
    \    local maxnumlen43\n    local maxnumlen44\n    local maxnumlen45\n    local\
    \ maxnumlen46\n    local maxnumlen47\n    local maxnumlen48\n    local maxnumlen49\n\
    \    local maxnumlen50\n    local maxnumlen51\n    local maxnumlen52\n    local\
    \ maxnumlen53\n    local maxnumlen54\n    local maxnumlen55\n    local maxnumlen56\n\
    \    local maxnumlen57\n    local maxnumlen58\n    local maxnumlen59\n    local\
    \ maxnumlen60\n    local maxnumlen61\n    local maxnumlen62\n    local maxnumlen63\n\
    \    local maxnumlen64\n    local maxnumlen65\n    local maxnumlen66\n    local\
    \ maxnumlen67\n    local \n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=(\"${@}\")\n    local k=\"${2}\"\
    \n    local len=\"${#arr[@]}\"\n    local max\n    local i\n    local j\n    local\
    \ tmp\n    local maxlen\n    local maxidx\n    local maxval\n    local maxidx2\n\
    \    local maxval2\n    local maxidx3\n    local maxval3\n    local maxidx4\n\
    \    local maxval4\n    local maxidx5\n    local maxval5\n    local maxidx6\n\
    \    local maxval6\n    local maxidx7\n    local maxval7\n    local maxidx8\n\
    \    local maxval8\n    local maxidx9\n    local maxval9\n    local maxidx10\n\
    \    local maxval10\n    local maxidx11\n    local maxval11\n    local maxidx12\n\
    \    local maxval12\n    local maxidx13\n    local maxval13\n    local maxidx14\n\
    \    local maxval14\n    local maxidx15\n    local maxval15\n    local maxidx16\n\
    \    local maxval16\n    local maxidx17\n    local maxval17\n    local maxidx18\n\
    \    local maxval18\n    local maxidx19\n    local maxval19\n    local maxidx20\n\
    \    local maxval20\n    local maxidx21\n    local maxval21\n    local maxidx22\n\
    \    local maxval22\n    local maxidx23\n    local maxval23\n    local maxidx24\n\
    \    local maxval24\n    local maxidx25\n    local maxval25\n    local maxidx26\n\
    \    local maxval26\n    local maxidx27\n    local maxval27\n    local maxidx28\n\
    \    local maxval28\n    local maxidx29\n    local maxval29\n    local maxidx30\n\
    \    local maxval30\n    local maxidx31\n    local maxval31\n    local maxidx32\n\
    \    local maxval32\n    local maxidx33\n    local maxval33\n    local maxidx34\n\
    \    local maxval34\n    local maxidx35\n    local maxval35\n    local maxidx36\n\
    \    local maxval36\n    local maxidx37\n    local maxval37\n    local maxidx38\n\
    \    local maxval38\n    local maxidx39\n    local maxval39\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=(\"$@\")\n    local k=\"$2\"\n\
    \    local len=\"${#arr[@]}\"\n    local max\n    local i\n    local j\n    local\
    \ tmp\n    local maxlen\n    local maxidx\n    local maxval\n    local maxidx2\n\
    \    local maxval2\n    local maxidx3\n    local maxval3\n    local maxidx4\n\
    \    local maxval4\n    local maxidx5\n    local maxval5\n    local maxidx6\n\
    \    local maxval6\n    local maxidx7\n    local maxval7\n    local maxidx8\n\
    \    local maxval8\n    local maxidx9\n    local maxval9\n    local maxidx10\n\
    \    local maxval10\n    local maxidx11\n    local maxval11\n    local maxidx12\n\
    \    local maxval12\n    local maxidx13\n    local maxval13\n    local maxidx14\n\
    \    local maxval14\n    local maxidx15\n    local maxval15\n    local maxidx16\n\
    \    local maxval16\n    local maxidx17\n    local maxval17\n    local maxidx18\n\
    \    local maxval18\n    local maxidx19\n    local maxval19\n    local maxidx20\n\
    \    local maxval20\n    local maxidx21\n    local maxval21\n    local maxidx22\n\
    \    local maxval22\n    local maxidx23\n    local maxval23\n    local maxidx24\n\
    \    local maxval24\n    local maxidx25\n    local maxval25\n    local maxidx26\n\
    \    local maxval26\n    local maxidx27\n    local maxval27\n    local maxidx28\n\
    \    local maxval28\n    local maxidx29\n    local maxval29\n    local maxidx30\n\
    \    local maxval30\n    local maxidx31\n    local maxval31\n    local maxidx32\n\
    \    local maxval32\n    local maxidx33\n    local maxval33\n    local maxidx34\n\
    \    local maxval34\n    local maxidx35\n    local maxval35\n    local maxidx36\n\
    \    local maxval36\n    local maxidx37\n    local maxval37\n    local maxidx38\n\
    \    local maxval38\n    local maxidx39\n    local maxval39\n\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxVal\n    local maxIndex2\n\
    \    local maxVal2\n    local maxIndex3\n    local maxVal3\n    local maxIndex4\n\
    \    local maxVal4\n    local maxIndex5\n    local maxVal5\n    local maxIndex6\n\
    \    local maxVal6\n    local maxIndex7\n    local maxVal7\n    local maxIndex8\n\
    \    local maxVal8\n    local maxIndex9\n    local maxVal9\n    local maxIndex10\n\
    \    local maxVal10\n    local maxIndex11\n    local maxVal11\n    local maxIndex12\n\
    \    local maxVal12\n    local maxIndex13\n    local maxVal13\n    local maxIndex14\n\
    \    local maxVal14\n    local maxIndex15\n    local maxVal15\n    local maxIndex16\n\
    \    local maxVal16\n    local maxIndex17\n    local maxVal17\n    local maxIndex18\n\
    \    local maxVal18\n    local maxIndex19\n    local maxVal19\n    local maxIndex20\n\
    \    local maxVal20\n    local maxIndex21\n    local maxVal21\n    local maxIndex22\n\
    \    local maxVal22\n    local maxIndex23\n    local maxVal23\n    local maxIndex24\n\
    \    local maxVal24\n    local maxIndex25\n    local maxVal25\n    local maxIndex26\n\
    \    local maxVal26\n    local maxIndex27\n    local maxVal27\n    local maxIndex28\n\
    \    local maxVal28\n    local maxIndex29\n    local maxVal29\n    local maxIndex30\n\
    \    local maxVal30\n    local maxIndex31\n    local maxVal31\n    local maxIndex32\n\
    \    local maxVal32\n    local maxIndex33\n    local maxVal33\n    local maxIndex34\n\
    \    local maxVal34\n    local maxIndex35\n    local maxVal35\n    local maxIndex36\n\
    \    local maxVal36\n    local maxIndex37\n    local maxVal37\n    local maxIndex38\n\
    \    local maxVal38\n    local maxIndex39\n    local maxVal39\n    local maxIndex40\n\
    \    local maxVal40\n    local maxIndex41\n    local maxVal\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxnum\n    local maxnums\n    local maxnums_str\n    local maxnums_str1\n\
    \    local maxnums_str2\n    local maxnums_str3\n    local maxnums_str4\n    local\
    \ maxnums_str5\n    local maxnums_str6\n    local maxnums_str7\n    local maxnums_str8\n\
    \    local maxnums_str9\n    local maxnums_str10\n    local maxnums_str11\n  \
    \  local maxnums_str12\n    local maxnums_str13\n    local maxnums_str14\n   \
    \ local maxnums_str15\n    local maxnums_str16\n    local maxnums_str17\n    local\
    \ maxnums_str18\n    local maxnums_str19\n    local maxnums_str20\n    local maxnums_str21\n\
    \    local maxnums_str22\n    local maxnums_str23\n    local maxnums_str24\n \
    \   local maxnums_str25\n    local maxnums_str26\n    local maxnums_str27\n  \
    \  local maxnums_str28\n    local maxnums_str29\n    local maxnums_str30\n   \
    \ local maxnums_str31\n    local maxnums_str32\n    local maxnums_str33\n    local\
    \ maxnums_str34\n    local maxnums_str35\n    local maxnums_str36\n    local maxnums_str37\n\
    \    local maxnums_str38\n    local maxnums_str39\n    local maxnums_str40\n \
    \   local maxnums_str41\n    local maxnums_str42\n    local maxnums_str43\n  \
    \  local maxnums_str44\n    local maxnums_str45\n    local maxnums_str46\n   \
    \ local maxnums_str47\n    local maxnums_str48\n    local maxnums_str49\n    local\
    \ maxnums_str50\n    local maxnums_str51\n    local maxnums_str52\n    local maxnums_str53\n\
    \    local maxnums_str54\n    local maxnums_str55\n    local maxnums_str56\n \
    \   local maxnums_str57\n    local \n}\n\ncandidate() {\n    maximum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\"\
    \ ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"\
    -3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=(\"${@}\")\n    local k=\"${2}\"\
    \n    local max\n    local i\n    local j\n    local tmp\n    local len\n    local\
    \ maxlen\n    local maxnum\n    local maxnumlen\n    local maxnumstr\n    local\
    \ maxnumstrlen\n    local maxnumstrlen2\n    local maxnumstrlen3\n    local maxnumstrlen4\n\
    \    local maxnumstrlen5\n    local maxnumstrlen6\n    local maxnumstrlen7\n \
    \   local maxnumstrlen8\n    local maxnumstrlen9\n    local maxnumstrlen10\n \
    \   local maxnumstrlen11\n    local maxnumstrlen12\n    local maxnumstrlen13\n\
    \    local maxnumstrlen14\n    local maxnumstrlen15\n    local maxnumstrlen16\n\
    \    local maxnumstrlen17\n    local maxnumstrlen18\n    local maxnumstrlen19\n\
    \    local maxnumstrlen20\n    local maxnumstrlen21\n    local maxnumstrlen22\n\
    \    local maxnumstrlen23\n    local maxnumstrlen24\n    local maxnumstrlen25\n\
    \    local maxnumstrlen26\n    local maxnumstrlen27\n    local maxnumstrlen28\n\
    \    local maxnumstrlen29\n    local maxnumstrlen30\n    local maxnumstrlen31\n\
    \    local maxnumstrlen32\n    local maxnumstrlen33\n    local maxnumstrlen34\n\
    \    local maxnumstrlen35\n    local maxnumstrlen36\n    local maxnumstrlen37\n\
    \    local maxnumstrlen38\n    local maxnumstrlen39\n    local maxnumstrlen40\n\
    \    local maxnumstrlen41\n    local maxnumstrlen42\n    local maxnumstrlen43\n\
    \    local maxnumstrlen44\n    local maxnumstrlen45\n    local maxnumstrlen46\n\
    \    local maxnumstrlen47\n    local maxnumstrlen48\n    local maxnumstrlen49\n\
    \    local maxnumstrlen50\n    local maxnumstrlen51\n    local maxnumstrlen52\n\
    \    local maxnumstrlen53\n    local maxnumstrlen54\n    local maxnumstrlen55\n\
    \    local maxnumstrlen56\n    local maxnumstrlen57\n}\n\ncandidate() {\n    maximum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"\
    -4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate\
    \ \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1\
    \ 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"\
    4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13\
    \ -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n\
    \    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\"\
    \ \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n\
    \    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxi\n    local maxj\n    local maxk\n    local maxv\n    local maxvlen\n\
    \    local maxvk\n    local maxvj\n    local maxvjlen\n    local maxvjk\n    local\
    \ maxvjklen\n    local maxvjklen\n    local maxvjklenlen\n    local maxvjklenlenlen\n\
    \    local maxvjklenlenlenlen\n    local maxvjklenlenlenlenlen\n    local maxvjklenlenlenlenlenlen\n\
    \    local maxvjklenlenlenlenlenlenlen\n    local maxvjklenlenlenlenlenlenlenlen\n\
    \    local maxvjklenlenlenlenlenlenlenlenlen\n    local maxvjklenlenlenlenlenlenlenlenlenlen\n\
    \    local maxvjklenlenlenlenlenlenlenlenlenlenlen\n    local maxvjklenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxvjklenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxvjklenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxvjklenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxvjklenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxvjklenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxvjklenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxvjklenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local\
    \ maxvjklenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxvjklenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxvjklenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n \
    \   local maxvjklenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxvjklenlenlenlenlenlenlenlen\n}\n\ncandidate() {\n    maximum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4\
    \ -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate\
    \ \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1\
    \ 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"\
    4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13\
    \ -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n\
    \    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\"\
    \ \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n\
    \    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxVal\n    local maxIndex2\n\
    \    local maxVal2\n    local maxIndex3\n    local maxVal3\n    local maxIndex4\n\
    \    local maxVal4\n    local maxIndex5\n    local maxVal5\n    local maxIndex6\n\
    \    local maxVal6\n    local maxIndex7\n    local maxVal7\n    local maxIndex8\n\
    \    local maxVal8\n    local maxIndex9\n    local maxVal9\n    local maxIndex10\n\
    \    local maxVal10\n    local maxIndex11\n    local maxVal11\n    local maxIndex12\n\
    \    local maxVal12\n    local maxIndex13\n    local maxVal13\n    local maxIndex14\n\
    \    local maxVal14\n    local maxIndex15\n    local maxVal15\n    local maxIndex16\n\
    \    local maxVal16\n    local maxIndex17\n    local maxVal17\n    local maxIndex18\n\
    \    local maxVal18\n    local maxIndex19\n    local maxVal19\n    local maxIndex20\n\
    \    local maxVal20\n    local maxIndex21\n    local maxVal21\n    local maxIndex22\n\
    \    local maxVal22\n    local maxIndex23\n    local maxVal23\n    local maxIndex24\n\
    \    local maxVal24\n    local maxIndex25\n    local maxVal25\n    local maxIndex26\n\
    \    local maxVal26\n    local maxIndex27\n    local maxVal27\n    local maxIndex28\n\
    \    local maxVal28\n    local maxIndex29\n    local maxVal29\n    local maxIndex30\n\
    \    local maxVal30\n    local maxIndex31\n    local maxVal31\n    local maxIndex32\n\
    \    local maxVal32\n    local maxIndex33\n    local maxVal33\n    local maxIndex34\n\
    \    local maxVal34\n    local maxIndex35\n    local maxVal35\n    local maxIndex36\n\
    \    local maxVal36\n    local maxIndex37\n    local maxVal37\n    local maxIndex38\n\
    \    local maxVal38\n    local maxIndex39\n    local maxVal39\n    local maxIndex40\n\
    \    local maxVal40\n    local maxIndex41\n    local maxVal\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n\
    \    local maxidx\n    local maxval\n    local maxidx2\n    local maxval2\n  \
    \  local maxidx3\n    local maxval3\n    local maxidx4\n    local maxval4\n  \
    \  local maxidx5\n    local maxval5\n    local maxidx6\n    local maxval6\n  \
    \  local maxidx7\n    local maxval7\n    local maxidx8\n    local maxval8\n  \
    \  local maxidx9\n    local maxval9\n    local maxidx10\n    local maxval10\n\
    \    local maxidx11\n    local maxval11\n    local maxidx12\n    local maxval12\n\
    \    local maxidx13\n    local maxval13\n    local maxidx14\n    local maxval14\n\
    \    local maxidx15\n    local maxval15\n    local maxidx16\n    local maxval16\n\
    \    local maxidx17\n    local maxval17\n    local maxidx18\n    local maxval18\n\
    \    local maxidx19\n    local maxval19\n    local maxidx20\n    local maxval20\n\
    \    local maxidx21\n    local maxval21\n    local maxidx22\n    local maxval22\n\
    \    local maxidx23\n    local maxval23\n    local maxidx24\n    local maxval24\n\
    \    local maxidx25\n    local maxval25\n    local maxidx26\n    local maxval26\n\
    \    local maxidx27\n    local maxval27\n    local maxidx28\n    local maxval28\n\
    \    local maxidx29\n    local maxval29\n    local maxidx30\n    local maxval30\n\
    \    local maxidx31\n    local maxval31\n    local maxidx32\n    local maxval32\n\
    \    local maxidx33\n    local maxval33\n    local maxidx34\n    local maxval34\n\
    \    local maxidx35\n    local maxval35\n    local maxidx36\n    local maxval36\n\
    \    local maxidx37\n    local maxval37\n    local maxidx38\n    local maxval38\n\
    \    local maxidx39\n    local maxval39\n    local maxidx40\n\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxVal\n    local maxIndexArr\n\
    \    local maxValArr\n    local maxIndexArrLen\n    local maxValArrLen\n    local\
    \ maxIndexArrLenLen\n    local maxValArrLen\n    local maxIndexArrLenLen\n   \
    \ local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArr\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr k\n    arr=$1\n    k=$2\n    local\
    \ max\n    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n\
    \    local maxidx\n    local maxval\n    local maxidx2\n    local maxval2\n  \
    \  local maxidx3\n    local maxval3\n    local maxidx4\n    local maxval4\n  \
    \  local maxidx5\n    local maxval5\n    local maxidx6\n    local maxval6\n  \
    \  local maxidx7\n    local maxval7\n    local maxidx8\n    local maxval8\n  \
    \  local maxidx9\n    local maxval9\n    local maxidx10\n    local maxval10\n\
    \    local maxidx11\n    local maxval11\n    local maxidx12\n    local maxval12\n\
    \    local maxidx13\n    local maxval13\n    local maxidx14\n    local maxval14\n\
    \    local maxidx15\n    local maxval15\n    local maxidx16\n    local maxval16\n\
    \    local maxidx17\n    local maxval17\n    local maxidx18\n    local maxval18\n\
    \    local maxidx19\n    local maxval19\n    local maxidx20\n    local maxval20\n\
    \    local maxidx21\n    local maxval21\n    local maxidx22\n    local maxval22\n\
    \    local maxidx23\n    local maxval23\n    local maxidx24\n    local maxval24\n\
    \    local maxidx25\n    local maxval25\n    local maxidx26\n    local maxval26\n\
    \    local maxidx27\n    local maxval27\n    local maxidx28\n    local maxval28\n\
    \    local maxidx29\n    local maxval29\n    local maxidx30\n    local maxval30\n\
    \    local maxidx31\n    local maxval31\n    local maxidx32\n    local maxval32\n\
    \    local maxidx33\n    local maxval33\n    local maxidx34\n    local maxval34\n\
    \    local maxidx35\n    local maxval35\n    local maxidx36\n    local maxval36\n\
    \    local maxidx37\n    local maxval37\n    local maxidx38\n    local maxval38\n\
    \    local maxidx39\n    local maxval39\n    local maxidx40\n\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n    local\
    \ maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n \
    \   local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n    local max\n}\n\n\
    candidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr k\n    arr=$1\n    k=$2\n    local\
    \ i max maxi maxk maxarr\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n    local -a maxarr\n    local -a maxk\n    local -a\
    \ maxi\n    local -a max\n\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local tmp\n    local len\n\n    len=${#arr[@]}\n\
    \    if [ $len -gt $k ]\n    then\n        echo \"$k exceeds the length of $len\"\
    \n        return 1\n    fi\n\n    max=$arr[0]\n    for ((i=1; i<$len; i++)); do\n\
    \        if [ $arr[$i] -gt $max ]; then\n            max=arr[$i]\n        fi\n\
    \    done\n\n    for ((j=1; j<$k; j++)); do\n        tmp=${arr[$j]}\n        for\
    \ ((i=j+1; i<$len; i++)); do\n            if [ $arr[$i] -gt $tmp ]; then\n   \
    \             tmp=${arr[$i]}\n            fi\n        done\n        arr[$j]=$tmp\n\
    \    done\n\n    echo \"${arr[@]}\"\n}\n\ncandidate() {\n    maximum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\"\
    \ ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"\
    -3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6ezuk3nq.sh: line 32: [: -3[1]: integer expression expected

    /tmp/tmp6ezuk3nq.sh: line 32: [: -3[2]: integer expression expected

    /tmp/tmp6ezuk3nq.sh: line 40: [: -3[2]: integer expression expected

    '
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ max\n    local i\n    local j\n    local maxIndex\n    local maxVal\n    local\
    \ maxIndex2\n    local maxVal2\n    local maxIndex3\n    local maxVal3\n    local\
    \ maxIndex4\n    local maxVal4\n    local maxIndex5\n    local maxVal5\n    local\
    \ maxIndex6\n    local maxVal6\n    local maxIndex7\n    local maxVal7\n    local\
    \ maxIndex8\n    local maxVal8\n    local maxIndex9\n    local maxVal9\n    local\
    \ maxIndex10\n    local maxVal10\n    local maxIndex11\n    local maxVal11\n \
    \   local maxIndex12\n    local maxVal12\n    local maxIndex13\n    local maxVal13\n\
    \    local maxIndex14\n    local maxVal14\n    local maxIndex15\n    local maxVal15\n\
    \    local maxIndex16\n    local maxVal16\n    local maxIndex17\n    local maxVal17\n\
    \    local maxIndex18\n    local maxVal18\n    local maxIndex19\n    local maxVal19\n\
    \    local maxIndex20\n    local maxVal20\n    local maxIndex21\n    local maxVal21\n\
    \    local maxIndex22\n    local maxVal22\n    local maxIndex23\n    local maxVal23\n\
    \    local maxIndex24\n    local maxVal24\n    local maxIndex25\n    local maxVal25\n\
    \    local maxIndex26\n    local maxVal26\n    local maxIndex27\n    local maxVal27\n\
    \    local maxIndex28\n    local maxVal28\n    local maxIndex29\n    local maxVal29\n\
    \    local maxIndex30\n    local maxVal30\n    local maxIndex31\n    local maxVal31\n\
    \    local maxIndex32\n    local maxVal32\n    local maxIndex33\n    local maxVal33\n\
    \    local maxIndex34\n    local maxVal34\n    local maxIndex35\n    local maxVal35\n\
    \    local maxIndex36\n    local maxVal36\n    local maxIndex37\n    local maxVal37\n\
    \    local maxIndex38\n    local maxVal38\n    local maxIndex39\n    local maxVal39\n\
    \    local maxIndex40\n    local maxVal40\n    local maxIndex41\n    \n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local temp\n    local len\n    local maxlen\n \
    \   local maxidx\n    local maxval\n    local maxidx2\n    local maxval2\n   \
    \ local maxidx3\n    local maxval3\n    local maxidx4\n    local maxval4\n   \
    \ local maxidx5\n    local maxval5\n    local maxidx6\n    local maxval6\n   \
    \ local maxidx7\n    local maxval7\n    local maxidx8\n    local maxval8\n   \
    \ local maxidx9\n    local maxval9\n    local maxidx10\n    local maxval10\n \
    \   local maxidx11\n    local maxval11\n    local maxidx12\n    local maxval12\n\
    \    local maxidx13\n    local maxval13\n    local maxidx14\n    local maxval14\n\
    \    local maxidx15\n    local maxval15\n    local maxidx16\n    local maxval16\n\
    \    local maxidx17\n    local maxval17\n    local maxidx18\n    local maxval18\n\
    \    local maxidx19\n    local maxval19\n    local maxidx20\n    local maxval20\n\
    \    local maxidx21\n    local maxval21\n    local maxidx22\n    local maxval22\n\
    \    local maxidx23\n    local maxval23\n    local maxidx24\n    local maxval24\n\
    \    local maxidx25\n    local maxval25\n    local maxidx26\n    local maxval26\n\
    \    local maxidx27\n    local maxval27\n    local maxidx28\n    local maxval28\n\
    \    local maxidx29\n    local maxval29\n    local maxidx30\n    local maxval30\n\
    \    local maxidx31\n    local maxval31\n    local maxidx32\n    local maxval32\n\
    \    local maxidx33\n    local maxval33\n    local maxidx34\n    local maxval34\n\
    \    local maxidx35\n    local maxval35\n    local maxidx36\n    local maxval36\n\
    \    local maxidx37\n    local maxval37\n    local maxidx38\n    local maxval38\n\
    \    local maxidx39\n    local maxval39\n    local maxidx40\n    local max\n}\n\
    \ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 2
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max_arr=()\n\
    \    local max_num=-1\n    local max_index=0\n    local i\n    local j\n    local\
    \ len\n    local max\n    len=${#arr[@]}\n    for ((i = 0; i < len; i++)); do\n\
    \        if [[ ${arr[i]} -gt ${max_num} ]]; then\n            max_num=${arr[i]}\n\
    \            max_index=i\n        fi\n    done\n    max=${max_num}\n    for ((i\
    \ = 0; i < len; i++)); do\n        if [[ ${arr[i]} -eq ${max_num} ]]; then\n \
    \           arr[i]=${arr[i]}\n        else\n            arr[i]=${arr[i]}\n   \
    \     fi\n    done\n    arr=${arr[@]}\n    for ((i = 0; i < len; i++)); do\n \
    \       if [[ ${arr[i]} -gt ${max} ]]; then\n            max=${arr[i]}\n     \
    \   fi\n    done\n    arr=${arr[@]}\n    for ((i = 0; i < len; i++)); do\n   \
    \     if [[ ${arr[i]} -eq ${max} ]]; then\n            arr[i]=${arr[i]}\n    \
    \    else\n            arr[i]=${arr[i]}\n        fi\n    done\n    arr=${arr[@]}\n\
    \    for ((i = 0; i < len; i++)); do\n        if [[ ${arr[i]} -gt ${max} ]]; then\n\
    \            max=${arr[i]}\n        fi\n    done\n    arr=${arr[@]}\n    for ((i\
    \ = 0; i < len; i++)); do\n        if [[ ${arr[i]} -eq ${max} ]]; then\n     \
    \       arr[i]=${arr[i]}\n        else\n            arr[i]=${arr[i]}\n       \
    \ fi\n    done\n    arr=${arr[@]}\n    for ((i = 0; i < len; i++)); do\n     \
    \   if [[ ${arr[i]} -gt ${max} ]]; then\n            max=${arr[i]}\n        fi\n\
    \    done\n    arr=${arr[@]}\n    for ((i = 0; i < len; i++)); do\n        if\
    \ [[ ${arr[i]} -eq ${max} ]]; then\n            arr[i]=${arr[i]}\n        else\n\
    \            arr[i]=${arr[i]}\n        fi\n    done\n    arr=${arr[@]}\n    for\
    \ ((i = 0; i < len; i++)); do\n        if [[ ${arr[i]} -gt ${max} ]]; then\n \
    \           max=${arr[i]}\n        fi\n    done\n    arr=${arr[@]}\n    for ((i\
    \ = 0; i < len; i++)); do\n        if [[ ${arr[i]} -eq ${max} ]]; then\n     \
    \       arr\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"\
    4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbmtii4mn.sh: line 91: syntax error near unexpected token `}''

    /tmp/tmpbmtii4mn.sh: line 91: `}''

    '
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxValue\n\
    \    local maxIndexValue\n    local maxIndexValueIndex\n    local maxIndexValueIndex2\n\
    \    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n\
    \    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n\
    \    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n\
    \    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n\
    \    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n\
    \    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n\
    \    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n\
    \    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n\
    \    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n\
    \    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n\
    \    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n\
    \    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n\
    \    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n\
    \    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n\
    \    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n\
    \    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n\
    \    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n\
    \    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n\
    \    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n    local maxIndexValue\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnumlen\n    local maxnumlen2\n    local maxnumlen3\n    local maxnumlen4\n\
    \    local maxnumlen5\n    local maxnumlen6\n    local maxnumlen7\n    local maxnumlen8\n\
    \    local maxnumlen9\n    local maxnumlen10\n    local maxnumlen11\n    local\
    \ maxnumlen12\n    local maxnumlen13\n    local maxnumlen14\n    local maxnumlen15\n\
    \    local maxnumlen16\n    local maxnumlen17\n    local maxnumlen18\n    local\
    \ maxnumlen19\n    local maxnumlen20\n    local maxnumlen21\n    local maxnumlen22\n\
    \    local maxnumlen23\n    local maxnumlen24\n    local maxnumlen25\n    local\
    \ maxnumlen26\n    local maxnumlen27\n    local maxnumlen28\n    local maxnumlen29\n\
    \    local maxnumlen30\n    local maxnumlen31\n    local maxnumlen32\n    local\
    \ maxnumlen33\n    local maxnumlen34\n    local maxnumlen35\n    local maxnumlen36\n\
    \    local maxnumlen37\n    local maxnumlen38\n    local maxnumlen39\n    local\
    \ maxnumlen40\n    local maxnumlen41\n    local maxnumlen42\n    local maxnumlen43\n\
    \    local maxnumlen44\n    local maxnumlen45\n    local maxnumlen46\n    local\
    \ maxnumlen47\n    local maxnumlen48\n    local maxnumlen49\n    local maxnumlen50\n\
    \    local maxnumlen51\n    local maxnumlen52\n    local maxnumlen53\n    local\
    \ maxnumlen54\n    local maxnumlen55\n    local maxnumlen56\n    local maxnumlen57\n\
    \    local maxnumlen58\n    local maxnumlen59\n    local maxnumlen60\n    local\
    \ maxnumlen61\n    local maxnumlen62\n    local maxnumlen63\n    local maxnumlen64\n\
    \    local maxnumlen65\n    local maxnumlen66\n    local maxnumlen67\n    local\
    \ maxnumlen68\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxVal\n\
    \    local maxIndexVal\n    local maxIndexVal2\n    local maxIndexVal3\n    local\
    \ maxIndexVal4\n    local maxIndexVal5\n    local maxIndexVal6\n    local maxIndexVal7\n\
    \    local maxIndexVal8\n    local maxIndexVal9\n    local maxIndexVal10\n   \
    \ local maxIndexVal11\n    local maxIndexVal12\n    local maxIndexVal13\n    local\
    \ maxIndexVal14\n    local maxIndexVal15\n    local maxIndexVal16\n    local maxIndexVal17\n\
    \    local maxIndexVal18\n    local maxIndexVal19\n    local maxIndexVal20\n \
    \   local maxIndexVal21\n    local maxIndexVal22\n    local maxIndexVal23\n  \
    \  local maxIndexVal24\n    local maxIndexVal25\n    local maxIndexVal26\n   \
    \ local maxIndexVal27\n    local maxIndexVal28\n    local maxIndexVal29\n    local\
    \ maxIndexVal30\n    local maxIndexVal31\n    local maxIndexVal32\n    local maxIndexVal33\n\
    \    local maxIndexVal34\n    local maxIndexVal35\n    local maxIndexVal36\n \
    \   local maxIndexVal37\n    local maxIndexVal38\n    local maxIndexVal39\n  \
    \  local maxIndexVal40\n    local maxIndexVal41\n    local maxIndexVal42\n   \
    \ local maxIndexVal43\n    local maxIndexVal44\n    local maxIndexVal45\n    local\
    \ maxIndexVal46\n    local maxIndexVal47\n    local maxIndexVal48\n    local maxIndexVal49\n\
    \    local maxIndexVal50\n    local maxIndexVal51\n    local maxIndexVal52\n \
    \   local maxIndexVal53\n    local maxIndexVal54\n    local maxIndexVal55\n  \
    \  local maxIndexVal56\n    local maxIndexVal57\n    local maxIndexVal58\n   \
    \ local maxIndexVal59\n    local maxIndexVal60\n    local maxIndexVal61\n    local\
    \ maxIndexVal62\n    local maxIndexVal63\n    local maxIndexVal64\n    local maxIndexVal65\n\
    \    local maxIndexVal66\n    local maxIndexVal67\n    local maxIndexVal68\n}\n\
    \ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxVal\n    local maxIndexVal\n\
    \    local maxIndexVal2\n    local maxIndexVal3\n    local maxIndexVal4\n    local\
    \ maxIndexVal5\n    local maxIndexVal6\n    local maxIndexVal7\n    local maxIndexVal8\n\
    \    local maxIndexVal9\n    local maxIndexVal10\n    local maxIndexVal11\n  \
    \  local maxIndexVal12\n    local maxIndexVal13\n    local maxIndexVal14\n   \
    \ local maxIndexVal15\n    local maxIndexVal16\n    local maxIndexVal17\n    local\
    \ maxIndexVal18\n    local maxIndexVal19\n    local maxIndexVal20\n    local maxIndexVal21\n\
    \    local maxIndexVal22\n    local maxIndexVal23\n    local maxIndexVal24\n \
    \   local maxIndexVal25\n    local maxIndexVal26\n    local maxIndexVal27\n  \
    \  local maxIndexVal28\n    local maxIndexVal29\n    local maxIndexVal30\n   \
    \ local maxIndexVal31\n    local maxIndexVal32\n    local maxIndexVal33\n    local\
    \ maxIndexVal34\n    local maxIndexVal35\n    local maxIndexVal36\n    local maxIndexVal37\n\
    \    local maxIndexVal38\n    local maxIndexVal39\n    local maxIndexVal40\n \
    \   local maxIndexVal41\n    local maxIndexVal42\n    local maxIndexVal43\n  \
    \  local maxIndexVal44\n    local maxIndexVal45\n    local maxIndexVal46\n   \
    \ local maxIndexVal47\n    local maxIndexVal48\n    local maxIndexVal49\n    local\
    \ maxIndexVal50\n    local maxIndexVal51\n    local maxIndexVal52\n    local maxIndexVal53\n\
    \    local maxIndexVal54\n    local maxIndexVal55\n    local maxIndexVal56\n \
    \   local maxIndexVal57\n    local maxIndexVal58\n    local maxIndexVal59\n  \
    \  local maxIndexVal60\n    local maxIndexVal61\n    local maxIndexVal62\n   \
    \ local maxIndexVal63\n    local maxIndexVal64\n    local maxIndexVal65\n    local\
    \ maxIndexVal66\n    local maxIndexVal67\n    local maxIndexVal68\n    local max\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxVal\n    local maxIndexArr\n\
    \    local maxValArr\n    local maxIndexArrLen\n    local maxValArrLen\n    local\
    \ maxIndexArrLenLen\n    local maxValArrLen\n    local maxIndexArrLenLen\n   \
    \ local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArrLenLen\n\
    \    local maxValArrLenLen\n    local maxIndexArrLenLen\n    local maxValArrLenLen\n\
    \    local maxIndexArrLenLen\n    local maxValArrLenLen\n    local maxIndexArr\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n\n    len=${#arr[@]}\n\
    \    if [ $len -gt $k ]\n    then\n        echo \"$k numbers are too large\"\n\
    \        return\n    fi\n\n    max=$arr[0]\n    for (( i=1; i<$len; i++ ))\n \
    \   do\n        if [ $arr[$i] -gt $max ]\n        then\n            max=arr[$i]\n\
    \        fi\n    done\n\n    for (( j=0; j<$k; j++ ))\n    do\n        tmp=$max\n\
    \        max=${arr[$j]}\n        arr[$j]=$tmp\n    done\n\n    echo ${arr[@]}\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxVal\n\
    \    local maxIndexVal\n    local maxIndexValIndex\n    local maxIndexValIndexIndex2\n\
    \    local maxIndexValIndex3\n    local maxIndexValIndex4\n    local maxIndexValIndex5\n\
    \    local maxIndexValIndex6\n    local maxIndexValIndex7\n    local maxIndexValIndex8\n\
    \    local maxIndexValIndex9\n    local maxIndexValIndex10\n    local maxIndexValIndex11\n\
    \    local maxIndexValIndex12\n    local maxIndexValIndex13\n    local maxIndexValIndex14\n\
    \    local maxIndexValIndex15\n    local maxIndexValIndex16\n    local maxIndexValIndex17\n\
    \    local maxIndexValIndex18\n    local maxIndexValIndex19\n    local maxIndexValIndex20\n\
    \    local maxIndexValIndex21\n    local maxIndexValIndex22\n    local maxIndexValIndex23\n\
    \    local maxIndexValIndex24\n    local maxIndexValIndex25\n    local maxIndexValIndex26\n\
    \    local maxIndexValIndex27\n    local maxIndexValIndex28\n    local maxIndexValIndex29\n\
    \    local maxIndexValIndex30\n    local maxIndexValIndex31\n    local maxIndexValIndex32\n\
    \    local maxIndexValIndex33\n    local maxIndexValIndex34\n    local maxIndexValIndex35\n\
    \    local maxIndexValIndex36\n    local maxIndexValIndex37\n    local maxIndexValIndex38\n\
    \    local maxIndexValIndex39\n    local maxIndexValIndex40\n    local maxIndexValIndex41\n\
    \    local maxIndexValIndex42\n    local maxIndexValIndex43\n    local maxIndexValIndex44\n\
    \    local maxIndexValIndex45\n    local maxIndexValIndex46\n    local maxIndexValIndex47\n\
    \    local maxIndexValIndex48\n    local maxIndexValIndex49\n    local maxIndexValIndex50\n\
    \    local maxIndexValIndex51\n    local maxIndexValIndex52\n    local maxIndexValIndex53\n\
    \    local maxIndexValIndex54\n    local maxIndexValIndex55\n    local maxIndexValIndex56\n\
    \    local maxIndexValIndex57\n    local maxIndexValIndex58\n    local maxIndex\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n\n    len=${#arr[@]}\n\
    \    if [[ $len -gt $k ]]; then\n        echo \"$k exceeds the length of $len\"\
    \n        return 1\n    fi\n\n    max=$arr[0]\n    for ((i=1; i<$len; i++)); do\n\
    \        if [[ $arr[$i] -gt $max ]]; then\n            max=$arr[$i]\n        fi\n\
    \    done\n\n    for ((j=0; j<$k; j++)); do\n        tmp=${arr[$j]}\n        for\
    \ ((i=j+1; i<$len; i++)); do\n            if [[ $arr[$i] -gt $tmp ]]; then\n \
    \               tmp=$arr[$i]\n            fi\n        done\n        arr[$j]=$tmp\n\
    \    done\n\n    echo \"${arr[@]}\"\n}\n\ncandidate() {\n    maximum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\"\
    \ ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"\
    -3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\"\
    \ \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"\
    0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0\
    \ 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n   \
    \ [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"\
    2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n   \
    \ [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ len=${#arr[@]}\n    local max\n    local i\n    local j\n    local maxlen\n\
    \    local maxidx\n    local maxval\n    local maxidx2\n    local maxval2\n  \
    \  local maxidx3\n    local maxval3\n    local maxidx4\n    local maxval4\n  \
    \  local maxidx5\n    local maxval5\n    local maxidx6\n    local maxval6\n  \
    \  local maxidx7\n    local maxval7\n    local maxidx8\n    local maxval8\n  \
    \  local maxidx9\n    local maxval9\n    local maxidx10\n    local maxval10\n\
    \    local maxidx11\n    local maxval11\n    local maxidx12\n    local maxval12\n\
    \    local maxidx13\n    local maxval13\n    local maxidx14\n    local maxval14\n\
    \    local maxidx15\n    local maxval15\n    local maxidx16\n    local maxval16\n\
    \    local maxidx17\n    local maxval17\n    local maxidx18\n    local maxval18\n\
    \    local maxidx19\n    local maxval19\n    local maxidx20\n    local maxval20\n\
    \    local maxidx21\n    local maxval21\n    local maxidx22\n    local maxval22\n\
    \    local maxidx23\n    local maxval23\n    local maxidx24\n    local maxval24\n\
    \    local maxidx25\n    local maxval25\n    local maxidx26\n    local maxval26\n\
    \    local maxidx27\n    local maxval27\n    local maxidx28\n    local maxval28\n\
    \    local maxidx29\n    local maxval29\n    local maxidx30\n    local maxval30\n\
    \    local maxidx31\n    local maxval31\n    local maxidx32\n    local maxval32\n\
    \    local maxidx33\n    local maxval33\n    local maxidx34\n    local maxval34\n\
    \    local maxidx35\n    local maxval35\n    local maxidx36\n    local maxval36\n\
    \    local maxidx37\n    local maxval37\n    local maxidx38\n    local maxval38\n\
    \    local maxidx39\n    local maxval39\n    local maxidx40\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n    local maxlen\n  \
    \  local maxnum\n    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n\
    \    local maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n\
    \    local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=(\"${@:2}\")\n    local k=\"${1:-1}\"\
    \n    local max\n    local i\n    local j\n    local len\n\n    len=\"${#arr[@]}\"\
    \n    if [[ ${len} -eq 0 ]]; then\n        return 0\n    fi\n\n    if [[ ${k}\
    \ -lt 0 ]]; then\n        k=\"${len}\"\n    fi\n\n    if [[ ${k} -gt ${len} ]];\
    \ then\n        k=\"${len}\"\n    fi\n\n    max=-1\n    i=0 j=0\n    while [[\
    \ ${i} -lt ${len} && ${j} -lt ${k} ]]; do\n        if [[ ${arr[i]} -gt ${max}\
    \ ]]; then\n            max=${arr[i]}\n        fi\n        i=$(( ${i} + 1 ))\n\
    \        j=$(( ${j} + 1 ))\n    done\n\n    local res\n    res=\"${max}\"\n  \
    \  i=0 j=0\n    while [[ ${i} -lt ${len} && ${j} -lt ${k} ]]; do\n        if [[\
    \ ${arr[i]} -gt ${max} ]]; then\n            max=${arr[i]}\n        fi\n     \
    \   i=$(( ${i} + 1 ))\n        j=$(( ${j} + 1 ))\n    done\n    res=\"${res} ${max}\"\
    \n    echo ${res}\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4ud71kr8.sh: line 27: [[: -3 -4 5: syntax error in expression (error
    token is "5")

    /tmp/tmp4ud71kr8.sh: line 31: [[: -3 -4 5: syntax error in expression (error token
    is "5")

    /tmp/tmp4ud71kr8.sh: line 37: [[: -3 -4 5: syntax error in expression (error token
    is "5")

    /tmp/tmp4ud71kr8.sh: line 48: [[: -3 -4 5: syntax error in expression (error token
    is "5")

    '
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=(\"$@\")\n    local k=\"$2\"\n\
    \    local len=\"${#arr[@]}\"\n    local max\n    local i\n    local j\n    local\
    \ maxIndex\n    local maxVal\n    local maxIndexVal\n    local maxValIndex\n \
    \   local maxValIndexVal\n    local maxValIndexValIndex\n    local maxValIndexValIndexIndex\n\
    \    local maxValIndexValIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    local maxValIndexValIndexIndexIndexIndex\n\
    \    local maxValIndexValIndexIndexIndexIndex\n    \n}\n\ncandidate() {\n    maximum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"\
    -4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate\
    \ \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1\
    \ 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"\
    4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13\
    \ -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n\
    \    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\"\
    \ \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n\
    \    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_str_len\n    local\
    \ maxnums_str_len2\n    local maxnums_str_len3\n    local maxnums_str_len4\n \
    \   local maxnums_str_len5\n    local maxnums_str_len6\n    local maxnums_str_len7\n\
    \    local maxnums_str_len8\n    local maxnums_str_len9\n    local maxnums_str_len10\n\
    \    local maxnums_str_len11\n    local maxnums_str_len12\n    local maxnums_str_len13\n\
    \    local maxnums_str_len14\n    local maxnums_str_len15\n    local maxnums_str_len16\n\
    \    local maxnums_str_len17\n    local maxnums_str_len18\n    local maxnums_str_len19\n\
    \    local maxnums_str_len20\n    local maxnums_str_len21\n    local maxnums_str_len22\n\
    \    local maxnums_str_len23\n    local maxnums_str_len24\n    local maxnums_str_len25\n\
    \    local maxnums_str_len26\n    local maxnums_str_len27\n    local maxnums_str_len28\n\
    \    local maxnums_str_len29\n    local maxnums_str_len30\n    local maxnums_str_len31\n\
    \    local maxnums_str_len32\n    local maxnums_str_len33\n    local maxnums_str_len34\n\
    \    local maxnums_str_len35\n    local maxnums_str_len36\n    local maxnums_str_len37\n\
    \    local maxnums_str_len38\n    local maxnums_str_len39\n    local maxnums_str_len40\n\
    \    local maxnums_str_len41\n    local maxnums_str_len42\n    local maxnums_str_len43\n\
    \    local maxnums_str_len44\n    local maxnums_str_len45\n    local maxnums_str_len46\n\
    \    local maxnums_str_len47\n    local maxnums_str_len48\n    local maxnums_str_len49\n\
    \    local maxnums_str_len50\n    local maxnums_str_len51\n    local max\n}\n\n\
    candidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxValue\n\
    \    local maxIndexValue\n    local maxIndexValueIndex\n    local maxIndexValueIndex2\n\
    \    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n\
    \    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n\
    \    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n\
    \    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n\
    \    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n\
    \    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n\
    \    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n\
    \    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n\
    \    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n\
    \    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n\
    \    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n\
    \    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n\
    \    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n\
    \    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n\
    \    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n\
    \    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n\
    \    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n\
    \    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n\
    \    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n    local maxIndexValue\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local temp\n    local len\n    local maxlen\n \
    \   local maxnum\n    local maxnumlen\n    local maxnumlen2\n    local maxnumlen3\n\
    \    local maxnumlen4\n    local maxnumlen5\n    local maxnumlen6\n    local maxnumlen7\n\
    \    local maxnumlen8\n    local maxnumlen9\n    local maxnumlen10\n    local\
    \ maxnumlen11\n    local maxnumlen12\n    local maxnumlen13\n    local maxnumlen14\n\
    \    local maxnumlen15\n    local maxnumlen16\n    local maxnumlen17\n    local\
    \ maxnumlen18\n    local maxnumlen19\n    local maxnumlen20\n    local maxnumlen21\n\
    \    local maxnumlen22\n    local maxnumlen23\n    local maxnumlen24\n    local\
    \ maxnumlen25\n    local maxnumlen26\n    local maxnumlen27\n    local maxnumlen28\n\
    \    local maxnumlen29\n    local maxnumlen30\n    local maxnumlen31\n    local\
    \ maxnumlen32\n    local maxnumlen33\n    local maxnumlen34\n    local maxnumlen35\n\
    \    local maxnumlen36\n    local maxnumlen37\n    local maxnumlen38\n    local\
    \ maxnumlen39\n    local maxnumlen40\n    local maxnumlen41\n    local maxnumlen42\n\
    \    local maxnumlen43\n    local maxnumlen44\n    local maxnumlen45\n    local\
    \ maxnumlen46\n    local maxnumlen47\n    local maxnumlen48\n    local maxnumlen49\n\
    \    local maxnumlen50\n    local maxnumlen51\n    local maxnumlen52\n    local\
    \ maxnumlen53\n    local maxnumlen54\n    local maxnumlen55\n    local maxnumlen56\n\
    \    local maxnumlen57\n    local maxnumlen58\n    local maxnumlen59\n    local\
    \ maxnumlen60\n    local maxnumlen61\n    local maxnumlen62\n    local maxnumlen63\n\
    \    local maxnumlen64\n    local maxnumlen65\n    local maxnumlen66\n    local\
    \ maxnumlen67\n    local \n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxValue\n\
    \    local maxIndexValue\n    local maxIndexValueIndex\n    local maxIndexValueIndex2\n\
    \    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n\
    \    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n\
    \    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n\
    \    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n\
    \    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n\
    \    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n\
    \    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n\
    \    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n\
    \    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n\
    \    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n\
    \    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n\
    \    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n\
    \    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n\
    \    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n\
    \    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n\
    \    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n\
    \    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n\
    \    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n\
    \    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n    local maxIndexValue\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=( $1 )\n    local k=$2\n    local\
    \ result=()\n    local count=0\n    local max=0\n    local i\n    \n    for i\
    \ in \"${arr[@]}\"; do\n        if [ $count -lt $k ]; then\n            result[$count]=$i\n\
    \            count=$((count+1))\n        elif [ $count -eq $k ]; then\n      \
    \      if [ $max -lt $i ]; then\n                max=$i\n            fi\n    \
    \    fi\n    done\n    \n    for i in \"${result[@]}\"; do\n        echo $i\n\
    \    done\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"\
    4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") =\
    \ \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_strs\n    local maxnums_strs_len\n\
    \    local maxnums_strs_lens\n    local maxnums_strs_lens_len\n    local maxnums_strs_lens_lens\n\
    \    local maxnums_strs_lens_lens_len\n    local maxnums_strs_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n   \
    \ local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n \
    \   local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxValue\n    local maxIndexValue\n\
    \    local maxIndexValueCount\n    local maxIndexValueCountMax\n    local maxIndexValueCountMin\n\
    \    local maxIndexValueCountMinMax\n    local maxIndexValueCountMinMaxMax\n \
    \   local maxIndexValueCountMinMaxMaxMax\n    local maxIndexValueCountMinMaxMaxMaxMax\n\
    \    local maxIndexValueCountMinMaxMaxMaxMaxMax\n    local maxIndexValueCountMinMaxMaxMaxMaxMaxMax\n\
    \    local maxIndexValueCountMinMaxMaxMaxMaxMaxMaxMax\n    local maxIndexValueCountMinMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local maxIndexValueCountMinMaxMaxMaxMaxMaxMaxMaxMax\n    local maxIndexValueCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local maxIndexValueCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n    local maxIndexValueCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local maxIndexValueCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n    local\
    \ maxIndexValueCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n    local maxIndexValueCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local maxIndexValueCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local maxIndexValueCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local maxIndexValueCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local maxIndexValueCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local maxIndex\n    local maxVal\n    local maxCount\n\
    \    local count\n    local maxCountIndex\n    local maxCountVal\n    local maxCountCount\n\
    \    local maxCountValIndex\n    local maxCountValCount\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountValCountIndex\n\
    \    local maxCountValCountIndex\n    local maxCountValCountIndex\n    local maxCountVal\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local len=${#arr[@]}\n\
    \    local max\n    local i\n    local j\n    local tmp\n    local maxIndex\n\
    \    local maxVal\n    local maxIndex2\n    local maxVal2\n    local maxIndex3\n\
    \    local maxVal3\n    local maxIndex4\n    local maxVal4\n    local maxIndex5\n\
    \    local maxVal5\n    local maxIndex6\n    local maxVal6\n    local maxIndex7\n\
    \    local maxVal7\n    local maxIndex8\n    local maxVal8\n    local maxIndex9\n\
    \    local maxVal9\n    local maxIndex10\n    local maxVal10\n    local maxIndex11\n\
    \    local maxVal11\n    local maxIndex12\n    local maxVal12\n    local maxIndex13\n\
    \    local maxVal13\n    local maxIndex14\n    local maxVal14\n    local maxIndex15\n\
    \    local maxVal15\n    local maxIndex16\n    local maxVal16\n    local maxIndex17\n\
    \    local maxVal17\n    local maxIndex18\n    local maxVal18\n    local maxIndex19\n\
    \    local maxVal19\n    local maxIndex20\n    local maxVal20\n    local maxIndex21\n\
    \    local maxVal21\n    local maxIndex22\n    local maxVal22\n    local maxIndex23\n\
    \    local maxVal23\n    local maxIndex24\n    local maxVal24\n    local maxIndex25\n\
    \    local maxVal25\n    local maxIndex26\n    local maxVal26\n    local maxIndex27\n\
    \    local maxVal27\n    local maxIndex28\n    local maxVal28\n    local maxIndex29\n\
    \    local maxVal29\n    local maxIndex30\n    local maxVal30\n    local maxIndex31\n\
    \    local maxVal31\n    local maxIndex32\n    local maxVal32\n    local maxIndex33\n\
    \    local maxVal33\n    local maxIndex34\n    local maxVal34\n    local maxIndex35\n\
    \    local maxVal35\n    local maxIndex36\n    local maxVal36\n    local maxIndex37\n\
    \    local maxVal37\n    local maxIndex38\n    local maxVal38\n    local maxIndex39\n\
    \    local maxVal39\n    local maxIndex40\n    local max\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_strs\n    local maxnums_strs_len\n\
    \    local maxnums_strs_lens\n    local maxnums_strs_lens_len\n    local maxnums_strs_lens_lens\n\
    \    local maxnums_strs_lens_lens_len\n    local maxnums_strs_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n   \
    \ local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n \
    \   local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_len\n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local j\n    local max\n    local maxIndex\n    local maxValue\n\
    \    local maxIndexValue\n    local maxIndexValueIndex\n    local maxIndexValueIndex2\n\
    \    local maxIndexValueIndex3\n    local maxIndexValueIndex4\n    local maxIndexValueIndex5\n\
    \    local maxIndexValueIndex6\n    local maxIndexValueIndex7\n    local maxIndexValueIndex8\n\
    \    local maxIndexValueIndex9\n    local maxIndexValueIndex10\n    local maxIndexValueIndex11\n\
    \    local maxIndexValueIndex12\n    local maxIndexValueIndex13\n    local maxIndexValueIndex14\n\
    \    local maxIndexValueIndex15\n    local maxIndexValueIndex16\n    local maxIndexValueIndex17\n\
    \    local maxIndexValueIndex18\n    local maxIndexValueIndex19\n    local maxIndexValueIndex20\n\
    \    local maxIndexValueIndex21\n    local maxIndexValueIndex22\n    local maxIndexValueIndex23\n\
    \    local maxIndexValueIndex24\n    local maxIndexValueIndex25\n    local maxIndexValueIndex26\n\
    \    local maxIndexValueIndex27\n    local maxIndexValueIndex28\n    local maxIndexValueIndex29\n\
    \    local maxIndexValueIndex30\n    local maxIndexValueIndex31\n    local maxIndexValueIndex32\n\
    \    local maxIndexValueIndex33\n    local maxIndexValueIndex34\n    local maxIndexValueIndex35\n\
    \    local maxIndexValueIndex36\n    local maxIndexValueIndex37\n    local maxIndexValueIndex38\n\
    \    local maxIndexValueIndex39\n    local maxIndexValueIndex40\n    local maxIndexValueIndex41\n\
    \    local maxIndexValueIndex42\n    local maxIndexValueIndex43\n    local maxIndexValueIndex44\n\
    \    local maxIndexValueIndex45\n    local maxIndexValueIndex46\n    local maxIndexValueIndex47\n\
    \    local maxIndexValueIndex48\n    local maxIndexValueIndex49\n    local maxIndexValueIndex50\n\
    \    local maxIndexValueIndex51\n    local maxIndexValueIndex52\n    local maxIndexValueIndex53\n\
    \    local maxIndexValueIndex54\n    local maxIndexValueIndex55\n    local maxIndexValueIndex56\n\
    \    local maxIndexValueIndex57\n    local maxIndexValueIndex58\n    local maxIndexValue\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local max\n    local j\n    local tmp\n    local len\n    local\
    \ maxlen\n    local maxlen2\n    local maxlen3\n    local maxlen4\n    local maxlen5\n\
    \    local maxlen6\n    local maxlen7\n    local maxlen8\n    local maxlen9\n\
    \    local maxlen10\n    local maxlen11\n    local maxlen12\n    local maxlen13\n\
    \    local maxlen14\n    local maxlen15\n    local maxlen16\n    local maxlen17\n\
    \    local maxlen18\n    local maxlen19\n    local maxlen20\n    local maxlen21\n\
    \    local maxlen22\n    local maxlen23\n    local maxlen24\n    local maxlen25\n\
    \    local maxlen26\n    local maxlen27\n    local maxlen28\n    local maxlen29\n\
    \    local maxlen30\n    local maxlen31\n    local maxlen32\n    local maxlen33\n\
    \    local maxlen34\n    local maxlen35\n    local maxlen36\n    local maxlen37\n\
    \    local maxlen38\n    local maxlen39\n    local maxlen40\n    local maxlen41\n\
    \    local maxlen42\n    local maxlen43\n    local maxlen44\n    local maxlen45\n\
    \    local maxlen46\n    local maxlen47\n    local maxlen48\n    local maxlen49\n\
    \    local maxlen50\n    local maxlen51\n    local maxlen52\n    local maxlen53\n\
    \    local maxlen54\n    local maxlen55\n    local maxlen56\n    local maxlen57\n\
    \    local maxlen58\n    local maxlen59\n    local maxlen60\n    local maxlen61\n\
    \    local maxlen62\n    local maxlen63\n    local maxlen64\n    local maxlen65\n\
    \    local maxlen66\n    local maxlen67\n    local maxlen68\n    local maxlen69\n\
    \    local maxlen70\n    local maxlen71\n    local maxlen72\n    local maxlen73\n\
    \    local maxlen74\n    local maxlen75\n    local maxlen76\n    local maxlen77\n\
    \    local maxlen78\n    local maxlen79\n    local max\n}\n\ncandidate() {\n \
    \   maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local output\n\
    \    local i\n    local max\n    local j\n    local temp\n    local len\n    local\
    \ maxlen\n    local maxindex\n    local maxval\n    local maxindex2\n    local\
    \ maxval2\n    local maxindex3\n    local maxval3\n    local maxindex4\n    local\
    \ maxval4\n    local maxindex5\n    local maxval5\n    local maxindex6\n    local\
    \ maxval6\n    local maxindex7\n    local maxval7\n    local maxindex8\n    local\
    \ maxval8\n    local maxindex9\n    local maxval9\n    local maxindex10\n    local\
    \ maxval10\n    local maxindex11\n    local maxval11\n    local maxindex12\n \
    \   local maxval12\n    local maxindex13\n    local maxval13\n    local maxindex14\n\
    \    local maxval14\n    local maxindex15\n    local maxval15\n    local maxindex16\n\
    \    local maxval16\n    local maxindex17\n    local maxval17\n    local maxindex18\n\
    \    local maxval18\n    local maxindex19\n    local maxval19\n    local maxindex20\n\
    \    local maxval20\n    local maxindex21\n    local maxval21\n    local maxindex22\n\
    \    local maxval22\n    local maxindex23\n    local maxval23\n    local maxindex24\n\
    \    local maxval24\n    local maxindex25\n    local maxval25\n    local maxindex26\n\
    \    local maxval26\n    local maxindex27\n    local maxval27\n    local maxindex28\n\
    \    local maxval28\n    local maxindex29\n    local maxval29\n    local maxindex30\n\
    \    local maxval30\n    local maxindex31\n    local maxval31\n    local maxindex32\n\
    \    local maxval32\n    local maxindex33\n    local maxval33\n    local maxindex34\n\
    \    local maxval34\n    local maxindex35\n    local maxval35\n    local maxindex36\n\
    \    local maxval36\n    local maxindex37\n    local maxval37\n    local maxindex38\n\
    \    local maxval38\n    local maxindex39\n    local maxval39\n    local maxindex40\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local tmp\n    local len\n\n    len=${#arr[@]}\n\
    \    if [ $len -gt $k ]\n    then\n        echo \"$k is too large\"\n        return\n\
    \    fi\n\n    max=$(echo $arr | sort -n | tail -n 1)\n    arr=()\n    arr+=(\"\
    $max\")\n\n    for (( i=1; i<=$((k-1)); i++ ))\n    do\n        tmp=$(echo $arr\
    \ | sort -n | tail -n 1)\n        arr+=(\"$tmp\")\n    done\n\n    arr+=(\"$max\"\
    )\n    echo ${arr[@]}\n}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate\
    \ \"4 -4 4\" \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\"\
    ) = \"2\" ]]\n    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\"\
    \ ]]\n    [[ $(candidate \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[\
    \ $(candidate \"5 15 0 3 -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[\
    \ $(candidate \"-1 0 2 5 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0\
    \ 5 -7\" \"1\") = \"5\" ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n\
    \    [[ $(candidate \"-10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1\
    \ 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local len=${#arr[@]}\n\
    \    local max\n    local i\n    local j\n    local maxIndex\n    local maxVal\n\
    \    local maxIndexVal\n    local maxIndexVal2\n    local maxIndexVal3\n    local\
    \ maxIndexVal4\n    local maxIndexVal5\n    local maxIndexVal6\n    local maxIndexVal7\n\
    \    local maxIndexVal8\n    local maxIndexVal9\n    local maxIndexVal10\n   \
    \ local maxIndexVal11\n    local maxIndexVal12\n    local maxIndexVal13\n    local\
    \ maxIndexVal14\n    local maxIndexVal15\n    local maxIndexVal16\n    local maxIndexVal17\n\
    \    local maxIndexVal18\n    local maxIndexVal19\n    local maxIndexVal20\n \
    \   local maxIndexVal21\n    local maxIndexVal22\n    local maxIndexVal23\n  \
    \  local maxIndexVal24\n    local maxIndexVal25\n    local maxIndexVal26\n   \
    \ local maxIndexVal27\n    local maxIndexVal28\n    local maxIndexVal29\n    local\
    \ maxIndexVal30\n    local maxIndexVal31\n    local maxIndexVal32\n    local maxIndexVal33\n\
    \    local maxIndexVal34\n    local maxIndexVal35\n    local maxIndexVal36\n \
    \   local maxIndexVal37\n    local maxIndexVal38\n    local maxIndexVal39\n  \
    \  local maxIndexVal40\n    local maxIndexVal41\n    local maxIndexVal42\n   \
    \ local maxIndexVal43\n    local maxIndexVal44\n    local maxIndexVal45\n    local\
    \ maxIndexVal46\n    local maxIndexVal47\n    local maxIndexVal48\n    local maxIndexVal49\n\
    \    local maxIndexVal50\n    local maxIndexVal51\n    local maxIndexVal52\n \
    \   local maxIndexVal53\n    local maxIndexVal54\n    local maxIndexVal55\n  \
    \  local maxIndexVal56\n    local maxIndexVal57\n    local maxIndexVal58\n   \
    \ local maxIndexVal59\n    local maxIndexVal60\n    local maxIndexVal61\n    local\
    \ maxIndexVal62\n    local maxIndexVal63\n    local maxIndexVal64\n    local maxIndexVal65\n\
    \    local maxIndexVal66\n    local maxIndexVal67\n    \n}\n\ncandidate() {\n\
    \    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4 5\"\
    \ \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\" ]]\n\
    \    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr=$1\n    local k=$2\n    local max\n\
    \    local i\n    local j\n    local len\n    local maxlen\n    local maxnum\n\
    \    local maxnums\n    local maxnums_str\n    local maxnums_strs\n    local maxnums_strs_len\n\
    \    local maxnums_strs_lens\n    local maxnums_strs_lens_len\n    local maxnums_strs_lens_lens\n\
    \    local maxnums_strs_lens_lens_len\n    local maxnums_strs_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens_lens\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_len\n    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n   \
    \ local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n \
    \   local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    \    local maxnums_strs_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\n\
    }\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") =\
    \ \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[\
    \ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
    \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3\
    \ -13 -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5\
    \ 3 -10\" \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\"\
    \ ]]\n    [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"\
    -10 10\" \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"\
    0\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037994
- exit_code: 1
  program: "#!/bin/bash\n# Given an array arr of integers and a positive integer k,\
    \ return a sorted list \n# of length k with the maximum k numbers in arr.\n# Example\
    \ 1:\n# Example 2:\n# Example 3:\n# Note:\n# 1. The length of the array will be\
    \ in the range of [1, 1000].\n# 2. The elements in the array will be in the range\
    \ of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated list\n\
    # $2 is an integer\nmaximum() {\n    local arr k\n    arr=$1\n    k=$2\n    local\
    \ i max\n    local tmp\n    local len\n    len=${#arr[@]}\n    for ((i = 0; i\
    \ < len; i++)); do\n        tmp=${arr[i]}\n        if [[ $tmp -gt $k ]]; then\n\
    \            max=${arr[i]}\n        fi\n    done\n    echo $max\n}\n\ncandidate()\
    \ {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-3 -4\
    \ 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\" \"2\") = \"4 4\"\
    \ ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n    [[ $(candidate\
    \ \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate \"-123\
    \ 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13 -8\
    \ 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
    \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n   \
    \ [[ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\"\
    \ \"2\") = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") =\
    \ \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplxlo0pit.sh: line 24: [[: -3 -4 5: syntax error in expression (error
    token is "5")

    '
  stdout: ''
  timestamp: 1660037994

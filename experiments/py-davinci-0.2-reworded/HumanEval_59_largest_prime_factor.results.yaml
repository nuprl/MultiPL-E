name: HumanEval_59_largest_prime_factor
language: py
results:
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    largest_prime\
    \ = 2\n    while n > 1:\n        if n % largest_prime == 0:\n            n //=\
    \ largest_prime\n        else:\n            largest_prime += 1\n    return largest_prime\n\
    \n\ndef check(candidate):\n    assert candidate(15) == 5\n    assert candidate(27)\
    \ == 3\n    assert candidate(63) == 7\n    assert candidate(330) == 11\n    assert\
    \ candidate(13195) == 29\n\ndef test_check():\n    check(largest_prime_factor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    largest_factor\
    \ = 1\n    for i in range(2, n):\n        if n % i == 0:\n            largest_factor\
    \ = i\n            n //= i\n            while n % i == 0:\n                n //=\
    \ i\n    return largest_factor\n\n\ndef check(candidate):\n    assert candidate(15)\
    \ == 5\n    assert candidate(27) == 3\n    assert candidate(63) == 7\n    assert\
    \ candidate(330) == 11\n    assert candidate(13195) == 29\n\ndef test_check():\n\
    \    check(largest_prime_factor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    # Find the\
    \ smallest factor of n\n    factor = smallest_factor(n)\n    # If n is prime,\
    \ return n\n    if factor == n:\n        return n\n    # Otherwise, return the\
    \ largest prime factor of n/factor\n    return largest_prime_factor(n // factor)\n\
    \n\ndef check(candidate):\n    assert candidate(15) == 5\n    assert candidate(27)\
    \ == 3\n    assert candidate(63) == 7\n    assert candidate(330) == 11\n    assert\
    \ candidate(13195) == 29\n\ndef test_check():\n    check(largest_prime_factor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwvvkf2y.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwvvkf2y.py\"\
    , line 25, in test_check\n    check(largest_prime_factor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwvvkf2y.py\"\
    , line 18, in check\n    assert candidate(15) == 5\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwvvkf2y.py\"\
    , line 9, in largest_prime_factor\n    factor = smallest_factor(n)\nNameError:\
    \ name 'smallest_factor' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    # TODO: implement\
    \ this function\n    if n == 1:\n        return 1\n    elif is_prime(n):\n   \
    \     return n\n    else:\n        for i in range(2, n):\n            if n % i\
    \ == 0:\n                return largest_prime_factor(n // i)\n\n\ndef check(candidate):\n\
    \    assert candidate(15) == 5\n    assert candidate(27) == 3\n    assert candidate(63)\
    \ == 7\n    assert candidate(330) == 11\n    assert candidate(13195) == 29\n\n\
    def test_check():\n    check(largest_prime_factor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9u7wluom.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9u7wluom.py\"\
    , line 27, in test_check\n    check(largest_prime_factor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9u7wluom.py\"\
    , line 20, in check\n    assert candidate(15) == 5\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9u7wluom.py\"\
    , line 11, in largest_prime_factor\n    elif is_prime(n):\nNameError: name 'is_prime'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 2:\n\
    \        return n\n    i = 2\n    while i <= n:\n        if n % i == 0:\n    \
    \        n = n // i\n        else:\n            i += 1\n    return i\n\n\ndef\
    \ check(candidate):\n    assert candidate(15) == 5\n    assert candidate(27) ==\
    \ 3\n    assert candidate(63) == 7\n    assert candidate(330) == 11\n    assert\
    \ candidate(13195) == 29\n\ndef test_check():\n    check(largest_prime_factor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    # Find the\
    \ smallest factor of n.\n    factor = 2\n    while n % factor != 0:\n        factor\
    \ += 1\n    # Divide n by the smallest factor.\n    n = n // factor\n    # If\
    \ n is 1, the largest factor is the smallest factor.\n    if n == 1:\n       \
    \ return factor\n    # Otherwise, the largest factor is the largest factor of\
    \ n.\n    return largest_prime_factor(n)\n\ndef check(candidate):\n    assert\
    \ candidate(15) == 5\n    assert candidate(27) == 3\n    assert candidate(63)\
    \ == 7\n    assert candidate(330) == 11\n    assert candidate(13195) == 29\n\n\
    def test_check():\n    check(largest_prime_factor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    largest_prime_factor\
    \ = 1\n    i = 2\n    while i <= n:\n        if n % i == 0:\n            largest_prime_factor\
    \ = i\n            n = n // i\n        else:\n            i += 1\n    return largest_prime_factor\n\
    \n\ndef check(candidate):\n    assert candidate(15) == 5\n    assert candidate(27)\
    \ == 3\n    assert candidate(63) == 7\n    assert candidate(330) == 11\n    assert\
    \ candidate(13195) == 29\n\ndef test_check():\n    check(largest_prime_factor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    factor = 2\n\
    \    while n > 1:\n        if n % factor == 0:\n            n //= factor\n   \
    \     else:\n            factor += 1\n    return factor\n\n\ndef check(candidate):\n\
    \    assert candidate(15) == 5\n    assert candidate(27) == 3\n    assert candidate(63)\
    \ == 7\n    assert candidate(330) == 11\n    assert candidate(13195) == 29\n\n\
    def test_check():\n    check(largest_prime_factor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    i = 2\n  \
    \  while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n \
    \           n //= i\n    return n\n\n\ndef check(candidate):\n    assert candidate(15)\
    \ == 5\n    assert candidate(27) == 3\n    assert candidate(63) == 7\n    assert\
    \ candidate(330) == 11\n    assert candidate(13195) == 29\n\ndef test_check():\n\
    \    check(largest_prime_factor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 2:\n\
    \        return 2\n    if n % 2 == 0:\n        return largest_prime_factor(n //\
    \ 2)\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        if n % i == 0:\n\
    \            return largest_prime_factor(n // i)\n    return n\n\n\ndef check(candidate):\n\
    \    assert candidate(15) == 5\n    assert candidate(27) == 3\n    assert candidate(63)\
    \ == 7\n    assert candidate(330) == 11\n    assert candidate(13195) == 29\n\n\
    def test_check():\n    check(largest_prime_factor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcal2_xu0.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcal2_xu0.py\"\
    , line 26, in test_check\n    check(largest_prime_factor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcal2_xu0.py\"\
    , line 19, in check\n    assert candidate(15) == 5\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcal2_xu0.py\"\
    , line 12, in largest_prime_factor\n    for i in range(3, int(math.sqrt(n)) +\
    \ 1, 2):\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n <= 1:\n\
    \        raise ValueError(\"n must be greater than 1\")\n    if is_prime(n):\n\
    \        raise ValueError(\"n must not be a prime\")\n    for i in range(2, n):\n\
    \        if n % i == 0 and is_prime(i):\n            return i\n\ndef check(candidate):\n\
    \    assert candidate(15) == 5\n    assert candidate(27) == 3\n    assert candidate(63)\
    \ == 7\n    assert candidate(330) == 11\n    assert candidate(13195) == 29\n\n\
    def test_check():\n    check(largest_prime_factor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpni5zg4m5.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpni5zg4m5.py\"\
    , line 24, in test_check\n    check(largest_prime_factor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpni5zg4m5.py\"\
    , line 17, in check\n    assert candidate(15) == 5\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpni5zg4m5.py\"\
    , line 10, in largest_prime_factor\n    if is_prime(n):\nNameError: name 'is_prime'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 2:\n\
    \        return 2\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if n\
    \ % i == 0:\n            return largest_prime_factor(n // i)\n    return n\n\n\
    \ndef check(candidate):\n    assert candidate(15) == 5\n    assert candidate(27)\
    \ == 3\n    assert candidate(63) == 7\n    assert candidate(330) == 11\n    assert\
    \ candidate(13195) == 29\n\ndef test_check():\n    check(largest_prime_factor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5nncz4yd.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5nncz4yd.py\"\
    , line 24, in test_check\n    check(largest_prime_factor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5nncz4yd.py\"\
    , line 20, in check\n    assert candidate(330) == 11\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    i = 2\n  \
    \  while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n \
    \           n //= i\n    return n\n\n\ndef check(candidate):\n    assert candidate(15)\
    \ == 5\n    assert candidate(27) == 3\n    assert candidate(63) == 7\n    assert\
    \ candidate(330) == 11\n    assert candidate(13195) == 29\n\ndef test_check():\n\
    \    check(largest_prime_factor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n\
    \        return 1\n    if is_prime(n):\n        return n\n    for i in range(2,\
    \ n):\n        if n % i == 0:\n            return largest_prime_factor(n // i)\n\
    \n\ndef check(candidate):\n    assert candidate(15) == 5\n    assert candidate(27)\
    \ == 3\n    assert candidate(63) == 7\n    assert candidate(330) == 11\n    assert\
    \ candidate(13195) == 29\n\ndef test_check():\n    check(largest_prime_factor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp86c_5jbv.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp86c_5jbv.py\"\
    , line 25, in test_check\n    check(largest_prime_factor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp86c_5jbv.py\"\
    , line 18, in check\n    assert candidate(15) == 5\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp86c_5jbv.py\"\
    , line 10, in largest_prime_factor\n    if is_prime(n):\nNameError: name 'is_prime'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    # Find the\
    \ smallest factor of n\n    factor = smallest_factor(n)\n    # If n is prime,\
    \ return n\n    if factor == n:\n        return n\n    # Else, return the largest\
    \ prime factor of n / factor\n    return largest_prime_factor(n // factor)\n\n\
    \ndef check(candidate):\n    assert candidate(15) == 5\n    assert candidate(27)\
    \ == 3\n    assert candidate(63) == 7\n    assert candidate(330) == 11\n    assert\
    \ candidate(13195) == 29\n\ndef test_check():\n    check(largest_prime_factor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu2tkzlot.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu2tkzlot.py\"\
    , line 25, in test_check\n    check(largest_prime_factor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu2tkzlot.py\"\
    , line 18, in check\n    assert candidate(15) == 5\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu2tkzlot.py\"\
    , line 9, in largest_prime_factor\n    factor = smallest_factor(n)\nNameError:\
    \ name 'smallest_factor' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    factor = 2\n\
    \    while n > 1:\n        if n % factor == 0:\n            n //= factor\n   \
    \     else:\n            factor += 1\n    return factor\n\n\ndef check(candidate):\n\
    \    assert candidate(15) == 5\n    assert candidate(27) == 3\n    assert candidate(63)\
    \ == 7\n    assert candidate(330) == 11\n    assert candidate(13195) == 29\n\n\
    def test_check():\n    check(largest_prime_factor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    assert n >\
    \ 1 and not is_prime(n)\n    if n % 2 == 0:\n        return largest_prime_factor(n\
    \ // 2)\n    else:\n        for i in range(3, n, 2):\n            if n % i ==\
    \ 0:\n                return largest_prime_factor(n // i)\n\ndef check(candidate):\n\
    \    assert candidate(15) == 5\n    assert candidate(27) == 3\n    assert candidate(63)\
    \ == 7\n    assert candidate(330) == 11\n    assert candidate(13195) == 29\n\n\
    def test_check():\n    check(largest_prime_factor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq2taa9xg.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq2taa9xg.py\"\
    , line 24, in test_check\n    check(largest_prime_factor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq2taa9xg.py\"\
    , line 17, in check\n    assert candidate(15) == 5\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq2taa9xg.py\"\
    , line 8, in largest_prime_factor\n    assert n > 1 and not is_prime(n)\nNameError:\
    \ name 'is_prime' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 2:\n\
    \        return 2\n    elif n % 2 == 0:\n        return largest_prime_factor(n\
    \ // 2)\n    else:\n        for i in range(3, n // 2, 2):\n            if n %\
    \ i == 0:\n                return largest_prime_factor(n // i)\n        return\
    \ n\n\n\ndef check(candidate):\n    assert candidate(15) == 5\n    assert candidate(27)\
    \ == 3\n    assert candidate(63) == 7\n    assert candidate(330) == 11\n    assert\
    \ candidate(13195) == 29\n\ndef test_check():\n    check(largest_prime_factor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    assert n >\
    \ 1 and not is_prime(n)\n    factor = 2\n    while n % factor != 0:\n        factor\
    \ += 1\n    return max(factor, largest_prime_factor(n // factor))\n\n\ndef check(candidate):\n\
    \    assert candidate(15) == 5\n    assert candidate(27) == 3\n    assert candidate(63)\
    \ == 7\n    assert candidate(330) == 11\n    assert candidate(13195) == 29\n\n\
    def test_check():\n    check(largest_prime_factor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2n1hthf9.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2n1hthf9.py\"\
    , line 23, in test_check\n    check(largest_prime_factor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2n1hthf9.py\"\
    , line 16, in check\n    assert candidate(15) == 5\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2n1hthf9.py\"\
    , line 8, in largest_prime_factor\n    assert n > 1 and not is_prime(n)\nNameError:\
    \ name 'is_prime' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def largest_prime_factor(n: int) -> int:\n    \"\"\"Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    # Hint: You\
    \ may want to use the is_prime function.\n    # Hint: You may want to use the\
    \ is_prime function.\n    if n == 1:\n        return 1\n    if is_prime(n):\n\
    \        return n\n    else:\n        for i in range(2, n):\n            if is_prime(i)\
    \ and n % i == 0:\n                return largest_prime_factor(n // i)\n\ndef\
    \ check(candidate):\n    assert candidate(15) == 5\n    assert candidate(27) ==\
    \ 3\n    assert candidate(63) == 7\n    assert candidate(330) == 11\n    assert\
    \ candidate(13195) == 29\n\ndef test_check():\n    check(largest_prime_factor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfqnkh6pw.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfqnkh6pw.py\"\
    , line 27, in test_check\n    check(largest_prime_factor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfqnkh6pw.py\"\
    , line 20, in check\n    assert candidate(15) == 5\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfqnkh6pw.py\"\
    , line 12, in largest_prime_factor\n    if is_prime(n):\nNameError: name 'is_prime'\
    \ is not defined\n"
  exit_code: -1
  status: Exception

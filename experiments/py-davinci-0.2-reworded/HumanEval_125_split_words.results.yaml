language: py
name: HumanEval_125_split_words
results:
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphgq11irv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphgq11irv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphgq11irv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0pqlp2_9.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0pqlp2_9.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0pqlp2_9.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    # your code here\n    if ' ' in txt:\n        return txt.split()\n\
    \    elif ',' in txt:\n        return txt.split(',')\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_i7n6n13.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_i7n6n13.py\"\
    , line 39, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_i7n6n13.py\"\
    , line 34, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return len([i\
    \ for i in txt if ord(i) % 2 == 0])\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5p0zewm7.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5p0zewm7.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5p0zewm7.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpihfvcu14.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpihfvcu14.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpihfvcu14.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpad0uk8r_.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpad0uk8r_.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpad0uk8r_.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph14n8uzh.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph14n8uzh.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph14n8uzh.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxweqlelm.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxweqlelm.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxweqlelm.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnv947jg5.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnv947jg5.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnv947jg5.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuva3bq3s.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuva3bq3s.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuva3bq3s.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdw6j3w9j.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdw6j3w9j.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdw6j3w9j.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx3a7mk1q.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx3a7mk1q.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx3a7mk1q.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9eulna__.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9eulna__.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9eulna__.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv98_84fh.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv98_84fh.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv98_84fh.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvqja4pz_.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvqja4pz_.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvqja4pz_.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(ord(c)\
    \ % 2 for c in txt.lower())\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpehir55de.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpehir55de.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpehir55de.py\"\
    , line 29, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(ord(c)\
    \ % 2 for c in txt.lower())\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdl9tl9oj.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdl9tl9oj.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdl9tl9oj.py\"\
    , line 29, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if txt.find(' ') != -1:\n        return txt.split(' ')\n\
    \    elif txt.find(',') != -1:\n        return txt.split(',')\n    else:\n   \
    \     count = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n    \
    \            count += 1\n        return count\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpapisf5ug.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpapisf5ug.py\", line 38,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpapisf5ug.py\", line\
    \ 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe_0pv772.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpe_0pv772.py\", line 39,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpe_0pv772.py\", line\
    \ 34, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return len([i\
    \ for i in txt if ord(i) % 2 == 0])\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5p0zewm7.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5p0zewm7.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5p0zewm7.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxp5_pjyv.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpxp5_pjyv.py\", line 39,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpxp5_pjyv.py\", line\
    \ 34, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for c in txt:\n            if ord(c) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeamjv1me.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpeamjv1me.py\", line 38,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpeamjv1me.py\", line\
    \ 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxp5_pjyv.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpxp5_pjyv.py\", line 39,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpxp5_pjyv.py\", line\
    \ 34, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxp5_pjyv.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpxp5_pjyv.py\", line 39,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpxp5_pjyv.py\", line\
    \ 34, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return len([i\
    \ for i in txt if ord(i) % 2 == 0])\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5p0zewm7.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5p0zewm7.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5p0zewm7.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe_0pv772.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpe_0pv772.py\", line 39,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpe_0pv772.py\", line\
    \ 34, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxp5_pjyv.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpxp5_pjyv.py\", line 39,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpxp5_pjyv.py\", line\
    \ 34, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxp5_pjyv.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpxp5_pjyv.py\", line 39,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpxp5_pjyv.py\", line\
    \ 34, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return len([i\
    \ for i in txt if ord(i)%2 == 1])\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq6_wwj6h.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpq6_wwj6h.py\", line 34,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpq6_wwj6h.py\", line\
    \ 29, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum([1\
    \ for i in range(len(txt)) if ord(txt[i]) % 2 == 0])\n\ndef check(candidate):\n\
    \    assert candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppzciwnc0.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmppzciwnc0.py\", line 34,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmppzciwnc0.py\", line\
    \ 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(ord(c)\
    \ % 2 for c in txt)\n\ndef check(candidate):\n    assert candidate('Hello world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    \    assert candidate('Hello world,!') == ['Hello', 'world,!']\n    assert candidate('Hello,Hello,world\
    \ !') == ['Hello,Hello,world', '!']\n    assert candidate('abcdef') == 3\n   \
    \ assert candidate('aaabb') == 2\n    assert candidate('aaaBb') == 1\n    assert\
    \ candidate('') == 0\n\ndef test_check():\n    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjas5169_.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpjas5169_.py\", line 34,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpjas5169_.py\", line\
    \ 29, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return len([x\
    \ for x in txt if ord(x) % 2 == 0])\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7mjhkunr.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp7mjhkunr.py\", line 34,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmp7mjhkunr.py\", line\
    \ 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxp5_pjyv.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpxp5_pjyv.py\", line 39,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpxp5_pjyv.py\", line\
    \ 34, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(ord(c)\
    \ % 2 for c in txt.lower())\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdl9tl9oj.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdl9tl9oj.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdl9tl9oj.py\"\
    , line 29, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    # YOUR CODE HERE\n    if ' ' in txt:\n        return txt.split()\n\
    \    elif ',' in txt:\n        return txt.split(',')\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7o5t0_ds.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp7o5t0_ds.py\", line 39,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmp7o5t0_ds.py\", line\
    \ 34, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return len([x\
    \ for x in txt if ord(x) % 2 == 0])\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7mjhkunr.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp7mjhkunr.py\", line 34,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmp7mjhkunr.py\", line\
    \ 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for char in txt:\n            if ord(char) % 2 == 1:\n        \
    \        count += 1\n        return count\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkm59g8nl.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpkm59g8nl.py\", line 38,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpkm59g8nl.py\", line\
    \ 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe_0pv772.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpe_0pv772.py\", line 39,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpe_0pv772.py\", line\
    \ 34, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(ord(c)\
    \ % 2 for c in txt)\n\ndef check(candidate):\n    assert candidate('Hello world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello', 'world!']\n\
    \    assert candidate('Hello world,!') == ['Hello', 'world,!']\n    assert candidate('Hello,Hello,world\
    \ !') == ['Hello,Hello,world', '!']\n    assert candidate('abcdef') == 3\n   \
    \ assert candidate('aaabb') == 2\n    assert candidate('aaaBb') == 1\n    assert\
    \ candidate('') == 0\n\ndef test_check():\n    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjas5169_.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpjas5169_.py\", line 34,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpjas5169_.py\", line\
    \ 29, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if txt.find(' ') != -1:\n        return txt.split(' ')\n\
    \    elif txt.find(',') != -1:\n        return txt.split(',')\n    else:\n   \
    \     count = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n    \
    \            count += 1\n        return count\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpapisf5ug.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpapisf5ug.py\", line 38,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpapisf5ug.py\", line\
    \ 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum([1\
    \ for i in txt if ord(i) % 2 == 0])\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkorl0ad7.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpkorl0ad7.py\", line 34,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpkorl0ad7.py\", line\
    \ 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return len([c\
    \ for c in txt if ord(c) % 2 == 0])\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppseok0v0.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmppseok0v0.py\", line 34,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmppseok0v0.py\", line\
    \ 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if \" \" in txt:\n        return txt.split(\" \")\n  \
    \  elif \",\" in txt:\n        return txt.split(\",\")\n    else:\n        count\
    \ = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n              \
    \  count += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9jqe1vp9.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum([1\
    \ for i in range(len(txt)) if ord(txt[i]) % 2 == 0])\n\ndef check(candidate):\n\
    \    assert candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppzciwnc0.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmppzciwnc0.py\", line 34,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmppzciwnc0.py\", line\
    \ 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for c in txt:\n            if ord(c) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeamjv1me.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpeamjv1me.py\", line 38,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpeamjv1me.py\", line\
    \ 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        return sum(1\
    \ for i in txt if ord(i) % 2 == 0)\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 34, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x5qs9nn.py\"\
    , line 30, in check\n    assert candidate('aaaBb') == 1\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if ' ' in txt:\n        return txt.split(' ')\n    elif\
    \ ',' in txt:\n        return txt.split(',')\n    else:\n        count = 0\n \
    \       for i in txt:\n            if ord(i) % 2 == 1:\n                count\
    \ += 1\n        return count\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!') == ['Hello',\
    \ 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n \
    \   assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n  \
    \  assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 38, in test_check\n    check(split_words)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0l2jlgv.py\"\
    , line 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str],\
    \ int]:\n    \"\"\"\n    Given a string of words, return a list of words split\
    \ on whitespace, if no whitespaces exists in the text you\n    should split on\
    \ commas ',' if no commas exists you should return the number of lower-case letters\
    \ with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z')\
    \ = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n\
    \    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n\
    \    3\n    \"\"\"\n    if txt.find(' ') != -1:\n        return txt.split(' ')\n\
    \    elif txt.find(',') != -1:\n        return txt.split(',')\n    else:\n   \
    \     count = 0\n        for i in txt:\n            if ord(i) % 2 == 1:\n    \
    \            count += 1\n        return count\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world!') == ['Hello', 'world!']\n    assert candidate('Hello,world!')\
    \ == ['Hello', 'world!']\n    assert candidate('Hello world,!') == ['Hello', 'world,!']\n\
    \    assert candidate('Hello,Hello,world !') == ['Hello,Hello,world', '!']\n \
    \   assert candidate('abcdef') == 3\n    assert candidate('aaabb') == 2\n    assert\
    \ candidate('aaaBb') == 1\n    assert candidate('') == 0\n\ndef test_check():\n\
    \    check(split_words)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpapisf5ug.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpapisf5ug.py\", line 38,\
    \ in test_check\n    check(split_words)\n  File \"/tmp/tmpapisf5ug.py\", line\
    \ 33, in check\n    assert candidate('aaabb') == 2\nAssertionError\n"
  stdout: ''
  timestamp: 1659749166

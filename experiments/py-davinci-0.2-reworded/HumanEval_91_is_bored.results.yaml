language: py
name: HumanEval_91_is_bored
results:
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqncl2xw5.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqncl2xw5.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqncl2xw5.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ixwk1f4.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ixwk1f4.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ixwk1f4.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6oy68bnw.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6oy68bnw.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6oy68bnw.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp19v2hpud.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp19v2hpud.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp19v2hpud.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqytfxe3.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqytfxe3.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqytfxe3.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.startswith('I'):\n            boredoms += 1\n    return boredoms\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn5_6f3rh.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn5_6f3rh.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn5_6f3rh.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpquubga0k.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpquubga0k.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpquubga0k.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeon2wggg.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeon2wggg.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeon2wggg.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp47fyzy90.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp47fyzy90.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp47fyzy90.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb7c592fw.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb7c592fw.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb7c592fw.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5betx83x.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5betx83x.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5betx83x.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsm3qn928.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsm3qn928.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsm3qn928.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8z_htg72.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8z_htg72.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8z_htg72.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lhz8poj.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lhz8poj.py\"\
    , line 24, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lhz8poj.py\"\
    , line 17, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppthv8f3o.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppthv8f3o.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppthv8f3o.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    # Split the string into sentences\n    sentences = re.split(r'[.?!]',\
    \ S)\n    # Count the number of sentences that start with \"I\"\n    return sum(1\
    \ for sentence in sentences if sentence.strip().startswith('I'))\n\ndef check(candidate):\n\
    \    assert candidate('Hello world') == 0\n    assert candidate('Is the sky blue?')\
    \ == 0\n    assert candidate('I love It !') == 1\n    assert candidate('bIt')\
    \ == 0\n    assert candidate('I feel good today. I will be productive. will kill\
    \ It') == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef\
    \ test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmse2gug_.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpmse2gug_.py\", line 27,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmpmse2gug_.py\", line 19,\
    \ in check\n    assert candidate('Hello world') == 0\n  File \"/tmp/tmpmse2gug_.py\"\
    , line 14, in is_bored\n    sentences = re.split(r'[.?!]', S)\nNameError: name\
    \ 're' is not defined\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    # Split the string into sentences\n    sentences = re.split('[.?!]',\
    \ S)\n    # Count the number of sentences that start with 'I'\n    return len([s\
    \ for s in sentences if s.strip().startswith('I')])\n\n\ndef check(candidate):\n\
    \    assert candidate('Hello world') == 0\n    assert candidate('Is the sky blue?')\
    \ == 0\n    assert candidate('I love It !') == 1\n    assert candidate('bIt')\
    \ == 0\n    assert candidate('I feel good today. I will be productive. will kill\
    \ It') == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef\
    \ test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7n3z7bhg.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp7n3z7bhg.py\", line 28,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmp7n3z7bhg.py\", line 20,\
    \ in check\n    assert candidate('Hello world') == 0\n  File \"/tmp/tmp7n3z7bhg.py\"\
    , line 14, in is_bored\n    sentences = re.split('[.?!]', S)\nNameError: name\
    \ 're' is not defined\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.startswith('I'):\n            boredoms +=\
    \ 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp64ttuytl.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp64ttuytl.py\", line 30,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmp64ttuytl.py\", line 23,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return sum(1 for s in S.split('.') if s.strip().startswith('I'))\n\
    \ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_xl_lfu9.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_xl_lfu9.py\", line 24,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmp_xl_lfu9.py\", line 17,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.startswith('I'):\n            boredoms += 1\n    return boredoms\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn5_6f3rh.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn5_6f3rh.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn5_6f3rh.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.startswith('I'):\n            boredoms += 1\n    return boredoms\n\
    \ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjcyf97xz.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpjcyf97xz.py\", line 28,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmpjcyf97xz.py\", line 21,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprjrtyhcq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprjrtyhcq.py\", line 24,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmprjrtyhcq.py\", line 17,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprjrtyhcq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprjrtyhcq.py\", line 24,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmprjrtyhcq.py\", line 17,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lhz8poj.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lhz8poj.py\"\
    , line 24, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lhz8poj.py\"\
    , line 17, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('. ')\n    for sentence\
    \ in sentences:\n        if sentence.startswith('I'):\n            boredoms +=\
    \ 1\n    return boredoms\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi22zakno.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpi22zakno.py\", line 29,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmpi22zakno.py\", line 22,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ixwk1f4.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ixwk1f4.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ixwk1f4.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.startswith('I'):\n            boredoms +=\
    \ 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp64ttuytl.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp64ttuytl.py\", line 30,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmp64ttuytl.py\", line 23,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return sum(1 for s in S.split('.') if s.strip().startswith('I'))\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8kt5udpl.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp8kt5udpl.py\", line 25,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmp8kt5udpl.py\", line 18,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.startswith('I'):\n            boredoms +=\
    \ 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp64ttuytl.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp64ttuytl.py\", line 30,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmp64ttuytl.py\", line 23,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.startswith('I'):\n            boredoms += 1\n    return boredoms\n\
    \ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjcyf97xz.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpjcyf97xz.py\", line 28,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmpjcyf97xz.py\", line 21,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprjrtyhcq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprjrtyhcq.py\", line 24,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmprjrtyhcq.py\", line 17,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    # Split the string into sentences\n    sentences = re.split(r'[.?!]',\
    \ S)\n    # Count the number of sentences that start with 'I'\n    return sum(1\
    \ for sentence in sentences if sentence.strip().startswith('I'))\n\n\ndef check(candidate):\n\
    \    assert candidate('Hello world') == 0\n    assert candidate('Is the sky blue?')\
    \ == 0\n    assert candidate('I love It !') == 1\n    assert candidate('bIt')\
    \ == 0\n    assert candidate('I feel good today. I will be productive. will kill\
    \ It') == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef\
    \ test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6lagv6i1.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp6lagv6i1.py\", line 28,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmp6lagv6i1.py\", line 20,\
    \ in check\n    assert candidate('Hello world') == 0\n  File \"/tmp/tmp6lagv6i1.py\"\
    , line 14, in is_bored\n    sentences = re.split(r'[.?!]', S)\nNameError: name\
    \ 're' is not defined\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprjrtyhcq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprjrtyhcq.py\", line 24,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmprjrtyhcq.py\", line 17,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lhz8poj.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lhz8poj.py\"\
    , line 24, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lhz8poj.py\"\
    , line 17, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.startswith('I'):\n            boredoms +=\
    \ 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp64ttuytl.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp64ttuytl.py\", line 30,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmp64ttuytl.py\", line 23,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ixwk1f4.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ixwk1f4.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ixwk1f4.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprjrtyhcq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprjrtyhcq.py\", line 24,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmprjrtyhcq.py\", line 17,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return sum(1 for s in S.split('.') if s.strip().startswith('I'))\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8kt5udpl.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp8kt5udpl.py\", line 25,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmp8kt5udpl.py\", line 18,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ixwk1f4.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ixwk1f4.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ixwk1f4.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsm3qn928.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsm3qn928.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsm3qn928.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return sum(1 for s in S.split('.') if s.startswith('I'))\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpljx6b7ei.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpljx6b7ei.py\", line 25,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmpljx6b7ei.py\", line 18,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lhz8poj.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lhz8poj.py\"\
    , line 24, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lhz8poj.py\"\
    , line 17, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.startswith('I'):\n            boredoms +=\
    \ 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp64ttuytl.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp64ttuytl.py\", line 30,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmp64ttuytl.py\", line 23,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lhz8poj.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lhz8poj.py\"\
    , line 24, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lhz8poj.py\"\
    , line 17, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    sentences = S.split('. ')\n    boredoms = 0\n    for sentence\
    \ in sentences:\n        if sentence.startswith('I'):\n            boredoms +=\
    \ 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvrw8o6gt.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpvrw8o6gt.py\", line 30,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmpvrw8o6gt.py\", line 23,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.startswith('I'):\n            boredoms +=\
    \ 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp64ttuytl.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp64ttuytl.py\", line 30,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmp64ttuytl.py\", line 23,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    # Split the string into sentences\n    sentences = re.split(r'[.?!]',\
    \ S)\n    # Count the number of sentences that start with \"I\"\n    return sum(1\
    \ for sentence in sentences if sentence.strip().startswith('I'))\n\ndef check(candidate):\n\
    \    assert candidate('Hello world') == 0\n    assert candidate('Is the sky blue?')\
    \ == 0\n    assert candidate('I love It !') == 1\n    assert candidate('bIt')\
    \ == 0\n    assert candidate('I feel good today. I will be productive. will kill\
    \ It') == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef\
    \ test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmse2gug_.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpmse2gug_.py\", line 27,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmpmse2gug_.py\", line 19,\
    \ in check\n    assert candidate('Hello world') == 0\n  File \"/tmp/tmpmse2gug_.py\"\
    , line 14, in is_bored\n    sentences = re.split(r'[.?!]', S)\nNameError: name\
    \ 're' is not defined\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvjt81m3.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return len([s for s in S.split('.') if s.startswith('I')])\n\
    \n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsm3qn928.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsm3qn928.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsm3qn928.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 25, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3jyjv_f.py\"\
    , line 18, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    sentences = S.split('.')\n    for sentence\
    \ in sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello\
    \ world') == 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I\
    \ love It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I\
    \ feel good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 30, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqhpceozq.py\"\
    , line 23, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.startswith('I'):\n            boredoms += 1\n    return boredoms\n\
    \ndef check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
    \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
    \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I\
    \ will be productive. will kill It') == 2\n    assert candidate('You and I are\
    \ going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjcyf97xz.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpjcyf97xz.py\", line 28,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmpjcyf97xz.py\", line 21,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    return S.count('I')\n\ndef check(candidate):\n    assert\
    \ candidate('Hello world') == 0\n    assert candidate('Is the sky blue?') == 0\n\
    \    assert candidate('I love It !') == 1\n    assert candidate('bIt') == 0\n\
    \    assert candidate('I feel good today. I will be productive. will kill It')\
    \ == 2\n    assert candidate('You and I are going for a walk') == 0\n\ndef test_check():\n\
    \    check(is_bored)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprjrtyhcq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprjrtyhcq.py\", line 24,\
    \ in test_check\n    check(is_bored)\n  File \"/tmp/tmprjrtyhcq.py\", line 17,\
    \ in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659747005
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\ndef check(candidate):\n    assert candidate('Hello world') == 0\n\
    \    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love It\
    \ !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel good\
    \ today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 28, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4exiwyh2.py\"\
    , line 21, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string\
    \ of words, and your task is to count the number\n    of boredoms. A boredom is\
    \ a sentence that starts with the word \"I\".\n    Sentences are delimited by\
    \ '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored('Hello world')\n \
    \   0\n    >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
    \    1\n    \"\"\"\n    boredoms = 0\n    for sentence in S.split('.'):\n    \
    \    if sentence.strip().startswith('I'):\n            boredoms += 1\n    return\
    \ boredoms\n\n\ndef check(candidate):\n    assert candidate('Hello world') ==\
    \ 0\n    assert candidate('Is the sky blue?') == 0\n    assert candidate('I love\
    \ It !') == 1\n    assert candidate('bIt') == 0\n    assert candidate('I feel\
    \ good today. I will be productive. will kill It') == 2\n    assert candidate('You\
    \ and I are going for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 29, in test_check\n    check(is_bored)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm67akevy.py\"\
    , line 22, in check\n    assert candidate('Is the sky blue?') == 0\nAssertionError\n"
  stdout: ''

name: HumanEval_104_unique_digits
language: py
results:
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    return [i for i in x if not any(int(j) % 2 == 0 for j\
    \ in str(i))]\n\ndef check(candidate):\n    assert candidate([15, 33, 1422, 1])\
    \ == [1, 15, 33]\n    assert candidate([152, 323, 1422, 10]) == []\n    assert\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n    assert candidate([135,\
    \ 103, 31]) == [31, 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaeiz_0bk.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaeiz_0bk.py\"\
    , line 24, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaeiz_0bk.py\"\
    , line 18, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    return [i for i in x if not any(int(j) % 2 == 0 for j\
    \ in str(i))]\n\ndef check(candidate):\n    assert candidate([15, 33, 1422, 1])\
    \ == [1, 15, 33]\n    assert candidate([152, 323, 1422, 10]) == []\n    assert\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n    assert candidate([135,\
    \ 103, 31]) == [31, 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpabnswtfg.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpabnswtfg.py\"\
    , line 24, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpabnswtfg.py\"\
    , line 18, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    return [i for i in x if all(int(j) % 2 != 0 for j in\
    \ str(i))]\n\ndef check(candidate):\n    assert candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33]\n    assert candidate([152, 323, 1422, 10]) == []\n    assert candidate([12345,\
    \ 2033, 111, 151]) == [111, 151]\n    assert candidate([135, 103, 31]) == [31,\
    \ 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk7xa0j3u.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk7xa0j3u.py\"\
    , line 24, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk7xa0j3u.py\"\
    , line 18, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    return [i for i in x if not any(int(j) % 2 == 0 for j\
    \ in str(i))]\n\ndef check(candidate):\n    assert candidate([15, 33, 1422, 1])\
    \ == [1, 15, 33]\n    assert candidate([152, 323, 1422, 10]) == []\n    assert\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n    assert candidate([135,\
    \ 103, 31]) == [31, 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppbisjvx0.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppbisjvx0.py\"\
    , line 24, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppbisjvx0.py\"\
    , line 18, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    return [i for i in x if not any(int(j) % 2 == 0 for j\
    \ in str(i))]\n\ndef check(candidate):\n    assert candidate([15, 33, 1422, 1])\
    \ == [1, 15, 33]\n    assert candidate([152, 323, 1422, 10]) == []\n    assert\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n    assert candidate([135,\
    \ 103, 31]) == [31, 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk3o_kje9.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk3o_kje9.py\"\
    , line 24, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk3o_kje9.py\"\
    , line 18, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    return [i for i in x if not any(int(j) % 2 == 0 for j\
    \ in str(i))]\n\ndef check(candidate):\n    assert candidate([15, 33, 1422, 1])\
    \ == [1, 15, 33]\n    assert candidate([152, 323, 1422, 10]) == []\n    assert\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n    assert candidate([135,\
    \ 103, 31]) == [31, 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_n5qu2_q.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_n5qu2_q.py\"\
    , line 24, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_n5qu2_q.py\"\
    , line 18, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    # TODO: Implement this function\n    return []\n\ndef\
    \ check(candidate):\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    \    assert candidate([152, 323, 1422, 10]) == []\n    assert candidate([12345,\
    \ 2033, 111, 151]) == [111, 151]\n    assert candidate([135, 103, 31]) == [31,\
    \ 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps4bpl4zt.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps4bpl4zt.py\"\
    , line 25, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps4bpl4zt.py\"\
    , line 19, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    return [i for i in x if not any(int(j) % 2 == 0 for j\
    \ in str(i))]\n\ndef check(candidate):\n    assert candidate([15, 33, 1422, 1])\
    \ == [1, 15, 33]\n    assert candidate([152, 323, 1422, 10]) == []\n    assert\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n    assert candidate([135,\
    \ 103, 31]) == [31, 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk8mhs461.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk8mhs461.py\"\
    , line 24, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk8mhs461.py\"\
    , line 18, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    return [i for i in x if not any(int(j) % 2 == 0 for j\
    \ in str(i))]\n\ndef check(candidate):\n    assert candidate([15, 33, 1422, 1])\
    \ == [1, 15, 33]\n    assert candidate([152, 323, 1422, 10]) == []\n    assert\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n    assert candidate([135,\
    \ 103, 31]) == [31, 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp69ax_tlq.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp69ax_tlq.py\"\
    , line 24, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp69ax_tlq.py\"\
    , line 18, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    return [i for i in x if not any(int(j) % 2 == 0 for j\
    \ in str(i))]\n\ndef check(candidate):\n    assert candidate([15, 33, 1422, 1])\
    \ == [1, 15, 33]\n    assert candidate([152, 323, 1422, 10]) == []\n    assert\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n    assert candidate([135,\
    \ 103, 31]) == [31, 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptah9aeep.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptah9aeep.py\"\
    , line 24, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptah9aeep.py\"\
    , line 18, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    return [i for i in x if not any(int(j) % 2 == 0 for j\
    \ in str(i))]\n\ndef check(candidate):\n    assert candidate([15, 33, 1422, 1])\
    \ == [1, 15, 33]\n    assert candidate([152, 323, 1422, 10]) == []\n    assert\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n    assert candidate([135,\
    \ 103, 31]) == [31, 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq4cw49ip.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq4cw49ip.py\"\
    , line 24, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq4cw49ip.py\"\
    , line 18, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    return sorted([i for i in x if not any(j % 2 == 0 for\
    \ j in [int(k) for k in str(i)])])\n\ndef check(candidate):\n    assert candidate([15,\
    \ 33, 1422, 1]) == [1, 15, 33]\n    assert candidate([152, 323, 1422, 10]) ==\
    \ []\n    assert candidate([12345, 2033, 111, 151]) == [111, 151]\n    assert\
    \ candidate([135, 103, 31]) == [31, 135]\n\ndef test_check():\n    check(unique_digits)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    # Your code here\n    pass\n\ndef check(candidate):\n\
    \    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n    assert candidate([152,\
    \ 323, 1422, 10]) == []\n    assert candidate([12345, 2033, 111, 151]) == [111,\
    \ 151]\n    assert candidate([135, 103, 31]) == [31, 135]\n\ndef test_check():\n\
    \    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmqvelidy.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmqvelidy.py\"\
    , line 25, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmqvelidy.py\"\
    , line 19, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    return [i for i in x if not any(int(j) % 2 == 0 for j\
    \ in str(i))]\n\ndef check(candidate):\n    assert candidate([15, 33, 1422, 1])\
    \ == [1, 15, 33]\n    assert candidate([152, 323, 1422, 10]) == []\n    assert\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n    assert candidate([135,\
    \ 103, 31]) == [31, 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfl9f99_7.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfl9f99_7.py\"\
    , line 24, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfl9f99_7.py\"\
    , line 18, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    return [i for i in x if not any(int(j) % 2 == 0 for j\
    \ in str(i))]\ndef check(candidate):\n    assert candidate([15, 33, 1422, 1])\
    \ == [1, 15, 33]\n    assert candidate([152, 323, 1422, 10]) == []\n    assert\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n    assert candidate([135,\
    \ 103, 31]) == [31, 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpieu652_z.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpieu652_z.py\"\
    , line 23, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpieu652_z.py\"\
    , line 17, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    return [i for i in x if not any(int(j) % 2 == 0 for j\
    \ in str(i))]\n\ndef check(candidate):\n    assert candidate([15, 33, 1422, 1])\
    \ == [1, 15, 33]\n    assert candidate([152, 323, 1422, 10]) == []\n    assert\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n    assert candidate([135,\
    \ 103, 31]) == [31, 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnk26wczk.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnk26wczk.py\"\
    , line 24, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnk26wczk.py\"\
    , line 18, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    # YOUR CODE HERE\n    unique_list = []\n    for i in\
    \ x:\n        if i % 2 != 0:\n            unique_list.append(i)\n    return sorted(unique_list)\n\
    \ndef check(candidate):\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    \    assert candidate([152, 323, 1422, 10]) == []\n    assert candidate([12345,\
    \ 2033, 111, 151]) == [111, 151]\n    assert candidate([135, 103, 31]) == [31,\
    \ 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvefebxe2.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvefebxe2.py\"\
    , line 29, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvefebxe2.py\"\
    , line 24, in check\n    assert candidate([152, 323, 1422, 10]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    return [i for i in x if all(int(j) % 2 != 0 for j in\
    \ str(i))]\n\ndef check(candidate):\n    assert candidate([15, 33, 1422, 1]) ==\
    \ [1, 15, 33]\n    assert candidate([152, 323, 1422, 10]) == []\n    assert candidate([12345,\
    \ 2033, 111, 151]) == [111, 151]\n    assert candidate([135, 103, 31]) == [31,\
    \ 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxl_6spyz.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxl_6spyz.py\"\
    , line 24, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxl_6spyz.py\"\
    , line 18, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    return sorted([i for i in x if not any(j in str(i) for\
    \ j in '02468')])\n\ndef check(candidate):\n    assert candidate([15, 33, 1422,\
    \ 1]) == [1, 15, 33]\n    assert candidate([152, 323, 1422, 10]) == []\n    assert\
    \ candidate([12345, 2033, 111, 151]) == [111, 151]\n    assert candidate([135,\
    \ 103, 31]) == [31, 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n\
    \    \"\"\"Given a list of positive integers x. return a sorted list of all \n\
    \    elements that hasn't any even digit.\n\n    Note: Returned list should be\
    \ sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15,\
    \ 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n\
    \    []\n    \"\"\"\n    # YOUR CODE HERE\n    raise NotImplementedError()\n\n\
    def check(candidate):\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    \    assert candidate([152, 323, 1422, 10]) == []\n    assert candidate([12345,\
    \ 2033, 111, 151]) == [111, 151]\n    assert candidate([135, 103, 31]) == [31,\
    \ 135]\n\ndef test_check():\n    check(unique_digits)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2d_exjh4.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2d_exjh4.py\"\
    , line 25, in test_check\n    check(unique_digits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2d_exjh4.py\"\
    , line 19, in check\n    assert candidate([15, 33, 1422, 1]) == [1, 15, 33]\n\
    \  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2d_exjh4.py\", line\
    \ 16, in unique_digits\n    raise NotImplementedError()\nNotImplementedError\n"
  exit_code: -1
  status: Exception

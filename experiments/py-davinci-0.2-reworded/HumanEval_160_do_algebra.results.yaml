name: HumanEval_160_do_algebra
language: py
results:
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) ==\
    \ 37\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//',\
    \ '*'], [7, 3, 4]) == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptdehx97f.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptdehx97f.py\"\
    , line 38, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptdehx97f.py\"\
    , line 33, in check\n    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result\n\ndef check(candidate):\n\
    \    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4])\
    \ == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvsxqayfl.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvsxqayfl.py\"\
    , line 48, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvsxqayfl.py\"\
    , line 44, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    if len(operator) != len(operand) - 1:\n   \
    \     raise ValueError(\"The length of operator list is equal to the length of\
    \ operand list minus one.\")\n    if len(operator) == 0:\n        raise ValueError(\"\
    Operator list has at least one operator.\")\n    if len(operand) == 0:\n     \
    \   raise ValueError(\"Operand list has at least two operands.\")\n    for i in\
    \ operand:\n        if i < 0:\n            raise ValueError(\"Operand is a list\
    \ of of non-negative integers.\")\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n        else:\n            raise ValueError(\"\
    The basic algebra operations: Addition ( + ) Subtraction ( - ) Multiplication\
    \ ( * ) Floor division ( // ) Exponentiation ( ** )\")\n    return result\n\n\
    def check(candidate):\n    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) ==\
    \ 37\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//',\
    \ '*'], [7, 3, 4]) == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp413qv6lg.py\"\
    , line 61, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp413qv6lg.py\"\
    , line 59, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp413qv6lg.py\"\
    , line 55, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result\ndef check(candidate):\n \
    \   assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4])\
    \ == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkfbmk3iw.py\"\
    , line 49, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkfbmk3iw.py\"\
    , line 47, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkfbmk3iw.py\"\
    , line 43, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result\n\ndef check(candidate):\n\
    \    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4])\
    \ == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5i90v6he.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5i90v6he.py\"\
    , line 48, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5i90v6he.py\"\
    , line 44, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result\n\ndef check(candidate):\n\
    \    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4])\
    \ == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6fn957c4.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6fn957c4.py\"\
    , line 48, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6fn957c4.py\"\
    , line 44, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    pass\ndef check(candidate):\n    assert candidate(['**',\
    \ '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+', '*', '-'], [2, 3,\
    \ 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4]) == 8\n\ndef test_check():\n\
    \    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqqy0f_tl.py\"\
    , line 37, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqqy0f_tl.py\"\
    , line 35, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqqy0f_tl.py\"\
    , line 30, in check\n    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result\ndef check(candidate):\n \
    \   assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4])\
    \ == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9w2r82kp.py\"\
    , line 49, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9w2r82kp.py\"\
    , line 47, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9w2r82kp.py\"\
    , line 43, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result\ndef check(candidate):\n \
    \   assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4])\
    \ == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzezrn0kz.py\"\
    , line 49, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzezrn0kz.py\"\
    , line 47, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzezrn0kz.py\"\
    , line 43, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result\n\ndef check(candidate):\n\
    \    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4])\
    \ == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprjlktsxm.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprjlktsxm.py\"\
    , line 48, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprjlktsxm.py\"\
    , line 44, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    if len(operator) != len(operand) - 1:\n   \
    \     raise ValueError(\"The length of operator list is equal to the length of\
    \ operand list minus one.\")\n    if len(operator) < 1:\n        raise ValueError(\"\
    Operator list has at least one operator.\")\n    if len(operand) < 2:\n      \
    \  raise ValueError(\"Operand list has at least two operands.\")\n    for i in\
    \ operand:\n        if i < 0:\n            raise ValueError(\"Operand is a list\
    \ of of non-negative integers.\")\n\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n        else:\n            raise ValueError(\"\
    The basic algebra operations: Addition ( + ) , Subtraction ( - ) , Multiplication\
    \ ( * ) , Floor division ( // ) , Exponentiation ( ** ) \")\n    return result\n\
    \ndef check(candidate):\n    assert candidate(['**', '*', '+'], [2, 3, 4, 5])\
    \ == 37\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n    assert\
    \ candidate(['//', '*'], [7, 3, 4]) == 8\n\ndef test_check():\n    check(do_algebra)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplytsu29w.py\"\
    , line 62, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplytsu29w.py\"\
    , line 60, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplytsu29w.py\"\
    , line 56, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result\n\ndef check(candidate):\n\
    \    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4])\
    \ == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbo82nwrh.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbo82nwrh.py\"\
    , line 48, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbo82nwrh.py\"\
    , line 44, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result\n\ndef check(candidate):\n\
    \    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4])\
    \ == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4xu03v96.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4xu03v96.py\"\
    , line 48, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4xu03v96.py\"\
    , line 44, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result\n\ndef check(candidate):\n\
    \    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4])\
    \ == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5teopx97.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5teopx97.py\"\
    , line 48, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5teopx97.py\"\
    , line 44, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result\n\ndef check(candidate):\n\
    \    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4])\
    \ == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp31r4yimn.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp31r4yimn.py\"\
    , line 48, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp31r4yimn.py\"\
    , line 44, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    pass\ndef check(candidate):\n    assert candidate(['**',\
    \ '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+', '*', '-'], [2, 3,\
    \ 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4]) == 8\n\ndef test_check():\n\
    \    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp263711cw.py\"\
    , line 37, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp263711cw.py\"\
    , line 35, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp263711cw.py\"\
    , line 30, in check\n    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result\n\ndef check(candidate):\n\
    \    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4])\
    \ == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaktp7t57.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaktp7t57.py\"\
    , line 48, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaktp7t57.py\"\
    , line 44, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result\n\ndef check(candidate):\n\
    \    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4])\
    \ == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy61mxg7c.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy61mxg7c.py\"\
    , line 48, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy61mxg7c.py\"\
    , line 44, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result\n\ndef check(candidate):\n\
    \    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4])\
    \ == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp75w19f90.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp75w19f90.py\"\
    , line 48, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp75w19f90.py\"\
    , line 44, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef do_algebra(operator: List[str], operand:\
    \ List[int]) -> int:\n    \"\"\"\n    Given two lists operator, and operand. The\
    \ first list has basic algebra operations, and \n    the second list is a list\
    \ of integers. Use the two given lists to build the algebric \n    expression\
    \ and return the evaluation of this expression.\n\n    The basic algebra operations:\n\
    \    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor\
    \ division ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+',\
    \ '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result\
    \ = 9\n\n    Note:\n        The length of operator list is equal to the length\
    \ of operand list minus one.\n        Operand is a list of of non-negative integers.\n\
    \        Operator list has at least one operator, and operand list has at least\
    \ two operands.\n\n    \"\"\"\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result\n\ndef check(candidate):\n\
    \    assert candidate(['**', '*', '+'], [2, 3, 4, 5]) == 37\n    assert candidate(['+',\
    \ '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//', '*'], [7, 3, 4])\
    \ == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjg4maj0v.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjg4maj0v.py\"\
    , line 48, in test_check\n    check(do_algebra)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjg4maj0v.py\"\
    , line 44, in check\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n\
    AssertionError\n"
  exit_code: -1
  status: Exception

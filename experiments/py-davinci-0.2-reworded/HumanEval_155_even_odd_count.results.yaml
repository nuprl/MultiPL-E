name: HumanEval_155_even_odd_count
language: py
results:
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbn2h00zl.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbn2h00zl.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbn2h00zl.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbn2h00zl.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplddsyzo9.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplddsyzo9.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplddsyzo9.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplddsyzo9.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx8ls879o.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx8ls879o.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx8ls879o.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx8ls879o.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6qldj4_5.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6qldj4_5.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6qldj4_5.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6qldj4_5.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfjps_cfg.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfjps_cfg.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfjps_cfg.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfjps_cfg.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n          \
    \  even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx14h1v_5.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx14h1v_5.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx14h1v_5.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx14h1v_5.py\"\
    , line 15, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp646pdimg.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp646pdimg.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp646pdimg.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp646pdimg.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    while num != 0:\n        if num % 2 == 0:\n    \
    \        even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ = num // 10\n    return even_count, odd_count\n\ndef check(candidate):\n   \
    \ assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpknqpvo_8.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpknqpvo_8.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpknqpvo_8.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpknqpvo_8.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfq_3_fz4.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfq_3_fz4.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfq_3_fz4.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfq_3_fz4.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5bdh693x.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5bdh693x.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5bdh693x.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5bdh693x.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1c8lsm8e.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1c8lsm8e.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1c8lsm8e.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1c8lsm8e.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8nypgemg.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8nypgemg.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8nypgemg.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8nypgemg.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppv7paqxp.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppv7paqxp.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppv7paqxp.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppv7paqxp.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2xdzyszx.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2xdzyszx.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2xdzyszx.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2xdzyszx.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbufpwodj.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbufpwodj.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbufpwodj.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbufpwodj.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2yan9azm.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2yan9azm.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2yan9azm.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2yan9azm.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphz26aa4m.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphz26aa4m.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphz26aa4m.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphz26aa4m.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt6o9puow.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt6o9puow.py\"\
    , line 32, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt6o9puow.py\"\
    , line 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt6o9puow.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_xj71cb1.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_xj71cb1.py\"\
    , line 33, in test_check\n    check(even_odd_count)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_xj71cb1.py\"\
    , line 24, in check\n    assert candidate(-78) == (1, 1)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_xj71cb1.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception

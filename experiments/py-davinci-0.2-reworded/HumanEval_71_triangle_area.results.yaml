name: HumanEval_71_triangle_area
language: py
results:
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if\
    \ a + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n      \
    \  return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n  \
    \      return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpunc9i8vu.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpunc9i8vu.py\"\
    , line 33, in test_check\n    check(triangle_area)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpunc9i8vu.py\"\
    , line 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpunc9i8vu.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # TODO:\
    \ Write your code here\n    pass\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy2i5vnw1.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy2i5vnw1.py\"\
    , line 30, in test_check\n    check(triangle_area)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy2i5vnw1.py\"\
    , line 19, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if\
    \ a + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n      \
    \  area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area,\
    \ 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if\
    \ a + b > c and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n      \
    \  area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area,\
    \ 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if\
    \ a + b > c and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n      \
    \  return round(math.sqrt(s * (s - a) * (s - b) * (s - c)), 2)\n    else:\n  \
    \      return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw3lm6msc.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw3lm6msc.py\"\
    , line 33, in test_check\n    check(triangle_area)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw3lm6msc.py\"\
    , line 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw3lm6msc.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if\
    \ a + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n      \
    \  return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n  \
    \      return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph6rc17vf.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph6rc17vf.py\"\
    , line 33, in test_check\n    check(triangle_area)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph6rc17vf.py\"\
    , line 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph6rc17vf.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp83lt9sl5.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp83lt9sl5.py\"\
    , line 29, in test_check\n    check(triangle_area)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp83lt9sl5.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if\
    \ a + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n      \
    \  return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n  \
    \      return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0utpvx1n.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0utpvx1n.py\"\
    , line 33, in test_check\n    check(triangle_area)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0utpvx1n.py\"\
    , line 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0utpvx1n.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if\
    \ a + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n      \
    \  return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n  \
    \      return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1n0qpba5.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1n0qpba5.py\"\
    , line 33, in test_check\n    check(triangle_area)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1n0qpba5.py\"\
    , line 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1n0qpba5.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if\
    \ a + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n      \
    \  return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n  \
    \      return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyi8q20j_.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyi8q20j_.py\"\
    , line 33, in test_check\n    check(triangle_area)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyi8q20j_.py\"\
    , line 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyi8q20j_.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if\
    \ a + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n      \
    \  return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n  \
    \      return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuk2_rg6g.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuk2_rg6g.py\"\
    , line 33, in test_check\n    check(triangle_area)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuk2_rg6g.py\"\
    , line 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuk2_rg6g.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if\
    \ a + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n      \
    \  return round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n       \
    \ return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpav_92w05.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpav_92w05.py\"\
    , line 33, in test_check\n    check(triangle_area)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpav_92w05.py\"\
    , line 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpav_92w05.py\"\
    , line 16, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqs1ke2te.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqs1ke2te.py\"\
    , line 29, in test_check\n    check(triangle_area)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqs1ke2te.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if\
    \ a + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n      \
    \  area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area,\
    \ 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b\
    \ + c) / 2\n        area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n  \
    \  assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n  \
    \  assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if\
    \ a + b > c and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n      \
    \  return round(math.sqrt(s * (s - a) * (s - b) * (s - c)), 2)\n    else:\n  \
    \      return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3z_4dkra.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3z_4dkra.py\"\
    , line 33, in test_check\n    check(triangle_area)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3z_4dkra.py\"\
    , line 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3z_4dkra.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if\
    \ a + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n      \
    \  area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area,\
    \ 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if\
    \ a + b > c and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n      \
    \  area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area,\
    \ 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8t8l6x76.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8t8l6x76.py\"\
    , line 29, in test_check\n    check(triangle_area)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8t8l6x76.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
    \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if\
    \ a + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n      \
    \  area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area,\
    \ 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

name: HumanEval_102_choose_num
language: py
results:
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    if x % 2 == 0:\n        return x\n    elif x % 2 != 0:\n        x += 1\n\
    \        return x\n    else:\n        return -1\n\ndef check(candidate):\n   \
    \ assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmen85l81.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmen85l81.py\"\
    , line 32, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmen85l81.py\"\
    , line 22, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x % 2 == 0:\n\
    \        return x\n    elif x + 1 == y:\n        return -1\n    else:\n      \
    \  return choose_num(x + 1, y)\n\ndef check(candidate):\n    assert candidate(12,\
    \ 15) == 14\n    assert candidate(13, 12) == -1\n    assert candidate(33, 12354)\
    \ == 12354\n    assert candidate(5234, 5233) == -1\n    assert candidate(6, 29)\
    \ == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7, 7) == -1\n\
    \    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5ma2oz5b.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5ma2oz5b.py\"\
    , line 30, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5ma2oz5b.py\"\
    , line 20, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    if x % 2 == 0:\n        return x\n    elif x % 2 != 0:\n        x += 1\n\
    \        return x\n    else:\n        return -1\n\ndef check(candidate):\n   \
    \ assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdeo00d01.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdeo00d01.py\"\
    , line 32, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdeo00d01.py\"\
    , line 22, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   return -1\n    elif x % 2 == 0:\n        return x\n    else:\n        return\
    \ x + 1\n\ndef check(candidate):\n    assert candidate(12, 15) == 14\n    assert\
    \ candidate(13, 12) == -1\n    assert candidate(33, 12354) == 12354\n    assert\
    \ candidate(5234, 5233) == -1\n    assert candidate(6, 29) == 28\n    assert candidate(27,\
    \ 10) == -1\n    assert candidate(7, 7) == -1\n    assert candidate(546, 546)\
    \ == 546\n\ndef test_check():\n    check(choose_num)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa86bbwub.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa86bbwub.py\"\
    , line 30, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa86bbwub.py\"\
    , line 20, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    if x%2 == 0:\n        return x\n    else:\n        x += 1\n    if x > y:\n\
    \        return -1\n    else:\n        return x\n\ndef check(candidate):\n   \
    \ assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm2rsbyll.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm2rsbyll.py\"\
    , line 33, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm2rsbyll.py\"\
    , line 23, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x % 2 == 0:\n\
    \        return x\n    elif x + 1 <= y:\n        return x + 1\n    else:\n   \
    \     return -1\n\ndef check(candidate):\n    assert candidate(12, 15) == 14\n\
    \    assert candidate(13, 12) == -1\n    assert candidate(33, 12354) == 12354\n\
    \    assert candidate(5234, 5233) == -1\n    assert candidate(6, 29) == 28\n \
    \   assert candidate(27, 10) == -1\n    assert candidate(7, 7) == -1\n    assert\
    \ candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphdtsojfs.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphdtsojfs.py\"\
    , line 30, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphdtsojfs.py\"\
    , line 20, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    if x % 2 == 0:\n        return x\n    elif x % 2 != 0:\n        x += 1\n\
    \        if x % 2 == 0:\n            return x\n        else:\n            return\
    \ -1\n    else:\n        return -1\n\ndef check(candidate):\n    assert candidate(12,\
    \ 15) == 14\n    assert candidate(13, 12) == -1\n    assert candidate(33, 12354)\
    \ == 12354\n    assert candidate(5234, 5233) == -1\n    assert candidate(6, 29)\
    \ == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7, 7) == -1\n\
    \    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpezkcluhw.py\"\
    , line 37, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpezkcluhw.py\"\
    , line 35, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpezkcluhw.py\"\
    , line 25, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x % 2 == 0:\n\
    \        return x\n    elif x + 1 <= y:\n        return x + 1\n    else:\n   \
    \     return -1\n\ndef check(candidate):\n    assert candidate(12, 15) == 14\n\
    \    assert candidate(13, 12) == -1\n    assert candidate(33, 12354) == 12354\n\
    \    assert candidate(5234, 5233) == -1\n    assert candidate(6, 29) == 28\n \
    \   assert candidate(27, 10) == -1\n    assert candidate(7, 7) == -1\n    assert\
    \ candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr_i4qdef.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr_i4qdef.py\"\
    , line 30, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr_i4qdef.py\"\
    , line 20, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x % 2 == 0:\n\
    \        return x\n    elif x + 1 <= y:\n        return x + 1\n    else:\n   \
    \     return -1\n\ndef check(candidate):\n    assert candidate(12, 15) == 14\n\
    \    assert candidate(13, 12) == -1\n    assert candidate(33, 12354) == 12354\n\
    \    assert candidate(5234, 5233) == -1\n    assert candidate(6, 29) == 28\n \
    \   assert candidate(27, 10) == -1\n    assert candidate(7, 7) == -1\n    assert\
    \ candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnke1ipu4.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnke1ipu4.py\"\
    , line 30, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnke1ipu4.py\"\
    , line 20, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x % 2 == 0:\n\
    \        return x\n    elif x % 2 == 1:\n        return x + 1\n    elif x % 2\
    \ == 0 and y % 2 == 0:\n        return y\n    elif x % 2 == 1 and y % 2 == 1:\n\
    \        return y - 1\n    elif x % 2 == 0 and y % 2 == 1:\n        return y -\
    \ 1\n    elif x % 2 == 1 and y % 2 == 0:\n        return y\n    elif x > y:\n\
    \        return -1\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7wwtde8p.py\"\
    , line 43, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7wwtde8p.py\"\
    , line 41, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7wwtde8p.py\"\
    , line 31, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate(12,\
    \ 15) == 14\n    assert candidate(13, 12) == -1\n    assert candidate(33, 12354)\
    \ == 12354\n    assert candidate(5234, 5233) == -1\n    assert candidate(6, 29)\
    \ == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7, 7) == -1\n\
    \    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp94z6epjd.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp94z6epjd.py\"\
    , line 27, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp94z6epjd.py\"\
    , line 17, in check\n    assert candidate(12, 15) == 14\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp94z6epjd.py\"\
    , line 13, in choose_num\n    raise NotImplementedError()\nNotImplementedError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   return -1\n    else:\n        for i in range(y, x-1, -1):\n            if\
    \ i % 2 == 0:\n                return i\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    if x%2 == 0:\n        return x\n    elif x%2 != 0:\n        x = x+1\n   \
    \     return x\n    else:\n        return -1\n\ndef check(candidate):\n    assert\
    \ candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert candidate(33,\
    \ 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert candidate(6,\
    \ 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7, 7) ==\
    \ -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphqsztwyx.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphqsztwyx.py\"\
    , line 32, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphqsztwyx.py\"\
    , line 22, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    if x % 2 == 0:\n        return x\n    else:\n        return x + 1\n\ndef\
    \ check(candidate):\n    assert candidate(12, 15) == 14\n    assert candidate(13,\
    \ 12) == -1\n    assert candidate(33, 12354) == 12354\n    assert candidate(5234,\
    \ 5233) == -1\n    assert candidate(6, 29) == 28\n    assert candidate(27, 10)\
    \ == -1\n    assert candidate(7, 7) == -1\n    assert candidate(546, 546) == 546\n\
    \ndef test_check():\n    check(choose_num)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaxyk_f9v.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaxyk_f9v.py\"\
    , line 29, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaxyk_f9v.py\"\
    , line 19, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    if x%2 != 0:\n        x += 1\n    if y%2 != 0:\n        y -= 1\n    if x\
    \ > y:\n        return -1\n    return y\n\ndef check(candidate):\n    assert candidate(12,\
    \ 15) == 14\n    assert candidate(13, 12) == -1\n    assert candidate(33, 12354)\
    \ == 12354\n    assert candidate(5234, 5233) == -1\n    assert candidate(6, 29)\
    \ == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7, 7) == -1\n\
    \    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x % 2 == 0:\n\
    \        return x\n    elif x % 2 == 1:\n        x += 1\n        if x > y:\n \
    \           return -1\n        else:\n            return x\n\ndef check(candidate):\n\
    \    assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprwkl498u.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprwkl498u.py\"\
    , line 32, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprwkl498u.py\"\
    , line 22, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    if x % 2 == 0:\n        return x\n    elif x % 2 != 0:\n        x += 1\n\
    \        return x\n    else:\n        return -1\n\ndef check(candidate):\n   \
    \ assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzd_quovz.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzd_quovz.py\"\
    , line 32, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzd_quovz.py\"\
    , line 22, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x % 2 == 0:\n\
    \        return x\n    elif x % 2 == 1:\n        return x + 1\n    else:\n   \
    \     return -1\n\ndef check(candidate):\n    assert candidate(12, 15) == 14\n\
    \    assert candidate(13, 12) == -1\n    assert candidate(33, 12354) == 12354\n\
    \    assert candidate(5234, 5233) == -1\n    assert candidate(6, 29) == 28\n \
    \   assert candidate(27, 10) == -1\n    assert candidate(7, 7) == -1\n    assert\
    \ candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgjjxt10b.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgjjxt10b.py\"\
    , line 30, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgjjxt10b.py\"\
    , line 20, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    if x % 2 == 0:\n        return x\n    elif x % 2 != 0:\n        x += 1\n\
    \        return x\n    else:\n        return -1\n\ndef check(candidate):\n   \
    \ assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqmwgjpvt.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqmwgjpvt.py\"\
    , line 32, in test_check\n    check(choose_num)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqmwgjpvt.py\"\
    , line 22, in check\n    assert candidate(12, 15) == 14\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes\
    \ two positive numbers x and y and returns the\n    biggest even integer number\
    \ that is in the range [x, y] inclusive. If \n    there's no such number, then\
    \ the function should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n\
    \    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\"\n    if x > y:\n     \
    \   return -1\n    else:\n        for i in range(y, x-1, -1):\n            if\
    \ i % 2 == 0:\n                return i\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(12, 15) == 14\n    assert candidate(13, 12) == -1\n    assert\
    \ candidate(33, 12354) == 12354\n    assert candidate(5234, 5233) == -1\n    assert\
    \ candidate(6, 29) == 28\n    assert candidate(27, 10) == -1\n    assert candidate(7,\
    \ 7) == -1\n    assert candidate(546, 546) == 546\n\ndef test_check():\n    check(choose_num)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

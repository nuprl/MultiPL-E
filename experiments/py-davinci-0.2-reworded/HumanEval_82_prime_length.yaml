name: HumanEval_82_prime_length
language: py
prompt: "def prime_length(string: str) -> bool:\n    \"\"\"Write a function that takes\
  \ a string and returns True if the string\n    length is a prime number or False\
  \ otherwise\n    Examples\n    >>> prime_length('Hello')\n    True\n    >>> prime_length('abcdcba')\n\
  \    True\n    >>> prime_length('kittens')\n    True\n    >>> prime_length('orange')\n\
  \    False\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('Hello') == True\n    assert candidate('abcdcba')\
  \ == True\n    assert candidate('kittens') == True\n    assert candidate('orange')\
  \ == False\n    assert candidate('wow') == True\n    assert candidate('world') ==\
  \ True\n    assert candidate('MadaM') == True\n    assert candidate('Wow') == True\n\
  \    assert candidate('') == False\n    assert candidate('HI') == True\n    assert\
  \ candidate('go') == True\n    assert candidate('gogo') == False\n    assert candidate('aaaaaaaaaaaaaaa')\
  \ == False\n    assert candidate('Madam') == True\n    assert candidate('M') ==\
  \ False\n    assert candidate('0') == False\n\ndef test_check():\n    check(prime_length)\n\
  \ntest_check()\n"
completions: ["    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    if len(string) == 2 or len(string)\
    \ == 3:\n        return True\n    elif len(string) == 1 or len(string) % 2 ==\
    \ 0:\n        return False\n    else:\n        for i in range(3, len(string)):\n\
    \            if len(string) % i == 0:\n                return False\n        return\
    \ True\n\n", "    return is_prime(len(string))\n\n", "    length = len(string)\n\
    \    if length < 2:\n        return False\n    for i in range(2, length):\n  \
    \      if length % i == 0:\n            return False\n    return True\n\n", " \
    \   length = len(string)\n    if length == 1:\n        return False\n    for i\
    \ in range(2, length):\n        if length % i == 0:\n            return False\n\
    \    return True\n\n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    length = len(string)\n    if length == 1:\n        return False\n  \
    \  for i in range(2, length):\n        if length % i == 0:\n            return\
    \ False\n    return True\n\n", "    return is_prime(len(string))\n\n", "    return\
    \ is_prime(len(string))\n\n", "    return is_prime(len(string))\n\n", "    return\
    \ is_prime(len(string))\n\n", "    return is_prime(len(string))\n\n", "    return\
    \ is_prime(len(string))\n\n", "    return is_prime(len(string))\n\n", "    return\
    \ is_prime(len(string))\n\n", "    return is_prime(len(string))\n\n", "    if\
    \ len(string) == 1:\n        return False\n    for i in range(2, len(string)):\n\
    \        if len(string) % i == 0:\n            return False\n    return True\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    if len(string) == 1:\n        return False\n    elif len(string) ==\
    \ 2:\n        return True\n    else:\n        for i in range(2, len(string)):\n\
    \            if len(string) % i == 0:\n                return False\n        return\
    \ True\n\n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    if len(string) == 1:\n     \
    \   return False\n    for i in range(2, len(string)):\n        if len(string)\
    \ % i == 0:\n            return False\n    return True\n\n", "    if len(string)\
    \ == 1:\n        return False\n    for i in range(2, len(string)):\n        if\
    \ len(string) % i == 0:\n            return False\n    return True\n\n", "   \
    \ return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\n", " \
    \   if len(string) == 2 or len(string) == 3:\n        return True\n    elif len(string)\
    \ % 2 == 0 or len(string) % 3 == 0:\n        return False\n    else:\n       \
    \ return True\n\n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    if len(string) == 1:\n        return False\n    for i in range(2, len(string)):\n\
    \        if len(string) % i == 0:\n            return False\n    return True\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    if len(string) == 2 or len(string) == 3:\n        return True\n    elif\
    \ len(string) % 2 == 0 or len(string) % 3 == 0:\n        return False\n    else:\n\
    \        return True\n\n", "    return is_prime(len(string))\n\n", "    return\
    \ is_prime(len(string))\n\n", "    return is_prime(len(string))\n\n", "    return\
    \ is_prime(len(string))\n\n", "    return is_prime(len(string))\n\n", "    length\
    \ = len(string)\n    if length == 1:\n        return False\n    for i in range(2,\
    \ length):\n        if length % i == 0:\n            return False\n    return\
    \ True\n\n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    if len(string) == 1:\n        return False\n    for i in range(2, len(string)):\n\
    \        if len(string) % i == 0:\n            return False\n    return True\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    return is_prime(len(string))\n\
    \n", "    return is_prime(len(string))\n\n", "    length = len(string)\n    if\
    \ length < 2:\n        return False\n    for i in range(2, length):\n        if\
    \ length % i == 0:\n            return False\n    return True\n\n", "    return\
    \ is_prime(len(string))\n\n", "    return is_prime(len(string))\n\n", "    return\
    \ is_prime(len(string))\n\n", "    return is_prime(len(string))\n\n", "    return\
    \ is_prime(len(string))\n\n", "    return is_prime(len(string))\n\n", "    return\
    \ is_prime(len(string))\n\n", "    return is_prime(len(string))\n\n", "    return\
    \ is_prime(len(string))\n\n", "    return is_prime(len(string))\n\n", "    if\
    \ len(string) == 1:\n        return False\n    elif len(string) == 2:\n      \
    \  return True\n    else:\n        for i in range(2, len(string)):\n         \
    \   if len(string) % i == 0:\n                return False\n        return True\n\
    \n", "    if len(string) in [2, 3, 5, 7]:\n        return True\n    return False\n\
    \n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

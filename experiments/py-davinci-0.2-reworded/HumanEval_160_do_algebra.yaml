name: HumanEval_160_do_algebra
language: py
prompt: "from typing import List\n\ndef do_algebra(operator: List[str], operand: List[int])\
  \ -> int:\n    \"\"\"\n    Given two lists operator, and operand. The first list\
  \ has basic algebra operations, and \n    the second list is a list of integers.\
  \ Use the two given lists to build the algebric \n    expression and return the\
  \ evaluation of this expression.\n\n    The basic algebra operations:\n    Addition\
  \ ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor division\
  \ ( // ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+', '*', '-']\n\
  \    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result = 9\n\n   \
  \ Note:\n        The length of operator list is equal to the length of operand list\
  \ minus one.\n        Operand is a list of of non-negative integers.\n        Operator\
  \ list has at least one operator, and operand list has at least two operands.\n\n\
  \    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(['**', '*', '+'], [2, 3, 4, 5])\
  \ == 37\n    assert candidate(['+', '*', '-'], [2, 3, 4, 5]) == 9\n    assert candidate(['//',\
  \ '*'], [7, 3, 4]) == 8\n\ndef test_check():\n    check(do_algebra)\n\ntest_check()\n"
completions: ["    # TODO: Write your code here\n    pass\n\n", "    result = operand[0]\n\
    \    for i in range(len(operator)):\n        if operator[i] == '+':\n        \
    \    result += operand[i+1]\n        elif operator[i] == '-':\n            result\
    \ -= operand[i+1]\n        elif operator[i] == '*':\n            result *= operand[i+1]\n\
    \        elif operator[i] == '//':\n            result //= operand[i+1]\n    \
    \    elif operator[i] == '**':\n            result **= operand[i+1]\n    return\
    \ result\n", "    if len(operator) != len(operand) - 1:\n        raise ValueError(\"\
    The length of operator list is equal to the length of operand list minus one.\"\
    )\n    if len(operator) == 0:\n        raise ValueError(\"Operator list has at\
    \ least one operator.\")\n    if len(operand) == 0:\n        raise ValueError(\"\
    Operand list has at least two operands.\")\n    for i in operand:\n        if\
    \ i < 0:\n            raise ValueError(\"Operand is a list of of non-negative\
    \ integers.\")\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n        else:\n            raise ValueError(\"\
    The basic algebra operations: Addition ( + ) Subtraction ( - ) Multiplication\
    \ ( * ) Floor division ( // ) Exponentiation ( ** )\")\n    return result\n",
  "    result = operand[0]\n    for i in range(len(operator)):\n        if operator[i]\
    \ == '+':\n            result += operand[i+1]\n        elif operator[i] == '-':\n\
    \            result -= operand[i+1]\n        elif operator[i] == '*':\n      \
    \      result *= operand[i+1]\n        elif operator[i] == '//':\n           \
    \ result //= operand[i+1]\n        elif operator[i] == '**':\n            result\
    \ **= operand[i+1]\n    return result", "    result = operand[0]\n    for i in\
    \ range(len(operator)):\n        if operator[i] == '+':\n            result +=\
    \ operand[i+1]\n        elif operator[i] == '-':\n            result -= operand[i+1]\n\
    \        elif operator[i] == '*':\n            result *= operand[i+1]\n      \
    \  elif operator[i] == '//':\n            result //= operand[i+1]\n        elif\
    \ operator[i] == '**':\n            result **= operand[i+1]\n    return result\n",
  "    result = operand[0]\n    for i in range(len(operator)):\n        if operator[i]\
    \ == '+':\n            result += operand[i+1]\n        elif operator[i] == '-':\n\
    \            result -= operand[i+1]\n        elif operator[i] == '*':\n      \
    \      result *= operand[i+1]\n        elif operator[i] == '//':\n           \
    \ result //= operand[i+1]\n        elif operator[i] == '**':\n            result\
    \ **= operand[i+1]\n    return result\n", '    pass', "    result = operand[0]\n\
    \    for i in range(len(operator)):\n        if operator[i] == '+':\n        \
    \    result += operand[i+1]\n        elif operator[i] == '-':\n            result\
    \ -= operand[i+1]\n        elif operator[i] == '*':\n            result *= operand[i+1]\n\
    \        elif operator[i] == '//':\n            result //= operand[i+1]\n    \
    \    elif operator[i] == '**':\n            result **= operand[i+1]\n    return\
    \ result", "    result = operand[0]\n    for i in range(len(operator)):\n    \
    \    if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result", "    result = operand[0]\n\
    \    for i in range(len(operator)):\n        if operator[i] == '+':\n        \
    \    result += operand[i+1]\n        elif operator[i] == '-':\n            result\
    \ -= operand[i+1]\n        elif operator[i] == '*':\n            result *= operand[i+1]\n\
    \        elif operator[i] == '//':\n            result //= operand[i+1]\n    \
    \    elif operator[i] == '**':\n            result **= operand[i+1]\n    return\
    \ result\n", "    if len(operator) != len(operand) - 1:\n        raise ValueError(\"\
    The length of operator list is equal to the length of operand list minus one.\"\
    )\n    if len(operator) < 1:\n        raise ValueError(\"Operator list has at\
    \ least one operator.\")\n    if len(operand) < 2:\n        raise ValueError(\"\
    Operand list has at least two operands.\")\n    for i in operand:\n        if\
    \ i < 0:\n            raise ValueError(\"Operand is a list of of non-negative\
    \ integers.\")\n\n    result = operand[0]\n    for i in range(len(operator)):\n\
    \        if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n        else:\n            raise ValueError(\"\
    The basic algebra operations: Addition ( + ) , Subtraction ( - ) , Multiplication\
    \ ( * ) , Floor division ( // ) , Exponentiation ( ** ) \")\n    return result\n",
  "    result = operand[0]\n    for i in range(len(operator)):\n        if operator[i]\
    \ == '+':\n            result += operand[i+1]\n        elif operator[i] == '-':\n\
    \            result -= operand[i+1]\n        elif operator[i] == '*':\n      \
    \      result *= operand[i+1]\n        elif operator[i] == '//':\n           \
    \ result //= operand[i+1]\n        elif operator[i] == '**':\n            result\
    \ **= operand[i+1]\n    return result\n", "    result = operand[0]\n    for i\
    \ in range(len(operator)):\n        if operator[i] == '+':\n            result\
    \ += operand[i+1]\n        elif operator[i] == '-':\n            result -= operand[i+1]\n\
    \        elif operator[i] == '*':\n            result *= operand[i+1]\n      \
    \  elif operator[i] == '//':\n            result //= operand[i+1]\n        elif\
    \ operator[i] == '**':\n            result **= operand[i+1]\n    return result\n",
  "    result = operand[0]\n    for i in range(len(operator)):\n        if operator[i]\
    \ == '+':\n            result += operand[i+1]\n        elif operator[i] == '-':\n\
    \            result -= operand[i+1]\n        elif operator[i] == '*':\n      \
    \      result *= operand[i+1]\n        elif operator[i] == '//':\n           \
    \ result //= operand[i+1]\n        elif operator[i] == '**':\n            result\
    \ **= operand[i+1]\n    return result\n", "    result = operand[0]\n    for i\
    \ in range(len(operator)):\n        if operator[i] == '+':\n            result\
    \ += operand[i+1]\n        elif operator[i] == '-':\n            result -= operand[i+1]\n\
    \        elif operator[i] == '*':\n            result *= operand[i+1]\n      \
    \  elif operator[i] == '//':\n            result //= operand[i+1]\n        elif\
    \ operator[i] == '**':\n            result **= operand[i+1]\n    return result\n",
  '    pass', "    result = operand[0]\n    for i in range(len(operator)):\n     \
    \   if operator[i] == '+':\n            result += operand[i+1]\n        elif operator[i]\
    \ == '-':\n            result -= operand[i+1]\n        elif operator[i] == '*':\n\
    \            result *= operand[i+1]\n        elif operator[i] == '//':\n     \
    \       result //= operand[i+1]\n        elif operator[i] == '**':\n         \
    \   result **= operand[i+1]\n    return result\n", "    result = operand[0]\n\
    \    for i in range(len(operator)):\n        if operator[i] == '+':\n        \
    \    result += operand[i+1]\n        elif operator[i] == '-':\n            result\
    \ -= operand[i+1]\n        elif operator[i] == '*':\n            result *= operand[i+1]\n\
    \        elif operator[i] == '//':\n            result //= operand[i+1]\n    \
    \    elif operator[i] == '**':\n            result **= operand[i+1]\n    return\
    \ result\n", "    result = operand[0]\n    for i in range(len(operator)):\n  \
    \      if operator[i] == '+':\n            result += operand[i+1]\n        elif\
    \ operator[i] == '-':\n            result -= operand[i+1]\n        elif operator[i]\
    \ == '*':\n            result *= operand[i+1]\n        elif operator[i] == '//':\n\
    \            result //= operand[i+1]\n        elif operator[i] == '**':\n    \
    \        result **= operand[i+1]\n    return result\n", "    result = operand[0]\n\
    \    for i in range(len(operator)):\n        if operator[i] == '+':\n        \
    \    result += operand[i+1]\n        elif operator[i] == '-':\n            result\
    \ -= operand[i+1]\n        elif operator[i] == '*':\n            result *= operand[i+1]\n\
    \        elif operator[i] == '//':\n            result //= operand[i+1]\n    \
    \    elif operator[i] == '**':\n            result **= operand[i+1]\n    return\
    \ result\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

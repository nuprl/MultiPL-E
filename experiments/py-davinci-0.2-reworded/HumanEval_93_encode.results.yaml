language: py
name: HumanEval_93_encode
results:
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8oeg1268.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8oeg1268.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8oeg1268.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8oeg1268.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplr9lb6l2.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplr9lb6l2.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplr9lb6l2.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe4aymvx4.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe4aymvx4.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe4aymvx4.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjoqjvnhv.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjoqjvnhv.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjoqjvnhv.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp65ocohfa.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp65ocohfa.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp65ocohfa.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpily__leb.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpily__leb.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpily__leb.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpily__leb.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppvy970dg.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppvy970dg.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppvy970dg.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_char(c)\
    \ for c in message)\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeng_yrcq.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeng_yrcq.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeng_yrcq.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeng_yrcq.py\"\
    , line 15, in encode\n    return ''.join(encode_char(c) for c in message)\n  File\
    \ \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeng_yrcq.py\", line 15,\
    \ in <genexpr>\n    return ''.join(encode_char(c) for c in message)\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_4kpf5r.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_4kpf5r.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_4kpf5r.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_4kpf5r.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # Your code here\n\
    \    pass\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6to5v6pt.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6to5v6pt.py\"\
    , line 27, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6to5v6pt.py\"\
    , line 20, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfswu7eik.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfswu7eik.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfswu7eik.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo1ngzms0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo1ngzms0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo1ngzms0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo1ngzms0.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa3yy3peo.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa3yy3peo.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa3yy3peo.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphi9f96d7.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphi9f96d7.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphi9f96d7.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(lambda\
    \ x: encode_char(x), message))\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoubu__yj.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoubu__yj.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoubu__yj.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoubu__yj.py\"\
    , line 15, in encode\n    return ''.join(map(lambda x: encode_char(x), message))\n\
    \  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoubu__yj.py\", line\
    \ 15, in <lambda>\n    return ''.join(map(lambda x: encode_char(x), message))\n\
    NameError: name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_char(c)\
    \ for c in message)\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 15, in encode\n    return ''.join(encode_char(c) for c in message)\n  File\
    \ \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\", line 15,\
    \ in <genexpr>\n    return ''.join(encode_char(c) for c in message)\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(\n \
    \       [\n            chr(ord(char) + 2) if char.lower() in 'aeiou' else char.upper()\n\
    \            for char in message\n        ]\n    )\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpadu_bcvo.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpadu_bcvo.py\", line 31,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpadu_bcvo.py\", line 24, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_char(c)\
    \ for c in message)\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 15, in encode\n    return ''.join(encode_char(c) for c in message)\n  File\
    \ \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\", line 15,\
    \ in <genexpr>\n    return ''.join(encode_char(c) for c in message)\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvnz91dg2.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpvnz91dg2.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpvnz91dg2.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpvnz91dg2.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(\n \
    \       [\n            chr(ord(c) + 2) if c in 'aeiou' else c.swapcase()\n   \
    \         for c in message\n        ]\n    )\n\n\ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp49s1dc_p.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp49s1dc_p.py\", line 31,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp49s1dc_p.py\", line 24, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # TODO: implement me\n\
    \    return ''.join([encode_char(c) for c in message])\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv9zsczcq.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpv9zsczcq.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpv9zsczcq.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpv9zsczcq.py\"\
    , line 16, in encode\n    return ''.join([encode_char(c) for c in message])\n\
    \  File \"/tmp/tmpv9zsczcq.py\", line 16, in <listcomp>\n    return ''.join([encode_char(c)\
    \ for c in message])\nNameError: name 'encode_char' is not defined\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_char(c)\
    \ for c in message)\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 15, in encode\n    return ''.join(encode_char(c) for c in message)\n  File\
    \ \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\", line 15,\
    \ in <genexpr>\n    return ''.join(encode_char(c) for c in message)\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(\n \
    \       [\n            chr(ord(c) + 2) if c in 'aeiou' else c.swapcase()\n   \
    \         for c in message\n        ]\n    )\n\n\ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp49s1dc_p.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp49s1dc_p.py\", line 31,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp49s1dc_p.py\", line 24, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvnz91dg2.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpvnz91dg2.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpvnz91dg2.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpvnz91dg2.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(lambda\
    \ c: encode_char(c), message))\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpljuq_fe5.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpljuq_fe5.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpljuq_fe5.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpljuq_fe5.py\"\
    , line 15, in encode\n    return ''.join(map(lambda c: encode_char(c), message))\n\
    \  File \"/tmp/tmpljuq_fe5.py\", line 15, in <lambda>\n    return ''.join(map(lambda\
    \ c: encode_char(c), message))\nNameError: name 'encode_char' is not defined\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(\n \
    \       [\n            chr(ord(char) + 2)\n            if char.lower() in 'aeiou'\n\
    \            else chr(ord(char) - 32)\n            if char.isalpha() and char.islower()\n\
    \            else chr(ord(char) + 32)\n            if char.isalpha() and char.isupper()\n\
    \            else char\n            for char in message\n        ]\n    )\n\n\n\
    def check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjz6qgbzr.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpjz6qgbzr.py\", line 37,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpjz6qgbzr.py\", line 30, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_char(c)\
    \ for c in message)\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 15, in encode\n    return ''.join(encode_char(c) for c in message)\n  File\
    \ \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\", line 15,\
    \ in <genexpr>\n    return ''.join(encode_char(c) for c in message)\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(lambda\
    \ x: encode_letter(x), message))\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp89p4qebc.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp89p4qebc.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp89p4qebc.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp89p4qebc.py\"\
    , line 15, in encode\n    return ''.join(map(lambda x: encode_letter(x), message))\n\
    \  File \"/tmp/tmp89p4qebc.py\", line 15, in <lambda>\n    return ''.join(map(lambda\
    \ x: encode_letter(x), message))\nNameError: name 'encode_letter' is not defined\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # your code here\n\
    \    pass\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvt35evd7.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpvt35evd7.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpvt35evd7.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_char(c)\
    \ for c in message)\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 15, in encode\n    return ''.join(encode_char(c) for c in message)\n  File\
    \ \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\", line 15,\
    \ in <genexpr>\n    return ''.join(encode_char(c) for c in message)\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(\n \
    \       [\n            chr(ord(char) + 2) if char.lower() in 'aeiou' else char.upper()\n\
    \            for char in message\n        ]\n    )\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpadu_bcvo.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpadu_bcvo.py\", line 31,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpadu_bcvo.py\", line 24, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(\n \
    \       [\n            chr(ord(char) + 2) if char in 'aeiou' else char.swapcase()\n\
    \            for char in message\n        ]\n    )\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpikkkee6w.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpikkkee6w.py\", line 31,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpikkkee6w.py\", line 24, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(\n \
    \       [\n            chr(ord(char) + 2) if char in 'aeiou' else char.swapcase()\n\
    \            for char in message\n        ]\n    )\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpikkkee6w.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpikkkee6w.py\", line 31,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpikkkee6w.py\", line 24, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_char(c)\
    \ for c in message)\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 15, in encode\n    return ''.join(encode_char(c) for c in message)\n  File\
    \ \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\", line 15,\
    \ in <genexpr>\n    return ''.join(encode_char(c) for c in message)\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_char(c)\
    \ for c in message)\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 15, in encode\n    return ''.join(encode_char(c) for c in message)\n  File\
    \ \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\", line 15,\
    \ in <genexpr>\n    return ''.join(encode_char(c) for c in message)\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(\n \
    \       [\n            chr(ord(letter) + 2) if letter in 'aeiou' else letter.swapcase()\n\
    \            for letter in message\n        ]\n    )\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbjo0e4fo.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpbjo0e4fo.py\", line 30,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpbjo0e4fo.py\", line 23, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(lambda\
    \ x: x.upper() if x.islower() else x.lower(), message))\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk2rf8dcp.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpk2rf8dcp.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpk2rf8dcp.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvnz91dg2.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpvnz91dg2.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpvnz91dg2.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpvnz91dg2.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_char(c)\
    \ for c in message)\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 15, in encode\n    return ''.join(encode_char(c) for c in message)\n  File\
    \ \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\", line 15,\
    \ in <genexpr>\n    return ''.join(encode_char(c) for c in message)\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_char(char)\
    \ for char in message)\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxzhu7t_6.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpxzhu7t_6.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpxzhu7t_6.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpxzhu7t_6.py\"\
    , line 15, in encode\n    return ''.join(encode_char(char) for char in message)\n\
    \  File \"/tmp/tmpxzhu7t_6.py\", line 15, in <genexpr>\n    return ''.join(encode_char(char)\
    \ for char in message)\nNameError: name 'encode_char' is not defined\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(\n \
    \       [\n            chr(ord(c) + 2) if c in 'aeiou' else c.swapcase()\n   \
    \         for c in message\n        ]\n    )\n\ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprv1jf5d6.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmprv1jf5d6.py\", line 30,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmprv1jf5d6.py\", line 23, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(lambda\
    \ x: encode_char(x), message))\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoubu__yj.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoubu__yj.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoubu__yj.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoubu__yj.py\"\
    , line 15, in encode\n    return ''.join(map(lambda x: encode_char(x), message))\n\
    \  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoubu__yj.py\", line\
    \ 15, in <lambda>\n    return ''.join(map(lambda x: encode_char(x), message))\n\
    NameError: name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # TODO: Write the encode\
    \ function\n    pass\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdv3t7xe1.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpdv3t7xe1.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpdv3t7xe1.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(\n \
    \       [\n            chr(ord(c) + 2) if c in 'aeiou' else c.swapcase()\n   \
    \         for c in message\n        ]\n    )\n\n\ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp49s1dc_p.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp49s1dc_p.py\", line 31,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp49s1dc_p.py\", line 24, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(\n \
    \       [\n            chr(ord(c) + 2) if c in 'aeiou' else c.swapcase()\n   \
    \         for c in message\n        ]\n    )\n\n\ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp49s1dc_p.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp49s1dc_p.py\", line 31,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp49s1dc_p.py\", line 24, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    message = message.swapcase()\n\
    \    vowels = 'aeiou'\n    new_message = ''\n    for letter in message:\n    \
    \    if letter in vowels:\n            new_message += vowels[(vowels.index(letter)\
    \ + 2) % 5]\n        else:\n            new_message += letter\n    return new_message\n\
    \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp17jxslxu.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp17jxslxu.py\", line 33,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp17jxslxu.py\", line 26, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_char(c)\
    \ for c in message)\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 15, in encode\n    return ''.join(encode_char(c) for c in message)\n  File\
    \ \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\", line 15,\
    \ in <genexpr>\n    return ''.join(encode_char(c) for c in message)\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvnz91dg2.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpvnz91dg2.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpvnz91dg2.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpvnz91dg2.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return \"\".join(\n\
    \        [\n            chr(ord(c) + 2)\n            if c.lower() in \"aeiou\"\
    \n            else chr(ord(c) - 32)\n            if c.isalpha() and c.islower()\n\
    \            else c\n            for c in message\n        ]\n    )\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8h_m_qv6.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp8h_m_qv6.py\", line 35,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp8h_m_qv6.py\", line 28, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_char(c)\
    \ for c in message)\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 15, in encode\n    return ''.join(encode_char(c) for c in message)\n  File\
    \ \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\", line 15,\
    \ in <genexpr>\n    return ''.join(encode_char(c) for c in message)\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvnz91dg2.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpvnz91dg2.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpvnz91dg2.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpvnz91dg2.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_char(char)\
    \ for char in message)\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxzhu7t_6.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpxzhu7t_6.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpxzhu7t_6.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpxzhu7t_6.py\"\
    , line 15, in encode\n    return ''.join(encode_char(char) for char in message)\n\
    \  File \"/tmp/tmpxzhu7t_6.py\", line 15, in <genexpr>\n    return ''.join(encode_char(char)\
    \ for char in message)\nNameError: name 'encode_char' is not defined\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # TODO: Implement me\n\
    \    pass\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n \
    \   assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkgqlb_a4.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpkgqlb_a4.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpkgqlb_a4.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvnz91dg2.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpvnz91dg2.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpvnz91dg2.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpvnz91dg2.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(\n \
    \       [\n            chr(ord(char) + 2) if char in 'aeiou' else char.swapcase()\n\
    \            for char in message\n        ]\n    )\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpikkkee6w.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpikkkee6w.py\", line 31,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpikkkee6w.py\", line 24, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    encoded_message = ''\n\
    \    for letter in message:\n        if letter.isupper():\n            encoded_message\
    \ += letter.lower()\n        elif letter.islower():\n            encoded_message\
    \ += letter.upper()\n        else:\n            encoded_message += letter\n  \
    \  return encoded_message\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy3e5po9x.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpy3e5po9x.py\", line 33,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpy3e5po9x.py\", line 26, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''\n\n\ndef\
    \ check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkuu91psr.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpkuu91psr.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpkuu91psr.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(lambda\
    \ x: encode_char(x), message))\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz31qj5m8.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpz31qj5m8.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpz31qj5m8.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpz31qj5m8.py\"\
    , line 15, in encode\n    return ''.join(map(lambda x: encode_char(x), message))\n\
    \  File \"/tmp/tmpz31qj5m8.py\", line 15, in <lambda>\n    return ''.join(map(lambda\
    \ x: encode_char(x), message))\nNameError: name 'encode_char' is not defined\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_char(c)\
    \ for c in message)\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 15, in encode\n    return ''.join(encode_char(c) for c in message)\n  File\
    \ \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\", line 15,\
    \ in <genexpr>\n    return ''.join(encode_char(c) for c in message)\nNameError:\
    \ name 'encode_char' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_letter(letter)\
    \ for letter in message)\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4gkkxie6.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp4gkkxie6.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp4gkkxie6.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp4gkkxie6.py\"\
    , line 15, in encode\n    return ''.join(encode_letter(letter) for letter in message)\n\
    \  File \"/tmp/tmp4gkkxie6.py\", line 15, in <genexpr>\n    return ''.join(encode_letter(letter)\
    \ for letter in message)\nNameError: name 'encode_letter' is not defined\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpehx1qcxs.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpehx1qcxs.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpehx1qcxs.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpehx1qcxs.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # Your code here\n\
    \    return message\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgxm74on2.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpgxm74on2.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpgxm74on2.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # your code here\n\
    \    return \"\"\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiqqqsrco.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpiqqqsrco.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpiqqqsrco.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvnz91dg2.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpvnz91dg2.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpvnz91dg2.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpvnz91dg2.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(\n \
    \       [\n            chr(ord(letter) + 2) if letter in 'aeiou' else letter.swapcase()\n\
    \            for letter in message\n        ]\n    )\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqrbydpvw.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqrbydpvw.py\", line 31,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpqrbydpvw.py\", line 24, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # Your code here\n\
    \    return None\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz_ik5eh3.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpz_ik5eh3.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpz_ik5eh3.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(\n \
    \       [\n            chr(ord(char) + 2) if char in 'aeiou' else char.swapcase()\n\
    \            for char in message\n        ]\n    )\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpikkkee6w.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpikkkee6w.py\", line 31,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpikkkee6w.py\", line 24, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1659747126
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''

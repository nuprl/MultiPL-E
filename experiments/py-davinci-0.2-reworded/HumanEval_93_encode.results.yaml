name: HumanEval_93_encode
language: py
results:
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8oeg1268.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8oeg1268.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8oeg1268.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8oeg1268.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplr9lb6l2.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplr9lb6l2.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplr9lb6l2.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe4aymvx4.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe4aymvx4.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe4aymvx4.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjoqjvnhv.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjoqjvnhv.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjoqjvnhv.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp65ocohfa.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp65ocohfa.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp65ocohfa.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpily__leb.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpily__leb.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpily__leb.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpily__leb.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppvy970dg.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppvy970dg.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppvy970dg.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_char(c)\
    \ for c in message)\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeng_yrcq.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeng_yrcq.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeng_yrcq.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeng_yrcq.py\"\
    , line 15, in encode\n    return ''.join(encode_char(c) for c in message)\n  File\
    \ \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeng_yrcq.py\", line 15,\
    \ in <genexpr>\n    return ''.join(encode_char(c) for c in message)\nNameError:\
    \ name 'encode_char' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_4kpf5r.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_4kpf5r.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_4kpf5r.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_4kpf5r.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # Your code here\n\
    \    pass\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6to5v6pt.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6to5v6pt.py\"\
    , line 27, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6to5v6pt.py\"\
    , line 20, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfswu7eik.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfswu7eik.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfswu7eik.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo1ngzms0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo1ngzms0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo1ngzms0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo1ngzms0.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8tlzhtev.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa3yy3peo.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa3yy3peo.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa3yy3peo.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 26, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp12fc7klf.py\"\
    , line 19, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphi9f96d7.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphi9f96d7.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphi9f96d7.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(lambda\
    \ x: encode_char(x), message))\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoubu__yj.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoubu__yj.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoubu__yj.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoubu__yj.py\"\
    , line 15, in encode\n    return ''.join(map(lambda x: encode_char(x), message))\n\
    \  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoubu__yj.py\", line\
    \ 15, in <lambda>\n    return ''.join(map(lambda x: encode_char(x), message))\n\
    NameError: name 'encode_char' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(encode_char(c)\
    \ for c in message)\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\"\
    , line 15, in encode\n    return ''.join(encode_char(c) for c in message)\n  File\
    \ \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqjqx5t0.py\", line 15,\
    \ in <genexpr>\n    return ''.join(encode_char(c) for c in message)\nNameError:\
    \ name 'encode_char' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy2gk0z0.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join(map(encode_char,\
    \ message))\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 25, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 18, in check\n    assert candidate('TEST') == 'tgst'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhqxdtqh.py\"\
    , line 15, in encode\n    return ''.join(map(encode_char, message))\nNameError:\
    \ name 'encode_char' is not defined\n"
  exit_code: -1
  status: Exception

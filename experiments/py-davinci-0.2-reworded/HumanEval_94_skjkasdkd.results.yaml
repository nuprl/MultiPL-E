name: HumanEval_94_skjkasdkd
language: py
results:
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    return sum(map(int,\
    \ str(max(filter(lambda x: all(x % i for i in range(2, x)), lst)))))\n\ndef check(candidate):\n\
    \    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3]) == 10\n    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3,\
    \ 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n   \
    \ assert candidate([8191]) == 19\n    assert candidate([8191, 123456, 127, 7])\
    \ == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n  \
    \  check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    return sum(map(int,\
    \ str(max(filter(lambda x: is_prime(x), lst)))))\n\ndef check(candidate):\n  \
    \  assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2,\
    \ 32, 324, 4, 3]) == 10\n    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40,\
    \ 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n   \
    \ assert candidate([8191]) == 19\n    assert candidate([8191, 123456, 127, 7])\
    \ == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n  \
    \  check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg_ob7sbe.py\"\
    , line 37, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg_ob7sbe.py\"\
    , line 35, in test_check\n    check(skjkasdkd)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg_ob7sbe.py\"\
    , line 24, in check\n    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2,\
    \ 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg_ob7sbe.py\"\
    , line 21, in skjkasdkd\n    return sum(map(int, str(max(filter(lambda x: is_prime(x),\
    \ lst)))))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg_ob7sbe.py\"\
    , line 21, in <lambda>\n    return sum(map(int, str(max(filter(lambda x: is_prime(x),\
    \ lst)))))\nNameError: name 'is_prime' is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    lst = sorted(lst)\n\
    \    for i in range(len(lst) - 1, -1, -1):\n        if lst[i] == 0:\n        \
    \    continue\n        if is_prime(lst[i]):\n            return sum(map(int, str(lst[i])))\n\
    \    return 0\n\ndef check(candidate):\n    assert candidate([0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10\n    assert candidate([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n   \
    \ assert candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n\
    \    assert candidate([0, 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8,\
    \ 1, 2, 1, 7]) == 7\n    assert candidate([8191]) == 19\n    assert candidate([8191,\
    \ 123456, 127, 7]) == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n\
    \    check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppg29f4e9.py\"\
    , line 43, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppg29f4e9.py\"\
    , line 41, in test_check\n    check(skjkasdkd)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppg29f4e9.py\"\
    , line 30, in check\n    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2,\
    \ 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppg29f4e9.py\"\
    , line 25, in skjkasdkd\n    if is_prime(lst[i]):\nNameError: name 'is_prime'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    def is_prime(n):\n\
    \        if n <= 1:\n            return False\n        if n <= 3:\n          \
    \  return True\n        if n % 2 == 0 or n % 3 == 0:\n            return False\n\
    \        i = 5\n        while i * i <= n:\n            if n % i == 0 or n % (i\
    \ + 2) == 0:\n                return False\n            i += 6\n        return\
    \ True\n\n    def sum_digits(n):\n        s = 0\n        while n:\n          \
    \  s += n % 10\n            n //= 10\n        return s\n\n    lst = sorted(lst,\
    \ reverse=True)\n    for i in lst:\n        if is_prime(i):\n            return\
    \ sum_digits(i)\n    return 0\n\n\ndef check(candidate):\n    assert candidate([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10\n\
    \    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0, 81, 12, 3, 1, 21])\
    \ == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n    assert candidate([8191])\
    \ == 19\n    assert candidate([8191, 123456, 127, 7]) == 19\n    assert candidate([127,\
    \ 97, 8192]) == 10\n\ndef test_check():\n    check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    def is_prime(n):\n\
    \        if n <= 1:\n            return False\n        if n <= 3:\n          \
    \  return True\n        if n % 2 == 0 or n % 3 == 0:\n            return False\n\
    \        i = 5\n        while i * i <= n:\n            if n % i == 0 or n % (i\
    \ + 2) == 0:\n                return False\n            i += 6\n        return\
    \ True\n\n    def sum_digits(n):\n        return sum(map(int, str(n)))\n\n   \
    \ return sum_digits(max(filter(is_prime, lst)))\n\n\ndef check(candidate):\n \
    \   assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2,\
    \ 32, 324, 4, 3]) == 10\n    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40,\
    \ 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n   \
    \ assert candidate([8191]) == 19\n    assert candidate([8191, 123456, 127, 7])\
    \ == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n  \
    \  check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    return sum(int(i)\
    \ for i in str(max(i for i in lst if is_prime(i))))\n\ndef check(candidate):\n\
    \    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3]) == 10\n    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3,\
    \ 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n   \
    \ assert candidate([8191]) == 19\n    assert candidate([8191, 123456, 127, 7])\
    \ == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n  \
    \  check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyp7sj97_.py\"\
    , line 37, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyp7sj97_.py\"\
    , line 35, in test_check\n    check(skjkasdkd)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyp7sj97_.py\"\
    , line 24, in check\n    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2,\
    \ 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyp7sj97_.py\"\
    , line 21, in skjkasdkd\n    return sum(int(i) for i in str(max(i for i in lst\
    \ if is_prime(i))))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyp7sj97_.py\"\
    , line 21, in <genexpr>\n    return sum(int(i) for i in str(max(i for i in lst\
    \ if is_prime(i))))\nNameError: name 'is_prime' is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    return sum(map(int,\
    \ str(max(filter(lambda x: all(x % i for i in range(2, x)), lst)))))\n\ndef check(candidate):\n\
    \    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3]) == 10\n    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3,\
    \ 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n   \
    \ assert candidate([8191]) == 19\n    assert candidate([8191, 123456, 127, 7])\
    \ == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n  \
    \  check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    def is_prime(n):\n\
    \        if n == 2 or n == 3: return True\n        if n < 2 or n%2 == 0: return\
    \ False\n        if n < 9: return True\n        if n%3 == 0: return False\n  \
    \      r = int(n**0.5)\n        f = 5\n        while f <= r:\n            if n%f\
    \ == 0: return False\n            if n%(f+2) == 0: return False\n            f\
    \ +=6\n        return True\n\n    def sum_digits(n):\n        s = 0\n        while\
    \ n:\n            s += n % 10\n            n //= 10\n        return s\n\n    return\
    \ sum_digits(max(filter(is_prime, lst)))\n\n\ndef check(candidate):\n    assert\
    \ candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3]) == 10\n    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n    assert candidate([8191])\
    \ == 19\n    assert candidate([8191, 123456, 127, 7]) == 19\n    assert candidate([127,\
    \ 97, 8192]) == 10\n\ndef test_check():\n    check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    return sum(map(int,\
    \ str(max(filter(lambda x: all(x % i for i in range(2, x)), lst)))))\n\ndef check(candidate):\n\
    \    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3]) == 10\n    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3,\
    \ 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n   \
    \ assert candidate([8191]) == 19\n    assert candidate([8191, 123456, 127, 7])\
    \ == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n  \
    \  check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    primes =\
    \ []\n    for i in lst:\n        if i > 1:\n            for j in range(2, i):\n\
    \                if (i % j) == 0:\n                    break\n            else:\n\
    \                primes.append(i)\n    return sum(map(int, str(max(primes))))\n\
    \ndef check(candidate):\n    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10\n    assert candidate([1, 0,\
    \ 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n   \
    \ assert candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n\
    \    assert candidate([0, 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8,\
    \ 1, 2, 1, 7]) == 7\n    assert candidate([8191]) == 19\n    assert candidate([8191,\
    \ 123456, 127, 7]) == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n\
    \    check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    def is_prime(n):\n\
    \        if n <= 1:\n            return False\n        for i in range(2, n):\n\
    \            if n % i == 0:\n                return False\n        return True\n\
    \n    def sum_digits(n):\n        return sum(int(i) for i in str(n))\n\n    return\
    \ sum_digits(max(filter(is_prime, lst)))\n\ndef check(candidate):\n    assert\
    \ candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3]) == 10\n    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0, 81, 12,\
    \ 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n    assert candidate([8191])\
    \ == 19\n    assert candidate([8191, 123456, 127, 7]) == 19\n    assert candidate([127,\
    \ 97, 8192]) == 10\n\ndef test_check():\n    check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    return sum(map(int,\
    \ str(max(filter(lambda x: all(x % i for i in range(2, x)), lst)))))\n\ndef check(candidate):\n\
    \    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3]) == 10\n    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3,\
    \ 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n   \
    \ assert candidate([8191]) == 19\n    assert candidate([8191, 123456, 127, 7])\
    \ == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n  \
    \  check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    return sum(map(int,\
    \ str(max(filter(lambda x: all(x % i for i in range(2, x)), lst)))))\n\ndef check(candidate):\n\
    \    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3]) == 10\n    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3,\
    \ 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n   \
    \ assert candidate([8191]) == 19\n    assert candidate([8191, 123456, 127, 7])\
    \ == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n  \
    \  check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    def is_prime(n):\n\
    \        if n <= 1:\n            return False\n        if n <= 3:\n          \
    \  return True\n        if n % 2 == 0 or n % 3 == 0:\n            return False\n\
    \        i = 5\n        while i * i <= n:\n            if n % i == 0 or n % (i\
    \ + 2) == 0:\n                return False\n            i += 6\n        return\
    \ True\n\n    def sum_digits(n):\n        return sum(map(int, str(n)))\n\n   \
    \ return sum_digits(max(filter(is_prime, lst)))\n\ndef check(candidate):\n   \
    \ assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2,\
    \ 32, 324, 4, 3]) == 10\n    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40,\
    \ 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n   \
    \ assert candidate([8191]) == 19\n    assert candidate([8191, 123456, 127, 7])\
    \ == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n  \
    \  check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    return sum(map(int,\
    \ str(max(filter(lambda x: all(x % i for i in range(2, x)), lst)))))\n\ndef check(candidate):\n\
    \    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3]) == 10\n    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3,\
    \ 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n   \
    \ assert candidate([8191]) == 19\n    assert candidate([8191, 123456, 127, 7])\
    \ == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n  \
    \  check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    return sum(map(int,\
    \ str(max(filter(lambda x: all(x % i for i in range(2, x)), lst)))))\n\ndef check(candidate):\n\
    \    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3]) == 10\n    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3,\
    \ 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n   \
    \ assert candidate([8191]) == 19\n    assert candidate([8191, 123456, 127, 7])\
    \ == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n  \
    \  check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    return sum(map(int,\
    \ str(max(filter(lambda x: all(x % i for i in range(2, x)), lst)))))\n\ndef check(candidate):\n\
    \    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3]) == 10\n    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3,\
    \ 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n   \
    \ assert candidate([8191]) == 19\n    assert candidate([8191, 123456, 127, 7])\
    \ == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n  \
    \  check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    lst.sort()\n\
    \    lst.reverse()\n    for i in lst:\n        if i > 1:\n            for j in\
    \ range(2, i):\n                if (i % j) == 0:\n                    break\n\
    \            else:\n                return sum(map(int, str(i)))\n    return 0\n\
    \ndef check(candidate):\n    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10\n    assert candidate([1, 0,\
    \ 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n   \
    \ assert candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n\
    \    assert candidate([0, 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8,\
    \ 1, 2, 1, 7]) == 7\n    assert candidate([8191]) == 19\n    assert candidate([8191,\
    \ 123456, 127, 7]) == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n\
    \    check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    return sum(map(int,\
    \ str(max(filter(lambda x: all(x % i for i in range(2, x)), lst)))))\n\ndef check(candidate):\n\
    \    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3]) == 10\n    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3,\
    \ 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n   \
    \ assert candidate([8191]) == 19\n    assert candidate([8191, 123456, 127, 7])\
    \ == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n  \
    \  check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n   \
    \ \"\"\"You are given a list of integers.\n    You need to find the largest prime\
    \ value and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n   \
    \ 10\n    >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1])\n    25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32,\
    \ 6, 0, 5, 91, 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n\
    \    3\n    >>> skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n    return sum(map(int,\
    \ str(max(filter(lambda x: all(x % i for i in range(2, x)), lst)))))\n\ndef check(candidate):\n\
    \    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3]) == 10\n    assert candidate([1, 0, 1, 8, 2, 4597, 2, 1, 3,\
    \ 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert candidate([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert candidate([0,\
    \ 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7]) == 7\n   \
    \ assert candidate([8191]) == 19\n    assert candidate([8191, 123456, 127, 7])\
    \ == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n  \
    \  check(skjkasdkd)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

language: py
name: HumanEval_34_unique
results:
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''

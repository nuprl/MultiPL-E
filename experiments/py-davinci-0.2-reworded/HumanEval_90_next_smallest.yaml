name: HumanEval_90_next_smallest
language: py
prompt: "from typing import List, Optional\n\ndef next_smallest(lst: List[int]) ->\
  \ Optional[int]:\n    \"\"\"\n    You are given a list of integers.\n    Write a\
  \ function next_smallest() that returns the 2nd smallest element of the list.\n\
  \    Return None if there is no such element.\n    >>> next_smallest([1, 2, 3, 4,\
  \ 5])\n    2\n    >>> next_smallest([5, 1, 4, 3, 2])\n    2\n    >>> next_smallest([])\n\
  \    None\n    >>> next_smallest([1, 1])\n    None\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([1, 2, 3, 4, 5]) == 2\n    assert\
  \ candidate([5, 1, 4, 3, 2]) == 2\n    assert candidate([]) == None\n    assert\
  \ candidate([1, 1]) == None\n    assert candidate([1, 1, 1, 1, 0]) == 1\n    assert\
  \ candidate([1, 1]) == None\n    assert candidate([-35, 34, 12, -45]) == -35\n\n\
  def test_check():\n    check(next_smallest)\n\ntest_check()\n"
completions: ["    if len(lst) < 2:\n        return None\n    min_1 = min(lst)\n \
    \   lst.remove(min_1)\n    min_2 = min(lst)\n    return min_2\n", "    if len(lst)\
    \ < 2:\n        return None\n    smallest = lst[0]\n    second_smallest = None\n\
    \    for i in range(1, len(lst)):\n        if lst[i] < smallest:\n           \
    \ second_smallest = smallest\n            smallest = lst[i]\n        elif lst[i]\
    \ < second_smallest or second_smallest is None:\n            second_smallest =\
    \ lst[i]\n    return second_smallest\n", "    if len(lst) < 2:\n        return\
    \ None\n    min_1 = min(lst)\n    lst.remove(min_1)\n    min_2 = min(lst)\n  \
    \  return min_2\n\n", "    if len(lst) < 2:\n        return None\n    smallest\
    \ = min(lst)\n    lst.remove(smallest)\n    return min(lst)\n", "    if len(lst)\
    \ < 2:\n        return None\n    else:\n        lst.sort()\n        for i in range(1,\
    \ len(lst)):\n            if lst[i] != lst[i-1]:\n                return lst[i]\n\
    \        return None\n", "    if len(lst) < 2:\n        return None\n    smallest\
    \ = lst[0]\n    next_smallest = None\n    for i in range(1, len(lst)):\n     \
    \   if lst[i] < smallest:\n            next_smallest = smallest\n            smallest\
    \ = lst[i]\n        elif lst[i] < next_smallest or next_smallest is None:\n  \
    \          next_smallest = lst[i]\n    return next_smallest\n", "    if len(lst)\
    \ < 2:\n        return None\n    smallest = lst[0]\n    second_smallest = None\n\
    \    for i in range(1, len(lst)):\n        if lst[i] < smallest:\n           \
    \ second_smallest = smallest\n            smallest = lst[i]\n        elif second_smallest\
    \ is None or lst[i] < second_smallest:\n            second_smallest = lst[i]\n\
    \    return second_smallest\n", "    if len(lst) < 2:\n        return None\n \
    \   smallest = min(lst)\n    lst.remove(smallest)\n    return min(lst)\n", " \
    \   if len(lst) < 2:\n        return None\n    smallest = lst[0]\n    next_smallest\
    \ = lst[1]\n    for i in range(1, len(lst)):\n        if lst[i] < smallest:\n\
    \            next_smallest = smallest\n            smallest = lst[i]\n       \
    \ elif lst[i] < next_smallest:\n            next_smallest = lst[i]\n    return\
    \ next_smallest\n", "    if len(lst) < 2:\n        return None\n    min1 = min(lst)\n\
    \    lst.remove(min1)\n    min2 = min(lst)\n    return min2\n", "    if len(lst)\
    \ < 2:\n        return None\n    smallest = lst[0]\n    next_smallest = None\n\
    \    for i in range(1, len(lst)):\n        if lst[i] < smallest:\n           \
    \ next_smallest = smallest\n            smallest = lst[i]\n        elif next_smallest\
    \ is None or lst[i] < next_smallest:\n            next_smallest = lst[i]\n   \
    \ return next_smallest\n", "    if len(lst) < 2:\n        return None\n    smallest\
    \ = lst[0]\n    next_smallest = None\n    for i in range(1, len(lst)):\n     \
    \   if lst[i] < smallest:\n            next_smallest = smallest\n            smallest\
    \ = lst[i]\n        elif next_smallest is None or lst[i] < next_smallest:\n  \
    \          next_smallest = lst[i]\n    return next_smallest\n", "    if len(lst)\
    \ < 2:\n        return None\n    smallest = lst[0]\n    next_smallest = None\n\
    \    for i in range(1, len(lst)):\n        if lst[i] < smallest:\n           \
    \ next_smallest = smallest\n            smallest = lst[i]\n        elif next_smallest\
    \ is None or lst[i] < next_smallest:\n            next_smallest = lst[i]\n   \
    \ return next_smallest\n", "    if len(lst) < 2:\n        return None\n    smallest\
    \ = lst[0]\n    second_smallest = None\n    for num in lst[1:]:\n        if num\
    \ < smallest:\n            second_smallest = smallest\n            smallest =\
    \ num\n        elif second_smallest is None or num < second_smallest:\n      \
    \      second_smallest = num\n    return second_smallest\n", "    if len(lst)\
    \ < 2:\n        return None\n    smallest = min(lst)\n    lst.remove(smallest)\n\
    \    return min(lst)\n", "    if len(lst) < 2:\n        return None\n    smallest\
    \ = lst[0]\n    next_smallest = None\n    for i in range(1, len(lst)):\n     \
    \   if lst[i] < smallest:\n            next_smallest = smallest\n            smallest\
    \ = lst[i]\n        elif lst[i] > smallest and (next_smallest is None or lst[i]\
    \ < next_smallest):\n            next_smallest = lst[i]\n    return next_smallest\n",
  "    if len(lst) < 2:\n        return None\n    smallest = lst[0]\n    second_smallest\
    \ = None\n    for i in range(1, len(lst)):\n        if lst[i] < smallest:\n  \
    \          second_smallest = smallest\n            smallest = lst[i]\n       \
    \ elif lst[i] < second_smallest or second_smallest is None:\n            second_smallest\
    \ = lst[i]\n    return second_smallest\n", "    if len(lst) < 2:\n        return\
    \ None\n    smallest = lst[0]\n    second_smallest = None\n    for i in range(1,\
    \ len(lst)):\n        if lst[i] < smallest:\n            second_smallest = smallest\n\
    \            smallest = lst[i]\n        elif second_smallest is None or lst[i]\
    \ < second_smallest:\n            second_smallest = lst[i]\n    return second_smallest\n",
  "    if len(lst) < 2:\n        return None\n    smallest = lst[0]\n    second_smallest\
    \ = None\n    for i in range(1, len(lst)):\n        if lst[i] < smallest:\n  \
    \          second_smallest = smallest\n            smallest = lst[i]\n       \
    \ elif lst[i] < second_smallest or second_smallest is None:\n            second_smallest\
    \ = lst[i]\n    return second_smallest\n", "    if len(lst) < 2:\n        return\
    \ None\n    min_1 = min(lst)\n    min_2 = min(x for x in lst if x != min_1)\n\
    \    return min_2\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_43_pairs_sum_to_zero
language: py
prompt: "from typing import List\n\ndef pairs_sum_to_zero(l: List[int]) -> bool:\n\
  \    \"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n    it\
  \ returns True if there are two distinct elements in the list that\n    sum to zero,\
  \ and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n    False\n   \
  \ >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
  \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
  \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([1, 3, 5, 0]) == False\n    assert\
  \ candidate([1, 3, -2, 1]) == False\n    assert candidate([1, 2, 3, 7]) == False\n\
  \    assert candidate([2, 4, -5, 3, 5, 7]) == True\n    assert candidate([1]) ==\
  \ False\n    assert candidate([-3, 9, -1, 3, 2, 30]) == True\n    assert candidate([-3,\
  \ 9, -1, 3, 2, 31]) == True\n    assert candidate([-3, 9, -1, 4, 2, 30]) == False\n\
  \    assert candidate([-3, 9, -1, 4, 2, 31]) == False\n\ndef test_check():\n   \
  \ check(pairs_sum_to_zero)\n\ntest_check()\n"
completions: ["    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n\
    \            if l[i] + l[j] == 0:\n                return True\n    return False\n",
  "    # YOUR CODE HERE\n    return False\n", "    # TODO: implement this function\n\
    \    return False\n", "    # YOUR CODE HERE\n    # raise NotImplementedError()\n\
    \    for i in range(len(l)):\n        for j in range(i+1, len(l)):\n         \
    \   if l[i] + l[j] == 0:\n                return True\n    return False\n", " \
    \   for i in range(len(l)):\n        for j in range(i+1, len(l)):\n          \
    \  if l[i] + l[j] == 0:\n                return True\n    return False\n", " \
    \   for i in range(len(l)):\n        for j in range(i+1, len(l)):\n          \
    \  if l[i] + l[j] == 0:\n                return True\n    return False\n", " \
    \   for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n        \
    \    if l[i] + l[j] == 0:\n                return True\n    return False\n", " \
    \   for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n        \
    \    if l[i] + l[j] == 0:\n                return True\n    return False\n", " \
    \   if len(l) < 2:\n        return False\n    else:\n        for i in range(len(l)):\n\
    \            for j in range(i+1, len(l)):\n                if l[i] + l[j] == 0:\n\
    \                    return True\n        return False\n", "    for i in range(len(l)):\n\
    \        for j in range(i+1, len(l)):\n            if l[i] + l[j] == 0:\n    \
    \            return True\n    return False\n", "    # check if the list is empty\n\
    \    if len(l) == 0:\n        return False\n    # check if the list has only one\
    \ element\n    if len(l) == 1:\n        return False\n    # check if the list\
    \ has two elements\n    if len(l) == 2:\n        if l[0] + l[1] == 0:\n      \
    \      return True\n        else:\n            return False\n    # check if the\
    \ list has more than two elements\n    for i in range(len(l)):\n        for j\
    \ in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n               \
    \ return True\n    return False\n", "    for i in range(len(l)):\n        for\
    \ j in range(i+1, len(l)):\n            if l[i] + l[j] == 0:\n               \
    \ return True\n    return False\n", "    for i in range(len(l)):\n        for\
    \ j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n             \
    \   return True\n    return False\n", "    for i in range(len(l)):\n        for\
    \ j in range(i+1, len(l)):\n            if l[i] + l[j] == 0:\n               \
    \ return True\n    return False\n", "    for i in range(len(l)):\n        for\
    \ j in range(i+1, len(l)):\n            if l[i] + l[j] == 0:\n               \
    \ return True\n    return False\n", "    for i in range(len(l)):\n        for\
    \ j in range(i+1, len(l)):\n            if l[i] + l[j] == 0:\n               \
    \ return True\n    return False\n", "    # YOUR CODE HERE\n    for i in range(len(l)):\n\
    \        for j in range(i+1, len(l)):\n            if l[i] + l[j] == 0:\n    \
    \            return True\n    return False\n", "    # YOUR CODE HERE\n    for\
    \ i in range(len(l)):\n        for j in range(i+1, len(l)):\n            if l[i]\
    \ + l[j] == 0:\n                return True\n    return False\n", "    for i in\
    \ range(len(l)):\n        for j in range(i+1, len(l)):\n            if l[i] +\
    \ l[j] == 0:\n                return True\n    return False\n", "    for i in\
    \ range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[i]\
    \ + l[j] == 0:\n                return True\n    return False\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

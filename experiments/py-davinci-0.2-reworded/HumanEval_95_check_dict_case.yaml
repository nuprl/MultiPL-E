name: HumanEval_95_check_dict_case
language: py
prompt: "from typing import Dict\n\ndef check_dict_case(dict: Dict[str, str]) -> bool:\n\
  \    \"\"\"\n    Given a dictionary, return True if all keys are strings in lower\
  \ \n    case or all keys are strings in upper case, else return False.\n    The\
  \ function should return False is the given dictionary is empty.\n    Examples:\n\
  \    >>> check_dict_case({ 'a': 'apple', 'b': 'banana' })\n    True\n    >>> check_dict_case({\
  \ 'a': 'apple', 'A': 'banana', 'B': 'banana' })\n    False\n    >>> check_dict_case({\
  \ 'a': 'apple', 8: 'banana', 'a': 'apple' })\n    False\n    >>> check_dict_case({\
  \ 'Name': 'John', 'Age': '36', 'City': 'Houston' })\n    False\n    >>> check_dict_case({\
  \ 'STATE': 'NC', 'ZIP': '12345' })\n    True\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate({ 'p': 'pineapple', 'b': 'banana'\
  \ }) == True\n    assert candidate({ 'p': 'pineapple', 'A': 'banana', 'B': 'banana'\
  \ }) == False\n    assert candidate({ 'p': 'pineapple', '5': 'banana', 'a': 'apple'\
  \ }) == False\n    assert candidate({ 'Name': 'John', 'Age': '36', 'City': 'Houston'\
  \ }) == False\n    assert candidate({ 'STATE': 'NC', 'ZIP': '12345' }) == True\n\
  \    assert candidate({ 'fruit': 'Orange', 'taste': 'Sweet' }) == True\n    assert\
  \ candidate({  }) == False\n\ndef test_check():\n    check(check_dict_case)\n\n\
  test_check()\n"
completions: ["    if len(dict) == 0:\n        return False\n    else:\n        for\
    \ key in dict:\n            if not isinstance(key, str):\n                return\
    \ False\n            elif key.islower() and key.isupper():\n                return\
    \ False\n            elif key.islower():\n                for key in dict:\n \
    \                   if not key.islower():\n                        return False\n\
    \                return True\n            elif key.isupper():\n              \
    \  for key in dict:\n                    if not key.isupper():\n             \
    \           return False\n                return True\n", "    if len(dict) ==\
    \ 0:\n        return False\n    else:\n        for key in dict:\n            if\
    \ key.islower() == False and key.isupper() == False:\n                return False\n\
    \        return True\n", "    if len(dict) == 0:\n        return False\n    else:\n\
    \        for key in dict:\n            if not isinstance(key, str):\n        \
    \        return False\n            else:\n                if key.islower() or\
    \ key.isupper():\n                    continue\n                else:\n      \
    \              return False\n        return True\n", "    if len(dict) == 0:\n\
    \        return False\n    else:\n        for key in dict:\n            if type(key)\
    \ == str:\n                if key.islower():\n                    return True\n\
    \                else:\n                    return False\n            else:\n\
    \                return False\n", "    if len(dict) == 0:\n        return False\n\
    \    else:\n        for key in dict:\n            if not isinstance(key, str):\n\
    \                return False\n        if key.islower():\n            return True\n\
    \        elif key.isupper():\n            return True\n        else:\n       \
    \     return False\n", "    if len(dict) == 0:\n        return False\n    else:\n\
    \        for key in dict:\n            if key.islower() or key.isupper():\n  \
    \              return True\n            else:\n                return False\n",
  "    if len(dict) == 0:\n        return False\n    else:\n        for key in dict:\n\
    \            if not isinstance(key, str):\n                return False\n    \
    \        else:\n                if key.islower() or key.isupper():\n         \
    \           return True\n                else:\n                    return False\n",
  "    if len(dict) == 0:\n        return False\n    else:\n        for key in dict:\n\
    \            if not isinstance(key, str):\n                return False\n    \
    \        else:\n                if key.islower() or key.isupper():\n         \
    \           continue\n                else:\n                    return False\n\
    \        return True\n", "    if len(dict) == 0:\n        return False\n    else:\n\
    \        for key in dict:\n            if not isinstance(key, str):\n        \
    \        return False\n            elif key.islower() and key.isupper():\n   \
    \             return False\n            else:\n                return True\n",
  "    if len(dict) == 0:\n        return False\n    else:\n        for key in dict:\n\
    \            if not isinstance(key, str):\n                return False\n    \
    \        elif key.islower() and key.isupper():\n                return False\n\
    \            else:\n                return True\n", "    # check if the dictionary\
    \ is empty\n    if len(dict) == 0:\n        return False\n    # check if all keys\
    \ are strings\n    for key in dict:\n        if not isinstance(key, str):\n  \
    \          return False\n    # check if all keys are in lower case\n    for key\
    \ in dict:\n        if key.islower():\n            return True\n    # check if\
    \ all keys are in upper case\n    for key in dict:\n        if key.isupper():\n\
    \            return True\n    return False\n", "    if len(dict) == 0:\n     \
    \   return False\n    else:\n        for key in dict:\n            if not isinstance(key,\
    \ str):\n                return False\n            else:\n                if key.islower()\
    \ or key.isupper():\n                    continue\n                else:\n   \
    \                 return False\n        return True\n", "    if not dict:\n  \
    \      return False\n    else:\n        if all(k.islower() for k in dict.keys()):\n\
    \            return True\n        elif all(k.isupper() for k in dict.keys()):\n\
    \            return True\n        else:\n            return False\n", "    if\
    \ len(dict) == 0:\n        return False\n    else:\n        for key in dict:\n\
    \            if not isinstance(key, str):\n                return False\n    \
    \        elif key.islower() and key.isupper():\n                return False\n\
    \            else:\n                return True\n", "    if len(dict) == 0:\n\
    \        return False\n    else:\n        for key in dict:\n            if key.islower()\
    \ == False and key.isupper() == False:\n                return False\n       \
    \ for key in dict:\n            if key.islower() == True:\n                for\
    \ key in dict:\n                    if key.islower() == False:\n             \
    \           return False\n            if key.isupper() == True:\n            \
    \    for key in dict:\n                    if key.isupper() == False:\n      \
    \                  return False\n        return True\n", "    if len(dict) ==\
    \ 0:\n        return False\n    else:\n        for key in dict:\n            if\
    \ key.islower() == False and key.isupper() == False:\n                return False\n\
    \        return True\n", "    if len(dict) == 0:\n        return False\n    else:\n\
    \        for key in dict:\n            if type(key) != str:\n                return\
    \ False\n            if key.islower() or key.isupper():\n                return\
    \ True\n            else:\n                return False\n", "    if len(dict)\
    \ == 0:\n        return False\n    else:\n        for key in dict:\n         \
    \   if not isinstance(key, str):\n                return False\n            elif\
    \ key.islower() and key.isupper():\n                return False\n           \
    \ else:\n                return True\n", "    if len(dict) == 0:\n        return\
    \ False\n    else:\n        for key in dict:\n            if type(key) != str:\n\
    \                return False\n            elif key.islower() and key.isupper():\n\
    \                return False\n            else:\n                return True\n",
  "    if len(dict) == 0:\n        return False\n    else:\n        for key in dict:\n\
    \            if type(key) != str:\n                return False\n            else:\n\
    \                if key.islower() == True:\n                    return True\n\
    \                elif key.isupper() == True:\n                    return True\n\
    \                else:\n                    return False\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

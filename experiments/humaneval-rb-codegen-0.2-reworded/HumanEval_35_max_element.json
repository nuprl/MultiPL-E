{
  "name": "HumanEval_35_max_element",
  "language": "rb",
  "prompt": "# Return maximum element in the array.\n# >>> max_element.call([1, 2, 3])\n# 3\n# >>> max_element.call([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n# 123\ndef max_element(l)\n",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_max_element\n    candidate = method(:max_element)\n    assert_equal(3, candidate.call([1, 2, 3]))\n    assert_equal(124, candidate.call([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]))\n  end\nend\n",
  "completions": [
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    max_element.cache = {}\n    return max(l)\nmax_element.cache = {}",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    if len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    max_value = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max_value:\n            max_value = l[i]\n    return max_value",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    elif len(l) == 1:\n        return l[0]\n    else:\n        return max(l)",
    "    if len(l) == 0:\n        return None\n    else:\n        return max(l)",
    "    max = l[0]\n    for i in range(1, len(l)):\n        if l[i] > max:\n            max = l[i]\n    return max"
  ],
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ]
}
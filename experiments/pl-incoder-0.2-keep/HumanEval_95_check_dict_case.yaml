name: HumanEval_95_check_dict_case
language: humaneval_to_perl.py
prompt: "# Given a dictionary, return True if all keys are strings in lower \n# case\
  \ or all keys are strings in upper case, else return False.\n# The function should\
  \ return False is the given dictionary is empty.\n# Examples:\n# check_dict_case({\"\
  a\":\"apple\", \"b\":\"banana\"}) should return True.\n# check_dict_case({\"a\"\
  :\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return False.\n# check_dict_case({\"\
  a\":\"apple\", \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n# check_dict_case({\"\
  Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n#\
  \ check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return True.\n\
  sub check_dict_case {\n    my($dict) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&check_dict_case;\n\
  \        if(eq_deeply($candidate->({\"p\" => \"pineapple\", \"b\" => \"banana\"\
  }),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\"}),\"\")) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\"}),\"\")) {\n     \
  \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"}),\"\")) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  STATE\" => \"NC\", \"ZIP\" => \"12345\"}),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->({\"fruit\" => \"\
  Orange\", \"taste\" => \"Sweet\"}),1)) {\n        print \"ok!\" }else{\n       \
  \ exit 1;\n        }\n        if(eq_deeply($candidate->({}),\"\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $result = 1;\n    foreach my $key (sort keys %$dict) {\n   \
    \     my $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n     \
    \       $result = 0;\n            last;\n        }\n        if ($value =~ /^[A-Z]+$/i)\
    \ {\n            $result = 0;\n            last;\n        }\n    }\n    return\
    \ $result;\n}", "    foreach my $key (keys %$dict) {\n        if ($dict->{$key}\
    \ !~ /^[A-Z]+$/) {\n            return 0;\n        }\n    }\n    return 1;\n}",
  "    foreach my $key (keys %$dict) {\n        return 1 if $key =~ /^[a-z]+$/i;\n\
    \        return 1 if $key =~ /^[A-Z]+$/i;\n        return 0;\n    }\n    return\
    \ 1;\n}", "    my $ret = 0;\n    foreach my $key (keys(%$dict)) {\n        my\
    \ $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n            $ret\
    \ = 1;\n            last;\n        }\n        if ($value =~ /^[A-Z]+$/i) {\n \
    \           $ret = 1;\n            last;\n        }\n    }\n    return $ret;\n\
    }", "    foreach my $key (keys(%$dict)) {\n        my $value = $dict->{$key};\n\
    \        my $case = lc($key);\n        if ($case eq $key or $case eq $value) {\n\
    \            return 1;\n        }\n    }\n    return 0;\n}", "    my $ret = 0;\n\
    \    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($key =~ /^[a-z]+$/i) {\n            $ret = 1;\n        }\n      \
    \  elsif ($key =~ /^[A-Z]+$/i) {\n            $ret = 1;\n        }\n        else\
    \ {\n            $ret = 0;\n        }\n    }\n    return $ret;\n}", "    foreach\
    \ my $key (keys(%$dict)) {\n        return 1 if $key =~ /^[a-z]+$/i;\n       \
    \ return 1 if $key =~ /^[A-Z]+$/i;\n        return 0;\n    }\n    return 1;\n}",
  "    foreach my $key (keys %$dict) {\n        return 1 if $key =~ /^[a-z]+$/i;\n\
    \        return 1 if $key =~ /^[A-Z]+$/i;\n        return 0;\n    }\n    return\
    \ 1;\n}", "    \n    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        \n        if ($value =~ /^[a-z]+$/i) {\n            return 1;\n     \
    \   }\n        elsif ($value =~ /^[A-Z]+$/i) {\n            return 1;\n      \
    \  }\n        else {\n            return 0;\n        }\n    }\n    \n    return\
    \ 0;\n}", "    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        my $lower = lc($key);\n        my $upper = uc($key);\n        if ($lower\
    \ eq $key or $upper eq $key) {\n            return 1;\n        }\n    }\n    return\
    \ 0;\n}", "    my $ret = 0;\n    foreach my $key (keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($value =~ /^[A-Z]+$/) {\n            $ret = 1;\n\
    \            last;\n        }\n    }\n    return $ret;\n}", "    foreach my $key\
    \ (sort keys %$dict) {\n        my $value = $dict->{$key};\n        my $case =\
    \ lc($key) eq lc($value) ? 1 : 0;\n        return $case == 0;\n    }\n    return\
    \ 0;\n}", "    \n    foreach my $key (keys(%$dict)) {\n        return 1 if $key\
    \ =~ /^[a-z]+$/i || $key =~ /^[A-Z]+$/i;\n    }\n    \n    return 0;\n}", "  \
    \  foreach my $key (keys(%$dict)) {\n        my $value = $dict->{$key};\n    \
    \    next if !defined($value) || !defined($key) || !defined($key) || !defined($value);\n\
    \        my $lower = lc($key);\n        my $upper = uc($key);\n        return\
    \ 0 if $lower eq $upper;\n        return 1;\n    }\n    return 0;\n}", "    foreach\
    \ my $key (keys(%$dict)) {\n        return 1 if $key =~ /^[a-z]+$/i || $key =~\
    \ /^[A-Z]+$/i;\n    }\n    return 0;\n}", "    foreach my $key (keys %$dict) {\n\
    \        return 1 if $key =~ /^[a-z]+$/i or $key =~ /^[A-Z]+$/i;\n    }\n    return\
    \ 0;\n}", "    foreach my $key (keys %$dict) {\n        return 1 if $key =~ /^[a-z]+$/i\
    \ or $key =~ /^[A-Z]+$/i;\n    }\n    return 0;\n}", "    foreach my $key (keys(%$dict))\
    \ {\n        my $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n\
    \            return 1;\n        } elsif ($value =~ /^[A-Z]+$/i) {\n          \
    \  return 1;\n        } else {\n            return 0;\n        }\n    }\n    return\
    \ 0;\n}", "    my $ret = 0;\n    foreach my $key (keys(%$dict)) {\n        my\
    \ $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n            $ret\
    \ = 1;\n            last;\n        }\n        if ($value =~ /^[A-Z]+$/i) {\n \
    \           $ret = 1;\n            last;\n        }\n    }\n    return $ret;\n\
    }", "    foreach my $key (keys(%$dict)) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[A-Z]+$/) {\n            return 1;\n        } elsif ($value\
    \ =~ /^[a-z]+$/) {\n            return 1;\n        } else {\n            return\
    \ 0;\n        }\n    }\n    return 0;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_91_is_bored
language: humaneval_to_perl.py
prompt: "# You'll be given a string of words, and your task is to count the number\n\
  # of boredoms. A boredom is a sentence that starts with the word \"I\".\n# Sentences\
  \ are delimited by '.', '?' or '!'.\n# For example:\n# >>> is_bored(\"Hello world\"\
  )\n# 0\n# >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
  )\n# 1\nsub is_bored {\n    my($S) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_bored;\n\
  \        if(eq_deeply($candidate->(\"Hello world\"),0)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Is the\
  \ sky blue?\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"I love It !\"),1)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"bIt\"\
  ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  I feel good today. I will be productive. will kill It\"),2)) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"You\
  \ and I are going for a walk\"),0)) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $count = 0;\n    my $boredom = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my\
    \ $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n  \
    \  my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n\
    \    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n\
    \    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n\
    \    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n\
    \    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n\
    \    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n\
    \    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n\
    \    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n\
    \    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n\
    \    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n\
    \    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $", "    my $count = 0;\n    foreach my $word (split /\\.|\\?|!/, $S)\
    \ {\n        if ($word eq 'I') {\n            $count++;\n        }\n    }\n  \
    \  return $count;\n}", "    my $count = 0;\n    my $boredom;\n    foreach my $word\
    \ (split /\\.|\\?|!/, $S) {\n        if ($word eq \"I\") {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $boredom = 0;\n    foreach\
    \ my $word (split /\\.|\\?|!/, $S) {\n        if ($word eq \"I\") {\n        \
    \    $boredom++;\n        }\n    }\n    return $boredom;\n}", "    my $count =\
    \ 0;\n    foreach my $word (split /\\.|\\?|!/, $S) {\n        if ($word =~ /^I/\
    \ ) {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ %boredoms = ();\n    foreach my $word (split /\\.|\\?|\\!/, $S) {\n        next\
    \ if $word eq 'I';\n        $boredoms{$word}++;\n    }\n    return scalar keys\
    \ %boredoms;\n}", "    my $boredom = 0;\n    foreach my $word (split /\\.|\\?|!/,\
    \ $S) {\n        if ($word eq \"I\") {\n            $boredom++;\n        }\n \
    \   }\n    return $boredom;\n}", "    my $count = 0;\n    my $boredom = 0;\n \
    \   my $boredom_count = 0;\n    my $boredom_word = \"\";\n    my $boredom_word_count\
    \ = 0;\n    my $boredom_word_string = \"\";\n    my $boredom_word_string_count\
    \ = 0;\n    my $boredom_word_string_punctuation = 0;\n    my $boredom_word_string_punctuation_count\
    \ = 0;\n    my $boredom_word_string_whitespace = 0;\n    my $boredom_word_string_whitespace_count\
    \ = 0;\n    my $boredom_word_string_other = 0;\n    my $boredom_word_string_other_count\
    \ = 0;\n    my $boredom_word_string_other_punctuation = 0;\n    my $boredom_word_string_other_punctuation_count\
    \ = 0;\n    my $boredom_word_string_other_whitespace = 0;\n    my $boredom_word_string_other_whitespace_count\
    \ = 0;\n    my $boredom_word_string_other_other = 0;\n    my $boredom_word_string_other_other_count\
    \ = 0;\n    my $boredom_word_string_other_other_punctuation = 0;\n    my $boredom_word_string_other_other_punctuation_count\
    \ = 0;\n    my $boredom_word_string_other_other_whitespace = 0;\n    my $boredom_word_string_other_other_whitespace_count\
    \ = 0;\n    my $boredom_word_string_other_other_other = 0;\n    my $boredom_word_string_other_other_other_count\
    \ = 0;\n    my $boredom_word_string_other_other_other_punctuation = 0;\n    my\
    \ $boredom_word_string_other_other_other_punctuation_count = 0;\n    my $boredom_word_string_other_other_other_whitespace\
    \ = 0;\n    my $boredom_word_string_other_other_other_whitespace_count = 0;\n\
    \    my $boredom_word_string_other_other_other_other = 0;\n    my $boredom_word_string_other_other_other_other_count\
    \ = 0;\n    my $boredom_word_string_other_other_other_other_punctuation = 0;\n\
    \    my $boredom_word_string_other_other_other_other_punctuation_count = 0;\n\
    \    my $boredom_word_string_other_other_other_other_whitespace = 0;\n    my $boredom_word_string_other_other_other_other_whitespace_count\
    \ = 0;\n    my $boredom_word_string_other_other_other_other_other = 0;\n    my\
    \ $boredom_word_string_other_other_other_other_other_count = 0;\n    my $boredom_word_string_other_other_other_other_other_punctuation\
    \ = 0;\n    my $boredom_word_string_other_other_other_other_other_punctuation_count\
    \ = 0;\n    my $boredom_word_string_other_other_other_other_other_whitespace =\
    \ 0;\n    my $boredom_word_string_other_other_other_other_other_whitespace_count\
    \ = 0;\n    my $boredom_word_string_other_other_other_other_other_other = 0;\n\
    \    my $bore", "    my $boredom = 0;\n    my $i = 0;\n    my $j = 0;\n    my\
    \ $k = 0;\n    my $l = 0;\n    my $count = 0;\n    my $sentence;\n    my $word;\n\
    \    my $words;\n    my $boredom_count = 0;\n    my $boredom_sentence;\n    my\
    \ $boredom_word;\n    my $boredom_words;\n    my $boredom_word_count = 0;\n  \
    \  my $boredom_word_sentence;\n    my $boredom_word_word;\n    my $boredom_word_words;\n\
    \    my $boredom_word_word_count = 0;\n    my $boredom_word_word_sentence;\n \
    \   my $boredom_word_word_word;\n    my $boredom_word_word_words;\n    my $boredom_word_word_word_count\
    \ = 0;\n    my $boredom_word_word_word_sentence;\n    my $boredom_word_word_word_word;\n\
    \    my $boredom_word_word_word_words;\n    my $boredom_word_word_word_word_count\
    \ = 0;\n    my $boredom_word_word_word_word_sentence;\n    my $boredom_word_word_word_word_word;\n\
    \    my $boredom_word_word_word_word_words;\n    my $boredom_word_word_word_word_word_count\
    \ = 0;\n    my $boredom_word_word_word_word_word_sentence;\n    my $boredom_word_word_word_word_word_word_word;\n\
    \    my $boredom_word_word_word_word_word_word_words;\n    my $boredom_word_word_word_word_word_word_word_count;\n\
    \    my $boredom_word_word_word_word_word_word_word_sentence;\n    my $boredom_word_word_word_word_word_word_word_word_word;\n\
    \    my $boredom_word_word_word_word_word_word_word_word_words;\n    my $boredom_word_word_word_word_word_word_word_word_word_count;\n\
    \    my $boredom_word_word_word_word_word_word_word_word_word_sentence;\n    my\
    \ $boredom_word_word_word_word_word_word_word_word_word_word_word;\n    my $boredom_word_word_word_word_word_word_word_word_word_word_words;\n\
    \    my $boredom_word_word_word_word_word_word_word_word_word_word_word_word_count;\n\
    \    my $boredom_word_word_word_word_word_word_word_word_word_word_word_word_sentence;\n\
    \    my $boredom_word_word_word_word_word_word_word_word_word_word_word_word_word_word;\n\
    \    my $boredom_word_word_word_word_word_word_word_word_word_word_word_word_words;\n\
    \    my $boredom_word_word_word_word_", "    my $boredom = 0;\n    foreach my\
    \ $word (split /\\.|\\?|!/, $S) {\n        if ($word =~ /^I$/) {\n           \
    \ $boredom++;\n        }\n    }\n    return $boredom;\n}", "    my $count = 0;\n\
    \    my $boredom = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my\
    \ $boredom_count = 0;\n    my $boredom_word = \"\";\n    my $boredom_word_count\
    \ = 0;\n    my $boredom_word_len = 0;\n    my $boredom_word_start = 0;\n    my\
    \ $boredom_word_end = 0;\n    my $boredom_word_word_len = 0;\n    my $boredom_word_word_start\
    \ = 0;\n    my $boredom_word_word_end = 0;\n    my $boredom_word_word_word_len\
    \ = 0;\n    my $boredom_word_word_word_start = 0;\n    my $boredom_word_word_word_end\
    \ = 0;\n    my $boredom_word_word_word_word_len = 0;\n    my $boredom_word_word_word_word_start\
    \ = 0;\n    my $boredom_word_word_word_word_end = 0;\n    my $boredom_word_word_word_word_word_len\
    \ = 0;\n    my $boredom_word_word_word_word_word_start = 0;\n    my $boredom_word_word_word_word_word_end\
    \ = 0;\n    my $boredom_word_word_word_word_word_word_len = 0;\n    my $boredom_word_word_word_word_word_word_start\
    \ = 0;\n    my $boredom_word_word_word_word_word_word_end = 0;\n    my $boredom_word_word_word_word_word_word_word_len\
    \ = 0;\n    my $boredom_word_word_word_word_word_word_word_word_start = 0;\n \
    \   my $boredom_word_word_word_word_word_word_word_word_end = 0;\n    my $boredom_word_word_word_word_word_word_word_word_word_len\
    \ = 0;\n    my $boredom_word_word_word_word_word_word_word_word_word_start = 0;\n\
    \    my $boredom_word_word_word_word_word_word_word_word_word_end = 0;\n    my\
    \ $boredom_word_word_word_word_word_word_word_word_word_word_len = 0;\n    my\
    \ $boredom_word_word_word_word_word_word_word_word_word_word_word_start = 0;\n\
    \    my $boredom_word_word_word_word_word_word_word_word_word_word_word_word_end\
    \ = 0;\n    my $boredom_word_word_word_word_word_word_word_word_word_word_word_word_len\
    \ = 0;\n    my $boredom_word_word_word_word_word_word_word_word_word_word_word_word_word_word_start\
    \ = 0;\n    my $boredom_word_word_word_word_word_word_word_word_word_word_word_word_word_word_end\
    \ = 0;\n    my $boredom_word_word_word_word_word_word_word_word_word_word_word_word_word_word_word_len\
    \ = 0;\n    my $boredom_word_word_word_word_word_word_word_word_word_word_", " \
    \   my $boredom = 0;\n    foreach my $word (split /\\.|\\?|!/, $S) {\n       \
    \ if ($word eq \"I\") {\n            $boredom++;\n        }\n    }\n    return\
    \ $boredom;\n}", "    my $boredom = 0;\n    my $pos = 0;\n    my $word;\n    my\
    \ $word_count = 0;\n    my $boredom_count = 0;\n    my $boredom_word;\n    my\
    \ $boredom_word_count = 0;\n    my $boredom_word_pos = 0;\n    my $boredom_word_len\
    \ = 0;\n    my $boredom_word_found = 0;\n    my $boredom_word_found2 = 0;\n  \
    \  my $boredom_word_found3 = 0;\n    my $boredom_word_found4 = 0;\n    my $boredom_word_found5\
    \ = 0;\n    my $boredom_word_found6 = 0;\n    my $boredom_word_found7 = 0;\n \
    \   my $boredom_word_found8 = 0;\n    my $boredom_word_found9 = 0;\n    my $boredom_word_found10\
    \ = 0;\n    my $boredom_word_found11 = 0;\n    my $boredom_word_found12 = 0;\n\
    \    my $boredom_word_found13 = 0;\n    my $boredom_word_found14 = 0;\n    my\
    \ $boredom_word_found15 = 0;\n    my $boredom_word_found16 = 0;\n    my $boredom_word_found17\
    \ = 0;\n    my $boredom_word_found18 = 0;\n    my $boredom_word_found19 = 0;\n\
    \    my $boredom_word_found20 = 0;\n    my $boredom_word_found21 = 0;\n    my\
    \ $boredom_word_found22 = 0;\n    my $boredom_word_found23 = 0;\n    my $boredom_word_found24\
    \ = 0;\n    my $boredom_word_found25 = 0;\n    my $boredom_word_found26 = 0;\n\
    \    my $boredom_word_found27 = 0;\n    my $boredom_word_found28 = 0;\n    my\
    \ $boredom_word_found29 = 0;\n    my $boredom_word_found30 = 0;\n    my $boredom_word_found31\
    \ = 0;\n    my $boredom_word_found32 = 0;\n    my $boredom_word_found33 = 0;\n\
    \    my $boredom_word_found34 = 0;\n    my $boredom_word_found35 = 0;\n    my\
    \ $boredom_word_found36 = 0;\n    my $boredom_word_found37 = 0;\n    my $boredom_word_found38\
    \ = 0;\n    my $boredom_word_found39 = 0;\n    my $boredom_word_found40 = 0;\n\
    \    my $boredom_word_found41 = 0;\n    my $boredom_word_found42 = 0;\n    my\
    \ $boredom_word_found43 = 0;\n    my $boredom_word_found44 = 0;\n    my $boredom_word_found45\
    \ = 0;\n    my $bore", "    my ($boredoms) = 0;\n    foreach my $word (split /\\\
    .|\\?|!/, $S) {\n        if ($word =~ /^I/ && $word !~ /^I$/) {\n            $boredoms++;\n\
    \        }\n    }\n    return $boredoms;\n}", "    my $count = 0;\n    foreach\
    \ my $word (split /\\.|\\?|!/, $S) {\n        if ($word eq \"I\") {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my $boredom = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my\
    \ $l = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n  \
    \  my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n\
    \    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n\
    \    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n\
    \    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n\
    \    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n\
    \    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n\
    \    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n\
    \    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n\
    \    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n\
    \    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n\
    \    my $Y = 0;\n    my $Z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $", "    my $count = 0;\n\
    \    my $boredom = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my\
    \ $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n  \
    \  my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n\
    \    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n\
    \    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n\
    \    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n\
    \    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n\
    \    my $Z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n\
    \    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n\
    \    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n\
    \    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n\
    \    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n\
    \    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $", "    my $boredoms\
    \ = 0;\n    foreach my $word (split /\\.|\\?|!/, $S) {\n        if ($word eq \"\
    I\") {\n            $boredoms += 1;\n        }\n    }\n    return $boredoms;\n\
    }", "    my $boredom = 0;\n    my $i = 0;\n    while ($i < length($S)) {\n   \
    \     if (substr($S, $i, 1) eq '.') {\n            $boredom++;\n        }\n  \
    \      $i++;\n    }\n    return $boredom;\n}", "    my $boredom = 0;\n    foreach\
    \ my $word (split /\\.|\\?|!/, $S) {\n        if ($word eq \"I\") {\n        \
    \    $boredom++;\n        }\n    }\n    return $boredom;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

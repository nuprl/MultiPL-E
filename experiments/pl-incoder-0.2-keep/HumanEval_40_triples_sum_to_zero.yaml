name: HumanEval_40_triples_sum_to_zero
language: humaneval_to_perl.py
prompt: "# triples_sum_to_zero takes a list of integers as an input.\n# it returns\
  \ True if there are three distinct elements in the list that\n# sum to zero, and\
  \ False otherwise.\n# >>> triples_sum_to_zero([1, 3, 5, 0])\n# False\n# >>> triples_sum_to_zero([1,\
  \ 3, -2, 1])\n# True\n# >>> triples_sum_to_zero([1, 2, 3, 7])\n# False\n# >>> triples_sum_to_zero([2,\
  \ 4, -5, 3, 9, 7])\n# True\n# >>> triples_sum_to_zero([1])\n# False\nsub triples_sum_to_zero\
  \ {\n    my($l) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&triples_sum_to_zero;\n\
  \        if(eq_deeply($candidate->([1, 3, 5, 0]),\"\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 3, 5,\
  \ -1]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
  \    if(eq_deeply($candidate->([1, 3, -2, 1]),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 7]),\"\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 2, 5, 7]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->([2, 4, -5, 3, 9, 7]),1)) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 3, 5, -100]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
  \ }\n        if(eq_deeply($candidate->([100, 3, 5, -100]),\"\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n\
    }", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n\
    \    return $sum == 0;\n}", "    my $sum = 0;\n    my $triples = 0;\n    foreach\
    \ my $i (@$l) {\n        $sum += $i;\n        $triples += $i if $sum == 0;\n \
    \   }\n    return $triples == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    my $found = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n        if\
    \ ($sum == 0) {\n            $found++;\n        }\n    }\n    return $found ==\
    \ 3;\n}", "    my $sum = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n \
    \       $sum += $i;\n        if ($sum == 0) {\n            $found++;\n       \
    \ }\n    }\n    return $found == 3;\n}", "    my $sum = 0;\n    foreach my $i\
    \ (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum\
    \ == 0;\n}", "    my $sum = 0;\n    my $triples = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n        $triples += $i / 3;\n    }\n    return $sum\
    \ == 0 && $triples == 3;\n}", "    my $sum = 0;\n    foreach my $x (@$l) {\n \
    \       $sum += $x;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n   \
    \ foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n}",
  "    my $sum = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n        $sum +=\
    \ $i;\n        if ($sum == 0) {\n            $found++;\n        }\n    }\n   \
    \ return $found == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n    \
    \    $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my\
    \ $triple = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum\
    \ == 0){\n            $triple++;\n        }\n    }\n    return $triple == 3;\n\
    }", "    my $sum = 0;\n    my $found = 0;\n    foreach my $x (@$l) {\n       \
    \ $sum += $x;\n        if ($sum == 0) {\n            $found++;\n        }\n  \
    \  }\n    return $found == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n\
    }", "    my $sum = 0;\n    my $found = 0;\n    my $triple = 0;\n    foreach my\
    \ $x (@$l) {\n        $sum += $x;\n        if ($sum == 0) {\n            $found\
    \ = 1;\n        }\n        elsif ($sum < 0) {\n            $sum = 0;\n       \
    \ }\n        elsif ($sum > 0) {\n            $triple++;\n        }\n    }\n  \
    \  return $found && $triple == 3;\n}", "    my $sum = 0;\n    my $found = 0;\n\
    \    foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0) {\n  \
    \          $found++;\n        }\n    }\n    return $found == 3;\n}", "    my $sum\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum\
    \ == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    my $found = 0;\n    foreach my $i (@$l) {\n        if ($i == 0) {\n     \
    \       $found = 1;\n        }\n        $sum += $i;\n    }\n    return $found\
    \ == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my $found = 0;\n   \
    \ foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0) {\n     \
    \       $found++;\n        }\n    }\n    return $found == 3;\n}", "    my $sum\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum\
    \ == 0;\n}", "    my $sum = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n\
    \        $sum += $i;\n        if ($sum == 0) {\n            $found++;\n      \
    \  }\n    }\n    return $found == 3;\n}", "    my $sum = 0;\n    my $triples =\
    \ 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n        $triples += $i /\
    \ 3;\n    }\n    return $triples == 0;\n}", "    my $sum = 0;\n    foreach my\
    \ $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum\
    \ == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my $found = 0;\n   \
    \ foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0) {\n     \
    \       $found++;\n        }\n    }\n    return $found == 3;\n}", "    my $sum\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum\
    \ == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my $found = 0;\n   \
    \ foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0) {\n     \
    \       $found++;\n        }\n    }\n    return $found == 3;\n}", "    my $sum\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum\
    \ == 0;\n}", "    my $sum = 0;\n    my $triple = 0;\n    my $found = 0;\n    foreach\
    \ my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0) {\n            $triple++;\n\
    \        }\n        if ($triple == 3) {\n            $found = 1;\n           \
    \ last;\n        }\n    }\n    return $found;\n}", "    my $sum = 0;\n    foreach\
    \ my $x (@$l) {\n        $sum += $x;\n    }\n    return $sum == 0;\n}", "    my\
    \ $sum = 0;\n    foreach my $x (@$l) {\n        $sum += $x;\n    }\n    return\
    \ $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum +=\
    \ $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my $found = 0;\n\
    \    foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0) {\n  \
    \          $found++;\n        }\n    }\n    return $found == 3;\n}", "    my $sum\
    \ = 0;\n    foreach my $x (@$l) {\n        $sum += $x;\n    }\n    return $sum\
    \ == 0;\n}", "    my $sum = 0;\n    foreach my $x (@$l) {\n        $sum += $x;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    my $found = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n        if\
    \ ($sum == 0) {\n            $found++;\n        }\n    }\n    return $found ==\
    \ 3;\n}", "    my $sum = 0;\n    my $triples = 0;\n    foreach my $i (@$l) {\n\
    \        $sum += $i;\n        if ($sum > 0) {\n            $triples++;\n     \
    \   }\n    }\n    return $triples == 3;\n}", "    my $sum = 0;\n    my $found\
    \ = 0;\n    my $triple = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \        if ($sum == 0) {\n            $found = 1;\n            last;\n      \
    \  }\n        elsif ($sum < 0) {\n            $sum = 0;\n        }\n        elsif\
    \ ($sum > 0) {\n            $triple++;\n        }\n    }\n    return $found;\n\
    }", "    my $sum = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n       \
    \ $sum += $i;\n        if ($sum == 0) {\n            $found++;\n        }\n  \
    \  }\n    return $found == 3;\n}", "    my $sum = 0;\n    my $triple = 0;\n  \
    \  foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0 && $triple\
    \ == 0) {\n            return 1;\n        }\n        $triple = 0;\n    }\n   \
    \ return 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum +=\
    \ $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my $found = 0;\n\
    \    foreach my $x (@$l) {\n        if ($x == 0) {\n            $found++;\n  \
    \      }\n        $sum += $x;\n    }\n    return $found == 3;\n}", "    my $sum\
    \ = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n \
    \       if ($sum == 0) {\n            $found++;\n        }\n    }\n    return\
    \ $found == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum\
    \ += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my\
    \ $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum\
    \ = 0;\n    foreach my $x (@$l) {\n        $sum += $x;\n    }\n    return $sum\
    \ == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $x (@$l)\
    \ {\n        $sum += $x;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    my $triple = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n       \
    \ if ($sum > 0) {\n            $triple += $i;\n        }\n    }\n    return $triple\
    \ == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $x (@$l)\
    \ {\n        $sum += $x;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n\
    }", "    my $sum = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n       \
    \ $sum += $i;\n        if ($sum == 0) {\n            $found++;\n        }\n  \
    \  }\n    return $found == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    my $triples = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n      \
    \  if ($sum == 0 && $triples == 0) {\n            return 1;\n        }\n     \
    \   $triples++;\n    }\n    return 0;\n}", "    my $sum = 0;\n    my $found =\
    \ 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0) {\n\
    \            $found++;\n        }\n    }\n    return $found == 3;\n}", "    my\
    \ $sum = 0;\n    my $triples = 0;\n    foreach my $i (@$l) {\n        $sum +=\
    \ $i;\n        $triples += $i / 3;\n    }\n    return $sum == 0 && $triples ==\
    \ 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    my $triples = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n      \
    \  if ($sum > 0) {\n            $triples++;\n        }\n    }\n    return $triples\
    \ == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n\
    }", "    my $sum = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n       \
    \ $sum += $i;\n        if ($sum == 0) {\n            $found++;\n        }\n  \
    \  }\n    return $found == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    my $found = 0;\n    foreach my $i (@$l) {\n        if ($i == 0) {\n     \
    \       $found++;\n        }\n        else {\n            $sum += $i;\n      \
    \  }\n    }\n    return $found == 3;\n}", "    my $sum = 0;\n    foreach my $i\
    \ (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum\
    \ = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n \
    \       if ($sum == 0) {\n            $found++;\n        }\n    }\n    return\
    \ $found == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum\
    \ += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my\
    \ $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum\
    \ = 0;\n    my $triples = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \        if ($sum > 0) {\n            $triples++;\n        }\n    }\n    return\
    \ $triples == 3;\n}", "    my $sum = 0;\n    my $triples = 0;\n    foreach my\
    \ $i (@$l) {\n        $sum += $i;\n        $triples += $i / 3;\n    }\n    return\
    \ $sum == 0 && $triples == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n\
    }", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n\
    \    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n   \
    \     $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my\
    \ $triples = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n        $triples\
    \ += $i / 3;\n    }\n    return $sum == 0 && $triples == 3;\n}", "    my $sum\
    \ = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n \
    \       if ($sum == 0) {\n            $found++;\n        }\n    }\n    return\
    \ $found == 3;\n}", "    my $sum = 0;\n    my $found = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n        if ($sum == 0) {\n            $found++;\n  \
    \      }\n    }\n    return $found == 3;\n}", "    my $sum = 0;\n    my $found\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0)\
    \ {\n            $found++;\n        }\n    }\n    return $found == 3;\n}", " \
    \   my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return\
    \ $sum == 0;\n}", "    my $sum = 0;\n    my $found = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n        if ($sum == 0) {\n            $found++;\n  \
    \      }\n    }\n    return $found == 3;\n}", "    my $sum = 0;\n    my $found\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0)\
    \ {\n            $found = 1;\n            last;\n        }\n    }\n    return\
    \ $found;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my $found = 0;\n   \
    \ foreach my $x (@$l) {\n        $sum += $x;\n        if ($sum == 0) {\n     \
    \       $found++;\n        }\n    }\n    return $found == 3;\n}", "    my $sum\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum\
    \ == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $x (@$l)\
    \ {\n        $sum += $x;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n\
    }", "    my $sum = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n       \
    \ $sum += $i;\n        if ($sum == 0) {\n            $found++;\n        }\n  \
    \  }\n    return $found == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n\
    }", "    my $sum = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n       \
    \ my $j = $i;\n        $sum += $j;\n        if ($sum == 0) {\n            $found++;\n\
    \        }\n    }\n    return $found == 3;\n}", "    my $sum = 0;\n    foreach\
    \ my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my\
    \ $sum = 0;\n    my $triple = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \        $triple += $i if $sum == 0;\n    }\n    return $triple == 3;\n}", " \
    \   my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return\
    \ $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum +=\
    \ $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my $found = 0;\n\
    \    foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0) {\n  \
    \          $found++;\n        }\n    }\n    return $found == 3;\n}", "    my $sum\
    \ = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n \
    \       if ($sum == 0) {\n            $found++;\n        }\n    }\n    return\
    \ $found == 3;\n}", "    my $sum = 0;\n    my $triples = 0;\n    foreach my $x\
    \ (@$l) {\n        $sum += $x;\n        $triples += $x % 3;\n    }\n    return\
    \ $sum == 0 && $triples == 3;\n}", "    my $sum = 0;\n    my $triples = 0;\n \
    \   foreach my $num (@$l) {\n        $sum += $num;\n        $triples += $num >\
    \ 0 ? 1 : 0;\n    }\n    return $triples == 3;\n}", "    my $sum = 0;\n    my\
    \ $found = 0;\n    foreach my $x (@$l) {\n        $sum += $x;\n        if ($sum\
    \ == 0) {\n            $found++;\n        }\n    }\n    return $found == 3;\n}",
  "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return\
    \ $sum == 0;\n}", "    my $sum = 0;\n    my $triples = 0;\n    foreach my $x (@$l)\
    \ {\n        if ($x == 0) {\n            $sum = 0;\n            $triples = 0;\n\
    \            last;\n        }\n        $sum += $x;\n        $triples += $x % 3;\n\
    \    }\n    return $triples == 3;\n}", "    my $sum = 0;\n    my $found = 0;\n\
    \    foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0) {\n  \
    \          $found++;\n        }\n    }\n    return $found == 3;\n}", "    my $sum\
    \ = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n        my $j = 0;\n  \
    \      my $found = 0;\n        foreach my $j (@$l) {\n            my $k = 0;\n\
    \            foreach my $k (@$l) {\n                $sum += $i + $j + $k;\n  \
    \              if ($sum == 0) {\n                    $found = 1;\n           \
    \         last;\n                }\n            }\n        }\n        if ($found\
    \ == 0) {\n            return 0;\n        }\n    }\n    return 1;\n}", "    my\
    \ $sum = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \        if ($sum == 0) {\n            $found++;\n        }\n    }\n    return\
    \ $found == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum\
    \ += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my\
    \ $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum\
    \ == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    my $found = 0;\n    foreach my $i (@$l) {\n        my $x = $i;\n        $sum\
    \ += $x;\n        if ($sum == 0) {\n            $found++;\n        }\n    }\n\
    \    return $found == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n \
    \       $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n   \
    \ my $triple = 0;\n    foreach my $num (@$l) {\n        $sum += $num;\n      \
    \  if ($sum > 0) {\n            $triple++;\n        }\n    }\n    return $triple\
    \ == 3;\n}", "    my $sum = 0;\n    my $triples = 0;\n    foreach my $num (@$l)\
    \ {\n        if ($num > 0) {\n            $sum += $num;\n            $triples\
    \ += $num > 1;\n        }\n    }\n    return $triples == 3;\n}", "    my $sum\
    \ = 0;\n    my $triples = 0;\n    foreach my $i (@$l) {\n        if ($i == 0)\
    \ {\n            $sum = 0;\n            $triples = 0;\n            next;\n   \
    \     }\n        $sum += $i;\n        $triples++;\n        if ($sum < 0) {\n \
    \           $sum = 0;\n        }\n    }\n    return $triples == 3;\n}", "    my\
    \ $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return\
    \ $sum == 0;\n}", "    my $sum = 0;\n    my $found = 0;\n    foreach my $x (@$l)\
    \ {\n        $sum += $x;\n        if ($sum == 0) {\n            $found++;\n  \
    \      }\n    }\n    return $found == 3;\n}", "    my $sum = 0;\n    my $found\
    \ = 0;\n    foreach my $x (@$l) {\n        $sum += $x;\n        if ($sum == 0)\
    \ {\n            $found++;\n        }\n    }\n    return $found == 3;\n}", " \
    \   my $sum = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n        $sum\
    \ += $i;\n        if ($sum == 0) {\n            $found++;\n        }\n    }\n\
    \    return $found == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n \
    \       $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n   \
    \ foreach my $x (@$l) {\n        $sum += $x;\n    }\n    return $sum == 0;\n}",
  "    my $sum = 0;\n    foreach my $x (@$l) {\n        $sum += $x;\n    }\n    return\
    \ $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum +=\
    \ $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my $triples =\
    \ 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n        $triples += $i /\
    \ 3;\n    }\n    return $triples == 0;\n}", "    my $sum = 0;\n    foreach my\
    \ $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum\
    \ = 0;\n    my $triples = 0;\n    foreach my $x (@$l) {\n        $sum += $x;\n\
    \        $triples += ($x != 0) * 3;\n    }\n    return $triples == 0;\n}", " \
    \   my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return\
    \ $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum +=\
    \ $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my $found = 0;\n\
    \    foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0) {\n  \
    \          $found++;\n        }\n    }\n    return $found == 3;\n}", "    my $sum\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum\
    \ == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n\
    }", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n\
    \    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n   \
    \     $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my\
    \ $found = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum\
    \ == 0) {\n            $found++;\n        }\n    }\n    return $found == 3;\n}",
  "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return\
    \ $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum +=\
    \ $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my $triple = 0;\n\
    \    foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 3) {\n  \
    \          $triple++;\n        }\n    }\n    return $triple == 3;\n}", "    my\
    \ $sum = 0;\n    foreach my $x (@$l) {\n        $sum += $x;\n    }\n    return\
    \ $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum +=\
    \ $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i\
    \ (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum\
    \ == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    my $triples = 0;\n    foreach my $x (@$l) {\n        $sum += $x;\n      \
    \  $triples += $x % 3 == 0;\n    }\n    return $triples == 0;\n}", "    my $sum\
    \ = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n \
    \       if ($sum == 0) {\n            $found++;\n        }\n    }\n    return\
    \ $found == 3;\n}", "    my $sum = 0;\n    my $found = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n        if ($sum == 0) {\n            $found++;\n  \
    \      }\n    }\n    return $found == 3;\n}", "    my $sum = 0;\n    my $found\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0)\
    \ {\n            $found++;\n        }\n    }\n    return $found == 3;\n}", " \
    \   my $sum = 0;\n    my $triples = 0;\n    foreach my $x (@$l) {\n        $sum\
    \ += $x;\n        $triples += $x % 3 == 0;\n    }\n    return $triples == 0;\n\
    }", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n\
    \    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n   \
    \     $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my\
    \ $triple = 0;\n    my $triples = 0;\n    foreach my $i (@$l) {\n        $sum\
    \ += $i;\n        if ($sum == 0 && $triple == 0) {\n            $triples = 1;\n\
    \        }\n        if ($sum > 0) {\n            $triple += $i;\n        }\n \
    \   }\n    return $triples == 3;\n}", "    my $sum = 0;\n    my $triple = 0;\n\
    \    foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0 && $triple\
    \ == 0) {\n            return 1;\n        }\n        $triple++;\n    }\n    return\
    \ 0;\n}", "    my $sum = 0;\n    foreach my $x (@$l) {\n        $sum += $x;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n\
    \    my $found = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n        if\
    \ ($sum == 0) {\n            $found = 1;\n            last;\n        }\n    }\n\
    \    return $found;\n}", "    my $sum = 0;\n    foreach my $x (@$l) {\n      \
    \  $sum += $x;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach\
    \ my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my\
    \ $sum = 0;\n    foreach my $x (@$l) {\n        $sum += $x;\n    }\n    return\
    \ $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum +=\
    \ $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i\
    \ (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum\
    \ == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my $found = 0;\n   \
    \ foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0) {\n     \
    \       $found++;\n        }\n    }\n    return $found == 3;\n}", "    my $sum\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum\
    \ == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my $found = 0;\n   \
    \ foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0) {\n     \
    \       $found++;\n        }\n    }\n    return $found == 3;\n}", "    my $sum\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum\
    \ == 0;\n}", "    my $sum = 0;\n    my $triples = 0;\n    foreach my $i (@$l)\
    \ {\n        $sum += $i;\n        $triples += $i / 3;\n    }\n    return $sum\
    \ == 0 && $triples == 3;\n}", "    my $sum = 0;\n    my $triples = 0;\n    foreach\
    \ my $i (@$l) {\n        $sum += $i;\n        $triples += $i / 3;\n    }\n   \
    \ return $triples == 0;\n}", "    my $sum = 0;\n    foreach my $x (@$l) {\n  \
    \      $sum += $x;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach\
    \ my $x (@$l) {\n        $sum += $x;\n    }\n    return $sum == 0;\n}", "    my\
    \ $sum = 0;\n    foreach my $x (@$l) {\n        $sum += $x;\n    }\n    return\
    \ $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum +=\
    \ $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my $i\
    \ (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum\
    \ = 0;\n    my $triple = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \        if ($sum > 0) {\n            $triple++;\n        }\n    }\n    return\
    \ $triple == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum\
    \ += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    foreach my\
    \ $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum\
    \ = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n        my $j = $i;\n \
    \       my $k = $i;\n        my $sum = $sum + $j;\n        my $found = 0;\n  \
    \      foreach my $j (@$l) {\n            my $k = $j;\n            my $sum = $sum\
    \ + $k;\n            if ($sum == 0) {\n                $found = 1;\n         \
    \       last;\n            }\n        }\n        if ($found == 0) {\n        \
    \    return 0;\n        }\n    }\n    return 1;\n}", "    my $sum = 0;\n    foreach\
    \ my $i (@$l) {\n        $sum += $i;\n    }\n    return $sum == 0;\n}", "    my\
    \ $sum = 0;\n    my $found = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n\
    \        if ($sum == 0) {\n            $found++;\n        }\n    }\n    return\
    \ $found == 3;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n        $sum\
    \ += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my $triples\
    \ = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum == 0\
    \ && $triples == 0) {\n            return 1;\n        }\n        $triples++;\n\
    \    }\n    return 0;\n}", "    my $sum = 0;\n    foreach my $i (@$l) {\n    \
    \    $sum += $i;\n    }\n    return $sum == 0;\n}", "    my $sum = 0;\n    my\
    \ $found = 0;\n    foreach my $i (@$l) {\n        $sum += $i;\n        if ($sum\
    \ == 0) {\n            $found++;\n        }\n    }\n    return $found == 3;\n}",
  "    my $sum = 0;\n    my $triple = 0;\n    foreach my $x (@$l) {\n        $sum\
    \ += $x;\n        $triple += $x * $x;\n    }\n    return $sum == 0 && $triple\
    \ == 0;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

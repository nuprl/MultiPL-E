name: HumanEval_71_triangle_area
language: humaneval_to_perl.py
prompt: "# Given the lengths of the three sides of a triangle. Return the area of\n\
  # the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n# Otherwise return -1\n# Three sides make a valid triangle when the sum of any\
  \ two sides is greater \n# than the third side.\n# Example:\n# triangle_area(3,\
  \ 4, 5) == 6.00\n# triangle_area(1, 2, 10) == -1\nsub triangle_area {\n    my($a,\
  \ $b, $c) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&triangle_area;\n\
  \        if(eq_deeply($candidate->(3, 4, 5),6.0)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(1, 2, 10),-1)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4,\
  \ 8, 5),8.18)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->(2, 2, 2),1.73)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(1, 2, 3),-1)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10,\
  \ 5, 7),16.25)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
  \      if(eq_deeply($candidate->(2, 6, 3),-1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(1, 1, 1),0.43)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(2,\
  \ 2, 10),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\n\
  testhumaneval();"
completions: ["    my $s = $a + $b + $c;\n    if ($s > $c) {\n        $s = $c;\n \
    \   }\n    return $s / 2;\n}", "    my $s = $a + $b + $c;\n    if ($s > $c) {\n\
    \        $s = $c;\n    }\n    if ($s > $b) {\n        $s = $b;\n    }\n    if\
    \ ($s > $a) {\n        $s = $a;\n    }\n    return $s;\n}", "    my $area = $a\
    \ * $b;\n    if ($c > $a + $b) {\n        $area = $area * $c / $a;\n    }\n  \
    \  return $area;\n}", "    my $s = $a + $b + $c;\n    if ($s > $c) {\n       \
    \ return $s / 2;\n    }\n    return -1;\n}", "    my $s = $a + $b + $c;\n    my\
    \ $area = $s / 2;\n    return $area if $area > $c;\n    return -1;\n}", "    return\
    \ -1 unless $a + $b > $c;\n    return -1 unless $a + $c > $b;\n    return -1 unless\
    \ $b + $c > $a;\n    return $a + $b + $c / 2;\n}", "    return -1 if $a + $b >\
    \ $c;\n    return -1 if $a + $c > $b;\n    return -1 if $b + $c > $a;\n    return\
    \ $a * $b / $c;\n}", "    my $area = $a * $b * $c;\n    my $sum = $a + $b + $c;\n\
    \    if ($sum > $c) {\n        $area = $area / $sum;\n    }\n    return $area;\n\
    }", "    return -1 if $a + $b > $c;\n    return -1 if $a + $c > $b;\n    return\
    \ -1 if $b + $c > $a;\n    return $a * $b / $c;\n}", "    return -1 if $a + $b\
    \ > $c;\n    return -1 if $a + $c > $b;\n    return -1 if $b + $c > $a;\n    return\
    \ $a if $a + $b == $c;\n    return $b if $a + $b == $c;\n    return $c if $b +\
    \ $c == $a;\n    return $a + $b + $c;\n}", "    return -1 if $a + $b > $c;\n \
    \   return -1 if $a + $c > $b;\n    return -1 if $b + $c > $a;\n    return $a\
    \ * $b * $c / 2;\n}", "    return -1 if $a + $b > $c;\n    return -1 if $a + $c\
    \ > $b;\n    return -1 if $b + $c > $a;\n    return $a * $b / $c;\n}", "    my\
    \ $s = $a + $b + $c;\n    my $area = $s / 2;\n    return $area if $area > $c;\n\
    \    return -1;\n}", "    my $s = $a + $b + $c;\n    if ($s > $c) {\n        $s\
    \ = $c;\n    }\n    if ($s > $b) {\n        $s = $b;\n    }\n    if ($s > $a)\
    \ {\n        $s = $a;\n    }\n    return sprintf \"%0.2f\", $s / 2;\n}", "   \
    \ my $s = $a + $b + $c;\n    if ($s > $c) {\n        $s = $c;\n    }\n    if ($s\
    \ > $b) {\n        $s = $b;\n    }\n    if ($s > $a) {\n        $s = $a;\n   \
    \ }\n    return $s * 0.5;\n}", "    return -1 if $a + $b > $c;\n    return -1\
    \ if $a + $c > $b;\n    return -1 if $b + $c > $a;\n    return $a if $a + $b +\
    \ $c == $c;\n    return $b if $a + $b + $c == $b;\n    return $c if $a + $b +\
    \ $c == $a;\n    return $a + $b + $c;\n}", "    my $s = $a + $b + $c;\n    my\
    \ $area = $s / 2;\n    return $area if $area > $c;\n    return -1;\n}", "    return\
    \ -1 if $a + $b > $c;\n    return -1 if $a + $c > $b;\n    return -1 if $b + $c\
    \ > $a;\n    return $a * $b / ($a + $b + $c);\n}", "    return -1 unless $a >\
    \ $b && $a > $c;\n    return -1 unless $b > $c && $b > $a;\n    return $a + $b\
    \ + $c if $a + $b > $c;\n    return $a + $b + $c if $a + $b > $c;\n    return\
    \ $a + $b + $c if $a + $b > $c;\n    return $a + $b + $c if $a + $b > $c;\n  \
    \  return $a + $b + $c if $a + $b > $c;\n    return $a + $b + $c if $a + $b >\
    \ $c;\n    return $a + $b + $c if $a + $b > $c;\n    return $a + $b + $c if $a\
    \ + $b > $c;\n    return $a + $b + $c if $a + $b > $c;\n    return $a + $b + $c\
    \ if $a + $b > $c;\n    return $a + $b + $c if $a + $b > $c;\n    return $a +\
    \ $b + $c if $a + $b > $c;\n    return $a + $b + $c if $a + $b > $c;\n    return\
    \ $a + $b + $c if $a + $b > $c;\n    return $a + $b + $c if $a + $b > $c;\n  \
    \  return $a + $b + $c if $a + $b > $c;\n    return $a + $b + $c if $a + $b >\
    \ $c;\n    return $a + $b + $c if $a + $b > $c;\n    return $a + $b + $c if $a\
    \ + $b > $c;\n    return $a + $b + $c if $a + $b > $c;\n    return $a + $b + $c\
    \ if $a + $b > $c;\n    return $a + $b + $c if $a + $b > $c;\n    return $a +\
    \ $b + $c if $a + $b > $c;\n    return $a + $b + $c if $a + $b > $c;\n    return\
    \ $a + $b + $c if $a + $b > $c;\n    return $a + $b + $c if $a + $b > $c;\n  \
    \  return $a + $b + $c if $a + $b > $c;\n    return $a + $b + $c if $a + $b >\
    \ $c;\n    return $a + $b + $c if $a + $b > $c;\n    return $a + $b + $c if $a\
    \ + $b > $c;\n    return $a + $b + $c if $a + $b > $c;\n    return $a + $b + $c\
    \ if $a + $b > $c;\n    return $a + $b", "    my $s = $a + $b + $c;\n    if ($s\
    \ > $c) {\n        return $s / 2;\n    }\n    return -1;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

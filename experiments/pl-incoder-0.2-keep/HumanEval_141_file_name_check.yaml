name: HumanEval_141_file_name_check
language: humaneval_to_perl.py
prompt: "# Create a function which takes a string representing a file's name, and\
  \ returns\n# 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  # A file's name is considered to be valid if and only if all the following conditions\
  \ \n# are met:\n# - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n# - The file's name contains exactly one dot '.'\n# - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n# the latin\
  \ alphapet ('a'-'z' and 'A'-'Z').\n# - The substring after the dot should be one\
  \ of these: ['txt', 'exe', 'dll']\n# Examples:\n# file_name_check(\"example.txt\"\
  ) # => 'Yes'\n# file_name_check(\"1example.dll\") # => 'No' (the name should start\
  \ with a latin alphapet letter)\nsub file_name_check {\n    my($file_name) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&file_name_check;\n\
  \        if(eq_deeply($candidate->(\"example.txt\"),\"Yes\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1example.dll\"\
  ),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(\"s1sdf3.asd\"),\"No\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"K.dll\"),\"Yes\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  MY16FILE3.exe\"),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->(\"His12FILE94.exe\"),\"No\")) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  _Y.txt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"?aREYA.exe\"),\"No\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"/this_is_valid.dll\"\
  ),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(\"this_is_valid.wow\"),\"No\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"this_is_valid.txt\"\
  ),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(\"this_is_valid.txtexe\"),\"No\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  #this2_i4s_5valid.ten\"),\"No\")) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->(\"@this1_is6_valid.exe\"),\"\
  No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  this_is_12valid.6exe4.txt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->(\"all.exe.txt\"),\"No\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  I563_No.exe\"),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n    \
  \    }\n        if(eq_deeply($candidate->(\"Is3youfault.txt\"),\"Yes\")) {\n   \
  \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  no_one#knows.dll\"),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->(\"1I563_Yes3.exe\"),\"No\")) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  I563_Yes3.txtt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->(\"final..txt\"),\"No\")) {\n       \
  \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  final132\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"_f4indsartal132.\"),\"No\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  .txt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n \
  \       if(eq_deeply($candidate->(\"s.\"),\"No\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    return $file_name =~ /^[0-9]{3}\\.[a-z][a-z][a-z]$/ ? 'Yes' : 'No';\n\
    }", "    \n    return $file_name =~ /^[0-9]{3}\\.[a-z][a-z][a-z]$/i;\n}", "  \
    \  return $file_name =~ /^[0-9]{3}\\.[a-z][a-z][a-z]$/ ? 'Yes' : 'No';\n}", " \
    \   \n    my $valid_file_name;\n    \n    if ($file_name =~ /^[0-9]{3}\\.[a-z][a-z][a-z]$/)\
    \ {\n        $valid_file_name = 1;\n    }\n    elsif ($file_name =~ /^[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]$/) {\n        $valid_file_name = 1;\n    }\n    elsif ($file_name\
    \ =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        $valid_file_name\
    \ = 1;\n    }\n    elsif ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        $valid_file_name = 1;\n    }\n\
    \    elsif ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        $valid_file_name = 1;\n    }\n\
    \    elsif ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        $valid_file_name\
    \ = 1;\n    }\n    elsif ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/)\
    \ {\n        $valid_file_name = 1;\n    }\n    elsif ($file_name =~ /^[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        $valid_file_name = 1;\n    }\n\
    \    elsif ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]$/) {\n        $valid_file_name = 1;\n    }\n    elsif ($", " \
    \   \n    # Check the length of the file name\n    if (length($file_name) > 3)\
    \ {\n        return \"No\";\n    }\n    \n    # Check the file name\n    if ($file_name\
    \ =~ /^[0-9]{3}\\.[^\\.]+$/) {\n        return \"Yes\";\n    }\n    \n    # Check\
    \ the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.[^\\.]+$/) {\n    \
    \    return \"Yes\";\n    }\n    \n    # Check the file name\n    if ($file_name\
    \ =~ /^[a-z][a-z][a-z]\\.txt$/) {\n        return \"Yes\";\n    }\n    \n    #\
    \ Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.exe$/) {\n  \
    \      return \"Yes\";\n    }\n    \n    # Check the file name\n    if ($file_name\
    \ =~ /^[a-z][a-z][a-z]\\.dll$/) {\n        return \"Yes\";\n    }\n    \n    #\
    \ Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.zip$/) {\n  \
    \      return \"Yes\";\n    }\n    \n    # Check the file name\n    if ($file_name\
    \ =~ /^[a-z][a-z][a-z]\\.tar\\.gz$/) {\n        return \"Yes\";\n    }\n    \n\
    \    # Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.gz$/) {\n\
    \        return \"Yes\";\n    }\n    \n    # Check the file name\n    if ($file_name\
    \ =~ /^[a-z][a-z][a-z]\\.tar\\.bz2$/) {\n        return \"Yes\";\n    }\n    \n\
    \    # Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.tar\\.xz$/)\
    \ {\n        return \"Yes\";\n    }\n    \n    # Check the file name\n    if ($file_name\
    \ =~ /^[a-z][a-z][a-z]\\.tar\\.xz\\.tar\\.gz$/) {\n        return \"Yes\";\n \
    \   }\n    \n    # Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\\
    .tar\\.xz\\.tar\\.bz2$/) {\n        return \"Yes\";\n    }\n    \n    # Check\
    \ the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.tar\\.xz\\.tar\\.xz$/)\
    \ {\n        return \"Yes\";\n    }\n    \n    # Check the file name\n    if ($file_name\
    \ =~ /^[a-z][a-z][a-z]\\.tar\\.xz\\.tar\\.xz\\.tar\\.gz$/) {\n        return \"\
    Yes\";\n    }\n    \n    # Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z",
  "    \n    # Check the length of the file name\n    if (length($file_name) > 3)\
    \ {\n        return \"No\";\n    }\n    \n    # Check the file name\n    if ($file_name\
    \ !~ /^[0-9]*\\.[a-z]*$/) {\n        return \"No\";\n    }\n    \n    # Check\
    \ the file name\n    if ($file_name !~ /^[a-z]*\\.[a-z]*$/) {\n        return\
    \ \"No\";\n    }\n    \n    # Check the file name\n    if ($file_name !~ /^[a-z]*\\\
    .[a-z]*\\.[a-z]*$/) {\n        return \"No\";\n    }\n    \n    return \"Yes\"\
    ;\n}", "    \n    # Check the length of the file name\n    return length($file_name)\
    \ <= 3 ? 'No' : 'Yes';\n}", "    \n    # Check the length of the file name\n \
    \   if (length($file_name) > 3) {\n        return \"No\";\n    }\n    \n    #\
    \ Check the file name\n    if ($file_name =~ /^[0-9]{3}\\./ && $file_name !~ /^\\\
    ./ && $file_name !~ /^\\./) {\n        return \"No\";\n    }\n    \n    # Check\
    \ the file extension\n    if ($file_name =~ /\\.(txt|exe|dll)$/) {\n        return\
    \ \"Yes\";\n    }\n    \n    return \"No\";\n}", "    \n    # Check the length\
    \ of the file name\n    if (length($file_name) > 3) {\n        return \"No\";\n\
    \    }\n    \n    # Check the file name\n    if ($file_name !~ /^[0-9]{3}\\.[a-z][a-z][a-z]$/)\
    \ {\n        return \"No\";\n    }\n    \n    # Check the file extension\n   \
    \ if ($file_name =~ /\\.[a-z][a-z][a-z]$/) {\n        my $ext = $1;\n        if\
    \ ($ext !~ /txt|exe|dll/) {\n            return \"No\";\n        }\n    }\n  \
    \  \n    return \"Yes\";\n}", "    \n    # Check the file name\n    if ($file_name\
    \ !~ /^[0-9]{3}\\.[a-z]+$/) {\n        return \"No\";\n    }\n    \n    # Check\
    \ the file extension\n    if ($file_name =~ /^[0-9]{3}\\.[a-z]+$/) {\n       \
    \ my $extension = $1;\n        if ($extension !~ /^(txt|exe|dll)$/) {\n      \
    \      return \"No\";\n        }\n    }\n    \n    return \"Yes\";\n}", "    \n\
    \    # Check the length of the file's name\n    if (length($file_name) > 3) {\n\
    \        return \"No\";\n    }\n    \n    # Check the file's name\n    if ($file_name\
    \ !~ /^[0-9]{3}\\.[a-z][a-z]$/) {\n        return \"No\";\n    }\n    \n    #\
    \ Check the file's name\n    if ($file_name !~ /^[a-z][a-z]\\.[a-z][a-z]$/) {\n\
    \        return \"No\";\n    }\n    \n    # Check the file's name\n    if ($file_name\
    \ !~ /^[a-z][a-z]\\.[a-z][a-z]\\.[a-z][a-z]$/) {\n        return \"No\";\n   \
    \ }\n    \n    return \"Yes\";\n}", "    \n    # Check the file name\n    if ($file_name\
    \ =~ /^[0-9]{3}\\.[a-z]+$/) {\n        # Check the file name\n        if ($file_name\
    \ =~ /^[0-9]{3}\\.[a-z]+$/) {\n            # Check the file name\n           \
    \ if ($file_name =~ /^[0-9]{3}\\.[a-z]+$/) {\n                # Check the file\
    \ name\n                if ($file_name =~ /^[0-9]{3}\\.[a-z]+$/) {\n         \
    \           return 'Yes';\n                }\n            }\n        }\n    }\n\
    \    return 'No';\n}", "    \n    # Check the length of the file name\n    if\
    \ (length($file_name) > 3) {\n        return \"No\";\n    }\n    \n    # Check\
    \ the file name\n    if ($file_name =~ /^[0-9]{3}\\.[a-z][a-z][a-z]$/) {\n   \
    \     return \"Yes\";\n    }\n    \n    # Check the file name\n    if ($file_name\
    \ =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        return \"Yes\";\n    }\n\
    \    \n    # Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]$/) {\n        return \"Yes\";\n    }\n    \n    # Check the file\
    \ name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]$/) {\n        return \"Yes\";\n    }\n    \n    # Check the file\
    \ name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        return \"Yes\";\n    }\n    \n\
    \    # Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n\
    \        return \"Yes\";\n    }\n    \n    # Check the file name\n    if ($file_name\
    \ =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        return \"Yes\"\
    ;\n    }\n    \n    # Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        return \"Yes\";\n    }\n    \n\
    \    # Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][",
  "    \n    # Check the length of the file's name\n    return length($file_name)\
    \ <= 3 ? 'No' : 'Yes';\n}", "    \n    my $valid_file_name;\n    \n    if ($file_name\
    \ =~ /^[0-9]{3}\\./ && $file_name =~ /\\.[a-zA-z0-9]+$/) {\n        $valid_file_name\
    \ = 'Yes';\n    }\n    else {\n        $valid_file_name = 'No';\n    }\n    \n\
    \    return $valid_file_name;\n}", "    \n    # Check if the file name contains\
    \ more than three digits ('0'-'9')\n    if ($file_name =~ /^[0-9]{3}$/) {\n  \
    \      return 'Yes';\n    }\n    \n    # Check if the file name contains exactly\
    \ one dot '.'\n    if ($file_name =~ /^\\.$/) {\n        return 'Yes';\n    }\n\
    \    \n    # Check if the substring before the dot should not be empty, and it\
    \ starts with a letter from \n    # the latin alphapet ('a'-'z' and 'A'-'Z')\n\
    \    if ($file_name =~ /^[^\\.].*[a-zA-z]$/) {\n        return 'Yes';\n    }\n\
    \    \n    # Check if the substring after the dot should be one of these: ['txt',\
    \ 'exe', 'dll']\n    if ($file_name =~ /^(txt|exe|dll)$/) {\n        return 'Yes';\n\
    \    }\n    \n    return 'No';\n}", "    \n    # Check the length of the file\
    \ name\n    if (length($file_name) > 3) {\n        return \"No\";\n    }\n   \
    \ \n    # Check the file name\n    if ($file_name =~ /^[0-9][0-9][0-9]\\.[a-z][a-z][a-z]$/)\
    \ {\n        return \"Yes\";\n    }\n    \n    # Check the file name\n    if ($file_name\
    \ =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        return \"Yes\";\n    }\n\
    \    \n    # Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]$/) {\n        return \"Yes\";\n    }\n    \n    # Check the file\
    \ name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]$/) {\n        return \"Yes\";\n    }\n    \n    # Check the file\
    \ name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        return \"Yes\";\n    }\n    \n\
    \    # Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n\
    \        return \"Yes\";\n    }\n    \n    # Check the file name\n    if ($file_name\
    \ =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        return \"Yes\"\
    ;\n    }\n    \n    # Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        return \"Yes\";\n    }\n    \n\
    \    # Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z",
  "    \n    # Check the length of the file name\n    return unless (length($file_name)\
    \ == length($file_name_check));\n    \n    # Check the file name\n    return unless\
    \ ($file_name =~ /^[0-9]{3}\\.[a-z][a-z][a-z]$/i);\n    \n    # Check the file\
    \ extension\n    return unless ($file_name =~ /\\.(txt|exe|dll)$/i);\n    \n \
    \   # Check the file name\n    return unless ($file_name =~ /^[a-z][a-z][a-z]$/i);\n\
    \    \n    # Check the file name\n    return unless ($file_name =~ /^[a-z][a-z][a-z]$/i);\n\
    \    \n    # Check the file name\n    return unless ($file_name =~ /^[a-z][a-z][a-z]$/i);\n\
    \    \n    # Check the file name\n    return unless ($file_name =~ /^[a-z][a-z][a-z]$/i);\n\
    \    \n    # Check the file name\n    return unless ($file_name =~ /^[a-z][a-z][a-z]$/i);\n\
    \    \n    # Check the file name\n    return unless ($file_name =~ /^[a-z][a-z][a-z]$/i);\n\
    \    \n    # Check the file name\n    return unless ($file_name =~ /^[a-z][a-z][a-z]$/i);\n\
    \    \n    # Check the file name\n    return unless ($file_name =~ /^[a-z][a-z][a-z]$/i);\n\
    \    \n    # Check the file name\n    return unless ($file_name =~ /^[a-z][a-z][a-z]$/i);\n\
    \    \n    # Check the file name\n    return unless ($file_name =~ /^[a-z][a-z][a-z]$/i);\n\
    \    \n    # Check the file name\n    return unless ($file_name =~ /^[a-z][a-z][a-z]$/i);\n\
    \    \n    # Check the file name\n    return unless ($file_name =~ /^[a-z][a-z][a-z]$/i);\n\
    \    \n    # Check the file name\n    return unless ($file_name =~ /^[a-z][a-z][a-z]$/i);\n\
    \    \n    # Check the file name\n    return unless ($file_name =~ /^[a-z][a-z][a-z]$/i);\n\
    \    \n    # Check the file name\n    return unless ($file_name =~ /^[a-z][a-z][a-z]$/i);\n\
    \    \n    # Check the file name\n    return unless ($file_name =~ /^[a-z][a-z][a-z]$/i);\n\
    \    \n    # Check the file name\n    return unless ($file_name =", "    \n  \
    \  # Check the file name\n    my $valid_file_name = 0;\n    \n    # Check the\
    \ file name\n    if ($file_name =~ /^[0-9]{3}\\.[a-z][a-z][a-z]$/) {\n       \
    \ $valid_file_name = 1;\n    }\n    \n    # Check the file name\n    if ($file_name\
    \ =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        $valid_file_name = 1;\n\
    \    }\n    \n    # Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        $valid_file_name = 1;\n    }\n\
    \    \n    # Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        $valid_file_name = 1;\n    }\n\
    \    \n    # Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n        $valid_file_name\
    \ = 1;\n    }\n    \n    # Check the file name\n    if ($file_name =~ /^[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/)\
    \ {\n        $valid_file_name = 1;\n    }\n    \n    # Check the file name\n \
    \   if ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n\
    \        $valid_file_name = 1;\n    }\n    \n    # Check the file name\n    if\
    \ ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]$/) {\n\
    \        $valid_file_name = 1;\n    }\n    \n    # Check the file name\n    if\
    \ ($file_name =~ /^[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\.[a-z][a-z][a-z]\\\
    .[a-z][a-z][a-z]\\.[a-z", "    \n    # Check the file name\n    if ($file_name\
    \ !~ /^[0-9]{3}\\.[a-z]{2,3}$/) {\n        return \"No\";\n    }"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

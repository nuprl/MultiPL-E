language: pl
name: HumanEval_66_digitSum
results:
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n\
    \    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n\
    \    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n\
    \    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n\
    \    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n\
    \    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n\
    \    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n\
    \    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n\
    \    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n\
    \    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n\
    \    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n\
    \    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n\
    \    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n\
    \    $s =~ tr/a-z/0/;\n    $s =\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpou249y9u.pl line 65, at end
    of line

    syntax error at /tmp/tmpou249y9u.pl line 65, near "use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpou249y9u.pl line 104, at end
    of line

    syntax error at /tmp/tmpou249y9u.pl line 104, at EOF

    Execution of /tmp/tmpou249y9u.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    foreach my $char (split\
    \ //, $s) {\n        if ($char =~ /^[A-Z]$/) {\n            $sum += ord($char)\
    \ - 64;\n        }\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $char;\n\
    \    my $j = 0;\n    my $len = length($s);\n    while ($i < $len) {\n        $char\
    \ = $s->[$i];\n        if ($char =~ /[A-Z]/) {\n            $sum += $char;\n \
    \       }\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    for(my $i = 0; $i < $len; $i++) {\n        $sum += $s->[$i] if $s->[$i] >=\
    \ 'A' && $s->[$i] <= 'Z';\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    for(my $i = 0; $i < $len; $i++) {\n        $sum += ord($s[$i]) - ord('A')\
    \ + 1;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while($i < $len) {\n        $sum += $s->[$i] if $s->[$i]\
    \ >= 'A' && $s->[$i] <= 'Z';\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    \n    foreach my $char\
    \ (split(//, $s)) {\n        $sum += ord($char) - ord('A') + 1;\n    }\n    \n\
    \    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    while($i < length($s)) {\n        $sum += ord($s[$i]) - ord('A') +\
    \ 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    foreach my $char (split\
    \ //, $s) {\n        $sum += ord $char;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $len\
    \ = length($s);\n    while ($i < $len) {\n        $sum += $s->[$i] if $s->[$i]\
    \ >= 'A' && $s->[$i] <= 'Z';\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        my $c = substr($s, $i, 1);\n        if($c eq \"A\"\
    ) {\n            $sum += 65;\n        } elsif($c eq \"a\") {\n            $sum\
    \ += 97;\n        } elsif($c eq \"B\") {\n            $sum += 66;\n        } elsif($c\
    \ eq \"b\") {\n            $sum += 98;\n        } elsif($c eq \"C\") {\n     \
    \       $sum += 67;\n        } elsif($c eq \"c\") {\n            $sum += 99;\n\
    \        } elsif($c eq \"D\") {\n            $sum += 68;\n        } elsif($c eq\
    \ \"d\") {\n            $sum += 100;\n        } elsif($c eq \"E\") {\n       \
    \     $sum += 69;\n        } elsif($c eq \"e\") {\n            $sum += 101;\n\
    \        } elsif($c eq \"F\") {\n            $sum += 70;\n        } elsif($c eq\
    \ \"f\") {\n            $sum += 102;\n        } elsif($c eq \"G\") {\n       \
    \     $sum += 71;\n        } elsif($c eq \"g\") {\n            $sum += 103;\n\
    \        } elsif($c eq \"H\") {\n            $sum += 72;\n        } elsif($c eq\
    \ \"h\") {\n            $sum += 104;\n        } elsif($c eq \"I\") {\n       \
    \     $sum += 73;\n        } elsif($c eq \"i\") {\n            $sum += 105;\n\
    \        } elsif($c eq \"J\") {\n            $sum += 74;\n        } elsif($c eq\
    \ \"j\") {\n            $sum += 106;\n        } elsif($c eq \"K\") {\n       \
    \     $sum += 75;\n        } elsif($c eq \"k\") {\n            $sum += 107;\n\
    \        } elsif($c eq \"L\") {\n            $sum += 76;\n        } elsif($c eq\
    \ \"l\") {\n            $sum += 108;\n        } elsif($c eq \"M\") {\n       \
    \     $sum += 77;\n        } elsif($c eq \"m\") {\n            $sum += 109;\n\
    \        } elsif($c eq \"N\") {\n            $sum += 78;\n        } elsif($c eq\
    \ \"n\") {\n            $sum += 110;\n        } elsif($c eq \"O\") {\n       \
    \     $sum += 79;\n        } elsif($c eq \"o\") {\n            $sum += 111;\n\
    \        } elsif($c eq \"P\") {\n            $sum += 80;\n        } elsif($c eq\
    \ \"p\") {\n            $sum += 112;\n        } elsif($c eq \"Q\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "String found where operator expected at /tmp/tmp4e513dam.pl line 87, near\
    \ \"print \"\"\n\t(Missing semicolon on previous line?)\nBareword found where\
    \ operator expected at /tmp/tmp4e513dam.pl line 88, near \"print \"ok\"\n\t(Do\
    \ you need to predeclare print?)\nString found where operator expected at /tmp/tmp4e513dam.pl\
    \ line 88, near \"print \"\"\n\t(Missing semicolon on previous line?)\nBareword\
    \ found where operator expected at /tmp/tmp4e513dam.pl line 89, near \"print \"\
    ok\"\n  (Might be a runaway multi-line \"\" string starting on line 88)\n\t(Do\
    \ you need to predeclare print?)\nString found where operator expected at /tmp/tmp4e513dam.pl\
    \ line 89, near \"print \"\"\n\t(Missing semicolon on previous line?)\nBareword\
    \ found where operator expected at /tmp/tmp4e513dam.pl line 90, near \"print \"\
    ok\"\n  (Might be a runaway multi-line \"\" string starting on line 89)\n\t(Do\
    \ you need to predeclare print?)\nString found where operator expected at /tmp/tmp4e513dam.pl\
    \ line 90, near \"print \"\"\n\t(Missing semicolon on previous line?)\nBareword\
    \ found where operator expected at /tmp/tmp4e513dam.pl line 91, near \"print \"\
    ok\"\n  (Might be a runaway multi-line \"\" string starting on line 90)\n\t(Do\
    \ you need to predeclare print?)\nString found where operator expected at /tmp/tmp4e513dam.pl\
    \ line 91, near \"print \"\"\n\t(Missing semicolon on previous line?)\nBareword\
    \ found where operator expected at /tmp/tmp4e513dam.pl line 92, near \"print \"\
    ok\"\n  (Might be a runaway multi-line \"\" string starting on line 91)\n\t(Do\
    \ you need to predeclare print?)\nString found where operator expected at /tmp/tmp4e513dam.pl\
    \ line 92, near \"print \"\"\n\t(Missing semicolon on previous line?)\nBareword\
    \ found where operator expected at /tmp/tmp4e513dam.pl line 93, near \"print \"\
    ok\"\n  (Might be a runaway multi-line \"\" string starting on line 92)\n\t(Do\
    \ you need to predeclare print?)\nBareword found where operator expected at /tmp/tmp4e513dam.pl\
    \ line 94, near \"print \"ok\"\n  (Might be a runaway multi-line \"\" string starting\
    \ on line 93)\n\t(Do you need to predeclare print?)\nBareword found where operator\
    \ expected at /tmp/tmp4e513dam"
  stdout: ''
  timestamp: 1659821190
- exit_code: 0
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        my $c = substr($s, $i, 1);\n        if($c =~ /[A-Z]/)\
    \ {\n            $sum += ord($c);\n        }\n        $i++;\n    }\n    return\
    \ $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/[^A-Z]//g;\n    return $s;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n \
    \       if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while($i < $len) {\n        $sum += ord($s[$i]) - ord('A')\
    \ + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        my $c = substr($s, $i, 1);\n        if($c eq 'A') {\n\
    \            $sum += 65;\n        } elsif($c eq 'a') {\n            $sum += 97;\n\
    \        } elsif($c eq 'B') {\n            $sum += 66;\n        } elsif($c eq\
    \ 'b') {\n            $sum += 98;\n        } elsif($c eq 'C') {\n            $sum\
    \ += 67;\n        } elsif($c eq 'c') {\n            $sum += 99;\n        } elsif($c\
    \ eq 'D') {\n            $sum += 68;\n        } elsif($c eq 'd') {\n         \
    \   $sum += 100;\n        } elsif($c eq 'E') {\n            $sum += 69;\n    \
    \    } elsif($c eq 'e') {\n            $sum += 101;\n        } elsif($c eq 'F')\
    \ {\n            $sum += 70;\n        } elsif($c eq 'f') {\n            $sum +=\
    \ 102;\n        } elsif($c eq 'G') {\n            $sum += 71;\n        } elsif($c\
    \ eq 'g') {\n            $sum += 103;\n        } elsif($c eq 'H') {\n        \
    \    $sum += 72;\n        } elsif($c eq 'h') {\n            $sum += 104;\n   \
    \     } elsif($c eq 'I') {\n            $sum += 73;\n        } elsif($c eq 'i')\
    \ {\n            $sum += 105;\n        } elsif($c eq 'J') {\n            $sum\
    \ += 74;\n        } elsif($c eq 'j') {\n            $sum += 106;\n        } elsif($c\
    \ eq 'K') {\n            $sum += 75;\n        } elsif($c eq 'k') {\n         \
    \   $sum += 107;\n        } elsif($c eq 'L') {\n            $sum += 76;\n    \
    \    } elsif($c eq 'l') {\n            $sum += 108;\n        } elsif($c eq 'M')\
    \ {\n            $sum += 77;\n        } elsif($c eq 'm') {\n            $sum +=\
    \ 109;\n        } elsif($c eq 'N') {\n            $sum += 78;\n        } elsif($c\
    \ eq 'n') {\n            $sum += 110;\n        } elsif($c eq 'O') {\n        \
    \    $sum += 79;\n        } elsif($c eq 'o') {\n            $sum += 111;\n   \
    \     } elsif($c eq 'P') {\n            $sum += 80;\n        } elsif($c eq 'p')\
    \ {\n            $sum += 112;\n        } elsif($c eq 'Q\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t find string terminator "''" anywhere before EOF at /tmp/tmp1xlkfhs2.pl
    line 81.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/[^A-Z]//g;\n    return $s;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n \
    \       if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    while($i < length($s)) {\n        my $c = substr($s, $i, 1);\n   \
    \     if($c eq 'A') {\n            $sum += $j;\n        }\n        $j++;\n   \
    \     $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $l = length($s);\n    while($i < $l) {\n      \
    \  $j = 0;\n        while($j < $l) {\n            $k = 0;\n            while($k\
    \ < $l) {\n                $sum += ord($s[$i][$j]) - ord($s[$i][$k]);\n      \
    \          $k++;\n            }\n            $j++;\n        }\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    my($c) = 0;\n    my($i)\
    \ = 0;\n    my($j) = -1;\n    my($max);\n    my($maxChar);\n    my($maxCharCount);\n\
    \    my($maxCharCount2);\n    my($maxCharCount3);\n    my($maxCharCount4);\n \
    \   my($maxCharCount5);\n    my($maxCharCount6);\n    my($maxCharCount7);\n  \
    \  my($maxCharCount8);\n    my($maxCharCount9);\n    my($maxCharCount10);\n  \
    \  my($maxCharCount11);\n    my($maxCharCount12);\n    my($maxCharCount13);\n\
    \    my($maxCharCount14);\n    my($maxCharCount15);\n    my($maxCharCount16);\n\
    \    my($maxCharCount17);\n    my($maxCharCount18);\n    my($maxCharCount19);\n\
    \    my($maxCharCount20);\n    my($maxCharCount21);\n    my($maxCharCount22);\n\
    \    my($maxCharCount23);\n    my($maxCharCount24);\n    my($maxCharCount25);\n\
    \    my($maxCharCount26);\n    my($maxCharCount27);\n    my($maxCharCount28);\n\
    \    my($maxCharCount29);\n    my($maxCharCount30);\n    my($maxCharCount31);\n\
    \    my($maxCharCount32);\n    my($maxCharCount33);\n    my($maxCharCount34);\n\
    \    my($maxCharCount35);\n    my($maxCharCount36);\n    my($maxCharCount37);\n\
    \    my($maxCharCount38);\n    my($maxCharCount39);\n    my($maxCharCount40);\n\
    \    my($maxCharCount41);\n    my($maxCharCount42);\n    my($maxCharCount43);\n\
    \    my($maxCharCount44);\n    my($maxCharCount45);\n    my($maxCharCount46);\n\
    \    my($maxCharCount47);\n    my($maxCharCount48);\n    my($maxCharCount49);\n\
    \    my($maxCharCount50);\n    my($maxCharCount51);\n    my($maxCharCount52);\n\
    \    my($maxCharCount53);\n    my($maxCharCount54);\n    my($maxCharCount\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n   \
    \     if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpotgito4l.pl line 74, at end
    of line

    syntax error at /tmp/tmpotgito4l.pl line 74, near "$maxCharCount

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpotgito4l.pl line 113, at end
    of line

    syntax error at /tmp/tmpotgito4l.pl line 113, at EOF

    Execution of /tmp/tmpotgito4l.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    foreach my $c (split(//,\
    \ $s)) {\n        $sum += ord($c) - ord('A') + 1;\n    }\n    return $sum;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n \
    \       if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $len\
    \ = length($s);\n    while($i < $len) {\n        $sum += ord($s[$i]) - ord(\"\
    A\") + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord(\"A\") + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    foreach my $char (split\
    \ //, $s) {\n        $sum += ord $char;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\\
    s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+//g;\n\
    \    $s =~ s/\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+//g;\n    $s =~\
    \ s/\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n\
    \    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~\
    \ s/\\s+/ /g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~ s/\\s+/\
    \ /g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~ s/\\s+/ /g;\n \
    \   $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~\
    \ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+//g;\n\
    \    $s =~ s/\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+//g;\n    $s =~\
    \ s/\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n\
    \    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~\
    \ s/\\s+/ /g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~ s/\\s+/\
    \ /g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~ s/\\s+/ /g;\n \
    \   $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~\
    \ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n \
    \       if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Substitution pattern not terminated at /tmp/tmptc82_qf8.pl line 65.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum);\n    \n    foreach my $char (split(//,\
    \ $s)) {\n        $sum += $char if $char !~ /[A-Z]/;\n    }\n    return $sum;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord(\"A\") + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while($i < $len) {\n        my $c = substr($s, $i, 1);\n\
    \        $sum += ord($c);\n        $i += 1;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    foreach my $char (split(//,\
    \ $s)) {\n        $sum += ord($char) - ord('A') + 1;\n    }\n    return $sum;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    my $c = $s[0];\n    while($i < $len) {\n        $sum += ord($c)\
    \ if ($c >= 'A' && $c <= 'Z');\n        $c = substr($s, $i++, 1);\n    }\n   \
    \ return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    foreach my $c (split(//,\
    \ $s)) {\n        $sum += ord($c) - ord('A') + 1;\n    }\n    return $sum;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n \
    \       if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    while($i < length($s)) {\n        $sum += ord($s[$i])\
    \ - ord('A') + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord(substr($s, $i, 1));\n        $i += 1;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $l = length($s);\n    while($i < $l) {\n      \
    \  $sum = $sum + ord($s[$i]) - ord(\"A\") + 1;\n        $i++;\n    }\n    return\
    \ $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    \n    foreach my $char\
    \ (split(//, $s)) {\n        $sum += $char if $char <= 90;\n    }\n    \n    return\
    \ $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ tr/A-Z/0/;\n    return $s;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n   \
    \     if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ tr/A-Z/0/;\n    return $s;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n   \
    \     if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/[^A-Z]//g;\n    $s =~ tr/A-Z//cd;\n\
    \    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\\
    s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n \
    \   $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~\
    \ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n\
    \    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~\
    \ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n\
    \    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~\
    \ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n\
    \    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~\
    \ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n\
    \    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~\
    \ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n\
    \    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~\
    \ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n\
    \    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~\
    \ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Substitution pattern not terminated at /tmp/tmpszxph6sy.pl line 66.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord(\"A\") + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 0
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        my $c = substr($s, $i, 1);\n        if($c =~ /[A-Z]/)\
    \ {\n            $sum += ord($c);\n        }\n        $i += 1;\n    }\n    return\
    \ $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1; # A is 65\n   \
    \     $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    for(my $i = 0; $i < $len; $i++) {\n        my $c = substr($s, $i, 1);\n \
    \       if($c eq \"A\") {\n            $sum += 65;\n        }\n        elsif($c\
    \ eq \"a\") {\n            $sum += 97;\n        }\n        elsif($c eq \"B\")\
    \ {\n            $sum += 66;\n        }\n        elsif($c eq \"b\") {\n      \
    \      $sum += 98;\n        }\n        elsif($c eq \"C\") {\n            $sum\
    \ += 67;\n        }\n        elsif($c eq \"c\") {\n            $sum += 99;\n \
    \       }\n        elsif($c eq \"D\") {\n            $sum += 68;\n        }\n\
    \        elsif($c eq \"d\") {\n            $sum += 100;\n        }\n        elsif($c\
    \ eq \"E\") {\n            $sum += 69;\n        }\n        elsif($c eq \"e\")\
    \ {\n            $sum += 101;\n        }\n        elsif($c eq \"F\") {\n     \
    \       $sum += 70;\n        }\n        elsif($c eq \"f\") {\n            $sum\
    \ += 102;\n        }\n        elsif($c eq \"G\") {\n            $sum += 71;\n\
    \        }\n        elsif($c eq \"g\") {\n            $sum += 103;\n        }\n\
    \        elsif($c eq \"H\") {\n            $sum += 72;\n        }\n        elsif($c\
    \ eq \"h\") {\n            $sum += 104;\n        }\n        elsif($c eq \"I\"\
    ) {\n            $sum += 73;\n        }\n        elsif($c eq \"i\") {\n      \
    \      $sum += 105;\n        }\n        elsif($c eq \"J\") {\n            $sum\
    \ += 74;\n        }\n        elsif($c eq \"j\") {\n            $sum += 106;\n\
    \        }\n        elsif($c eq \"K\") {\n            $sum += 75;\n        }\n\
    \        elsif($c eq \"k\") {\n            $sum += 107;\n        }\n        elsif($c\
    \ eq \"L\") {\n            $sum += 76;\n        }\n        elsif($c eq \"l\")\
    \ {\n            $sum += 108;\n        }\n        elsif($c eq \"M\") {\n     \
    \       $sum += 77;\n        }\n        elsif($c eq \"m\") {\n            $sum\
    \ += 109;\n        }\n        elsif($c eq \"N\") {\n            $sum += 78;\n\
    \        }\n        elsif($c eq \"n\") {\n            $sum += 110;\n        }\n\
    \        elsif($\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmpzntp1zo5.pl line 102,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmpzntp1zo5.pl line 102, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmpzntp1zo5.pl line 141, at end of line\nsyntax\
    \ error at /tmp/tmpzntp1zo5.pl line 141, at EOF\nExecution of /tmp/tmpzntp1zo5.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    for(my $i = 0; $i < $len; $i++) {\n        $sum += ord($s[$i]) - ord('A')\
    \ + 1;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    foreach my $char (split\
    \ //, $s) {\n        $sum += ord $char;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\\
    s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n \
    \   $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~\
    \ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n\
    \    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~\
    \ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n\
    \    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~\
    \ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n\
    \    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~\
    \ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n\
    \    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~\
    \ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n\
    \    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~\
    \ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n\
    \    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~\
    \ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Substitution pattern not terminated at /tmp/tmpszxph6sy.pl line 66.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ tr/A-Z/0/;\n    return $s;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n   \
    \     if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    for(my $i = 0; $i < $len; $i++) {\n        my $c = substr($s, $i, 1);\n \
    \       $sum += ord($c) - ord('A') + 1;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $len\
    \ = length($s);\n    while($i < $len) {\n        $sum += ord($s[$i]) - ord('A')\
    \ + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord(substr($s, $i, 1));\n        $i++;\n  \
    \  }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $l = length($s);\n    while($i < $l) {\n      \
    \  $j = 0;\n        while($j < $l) {\n            $sum += ord($s[$i][$j]) - ord('A')\
    \ + 1;\n            $j++;\n        }\n        $i++;\n    }\n    return $sum;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord(\"A\");\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    foreach my $char (split\
    \ //, $s) {\n        $sum += $char if $char <= 90;\n    }\n    return $sum;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    for(my $i = 0; $i < $len; $i++) {\n        $sum += ord($s[$i]) - ord('A')\
    \ + 1;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord(substr($s, $i, 1));\n        $i += 1;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/[^A-Z]//g;\n    $s =~ s/^([A-Z])//;\n\
    \    $s =~ s/([A-Z])$//;\n    $s =~ s/^([A-Z])/$1/g;\n    $s =~ s/([A-Z])$/$2/g;\n\
    \    $s =~ s/^([A-Z])/$1/g;\n    $s =~ s/([A-Z])$/$2/g;\n    $s =~ s/^([A-Z])/$1/g;\n\
    \    $s =~ s/([A-Z])$/$2/g;\n    $s =~ s/^([A-Z])/$1/g;\n    $s =~ s/([A-Z])$/$2/g;\n\
    \    $s =~ s/^([A-Z])/$1/g;\n    $s =~ s/([A-Z])$/$2/g;\n    $s =~ s/^([A-Z])/$1/g;\n\
    \    $s =~ s/([A-Z])$/$2/g;\n    $s =~ s/^([A-Z])/$1/g;\n    $s =~ s/([A-Z])$/$2/g;\n\
    \    $s =~ s/^([A-Z])/$1/g;\n    $s =~ s/([A-Z])$/$2/g;\n    $s =~ s/^([A-Z])/$1/g;\n\
    \    $s =~ s/([A-Z])$/$2/g;\n    $s =~ s/^([A-Z])/$1/g;\n    $s =~ s/([A-Z])$/$2/g;\n\
    \    $s =~ s/^([A-Z])/$1/g;\n    $s =~ s/([A-Z])$/$2/g;\n    $s =~ s/^([A-Z])/$1/g;\n\
    \    $s =~ s/([A-Z])$/$2/g;\n    $s =~ s/^([A-Z])/$1/g;\n    $s =~ s/([A-Z])$/$2/g;\n\
    \    $s =~ s/^([A-Z])/$1/g;\n    $s =~ s/([A-Z])$/$2/g;\n    $s =~ s/^([A-Z])/$1/g;\n\
    \    $s =~ s/([A-Z])$/$2/g;\n    $s =~ s/^([A-Z])/$1/g;\n    $s =~ s/([A-Z])$/$2/g;\n\
    \    $s =~ s/^([A-Z])/$1/g;\n    $s =~ s/([A-Z])$/$2/g;\n    $s =~ s/^([A-Z])/$1/g;\n\
    \    $s =~ s/([A-Z])$/$2/g;\n    $s =~ s/^([A-Z])/$1/g\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpq92vm4k8.pl line 53, at end
    of line

    syntax error at /tmp/tmpq92vm4k8.pl line 53, near "use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpq92vm4k8.pl line 92, at end of
    line

    syntax error at /tmp/tmpq92vm4k8.pl line 92, at EOF

    Execution of /tmp/tmpq92vm4k8.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n\
    \    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord(\"A\") + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    foreach my $c (split\
    \ //, $s) {\n        $sum += ord $c;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    for(my $i = 0; $i < $len; $i++) {\n        $sum += $s->[$i] if $s->[$i] >=\
    \ 'A' && $s->[$i] <= 'Z';\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord(\"A\") + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while($i < $len) {\n        $sum += ord($s[$i]) - ord('A')\
    \ + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    while($i < length($s)) {\n        $sum += ord($s[$i]) - ord(\"A\"\
    ) + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while($i < $len) {\n        $sum += ord($s[$i]) - ord('A')\
    \ + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord(\"A\") + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    foreach my $char (split(//,\
    \ $s)) {\n        $sum += ord($char) - ord('A') + 1;\n    }\n    return $sum;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum);\n    \n    $sum = 0;\n    \n \
    \   foreach my $char (split(//, $s)) {\n        $sum += ord($char);\n    }\n \
    \   \n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    my $j = 0;\n    while($i < $len) {\n        $sum += ord($s[$i])\
    \ - ord(\"A\") + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while($i < $len) {\n        my $c = substr($s, $i, 1);\n\
    \        $sum += ord($c);\n        $i += 1;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    foreach my $char (split\
    \ //, $s) {\n        $sum += ord $char;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while($i < $len) {\n        my $c = substr($s, $i, 1);\n\
    \        $sum += ord($c);\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1; # A is 65\n   \
    \     $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my\
    \ $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n  \
    \  my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n\
    \    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n\
    \    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n\
    \    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n\
    \    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n\
    \    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n\
    \    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n\
    \    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n\
    \    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n\
    \    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n\
    \    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpl7izom58.pl line 117, at end
    of line

    syntax error at /tmp/tmpl7izom58.pl line 117, near "$g

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpl7izom58.pl line 156, at end
    of line

    syntax error at /tmp/tmpl7izom58.pl line 156, at EOF

    Execution of /tmp/tmpl7izom58.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1; # subtract ascii\
    \ code of 'A'\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1; \n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/a-z/0/;\n\
    \    $s =~ tr/0-9/0/;\n    $s =~ tr/-/0/;\n    $s =~ tr/+/0/;\n    $s =~ tr/./0/;\n\
    \    $s =~ tr/0/0/;\n    $s =~ tr/-/0/;\n    $s =~ tr/+/0/;\n    $s =~ tr/./0/;\n\
    \    $s =~ tr/0/0/;\n    $s =~ tr/-/0/;\n    $s =~ tr/+/0/;\n    $s =~ tr/./0/;\n\
    \    $s =~ tr/0/0/;\n    $s =~ tr/-/0/;\n    $s =~ tr/+/0/;\n    $s =~ tr/./0/;\n\
    \    $s =~ tr/0/0/;\n    $s =~ tr/-/0/;\n    $s =~ tr/+/0/;\n    $s =~ tr/./0/;\n\
    \    $s =~ tr/0/0/;\n    $s =~ tr/-/0/;\n    $s =~ tr/+/0/;\n    $s =~ tr/./0/;\n\
    \    $s =~ tr/0/0/;\n    $s =~ tr/-/0/;\n    $s =~ tr/+/0/;\n    $s =~ tr/./0/;\n\
    \    $s =~ tr/0/0/;\n    $s =~ tr/-/0/;\n    $s =~ tr/+/0/;\n    $s =~ tr/./0/;\n\
    \    $s =~ tr/0/0/;\n    $s =~ tr/-/0/;\n    $s =~ tr/+/0/;\n    $s =~ tr/./0/;\n\
    \    $s =~ tr/0/0/;\n    $s =~ tr/-/0/;\n    $s =~ tr/+/0/;\n    $s =~ tr/./0/;\n\
    \    $s =~ tr/0/0/;\n    $s =~ tr/-/0/;\n    $s =~ tr/+/0/;\n    $s =~ tr/./0/;\n\
    \    $s =~ tr/0/0/;\n    $s =~ tr/-/0/;\n    $s =~ tr/+/0/;\n    $s =~ tr/./0/;\n\
    \    $s =~ tr/0/0/;\n    $s =~ tr/-/0/;\n    $s =~ tr/+/0/;\n    $s =~ tr/./0/;\n\
    \    $s =~ tr/0/0/;\n    $\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmpdpeq6k4i.pl line 69,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmpdpeq6k4i.pl line 69, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmpdpeq6k4i.pl line 108, at end of line\nsyntax\
    \ error at /tmp/tmpdpeq6k4i.pl line 108, at EOF\nExecution of /tmp/tmpdpeq6k4i.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\\
    s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n \
    \   $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~\
    \ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n\
    \    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~\
    \ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n\
    \    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~\
    \ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n\
    \    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~\
    \ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n\
    \    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~\
    \ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n\
    \    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~\
    \ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n\
    \    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~\
    \ s/\\s+//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+//g;\n    $s =~ s/\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Substitution pattern not terminated at /tmp/tmpszxph6sy.pl line 66.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $l = length($s);\n    while($i < $l) {\n      \
    \  $sum += ord($s[$i]) - ord(\"A\") + 1;\n        $i++;\n    }\n    return $sum;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while($i < $len) {\n        $sum += ord($s[$i]) - ord('A')\
    \ + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1; # A is 65\n   \
    \     $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ tr/A-Z/0/;\n    return $s;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n   \
    \     if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ tr/A-Z/0/;\n    return $s;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n   \
    \     if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord(\"A\") + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        my $c = substr($s, $i, 1);\n        $sum += ord($c)\
    \ - ord('A') + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        my $c = substr($s, $i, 1);\n        if($c eq \"A\"\
    ) {\n            $sum += 65;\n        }\n        elsif($c eq \"a\") {\n      \
    \      $sum += 97;\n        }\n        elsif($c eq \"B\") {\n            $sum\
    \ += 66;\n        }\n        elsif($c eq \"b\") {\n            $sum += 98;\n \
    \       }\n        elsif($c eq \"C\") {\n            $sum += 67;\n        }\n\
    \        elsif($c eq \"c\") {\n            $sum += 99;\n        }\n        elsif($c\
    \ eq \"D\") {\n            $sum += 68;\n        }\n        elsif($c eq \"d\")\
    \ {\n            $sum += 100;\n        }\n        elsif($c eq \"E\") {\n     \
    \       $sum += 69;\n        }\n        elsif($c eq \"e\") {\n            $sum\
    \ += 101;\n        }\n        elsif($c eq \"F\") {\n            $sum += 70;\n\
    \        }\n        elsif($c eq \"f\") {\n            $sum += 102;\n        }\n\
    \        elsif($c eq \"G\") {\n            $sum += 71;\n        }\n        elsif($c\
    \ eq \"g\") {\n            $sum += 103;\n        }\n        elsif($c eq \"H\"\
    ) {\n            $sum += 72;\n        }\n        elsif($c eq \"h\") {\n      \
    \      $sum += 104;\n        }\n        elsif($c eq \"I\") {\n            $sum\
    \ += 73;\n        }\n        elsif($c eq \"i\") {\n            $sum += 105;\n\
    \        }\n        elsif($c eq \"J\") {\n            $sum += 74;\n        }\n\
    \        elsif($c eq \"j\") {\n            $sum += 106;\n        }\n        elsif($c\
    \ eq \"K\") {\n            $sum += 75;\n        }\n        elsif($c eq \"k\")\
    \ {\n            $sum += 107;\n        }\n        elsif($c eq \"L\") {\n     \
    \       $sum += 76;\n        }\n        elsif($c eq \"l\") {\n            $sum\
    \ += 108;\n        }\n        elsif($c eq \"M\") {\n            $sum += 77;\n\
    \        }\n        elsif($c eq \"m\") {\n            $sum += 109;\n        }\n\
    \        elsif($c eq \"N\") {\n            $sum += 78;\n        }\n        elsif($c\
    \ eq \"n\") {\n            $sum += 110;\n        }\n        elsif($c eq \"O\"\
    ) {\n            $sum += \nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpig_g5fpf.pl line 103, at end
    of line

    syntax error at /tmp/tmpig_g5fpf.pl line 103, near "use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpig_g5fpf.pl line 142, at end
    of line

    syntax error at /tmp/tmpig_g5fpf.pl line 142, at EOF

    Execution of /tmp/tmpig_g5fpf.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        my $c = substr($s, $i, 1);\n        $sum += ord($c)\
    \ - ord('A') + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $len\
    \ = length($s);\n    while ($i < $len) {\n        $sum += ord($s[$i]) - ord('A')\
    \ + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord(\"A\");\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/[^A-Za-z0-9]//g;\n    return $s;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ tr/A-Z//cd;\n    return $s;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n   \
    \     if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1; # A is 65\n   \
    \     $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        my $c = substr($s, $i, 1);\n        $sum += ord($c);\n\
    \        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while ($i < $len) {\n        $sum += ord($s[$i]) - ord('A')\
    \ + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    while($i < length($s)) {\n        if($s[i] >= 'A'\
    \ && $s[i] <= 'Z') {\n            $sum += $s[i] - 'A' + 1;\n            $i++;\n\
    \        }\n        elsif($s[i] >= 'a' && $s[i] <= 'z') {\n            $sum +=\
    \ $s[i] - 'a' + 1;\n            $i++;\n        }\n        elsif($s[i] >= '0' &&\
    \ $s[i] <= '9') {\n            $sum += $s[i] - '0';\n            $i++;\n     \
    \   }\n        elsif($s[i] eq '_') {\n            $i++;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    foreach my $char (split(//,\
    \ $s)) {\n        $sum += $char if $char !~ /[A-Z]/;\n    }\n    return $sum;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n\
    \    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n\
    \    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n\
    \    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n\
    \    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n\
    \    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n\
    \    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n\
    \    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n\
    \    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n\
    \    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n\
    \    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n\
    \    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n\
    \    $s =~ tr/0-9/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/0-9/0/;\n\
    \    $s =~ tr/a-z/0/;\n    $s =\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpou249y9u.pl line 65, at end
    of line

    syntax error at /tmp/tmpou249y9u.pl line 65, near "use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpou249y9u.pl line 104, at end
    of line

    syntax error at /tmp/tmpou249y9u.pl line 104, at EOF

    Execution of /tmp/tmpou249y9u.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while($i < $len) {\n        my $c = substr($s, $i, 1);\n\
    \        $sum += ord($c) - ord('A') + 1;\n        $i += 1;\n    }\n    return\
    \ $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    foreach my $char (split(//,\
    \ $s)) {\n        $sum += $char if $char <= 90;\n    }\n    return $sum;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n \
    \       if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\\
    s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n\
    \    $s =~ s/\\s+$//g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n \
    \   $s =~ s/\\s+$//g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n  \
    \  $s =~ s/\\s+$//g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n   \
    \ $s =~ s/\\s+$//g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s\
    \ =~ s/\\s+$//g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~\
    \ s/\\s+$//g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\\
    s+$//g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n\
    \    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n \
    \   $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n  \
    \  $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n   \
    \ $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n    $s\
    \ =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~\
    \ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~ s/^\\\
    s+|\\s+$//g;\n    $s =~ s/\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Substitution pattern not terminated at /tmp/tmp2t9x6tck.pl line 59.

    '
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    while ($i < length($s)) {\n        $sum += ord($s{$i});\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $len\
    \ = length($s);\n    while($i < $len) {\n        my $c = substr($s, $i, 1);\n\
    \        $sum += ord($c) - ord('A') + 1;\n        $i += 1;\n    }\n    return\
    \ $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord(\"A\") + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    foreach my $char (split\
    \ //, $s) {\n        $sum += $char if $char !~ /[A-Z]/;\n    }\n    return $sum;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum);\n    \n    foreach my $char (split(//,\
    \ $s)) {\n        $sum += $char if $char <= 90;\n    }\n    return $sum;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n \
    \       if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    foreach my $char (split(//,\
    \ $s)) {\n        $sum += $char if $char !~ /[A-Z]/;\n    }\n    return $sum;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while($i < $len) {\n        $sum += ord($s[$i]) - ord(\"\
    A\") + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while($i < $len) {\n        my $c = substr($s, $i, 1);\n\
    \        if($c eq 'A') {\n            $sum += $c - 'A' + 10;\n        } elsif($c\
    \ eq 'a') {\n            $sum += $c - 'a' + 10;\n        } elsif($c eq 'B') {\n\
    \            $sum += $c - 'A' + 26;\n        } elsif($c eq 'b') {\n          \
    \  $sum += $c - 'a' + 26;\n        } elsif($c eq 'C') {\n            $sum += $c\
    \ - 'A' + 52;\n        } elsif($c eq 'c') {\n            $sum += $c - 'a' + 52;\n\
    \        } elsif($c eq 'D') {\n            $sum += $c - 'A' + 96;\n        } elsif($c\
    \ eq 'd') {\n            $sum += $c - 'a' + 96;\n        } elsif($c eq 'E') {\n\
    \            $sum += $c - 'A' + 122;\n        } elsif($c eq 'e') {\n         \
    \   $sum += $c - 'a' + 122;\n        } elsif($c eq 'F') {\n            $sum +=\
    \ $c - 'A' + 147;\n        } elsif($c eq 'f') {\n            $sum += $c - 'a'\
    \ + 147;\n        } elsif($c eq 'G') {\n            $sum += $c - 'A' + 171;\n\
    \        } elsif($c eq 'g') {\n            $sum += $c - 'a' + 171;\n        }\
    \ elsif($c eq 'H') {\n            $sum += $c - 'A' + 197;\n        } elsif($c\
    \ eq 'h') {\n            $sum += $c - 'a' + 197;\n        } elsif($c eq 'I') {\n\
    \            $sum += $c - 'A' + 223;\n        } elsif($c eq 'i') {\n         \
    \   $sum += $c - 'a' + 223;\n        } elsif($c eq 'J') {\n            $sum +=\
    \ $c - 'A' + 249;\n        } elsif($c eq 'j') {\n            $sum += $c - 'a'\
    \ + 249;\n        } elsif($c eq 'K') {\n            $sum += $c - 'A' + 275;\n\
    \        } elsif($c eq 'k') {\n            $sum += $c - 'a' + 275;\n        }\
    \ elsif($c eq 'L') {\n            $sum += $c - 'A' + 291;\n        } elsif($c\
    \ eq 'l') {\n            $sum += $c - 'a' + 291;\n        } el\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmp596_z6n3.pl line 67, at end
    of line

    syntax error at /tmp/tmp596_z6n3.pl line 67, near "el

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmp596_z6n3.pl line 106, at end
    of line

    syntax error at /tmp/tmp596_z6n3.pl line 106, at EOF

    Execution of /tmp/tmp596_z6n3.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 0
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        my $c = substr($s, $i, 1);\n        if ($c =~ /[A-Z]/)\
    \ {\n            $sum += ord($c);\n        }\n        $i++;\n    }\n    return\
    \ $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        my $c = substr($s, $i, 1);\n        $sum += ord($c)\
    \ - ord('A') + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    while($i < length($s)) {\n        $sum += ord($s[$i]) - ord(\"A\"\
    ) + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    while ($i < length($s)) {\n        $sum += ord(substr($s,\
    \ $i, 1));\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        my $c = substr($s, $i, 1);\n        $sum += ord($c)\
    \ - ord('A') + 1;\n        $i += 1;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    while($i < length($s)) {\n        my $c = substr($s,\
    \ $i, 1);\n        if($c eq 'A') {\n            $sum += $j;\n        }\n     \
    \   $i++;\n        $j++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while ($i < $len) {\n        my $c = substr($s, $i, 1);\n\
    \        if ($c eq \"A\") {\n            $sum += $c + 10;\n        }\n       \
    \ elsif ($c eq \"a\") {\n            $sum += $c + 10;\n        }\n        elsif\
    \ ($c eq \"B\") {\n            $sum += $c + 11;\n        }\n        elsif ($c\
    \ eq \"b\") {\n            $sum += $c + 11;\n        }\n        elsif ($c eq \"\
    C\") {\n            $sum += $c + 12;\n        }\n        elsif ($c eq \"c\") {\n\
    \            $sum += $c + 12;\n        }\n        elsif ($c eq \"D\") {\n    \
    \        $sum += $c + 13;\n        }\n        elsif ($c eq \"d\") {\n        \
    \    $sum += $c + 13;\n        }\n        elsif ($c eq \"E\") {\n            $sum\
    \ += $c + 14;\n        }\n        elsif ($c eq \"e\") {\n            $sum += $c\
    \ + 14;\n        }\n        elsif ($c eq \"F\") {\n            $sum += $c + 15;\n\
    \        }\n        elsif ($c eq \"f\") {\n            $sum += $c + 15;\n    \
    \    }\n        elsif ($c eq \"G\") {\n            $sum += $c + 16;\n        }\n\
    \        elsif ($c eq \"g\") {\n            $sum += $c + 16;\n        }\n    \
    \    elsif ($c eq \"H\") {\n            $sum += $c + 17;\n        }\n        elsif\
    \ ($c eq \"h\") {\n            $sum += $c + 17;\n        }\n        elsif ($c\
    \ eq \"I\") {\n            $sum += $c + 18;\n        }\n        elsif ($c eq \"\
    i\") {\n            $sum += $c + 18;\n        }\n        elsif ($c eq \"J\") {\n\
    \            $sum += $c + 19;\n        }\n        elsif ($c eq \"j\") {\n    \
    \        $sum += $c + 19;\n        }\n        elsif ($c eq \"K\") {\n        \
    \    $sum += $c + 20;\n        }\n        elsif ($c eq \"k\") {\n            $sum\
    \ += $c + 20;\n        }\n        elsif ($c eq \"L\") {\n            $sum += $c\
    \ + 21;\n        }\n        elsif ($c eq \"l\") {\n            $sum += $c + 21;\n\
    \        }\n        elsif ($c eq \"M\") {\n            $sum += $c + 22;\n\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n   \
    \     if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmp9a6fkgzf.pl line 132,
    at end of line

    syntax error at /tmp/tmp9a6fkgzf.pl line 132, at EOF

    Execution of /tmp/tmp9a6fkgzf.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    foreach my $char (split(//,\
    \ $s)) {\n        $sum += ord($char) - ord('A') + 1;\n    }\n    return $sum;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while($i < $len) {\n        my $c = substr($s, $i, 1);\n\
    \        $sum += ord($c) - ord('A') + 1;\n        $i += 1;\n    }\n    return\
    \ $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    for(my $i = 0; $i < $len; $i++) {\n        $sum += ord($s[$i]) - ord('0');\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ tr/A-Z/0/;\n    return $s;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n   \
    \     if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    while($i < length($s)) {\n        if($s[i] >= 'A' && $s[i] <= 'Z')\
    \ {\n            $sum += $s[i] - 'A' + 1;\n            $i++;\n        } elsif($s[i]\
    \ >= 'a' && $s[i] <= 'z') {\n            $sum += $s[i] - 'a' + 1;\n          \
    \  $i++;\n        } else {\n            $i++;\n        }\n    }\n    return $sum;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        my $c = substr($s, $i, 1);\n        $sum += ord($c)\
    \ - ord('A') + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    while($i < length($s)) {\n        $sum += ord($s[$i]) - ord(\"A\"\
    ) + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord(\"A\") + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    foreach my $char (split\
    \ //, $s) {\n        $sum += $char if $char !~ /[A-Z]/;\n    }\n    return $sum;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum);\n    \n    foreach my $char (split(//,$s))\
    \ {\n        $sum += $char if $char <= 90;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord(substr($s, $i, 1));\n        $i += 1;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my\
    \ $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n  \
    \  my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n\
    \    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n\
    \    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n\
    \    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n\
    \    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n\
    \    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n\
    \    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n\
    \    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n\
    \    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n\
    \    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n\
    \    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpl7izom58.pl line 117, at end
    of line

    syntax error at /tmp/tmpl7izom58.pl line 117, near "$g

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpl7izom58.pl line 156, at end
    of line

    syntax error at /tmp/tmpl7izom58.pl line 156, at EOF

    Execution of /tmp/tmpl7izom58.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/\\\
    s+/ /g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+|\\\
    s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/\\s+/\
    \ /g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+|\\\
    s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/\\s+/\
    \ /g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+|\\\
    s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/\\s+/\
    \ /g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+|\\\
    s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/\\s+/\
    \ /g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+|\\\
    s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/\\s+/\
    \ /g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+|\\\
    s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/\\s+/\
    \ /g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+|\\\
    s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/\\s+/\
    \ /g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/\\s+/ /g;\n    $s =~ s/^\\s+\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n \
    \       if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Substitution pattern not terminated at /tmp/tmp8odxo81b.pl line 59.

    '
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    while($i < length($s)) {\n        $sum += ord(substr($s, $i, 1));\n\
    \        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/[^A-Za-z0-9]//g;\n    return $s;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\\
    s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n\
    \    $s =~ s/\\s+$//g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n \
    \   $s =~ s/\\s+$//g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n  \
    \  $s =~ s/\\s+$//g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n   \
    \ $s =~ s/\\s+$//g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s\
    \ =~ s/\\s+$//g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~\
    \ s/\\s+$//g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\\
    s+$//g;\n    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n\
    \    $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n \
    \   $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n  \
    \  $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n   \
    \ $s =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n    $s\
    \ =~ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~\
    \ s/^\\s+|\\s+$//g;\n    $s =~ s/^\\s+//g;\n    $s =~ s/\\s+$//g;\n    $s =~ s/^\\\
    s+|\\s+$//g;\n    $s =~ s/\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Substitution pattern not terminated at /tmp/tmp2t9x6tck.pl line 59.

    '
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    while($i < length($s)) {\n        $sum += ord($s[$i])\
    \ - ord(\"A\") + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        my $c = substr($s, $i, 1);\n        if ($c eq 'A')\
    \ {\n            $sum += $c - 'A' + 10;\n        }\n        elsif ($c eq 'a')\
    \ {\n            $sum += $c - 'a' + 10;\n        }\n        elsif ($c eq 'B')\
    \ {\n            $sum += $c - 'A' + 1;\n        }\n        elsif ($c eq 'b') {\n\
    \            $sum += $c - 'a' + 1;\n        }\n        elsif ($c eq 'C') {\n \
    \           $sum += $c - 'A' + 2;\n        }\n        elsif ($c eq 'c') {\n  \
    \          $sum += $c - 'a' + 2;\n        }\n        elsif ($c eq 'D') {\n   \
    \         $sum += $c - 'A' + 3;\n        }\n        elsif ($c eq 'd') {\n    \
    \        $sum += $c - 'a' + 3;\n        }\n        elsif ($c eq 'E') {\n     \
    \       $sum += $c - 'A' + 4;\n        }\n        elsif ($c eq 'e') {\n      \
    \      $sum += $c - 'a' + 4;\n        }\n        elsif ($c eq 'F') {\n       \
    \     $sum += $c - 'A' + 5;\n        }\n        elsif ($c eq 'f') {\n        \
    \    $sum += $c - 'a' + 5;\n        }\n        elsif ($c eq 'G') {\n         \
    \   $sum += $c - 'A' + 6;\n        }\n        elsif ($c eq 'g') {\n          \
    \  $sum += $c - 'a' + 6;\n        }\n        elsif ($c eq 'H') {\n           \
    \ $sum += $c - 'A' + 7;\n        }\n        elsif ($c eq 'h') {\n            $sum\
    \ += $c - 'a' + 7;\n        }\n        elsif ($c eq 'I') {\n            $sum +=\
    \ $c - 'A' + 8;\n        }\n        elsif ($c eq 'i') {\n            $sum += $c\
    \ - 'a' + 8;\n        }\n        elsif ($c eq 'J') {\n            $sum += $c -\
    \ 'A' + 9;\n        }\n        elsif ($c eq 'j') {\n            $sum += $c - 'a'\
    \ + 9;\n        }\n        elsif ($c eq 'K') {\n            $sum += $c - 'A' +\
    \ 10;\n        }\n        elsif ($c eq 'k') {\n            $sum += $c - 'a' +\
    \ 10;\n        }\n        elsif \nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "\"use\" not allowed in expression at /tmp/tmpa0f9xs8o.pl line 84, near\
    \ \"elsif \n\"\nsyntax error at /tmp/tmpa0f9xs8o.pl line 84, near \"elsif \nuse\
    \ Test::Deep\"\nMissing right curly or square bracket at /tmp/tmpa0f9xs8o.pl line\
    \ 123, at end of line\nsyntax error at /tmp/tmpa0f9xs8o.pl line 123, at EOF\n\
    Execution of /tmp/tmpa0f9xs8o.pl aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ tr/A-Z//cd;\n    return $s;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n   \
    \     if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ tr/A-Z//cd;\n    return $s;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n   \
    \     if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    my $len\
    \ = length($s);\n    while($i < $len) {\n        $sum += ord($s[$i]) - ord('A')\
    \ + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord(substr($s, $i, 1));\n        $i += 1;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\\
    s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n   \
    \ $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\\
    s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s\
    \ =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n    $s =~ s/^\\s+//;\n    $s =~ s/\\s+$//;\n\
    \    $s =~ s/^\\s+//;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmplbdcv6aa.pl line 109,
    at end of line

    syntax error at /tmp/tmplbdcv6aa.pl line 109, at EOF

    Execution of /tmp/tmplbdcv6aa.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821190
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while($i < $len) {\n        my $c = substr($s, $i, 1);\n\
    \        if($c eq 'A') {\n            $sum += $c - 'A' + 10;\n        }\n    \
    \    elsif($c eq 'a') {\n            $sum += $c - 'a' + 10;\n        }\n     \
    \   elsif($c eq 'B') {\n            $sum += $c - 'A' + 26;\n        }\n      \
    \  elsif($c eq 'b') {\n            $sum += $c - 'a' + 26;\n        }\n       \
    \ elsif($c eq 'C') {\n            $sum += $c - 'A' + 52;\n        }\n        elsif($c\
    \ eq 'c') {\n            $sum += $c - 'a' + 52;\n        }\n        elsif($c eq\
    \ 'D') {\n            $sum += $c - 'A' + 96;\n        }\n        elsif($c eq 'd')\
    \ {\n            $sum += $c - 'a' + 96;\n        }\n        elsif($c eq 'E') {\n\
    \            $sum += $c - 'A' + 122;\n        }\n        elsif($c eq 'e') {\n\
    \            $sum += $c - 'a' + 122;\n        }\n        elsif($c eq 'F') {\n\
    \            $sum += $c - 'A' + 147;\n        }\n        elsif($c eq 'f') {\n\
    \            $sum += $c - 'a' + 147;\n        }\n        elsif($c eq 'G') {\n\
    \            $sum += $c - 'A' + 171;\n        }\n        elsif($c eq 'g') {\n\
    \            $sum += $c - 'a' + 171;\n        }\n        elsif($c eq 'H') {\n\
    \            $sum += $c - 'A' + 197;\n        }\n        elsif($c eq 'h') {\n\
    \            $sum += $c - 'a' + 197;\n        }\n        elsif($c eq 'I') {\n\
    \            $sum += $c - 'A' + 223;\n        }\n        elsif($c eq 'i') {\n\
    \            $sum += $c - 'a' + 223;\n        }\n        elsif($c eq 'J') {\n\
    \            $sum += $c - 'A' + 249;\n        }\n        elsif($c eq 'j') {\n\
    \            $sum += $c - 'a' + 249;\n        }\n        elsif($c eq 'K') {\n\
    \            $sum += $c - 'A' + 283;\n        }\n        elsif($c eq 'k') {\n\
    \            $sum += $c - 'a' + 283;\n\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpjlnspxda.pl line 123,
    at end of line

    syntax error at /tmp/tmpjlnspxda.pl line 123, at EOF

    Execution of /tmp/tmpjlnspxda.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    foreach my $char (split(//,\
    \ $s)) {\n        if ($char =~ /[A-Z]/) {\n            $sum += ord($char) - 64;\n\
    \        }\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 255
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/a-z/0/;\n\
    \    $s =~ tr/0-9/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/0-9/0/;\n\
    \    $s =~ tr/A-Z/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/A-Z/0/;\n\
    \    $s =~ tr/a-z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/a-z/0/;\n\
    \    $s =~ tr/0-9/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/0-9/0/;\n\
    \    $s =~ tr/A-Z/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/A-Z/0/;\n\
    \    $s =~ tr/a-z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/a-z/0/;\n\
    \    $s =~ tr/0-9/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/0-9/0/;\n\
    \    $s =~ tr/A-Z/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/A-Z/0/;\n\
    \    $s =~ tr/a-z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/a-z/0/;\n\
    \    $s =~ tr/0-9/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/0-9/0/;\n\
    \    $s =~ tr/A-Z/0/;\n    $s =~ tr/a-z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/A-Z/0/;\n\
    \    $s =~ tr/a-z/0/;\n    $s =~ tr/0-9/0/;\n    $s =~ tr/A-Z/0/;\n    $s =~ tr/a-z/0/;\n\
    \    $s =~ tr/0-9/0/;\n    $s =\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmp6765xrl7.pl line 65, at end
    of line

    syntax error at /tmp/tmp6765xrl7.pl line 65, near "use Test::Deep"

    Missing right curly or square bracket at /tmp/tmp6765xrl7.pl line 104, at end
    of line

    syntax error at /tmp/tmp6765xrl7.pl line 104, at EOF

    Execution of /tmp/tmp6765xrl7.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    foreach my $char (split(//,\
    \ $s)) {\n        $sum += ord $char;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord(\"A\") + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while($i < $len) {\n        my $c = substr($s, $i, 1);\n\
    \        $sum += ord($c) - ord('A') + 1;\n        $i++;\n    }\n    return $sum;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord('A') + 1;\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        $sum += ord($s[$i]) - ord(\"A\");\n        $i++;\n\
    \    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    foreach my $char (split\
    \ //, $s) {\n        $sum += $char if $char !~ /[A-Z]/;\n    }\n    return $sum;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        my $c = substr($s, $i, 1);\n        if($c eq \"A\"\
    ) {\n            $sum += $c - 64;\n        }\n        $i += 1;\n    }\n    return\
    \ $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    foreach my $char (split(//,\
    \ $s)) {\n        $sum += ord($char) - ord('A') + 1;\n    }\n    return $sum;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
    \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        my $c = substr($s, $i, 1);\n        $sum += ord($c)\
    \ - ord('A') + 1;\n        $i += 1;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while($i < $len) {\n        $sum += ord($s[$i]) - ord('A')\
    \ + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my $sum = 0;\n    my $len = length($s);\n\
    \    my $i = 0;\n    while($i < $len) {\n        $sum += ord($s[$i]) - ord('A')\
    \ + 1;\n        $i++;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"\
    ),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821190
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ tr/A-Z/0/;\n    return $s;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n   \
    \     if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    $s =~ s/[^\\d]//g;\n    $s =~ tr/A-Z//cd;\n\
    \    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&digitSum;\n        if(eq_deeply($candidate->(\"\"),0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum) = 0;\n    foreach my $char (split\
    \ //, $s) {\n        $sum += ord $char;\n    }\n    return $sum;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n        if(eq_deeply($candidate->(\"\
    \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abAB\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"abcCd\"),67)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"helloE\"),69))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    woArBld\"),131)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"aAaaaXa\"),153)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\" How\
    \ are yOu?\"),151)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"You arE Very Smart\"),327)) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1659821191
- exit_code: 1
  program: "# Task\n# Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n# ASCII codes.\n# Examples:\n# digitSum(\"\
    \") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n# digitSum(\"\
    helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\") => 153\n\
    sub digitSum {\n    my($s) = @_;\n    my($sum);\n    foreach my $c (split(//,\
    \ $s)) {\n        $sum += ord($c) - ord('A') + 1;\n    }\n    return $sum;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n \
    \       if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    You arE Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821191

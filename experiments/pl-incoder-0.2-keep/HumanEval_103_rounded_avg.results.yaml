language: pl
name: HumanEval_103_rounded_avg
results:
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n + $m) / 2);\n  \
    \  $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg\
    \ + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n\
    \    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg\
    \ + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n\
    \    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg\
    \ + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n\
    \    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg\
    \ + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n\
    \    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg\
    \ + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n\
    \    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg\
    \ + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n\
    \    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg\
    \ + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n\
    \    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg\
    \ + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n\
    \    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg\
    \ + $avg / 2);\n    $avg = ($avg + $avg / 2);\n    $avg = ($avg + $avg / 2);\n\
    \    $avg = ($avg + \nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmptun9906i.pl line 59, at end
    of line

    syntax error at /tmp/tmptun9906i.pl line 59, near "use Test::Deep"

    Missing right curly or square bracket at /tmp/tmptun9906i.pl line 114, at end
    of line

    syntax error at /tmp/tmptun9906i.pl line 114, at EOF

    Execution of /tmp/tmptun9906i.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = sprintf(\"%b\", $n +\
    \ ($m - $n));\n    return -1 if $avg > $m;\n    return $avg;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = sprintf(\"%b\", $n +\
    \ ($m - $n));\n    my $bin = sprintf(\"%b\", $avg);\n    return $bin if $bin =~\
    \ /^0*1$/;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return -1 if $avg > $m;\n    return $avg;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $i = 0;\n\
    \    while($i < $n) {\n        $sum += $i;\n        $i++;\n    }\n    while($i\
    \ < $m) {\n        $sum += $i;\n        $i++;\n    }\n    return $sum / $m;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    while ($n <= $m) {\n        $sum += $n;\n        $count++;\n      \
    \  $n++;\n    }\n    \n    return $sum / $count if $count > 0;\n    return -1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n += $m;\n    $n -= $m if $n >\
    \ $m;\n    $n -= $m if $n < $m;\n    return $n >= $m ? $n : -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) / $m) * $m;\n\
    \    return $avg if $avg < $n;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    return\
    \ -1 if $n == $m;\n    return $n if $n == 0;\n    return $m if $m == 0;\n    return\
    \ sprintf(\"0b%b\", $n + ($m - $n) / 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return -1 if $n == $m;\n    \n    return sprintf(\"0b%b\", $sum\
    \ / $count) if ($sum / $count) == $sum;\n    \n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    return\
    \ -1 if $n == $m;\n    return sprintf(\"0b%b\", $n + ($m - $n) / 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return -1 if $avg > $m;\n    return sprintf(\"0b%b\", $avg);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 unless $n >= $m;\n  \
    \  my $sum = 0;\n    for (my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return sprintf(\"0b%b\", $sum / $m) if $sum / $m != $sum;\n    return\
    \ -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 unless $n >= $m;\n  \
    \  my $avg = (($n - $m) / $m) * $m;\n    my $bin = Math::BigInt->new($avg);\n\
    \    return $bin->as_hex();\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"\
    0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"0b1111001010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n += $m if $n > $m;\n    return\
    \ -1 if $n > $m;\n    my $s = \"\";\n    my $i = $n;\n    while ($i > $m) {\n\
    \        $s = $i & 1 ? \"1\" : \"0\";\n        $i >>= 1;\n    }\n    $s = $i &\
    \ 1 ? \"1\" : \"0\";\n    $s = $s . $s;\n    return $s;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / 2);\n\
    \    my $bin = sprintf(\"%b\", $avg);\n    return $bin if $bin =~ /^[01]*$/;\n\
    \    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmp5ieethe0.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return -1 if $avg > $m;\n    return sprintf(\"0b%b\", $avg);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = sprintf(\"%b\", $n +\
    \ ($m - $n));\n    return $avg if $avg =~ /^0b/;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: -1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $sum\
    \ = 0;\n    my $count = 0;\n    my $bin = '';\n    while ($n <= $m) {\n      \
    \  $sum += $n;\n        $count++;\n        $bin .= $n & 1 ? \"1\" : \"0\";\n \
    \       $n >>= 1;\n    }\n    $bin .= $sum / $count;\n    return $bin;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659821280
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return -1 if $avg > $m;\n    my $bin = sprintf(\"%b\", $avg);\n    return\
    \ $bin if $bin =~ /[01]/;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    if($count > 0) {\n        return sprintf(\"0b%b\", $sum/$count);\n\
    \    }\n    \n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"\
    0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"0b1111001010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 unless $n > $m;\n   \
    \ my $sum = 0;\n    my $count = 0;\n    my $bin = '';\n    for(my $i = $n; $i\
    \ <= $m; $i++) {\n        $sum += $i;\n        $count++;\n        $bin .= $i &\
    \ 1 ? '1' : '0';\n    }\n    return $sum / $count if $count > 0;\n    return $bin;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    if($n == $m) {\n        return $sum / $count;\n    }\n    return -1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $i = 0;\n\
    \    while($i <= $n && $i <= $m) {\n        $sum += $i;\n        $i++;\n    }\n\
    \    if($i <= $n) {\n        return -1;\n    }\n    return sprintf(\"0b%b\", $sum\
    \ / $i);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / 2);\n\
    \    my $bin = sprintf(\"%b\", $avg);\n    return $bin if $bin =~ /^0*1/;\n  \
    \  return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmpqtwlugdi.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $i = 0;\n\
    \    \n    while ($i < $n && $i < $m) {\n        $sum += $i;\n        $i++;\n\
    \    }\n    \n    if ($i < $n) {\n        return -1;\n    }\n    \n    return\
    \ sprintf(\"0b%b\", $sum / $n);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"\
    0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"0b1111001010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $avg\
    \ = sprintf \"%b%b\", $n, $m;\n    return $avg if $avg =~ /^0b/;\n    return $avg;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n += $m if $n > $m;\n    $n -=\
    \ $m if $n < $m;\n    $n /= $m;\n    $n = int($n+0.5);\n    $n = \"0b\".$n if\
    \ $n < 10;\n    return $n;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return -1 if $avg > $m;\n    return sprintf(\"0b%b\", $avg);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 unless $n <= $m;\n  \
    \  return -1 unless $m == 0;\n    return -1 unless $m == 1;\n    return -1 unless\
    \ $n == 1;\n    return -1 unless $n == $m;\n    return -1 unless $n == $m + 1;\n\
    \    return -1 unless $n == $m + 2;\n    return -1 unless $n == $m + 3;\n    return\
    \ -1 unless $n == $m + 4;\n    return -1 unless $n == $m + 5;\n    return -1 unless\
    \ $n == $m + 6;\n    return -1 unless $n == $m + 7;\n    return -1 unless $n ==\
    \ $m + 8;\n    return -1 unless $n == $m + 9;\n    return -1 unless $n == $m +\
    \ 10;\n    return -1 unless $n == $m + 11;\n    return -1 unless $n == $m + 12;\n\
    \    return -1 unless $n == $m + 13;\n    return -1 unless $n == $m + 14;\n  \
    \  return -1 unless $n == $m + 15;\n    return -1 unless $n == $m + 16;\n    return\
    \ -1 unless $n == $m + 17;\n    return -1 unless $n == $m + 18;\n    return -1\
    \ unless $n == $m + 19;\n    return -1 unless $n == $m + 20;\n    return -1 unless\
    \ $n == $m + 21;\n    return -1 unless $n == $m + 22;\n    return -1 unless $n\
    \ == $m + 23;\n    return -1 unless $n == $m + 24;\n    return -1 unless $n ==\
    \ $m + 25;\n    return -1 unless $n == $m + 26;\n    return -1 unless $n == $m\
    \ + 27;\n    return -1 unless $n == $m + 28;\n    return -1 unless $n == $m +\
    \ 29;\n    return -1 unless $n == $m + 30;\n    return -1 unless $n == $m + 31;\n\
    \    return -1 unless $n == $m + 32;\n    return -1 unless $n == $m + 33;\n  \
    \  return -1 unless $n == $m + 34;\n    return -1 unless $n == $m + 35;\n    return\
    \ -1 unless $n == $m + 36;\n    return -1 unless $n == $m + 37;\n    return -1\
    \ unless $n == $m + 38;\n    return -1 unless $n == $m + 39;\n    return -1 unless\
    \ $n == $m + 40;\n    return -1 unless $n == $m + 41;\n    return -1 unless $n\
    \ == $m + 42;\n    return -1 unless $n == $m + 43;\n    return -1 unless $n ==\
    \ $m + 44;\n    return -1 unless $n == $m + 45;\n    return -1 unless $n == $m\
    \ + 46;\n    return -1 unless $n == $m + 47;\n    return -1 unless $n == $m +\
    \ 48;\n    return -1 unless $n == $m + 49;\n    return \nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: "\"use\" not allowed in expression at /tmp/tmp1oltbru5.pl line 67, near\
    \ \"return \n\"\nsyntax error at /tmp/tmp1oltbru5.pl line 67, near \"return \n\
    use Test::Deep\"\nMissing right curly or square bracket at /tmp/tmp1oltbru5.pl\
    \ line 122, at end of line\nsyntax error at /tmp/tmp1oltbru5.pl line 122, at EOF\n\
    Execution of /tmp/tmp1oltbru5.pl aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    return\
    \ -1 if $n == $m;\n    return $n if $n < $m;\n    my $s = \"\";\n    my $i = $n;\n\
    \    my $j = $m;\n    my $k = 0;\n    while($i <= $j) {\n        $s += \"0\" if\
    \ ($i % 2);\n        $s += \"1\" if ($i % 2);\n        $i += 1;\n        $k +=\
    \ 1;\n    }\n    return $s if ($k % 2);\n    return -1;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    $n -=\
    \ 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n \
    \   $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -=\
    \ 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n \
    \   $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -=\
    \ 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n \
    \   $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -=\
    \ 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n \
    \   $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -=\
    \ 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n \
    \   $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -=\
    \ 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n \
    \   $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -=\
    \ 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n \
    \   $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -=\
    \ 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n \
    \   $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -=\
    \ 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n \
    \   $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -= 1;\n    $n -= 1;\n    $m -=\
    \ 1;\n    $n -= 1;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmp3vfdzzfi.pl line 169,
    at end of line

    syntax error at /tmp/tmp3vfdzzfi.pl line 169, at EOF

    Execution of /tmp/tmp3vfdzzfi.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / 2);\n\
    \    my $bin = sprintf(\"%b\", $avg);\n    return $bin if $bin =~ /^[01]*$/;\n\
    \    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmp5ieethe0.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n += $m if $n > $m;\n    $n -=\
    \ $m if $n < $m;\n    $n /= $m if $n != 0;\n    $n = int($n);\n    $n = \"0b\"\
    \ . sprintf(\"%b\", $n);\n    return $n;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) + $m) / 2;\n\
    \    return $avg if $avg >= 0;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / 2);\n\
    \    return -1 if $avg > $n;\n    return $avg & 1 ? \"0b\" . sprintf(\"%b\", $avg)\
    \ : -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmp2f2wrgqa.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n + $m) / 2);\n  \
    \  return $avg if $avg > $m;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = sprintf(\"%b\", $n +\
    \ ($m - $n));\n    return -1 if $avg > $m;\n    return $avg;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n >= $m;\n    my\
    \ $result = 0;\n    for (my $i = $n; $i <= $m; $i++) {\n        $result += (2\
    \ ** $i);\n    }\n    return sprintf(\"0b%b\", $result);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $i = 0;\n\
    \    my $bin_num = 0;\n    my $bin_str = \"\";\n    \n    while($i <= $m) {\n\
    \        $sum += $n;\n        $i++;\n    }\n    \n    if($sum > $m) {\n      \
    \  return -1;\n    }\n    \n    while($i <= $m) {\n        $bin_num += $i;\n \
    \       $bin_str .= $i & 1 ? \"1\" : \"0\";\n        $i++;\n    }\n    \n    return\
    \ $bin_num;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    return\
    \ -1 if $n == $m;\n    return sprintf(\"0b%b\", $n + ($m - $n) / 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 unless $n <= $m;\n  \
    \  my $avg = (($n + $m) / 2);\n    my $bin = Math::BigInt->new($avg)->bin();\n\
    \    my $len = length($bin);\n    return $bin if $len == 1;\n    return $bin if\
    \ $len == 2;\n    return $bin if $len == 3;\n    return $bin if $len == 4;\n \
    \   return $bin if $len == 5;\n    return $bin if $len == 6;\n    return $bin\
    \ if $len == 7;\n    return $bin if $len == 8;\n    return $bin if $len == 9;\n\
    \    return $bin if $len == 10;\n    return $bin if $len == 11;\n    return $bin\
    \ if $len == 12;\n    return $bin if $len == 13;\n    return $bin if $len == 14;\n\
    \    return $bin if $len == 15;\n    return $bin if $len == 16;\n    return $bin\
    \ if $len == 17;\n    return $bin if $len == 18;\n    return $bin if $len == 19;\n\
    \    return $bin if $len == 20;\n    return $bin if $len == 21;\n    return $bin\
    \ if $len == 22;\n    return $bin if $len == 23;\n    return $bin if $len == 24;\n\
    \    return $bin if $len == 25;\n    return $bin if $len == 26;\n    return $bin\
    \ if $len == 27;\n    return $bin if $len == 28;\n    return $bin if $len == 29;\n\
    \    return $bin if $len == 30;\n    return $bin if $len == 31;\n    return $bin\
    \ if $len == 32;\n    return $bin if $len == 33;\n    return $bin if $len == 34;\n\
    \    return $bin if $len == 35;\n    return $bin if $len == 36;\n    return $bin\
    \ if $len == 37;\n    return $bin if $len == 38;\n    return $bin if $len == 39;\n\
    \    return $bin if $len == 40;\n    return $bin if $len == 41;\n    return $bin\
    \ if $len == 42;\n    return $bin if $len == 43;\n    return $bin if $len == 44;\n\
    \    return $bin if $len == 45;\n    return $bin if $len == 46; \n    return $bin\
    \ if $len == 47; \n    return $bin if $len == 48; \n    return $bin if $len ==\
    \ 49; \n    return $bin if $\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmp4gchfd_g.pl line 66,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmp4gchfd_g.pl line 66, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmp4gchfd_g.pl line 121, at end of line\nsyntax\
    \ error at /tmp/tmp4gchfd_g.pl line 121, at EOF\nExecution of /tmp/tmp4gchfd_g.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / 2);\n\
    \    $avg > $m ? $avg = $m : -1;\n    my $bin = Math::BigInt->new($avg)->as_hex();\n\
    \    $bin =~ s/^0b//;\n    return $bin;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmph_r_wy86.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return -1 if $count < $n;\n    \n    return sprintf(\"0b%b\"\
    , $sum / $count); \n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    return\
    \ -1 if $n == $m;\n    return sprintf(\"0b%b\", $n + ($m - $n) / 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round($n / $m);\n   \
    \ $avg = ($avg + $avg / 2) / 2;\n    return $avg if $avg < $n;\n    return -1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmp_0mpzj3t.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return -1 if $avg > $m;\n    return sprintf(\"0b%b\", $avg);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $result = 0;\n    my $i = 0;\n\
    \    while($i <= $n && $i <= $m) {\n        $result += $i;\n        $i++;\n  \
    \  }\n    if($i <= $m) {\n        $result = -1;\n    }\n    return sprintf(\"\
    0b%b\", $result);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return -1 if $count < $n;\n    \n    return sprintf(\"0b%b\"\
    , $sum / $count) unless $count % 2;\n    \n    return sprintf(\"0b%b\", $sum /\
    \ $count) unless $count % 2;\n    \n    return sprintf(\"0b%b\", $sum / $count);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n += $m if $n > $m;\n    $n -=\
    \ $m if $n < $m;\n    $n /= $m;\n    $n = int($n);\n    $n = $n & 1;\n    return\
    \ $n ? \"0b$n\" : -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / 2);\n\
    \    return $avg if $avg == $n || $avg == $m;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmp2ow4mmqw.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / 2);\n\
    \    my $bin = sprintf(\"%b\", $avg);\n    return $bin if $bin =~ /^[01]*$/;\n\
    \    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmp5ieethe0.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) / $m) * $m;\n\
    \    return $avg if $avg < $n;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n += $m if $n > $m;\n    $n -=\
    \ $m if $n < $m;\n    $n /= $m;\n    $n = int($n);\n    $n = sprintf(\"%b\", $n)\
    \ if $n =~ /[^01]/;\n    return $n;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $avg\
    \ = sprintf \"%b%b\", $n, $m;\n    $avg =~ s/^0b//;\n    return $avg;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) + $m) / 2;\n\
    \    return $avg if $avg == $n || $avg == $m;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n += $m;\n    $n -= $m if $n >\
    \ $m;\n    $n -= $m if $n < $m;\n    return $n >= $m ? $n : -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = sprintf(\"%0*b\", $m,\
    \ $n);\n    return $avg if $avg =~ /^0*$/;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round($n / $m);\n   \
    \ my $bin = sprintf(\"%b\", $avg);\n    return $bin if $bin =~ /^[01]+$/;\n  \
    \  return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmpcr5m_ugp.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) / $m) * $m;\n\
    \    return $avg if $avg == $m || $avg == $n;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $avg\
    \ = sprintf(\"%b\", $n + ($m - $n) / 2);\n    $avg =~ s/^0+//;\n    return $avg;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) / $m) * $m;\n\
    \    return $avg if $avg > $n;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) + $m) / 2;\n\
    \    return $avg if $avg > $n;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return -1 if $count < $n;\n    \n    return sprintf(\"0b%b\"\
    , $sum / $count); \n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = sprintf(\"%b\", $n +\
    \ ($m - $n));\n    my $bin = sprintf(\"%b\", $avg);\n    return $bin if $bin =~\
    \ /1$/;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    my $sum2 = 0;\n    my $count2 = 0;\n    \n    for(my $i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n        $count++;\n    }\n    \n    for(my $i = $n;\
    \ $i <= $m; $i++) {\n        $sum2 += $i;\n        $count2++;\n    }\n    \n \
    \   if($sum2 != 0) {\n        $sum2 = $sum2 / $count2;\n    }\n    \n    if($sum\
    \ != 0) {\n        $sum = $sum / $count;\n    }\n    \n    if($sum != 0) {\n \
    \       $sum = int($sum);\n    }\n    \n    if($sum == -1) {\n        return -1;\n\
    \    }\n    \n    my $binary = \"\";\n    \n    for(my $i = $sum; $i >= 1; $i--)\
    \ {\n        $binary .= $i & 1;\n    }\n    \n    return $binary;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return -1 if $avg > $m;\n    return sprintf(\"0b%b\", $avg);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return -1 if $n == $m;\n    return sprintf(\"0b%b\", $sum / $count)\
    \ if $count > 1;\n    return sprintf(\"0b%b\", $sum / $count);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) + $m) / 2;\n\
    \    return $avg if $avg == $n || $avg == $m;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / 2);\n\
    \    return $avg if $avg != 0;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmpqyseqyqh.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return -1 if $n < $m;\n    \n    return sprintf(\"0b%b\", $sum\
    \ / $count) if $count > 0;\n    \n    return -1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n += $m if $n > $m;\n    $n -=\
    \ $m if $n < $m;\n    $n /= $m;\n    $n = int($n);\n    $n = \"0b\" x $n if $n\
    \ =~ /^0/;\n    return $n;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / 2);\n\
    \    $avg == 0 ? '0b0' : sprintf(\"0b%b\", $avg);\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmpeukdadpl.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) / $m) * $m;\n\
    \    return $avg if $avg == $m || $avg == $n;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    return\
    \ -1 if $n == $m;\n    return sprintf(\"0b%b\", $n + ($m - $n) / 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $sum\
    \ = 0;\n    my $count = 0;\n    while ($n <= $m) {\n        $sum += $n;\n    \
    \    $count++;\n        $n++;\n    }\n    return sprintf(\"0b%b\", $sum / $count);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n + $m) / 2);\n  \
    \  return $avg if $avg == $m || $avg == $n;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return -1 if $avg > $m;\n    my $bin = Math::BigInt->new($avg);\n    return\
    \ $bin->as_hex();\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t locate object method "new" via package "Math::BigInt" (perhaps you
    forgot to load "Math::BigInt"?) at /tmp/tmp1ghbg1j6.pl line 14.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 unless $n <= $m;\n  \
    \  my $result = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my\
    \ $sum = 0;\n    while ($i < $n and $j < $m) {\n        $sum += $i;\n        $j++;\n\
    \    }\n    $result = sprintf(\"0b%b\", $sum / $j);\n    return $result;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return -1 if $count < 2;\n    \n    return sprintf(\"0b%b\"\
    , $sum / $count); \n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $result = 0;\n    my $i = 0;\n\
    \    while($i < $n && $i < $m) {\n        $result += $i;\n        $i++;\n    }\n\
    \    if($i < $n) {\n        $result = -1;\n    }\n    return $result;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: -1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    my $bin = '';\n    \n    while($n <= $m) {\n        $sum += $n;\n       \
    \ $count++;\n        $bin .= $n & 1 ? '1' : '0';\n        $n >>= 1;\n    }\n \
    \   \n    return -1 if $n < $m;\n    \n    return sprintf(\"0b%b\", $sum / $count)\
    \ unless $count;\n    \n    return $bin;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659821280
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    return\
    \ -1 if $n == $m;\n    return sprintf(\"0b%b\", $n + ($m - $n) / 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) + $m) / 2;\n\
    \    return $avg if $avg == $n || $avg == $m;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    if ($avg > $m) {\n        return -1;\n    }\n    my $bin = sprintf(\"%b\"\
    , $avg);\n    return $bin;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) / $m) * $m;\n\
    \    return $avg if $avg == $n || $avg == $m;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $sum\
    \ = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $sum = 0;\n   \
    \ my $count = 0;\n    my $bin = '';\n    while($i < $n && $j < $m) {\n       \
    \ $sum += $i;\n        $bin = sprintf(\"%b\", $sum);\n        $count++;\n    \
    \    $i++;\n        $j++;\n    }\n    $sum = $sum / $count;\n    $bin = sprintf(\"\
    %b\", $sum);\n    $bin = substr($bin, 0, $n) . $bin;\n    return $bin;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return $avg if $avg < $n || $avg > $m;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / $m\
    \ * $m) + $m;\n    my $bin = sprintf(\"%b\", $avg);\n    return $bin if $bin =~\
    \ /^[01]+$/;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"\
    0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"0b1111001010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmpt605aqoy.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) / $m) * $m;\n\
    \    return $avg if $avg < $n;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 unless $n <= $m;\n  \
    \  return -1 if $n > $m;\n    my $avg = sprintf(\"%0*b\", $m+2, $n+$m);\n    $avg\
    \ =~ s/^0+//;\n    return $avg;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"\
    0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"0b1111001010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = sprintf \"%b\", $n +\
    \ ($m - $n) / 2;\n    return $avg if $avg =~ /^0b/;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) / $m) * $m;\n\
    \    return $avg if $avg > $n;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return -1 if $avg > $m;\n    return sprintf(\"0b%b\", $avg);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $avg\
    \ = (($n - $m) / 2) + $m;\n    my $bin = Math::BigInt->new($avg);\n    return\
    \ $bin->as_hex()->as_string();\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"\
    0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"0b1111001010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t locate object method "new" via package "Math::BigInt" (perhaps you
    forgot to load "Math::BigInt"?) at /tmp/tmpva2rbad3.pl line 14.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return $avg if $avg == $n || $avg == $m;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n + $m) / 2);\n  \
    \  return $avg if $avg == $n || $avg == $m;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n+$m)/2);\n   \
    \ return -1 if $avg > $m;\n    return sprintf(\"0b%b\", $avg);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) + $m) / 2;\n\
    \    return $avg if $avg > $n;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) / $m) * $m;\n\
    \    return $avg if $avg == $m || $avg == $n;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) / $m) * $m;\n\
    \    return $avg if $avg < $n;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / 2);\n\
    \    my $bin = sprintf(\"%b\", $avg);\n    return $bin if $bin =~ /^0b/;\n   \
    \ return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmpq058ksmq.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $avg\
    \ = sprintf(\"%b\", $n + ($m - $n) / 2);\n    $avg =~ s/0*$//;\n    return $avg;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) / $m) * $m;\n\
    \    return $avg if $avg > $n;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n += $m;\n    $n -= $m if $n >\
    \ $m;\n    return $n >= $m ? $n : -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) / $m) * $m;\n\
    \    return $avg if $avg > $n;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round($n / $m);\n   \
    \ my $bin = Math::BigInt->new($avg);\n    return $bin->as_hex;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmpddne6p96.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round($n / $m);\n   \
    \ my $bin = sprintf(\"%b\", $avg);\n    return $bin if $bin =~ /^0b/;\n    return\
    \ -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmp0ana2dhm.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n+$m)/2);\n    $avg\
    \ = ($avg + $avg)/2;\n    $avg =~ s/^0*//;\n    $avg =~ s/^1//;\n    return $avg;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    return\
    \ -1 if $n == $m;\n    return sprintf(\"0b%b\", $n + ($m - $n) / 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = sprintf(\"%0*b\", $m,\
    \ $n);\n    return $avg if $avg =~ /^0*1$/;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $i = 0;\n\
    \    while($i < $n || $i < $m) {\n        $sum += $i if $i < $n;\n        $sum\
    \ += $m if $i < $m;\n        $i++;\n    }\n    return $sum / 2 if $sum / 2;\n\
    \    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: -1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    my $bin = '';\n    \n    while ($n <= $m) {\n        $sum += $n;\n      \
    \  $count++;\n        $bin .= $n & 1 ? '1' : '0';\n        $n >>= 1;\n    }\n\
    \    \n    if ($n > 0) {\n        $bin .= '1';\n    }\n    \n    return $sum /\
    \ $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659821280
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return -1 if $count > $m;\n    return sprintf(\"0b%b\", $sum / $count);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n+$m)/2);\n    my\
    \ $bin = Math::BigInt->new($avg)->as_int();\n    return $bin if $bin < $m;\n \
    \   return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t locate object method "new" via package "Math::BigInt" (perhaps you
    forgot to load "Math::BigInt"?) at /tmp/tmprtwd_8u5.pl line 13.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return -1 if $count < $n;\n    \n    return sprintf(\"0b%b\"\
    , $sum / $count); \n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $result = 0;\n    my $i = $n;\n\
    \    my $j = $m;\n    my $sum = 0;\n    my $count = 0;\n    while($i < $j) {\n\
    \        $sum += $i;\n        $count++;\n        $i++;\n    }\n    $result = $sum\
    \ / $count;\n    $result = sprintf(\"%b\", $result);\n    return $result;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return -1 if $count < $n;\n    \n    my $avg = sprintf(\"%b\"\
    , $sum / $count);\n    \n    return $avg;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return -1 if $avg > $m;\n    return sprintf(\"0b%b\", $avg);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    my $base = 1;\n    \n    while ($n >= $m) {\n        $sum += $n;\n      \
    \  $count++;\n        $n--;\n    }\n    \n    if ($n > 0) {\n        $sum += $n;\n\
    \        $count++;\n    }\n    \n    $sum = $sum / $count;\n    \n    return sprintf(\"\
    0b%b\", $sum);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) + $m) / 2;\n\
    \    my $bin = Math::BigInt->new($avg)->as_hex();\n    return $bin if $bin =~\
    \ /^0*$/;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t locate object method "new" via package "Math::BigInt" (perhaps you
    forgot to load "Math::BigInt"?) at /tmp/tmpr0jmkqc5.pl line 13.

    '
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    return\
    \ -1 if $n == $m;\n    return sprintf(\"0b%b\", $n + ($m - $n) / 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return -1 if $n < $m;\n    return $sum / $count if $count > 1;\n \
    \   return sprintf(\"0b%b\", $sum);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    $n =\
    \ 0 if $n < 0;\n    $m = $n if $m > $n;\n    $m = $n if $m == 0;\n    $n = $n\
    \ - $m if $n < $m;\n    $m = $n - $m if $m > $n;\n    $m = $m if $m == 0;\n  \
    \  $n = $n + ($m / 2);\n    $m = $n - ($m / 2);\n    $m = $m if $m == 0;\n   \
    \ $n = $n + ($m / 2);\n    $m = $n - ($m / 2);\n    $m = $m if $m == 0;\n    $n\
    \ = $n + ($m / 2);\n    $m = $n - ($m / 2);\n    $m = $m if $m == 0;\n    $n =\
    \ $n + ($m / 2);\n    $m = $n - ($m / 2);\n    $m = $m if $m == 0;\n    $n = $n\
    \ + ($m / 2);\n    $m = $n - ($m / 2);\n    $m = $m if $m == 0;\n    $n = $n +\
    \ ($m / 2);\n    $m = $n - ($m / 2);\n    $m = $m if $m == 0;\n    $n = $n + ($m\
    \ / 2);\n    $m = $n - ($m / 2);\n    $m = $m if $m == 0;\n    $n = $n + ($m /\
    \ 2);\n    $m = $n - ($m / 2);\n    $m = $m if $m == 0;\n    $n = $n + ($m / 2);\n\
    \    $m = $n - ($m / 2);\n    $m = $m if $m == 0;\n    $n = $n + ($m / 2);\n \
    \   $m = $n - ($m / 2);\n    $m = $m if $m == 0;\n    $n = $n + ($m / 2);\n  \
    \  $m = $n - ($m / 2);\n    $m = $m if $m == 0;\n    $n = $n + ($m / 2);\n   \
    \ $m = $n - ($m / 2);\n    $m = $m if $m == 0;\n    $n = $n + ($m / 2);\n    $m\
    \ = $n - ($m / 2);\n    $m = $m if $m == 0;\n    $n = $n + ($m / 2);\n    $m =\
    \ $n - ($m / 2);\n    $m = $m if $m == 0;\n    $n = $n + ($m / 2);\n    $m = $n\
    \ - ($m / 2);\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmptc_9vpcv.pl line 119,
    at end of line

    syntax error at /tmp/tmptc_9vpcv.pl line 119, at EOF

    Execution of /tmp/tmptc_9vpcv.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return -1 if $avg > $m;\n    return $avg if $avg == $n;\n    return sprintf(\"\
    0b%b\", $avg);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n += $m if $n > $m;\n    $n -=\
    \ $m if $n < $m;\n    $n /= $m if $n != 0;\n    $n = int($n);\n    $n = sprintf(\"\
    %b\", $n);\n    return $n;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 unless $n > $m;\n   \
    \ return -1 if $n == $m;\n    $n -= 1;\n    $m -= 1;\n    my $sum = 0;\n    my\
    \ $count = 0;\n    while ($n <= $m) {\n        $sum += $n;\n        $count++;\n\
    \        $n++;\n    }\n    return sprintf(\"0b%b\", $sum / $count) unless $count\
    \ == 0;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return -1 if $avg > $m;\n    return sprintf(\"0b%b\", $avg);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / $m)\
    \ * $m;\n    my $bin = sprintf(\"%b\", $avg);\n    return $bin if $bin =~ /^[01]+$/;\n\
    \    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmph29ljd72.pl line 12.

    '
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 unless $n >= $m;\n  \
    \  my $sum = 0;\n    my $count = 0;\n    my $base = 1;\n    while ($n < $m) {\n\
    \        $sum += $base * ($n++);\n        $count++;\n        $base *= 2;\n   \
    \ }\n    return sprintf(\"0b%b\", $sum / $count) if $count;\n    return -1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) / $m) * $m;\n\
    \    my $bin = Math::BigInt->new($avg)->as_int();\n    return $bin if $bin < 0;\n\
    \    return $bin->as_hex();\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"\
    0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"0b1111001010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t locate object method "new" via package "Math::BigInt" (perhaps you
    forgot to load "Math::BigInt"?) at /tmp/tmp6mhxkpdc.pl line 13.

    '
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    return\
    \ -1 if $n == $m;\n    return $n if $n == 0;\n    return $m if $m == 0;\n    return\
    \ sprintf(\"0b%b\", $n + ($m - $n) / 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n+$m)/2);\n   \
    \ return -1 if $avg > $m;\n    return $avg if $avg == $n;\n    return sprintf(\"\
    0b%b\", $avg);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    return\
    \ -1 if $n == $m;\n    return sprintf(\"0b%b\", $n + ($m - $n) / 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / 2);\n\
    \    return $avg if $avg == $n || $avg == $m;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmp2ow4mmqw.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $i = 0;\n\
    \    while($i < $n && $i < $m) {\n        $sum += $i;\n        $i++;\n    }\n\
    \    return -1 if $n > $m;\n    return $sum / $n if $n > $m;\n    return $sum\
    \ / $m;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n+$m)/2);\n    return\
    \ $avg if $avg > $m;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / $m)\
    \ * $m;\n    my $bin = sprintf(\"%b\", $avg);\n    return $bin if $bin =~ /^[01]+$/;\n\
    \    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmph29ljd72.pl line 12.

    '
  stdout: ''
  timestamp: 1659821276
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / $m);\n\
    \    $avg == 0 ? '0b0' : sprintf(\"0b%b\", $avg);\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmp8qazots5.pl line 12.

    '
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    if ($avg == $n) {\n        return \"0b$avg\";\n    }\n    return -1;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    $n -=\
    \ 1;\n    $m -= 1;\n    $n = $n / 2;\n    $m = $m / 2;\n    $n = sprintf(\"%b\"\
    , $n);\n    $m = sprintf(\"%b\", $m);\n    return $n . $m;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / $m)\
    \ * $m;\n    return $avg if $avg < $n;\n    return -1;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmp7kxm_a1c.pl line 12.

    '
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return $avg if $avg == $n || $avg == $m;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    my $bin = sprintf(\"%b\", $avg);\n    return $bin if $bin =~ /^0b/;\n   \
    \ return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / 2);\n\
    \    my $bin = sprintf(\"%b\", $avg);\n    return $bin if $bin =~ /^0*$/;\n  \
    \  return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmp312i6y8g.pl line 12.

    '
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    return\
    \ -1 if $n == $m;\n    return sprintf(\"0b%b\", $n + ($m - $n) / 2);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $sum\
    \ = 0;\n    my $count = 0;\n    my $bin = '';\n    while($n <= $m) {\n       \
    \ $sum += $n;\n        $count++;\n        $bin .= $sum % 2;\n        $sum = $sum\
    \ / 2;\n    }\n    return $bin if $count == 0;\n    return $bin if $count == 1;\n\
    \    return $bin if $count == 2;\n    return $bin if $count == 3;\n    return\
    \ $bin if $count == 4;\n    return $bin if $count == 5;\n    return $bin if $count\
    \ == 6;\n    return $bin if $count == 7;\n    return $bin if $count == 8;\n  \
    \  return $bin if $count == 9;\n    return $bin if $count == 10;\n    return $bin\
    \ if $count == 11;\n    return $bin if $count == 12;\n    return $bin if $count\
    \ == 13;\n    return $bin if $count == 14;\n    return $bin if $count == 15;\n\
    \    return $bin if $count == 16;\n    return $bin if $count == 17;\n    return\
    \ $bin if $count == 18;\n    return $bin if $count == 19;\n    return $bin if\
    \ $count == 20;\n    return $bin if $count == 21;\n    return $bin if $count ==\
    \ 22;\n    return $bin if $count == 23;\n    return $bin if $count == 24;\n  \
    \  return $bin if $count == 25;\n    return $bin if $count == 26;\n    return\
    \ $bin if $count == 27;\n    return $bin if $count == 28;\n    return $bin if\
    \ $count == 29;\n    return $bin if $count == 30;\n    return $bin if $count ==\
    \ 31;\n    return $bin if $count == 32;\n    return $bin if $count == 33;\n  \
    \  return $bin if $count == 34;\n    return $bin if $count == 35;\n    return\
    \ $bin if $count == 36;\n    return $bin if $count == 37;\n    return $bin if\
    \ $count == 38;\n    return $bin if $count == 39;\n    return $bin if $count ==\
    \ 40;\n    return $bin if $count == 41;\n    return $bin if $count == 42;\n  \
    \  return $bin if $count == 43;\n    return $bin if $count == 44;\n    return\
    \ $bin if $count == 45;\n    return $bin if $count == 46;\n    return $bin if\
    \ $count == 47;\n    return $bin if $count == 48;\n    return $bin if $count ==\
    \ 49;\n    return $bin if $count == 50;\n    return $bin if $count == 51;\n  \
    \  return $bin if $count == 5\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmp7hx3au67.pl line 75, at end
    of line

    syntax error at /tmp/tmp7hx3au67.pl line 75, near "use Test::Deep"

    Missing right curly or square bracket at /tmp/tmp7hx3au67.pl line 130, at end
    of line

    syntax error at /tmp/tmp7hx3au67.pl line 130, at EOF

    Execution of /tmp/tmp7hx3au67.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 if $n > $m;\n    my $avg\
    \ = sprintf \"%b\", $n + ($m - $n) / 2;\n    return $avg if $avg =~ /^[01]*$/;\n\
    \    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return -1 if $n == $m;\n    return sprintf(\"0b%b\", $sum / $count);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) / $m) * $m;\n\
    \    $avg += $m if $n > $m;\n    return $avg if $avg < 0;\n    return sprintf(\"\
    0b%b\", $avg);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n += $m if $n > $m;\n    $n -=\
    \ $m if $n < $m;\n    $n /= 2 if $n % 2;\n    $n = int($n);\n    $m = int($m);\n\
    \    return $n if $n < $m;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n += $m;\n    $n -= $m if $n >\
    \ $m;\n    $n -= $m if $n < $m;\n    return $n >> 1 if ($n & 1);\n    return -1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n += $m;\n    $n -= $m if $n >\
    \ $m;\n    return $n ? sprintf(\"0b%b\", $n) : -1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 unless $n >= $m;\n  \
    \  my $avg = (($n + $m) / 2);\n    my $bin = Math::BigInt->new($avg)->bin();\n\
    \    return $bin if $bin;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) + $m) / 2;\n\
    \    my $bin = Math::BigInt->new($avg)->bin();\n    return $bin if $bin =~ /^0*1$/;\n\
    \    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t locate object method "new" via package "Math::BigInt" (perhaps you
    forgot to load "Math::BigInt"?) at /tmp/tmp577hvzzt.pl line 13.

    '
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 unless $n <= $m;\n  \
    \  my $avg = (($n+$m)/2);\n    my $bin = sprintf(\"%b\", $avg);\n    return $bin\
    \ if $bin =~ /^[01]+$/;\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / $m,\
    \ 0);\n    return $avg == $n ? $avg : -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmp1ynfx9ne.pl line 12.

    '
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return -1 if $avg > $m;\n    return sprintf(\"0b%b\", $avg);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    my $bin = '';\n    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    \n    if($count > 0) {\n        $bin =\
    \ sprintf(\"%b\", $sum / $count);\n    }\n    \n    return $bin if $bin =~ /^0*1$/;\n\
    \    \n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / $m);\n\
    \    return $avg if $avg == $n || $avg == $m;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmptmao2va0.pl line 12.

    '
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return -1 if $n < $m;\n    return sprintf(\"0b%b\", $sum / $count);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!
  timestamp: 1659821276
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = round(($n - $m) / 2);\n\
    \    return $avg if $avg == $n || $avg == $m;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::round called at /tmp/tmp2ow4mmqw.pl line 12.

    '
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    $n += $m;\n    $n -= $m if $n >\
    \ $m;\n    $n -= $m if $n < $m;\n    return $n >= $m ? $n : -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    my $bin = '';\n    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n        $bin .= $i & 1 ? \"1\" : \"0\";\n    }\n\
    \    \n    if($count > 0) {\n        $bin .= $sum / $count;\n    }\n    \n   \
    \ return $bin;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 unless $n <= $m;\n  \
    \  my $avg = (($n+$m)/2)/2;\n    my $bin = Math::BigInt->new($avg);\n    return\
    \ $bin->as_hex()->as_string();\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"\
    0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"0b1111001010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t locate object method "new" via package "Math::BigInt" (perhaps you
    forgot to load "Math::BigInt"?) at /tmp/tmpexhel6pk.pl line 14.

    '
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    return -1 unless $n >= $m;\n  \
    \  my $sum = 0;\n    my $i = 0;\n    while($i < $n) {\n        $sum += $i;\n \
    \       $i++;\n    }\n    $sum = $sum / $n;\n    my $bin = Math::BigInt->new($sum);\n\
    \    return $bin->as_hex();\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"\
    0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"0b1111001010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    \n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
    \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
    )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
    \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $i = 0;\n\
    \    \n    while ($i < $n and $i < $m) {\n        $sum += $i;\n        $i++;\n\
    \    }\n    \n    if ($i < $n) {\n        $sum += $n - $i;\n        $i++;\n  \
    \  }\n    \n    if ($i < $m) {\n        $sum += $m - $i;\n        $i++;\n    }\n\
    \    \n    if ($sum < 0) {\n        return -1;\n    }\n    \n    return sprintf\
    \ \"0b%b\", $sum;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&rounded_avg;\n        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 13),\"0b1010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(964, 977),\"0b1111001010\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(996,\
    \ 997),\"0b1111100100\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(560, 851),\"0b1011000010\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(185,\
    \ 546),\"0b101101110\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(362, 496),\"0b110101101\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(350,\
    \ 902),\"0b1001110010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(197, 233),\"0b11010111\")) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(7,\
    \ 5),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->(5, 1),-1)) {\n        print \"ok!\" }else{\n    \
    \    exit 1;\n        }\n        if(eq_deeply($candidate->(5, 5),\"0b101\")) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821276
- exit_code: 255
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = (($n - $m) / $m) * $m;\n\
    \    my $bin = Math::BigInt->new($avg);\n    return $bin->as_hex();\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: 'Can''t locate object method "new" via package "Math::BigInt" (perhaps you
    forgot to load "Math::BigInt"?) at /tmp/tmp4a0p040q.pl line 13.

    '
  stdout: ''
  timestamp: 1659821276
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $avg = int(($n + $m) / 2);\n\
    \    return $avg if $avg < $n || $avg > $m;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275
- exit_code: 1
  program: "# You are given two positive integers n and m, and your task is to compute\
    \ the\n# average of the integers from n through m (including n and m). \n# Round\
    \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
    \ than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\n# rounded_avg(7,\
    \ 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20, 33) => \"0b11010\"\
    \nsub rounded_avg {\n    my($n, $m) = @_;\n    my $sum = 0;\n    my $count = 0;\n\
    \    while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n        if(eq_deeply($candidate->(1,\
    \ 5),\"0b11\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(7, 13),\"0b1010\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964, 977),\"\
    0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
    \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n \
    \       }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
    \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
    \      }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
    \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
    \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    }\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821275

name: HumanEval_85_add
language: humaneval_to_perl.py
prompt: "# Given a non-empty list of integers lst. add the even elements that are\
  \ at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\nsub add {\n    my($lst)\
  \ = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&add;\n  \
  \      if(eq_deeply($candidate->([4, 88]),88)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([4, 5, 6, 7, 2, 122]),122))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
  \ 0, 6, 7]),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
  \      if(eq_deeply($candidate->([4, 4, 6, 8]),12)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $sum = 0;\n    foreach my $i (0 .. $#lst) {\n        if ($i\
    \ % 2 == 0) {\n            $sum += $lst[$i];\n        }\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    foreach my $i (0..$#$lst) {\n        if ($i % 2 !=\
    \ 0) {\n            $sum += $lst[$i];\n        }\n    }\n    return $sum;\n}",
  "    my $sum = 0;\n    my $i = 0;\n    while($i < @$lst) {\n        if($i % 2 ==\
    \ 0) {\n            $sum += $lst->[$i];\n        }\n        $i++;\n    }\n   \
    \ return $sum;\n}", "    my $sum = 0;\n    my $i = 0;\n    while($i < @$lst) {\n\
    \        if($i % 2 == 0) {\n            $sum += $lst->[$i];\n        }\n     \
    \   $i++;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    foreach my $i (0\
    \ .. $#lst) {\n        if ($i % 2 == 0) {\n            $sum += $lst[$i];\n   \
    \     }\n    }\n    return $sum;\n}", "    my $sum = 0;\n    foreach my $i (0\
    \ .. $#lst) {\n        if ($i % 2 == 0) {\n            $sum += $lst[$i];\n   \
    \     }\n    }\n    return $sum;\n}", "    my $even = 0;\n    my $odd = 0;\n \
    \   my $sum = 0;\n    foreach my $num (@$lst) {\n        if ($num % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    if ($even > $odd) {\n        $sum = $even + $odd;\n    } else {\n       \
    \ $sum = $even + $odd;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    foreach\
    \ my $i (@$lst) {\n        if ($i % 2 == 0) {\n            $sum += $i;\n     \
    \   }\n    }\n    return $sum;\n}", "    my $sum = 0;\n    my $i = 0;\n    while($i\
    \ < @$lst) {\n        if($i % 2 == 0) {\n            $sum += $lst->[$i];\n   \
    \     }\n        $i++;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    my\
    \ $i = 0;\n    while($i < @$lst) {\n        if($i % 2 == 0) {\n            $sum\
    \ += $lst->[$i];\n        }\n        $i++;\n    }\n    return $sum;\n}", "   \
    \ my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i % 2 == 0) {\n    \
    \        $sum += $i;\n        }\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    my $i = 0;\n    while($i < @$lst) {\n        if($i % 2 == 0) {\n        \
    \    $sum += $lst->[$i];\n        }\n        $i++;\n    }\n    return $sum;\n}",
  "    my $sum = 0;\n    foreach my $i (@$lst) {\n        if ($i % 2 == 1) {\n   \
    \         $sum += $i;\n        }\n    }\n    return $sum;\n}", "    my $even =\
    \ 0;\n    my $odd = 0;\n    my $sum = 0;\n    foreach my $num (@$lst) {\n    \
    \    if ($num % 2 == 0) {\n            $even += $num;\n        } else {\n    \
    \        $odd += $num;\n        }\n    }\n    $sum += $even;\n    $sum += $odd;\n\
    \    return $sum;\n}", "    my $sum = 0;\n    my $i = 0;\n    while($i < @$lst)\
    \ {\n        if($i % 2 == 0) {\n            $sum += $lst->[$i];\n        }\n \
    \       $i++;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    foreach my\
    \ $i (@$lst) {\n        if ($i%2 == 1) {\n            $sum += $i;\n        }\n\
    \    }\n    return $sum;\n}", "    my $sum = 0;\n    foreach my $i (@$lst) {\n\
    \        if ($i % 2 == 0) {\n            $sum += $i;\n        }\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for(my $i = 0; $i < @$lst; $i++) {\n     \
    \   if($i % 2 == 0) {\n            $sum += $lst->[$i];\n        }\n    }\n   \
    \ return $sum;\n}", "    my $even = 0;\n    my $odd = 0;\n    foreach my $num\
    \ (@$lst) {\n        if ($num % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    return $even + $odd;\n}", "  \
    \  my $sum = 0;\n    my $i = 0;\n    while($i < @$lst) {\n        if($i % 2 ==\
    \ 0) {\n            $sum += $lst->[$i];\n        }\n        $i++;\n    }\n   \
    \ return $sum;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

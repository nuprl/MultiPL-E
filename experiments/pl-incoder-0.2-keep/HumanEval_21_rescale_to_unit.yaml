completions:
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
  \        $max = $number if $number > $max;\n        push(@rescaled, $number * ($max\
  \ - $min) / $max);\n    }\n    return @rescaled;\n}"
- "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number > $max_number)\
  \ {\n            $max_number = $number;\n        }\n        if ($number < $min_number)\
  \ {\n            $min_number = $number;\n        }\n    }\n    foreach my $number\
  \ (@$numbers) {\n        my $new_number = $number - $min_number;\n        $new_number\
  \ /= ($max_number - $min_number);\n        $new_number *= $max_number;\n       \
  \ $new_number += $min_number;\n        push @rescaled_numbers, $new_number;\n  \
  \  }\n    return @rescaled_numbers;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        }\n        if ($number > $max) {\n            $max\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$number]\
  \ = $number - $min;\n    }\n    return @rescaled;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n        if ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $new_number\
  \ = ($number - $min) / ($max - $min);\n        push @rescaled, $new_number;\n  \
  \  }\n    return @rescaled;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
  \ - $min) / length($numbers);\n    my $result = [];\n    foreach my $number (@$numbers)\
  \ {\n        $result[$number] = $min + ($number * $scale);\n    }\n    return $result;\n\
  }"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my @rescaled;\n\
  \    foreach my $num (@$numbers) {\n        $num = $num - $min;\n        $num =\
  \ $num / $max - $min;\n        push(@rescaled, $num);\n    }\n    return \\@rescaled;\n\
  }"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = 1.0 / $range;\n    my @rescaled;\n    foreach my $num\
  \ (@$numbers) {\n        $rescaled[$_] = $num * $scale;\n    }\n    return @rescaled;\n\
  }"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0\
  \ * ($max - $min);\n    my @rescaled = ();\n    foreach my $num (@$numbers) {\n\
  \        $rescaled[$num] = $num / $scale;\n    }\n    return @rescaled;\n}"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        }\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
  \ $rescaled_number = $number - $min;\n        $rescaled_numbers[$#rescaled_numbers\
  \ + 1] = $rescaled_number / $max - $min;\n    }\n    return @rescaled_numbers;\n\
  }"
- "    my @rescaled_numbers = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @$rescaled_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n\
  \    my $new_range = abs($new_max - $new_min);\n    my $scale = $new_range / $range;\n\
  \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[$number]\
  \ = $new_min + $scale * ($number - $min);\n    }\n    return $new_numbers;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        my $new_number = $number - $min;\n\
  \        $new_number /= $max - $min;\n        push @rescaled, $new_number;\n   \
  \     $min = $number;\n        $max = $number;\n    }\n    return @rescaled;\n}"
- "    my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @rescaled_numbers;\n}"
- "    my @rescaled;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $num (@$numbers)\
  \ {\n        $num = $num * $scale;\n        push(@rescaled, $num);\n    }\n    return\
  \ @rescaled;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        my $new_number = $number - $min;\n\
  \        $new_number /= ($max - $min);\n        $rescaled[$#rescaled + 1] = $new_number;\n\
  \        $min = $number;\n        $max = $number;\n    }\n    return @rescaled;\n\
  }"
- "    my @rescaled_numbers = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $range = $max - $min;\n    my $scale = $range / $numbers[0];\n    foreach\
  \ my $number (@$numbers) {\n        $rescaled_numbers[$number] = $min + ($number\
  \ * $scale);\n    }\n    return @rescaled_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n\
  \    my $new_range = abs($new_max - $new_min);\n    my $scale = $new_range / $range;\n\
  \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[]\
  \ = $new_min + ($number * $scale);\n    }\n    return @$new_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = $range / $numbers[0];\n    my $new_numbers = ();\n \
  \   foreach my $number (@$numbers) {\n        $new_numbers->[$number] = $number\
  \ * $scale;\n    }\n    return $new_numbers;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number > $max) {\n            $max\
  \ = $number;\n        }\n        if ($number < $min) {\n            $min = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $scaled = $number\
  \ - $min;\n        $scaled /= ($max - $min);\n        push(@rescaled, $scaled);\n\
  \    }\n    return @rescaled;\n}"
- "    my @rescaled;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / @$numbers;\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled[$number] = $min + $scale * $number;\n    }\n    return @rescaled;\n\
  }"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
  \ - $min) / length($numbers);\n    my @rescaled = ();\n    foreach my $num (@$numbers)\
  \ {\n        $rescaled[$_] = $num + $min * $scale;\n    }\n    return @rescaled;\n\
  }"
- "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        my $new_number = $number - $min;\n\
  \        $new_number /= $max - $min;\n        $rescaled_numbers->[$_] = $new_number;\n\
  \        $min = $number;\n        $max = $number;\n    }\n    return @rescaled_numbers;\n\
  }"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        }\n        if ($number > $max) {\n            $max\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
  \ = $number - $min;\n    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $min > $number ? $min : $number;\n\
  \        $max = $max < $number ? $max : $number;\n    }\n    my $scale = ($max -\
  \ $min) / ($numbers[-1] - $numbers[0]);\n    foreach my $number (@$numbers) {\n\
  \        $rescaled_numbers[$number] = $min + ($number - $min) * $scale;\n    }\n\
  \    return @$rescaled_numbers;\n}"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        }\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
  \ = $number - $min;\n    }\n    return @rescaled_numbers;\n}"
- "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my $range = 1 -\
  \ $min / $max;\n    my @rescaled = map { $_ * $range } @$numbers;\n    return @rescaled;\n\
  }"
- "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min_number = $number\
  \ if $number < $min_number;\n        $max_number = $number if $number > $max_number;\n\
  \        $rescaled_numbers[$#rescaled_numbers + 1] = $number - $min_number;\n  \
  \  }\n    return @rescaled_numbers;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n        if ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $rescaled =\
  \ ($number - $min) / ($max - $min);\n        push(@rescaled, $rescaled);\n    }\n\
  \    return @rescaled;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = $range / $numbers[0];\n    my @rescaled;\n    foreach\
  \ my $number (@$numbers) {\n        $rescaled[$number] = $number * $scale;\n   \
  \ }\n    return @rescaled;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        } elsif ($number < $min) {\n            $min = $number;\n\
  \        } else {\n            $rescaled[$#rescaled + 1] = $number - $min;\n   \
  \     }\n    }\n    return @rescaled;\n}"
- "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my @rescaled;\n\
  \    my $scale = ($max - $min) / @$numbers;\n    foreach my $number (@$numbers)\
  \ {\n        push @rescaled, $min + ($number - $min) * $scale;\n    }\n    return\
  \ @rescaled;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number < $min) {\n            $min\
  \ = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $scale = $number\
  \ - $min;\n        $rescaled[$_] = $scale / $max - $min;\n    }\n    return @rescaled;\n\
  }"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
  \ = $number - $min;\n    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $range = $max - $min;\n    my $scale = $range / @$numbers;\n    foreach\
  \ my $number (@$numbers) {\n        $rescaled_numbers[$number] = $min + $range *\
  \ $number / $scale;\n    }\n    return @$rescaled_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = 1 -\
  \ $min + $max;\n    my $scale = $range / $numbers[0];\n    my @new_numbers = ();\n\
  \    foreach my $number (@$numbers) {\n        $new_numbers[] = $number * $scale;\n\
  \    }\n    return @new_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number > $max_number)\
  \ {\n            $max_number = $number;\n        }\n        if ($number < $min_number)\
  \ {\n            $min_number = $number;\n        }\n    }\n    foreach my $number\
  \ (@$numbers) {\n        my $new_number = ($number - $min_number) / ($max_number\
  \ - $min_number);\n        push(@rescaled_numbers, $new_number);\n    }\n    return\
  \ @rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $range = abs($max - $min);\n    my $scale = $range / $numbers[0];\n    foreach\
  \ my $number (@$numbers) {\n        my $new_number = $number * $scale;\n       \
  \ $new_number += $min;\n        $new_number /= $range;\n        push @rescaled_numbers,\
  \ $new_number;\n    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @$rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        }\n        if ($number > $max) {\n            $max\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
  \ $new_number = ($number - $min) / ($max - $min);\n        push(@rescaled_numbers,\
  \ $new_number);\n    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $smallest = $numbers[0];\n    my $largest\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number > $largest)\
  \ {\n            $largest = $number;\n        }\n        if ($number < $smallest)\
  \ {\n            $smallest = $number;\n        }\n    }\n    foreach my $number\
  \ (@$numbers) {\n        my $new_number = $number - $smallest;\n        $new_number\
  \ /= $largest;\n        $new_number *= $largest;\n        $new_number += $smallest;\n\
  \        push(@rescaled_numbers, $new_number);\n    }\n    return @rescaled_numbers;\n\
  }"
- "    my @rescaled_numbers = ();\n    my $smallest_number = $numbers[0];\n    my\
  \ $largest_number = $numbers[0];\n    foreach my $number (@$numbers) {\n       \
  \ if ($number > $largest_number) {\n            $largest_number = $number;\n   \
  \     }\n        if ($number < $smallest_number) {\n            $smallest_number\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
  \ $new_number = $smallest_number + ($number - $smallest_number) / ($largest_number\
  \ - $smallest_number);\n        push(@rescaled_numbers, $new_number);\n    }\n \
  \   return @rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers->[$_]\
  \ = $number - ($min * $_ / $max);\n    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] =\
  \ $number - $min;\n    }\n    return @rescaled;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number < $min) {\n            $min\
  \ = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] =\
  \ $number - $min if $number > $min;\n        $rescaled[$_] = $max - $number if $number\
  \ < $max;\n    }\n    return @rescaled;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        } elsif ($number < $min) {\n            $min = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $scale = ($number\
  \ - $min) / ($max - $min);\n        push(@rescaled, $scale * $max);\n    }\n   \
  \ return @rescaled;\n}"
- "    my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / @$numbers;\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @$rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        }\n        if ($number > $max) {\n            $max\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
  \ $rescaled_number = $number - $min;\n        $rescaled_numbers[$#rescaled_numbers\
  \ + 1] = $rescaled_number / $max - $min;\n    }\n    return @rescaled_numbers;\n\
  }"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        }\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$number]\
  \ = $number - $min;\n    }\n    return @rescaled;\n}"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
  \        $max = $number if $number > $max;\n    }\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + ($max - $min) * $number / $max;\n\
  \    }\n    return @$numbers;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number > $max) {\n            $max\
  \ = $number;\n        }\n        if ($number < $min) {\n            $min = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $rescaled =\
  \ ($number - $min) / ($max - $min);\n        push(@rescaled, $rescaled);\n    }\n\
  \    return @rescaled;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
  \ - $min) / $numbers;\n    my @rescaled = ();\n    foreach my $num (@$numbers) {\n\
  \        $rescaled[$num] = $num * $scale;\n    }\n    return @rescaled;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n\
  \    my $new_range = abs($new_max - $new_min);\n    my $scale = $range / $new_range;\n\
  \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[$number]\
  \ = $new_min + ($number - $min) * $scale;\n    }\n    return $new_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number > $max_number)\
  \ {\n            $max_number = $number;\n        }\n        if ($number < $min_number)\
  \ {\n            $min_number = $number;\n        }\n    }\n    foreach my $number\
  \ (@$numbers) {\n        my $new_number = $number - $min_number;\n        $new_number\
  \ *= $max_number / $min_number;\n        $new_number += $min_number;\n        push(@rescaled_numbers,\
  \ $new_number);\n    }\n    return @rescaled_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = $range / $min;\n    my $result = [];\n    foreach my\
  \ $num (@$numbers) {\n        $result[$num] = $num * $scale;\n    }\n    return\
  \ @$result;\n}"
- "    my @rescaled_numbers = ();\n    my $smallest_number = $numbers[0];\n    my\
  \ $largest_number = $numbers[0];\n    foreach my $number (@$numbers) {\n       \
  \ if ($number < $smallest_number) {\n            $smallest_number = $number;\n \
  \       }\n        if ($number > $largest_number) {\n            $largest_number\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
  \ = $smallest_number + ($number - $smallest_number) / ($largest_number - $smallest_number);\n\
  \    }\n    return @$numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $rescaled =\
  \ ($number - $min) / ($max - $min);\n        push(@rescaled_numbers, $rescaled);\n\
  \    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] =\
  \ $number - $min;\n    }\n    return @rescaled;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number > $max) {\n            $max\
  \ = $number;\n        } elsif ($number < $min) {\n            $min = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] =\
  \ $number - ($min * $_ / $max);\n    }\n    return @rescaled;\n}"
- "    my @rescaled_numbers;\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min_number = $number\
  \ if $number < $min_number;\n        $max_number = $number if $number > $max_number;\n\
  \        push @rescaled_numbers, $min_number + ($number - $min_number) / ($max_number\
  \ - $min_number);\n    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
  \        $max = $number if $number > $max;\n        $rescaled[$#rescaled + 1] =\
  \ $number - $min;\n    }\n    return @rescaled;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n        if ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $rescaled =\
  \ $number - $min;\n        $rescaled /= ($max - $min);\n        push @rescaled,\
  \ $rescaled;\n    }\n    return @rescaled;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
  \ - $min) / $numbers[0];\n    my @rescaled = map { $_ * $scale } @$numbers;\n  \
  \  return @rescaled;\n}"
- "    my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @$rescaled_numbers;\n}"
- "    my @rescaled = ();\n    my $min = min @$numbers;\n    my $max = max @$numbers;\n\
  \    my $scale = ($max - $min) / @$numbers;\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled[$number] = $min + ($number - $min) * $scale;\n    }\n   \
  \ return @$rescaled;\n}"
- "    my @rescaled_numbers = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / @$numbers;\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @$rescaled_numbers;\n}"
- "    my @rescaled_numbers;\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number > $max_number)\
  \ {\n            $max_number = $number;\n        }\n        if ($number < $min_number)\
  \ {\n            $min_number = $number;\n        }\n    }\n    foreach my $number\
  \ (@$numbers) {\n        my $new_number = $number - $min_number;\n        $new_number\
  \ = $new_number / $max_number - $new_number / $min_number;\n        $new_number\
  \ = $new_number * $max_number;\n        push(@rescaled_numbers, $new_number);\n\
  \    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers;\n    my $smallest_number = $numbers[0];\n    my $largest_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number < $smallest_number)\
  \ {\n            $smallest_number = $number;\n        }\n        if ($number > $largest_number)\
  \ {\n            $largest_number = $number;\n        }\n    }\n    foreach my $number\
  \ (@$numbers) {\n        $rescaled_numbers[$number] = $smallest_number + ($number\
  \ - $smallest_number) / ($largest_number - $smallest_number);\n    }\n    return\
  \ @$rescaled_numbers;\n}"
- "    my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + ($number * $scale);\n    }\n  \
  \  return @$rescaled_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
  \ - $min) / $numbers[0];\n    my @result = ();\n    foreach my $num (@$numbers)\
  \ {\n        $num = $num * $scale;\n        push(@result, $num);\n    }\n    return\
  \ @result;\n}"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        }\n        if ($number > $max) {\n            $max\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
  \ $new_number = $number - $min;\n        $new_number /= ($max - $min);\n       \
  \ push(@rescaled_numbers, $new_number);\n    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min_number = $number\
  \ if $number < $min_number;\n        $max_number = $number if $number > $max_number;\n\
  \        $rescaled_numbers[$#rescaled_numbers + 1] = $number - $min_number;\n  \
  \  }\n    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @$rescaled_numbers;\n}"
- "    my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @$rescaled_numbers;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
  \        $max = $number if $number > $max;\n        $rescaled[$#rescaled + 1] =\
  \ $number / $max - $min;\n    }\n    return @rescaled;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n\
  \    my $new_range = abs($new_max - $new_min);\n    my $scale = $new_range / $range;\n\
  \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[]\
  \ = $new_min + ($number - $min) * $scale;\n    }\n    return @$new_numbers;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n        if ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $scale = ($number\
  \ - $min) / ($max - $min);\n        push(@rescaled, $scale * $max);\n    }\n   \
  \ return @rescaled;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
  \        $max = $number if $number > $max;\n        push(@rescaled, $number * ($max\
  \ - $min) / $min + $min);\n    }\n    return @rescaled;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n        if ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $scale = $number\
  \ - $min;\n        $scale = $scale / $max - $min;\n        push(@rescaled, $min\
  \ + $scale);\n    }\n    return @rescaled;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number < $min) {\n            $min\
  \ = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] =\
  \ $number / ($max - $min);\n    }\n    return @rescaled;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0\
  \ * ($max - $min);\n    my $new_numbers = ();\n    foreach my $number (@$numbers)\
  \ {\n        $new_numbers->[$number] = $number / $scale;\n    }\n    return $new_numbers;\n\
  }"
- "    my @rescaled;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    for (@$numbers) {\n   \
  \     $rescaled[$_] = $min + $_ * $scale;\n    }\n    return @rescaled;\n}"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        }\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
  \ = $number - $min;\n    }\n    return @rescaled_numbers;\n}"
- "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my $range = $max\
  \ - $min;\n    my $scale = $range / $min;\n    my @rescaled;\n    foreach my $number\
  \ (@$numbers) {\n        $rescaled[$number] = $scale * $number;\n    }\n    return\
  \ @rescaled;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        } elsif ($number < $min) {\n            $min = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] =\
  \ $number/$max - $min;\n    }\n    return @rescaled;\n}"
- "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min_number = $number\
  \ if $number < $min_number;\n        $max_number = $number if $number > $max_number;\n\
  \        $rescaled_numbers[$#rescaled_numbers + 1] = $number - $min_number;\n  \
  \  }\n    return @rescaled_numbers;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
  \        $max = $number if $number > $max;\n        $rescaled[$#rescaled + 1] =\
  \ $number - $min;\n    }\n    return @rescaled;\n}"
- "    my @rescaled;\n    my $min = min @$numbers;\n    my $max = max @$numbers;\n\
  \    my $scale = ($max - $min) / @$numbers;\n    foreach my $number (@$numbers)\
  \ {\n        push @rescaled, $min + $scale * $number;\n    }\n    return @rescaled;\n\
  }"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        }\n        if ($number > $max) {\n            $max\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
  \ = $min + ($number - $min) * ($max - $min) / ($max - $min);\n    }\n    return\
  \ @rescaled_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = $range / $numbers[0];\n    my $new_numbers = map { $_\
  \ * $scale } @$numbers;\n    return @$new_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
  \ - $min) / $numbers[0];\n    my @new_numbers;\n    foreach my $number (@$numbers)\
  \ {\n        $new_numbers[$number] = $number * $scale;\n    }\n    return @new_numbers;\n\
  }"
- "    my @rescaled_numbers = ();\n    my $smallest_number = $numbers[0];\n    my\
  \ $largest_number = $numbers[0];\n    foreach my $number (@$numbers) {\n       \
  \ if ($number > $largest_number) {\n            $largest_number = $number;\n   \
  \     }\n        if ($number < $smallest_number) {\n            $smallest_number\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
  \ = $smallest_number + ($number - $smallest_number) / ($largest_number - $smallest_number);\n\
  \    }\n    return @$numbers;\n}"
- "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my @rescaled =\
  \ map { $_ / $max - $min } @$numbers;\n    return @rescaled;\n}"
- "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min_number = $number\
  \ if $number < $min_number;\n        $max_number = $number if $number > $max_number;\n\
  \        $rescaled_numbers[$#rescaled_numbers + 1] = $number - $min_number;\n  \
  \  }\n    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min_number = $number\
  \ if $number < $min_number;\n        $max_number = $number if $number > $max_number;\n\
  \        $rescaled_numbers[$#rescaled_numbers + 1] = $number - $min_number;\n  \
  \  }\n    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers;\n    my $min = min @$numbers;\n    my $max = max @$numbers;\n\
  \    my $scale = ($max - $min) / @$numbers;\n    foreach my $number (@$numbers)\
  \ {\n        push @rescaled_numbers, $min + ($number - $min) * $scale;\n    }\n\
  \    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $smallest = $numbers[0];\n    my $largest\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number > $largest)\
  \ {\n            $largest = $number;\n        }\n        if ($number < $smallest)\
  \ {\n            $smallest = $number;\n        }\n    }\n    foreach my $number\
  \ (@$numbers) {\n        my $new_number = $number - $smallest;\n        $new_number\
  \ /= ($largest - $smallest);\n        $new_number *= $largest;\n        $new_number\
  \ += $smallest;\n        push(@rescaled_numbers, $new_number);\n    }\n    return\
  \ @rescaled_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n\
  \    my $new_range = abs($new_max - $new_min);\n    my $scale = $new_range / $range;\n\
  \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[$number]\
  \ = $new_min + ($number - $min) * $scale;\n    }\n    return $new_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        } elsif ($number < $min) {\n            $min = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $rescaled_number\
  \ = $number - $min;\n        $rescaled_numbers[$#rescaled_numbers+1] = $rescaled_number;\n\
  \    }\n    return @rescaled_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n\
  \    my $new_range = abs($new_max - $new_min);\n    my $scale = $new_range / $range;\n\
  \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[$number]\
  \ = $new_min + ($number - $min) * $scale;\n    }\n    return $new_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = $range / $numbers[0];\n    my @rescaled = ();\n    foreach\
  \ my $num (@$numbers) {\n        $num *= $scale;\n        $rescaled[$#rescaled +\
  \ 1] = $num;\n    }\n    return @rescaled;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = $range / $numbers[0];\n    my @rescaled;\n    foreach\
  \ my $number (@$numbers) {\n        $rescaled[$number] = $number * $scale;\n   \
  \ }\n    return \\@rescaled;\n}"
- "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my $scale = ($max\
  \ - $min) / $max;\n    my @new_numbers;\n    foreach my $number (@$numbers) {\n\
  \        $new_numbers[] = $min + $scale * $number;\n    }\n    return @new_numbers;\n\
  }"
- "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number > $max_number)\
  \ {\n            $max_number = $number;\n        }\n        if ($number < $min_number)\
  \ {\n            $min_number = $number;\n        }\n    }\n    foreach my $number\
  \ (@$numbers) {\n        my $new_number = $number - $min_number;\n        $new_number\
  \ /= ($max_number - $min_number);\n        $new_number *= $max_number;\n       \
  \ $new_number += $min_number;\n        push @rescaled_numbers, $new_number;\n  \
  \  }\n    return @rescaled_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = $range / $numbers[0];\n    my $result = [];\n    foreach\
  \ my $number (@$numbers) {\n        $result[$number] = $number * $scale;\n    }\n\
  \    return $result;\n}"
- "    my @rescaled_numbers = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min);\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
  \ = $min + ($number - $min) * $scale;\n    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
  \ = $min + ($number - $min) / ($max - $min);\n    }\n    return @rescaled_numbers;\n\
  }"
- "    my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @rescaled_numbers;\n}"
- "    my @rescaled_numbers;\n    my $smallest_number = $numbers[0];\n    my $largest_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number < $smallest_number)\
  \ {\n            $smallest_number = $number;\n        }\n        if ($number > $largest_number)\
  \ {\n            $largest_number = $number;\n        }\n    }\n    foreach my $number\
  \ (@$numbers) {\n        my $new_number = $smallest_number + ($number - $smallest_number)\
  \ / ($largest_number - $smallest_number);\n        push(@rescaled_numbers, $new_number);\n\
  \    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $scale = ($number\
  \ - $min) / ($max - $min);\n        push(@rescaled, $min + $scale * ($max - $min));\n\
  \    }\n    return @rescaled;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number > $max) {\n            $max\
  \ = $number;\n        } elsif ($number < $min) {\n            $min = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $scale = ($number\
  \ - $min) / ($max - $min);\n        push(@rescaled, $min + $scale * ($max - $min));\n\
  \    }\n    return @rescaled;\n}"
- "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my $range = @$numbers\
  \ - 1;\n    my $scale = ($max - $min) / $range;\n    my @new_numbers;\n    foreach\
  \ my $number (@$numbers) {\n        $new_numbers[$number] = $min + $range * $number\
  \ / $scale;\n    }\n    return @new_numbers;\n}"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        }\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
  \ = $number - $min;\n    }\n    return @$numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
  \        $max = $number if $number > $max;\n        $rescaled_numbers[] = $number\
  \ / ($max - $min);\n    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        }\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n        push(@rescaled, $number * ($max - $min) / $min);\n\
  \    }\n    return @rescaled;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = $range / $numbers[0];\n    my $new_numbers = map { $_\
  \ * $scale } @$numbers;\n    return $new_numbers;\n}"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        }\n        if ($number > $max) {\n            $max\
  \ = $number;\n        }\n    }\n    my $scale = ($max - $min);\n    foreach my $number\
  \ (@$numbers) {\n        $rescaled_numbers[$number] = $number - $min;\n    }\n \
  \   foreach my $number (@$rescaled_numbers) {\n        $rescaled_numbers[$number]\
  \ = $rescaled_numbers[$number] / $scale;\n    }\n    return @$rescaled_numbers;\n\
  }"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = ($range == 0) ? 0 : ($range == 1) ? $min : $min + ($range\
  \ / 2);\n    my @rescaled = ();\n    foreach my $number (@$numbers) {\n        $rescaled[$number]\
  \ = $scale * $number;\n    }\n    return \\@rescaled;\n}"
- "    my @rescaled_numbers = ();\n    my $min_value = $numbers[0];\n    my $max_value\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number < $min_value)\
  \ {\n            $min_value = $number;\n        } elsif ($number > $max_value) {\n\
  \            $max_value = $number;\n        }\n    }\n    foreach my $number (@$numbers)\
  \ {\n        my $new_number = $number - $min_value;\n        $new_number /= ($max_value\
  \ - $min_value);\n        push(@rescaled_numbers, $new_number);\n    }\n    return\
  \ @rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $min > $number ? $min : $number;\n\
  \        $max = $max < $number ? $max : $number;\n    }\n    my $scale = ($max -\
  \ $min);\n    foreach my $number (@$numbers) {\n        my $new_number = $number\
  \ - $min;\n        $new_number /= $scale;\n        $new_number *= $scale;\n    \
  \    push(@rescaled_numbers, $new_number);\n    }\n    return @rescaled_numbers;\n\
  }"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
  \ - $min) / length($numbers);\n    my @rescaled = map { $_ * $scale } @$numbers;\n\
  \    return @rescaled;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
  \        $max = $number if $number > $max;\n    }\n    my $scale = ($max - $min)\
  \ / @$numbers;\n    foreach my $number (@$numbers) {\n        $rescaled[$_] = $min\
  \ + ($number * $scale);\n    }\n    return @$rescaled;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        } elsif ($number < $min) {\n            $min = $number;\n\
  \        } else {\n            $rescaled[$#rescaled + 1] = $number - $min;\n   \
  \     }\n    }\n    return @rescaled;\n}"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $min > $number ? $min : $number;\n\
  \        $max = $max < $number ? $max : $number;\n    }\n    my $scale = ($max -\
  \ $min) / @$numbers;\n    foreach my $number (@$numbers) {\n        $rescaled_numbers->[$number]\
  \ = $min + ($number * $scale);\n    }\n    return @$rescaled_numbers;\n}"
- "    my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @$rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $smallest_number = $numbers[0];\n    my\
  \ $largest_number = $numbers[0];\n    foreach my $number (@$numbers) {\n       \
  \ if ($number < $smallest_number) {\n            $smallest_number = $number;\n \
  \       }\n        if ($number > $largest_number) {\n            $largest_number\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
  \ = $smallest_number + ($number - $smallest_number) / ($largest_number - $smallest_number);\n\
  \    }\n    return @$numbers;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $num (@$numbers) {\n        if ($num < $min) {\n            $min =\
  \ $num;\n        }\n        if ($num > $max) {\n            $max = $num;\n     \
  \   }\n    }\n    foreach my $num (@$numbers) {\n        $num = $num - $min;\n \
  \       $num = $num / $max - $min;\n        push @rescaled, $num;\n    }\n    return\
  \ @rescaled;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        }\n        if ($number > $max) {\n            $max\
  \ = $number;\n        }\n        push(@rescaled, $min + ($number - $min) * ($max\
  \ - $min) / $max);\n    }\n    return @rescaled;\n}"
- "    my @rescaled_numbers = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @$rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min_number = $number\
  \ if $number < $min_number;\n        $max_number = $number if $number > $max_number;\n\
  \        $rescaled_numbers[] = $number / $max_number;\n    }\n    return @rescaled_numbers;\n\
  }"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number > $max) {\n            $max\
  \ = $number;\n        } elsif ($number < $min) {\n            $min = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $scale = ($number\
  \ - $min) / ($max - $min);\n        push(@rescaled, $scale * $max);\n    }\n   \
  \ return @rescaled;\n}"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        }\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
  \ = $number - $min;\n    }\n    return @$numbers;\n}"
- "    my @rescaled_numbers;\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number < $min_number)\
  \ {\n            $min_number = $number;\n        }\n        if ($number > $max_number)\
  \ {\n            $max_number = $number;\n        }\n    }\n    foreach my $number\
  \ (@$numbers) {\n        $rescaled_numbers[$number] = $number - $min_number;\n \
  \   }\n    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / $numbers[0];\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number < $min_number)\
  \ {\n            $min_number = $number;\n        }\n        if ($number > $max_number)\
  \ {\n            $max_number = $number;\n        }\n    }\n    foreach my $number\
  \ (@$numbers) {\n        $rescaled_numbers[$number] = $min_number + ($number - $min_number)\
  \ / ($max_number - $min_number);\n    }\n    return @$numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n\
  \    my $new_range = abs($new_max - $new_min);\n    my $scale = $new_range / $range;\n\
  \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[]\
  \ = $new_min + ($number - $min) * $scale;\n    }\n    return @$new_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
  \        $max = $number if $number > $max;\n        $rescaled_numbers[$#rescaled_numbers\
  \ + 1] = $number - $min;\n    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
  \        $max = $number if $number > $max;\n        $rescaled_numbers[] = $number\
  \ / $max - $min;\n    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        my $new_number = $number - $min;\n\
  \        $new_number /= ($max - $min);\n        $rescaled[$#rescaled + 1] = $new_number;\n\
  \        $min = $number;\n        $max = $number;\n    }\n    return @rescaled;\n\
  }"
- "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number < $min_number)\
  \ {\n            $min_number = $number;\n        }\n        if ($number > $max_number)\
  \ {\n            $max_number = $number;\n        }\n    }\n    foreach my $number\
  \ (@$numbers) {\n        $rescaled_numbers[$number] = $min_number + ($number - $min_number)\
  \ / ($max_number - $min_number);\n    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $scale = ($number\
  \ - $min) / ($max - $min);\n        push(@rescaled, $scale * $max);\n    }\n   \
  \ return @rescaled;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        } elsif ($number < $min) {\n            $min = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $new_number\
  \ = $number - $min;\n        $new_number /= ($max - $min);\n        $rescaled[$#rescaled\
  \ + 1] = $new_number;\n    }\n    return @rescaled;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        }\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
  \ $new_number = $number - $min;\n        $new_number /= ($max - $min);\n       \
  \ $rescaled[$#rescaled + 1] = $new_number;\n    }\n    return @rescaled;\n}"
- "    my @rescaled_numbers = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @$rescaled_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = $range / $numbers[0];\n    my $result = [];\n    foreach\
  \ my $number (@$numbers) {\n        $result[$number] = $min + $scale * $number;\n\
  \    }\n    return $result;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $num (@$numbers) {\n        if ($num < $min) {\n            $min =\
  \ $num;\n        } elsif ($num > $max) {\n            $max = $num;\n        }\n\
  \    }\n    foreach my $num (@$numbers) {\n        $num = $num - $min;\n       \
  \ $num = $num / $max - $min;\n        push(@rescaled, $num);\n    }\n    return\
  \ @rescaled;\n}"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
  \        $max = $number if $number > $max;\n    }\n    my $scale = ($max - $min)\
  \ / @$numbers;\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
  \ = $min + ($number * $scale);\n    }\n    return @$rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $min > $number ? $min : $number;\n\
  \        $max = $max < $number ? $max : $number;\n    }\n    foreach my $number\
  \ (@$numbers) {\n        $rescaled_numbers[$number] = $number - $min;\n        $rescaled_numbers[$number]\
  \ = $rescaled_numbers[$number] / $max - $min;\n    }\n    return @rescaled_numbers;\n\
  }"
- "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my @rescaled;\n\
  \    foreach my $number (@$numbers) {\n        push @rescaled, $number / $max -\
  \ $min;\n    }\n    return @rescaled;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number > $max) {\n            $max\
  \ = $number;\n        } elsif ($number < $min) {\n            $min = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] =\
  \ $number / $max - $min;\n    }\n    return @rescaled;\n}"
- "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        }\n        if ($number > $max) {\n            $max\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
  \ = $min + ($number - $min) * ($max - $min) / ($max - $min);\n    }\n    return\
  \ @rescaled_numbers;\n}"
- "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my $scale = ($max\
  \ - $min) / $min;\n    my @rescaled;\n    foreach my $num (@$numbers) {\n      \
  \  $num *= $scale;\n        push @rescaled, $num if $num;\n    }\n    return @rescaled;\n\
  }"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n        if ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $rescaled =\
  \ ($number - $min) / ($max - $min);\n        push(@rescaled, $rescaled);\n    }\n\
  \    return @rescaled;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $num (@$numbers) {\n        $min = $num if $num < $min;\n      \
  \  $max = $num if $num > $max;\n        $rescaled[$#rescaled + 1] = $num / $max\
  \ - $min;\n    }\n    return @rescaled;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = $range / $numbers[0];\n    my $new_numbers = ();\n \
  \   foreach my $number (@$numbers) {\n        $new_numbers->[$number] = $number\
  \ * $scale;\n    }\n    return @$new_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = $range / $numbers[0];\n    my $new_numbers = ();\n \
  \   foreach my $number (@$numbers) {\n        $new_numbers->[$number] = $number\
  \ * $scale;\n    }\n    return $new_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = $range / $numbers[0];\n    my $new_numbers = ();\n \
  \   foreach my $number (@$numbers) {\n        $new_numbers->[$number] = $number\
  \ * $scale;\n    }\n    return $new_numbers;\n}"
- "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my @rescaled_numbers;\n\
  \    my $scale = ($max - $min) / @$numbers;\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @rescaled_numbers;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number < $min) {\n            $min\
  \ = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $scale = ($number\
  \ - $min) / ($max - $min);\n        push(@rescaled, $scale * $max);\n    }\n   \
  \ return @rescaled;\n}"
- "    my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @rescaled_numbers;\n}"
- "    my @rescaled;\n    my $min = min @$numbers;\n    my $max = max @$numbers;\n\
  \    my $scale = ($max - $min) / @$numbers;\n    for (@$numbers) {\n        $rescaled[$_]\
  \ = $min + ($_ * $scale);\n    }\n    return @$rescaled;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        } elsif ($number < $min) {\n            $min = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $rescaled =\
  \ $number - $min;\n        $rescaled /= ($max - $min);\n        push(@rescaled,\
  \ $rescaled);\n    }\n    return @rescaled;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
  \        $max = $number if $number > $max;\n        $rescaled[$#rescaled + 1] =\
  \ $number / $max - $min;\n    }\n    return @rescaled;\n}"
- "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $min > $number ? $min : $number;\n\
  \        $max = $max < $number ? $max : $number;\n    }\n    foreach my $number\
  \ (@$numbers) {\n        $rescaled_numbers[$number] = $min + ($max - $min) * $number\
  \ / $max;\n    }\n    return @$rescaled_numbers;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $num (@$numbers) {\n        if ($num < $min) {\n            $min =\
  \ $num;\n        }\n        if ($num > $max) {\n            $max = $num;\n     \
  \   }\n    }\n    foreach my $num (@$numbers) {\n        $num = $num - $min;\n \
  \       $num = $num / $max - $min;\n        push(@rescaled, $num);\n    }\n    return\
  \ @rescaled;\n}"
- "    my @rescaled_numbers;\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number < $min_number)\
  \ {\n            $min_number = $number;\n        }\n        if ($number > $max_number)\
  \ {\n            $max_number = $number;\n        }\n    }\n    foreach my $number\
  \ (@$numbers) {\n        my $new_number = $number - $min_number;\n        $new_number\
  \ /= ($max_number - $min_number);\n        push(@rescaled_numbers, $new_number);\n\
  \    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
  \        $max = $number if $number > $max;\n        $rescaled_numbers[] = $number\
  \ / ($max - $min);\n    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min_number = $number\
  \ if $number < $min_number;\n        $max_number = $number if $number > $max_number;\n\
  \        $rescaled_numbers[$#rescaled_numbers + 1] = $number - $min_number;\n  \
  \  }\n    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        }\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
  \ $rescaled_number = $number - $min;\n        $rescaled_numbers[$#rescaled_numbers\
  \ + 1] = $rescaled_number / $max - $min;\n    }\n    return @rescaled_numbers;\n\
  }"
- "    my @rescaled = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $num (@$numbers)\
  \ {\n        $num *= $scale;\n        push(@rescaled, $num);\n    }\n    return\
  \ @rescaled;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
  \ - $min) / 0.0;\n    my @rescaled;\n    foreach my $num (@$numbers) {\n       \
  \ $num = $num * $scale;\n        push(@rescaled, $num);\n    }\n    return @rescaled;\n\
  }"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n        if ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] =\
  \ $number - ($min * $_ / $max);\n    }\n    return @rescaled;\n}"
- "    my @rescaled_numbers;\n    my $min = min @$numbers;\n    my $max = max @$numbers;\n\
  \    my $scale = ($max - $min) / @$numbers;\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @$rescaled_numbers;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $scale = $number\
  \ - $min;\n        $scale = $scale / ($max - $min);\n        push(@rescaled, $min\
  \ + $scale);\n    }\n    return @rescaled;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = $range / $numbers[0];\n    my $result = $numbers[0]\
  \ + $scale * ($numbers[1] - $min);\n    return $result;\n}"
- "    my @rescaled_numbers = ();\n    my $min = @$numbers < 2 ? 0 : $numbers[0];\n\
  \    my $max = @$numbers < 2 ? 1 : $numbers[-1];\n    my $scale = ($max - $min)\
  \ / @$numbers;\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
  \ = $min + ($number - $min) / $scale;\n    }\n    return @$numbers ? @$rescaled_numbers\
  \ : undef;\n}"
- "    my @rescaled_numbers = ();\n    my $min_value = $numbers[0];\n    my $max_value\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number < $min_value)\
  \ {\n            $min_value = $number;\n        }\n        if ($number > $max_value)\
  \ {\n            $max_value = $number;\n        }\n    }\n    my $scale = ($max_value\
  \ - $min_value) / @$numbers;\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
  \ = $min_value + $scale * $number;\n    }\n    return @$rescaled_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = $range / $min;\n    my $new_numbers = ();\n    foreach\
  \ my $number (@$numbers) {\n        $new_numbers->[$number] = $number * $scale;\n\
  \    }\n    return $new_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = $range / $numbers[0];\n    my $new_numbers = ();\n \
  \   foreach my $number (@$numbers) {\n        $new_numbers->[$number] = $number\
  \ * $scale;\n    }\n    return $new_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my @rescaled;\n\
  \    foreach my $num (@$numbers) {\n        $num = $num - $min;\n        $num =\
  \ $num / $max - $min;\n        push(@rescaled, $num);\n    }\n    return @rescaled;\n\
  }"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        } elsif ($number < $min) {\n            $min = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$number]\
  \ = $number - $min;\n    }\n    return @rescaled;\n}"
- "    my @rescaled_numbers = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    for (@$numbers) {\n   \
  \     push @rescaled_numbers, $min + ($_ * $scale);\n    }\n    return @rescaled_numbers;\n\
  }"
- "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
  \        $max = $number if $number > $max;\n        $rescaled_numbers[$#rescaled_numbers\
  \ + 1] = $number - $min;\n    }\n    return @rescaled_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
  \ - $min);\n    my $scale = $range / $numbers[0];\n    my $new_numbers = ();\n \
  \   foreach my $number (@$numbers) {\n        $new_numbers->[$number] = $number\
  \ * $scale;\n    }\n    return $new_numbers;\n}"
- "    my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @$rescaled_numbers;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n         \
  \   $max = $number;\n        }\n        if ($number < $min) {\n            $min\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$number]\
  \ = $number - $min;\n    }\n    return @rescaled;\n}"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $min > $number ? $min : $number;\n\
  \        $max = $max < $number ? $max : $number;\n    }\n    my $scale = ($max -\
  \ $min) / @$numbers;\n    foreach my $number (@$numbers) {\n        $rescaled_numbers->[$_]\
  \ = $min + ($number * $scale);\n    }\n    return @$rescaled_numbers;\n}"
- "    my @rescaled_numbers;\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number < $min_number)\
  \ {\n            $min_number = $number;\n        }\n        if ($number > $max_number)\
  \ {\n            $max_number = $number;\n        }\n    }\n    foreach my $number\
  \ (@$numbers) {\n        my $new_number = $number - $min_number;\n        $new_number\
  \ /= ($max_number - $min_number);\n        push(@rescaled_numbers, $new_number);\n\
  \    }\n    return @rescaled_numbers;\n}"
- "    my @rescaled;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $range = abs($max - $min);\n    my $scale = $range / $numbers[0];\n    foreach\
  \ my $number (@$numbers) {\n        my $new_number = $min + $range * $number / $scale;\n\
  \        push(@rescaled, $new_number);\n    }\n    return @rescaled;\n}"
- "    my @rescaled_numbers = ();\n    my $smallest_number = $numbers[0];\n    my\
  \ $largest_number = $numbers[0];\n    foreach my $number (@$numbers) {\n       \
  \ if ($number > $largest_number) {\n            $largest_number = $number;\n   \
  \     }\n        if ($number < $smallest_number) {\n            $smallest_number\
  \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
  \ $new_number = $smallest_number + ($number - $smallest_number) / ($largest_number\
  \ - $smallest_number);\n        push(@rescaled_numbers, $new_number);\n    }\n \
  \   return @rescaled_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = 1.0/$max\
  \ - $min;\n    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n   \
  \     $new_numbers->[$number] = $number * $scale;\n    }\n    return $new_numbers;\n\
  }"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] =\
  \ $number - ($min - $max) / @$numbers;\n    }\n    return @$numbers;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number > $max) {\n            $max\
  \ = $number;\n        } elsif ($number < $min) {\n            $min = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] =\
  \ $number - ($min * $_ / $max);\n    }\n    return @rescaled;\n}"
- "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my $range = 1 -\
  \ $min + $max;\n    my $scale = $range / $max - $min;\n    my $new_numbers = map\
  \ { $_ * $scale } @$numbers;\n    return $new_numbers;\n}"
- "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n   \
  \ foreach my $number (@$numbers) {\n        if ($number < $min) {\n            $min\
  \ = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] =\
  \ $number - $min;\n    }\n    return @rescaled;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
  \ - $min) / 0.0;\n    my @rescaled_numbers = ();\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ \\@rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min_number = $numbers[0];\n    my $max_number\
  \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number < $min_number)\
  \ {\n            $min_number = $number;\n        }\n        if ($number > $max_number)\
  \ {\n            $max_number = $number;\n        }\n    }\n    foreach my $number\
  \ (@$numbers) {\n        my $new_number = $number - $min_number;\n        $new_number\
  \ /= ($max_number - $min_number);\n        $new_number *= $max_number;\n       \
  \ $new_number += $min_number;\n        push(@rescaled_numbers, $new_number);\n \
  \   }\n    return @rescaled_numbers;\n}"
- "    my @rescaled_numbers = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
  \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
  \ @$numbers;\n}"
- "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
  \        $max = $number if $number > $max;\n    }\n    foreach my $number (@$numbers)\
  \ {\n        my $new_number = $number - $min;\n        $new_number = 1 / ($max -\
  \ $min) * $new_number + $min;\n        push @rescaled_numbers, $new_number;\n  \
  \  }\n    return @rescaled_numbers;\n}"
- "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
  \ - $min) / $numbers[0];\n    my @rescaled;\n    foreach my $number (@$numbers)\
  \ {\n        $rescaled[$number] = $min + $scale * $number;\n    }\n    return \\\
  @rescaled;\n}"
- "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
  \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
  \   $min = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
  \        }\n    }\n    foreach my $number (@$numbers) {\n        my $scale = ($number\
  \ - $min) / ($max - $min);\n        push(@rescaled, $scale * $max);\n    }\n   \
  \ return @rescaled;\n}"
language: pl
name: HumanEval_21_rescale_to_unit
prompt: "# Given list of numbers (of at least two elements), apply a linear transform\
  \ to that list,\n# such that the smallest number will become 0 and the largest will\
  \ become 1\n# >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n# [0.0, 0.25, 0.5,\
  \ 0.75, 1.0]\nsub rescale_to_unit {\n    my($numbers) = @_;\n"
stop_tokens:
- '

  sub'
- '

  #'
- '


  '
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rescale_to_unit;\n\
  \        if(eq_deeply($candidate->([2.0, 49.9]),[0.0, 1.0])) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([100.0,\
  \ 49.9]),[1.0, 0.0])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
  \ }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),[0.0, 0.25, 0.5,\
  \ 0.75, 1.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->([2.0, 1.0, 5.0, 3.0, 4.0]),[0.25, 0.0, 1.0, 0.5,\
  \ 0.75])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([12.0,\
  \ 11.0, 15.0, 13.0, 14.0]),[0.25, 0.0, 1.0, 0.5, 0.75])) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"

name: HumanEval_30_get_positive
language: pl
prompt: "# Return only positive numbers in the list.\n# >>> get_positive([-1, 2, -4,\
  \ 5, 6])\n# [2, 5, 6]\n# >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
  # [5, 3, 2, 3, 9, 123, 1]\nsub get_positive {\n    my($l) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&get_positive;\n\
  \        if(eq_deeply($candidate->([-1, -2, 4, 5, 6]),[4, 5, 6])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]),[5, 3, 2, 3, 3, 9, 123, 1])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-1,\
  \ -2]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my @r = ();\n    foreach my $x (@$l) {\n        if ($x > 0) {\n\
    \            push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n\
    \    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n \
    \   foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n \
    \   my $sign = 1;\n    foreach my $n (@$l) {\n        $sign = 1 if $n < 0;\n \
    \       push(@r, $sign * $n) if $n >= 0;\n    }\n    return @r;\n}", "    my @r;\n\
    \    my $neg;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n            push\
    \ @r, $x;\n        }\n        else {\n            $neg = 1;\n        }\n    }\n\
    \    return @r if $neg;\n    return @$l;\n}", "    my @r;\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n \
    \   foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r = ();\n    foreach my $x (@$l) {\n        if ($x > 0) {\n\
    \            push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r =\
    \ ();\n    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r,\
    \ $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n    my $neg;\n    my\
    \ $i;\n    for ($i = 0; $i < @$l; $i++) {\n        $neg = $l->[$i] < 0;\n    \
    \    if ($neg) {\n            $l->[$i] = 0;\n        }\n        push(@r, $l->[$i]);\n\
    \    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if\
    \ ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n}",
  "    my @r;\n    my $neg = 0;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n\
    \            $neg = 0;\n        }\n        elsif ($x < 0) {\n            $neg\
    \ = 1;\n        }\n        elsif ($neg) {\n            push(@r, $x);\n       \
    \ }\n    }\n    return @r;\n}", "    my @r;\n    my $neg;\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n        else\
    \ {\n            $neg = $x;\n        }\n    }\n    return @r;\n}", "    my @r;\n\
    \    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r = ();\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n \
    \   foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    my $sign = 1;\n    my $neg = 0;\n    my $first = 1;\n\
    \    my $last;\n    my $i;", "    my @r;\n    my $neg;\n    my $neg_inc;\n   \
    \ my $neg_inc_last;\n    my $neg_inc_last2;\n    my $neg_inc_last3;\n    my $neg_inc_last4;\n\
    \    my $neg_inc_last5;\n    my $neg_inc_last6;\n    my $neg_inc_last7;\n    my\
    \ $neg_inc_last8;\n    my $neg_inc_last9;\n    my $neg_inc_last10;\n    my $neg_inc_last11;\n\
    \    my $neg_inc_last12;\n    my $neg_inc_last13;\n    my $neg_inc_last14;\n \
    \   my $neg_inc_last15;\n    my $neg_inc_last16;\n    my $neg_inc_last17;\n  \
    \  my $neg_inc_last18;\n    my $neg_inc_last19;\n    my $neg_inc_last20;\n   \
    \ my $neg_inc_last21;\n    my $neg_inc_last22;\n    my $neg_inc_last23;\n    my\
    \ $neg_inc_last24;\n    my $neg_inc_last25;\n    my $neg_inc_last26;\n    my $neg_inc_last27;\n\
    \    my $neg_inc_last28;\n    my $neg_inc_last29;\n    my $neg_inc_last30;\n \
    \   my $neg_inc_last31;\n    my $neg_inc_last32;\n    my $neg_inc_last33;\n  \
    \  my $neg_inc_last34;\n    my $neg_inc_last35;\n    my $neg_inc_last36;\n   \
    \ my $neg_inc_last37;\n    my $neg_inc_last38;\n    my $neg_inc_last39;\n    my\
    \ $neg_inc_last40;\n    my $neg_inc_last41;\n    my $neg_inc_last42;\n    my $neg_inc_last43;\n\
    \    my $neg_inc_last44;\n    my $neg_inc_last45;\n    my $neg_inc_last46;\n \
    \   my $neg_inc_last47;\n    my $neg_inc_last48;\n    my $neg_inc_last49;\n  \
    \  my $neg_inc_last50;\n    my $neg_inc_last51;\n    my $neg_inc_last52;\n   \
    \ my $neg_inc_last53;\n    my $neg_inc_last54;\n    my $neg_inc_last55;\n    my\
    \ $neg_inc_last56;\n    my $neg_inc_last57;\n    my $neg", "    my @r;\n    foreach\
    \ my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n\
    \    }\n    return @r;\n}", "    my @r;\n    my $neg;\n    my $i;\n    for ($i\
    \ = 0; $i < @$l; $i++) {\n        if ($l->[$i] < 0) {\n            $neg = 1;\n\
    \        } else {\n            $neg = 0;\n        }\n        push(@r, $l->[$i]\
    \ unless $neg);\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @a = ();\n    foreach my $x (@$l) {\n        if ($x > 0) {\n\
    \            push(@a, $x);\n        }\n    }\n    return @a;\n}", "    my @positive;\n\
    \    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@positive,\
    \ $x);\n        }\n    }\n    return @positive;\n}", "    my @r;\n    foreach\
    \ my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n\
    \    }\n    return @r;\n}", "    my @a;\n    foreach my $x (@$l) {\n        if\
    \ ($x > 0) {\n            push(@a, $x);\n        }\n    }\n    return @a;\n}",
  "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r,\
    \ $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n \
    \   foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0){\n    \
    \        push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n  \
    \  foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n \
    \       }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r = ();\n    foreach my $x (@$l) {\n        if ($x > 0) {\n\
    \            push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n\
    \    my $neg;\n    my $i;\n    my $max;\n    my $min;\n    my $negmax;\n    my\
    \ $negmin;\n    my $negmaxi;\n    my $negmini;\n    my $negmaxj;\n    my $negminj;\n\
    \    my $negmaxk;\n    my $negmink;\n    my $negmaxl;\n    my $negminl;\n    my\
    \ $negmaxm;\n    my $negminm;\n    my $negmaxn;\n    my $negminn;\n    my $negmaxo;\n\
    \    my $negmino;\n    my $negmaxp;\n    my $negminp;\n    my $negmaxq;\n    my\
    \ $negminq;\n    my $negmaxr;\n    my $negminr;\n    my $negmaxs;\n    my $negmins;\n\
    \    my $negmaxt;\n    my $negmint;\n    my $negmaxu;\n    my $negminu;\n    my\
    \ $negmaxv;\n    my $negminv;\n    my $negmaxw;\n    my $negminw;\n    my $negmaxx;\n\
    \    my $negminx;\n    my $negmaxy;\n    my $negminy;\n    my $negmaxz;\n    my\
    \ $negminz;\n    my $negmaxA;\n    my $negminA;\n    my $negmaxB;\n    my $negminB;\n\
    \    my $negmaxC;\n    my $negminC;\n    my $negmaxD;\n    my $negminD;\n    my\
    \ $negmaxE;\n    my $negminE;\n    my $negmaxF;\n    my $negminF;\n    my $negmaxG;\n\
    \    my $negminG;\n    my $negmaxH;\n    my $negminH;\n    my $negmaxI;\n    my\
    \ $negminI;\n    my $negmaxJ;\n    my $negminJ;\n    my $negmaxK;\n    my $negminK;\n\
    \    my $negmaxL;\n    my $negminL;\n    my $negmaxM;\n    my $negminM;\n    my\
    \ $negmaxN;\n    my $negminN;\n    my $negmaxO;\n    my $negminO;\n    my $negmaxP;\n\
    \    my $negminP;\n    my $negmaxQ;\n    my $negminQ;\n    my $negmaxR;\n    my\
    \ $negminR;\n    my $negmaxS", "    my @r;\n    foreach my $x (@$l) {\n      \
    \  if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n\
    }", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n          \
    \  push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n    foreach\
    \ my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n\
    \    }\n    return @r;\n}", "    my @r = ();\n    foreach my $x (@$l) {\n    \
    \    if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n\
    }", "    my @r = ();\n    foreach my $x (@$l) {\n        if ($x > 0) {\n     \
    \       push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n   \
    \ my $neg;\n    my $i;\n    my $j;\n    my $k;\n    my $n;\n    my $m;\n    my\
    \ $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n\
    \    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my\
    \ $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n\
    \    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my\
    \ $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n\
    \    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my\
    \ $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n\
    \    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my\
    \ $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n\
    \    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my\
    \ $n;\n", "    my @r;\n    my $neg = 0;\n    foreach my $x (@$l) {\n        if\
    \ ($x > 0) {\n            push @r, $x;\n        }\n        else {\n          \
    \  $neg++;\n        }\n    }\n    return @r if $neg == 0;\n    return @r if $neg\
    \ == 1;\n    return @r;\n}", "    my @positive;\n    foreach my $i (@$l) {\n \
    \       if ($i > 0){\n            push(@positive, $i);\n        }\n    }\n   \
    \ return @positive;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x\
    \ > 0) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n}", " \
    \   my @r;\n    my $neg;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n \
    \           push(@r, $x);\n        } else {\n            $neg = 1;\n        }\n\
    \    }\n    return @r if $neg;\n    return @$l;\n}", "    my @r = ();\n    foreach\
    \ my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n\
    \    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if\
    \ ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n}",
  "    my @r = ();\n    foreach my $x (@$l) {\n        if ($x > 0) {\n           \
    \ push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n    foreach\
    \ my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n\
    \    }\n    return @r;\n}", "    my @r = ();\n    foreach my $x (@$l) {\n    \
    \    if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n\
    }", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n          \
    \  push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n    foreach\
    \ my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n\
    \    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if\
    \ ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n}",
  "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r,\
    \ $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r = ();\n\
    \    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n \
    \   foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @a = ();\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@a, $x);\n        }\n    }\n    return\
    \ @a;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n \
    \   my $neg;\n    my $i;\n    my $j;\n    my $k;\n    my $max;\n    my $min;\n\
    \    my $maxi;\n    my $mini;\n    my $negmax;\n    my $negmin;\n    my $negmaxi;\n\
    \    my $negmini;\n    my $negmaxj;\n    my $negminij;\n    my $negmaxk;\n   \
    \ my $negminik;\n    my $negmaxl;\n    my $negminil;\n    my $negmaxm;\n    my\
    \ $negminim;\n    my $negmaxn;\n    my $negminin;\n    my $negmaxo;\n    my $negminio;\n\
    \    my $negmaxp;\n    my $negminip;\n    my $negmaxq;\n    my $negminiq;\n  \
    \  my $negmaxr;\n    my $negminir;\n    my $negmaxs;\n    my $negminis;\n    my\
    \ $negmaxt;\n    my $negminit;\n    my $negmaxu;\n    my $negminiu;\n    my $negmaxv;\n\
    \    my $negminiv;\n    my $negmaxw;\n    my $negminiw;\n    my $negmaxx;\n  \
    \  my $negminix;\n    my $negmaxy;\n    my $negminiy;\n    my $negmaxz;\n    my\
    \ $negminiz;\n    my $negmaxA;\n    my $negminiA;\n    my $negmaxB;\n    my $negminiB;\n\
    \    my $negmaxC;\n    my $negminiC;\n    my $negmaxD;\n    my $negminiD;\n  \
    \  my $negmaxE;\n    my $negminiE;\n    my $negmaxF;\n    my $negminiF;\n    my\
    \ $negmaxG;\n    my $negminiG;\n    my $negmaxH;\n    my $negminiH;\n    my $negmaxI;\n\
    \    my $negminiI;\n    my $negmaxJ;\n    my $negminiJ;\n    my $negmaxK;\n  \
    \  my $negminiK;\n    my $negmaxL;\n    my $negminiL;\n    my $negmaxM;\n    my\
    \ $negminiM;\n    my $negmaxN;\n    my $negminiN;\n    my $negmaxO;\n    my $negminiO;\n\
    \    my $negmaxP;\n    my $negminiP;\n    my $negmaxQ;\n    my $negminiQ;\n",
  "    my @a = @$l;\n    my @b = ();\n    foreach my $x (@a) {\n        if ($x > 0)\
    \ {\n            push(@b, $x);\n        }\n    }\n    return @b;\n}", "    my\
    \ @a;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@a,\
    \ $x);\n        }\n    }\n    return @a;\n}", "    my @r = ();\n    foreach my\
    \ $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n  \
    \  }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x\
    \ > 0) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n}", " \
    \   my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r,\
    \ $x);\n        }\n    }\n    return @r;\n}", "    my @r = ();\n    my $neg =\
    \ 0;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n            $neg = 0;\n\
    \        }\n        elsif ($x < 0) {\n            $neg = 1;\n        }\n     \
    \   elsif ($neg) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n\
    }", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n          \
    \  push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n    my $neg;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $max;\n    my $min;\n    my $maxi;\n\
    \    my $mini;\n    my $maxj;\n    my $minij;\n    my $maxk;\n    my $minik;\n\
    \    my $maxmax;\n    my $maxmin;\n    my $maxmaxi;\n    my $maxmini;\n    my\
    \ $maxmaxj;\n    my $maxminij;\n    my $maxmaxk;\n    my $maxminik;\n    my $maxmaxmax;\n\
    \    my $maxmaxmin;\n    my $maxmaxmaxi;\n    my $maxmaxmini;\n    my $maxmaxmaxj;\n\
    \    my $maxmaxminij;\n    my $maxmaxmaxk;\n    my $maxmaxminik;\n    my $maxmaxmaxmax;\n\
    \    my $maxmaxmaxmin;\n    my $maxmaxmaxmaxi;\n    my $maxmaxmaxmini;\n    my\
    \ $maxmaxmaxmaxj;\n    my $maxmaxmaxminij;\n    my $maxmaxmaxmaxk;\n    my $maxmaxmaxminik;\n\
    \    my $maxmaxmaxmaxmax;\n    my $maxmaxmaxmaxmin;\n    my $maxmaxmaxmaxmaxi;\n\
    \    my $maxmaxmaxmaxmini;\n    my $maxmaxmaxmaxmaxj;\n    my $maxmaxmaxmaxminij;\n\
    \    my $maxmaxmaxmaxmaxk;\n    my $maxmaxmaxmaxminik;\n    my $maxmaxmaxmaxmaxmax;\n\
    \    my $maxmaxmaxmaxmaxmin;\n    my $maxmaxmaxmaxmaxmaxi;\n    my $maxmaxmaxmaxmaxmini;\n\
    \    my $maxmaxmaxmaxmaxmaxj;\n    my $maxmaxmaxmaxmaxminij;\n    my $maxmaxmaxmaxmaxmaxk;\n\
    \    my $maxmaxmaxmaxmaxminik;\n    my $maxmaxmaxmaxmaxmaxmax;\n    my $maxmaxmaxmaxmaxmaxmin;\n\
    \    my $maxmaxmaxmaxmaxmaxmaxi;\n    my $maxmaxmaxmaxmaxmaxmini;\n    my $maxmaxmaxmaxmaxmaxmaxj;\n\
    \    my $maxmaxmaxmaxmaxmaxminij;\n    my $maxmaxmaxmaxmaxmaxmaxk;\n    my $maxmaxmaxmaxmaxmaxminik;\n\
    \    my $maxmaxmaxmaxmaxmaxmaxmax;\n    my $maxmaxmaxmaxmaxmaxmaxmin;\n    my\
    \ $maxmax", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n  \
    \          push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n\
    \    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @a;\n \
    \   foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@a, $x);\n\
    \        }\n    }\n    return @a;\n}", "    my @r = ();\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r = ();\n    my $neg = 0;\n    foreach my $x (@$l) {\n   \
    \     if ($x > 0) {\n            $neg = 0;\n        }\n        elsif ($x < 0)\
    \ {\n            $neg = 1;\n        }\n        elsif ($x == 0) {\n           \
    \ $neg = 1;\n        }\n        elsif ($neg) {\n            push(@r, $x);\n  \
    \      }\n    }\n    return @r;\n}", "    my @r = ();\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @a = ();\n\
    \    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@a, $x);\n\
    \        }\n    }\n    return @a;\n}", "    my @r = ();\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n \
    \   foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    my $neg = 0;\n    foreach my $x (@$l) {\n        if\
    \ ($x > 0) {\n            $neg = 0;\n        }\n        elsif ($x < 0) {\n   \
    \         $neg = 1;\n        }\n        elsif ($x == 0) {\n            $neg =\
    \ 0;\n        }\n        elsif ($x == -1) {\n            $neg = 1;\n        }\n\
    \        elsif ($x == -2) {\n            $neg = 1;\n        }\n        elsif ($x\
    \ == -3) {\n            $neg = 1;\n        }\n        elsif ($x == -4) {\n   \
    \         $neg = 1;\n        }\n        elsif ($x == -5) {\n            $neg =\
    \ 1;\n        }\n        elsif ($x == -6) {\n            $neg = 1;\n        }\n\
    \        elsif ($x == -7) {\n            $neg = 1;\n        }\n        elsif ($x\
    \ == -8) {\n            $neg = 1;\n        }\n        elsif ($x == -9) {\n   \
    \         $neg = 1;\n        }\n        elsif ($x == -10) {\n            $neg\
    \ = 1;\n        }\n        elsif ($x == -11) {\n            $neg = 1;\n      \
    \  }\n        elsif ($x == -12) {\n            $neg = 1;\n        }\n        elsif\
    \ ($x == -13) {\n            $neg = 1;\n        }\n        elsif ($x == -14) {\n\
    \            $neg = 1;\n        }\n        elsif ($x == -15) {\n            $neg\
    \ = 1;\n        }\n        elsif ($x == -16) {\n            $neg = 1;\n      \
    \  }\n        elsif ($x == -17) {\n            $neg = 1;\n        }\n        elsif\
    \ ($x == -18) {\n            $neg = 1;\n        }\n        elsif ($x == -19) {\n\
    \            $neg = 1;\n        }\n        elsif ($x == -20) {\n            $neg\
    \ = 1;\n        }\n        elsif ($x == -21) {\n            $neg = 1;\n      \
    \  }\n        elsif ($x == -22) {\n            $neg = 1;\n        }\n        elsif\
    \ ($x == -23) {\n            $neg = 1;\n        }\n        elsif ($x == -24) {\n\
    \            $neg = 1;\n        }\n        elsif ($x == -25) {\n            $neg\
    \ = 1;\n        }\n        elsif ($x == -26) {\n            $neg = 1;\n      \
    \  }\n        elsif ($x == -27) {\n            $neg = 1;\n        }\n        elsif\
    \ ($x == -28) {\n            $neg = 1;\n        }\n        elsif ($x == -29) {\n\
    \            $neg = 1;\n        }\n        elsif ($x == -30) {\n            $neg\
    \ = 1;", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n     \
    \       push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r = ();\n\
    \    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @a;\n \
    \   foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@a, $x);\n\
    \        }\n    }\n    return @a;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n \
    \   foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r;\n    my $neg = 0;\n    foreach\
    \ my $x (@$l) {\n        if ($x > 0) {\n            $neg = 0;\n        }\n   \
    \     elsif ($x < 0) {\n            $neg = 1;\n        }\n        elsif ($neg)\
    \ {\n            $x = 0;\n        }\n        push(@r, $x);\n    }\n    return\
    \ @r;\n}", "    my @r;\n    my $neg;\n    my $i;\n    my $j;\n    my $k;\n   \
    \ my $n;\n    my $m;\n    my $p;\n    my $neg;\n    my $neg1;\n    my $neg2;\n\
    \    my $neg3;\n    my $neg4;\n    my $neg5;\n    my $neg6;\n    my $neg7;\n \
    \   my $neg8;\n    my $neg9;\n    my $neg10;\n    my $neg11;\n    my $neg12;\n\
    \    my $neg13;\n    my $neg14;\n    my $neg15;\n    my $neg16;\n    my $neg17;\n\
    \    my $neg18;\n    my $neg19;\n    my $neg20;\n    my $neg21;\n    my $neg22;\n\
    \    my $neg23;\n    my $neg24;\n    my $neg25;\n    my $neg26;\n    my $neg27;\n\
    \    my $neg28;\n    my $neg29;\n    my $neg30;\n    my $neg31;\n    my $neg32;\n\
    \    my $neg33;\n    my $neg34;\n    my $neg35;\n    my $neg36;\n    my $neg37;\n\
    \    my $neg38;\n    my $neg39;\n    my $neg40;\n    my $neg41;\n    my $neg42;\n\
    \    my $neg43;\n    my $neg44;\n    my $neg45;\n    my $neg46;\n    my $neg47;\n\
    \    my $neg48;\n    my $neg49;\n    my $neg50;\n    my $neg51;\n    my $neg52;\n\
    \    my $neg53;\n    my $neg54;\n    my $neg55;\n    my $neg56;\n    my $neg57;\n\
    \    my $neg58;\n    my $neg59;\n    my $neg60;\n    my $neg61;\n    my $neg62;\n\
    \    my $neg63;\n    my $neg64;\n    my $neg65;\n    my $neg66;\n    my $neg67;\n\
    \    my $neg68;\n    my $neg69;\n    my $neg70;\n    my $neg71;\n    my $neg72;\n\
    \    my $neg73;\n    my $neg74;\n    my $neg75;\n    my $neg76;\n    my $neg77;\n\
    \    my $neg78;\n    my $neg79;\n    my $neg80;\n    my $neg81;\n    my $neg82;\n\
    \    ", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n      \
    \      push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n    foreach\
    \ my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n\
    \    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if\
    \ ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n}",
  "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r,\
    \ $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r = ();\n\
    \    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @positive;\n    foreach my $num (@$l) {\n        if ($num >\
    \ 0) {\n            push(@positive, $num);\n        }\n    }\n    return @positive;\n\
    }", "    my @r = ();\n    foreach my $x (@$l) {\n        if ($x > 0) {\n     \
    \       push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r = ();\n\
    \    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @a = @$l;\n    my @b = ();\n    foreach my $x (@a) {\n    \
    \    if ($x > 0) {\n            push(@b, $x);\n        }\n    }\n    return @b;\n\
    }", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n          \
    \  push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n    my $neg;\n\
    \    my $i;\n    for ($i = 0; $i < @$l; $i++) {\n        if ($l->[$i] < 0) {\n\
    \            $neg = 1;\n        } else {\n            $neg = 0;\n        }\n \
    \       push(@r, $l->[$i] unless $neg);\n    }\n    return @r;\n}", "    my @r;\n\
    \    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @a = @$l;\n    my @b = ();\n  \
    \  foreach my $x (@a) {\n        if ($x > 0) {\n            push(@b, $x);\n  \
    \      }\n    }\n    return @b;\n}", "    my @r;\n    my $sign = 1;\n    foreach\
    \ my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n        } else\
    \ {\n            push(@r, $sign * $x);\n            $sign = -$sign;\n        }\n\
    \    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if\
    \ ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n}",
  "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r,\
    \ $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r = ();\n    foreach my $x (@$l) {\n        if ($x > 0) {\n\
    \            push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r =\
    \ ();\n    my $neg = 0;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n  \
    \          $neg = 0;\n        } elsif ($x < 0) {\n            $neg = 1;\n    \
    \    } else {\n            push(@r, $x);\n        }\n    }\n    return @r;\n}",
  "    my @positive;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n         \
    \   push(@positive, $x);\n        }\n    }\n    return @positive;\n}", "    my\
    \ @r;\n    my $neg;\n    my $pos;\n    my $i;", "    my @r;\n    my $neg;\n  \
    \  my $i;\n    my $j;\n    my $k;\n    my $max;\n    my $min;\n    my $pos;\n\
    \    my $neg;\n    my $k;\n    my $max;\n    my $min;\n    my $pos;\n    my $neg;\n\
    \    my $max;\n    my $min;\n    my $pos;\n    my $neg;\n    my $max;\n    my\
    \ $min;\n    my $pos;\n    my $neg;\n    my $max;\n    my $min;\n    my $pos;\n\
    \    my $neg;\n    my $max;\n    my $min;\n    my $pos;\n    my $neg;\n    my\
    \ $max;\n    my $min;\n    my $pos;\n    my $neg;\n    my $max;\n    my $min;\n\
    \    my $pos;\n    my $neg;\n    my $max;\n    my $min;\n    my $pos;\n    my\
    \ $neg;\n    my $max;\n    my $min;\n    my $pos;\n    my $neg;\n    my $max;\n\
    \    my $min;\n    my $pos;\n    my $neg;\n    my $max;\n    my $min;\n    my\
    \ $pos;\n    my $neg;\n    my $max;\n    my $min;\n    my $pos;\n    my $neg;\n\
    \    my $max;\n    my $min;\n    my $pos;\n    my $neg;\n    my $max;\n    my\
    \ $min;\n    my $pos;\n    my $neg;\n    my $max;\n    my $min;\n    my $pos;\n\
    \    my $neg;\n    my $max;\n    my $min;\n    my $pos;\n    my $neg;\n    my\
    \ $max;\n    my $min;\n    my $pos;\n    my $neg;\n    my $max;\n    my $min;\n\
    \    my $pos;\n    my $neg;\n    my $max;\n    my $min;\n    my $pos;\n    my\
    \ $neg;\n    my $max;\n    my $min;\n    my $pos;\n    my $neg;\n    my $max;\n\
    \    my $min;\n    my $pos;\n    my $neg;\n    my $max;\n    my $min;\n    my\
    \ $pos;\n    my $neg;\n    my $max;\n    my $min;\n    my $pos;\n    my $neg;\n\
    \    my $max;\n    ", "    my @r = ();\n    foreach my $x (@$l) {\n        if\
    \ ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n}",
  "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r,\
    \ $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n \
    \   foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @a = @$l;\n    my @b = ();\n  \
    \  my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = @a;\n    my $m = @a;\n\
    \    my $p = 1;\n    my $q = 0;\n    my $r = 1;\n    my $s = 1;\n    my $t = 1;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 1;\n    my $y = 1;\n\
    \    my $z = 1;\n    my $a = 1;\n    my $b = 1;\n    my $c = 1;\n    my $d = 1;\n\
    \    my $e = 1;\n    my $f = 1;\n    my $g = 1;\n    my $h = 1;\n    my $i = 1;\n\
    \    my $j = 1;\n    my $k = 1;\n    my $l = 1;\n    my $m = 1;\n    my $n = 1;\n\
    \    my $o = 1;\n    my $p = 1;\n    my $q = 1;\n    my $r = 1;\n    my $s = 1;\n\
    \    my $t = 1;\n    my $u = 1;\n    my $v = 1;\n    my $w = 1;\n    my $x = 1;\n\
    \    my $y = 1;\n    my $z = 1;\n    my $a = 1;\n    my $b = 1;\n    my $c = 1;\n\
    \    my $d = 1;\n    my $e = 1;\n    my $f = 1;\n    my $g = 1;\n    my $h = 1;\n\
    \    my $i = 1;\n    my $j = 1;\n    my $k = 1;\n    my $l = 1;\n    my $m = 1;\n\
    \    my $n = 1;\n    my $o = 1;\n    my $p = 1;\n    my $q = 1;\n    my $r = 1;\n\
    \    my $s = 1;\n    my $t = 1;\n    my $u = 1;\n    my $v = 1;\n    my $w = 1;\n\
    \    my $x = 1;\n    my $y = 1;\n    my $z = 1;\n    my $a = 1;\n    my $b = 1;\n\
    \    my $c = 1;\n    my $d = 1;\n    my $e = 1;\n    my $f = 1;\n    my $g = 1;\n\
    \    my $h = 1;\n    my $i = 1;\n    my $j = 1;\n    my $k = 1;\n    my $l = 1;\n\
    \    my $m = 1;\n    my $n = 1;\n    my $o = 1;\n    my $p = 1;\n    my $q = 1;\n\
    \    my $r = 1;\n    my $s = 1;\n    my $t = 1;\n    my $u = 1;\n    my $v = 1;\n\
    \    my $w = 1;\n    my $x = 1;\n    my $y = 1;\n    my $z = 1;\n    my $a = 1;\n\
    \    my $b = 1;\n    my $c = 1;\n    my $d = 1;\n    my $e = 1;\n    my $f = 1;",
  "    my @positive;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n         \
    \   push(@positive, $x);\n        }\n    }\n    return @positive;\n}", "    my\
    \ @r;\n    my $sign = 1;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n \
    \           $sign = 1;\n        } elsif ($x < 0) {\n            $sign = -1;\n\
    \        } else {\n            push @r, $x;\n        }\n    }\n    return @r;\n\
    }", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n          \
    \  push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n    my $neg\
    \ = 0;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n            $neg = 0;\n\
    \        }\n        elsif ($x < 0) {\n            $neg = 1;\n        }\n     \
    \   elsif ($x == 0) {\n            $neg = 0;\n        }\n        elsif ($x ==\
    \ -1) {\n            $neg = 1;\n        }\n        elsif ($x == -2) {\n      \
    \      $neg = 1;\n        }\n        elsif ($x == -3) {\n            $neg = 1;\n\
    \        }\n        elsif ($x == -4) {\n            $neg = 1;\n        }\n   \
    \     elsif ($x == -5) {\n            $neg = 1;\n        }\n        elsif ($x\
    \ == -6) {\n            $neg = 1;\n        }\n        elsif ($x == -7) {\n   \
    \         $neg = 1;\n        }\n        elsif ($x == -8) {\n            $neg =\
    \ 1;\n        }\n        elsif ($x == -9) {\n            $neg = 1;\n        }\n\
    \        elsif ($x == -10) {\n            $neg = 1;\n        }\n        elsif\
    \ ($x == -11) {\n            $neg = 1;\n        }\n        elsif ($x == -12) {\n\
    \            $neg = 1;\n        }\n        elsif ($x == -13) {\n            $neg\
    \ = 1;\n        }\n        elsif ($x == -14) {\n            $neg = 1;\n      \
    \  }\n        elsif ($x == -15) {\n            $neg = 1;\n        }\n        elsif\
    \ ($x == -16) {\n            $neg = 1;\n        }\n        elsif ($x == -17) {\n\
    \            $neg = 1;\n        }\n        elsif ($x == -18) {\n            $neg\
    \ = 1;\n        }\n        elsif ($x == -19) {\n            $neg = 1;\n      \
    \  }\n        elsif ($x == -20) {\n            $neg = 1;\n        }\n        elsif\
    \ ($x == -21) {\n            $neg = 1;\n        }\n        elsif ($x == -22) {\n\
    \            $neg = 1;\n        }\n        elsif ($x == -23) {\n            $neg\
    \ = 1;\n        }\n        elsif ($x == -24) {\n            $neg = 1;\n      \
    \  }\n        elsif ($x == -25) {\n            $neg = 1;\n        }\n        elsif\
    \ ($x == -26) {\n            $neg = 1;\n        }\n        elsif ($x == -27) {\n\
    \            $neg = 1;\n        }\n        elsif ($x == -28) {\n            $neg\
    \ = 1;\n        }\n        elsif ($x == -29) {\n            $neg = 1;\n      \
    \  }\n        elsif ($x == -30) {\n            $neg = 1;", "    my @r;\n    foreach\
    \ my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n\
    \    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if\
    \ ($x > 0)\n        {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n \
    \   foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r = ();\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r = ();\n\
    \    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r = ();\n    foreach my $x (@$l) {\n        if ($x > 0) {\n\
    \            push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n\
    \    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r = ();\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r = ();\n    my $i = 0;\n    foreach my $x (@$l) {\n     \
    \   if ($x > 0) {\n            push @r, $x;\n        }\n        $i++;\n    }\n\
    \    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x >\
    \ 0) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n}", "   \
    \ my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r,\
    \ $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @a;\n \
    \   foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@a, $x);\n\
    \        }\n    }\n    return @a;\n}", "    my @r;\n    my $neg = 0;\n    foreach\
    \ my $x (@$l) {\n        if ($x > 0) {\n            $neg = 0;\n        }\n   \
    \     elsif ($x < 0) {\n            $neg = 1;\n        }\n        elsif ($neg)\
    \ {\n            push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my\
    \ @r;\n    my $sign = 1;\n    foreach my $n (@$l) {\n        if ($n < 0) {\n \
    \           $sign = -$sign;\n        }\n        push(@r, $sign * $n);\n    }\n\
    \    return @r;\n}", "    my @positive;\n    foreach my $x (@$l) {\n        if\
    \ ($x > 0) {\n            push(@positive, $x);\n        }\n    }\n    return @positive;\n\
    }", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n          \
    \  push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n    foreach\
    \ my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n\
    \    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if\
    \ ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n}",
  "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r,\
    \ $x);\n        }\n    }\n    return @r;\n}", "    my @a;\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@a, $x);\n        }\n    }\n    return\
    \ @a;\n}", "    my @a = @$l;\n    my @b = ();\n    my $i = 0;\n    foreach my\
    \ $x (@a) {\n        if ($x > 0) {\n            push(@b, $x);\n        }\n   \
    \     $i++;\n    }\n    return @b;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r = ();\n    foreach my $x (@$l) {\n        if ($x > 0) {\n\
    \            push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n\
    \    my $neg = 0;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n        \
    \    $neg = 0;\n        }\n        elsif ($x < 0) {\n            $neg = 1;\n \
    \       }\n        elsif ($x == 0) {\n            $neg = 1;\n        }\n     \
    \   elsif ($neg) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n\
    }", "    my @a;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n          \
    \  push(@a, $x);\n        }\n    }\n    return @a;\n}", "    my @r;\n    foreach\
    \ my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n\
    \    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if\
    \ ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n}",
  "    my @r = ();\n    foreach my $x (@$l) {\n        if ($x > 0) {\n           \
    \ push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r = ();\n    foreach\
    \ my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n\
    \    }\n    return @r;\n}", "    my @r;\n    my $neg;\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $max;\n    my $maxi;\n    my $maxj;\n    my $maxk;\n    my\
    \ $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n\
    \    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n \
    \   my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n  \
    \  my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n   \
    \ my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my\
    \ $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n\
    \    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n \
    \   my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n  \
    \  my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n   \
    \ my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my\
    \ $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n\
    \    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n \
    \   my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n  \
    \  my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n   \
    \ my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my\
    \ $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n\
    \    my $maxj;\n    ", "    my @r;\n    my $neg;\n    my $i;\n    my $j;\n   \
    \ my $k;\n    my $max;\n    my $min;\n    my $x;\n    my $y;\n    my $z;\n   \
    \ my $w;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n\
    \    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my\
    \ $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n\
    \    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my\
    \ $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n\
    \    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my\
    \ $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n\
    \    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my\
    \ $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n\
    \    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my\
    \ $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n\
    \    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my\
    \ $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n\
    \    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my\
    \ $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n\
    \    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my\
    \ $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;",
  "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r,\
    \ $x);\n        }\n    }\n    return @r;\n}", "    my @a = ();\n    foreach my\
    \ $x (@$l) {\n        if ($x > 0) {\n            push(@a, $x);\n        }\n  \
    \  }\n    return @a;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x\
    \ > 0) {\n            push(@r, $x);\n        }\n    }\n    return @r;\n}", " \
    \   my @a = ();\n    foreach my $x (@$l) {\n        if ($x > 0) {\n          \
    \  push(@a, $x);\n        }\n    }\n    return @a;\n}", "    my @r = ();\n   \
    \ foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n  \
    \      }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r = ();\n\
    \    foreach my $x (@$l) {\n        if ($x > 0){\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n \
    \   foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @a;\n    foreach my $x (@$l) {\n        if ($x > 0) {\n   \
    \         push(@a, $x);\n        }\n    }\n    return @a;\n}", "    my @r;\n \
    \   foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    my $neg = 0;\n    foreach my $x (@$l) {\n        if\
    \ ($x > 0) {\n            $neg = 0;\n        }\n        elsif ($x < 0) {\n   \
    \         $neg = 1;\n        }\n        else {\n            push(@r, $x);\n  \
    \      }\n    }\n    return @r;\n}", "    my @r;\n    foreach my $x (@$l) {\n\
    \        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r;\n    my $neg;\n    my $i;\n    my $j;\n    my $k;\n   \
    \ my $max;\n    my $maxi;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my\
    \ $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n\
    \    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n \
    \   my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n  \
    \  my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n   \
    \ my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my\
    \ $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n\
    \    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n \
    \   my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n  \
    \  my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n   \
    \ my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my\
    \ $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n\
    \    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n \
    \   my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n  \
    \  my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n   \
    \ my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my\
    \ $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n    my $maxk;\n    my $maxj;\n\
    \    ", "    my @r = ();\n    foreach my $x (@$l) {\n        if ($x > 0) {\n \
    \           push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @r;\n\
    \    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@r, $x);\n\
    \        }\n    }\n    return @r;\n}", "    my @r = ();\n    foreach my $x (@$l)\
    \ {\n        if ($x > 0) {\n            push(@r, $x);\n        }\n    }\n    return\
    \ @r;\n}", "    my @r = ();\n    foreach my $x (@$l) {\n        if ($x > 0) {\n\
    \            push(@r, $x);\n        }\n    }\n    return @r;\n}", "    my @a =\
    \ ();\n    foreach my $x (@$l) {\n        if ($x > 0) {\n            push(@a,\
    \ $x);\n        }\n    }\n    return @a;\n}", "    my @r;\n    my $neg;\n    foreach\
    \ my $x (@$l) {\n        if ($x > 0) {\n            $neg = 0;\n        } elsif\
    \ ($x < 0) {\n            $neg = 1;\n        } else {\n            $neg = 0;\n\
    \        }\n        push(@r, $x);\n    }\n    return @r;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

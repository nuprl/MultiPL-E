completions:
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength == 0) {\n\
  \            $longest = $string;\n            $longestLength = $length;\n      \
  \  } elsif ($length > $longestLength) {\n            $longest = $string;\n     \
  \       $longestLength = $length;\n        }\n    }\n    return $longest if $longestLength\
  \ > 0;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    foreach my $s (@$strings) {\n        my $len = length($s);\n\
  \        if ($len > length($longest)) {\n            $longest = $s;\n        }\n\
  \    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
  \ $longest) {\n            last if length($string) > length($longest);\n       \
  \ }\n        $longest = $string;\n    }\n    return $longest if defined $longest;\n\
  \    return;\n}"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
  \ $longest) {\n            last if (length $string > length $longest);\n       \
  \ }\n        $longest = $string;\n    }\n    return $longest;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $length = length $string;\n        if ($length > $length) {\n       \
  \     $longest = $string;\n        }\n    }\n    return $longest if defined $longest;\n\
  \    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       $length += length($string);\n        if ($length > $longest) {\n       \
  \     $longest = $string;\n        }\n    }\n    return $longest if defined $longest;\n\
  \    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = -1;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength < $length)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
  \        if ($length > length($longest)) {\n            $longest = $string;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength < $length)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest unless defined $longest;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest = undef;\n    my $longestLength = undef;\n    foreach my $string\
  \ (@$strings) {\n        my $length = length($string);\n        if ($longestLength\
  \ eq undef) {\n            $longest = $string;\n            $longestLength = $length;\n\
  \        } elsif ($longestLength > $length) {\n            $longest = $string;\n\
  \            $longestLength = $length;\n        }\n    }\n    return $longest if\
  \ defined $longest;\n    return;\n}"
- "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
  \ $longest) {\n            last if (length($string) > length($longest));\n     \
  \   }\n        $longest = $string;\n    }\n    return $longest;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       $length += length($string);\n        if ($length > $longest) {\n       \
  \     $longest = $string;\n        }\n    }\n    return $longest if $length;\n \
  \   return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $length = length $string;\n        if ($length > $length) {\n       \
  \     $longest = $string;\n        }\n    }\n    return $longest if defined $longest;\n\
  \    return;\n}"
- "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
  \ {\n        $length = length($string);\n        if ($length > $length) {\n    \
  \        $longest = $string;\n        }\n    }\n    return $longest if defined $longest;\n\
  \    return $strings[0];\n}"
- "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
  \ $longest) {\n            last if length($string) > length($longest);\n       \
  \ }\n        $longest = $string;\n    }\n    return $longest if defined $longest;\n\
  \    return;\n}"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $length = length($string);\n        if ($length > $length) {\n      \
  \      $longest = $string;\n        }\n        elsif ($length == $length) {\n  \
  \          $longest = $string if length($string) > length($longest);\n        }\n\
  \    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
  \ $longest) {\n            last if (length($string) > length($longest));\n     \
  \   }\n        $longest = $string;\n    }\n    return $longest if (defined $longest);\n\
  \    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    foreach my $s (@$strings) {\n        if (length($s) > length($longest))\
  \ {\n            $longest = $s;\n        }\n    }\n    return $longest if defined\
  \ $longest;\n    return;\n}"
- "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $length) {\n \
  \           $longest = $string;\n        }\n    }\n    return $longest if defined\
  \ $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength;\n    foreach my $string (@$strings) {\n\
  \        my $length = length($string);\n        if ($longestLength == 0) {\n   \
  \         $longest = $string;\n            $longestLength = $length;\n        }\
  \ elsif ($longestLength == $length) {\n            $longest = $string if ($longest\
  \ eq $string);\n        } else {\n            $longest = undef;\n        }\n   \
  \ }\n    return $longest if (defined $longest);\n    return undef;\n}"
- "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
  \ $longest) {\n            last if (length($string) > length($longest));\n     \
  \   }\n        $longest = $string;\n    }\n    return $longest unless defined $longest;\n\
  \    return $longest;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength == 0) {\n\
  \            $longest = $string;\n            $longestLength = $length;\n      \
  \  } elsif ($length > $longestLength) {\n            $longest = $string;\n     \
  \       $longestLength = $length;\n        }\n    }\n    return $longest if defined\
  \ $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength;\n    foreach my $string (@$strings) {\n\
  \        my $length = length($string);\n        if ($longestLength < $length) {\n\
  \            $longest = $string;\n            $longestLength = $length;\n      \
  \  }\n    }\n    return $longest if $longestLength;\n    return;\n}"
- "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
  \ {\n        $length = length($string);\n        if ($length > $length) {\n    \
  \        $longest = $string;\n        }\n    }\n    return $longest if defined $longest;\n\
  \    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $length = length $string;\n        if ($length > $length) {\n       \
  \     $longest = $string;\n        }\n    }\n    return $longest if defined $longest;\n\
  \    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       $length = length($string);\n        if ($length > $length) {\n         \
  \   $longest = $string;\n        }\n    }\n    return $longest if defined $longest;\n\
  \    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $length = length($string);\n        if ($length > $length) {\n      \
  \      $longest = $string;\n        }\n    }\n    return $longest if defined $longest;\n\
  \    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength == 0) {\n\
  \            $longest = $string;\n            $longestLength = $length;\n      \
  \  } elsif ($length > $longestLength) {\n            $longest = $string;\n     \
  \       $longestLength = $length;\n        }\n    }\n    return $longest if $longestLength\
  \ > 0;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $length = length($string);\n        if ($length > $length) {\n      \
  \      $longest = $string;\n        }\n    }\n    return $longest if defined $longest;\n\
  \    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
  \        if ($len > length($longest)) {\n            $longest = $string;\n     \
  \   }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest = undef;\n    my $longestLength = -1;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength < $length)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $len = length($string);\n        if ($len > $length) {\n       \
  \     $longest = $string;\n            $length = $len;\n        }\n    }\n    return\
  \ $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    foreach my $string (@$strings) {\n        if (length($string)\
  \ > length($longest)) {\n            $longest = $string;\n        }\n    }\n   \
  \ return $longest if defined $longest;\n    return;\n}"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return undef;\n}"
- "    my $longest;\n    my $longestLength;\n    foreach my $string (@$strings) {\n\
  \        if (length($string) > $longestLength) {\n            $longest = $string;\n\
  \            $longestLength = length($string);\n        }\n    }\n    return $longest\
  \ if $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $longestLength = -1;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength < $length)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest = undef;\n    foreach my $string (@$strings) {\n        my $length\
  \ = length($string);\n        if (defined $longest and $length > length($longest))\
  \ {\n            $longest = $string;\n        }\n    }\n    return $longest if defined\
  \ $longest;\n    return;\n}"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
  \ $longest) {\n            last if length $string > length $longest;\n        }\n\
  \        $longest = $string;\n    }\n    return $longest;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $longestLength;\n    foreach my $string (@$strings) {\n\
  \        my $length = length($string);\n        if ($longestLength < $length) {\n\
  \            $longest = $string;\n            $longestLength = $length;\n      \
  \  }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest = undef;\n    foreach my $string (@$strings) {\n        my $len\
  \ = length($string);\n        if (defined $longest && $len > $longest) {\n     \
  \       $longest = $len;\n        }\n    }\n    return $longest ? $strings[$#{$strings}]\
  \ : $strings[0];\n}"
- "    my $longest;\n    foreach my $string (@$strings) {\n        if (length($string)\
  \ > length($longest)) {\n            $longest = $string;\n        }\n    }\n   \
  \ return $longest if defined $longest;\n    return;\n}"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength < $length)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest unless defined $longest;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       $length += length($string);\n        if ($length > $longest) {\n       \
  \     $longest = $length;\n        }\n    }\n    return $longest ? $strings[$longest-1]\
  \ : undef;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
  \        if ($length > length($longest)) {\n            $longest = $string;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       $length = length($string);\n        if ($length > $length) {\n         \
  \   $longest = $string;\n        }\n    }\n    return $longest if defined $longest;\n\
  \    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       $length += length($string);\n        if ($length > $longest) {\n       \
  \     $longest = $string;\n        }\n    }\n    return $longest if $length;\n \
  \   return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       $length = $length + (length($string));\n        if ($length > $longest)\
  \ {\n            $longest = $length;\n        }\n    }\n    return $longest ? $strings[$#{$strings}-1]\
  \ : undef;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength < $length)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    foreach my $string (@$strings) {\n        if (length($string)\
  \ > length($longest)) {\n            $longest = $string;\n        }\n    }\n   \
  \ return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $length = length($string);\n        if ($length > $length) {\n      \
  \      $longest = $string;\n        }\n    }\n    return $longest if defined $longest;\n\
  \    return;\n}"
- "    my $longest;\n    my $longestLength = -1;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength == -1 ||\
  \ $longestLength > $length) {\n            $longest = $string;\n            $longestLength\
  \ = $length;\n        }\n    }\n    return $longest if $longestLength > 0;\n   \
  \ return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $stringLength = length($string);\n        if ($stringLength > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $stringLength;\n\
  \        }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest = undef;\n    my $longestLength = undef;\n    foreach my $string\
  \ (@$strings) {\n        if (defined $longestLength and length $string > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $longestLength;\n\
  \        } elsif (defined $longestLength and length $string == $longestLength) {\n\
  \            $longest = $string if (length $string > length $longest);\n       \
  \ }\n    }\n    return $longest;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength > $length)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
  \ $longest) {\n            last if (length($string) > length($longest));\n     \
  \   }\n        $longest = $string;\n    }\n    return $longest;\n}"
- "    my $longest = undef;\n    my $longestLength = undef;\n    foreach my $string\
  \ (@$strings) {\n        my $length = length($string);\n        if ($longestLength\
  \ eq undef) {\n            $longest = $string;\n            $longestLength = $length;\n\
  \        }\n        elsif ($length eq $longestLength) {\n            $longest =\
  \ $string if ($string ne $longest);\n        }\n        else {\n            $longest\
  \ = undef;\n            $longestLength = $length;\n        }\n    }\n    return\
  \ $longest if (defined $longest);\n    return undef;\n}"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength == 0) {\n\
  \            $longest = $string;\n            $longestLength = $length;\n      \
  \  } elsif ($length > $longestLength) {\n            $longest = $string;\n     \
  \       $longestLength = $length;\n        }\n    }\n    return $longest if defined\
  \ $longest;\n    return undef;\n}"
- "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length $string;\n        if (defined $longest && $length\
  \ > $length) {\n            $longest = $string;\n        }\n        elsif (defined\
  \ $longest && $length == $length) {\n            $longest = $string if (length $string\
  \ < length $longest);\n        }\n    }\n    return $longest if (defined $longest);\n\
  \    return;\n}"
- "    my $longest;\n    foreach my $string (@$strings) {\n        if (length($string)\
  \ > length($longest)) {\n            $longest = $string;\n        }\n    }\n   \
  \ return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if defined $longest;\n    return;\n}"
- "    my $longest;\n    foreach my $string (@$strings) {\n        if (length($string)\
  \ > length($longest)) {\n            $longest = $string;\n        }\n    }\n   \
  \ return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = -1;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength < $length)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $length = length($string);\n        if ($length > $length) {\n      \
  \      $longest = $string;\n        }\n    }\n    return $longest if defined $longest;\n\
  \    return;\n}"
- "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
  \ $longest) {\n            last if (length($string) > length($longest));\n     \
  \   }\n        $longest = $string;\n    }\n    return $longest;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest = undef;\n    my $longestLength = undef;\n    foreach my $string\
  \ (@$strings) {\n        my $length = length($string);\n        if (defined $longestLength\
  \ and $length > $longestLength) {\n            $longest = $string;\n           \
  \ $longestLength = $length;\n        }\n    }\n    return $longest if defined $longest;\n\
  \    return undef;\n}"
- "    my $longest = undef;\n    my $longestLength = undef;\n    foreach my $string\
  \ (@$strings) {\n        my $length = length($string);\n        if ($longestLength\
  \ eq undef) {\n            $longest = $string;\n            $longestLength = $length;\n\
  \        } elsif ($longestLength > $length) {\n            $longest = $string;\n\
  \            $longestLength = $length;\n        }\n    }\n    return $longest if\
  \ defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength < $length)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $length) {\n \
  \           $longest = $string;\n        }\n    }\n    return $longest if defined\
  \ $longest;\n    return $strings[0];\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest = undef;\n    my $longestLength = undef;\n    foreach my $string\
  \ (@$strings) {\n        my $length = length($string);\n        if ($longestLength\
  \ eq undef) {\n            $longest = $string;\n            $longestLength = $length;\n\
  \        } elsif ($longestLength > $length) {\n            $longest = $string;\n\
  \            $longestLength = $length;\n        }\n    }\n    return $longest if\
  \ defined $longest;\n    return undef;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $longestLength = -1;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength == -1 ||\
  \ $longestLength > $length) {\n            $longest = $string;\n            $longestLength\
  \ = $length;\n        }\n    }\n    return $longest if $longestLength > 0;\n   \
  \ return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest = undef;\n    my $longestLength = undef;\n    foreach my $string\
  \ (@$strings) {\n        my $length = length($string);\n        if ($longestLength\
  \ eq undef) {\n            $longest = $string;\n            $longestLength = $length;\n\
  \        } elsif ($longestLength > $length) {\n            $longest = $string;\n\
  \            $longestLength = $length;\n        } else {\n            my $last =\
  \ $longest;\n            $longest = $string;\n            $longestLength = $length;\n\
  \        }\n    }\n    return $longest;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
  \ {\n        $length = length($string);\n        if (defined $longest && $length\
  \ >= $longest) {\n            $longest = $length;\n        }\n    }\n    return\
  \ $longest ? $strings[$longest-1] : undef;\n}"
- "    my $longest = undef;\n    foreach my $string (@$strings) {\n        my $length\
  \ = length($string);\n        if ($length > length($longest)) {\n            $longest\
  \ = $string;\n        }\n    }\n    return $longest if defined $longest;\n    return;\n\
  }"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength;\n    foreach my $string (@$strings) {\n\
  \        my $length = length($string);\n        if ($longestLength == -1 || $longestLength\
  \ > $length) {\n            $longest = $string;\n            $longestLength = $length;\n\
  \        }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $len = length($string);\n        if ($len > $length) {\n       \
  \     $longest = $string;\n            $length = $len;\n        }\n    }\n    return\
  \ $longest if defined $longest;\n    return $strings[0];\n}"
- "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $length) {\n \
  \           $longest = $string;\n        }\n    }\n    return $longest if defined\
  \ $longest;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength == 0) {\n\
  \            $longest = $string;\n            $longestLength = $length;\n      \
  \  } elsif ($length > $longestLength) {\n            $longest = $string;\n     \
  \       $longestLength = $length;\n        }\n    }\n    return $longest if $longestLength\
  \ > 0;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $len = length($string);\n        if ($len > $length) {\n       \
  \     $longest = $string;\n            $length = $len;\n        }\n    }\n    return\
  \ $longest if defined $longest;\n    return $strings[0];\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength == 0) {\n\
  \            $longest = $string;\n            $longestLength = $length;\n      \
  \  } elsif ($longestLength > $length) {\n            $longest = $string;\n     \
  \       $longestLength = $length;\n        } else {\n            last if $longestLength\
  \ == $length;\n        }\n    }\n    return $longest if $longest;\n    return;\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
  \ $longest) {\n            last if (length($string) > length($longest));\n     \
  \   }\n        $longest = $string;\n    }\n    return $longest;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       $length += length($string);\n        if ($length > $longest) {\n       \
  \     $longest = $string;\n        }\n    }\n    return $longest if $length;\n \
  \   return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $length = length($string);\n        if ($length > $length) {\n      \
  \      $longest = $string;\n        }\n    }\n    return $longest if defined $longest;\n\
  \    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    foreach my $string (@$strings) {\n        if (length($string)\
  \ > length($longest)) {\n            $longest = $string;\n        }\n    }\n   \
  \ return $longest if defined $longest;\n    return;\n}"
- "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
  \ $longest) {\n            last if (length($string) > length($longest));\n     \
  \   }\n        $longest = $string;\n    }\n    return $longest;\n}"
- "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $length) {\n \
  \           $longest = $string;\n        }\n    }\n    return $longest if defined\
  \ $longest;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       $length += length($string);\n        if ($length > $longest) {\n       \
  \     $longest = $string;\n        }\n    }\n    return $longest if $length;\n \
  \   return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $len = length($string);\n        if ($len > $length) {\n            $longest\
  \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest\
  \ if $length;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
  \        if ($length > length($longest)) {\n            $longest = $string;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $len = length($string);\n        if ($len > $length) {\n       \
  \     $longest = $string;\n            $length = $len;\n        }\n    }\n    return\
  \ $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength == 0) {\n\
  \            $longest = $string;\n            $longestLength = $length;\n      \
  \  } elsif ($length > $longestLength) {\n            $longest = $string;\n     \
  \       $longestLength = $length;\n        }\n    }\n    return $longest if $longestLength\
  \ > 0;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $length = length($string);\n        if ($length > $length) {\n      \
  \      $longest = $string;\n        }\n    }\n    return $longest if defined $longest;\n\
  \    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength == 0) {\n\
  \            $longest = $string;\n            $longestLength = $length;\n      \
  \  } elsif ($longestLength > $length) {\n            $longest = $string;\n     \
  \       $longestLength = $length;\n        } else {\n            last if $longestLength\
  \ == $length;\n        }\n    }\n    return $longest if $longest;\n    return;\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
  \       my $length = length($string);\n        if ($length > $length) {\n      \
  \      $longest = $string;\n        }\n        elsif ($length == $length) {\n  \
  \          $longest = $string if $length > 0;\n        }\n    }\n    return $longest\
  \ if defined $longest;\n    return;\n}"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return;\n}"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if $longestLength > 0;\n    return;\n}"
- "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
  \ {\n            $longest = $string;\n            $longestLength = $length;\n  \
  \      }\n    }\n    return $longest if defined $longest;\n    return $strings[0];\n\
  }"
- "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
  \ {\n        my $length = length($string);\n        if ($longestLength == 0) {\n\
  \            $longest = $string;\n            $longestLength = $length;\n      \
  \  } elsif ($length > $longestLength) {\n            $longest = $string;\n     \
  \       $longestLength = $length;\n        }\n    }\n    return $longest;\n}"
language: pl
name: HumanEval_12_longest
prompt: "# Out of list of strings, return the longest one. Return the first one in\
  \ case of multiple\n# strings of the same length. Return None in case the input\
  \ list is empty.\n# >>> longest([])\n# >>> longest(['a', 'b', 'c'])\n# 'a'\n# >>>\
  \ longest(['a', 'bb', 'ccc'])\n# 'ccc'\nsub longest {\n    my($strings) = @_;\n"
stop_tokens:
- '

  sub'
- '

  #'
- '


  '
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&longest;\n\
  \        if(eq_deeply($candidate->([]),undef)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([\"x\", \"y\", \"\
  z\"]),\"x\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
  \    if(eq_deeply($candidate->([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"\
  abc\"]),\"zzzz\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  }\n\ntesthumaneval();"

{
  "name": "HumanEval_69_search",
  "language": "ts",
  "prompt": "//You are given a non-empty array of positive integers. Return the greatest integer that is greater than \n// zero, and has a frequency greater than or equal to the value of the integer itself. \n// The frequency of an integer is the number of times it appears in the array.\n// If no such a value exist, return -1.\n// Examples:\n// >>> search([4, 1, 2, 2, 3, 1])\n// 2\n// >>> search([1, 2, 2, 3, 3, 3, 4, 4, 4])\n// 3\n// >>> search([5, 5, 4, 4, 4])\n// -1\nfunction search(lst: number[]): number {\n",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = search;\n  assert.deepEqual(candidate([5, 5, 5, 5, 1]),1);\n  assert.deepEqual(candidate([4, 1, 4, 1, 4, 4]),4);\n  assert.deepEqual(candidate([3, 3]),-1);\n  assert.deepEqual(candidate([8, 8, 8, 8, 8, 8, 8, 8]),8);\n  assert.deepEqual(candidate([2, 3, 3, 2, 2]),2);\n  assert.deepEqual(candidate([2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1]),1);\n  assert.deepEqual(candidate([3, 2, 8, 2]),2);\n  assert.deepEqual(candidate([6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10]),1);\n  assert.deepEqual(candidate([8, 8, 3, 6, 5, 6, 4]),-1);\n  assert.deepEqual(candidate([6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9]),1);\n  assert.deepEqual(candidate([1, 9, 10, 1, 3]),1);\n  assert.deepEqual(candidate([6, 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10]),5);\n  assert.deepEqual(candidate([1]),1);\n  assert.deepEqual(candidate([8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5]),4);\n  assert.deepEqual(candidate([2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10]),2);\n  assert.deepEqual(candidate([1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3]),1);\n  assert.deepEqual(candidate([9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4]),4);\n  assert.deepEqual(candidate([2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7]),4);\n  assert.deepEqual(candidate([9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1]),2);\n  assert.deepEqual(candidate([5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8]),-1);\n  assert.deepEqual(candidate([10]),-1);\n  assert.deepEqual(candidate([9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2]),2);\n  assert.deepEqual(candidate([5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8]),1);\n  assert.deepEqual(candidate([7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6]),1);\n  assert.deepEqual(candidate([3, 10, 10, 9, 2]),-1);\n}\n\ntest();",
  "completions": [
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    let max = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n        if (freq[lst[i]] > max) {\n            max = freq[lst[i]];\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === max) {\n            return lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    for (let i in freq) {\n        if (freq[i] === max) {\n            return i;\n        }\n    }\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]) {\n            return lst[i];\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]) {\n            return lst[i];\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max === 0 ? -1 : max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]) {\n            return lst[i];\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    for (let i in freq) {\n        if (freq[i] === max) {\n            return i;\n        }\n    }\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max === 0 ? -1 : max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let maxFreq = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            maxFreq = 1;\n        } else if (lst[i] === max) {\n            maxFreq++;\n        }\n    }\n    if (maxFreq === 0) {\n        return -1;\n    } else {\n        return max;\n    }\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let maxCount = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            maxCount = 1;\n        } else if (lst[i] === max) {\n            maxCount++;\n        }\n    }\n    if (maxCount >= lst.length) {\n        return max;\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let maxFreq = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            maxFreq = 1;\n        } else if (lst[i] === max) {\n            maxFreq++;\n        }\n    }\n    if (maxFreq > lst.length) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let maxCount = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            maxCount = 1;\n        } else if (lst[i] === max) {\n            maxCount++;\n        }\n    }\n    return maxCount === lst.length ? max : -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]) {\n            return lst[i];\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]) {\n            max = Math.max(max, lst[i]);\n        }\n    }\n    return max === 0 ? -1 : max;\n}\n",
    "    let max = 0;\n    let max_count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_count = 1;\n        } else if (lst[i] === max) {\n            max_count++;\n        }\n    }\n    if (max_count >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    let max = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n        if (freq[lst[i]] > max) {\n            max = freq[lst[i]];\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === max) {\n            return lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0 && lst[i] > max) {\n            max = lst[i];\n            count = 1;\n        } else if (lst[i] > 0 && lst[i] === max) {\n            count++;\n        }\n    }\n    if (count >= lst.length) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0 && lst[i] > max) {\n            max = lst[i];\n            count = 1;\n        } else if (lst[i] > 0 && lst[i] === max) {\n            count++;\n        }\n    }\n    if (count >= lst.length) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0 && lst[i] > max) {\n            max = lst[i];\n            count = 1;\n        } else if (lst[i] > 0 && lst[i] === max) {\n            count++;\n        }\n    }\n    if (count === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let maxFreq = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            maxFreq = 1;\n        } else if (lst[i] === max) {\n            maxFreq++;\n        }\n    }\n    if (maxFreq > lst.length / 2) {\n        return max;\n    } else {\n        return -1;\n    }\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]) {\n            return lst[i];\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]) {\n            return lst[i];\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max === 0 ? -1 : max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let maxFreq = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            maxFreq = 1;\n        } else if (lst[i] === max) {\n            maxFreq++;\n        }\n    }\n    if (maxFreq > lst.length) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let maxFreq = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            maxFreq = 1;\n        } else if (lst[i] === max) {\n            maxFreq++;\n        }\n    }\n    if (maxFreq === 0) {\n        return -1;\n    } else {\n        return max;\n    }\n}\n",
    "    let max = -1;\n    let maxCount = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            maxCount = 1;\n        } else if (lst[i] === max) {\n            maxCount++;\n        }\n    }\n    if (maxCount >= lst.length) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    return max === 0 ? -1 : max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max) {\n            return max;\n        }\n    }\n    return -1;\n}",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]) {\n            return lst[i];\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let map = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (map[lst[i]]) {\n            map[lst[i]]++;\n        } else {\n            map[lst[i]] = 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (map[lst[i]] >= lst[i]) {\n            return lst[i];\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    for (let i in freq) {\n        if (freq[i] === max) {\n            return i;\n        }\n    }\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0 && lst[i] > max) {\n            max = lst[i];\n            count = 1;\n        } else if (lst[i] > 0 && lst[i] === max) {\n            count++;\n        }\n    }\n    if (count >= lst.length) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    let max = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n        if (freq[lst[i]] > max) {\n            max = freq[lst[i]];\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === max) {\n            return lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n            break;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max === 0 ? -1 : max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n            break;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max) {\n            return lst[i];\n        }\n    }\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    return max === 0 ? -1 : max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let max = 0;\n    let maxCount = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            maxCount = 1;\n        } else if (lst[i] === max) {\n            maxCount++;\n        }\n    }\n    if (maxCount >= lst.length) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    for (let i in freq) {\n        if (freq[i] === max) {\n            return i;\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max === 0 ? -1 : max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]) {\n            return lst[i];\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]) {\n            return lst[i];\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    for (let i in freq) {\n        if (freq[i] === max) {\n            return i;\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let maxFreq = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            maxFreq = 1;\n        } else if (lst[i] === max) {\n            maxFreq++;\n        }\n    }\n    if (maxFreq === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let maxFreq = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            maxFreq = 1;\n        } else if (lst[i] === max) {\n            maxFreq++;\n        }\n    }\n    if (maxFreq > 0) {\n        return max;\n    } else {\n        return -1;\n    }\n}\n",
    "    let max = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0 && lst[i] >= lst[i]) {\n            count++;\n            if (count > max) {\n                max = count;\n            }\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    let max = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n        if (freq[lst[i]] > max) {\n            max = freq[lst[i]];\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === max) {\n            return lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max) {\n            return max;\n        }\n    }\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n            break;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let map = new Map();\n    for (let i = 0; i < lst.length; i++) {\n        let val = lst[i];\n        if (!map.has(val)) {\n            map.set(val, 1);\n        } else {\n            map.set(val, map.get(val) + 1);\n        }\n    }\n    let max = -1;\n    for (let [val, count] of map) {\n        if (count >= val) {\n            max = Math.max(max, val);\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let maxFreq = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            maxFreq = 1;\n        } else if (lst[i] === max) {\n            maxFreq++;\n        }\n    }\n    if (maxFreq === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    let max = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n        if (freq[lst[i]] > max) {\n            max = freq[lst[i]];\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === max) {\n            return lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max === 0 ? -1 : max;\n}\n",
    "    let map = new Map();\n    for (let i = 0; i < lst.length; i++) {\n        if (map.has(lst[i])) {\n            map.set(lst[i], map.get(lst[i]) + 1);\n        } else {\n            map.set(lst[i], 1);\n        }\n    }\n    let max = 0;\n    for (let [k, v] of map) {\n        if (v >= k) {\n            max = Math.max(max, k);\n        }\n    }\n    return max === 0 ? -1 : max;\n}",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    for (let i in freq) {\n        if (freq[i] === max) {\n            return i;\n        }\n    }\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n            break;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]) {\n            return lst[i];\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let maxFreq = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            maxFreq = 1;\n        } else if (lst[i] === max) {\n            maxFreq++;\n        }\n    }\n    if (maxFreq > lst.length / 2) {\n        return max;\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max === 0 ? -1 : max;\n}\n",
    "    let max = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0 && lst[i] > max) {\n            max = lst[i];\n            count = 1;\n        } else if (lst[i] > 0 && lst[i] === max) {\n            count++;\n        }\n    }\n    if (count === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let max = 0;\n    let maxCount = 0;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        count = lst.filter(x => x === lst[i]).length;\n        if (count > maxCount) {\n            max = lst[i];\n            maxCount = count;\n        }\n    }\n    return maxCount === 0 ? -1 : max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]) {\n            max = Math.max(max, lst[i]);\n        }\n    }\n    return max === 0 ? -1 : max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    let max = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n        if (freq[lst[i]] > max) {\n            max = freq[lst[i]];\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === max) {\n            return lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let maxFreq = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            maxFreq = 1;\n        } else if (lst[i] === max) {\n            maxFreq++;\n        }\n    }\n    if (maxFreq > 0) {\n        return max;\n    } else {\n        return -1;\n    }\n}\n",
    "    let freq = {};\n    let max = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n        if (freq[lst[i]] > max) {\n            max = freq[lst[i]];\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === max) {\n            return lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    for (let i in freq) {\n        if (freq[i] === max) {\n            return i;\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]) {\n            return lst[i];\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    let max = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n        if (freq[lst[i]] > max) {\n            max = freq[lst[i]];\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === max) {\n            return lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let maxFreq = 0;\n    let freq = 0;\n    for (let i = 0; i < lst.length; i++) {\n        freq = lst[i];\n        if (freq > maxFreq) {\n            max = lst[i];\n            maxFreq = freq;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max === 0 ? -1 : max;\n}\n",
    "    let max = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0 && lst[i] > max) {\n            max = lst[i];\n            count = 1;\n        } else if (lst[i] > 0 && lst[i] === max) {\n            count++;\n        }\n    }\n    if (count >= lst.length) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let maxFreq = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            maxFreq = 1;\n        } else if (lst[i] === max) {\n            maxFreq++;\n        }\n    }\n    if (maxFreq > lst.length / 2) {\n        return max;\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    for (let i in freq) {\n        if (freq[i] === max) {\n            return i;\n        }\n    }\n}\n",
    "    let map = new Map();\n    for (let i = 0; i < lst.length; i++) {\n        let val = lst[i];\n        if (map.has(val)) {\n            map.set(val, map.get(val) + 1);\n        } else {\n            map.set(val, 1);\n        }\n    }\n    let max = 0;\n    for (let [key, value] of map) {\n        if (value >= key) {\n            max = Math.max(max, key);\n        }\n    }\n    return max === 0 ? -1 : max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max === 0 ? -1 : max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0 && lst[i] <= lst[i]) {\n            count++;\n            if (count > max) {\n                max = count;\n            }\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n            break;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    for (let i in freq) {\n        if (freq[i] === max) {\n            return i;\n        }\n    }\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    let max = -1;\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n        if (freq[lst[i]] > max) {\n            max = freq[lst[i]];\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === max) {\n            return lst[i];\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max) {\n            return lst[i];\n        }\n    }\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max) {\n            return lst[i];\n        }\n    }\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]) {\n            return lst[i];\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    for (let i in freq) {\n        if (freq[i] === max) {\n            return i;\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === max) {\n            return lst[i];\n        }\n    }\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    for (let i in freq) {\n        if (freq[i] === max) {\n            return i;\n        }\n    }\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]) {\n            return lst[i];\n        }\n    }\n    return -1;\n}\n",
    "    let max = -1;\n    let maxFreq = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            maxFreq = 1;\n        } else if (lst[i] === max) {\n            maxFreq++;\n        }\n    }\n    if (maxFreq === lst.length) {\n        return max;\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max === 0 ? -1 : max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] > 1) {\n            return lst[i];\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let max = 0;\n    let max_count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n            max_count = 1;\n        } else if (lst[i] === max) {\n            max_count++;\n        }\n    }\n    if (max_count >= max) {\n        return max;\n    } else {\n        return -1;\n    }\n}\n",
    "    let max = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0 && lst[i] > max) {\n            max = lst[i];\n            count = 1;\n        } else if (lst[i] > 0 && lst[i] === max) {\n            count++;\n        }\n    }\n    if (count >= lst.length) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let max = -1;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0 && lst[i] > max) {\n            max = lst[i];\n            count = 1;\n        } else if (lst[i] > 0 && lst[i] === max) {\n            count++;\n        }\n    }\n    if (count === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    for (let i in freq) {\n        if (freq[i] === max) {\n            return i;\n        }\n    }\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n            break;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max === 0 ? -1 : max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] >= max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] >= lst[i]) {\n            return lst[i];\n        }\n    }\n    return -1;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]] += 1;\n        }\n    }\n    let max = -1;\n    for (let i in freq) {\n        if (freq[i] >= i) {\n            max = Math.max(max, i);\n        }\n    }\n    return max;\n}\n",
    "    let freq = {};\n    for (let i = 0; i < lst.length; i++) {\n        if (freq[lst[i]] === undefined) {\n            freq[lst[i]] = 1;\n        } else {\n            freq[lst[i]]++;\n        }\n    }\n    let max = 0;\n    for (let i in freq) {\n        if (freq[i] > max) {\n            max = freq[i];\n        }\n    }\n    if (max === 0) {\n        return -1;\n    }\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === max) {\n            return max;\n        }\n    }\n}\n"
  ],
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ]
}
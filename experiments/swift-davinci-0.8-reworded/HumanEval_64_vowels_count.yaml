name: HumanEval_64_vowels_count
language: swift
prompt: "\n/// Write a function vowels_count which takes a string representing\n///\
  \ a word as input and returns the number of vowels in the string.\n/// Vowels in\
  \ this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but only\
  \ when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
  \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
  \ String) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
  \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
  \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
  \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
completions: ["    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let chars = Array(s)\n    var idx = 0\n    var num = 0\n    while idx <\
    \ chars.count {\n        if vowels.contains(chars[idx]) {\n            num +=\
    \ 1\n        }\n        idx += 1\n    }\n    return num", "    // This is your\
    \ job.\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    let indexOfY = s.index(of: \"y\")\n    let isYAtEnd = indexOfY != nil &&\
    \ s.index(indexOfY!, offsetBy: 1) == s.endIndex\n    return s.reduce(0) { (result,\
    \ next) in\n        var count = result\n        if vowels.contains(next) || (next\
    \ == \"y\" && isYAtEnd) {\n            count += 1\n        }\n        return count\n\
    \    }", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let all =\
    \ s.lowercased()\n    var count = 0\n    for i in all {\n        if (vowels.contains(String(i)))\
    \ {\n            count += 1\n        }\n    }\n    if (all.count >= 2 && String(all[all.index(all.endIndex,\
    \ offsetBy: -2)]) == \"y\") {\n        count += 1\n    }\n    return count", " \
    \   let vowels = CharacterSet(charactersIn: \"aeiouy\")\n    let components =\
    \ s.lowercased().components(separatedBy: vowels)\n    return components.count\
    \ - 1", "    let lowerCasedS = s.lowercased()\n    let filteredS = lowerCasedS.filter\
    \ {\n        $0 == \"a\" || $0 == \"e\" || $0 == \"i\" || $0 == \"o\" || $0 ==\
    \ \"u\" || $0 == \"y\"\n    }\n    let lastChar = filteredS.last\n    return lastChar\
    \ == \"y\" ? filteredS.count - 1 : filteredS.count", "    var vowels = [Character]()\n\
    \    for char in s {\n        if is_vowel(c: char) {\n            vowels.append(char)\n\
    \        }\n    }\n    return vowels.count", "    let lower = s.lowercased()\n\
    \    var count = 0\n    for char in lower {\n        if char == \"a\" || char\
    \ == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for c in\
    \ s {\n        switch c {\n        case \"a\", \"e\", \"i\", \"o\", \"u\":\n \
    \           count += 1\n        case \"y\":\n            if s.firstIndex(of: c)\
    \ == s.lastIndex(of: c) {\n                count += 1\n            }\n       \
    \ default:\n            continue\n        }\n    }\n    return count", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let lastLetter = s.last\n\
    \    var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    if lastLetter == \"y\" {\n\
    \        count += 1\n    }\n    return count", "    \n    let vowels: [Character]\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var count = 0\n    \n    for letter\
    \ in s {\n        if vowels.contains(letter) {\n            count += 1\n     \
    \   }\n    }\n    \n    if s.last == \"y\" {\n        count += 1\n    }\n    \n\
    \    return count", "    var vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for i in s {\n        if vowels.contains(i) {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count", "    let vowels: Set<Character> = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    let lowercaseS = s.lowercased()\n    var counter\
    \ = 0\n    for (i, c) in lowercaseS.enumerated() {\n        if vowels.contains(c)\
    \ {\n            if c == \"y\" && i != lowercaseS.count - 1 {\n              \
    \  continue\n            }\n            counter += 1\n        }\n    }\n    return\
    \ counter", "    let vowels = \"aeiouy\"\n    let c = s.filter { vowels.contains($0)\
    \ }\n    return c.count", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let end_vowels = [\"y\"]\n    var count = 0\n    for i in 0..<s.count {\n\
    \        let index = s.index(s.startIndex, offsetBy: i)\n        let cur_char\
    \ = String(s[index])\n        if vowels.contains(cur_char) {\n            count\
    \ += 1\n        } else if end_vowels.contains(cur_char) && i == s.count - 1 {\n\
    \            count += 1\n        }\n    }\n    return count", "    // create a\
    \ set of vowels from the string \"aeiouy\"\n    let vowels = Set(\"aeiouy\")\n\
    \    // create a set of characters from the input string\n    let characters =\
    \ Set(s.lowercased())\n    // create a set that contains the intersection of characters\
    \ and vowels\n    // in other words, only vowels that are part of the input string\n\
    \    // then count how many characters are in that set\n    return characters.intersection(vowels).count",
  "    var n = 0\n    for c in s {\n        if c == \"a\" || c == \"e\" || c == \"\
    i\" || c == \"o\" || c == \"u\" {\n            n += 1\n        }\n    }\n    if\
    \ s.last == \"y\" {\n        n += 1\n    }\n    return n", "    let vowels: [Character]\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let vowelsSet = Set(vowels)\n   \
    \ var count = 0\n    for c in s {\n        if vowelsSet.contains(c) {\n      \
    \      count += 1\n        }\n    }\n    return count", "    var count = 0\n \
    \   let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n    for ch in s {\n\
    \        let vowel = String(ch).lowercased()\n        if vowels.contains(vowel)\
    \ {\n            count += 1\n        }\n    }\n    return count", '    return
    s.filter { "aeiouy".contains($0) }.count', "    let vowels: Set<Character> = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var count = 0\n    var s = s.lowercased()\n\
    \    while !s.isEmpty {\n        let first = s.removeFirst()\n        if vowels.contains(first)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n    for ch\
    \ in s {\n        if vowels.contains(String(ch)) {\n            count += 1\n \
    \       }\n    }\n    if vowels.contains(String(s.last!)) && count > 1 {\n   \
    \     count -= 1\n    }\n    return count", "    let vowel = CharacterSet(charactersIn:\
    \ \"aeiouy\")\n    let vowelLast = CharacterSet(charactersIn: \"y\")\n    var\
    \ count = 0\n    for x in s.lowercased() {\n        if vowel.contains(x.unicodeScalars.first!)\
    \ {\n            count += 1\n        }\n    }\n    if count > 0 {\n        if\
    \ vowelLast.contains(s.unicodeScalars.last!) {\n            count -= 1\n     \
    \   }\n    }\n    return count", "    let vowels = Set(\"aeiouy\")\n    var counter\
    \ = 0\n    for c in s {\n        if vowels.contains(c) {\n            counter\
    \ += 1\n        }\n    }\n    return counter", "  return s.filter { c in\n   \
    \ c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" ||\n    \
    \  (c == \"y\" && s.last == \"y\")\n  }.count", "    let vowels: Set<Character>\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let str = s.lowercased()\n    var\
    \ set = Set<Character>()\n    var count = 0\n    for c in str {\n        if vowels.contains(c)\
    \ {\n            set.insert(c)\n            count += 1\n        }\n    }\n   \
    \ if set.contains(\"y\") && vowels.contains(str.last!) {\n        count += 1\n\
    \    }\n    return count", "    var count = 0\n    for i in s {\n        if i\
    \ == \"a\" || i == \"e\" || i == \"i\" || i == \"o\" || i == \"u\" {\n       \
    \     count += 1\n        }\n    }\n    return count", "    // TODO: Implement\
    \ vowels_count function\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    var count = 0\n    for char in s {\n        if let lastChar = String(s.suffix(1)).lowercased().first,\
    \ vowels.contains(String(lastChar)) {\n            count += 1\n        }\n   \
    \     if vowels.contains(String(char).lowercased()) {\n            count += 1\n\
    \        }\n    }\n    return count", "    var c = 0\n    for i in s {\n     \
    \   switch i {\n        case \"a\", \"e\", \"i\", \"o\", \"u\", \"y\":\n     \
    \       c += 1\n        default:\n            continue\n        }\n    }\n   \
    \ return c", "  var vowelCount = 0\n  let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n  for char in s {\n    let charLower = String(char).lowercased()\n \
    \   if vowels.contains(charLower) {\n      vowelCount += 1\n    }\n  }\n  if s.last\
    \ == \"y\" {\n    vowelCount += 1\n  }\n  return vowelCount", '    return s.filter
    { $0.isVowel }.count', "    var total = 0\n    for char in s {\n        if char\
    \ == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\"\
    \ {\n            total += 1\n        }\n    }\n    return total", "    var v =\
    \ 0\n    for c in s {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c\
    \ == \"o\" || c == \"u\" {\n            v += 1\n        }\n    }\n    if s.hasSuffix(\"\
    y\") {\n        v += 1\n    }\n    return v", "    // as far as I know, there\
    \ is no way in standard Swift to check if a\n    // character is a letter, so\
    \ we'll just assume the string is all ASCII\n    // characters\n    //\n    //\
    \ CTEs are still used for this exercise because it is easier to read\n    //\n\
    \    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var count = 0\n   \
    \ var s = s\n    while !s.isEmpty {\n        let last = s.removeLast()\n     \
    \   if vowels.contains(String(last)) {\n            count += 1\n        }\n  \
    \  }\n    return count", '    return s.lowercased().filter { $0 == "a" || $0 ==
    "e" || $0 == "i" || $0 == "o" || $0 == "u" || $0 == "y" }.count', "    // if string\
    \ is empty the number of vowels is 0\n    if s.isEmpty {\n        return 0\n \
    \   }\n    // else set up a counter and check first character to see if it is\
    \ a vowel.\n    // if so, increment the counter.\n    var count = 0\n    if s.first!\
    \ == \"a\" || s.first! == \"e\" || s.first! == \"i\" || s.first! == \"o\" || s.first!\
    \ == \"u\" {\n        count += 1\n    }\n    // if the last character is y, increment\
    \ the counter.\n    if s.last! == \"y\" {\n        count += 1\n    }\n    // remove\
    \ the first and last characters from the string and call the function\n    //\
    \ again on the resulting string.\n    return count + vowels_count(s: String(s.dropFirst().dropLast()))",
  "    // Using a set because we have to check for membership a lot\n    let vowels:\
    \ Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var count = 0\n  \
    \  for char in s {\n        if vowels.contains(char) {\n            count += 1\n\
    \        }\n    }\n    return count", '    return 0', "    var count = 0\n   \
    \ let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for c\
    \ in s {\n        if c.lowercased() == \"y\" && s.last! == c {\n            count\
    \ += 1\n        } else if vowels.contains(c.lowercased()) {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var vowels: [Character] = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var count = 0\n    for c in s {\n      \
    \  for v in vowels {\n            if c == v {\n                count += 1\n  \
    \          }\n        }\n    }\n    if s.hasSuffix(\"y\") {\n        count +=\
    \ 1\n    }\n    return count", "    var count = 0\n    let vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\", \"y\"]\n    let s = s.lowercased()\n    for i in 0..<s.count\
    \ {\n        let character = String(s[s.index(s.startIndex, offsetBy: i)])\n \
    \       if vowels.contains(character) {\n            count += 1\n        }\n \
    \   }\n    return count", "    let vowels: [Character] = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    let last: Character = s.last!\n    let s = Array(s.lowercased())\n\
    \    var count = 0\n    for i in s {\n        if i == last && last == \"y\" {\n\
    \            count += 1\n        } else if vowels.contains(i) {\n            count\
    \ += 1\n        }\n    }\n    return count", "  var count = 0\n  for c in s {\n\
    \    if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n\
    \      count += 1\n    }\n  }\n  if s.last == \"y\" {\n    count += 1\n  }\n \
    \ return count", "    let vowels = \"aeiouy\"\n    var count = 0\n    for c in\
    \ s {\n        if vowels.contains(c) {\n            count += 1\n        }\n  \
    \  }\n    return count", "    var count = 0\n    for letter in s {\n        switch\
    \ letter {\n        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count\
    \ += 1\n        case \"y\":\n            if s.last == \"y\" {\n              \
    \  count += 1\n            }\n        default:\n            continue\n       \
    \ }\n    }\n    return count", "    let letters = Array(s)\n    var counter =\
    \ 0\n    for (index, letter) in letters.enumerated() {\n        if vowels.contains(letter)\
    \ {\n            counter += 1\n        }\n        if index == letters.count -\
    \ 1 {\n            if letter == \"y\" {\n                counter += 1\n      \
    \      }\n        }\n    }\n    return counter", "    let chars = Array(s)\n \
    \   let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var vowelsCount\
    \ = 0\n    let count = chars.count\n    for index in 0..<count {\n        let\
    \ curr = chars[index]\n        if vowels.contains(curr) {\n            if curr\
    \ == \"y\" && index < count - 1 {\n                continue\n            }\n \
    \           vowelsCount += 1\n        }\n    }\n    return vowelsCount", "   \
    \ // TODO: Write some code to solve this coding problem\n    var vowelcount =\
    \ 0\n    var charlist = [Character]()\n    for char in s {\n        charlist.append(char)\n\
    \    }\n    var length = charlist.count\n    for i in 0..<length {\n        if\
    \ charlist[i] == \"a\" || charlist[i] == \"e\" || charlist[i] == \"i\" || charlist[i]\
    \ == \"o\" || charlist[i] == \"u\" {\n            vowelcount += 1\n        }\n\
    \        if i == length - 1 && charlist[i] == \"y\" {\n            vowelcount\
    \ += 1\n        }\n    }\n    return vowelcount", "    let vowels: Set<Character>\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var letters = Array(s)\n    var count\
    \ = 0\n    for i in 0..<letters.count {\n        if vowels.contains(letters[i])\
    \ {\n            count += 1\n        }\n    }\n    if vowels.contains(letters[letters.count\
    \ - 1]) {\n        count += 1\n    }\n    return count", "    var count = 0\n\
    \    for char in s {\n        if is_vowel(ch: char) {\n            count += 1\n\
    \        }\n    }\n    return count", "    var vowels = 0\n    let input = s.lowercased()\n\
    \    let last_index = input.index(before: input.endIndex)\n    for index in input.indices\
    \ {\n        if (input[index] == \"a\" || input[index] == \"e\" || input[index]\
    \ == \"i\" || input[index] == \"o\" || input[index] == \"u\") {\n            vowels\
    \ += 1\n        }\n        if (input[index] == \"y\" && index == last_index) {\n\
    \            vowels += 1\n        }\n    }\n    return vowels", "    let vowels:\
    \ Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var count = 0\n  \
    \  for c in s {\n        if vowels.contains(c) {\n            count += 1\n   \
    \     }\n    }\n    return count", "    var vowels = 0\n    let arr = s.lowercased().characters.map\
    \ { String($0) }\n    let vowelSet = Set([\"a\", \"e\", \"i\", \"o\", \"u\"])\n\
    \    for (i, letter) in arr.enumerated() {\n        if vowelSet.contains(letter)\
    \ {\n            if letter == \"y\" && i < arr.count - 1 {\n                continue\n\
    \            }\n            vowels += 1\n        }\n    }\n    return vowels",
  "    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var count\
    \ = 0\n    var lastchar = \"\"\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n        lastchar = String(char)\n    }\n\
    \    if lastchar == \"y\" {\n        count += 1\n    }\n    return count", " \
    \   var vCount = 0\n    for letter in s {\n        switch letter {\n        case\
    \ \"a\":\n            vCount += 1\n        case \"e\":\n            vCount +=\
    \ 1\n        case \"i\":\n            vCount += 1\n        case \"o\":\n     \
    \       vCount += 1\n        case \"u\":\n            vCount += 1\n        case\
    \ \"y\":\n            if (s.last == \"y\") {\n                vCount += 1\n  \
    \          }\n        default:\n            vCount += 0\n        }\n    }\n  \
    \  return vCount", '    return 0', "    var count = 0\n    for c in s {\n    \
    \    if (c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" ||\n\
    \            c == \"A\" || c == \"E\" || c == \"I\" || c == \"O\" || c == \"U\"\
    ) {\n            count += 1\n        }\n    }\n    if (s.last == \"y\" || s.last\
    \ == \"Y\") {\n        count += 1\n    }\n    return count", "    var count =\
    \ 0\n    for char in s {\n        if \"aeiouy\".contains(char) {\n           \
    \ count += 1\n        }\n    }\n    return count", "    var v = 0\n    var i =\
    \ 0\n    while i < s.count - 1 {\n        if isVowel(s[i]) {\n            v +=\
    \ 1\n        }\n        i += 1\n    }\n    if isVowel(s[s.count - 1]) {\n    \
    \    v += 1\n    }\n    return v", "    var s = s.lowercased()\n    if (s.count\
    \ > 0 && (s.last == \"y\" || s.last == \"Y\")) {\n        s.removeLast()\n   \
    \ }\n    var vowels_count = 0\n    for c in s {\n        if (c == \"a\" || c ==\
    \ \"e\" || c == \"i\" || c == \"o\" || c == \"u\") {\n            vowels_count\
    \ += 1\n        }\n    }\n    return vowels_count", '    return s.filter({ $0
    == "a" || $0 == "e" || $0 == "i" || $0 == "o" || $0 == "u" || ($0 == "y" && s.last
    == "y") }).count', "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let charArray = Array(s)\n    var foundVowels = 0\n    for char\
    \ in charArray {\n        if vowels.contains(char) {\n            foundVowels\
    \ += 1\n        }\n    }\n    return foundVowels", "    var vowelCount = 0\n \
    \   for (_, char) in s.enumerated() {\n        if char == \"a\" || char == \"\
    e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowelCount\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        vowelCount += 1\n\
    \    }\n    return vowelCount", "    let vowels = \"AEIOUaeiou\"\n    let ys =\
    \ [\"Y\", \"y\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if ys.contains(s.last) {\n\
    \        count += 1\n    }\n    return count", "    var count = 0\n    for x in\
    \ s {\n        if x == \"a\" || x == \"e\" || x == \"i\" || x == \"o\" || x ==\
    \ \"u\" || x == \"y\" {\n            count += 1\n        }\n    }\n    if count\
    \ == 0 {\n        return 0\n    }\n    else if s.last == \"y\" && count > 1 {\n\
    \        return count\n    }\n    else if s.last == \"y\" && count == 1 {\n  \
    \      return count - 1\n    }\n    else {\n        return count\n    }", "  \
    \  let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let lastChar\
    \ = s.last\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if (lastChar == \"y\") {\n\
    \        count += 1\n    }\n    return count", "    \n    let vowels: [Character]\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var vowelsCount = 0\n    \n    for\
    \ char in s {\n        for vowel in vowels {\n            if vowel == char {\n\
    \                vowelsCount += 1\n            }\n        }\n    }\n    \n   \
    \ if s.last == \"y\" {\n        vowelsCount += 1\n    }\n    \n    return vowelsCount",
  '    return 0', "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n \
    \   var count = 0\n    for l in s {\n        if vowels.contains(String(l)) {\n\
    \            count += 1\n        }\n    }\n    if !vowels.contains(String(s.last!))\
    \ {\n        count -= 1\n    }\n    return count", "    let vowels: Set<Character>\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let word = s.lowercased()\n    var\
    \ count = 0\n    for (i, v) in word.enumerated() {\n        if vowels.contains(v)\
    \ {\n            count += 1\n            if v == \"y\" && i != word.count - 1\
    \ {\n                count -= 1\n            }\n        }\n    }\n    return count",
  "  let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n  let\
    \ loweredS = s.lowercased()\n  let lastCharacter = loweredS.last\n  var count\
    \ = 0\n  for c in loweredS {\n    if vowels.contains(c) {\n      count += 1\n\
    \    }\n  }\n  if (lastCharacter == \"y\") {\n    count -= 1\n  }\n  return count",
  "    let characters = Array(s)\n    var vowelCount = 0\n    var checkY = false\n\
    \    var yExists = false\n    for i in 0..<characters.count {\n        if characters[i]\
    \ == \"A\" || characters[i] == \"E\" || characters[i] == \"I\" || characters[i]\
    \ == \"O\" || characters[i] == \"U\" {\n            vowelCount += 1\n        }\n\
    \        if characters[i] == \"Y\" {\n            checkY = true\n            yExists\
    \ = true\n        }\n        if yExists && checkY && characters[i] != \"Y\" {\n\
    \            checkY = false\n        }\n    }\n    if checkY {\n        vowelCount\
    \ += 1\n    }\n    return vowelCount", "    var s = s.lowercased()\n    var count\
    \ = 0\n    for c in s {\n        if c == \"a\" || c == \"e\" || c == \"i\" ||\
    \ c == \"o\" || c == \"u\" {\n            count += 1\n        }\n    }\n    return\
    \ count", "    // write your code here.\n    return 0", "    // Replace the following\
    \ line with your implementation of this function\n    return 0", "    var count\
    \ = 0\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    let sArray = Array(s)\n    for i in 0..<sArray.count {\n        if vowels.contains(sArray[i])\
    \ {\n            count += 1\n        }\n    }\n    if sArray.last == \"y\" {\n\
    \        count += 1\n    }\n    return count", "    var vowels = 0\n    for i\
    \ in s {\n        switch i {\n        case \"a\", \"e\", \"i\", \"o\", \"u\":\n\
    \            vowels += 1\n        case \"y\":\n            if s.lastIndex(of:\
    \ i) == s.index(before: s.endIndex) {\n                vowels += 1\n         \
    \   }\n        default:\n            break\n        }\n    }\n    return vowels",
  "    var n = 0\n    for char in s {\n        if char == \"a\" || char == \"e\" ||\
    \ char == \"i\" || char == \"o\" || char == \"u\" {\n            n += 1\n    \
    \    }\n    }\n    return n", '    return 0', "    let vowels_char = [\"a\", \"\
    e\", \"i\", \"o\", \"u\", \"y\"]\n    let vowels = Set(vowels_char)\n    var count\
    \ = 0\n    for i in s.lowercased() {\n        if vowels.contains(String(i)) {\n\
    \            count += 1\n        }\n    }\n    return count", "    \n    var vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var count = 0\n    \n    for i in\
    \ s {\n        if i == \"y\" && s.last == \"y\" {\n            count += 1\n  \
    \      } else if vowels.contains(String(i)) {\n            count += 1\n      \
    \  }\n    }\n    \n    return count", "    return s.filter {\n        $0 == \"\
    a\" || $0 == \"e\" || $0 == \"i\" || $0 == \"o\" || $0 == \"u\" || $0 == \"y\"\
    \n    }.count", "    return s.filter {char in\n        return [\"a\", \"e\", \"\
    i\", \"o\", \"u\", \"y\"].contains(char)\n    }.count", "    return s.characters.filter\
    \ {\n        $0 == \"a\" || $0 == \"e\" || $0 == \"i\" || $0 == \"o\" || $0 ==\
    \ \"u\" || $0 == \"y\"\n    }.count", "  // TODO: implement this function\n  let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  var count = 0\n  for (_, char)\
    \ in s.enumerated() {\n    let strChar = String(char)\n    if vowels.contains(strChar)\
    \ {\n      count += 1\n    }\n  }\n  return count", "    var count = 0\n    let\
    \ lastIndex = s.index(before: s.endIndex)\n    for ch in s {\n        if ch ==\
    \ \"a\" || ch == \"e\" || ch == \"i\" || ch == \"o\" || ch == \"u\" {\n      \
    \      count += 1\n        }\n        if ch == \"y\" && s.index(of: ch) == lastIndex\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var result\
    \ = 0\n    let word = s.lowercased()\n    for c in word {\n        if c == \"\
    a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            result\
    \ += 1\n        }\n    }\n    if word.last == \"y\" {\n        result += 1\n \
    \   }\n    return result", "    \n    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    \n    for vowel in s {\n        if vowels.contains(String(vowel))\
    \ {\n            count += 1\n        }\n    }\n    \n    if s.hasSuffix(\"y\"\
    ) {\n        count += 1\n    }\n    \n    return count", "    let vowels: [Character]\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var count = 0\n    let end = s.count\
    \ - 1\n    for (index, c) in s.enumerated() {\n        if vowels.contains(c) {\n\
    \            if index == end && c == \"y\" {\n                continue\n     \
    \       }\n            count += 1\n        }\n    }\n    return count", "    let\
    \ string = s.lowercased()\n    let vowels: [Character] = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    var count = 0\n    for char in string {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if string.hasSuffix(\"y\")\
    \ {\n        count += 1\n    }\n    return count", "    // Fill in your code here.\n\
    \    return 0", "    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count", "  let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  var count = 0\n  for char in s {\n\
    \    if vowels.contains(String(char)) {\n      count += 1\n    }\n  }\n  if count\
    \ > 0 && s.last == \"y\" {\n    count += 1\n  }\n  return count", "    let vowels:\
    \ Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let last: Character\
    \ = s.last!\n    var count = 0\n    for letter in s {\n        if vowels.contains(letter)\
    \ {\n            count += 1\n        }\n    }\n    if last == \"y\" {\n      \
    \  count += 1\n    }\n    return count", "    let vowels = Set<Character>([\"\
    a\", \"e\", \"i\", \"o\", \"u\"])\n    let s = s.lowercased()\n    let ylast =\
    \ s.hasSuffix(\"y\")\n    let non_y_vowels = s.filter { c in vowels.contains(c)\
    \ && c != \"y\" }\n    let nnon_y_vowels = non_y_vowels.count\n    return nnon_y_vowels\
    \ + (ylast ? 1 : 0)", "    let vowels: [Character] = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var vc = 0\n    for l in s {\n        if (vowels.contains(l))\
    \ {\n            vc += 1\n        }\n    }\n    if (s.last == \"y\") {\n     \
    \   vc += 1\n    }\n    return vc", '    return 0', "    let vowels = \"aeiou\"\
    \n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n     \
    \       count += 1\n        }\n    }\n    return count", "    let vowelSet = Set<Character>([\"\
    a\", \"e\", \"i\", \"o\", \"u\"])\n    var count = 0\n    var end_y = false\n\
    \    for char in s {\n        if vowelSet.contains(char) {\n            count\
    \ += 1\n        }\n        if char == \"y\" {\n            end_y = true\n    \
    \    } else {\n            end_y = false\n        }\n    }\n    if end_y {\n \
    \       count += 1\n    }\n    return count", "    var count = 0\n    for c in\
    \ s {\n        switch c {\n        case \"a\", \"e\", \"i\", \"o\", \"u\":\n \
    \           count += 1\n        case \"y\":\n            count += 1\n        default:\n\
    \            break\n        }\n    }\n    return count", "    // write your code\
    \ in Swift 3.0 (Linux)\n    \n    let lowercase = s.lowercased()\n    let lc =\
    \ Array(lowercase)\n    var vowels = [Character]()\n    var v_count = 0\n    \n\
    \    for i in lc {\n        if i == \"a\" || i == \"e\" || i == \"i\" || i ==\
    \ \"o\" || i == \"u\" {\n            vowels.append(i)\n        }\n    }\n    \n\
    \    if vowels.count == 0 {\n        return 0\n    }\n    \n    if vowels.last\
    \ == \"y\" {\n        vowels.removeLast()\n        v_count = vowels.count + 1\n\
    \    } else {\n        v_count = vowels.count\n    }\n    \n    return v_count",
  "    // TODO: Write vowels_count function\n    var count = 0\n    let vowels: [Character]\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if c == \"\
    y\" && s.last == \"y\" {\n            count += 1\n        } else if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count", '    return
    0', "    var cnt = 0\n    for i in s {\n        if i == \"a\" || i == \"e\" ||\
    \ i == \"i\" || i == \"o\" || i == \"u\" || i == \"y\" {\n            cnt += 1\n\
    \        }\n    }\n    return cnt", '    return 0', "    // TODO: Write some code\
    \ to solve this coding challenge\n    var vowelList = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var vowelCount = 0\n    for letter in s {\n        if vowelList.contains(String(letter))\
    \ {\n            vowelCount += 1\n        }\n    }\n    return vowelCount", " \
    \   let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var\
    \ count = 0\n    for c in s {\n        if vowels.contains(c) {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count", "    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count", "    // Complete this function\n    var vowelCount\
    \ = 0\n    let lower = s.lowercased()\n    let array = Array(lower)\n    for i\
    \ in 0..<array.count {\n        if array[i] == \"a\" || array[i] == \"e\" || array[i]\
    \ == \"i\" || array[i] == \"o\" || array[i] == \"u\" {\n            vowelCount\
    \ += 1\n        }\n        if array[i] == \"y\" && i != array.count - 1 {\n  \
    \          vowelCount += 1\n        }\n    }\n    return vowelCount", "    var\
    \ count = 0\n    for c in s {\n        if (c == \"a\" || c == \"e\" || c == \"\
    i\" || c == \"o\" || c == \"u\" || c == \"y\") {\n            count += 1\n   \
    \     }\n    }\n    return count", '    return 0', '    return s.count - s.lowercased().filter(Set("aeiouy").contains).count',
  '    return 0', "    var count = 0\n    for c in s {\n        switch c {\n     \
    \   case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n        case\
    \ \"y\":\n            if c == s.last {\n                count += 1\n         \
    \   }\n        default:\n            continue\n        }\n    }\n    return count",
  '    return 0', "    var counter = 0\n    let vowels = \"aeiou\"\n    let s = s.lowercased()\n\
    \    for i in s {\n        if vowels.contains(i) {\n            counter += 1\n\
    \        }\n    }\n    return counter", "    let lowerCase = s.lowercased()\n\
    \    var cnt = 0\n    var isY = false\n    for i in lowerCase {\n        if i\
    \ == \"a\" || i == \"e\" || i == \"i\" || i == \"o\" || i == \"u\" {\n       \
    \     cnt += 1\n        }\n        if i == \"y\" {\n            isY = true\n \
    \       }\n    }\n    if isY {\n        cnt += 1\n    }\n    return cnt", "  \
    \  let sArray = Array(s)\n    let vowelsArray = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    var count = 0\n    for char in sArray {\n        if vowelsArray.contains(String(char))\
    \ || (String(char) == \"y\" && sArray.last == char) {\n            count += 1\n\
    \        }\n    }\n    return count", "    let vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"]\n    var counter = 0\n    for letter in s {\n        if vowels.contains(String(letter).lowercased())\
    \ {\n            counter += 1\n        }\n    }\n    if s.last == \"y\" || s.last\
    \ == \"Y\" {\n        counter += 1\n    }\n    return counter", "    var result\
    \ = 0\n    for char in s {\n        if is_vowel(char: char) {\n            result\
    \ += 1\n        }\n    }\n    return result", "    let vowels = \"aeiouy\"\n \
    \   var count = 0\n    var currentChar = 0\n    for char in s {\n        if currentChar\
    \ < s.count - 1 {\n            if vowels.contains(char) && !vowels.contains(s[s.index(s.startIndex,\
    \ offsetBy: currentChar + 1)]) {\n                count += 1\n            }\n\
    \        } else {\n            if vowels.contains(char) {\n                count\
    \ += 1\n            }\n        }\n        currentChar += 1\n    }\n    return\
    \ count", "    var count = 0\n    for c in s {\n        switch c {\n        case\
    \ \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n        case \"\
    y\":\n            let index = s.index(of: c)\n            if index == s.index(before:\
    \ s.endIndex) {\n                count += 1\n            }\n        default:\n\
    \            continue\n        }\n    }\n    return count", "    var count = 0\n\
    \    for char in s {\n        if is_vowel(c: char) {\n            count += 1\n\
    \        }\n    }\n    return count", "    var vowels_count = 0\n    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for (index, char) in s.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            vowels_count += 1\n\
    \        }\n    }\n    return vowels_count", "    return s.characters.reduce(0)\
    \ { (count, char) in\n        var c = count\n        if \"AEIOUY\".characters.contains(char)\
    \ {\n            c += 1\n        }\n        return c\n    }", "  var count = 0\n\
    \  let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  for c in s {\n    if vowels.contains(String(c))\
    \ {\n      count += 1\n    }\n  }\n  if s.last! == \"y\" {\n    count += 1\n \
    \ }\n  return count", "    var count = 0\n    for i in s {\n        switch i {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     case \"y\":\n            let last = s.last\n            if last == \"y\"\
    \ {\n                count += 1\n            }\n        default:\n           \
    \ continue\n        }\n    }\n    return count", "    var count = 0\n    for i\
    \ in s {\n        if i == \"a\" || i == \"e\" || i == \"i\" || i == \"o\" || i\
    \ == \"u\" || i == \"y\" {\n            count += 1\n        }\n    }\n    return\
    \ count", "    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    var count = 0\n    for letter in s {\n        if vowels.contains(letter)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count", "    let vowels: Set<Character> = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    let charcterArray = Array(s)\n    let lastCharacter\
    \ = charcterArray.last\n    if lastCharacter == \"y\" {\n        let arrayWithoutLastCharcter\
    \ = Array(charcterArray.dropLast())\n        let filteredArray = arrayWithoutLastCharcter.filter({vowels.contains($0)})\n\
    \        return filteredArray.count + 1\n    }\n    else {\n        let filteredArray\
    \ = charcterArray.filter({vowels.contains($0)})\n        return filteredArray.count\n\
    \    }", "    let vowels = Set<Character>([\"a\", \"e\", \"i\", \"o\", \"u\"])\n\
    \    let len = s.count\n    var count = 0\n    for (i, char) in s.enumerated()\
    \ {\n        if vowels.contains(char) {\n            count += 1\n            if\
    \ i == len - 1 {\n                break\n            }\n            let next =\
    \ s[s.index(s.startIndex, offsetBy: i + 1)]\n            if next == \"y\" {\n\
    \                count -= 1\n            }\n        }\n    }\n    return count",
  "    let vowels = \"aeiou\"\n    let s = s.lowercased()\n    let endIsY = s.last\
    \ == \"y\"\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count + (endIsY ? 1\
    \ : 0)", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var count\
    \ = 0\n    for letter in s {\n        if vowels.contains(String(letter).lowercased())\
    \ {\n            count += 1\n        }\n    }\n    return count", '  return 0',
  '    return 0', "    let vowels_str = \"aeiouy\"\n    let vowels = Set(vowels_str)\n\
    \    var count = 0\n    for character in s {\n        let char = String(character).lowercased()\n\
    \        if vowels.contains(char) {\n            count += 1\n        }\n    }\n\
    \    return count", "    // hint: Swift String has .count, .lowercased(), .uppercased()\
    \ methods.\n    // hint: use switch statement.\n    var count = 0\n    let vowels:\
    \ Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let last = s.count\
    \ - 1\n    for (index, char) in s.enumerated() {\n        switch char {\n    \
    \    case \"y\":\n            if index == last {\n                count += 1\n\
    \            }\n        case _ where vowels.contains(char):\n            count\
    \ += 1\n        default:\n            break\n        }\n    }\n    return count",
  '    return s.filter({ $0 == "a" || $0 == "e" || $0 == "i" || $0 == "o" || $0 ==
    "u" || $0 == "y" }).count', "    // YOUR CODE GOES HERE\n    var vowel_count =\
    \ 0\n    var chars = Array(s)\n    var vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    var i = 0\n    while (i < chars.count) {\n        if vowels.contains(String(chars[i]))\
    \ {\n            vowel_count += 1\n        }\n        i += 1\n    }\n    return\
    \ vowel_count", "    var vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    var num_vowels = 0\n    for c in s {\n        if c == \"y\" && (s.lastIndex(of:\
    \ c) != s.startIndex) {\n            continue\n        }\n        if vowels.contains(c)\
    \ {\n            num_vowels += 1\n        }\n    }\n    return num_vowels", '    return
    s.characters.filter({ contains(array: vowels, value: $0) }).count', "  let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  var count = 0\n  for i in 0..<s.count\
    \ {\n    let index = s.index(s.startIndex, offsetBy: i)\n    let c = String(s[index])\n\
    \    if vowels.contains(c) {\n      count += 1\n    }\n  }\n  if s.last == \"\
    y\" {\n    count += 1\n  }\n  return count", "    let vowels = \"aeiouy\"\n  \
    \  var count = 0\n    for char in s {\n        if vowels.contains(char) {\n  \
    \          count += 1\n        }\n    }\n    return count", "    let vowels: Set<Character>\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var vowelCount = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            vowelCount += 1\n  \
    \      }\n    }\n    return vowelCount", "    let vowels = \"aeiouy\"\n    var\
    \ count = 0\n    var i = 0\n    while i < s.count {\n        let index = s.index(s.startIndex,\
    \ offsetBy: i)\n        let c = s[index]\n        if vowels.contains(c) {\n  \
    \          count += 1\n        }\n        i += 1\n    }\n    return count", " \
    \   let vowelChars = CharacterSet(charactersIn: \"aeiou\")\n    var numVowels\
    \ = 0\n    for c in s.lowercased() {\n        if vowelChars.contains(UnicodeScalar(String(c))!)\
    \ {\n            numVowels += 1\n        }\n    }\n    return numVowels", "  \
    \  let inputArray = Array(s)\n    var count = 0\n    for i in 0..<inputArray.count\
    \ {\n        if inputArray[i] == \"a\" || inputArray[i] == \"e\" || inputArray[i]\
    \ == \"i\" || inputArray[i] == \"o\" || inputArray[i] == \"u\" {\n           \
    \ count += 1\n        }\n        if inputArray[i] == \"y\" && i != inputArray.count\
    \ - 1 {\n            continue\n        }\n        if inputArray[i] == \"y\" &&\
    \ i == inputArray.count - 1 {\n            count += 1\n        }\n    }\n    return\
    \ count", "    let vowels = \"AEIOUY\"\n    var count = 0\n    for char in s {\n\
    \        if vowels.contains(char) {\n            count += 1\n        }\n    }\n\
    \    return count", "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let str = s.lowercased()\n    return str.characters.reduce(0)\
    \ {\n        $0 + (vowels.contains($1) ? 1 : 0)\n    }", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var count = 0\n    for char in s {\n   \
    \     for vowel in vowels {\n            if String(char).lowercased() == vowel\
    \ {\n                count += 1\n            }\n        }\n    }\n    return count",
  "    // write your code here\n    return 0", "    // Calculate the number of vowels\
    \ in s and return the result.\n    var count = 0\n    for letter in s {\n    \
    \    if letter == \"a\" || letter == \"e\" || letter == \"i\" || letter == \"\
    o\" || letter == \"u\" || letter == \"y\" {\n            count += 1\n        }\n\
    \    }\n    return count", "    let vowels: Set<Character> = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let endVowels: Set<Character> = [\"y\"]\n    let s = s.lowercased()\n\
    \    var count = 0\n    for (i, c) in s.enumerated() {\n        if i == s.count\
    \ - 1 && endVowels.contains(c) {\n            count += 1\n        } else if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    let vowels:\
    \ [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let s = s.lowercased()\n\
    \    var c = 0\n    for character in s {\n        if vowels.contains(character)\
    \ {\n            c += 1\n        }\n    }\n    if s.last == \"y\" {\n        c\
    \ += 1\n    }\n    return c", "    let vowels = \"aeiouy\"\n    var counter =\
    \ 0\n    for character in s {\n        if vowels.contains(character) {\n     \
    \       counter += 1\n        }\n    }\n    return counter", "  var cnt = 0\n\
    \  for c in s {\n    if (c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\"\
    \ || c == \"u\" || c == \"y\") {\n      cnt += 1\n    }\n  }\n  return cnt", " \
    \   var count = 0\n    let s = s.lowercased()\n    for i in s {\n        if i\
    \ == \"a\" || i == \"e\" || i == \"i\" || i == \"o\" || i == \"u\" {\n       \
    \     count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count +=\
    \ 1\n    }\n    return count", "    let lowerCaseS = s.lowercased()\n    var vowelCount\
    \ = 0\n    for character in lowerCaseS {\n        if character == \"a\" || character\
    \ == \"e\" || character == \"i\" || character == \"o\" || character == \"u\" {\n\
    \            vowelCount += 1\n        }\n    }\n    return vowelCount", "    var\
    \ vowels_count = 0\n    for s in s {\n        if s == \"a\" || s == \"e\" || s\
    \ == \"i\" || s == \"o\" || s == \"u\" {\n            vowels_count += 1\n    \
    \    }\n    }\n    return vowels_count", "    return s.reduce(0) { (r, c) in\n\
    \        let u = String(c).uppercased()\n        if (u == \"A\" || u == \"E\"\
    \ || u == \"I\" || u == \"O\" || u == \"U\" || (u == \"Y\" && $1 == s.endIndex))\
    \ {\n            return r + 1\n        }\n        return r\n    }", "    \n  \
    \  var vowelCount = 0\n    var charsArray = Array(s)\n    \n    for c in charsArray\
    \ {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"\
    u\" || c == \"y\" {\n            vowelCount += 1\n        }\n    }\n    \n   \
    \ if charsArray.last == \"y\" {\n        vowelCount -= 1\n    }\n    \n    return\
    \ vowelCount", "    var count = 0\n    for char in s {\n        if is_vowel(ch:\
    \ char) {\n            count += 1\n        }\n    }\n    return count", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var n = 0\n    for c in s\
    \ {\n        let s = String(c).lowercased()\n        if vowels.contains(s) {\n\
    \            n += 1\n        }\n    }\n    return n", "    var count = 0\n   \
    \ let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n    var array = Array(s)\n\
    \    for c in array {\n        if vowels.contains(String(c)) {\n            count\
    \ += 1\n        }\n    }\n    if vowels.contains(String(array.last!)) {\n    \
    \    count += 1\n    }\n    return count", "    var count = 0\n    for letter\
    \ in s {\n        if letter == \"a\" || letter == \"e\" || letter == \"i\" ||\
    \ letter == \"o\" || letter == \"u\" {\n            count += 1\n        }\n  \
    \  }\n    return count", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let characters = Array(s)\n    var count = 0\n    for i in 0..<characters.count\
    \ {\n        let c = String(characters[i]).lowercased()\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count", "    var count = 0\n    var s_copy\
    \ = s\n    for _ in 0..<s.count {\n        let v = vowels.firstIndex(of: s_copy.first!)\n\
    \        if v != nil {\n            count += 1\n        }\n        s_copy.removeFirst()\n\
    \    }\n    if count == 0 && s.last == \"y\" {\n        count += 1\n    }\n  \
    \  return count", '    return s.lowercased().filter { ["a", "e", "i", "o", "u",
    "y"].contains($0) }.count', '    return 0', "    let vowels: [Character] = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var count = 0\n    var vowels_count = 0\n\
    \    let s = s.lowercased()\n    for char in s {\n        if count == s.count\
    \ - 1 && char == \"y\" {\n            vowels_count += 1\n        } else if vowels.contains(char)\
    \ {\n            vowels_count += 1\n        }\n        count += 1\n    }\n   \
    \ return vowels_count", '    return s.reduce(0) { $0 + ($1 == "a" || $1 == "e"
    || $1 == "i" || $1 == "o" || $1 == "u" || $1 == "y" ? 1 : 0) }', "    let vowels_lowercase\
    \ = \"aeiouy\"\n    let vowels_uppercase = \"AEIOUY\"\n    let vowels = vowels_lowercase\
    \ + vowels_uppercase\n    var vowel_count = 0\n    for char in s {\n        if\
    \ vowels.contains(char) {\n            vowel_count += 1\n        }\n    }\n  \
    \  return vowel_count", "    let vowels: Set<Character> = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    var count = 0\n    var temp = s.lowercased()\n    while let\
    \ first = temp.first {\n        if vowels.contains(first) {\n            count\
    \ += 1\n        }\n        temp.removeFirst()\n    }\n    return count", "   \
    \ let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var count\
    \ = 0\n    var special = false\n    for letter in s {\n        if letter == \"\
    y\" {\n            special = true\n        } else if vowels.contains(letter) {\n\
    \            count += 1\n        } else {\n            special = false\n     \
    \   }\n    }\n    if special {\n        count += 1\n    }\n    return count",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let characters = Array(s)\n\
    \    var total = 0\n    var i = 0\n    while i < characters.count {\n        if\
    \ characters[i] == \"y\" && i == characters.count - 1 {\n            total +=\
    \ 1\n        } else if vowels.contains(String(characters[i])) {\n            total\
    \ += 1\n        }\n        i += 1\n    }\n    return total", "    let vowel_set\
    \ = Set(\"aeiouy\")\n    let vowel_set_without_y = Set(\"aeiou\")\n    let s_lowercased\
    \ = s.lowercased()\n    var vowel_count = 0\n    for char in s_lowercased {\n\
    \        if vowel_set.contains(char) {\n            vowel_count += 1\n       \
    \ }\n    }\n    if vowel_set_without_y.contains(s_lowercased.last!) {\n      \
    \  vowel_count -= 1\n    }\n    return vowel_count", "    let vowels: Set<Character>\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var vowelCount = 0\n    let sArr\
    \ = Array(s)\n    var vowelCounted = false\n    for letter in sArr {\n       \
    \ if vowels.contains(letter) {\n            vowelCount += 1\n            vowelCounted\
    \ = true\n        } else if vowelCounted {\n            break\n        }\n   \
    \ }\n    return vowelCount", "    var count = 0\n    let vowels = \"aeiouyAEIOUY\"\
    \n    for c in s {\n        if vowels.contains(c) {\n            count += 1\n\
    \        }\n    }\n    if s.hasSuffix(\"y\") {\n        count += 1\n    }\n  \
    \  return count", "    var vowelCount = 0\n    for char in s {\n        if char\
    \ == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\"\
    \ {\n            vowelCount += 1\n        }\n    }\n    return vowelCount", '    return
    s.filter { "AEIOUYaeiouy".contains($0) }.count', "    let vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    var count = 0\n    for character in s {\n     \
    \   let char = String(character).lowercased()\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if (s.last == \"y\") {\n  \
    \      count += 1\n    }\n    return count", "    // TODO: Write vowels_count()\
    \ here\n    return 0", "    var count = 0\n    for i in s {\n        if i == \"\
    a\" || i == \"e\" || i == \"i\" || i == \"o\" || i == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.contains(\"y\") {\n        count += 1\n   \
    \ }\n    return count", "    // TODO: Implement me\n    return 0", "    var vowels\
    \ = 0\n    for c in s {\n        switch c {\n        case \"a\", \"e\", \"i\"\
    , \"o\", \"u\":\n            vowels += 1\n        case \"y\":\n            if\
    \ s.last == \"y\" {\n                vowels += 1\n            }\n        default:\n\
    \            break\n        }\n    }\n    return vowels", "    let vowels = Set(\"\
    aeiouAEIOUyY\")\n    return s.reduce(0) { (count, char) -> Int in\n        return\
    \ vowels.contains(char) ? count + 1 : count\n    }", "    var s = s.lowercased()\n\
    \    var count = 0\n    while !s.isEmpty {\n        if s.hasPrefix(\"a\") || s.hasPrefix(\"\
    e\") || s.hasPrefix(\"i\") || s.hasPrefix(\"o\") || s.hasPrefix(\"u\") {\n   \
    \         count += 1\n        }\n        s.removeFirst()\n    }\n    return count",
  "    var count = 0\n    var vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    let array = Array(s)\n    for char in array {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if array.last == \"y\" {\n\
    \        count += 1\n    }\n    return count", "    let vowels = \"aeiou\"\n \
    \   let letterArray = Array(s)\n    var cnt = 0\n    for l in letterArray {\n\
    \        if l == \"y\" && l == letterArray.last {\n            cnt += 1\n    \
    \    } else if vowels.contains(l) {\n            cnt += 1\n        }\n    }\n\
    \    return cnt", "    return s.reduce(0) {\n        $1 == \"a\" || $1 == \"e\"\
    \ || $1 == \"i\" || $1 == \"o\" || $1 == \"u\" || ($1 == \"y\" && $0 == s.count\
    \ - 1) ? $0 + 1 : $0\n    }", "    let vowels = Set(\"aeiouy\")\n    var count\
    \ = 0\n    for c in s {\n        if vowels.contains(c) {\n            count +=\
    \ 1\n        }\n    }\n    return count", "    var vowelCount = 0\n    var endOfWord\
    \ = false\n    for c in s {\n        if \"aeiouy\".contains(c) {\n           \
    \ vowelCount += 1\n        }\n        if c == \"y\" {\n            endOfWord =\
    \ true\n        } else {\n            endOfWord = false\n        }\n    }\n  \
    \  if endOfWord {\n        vowelCount += 1\n    }\n    return vowelCount", " \
    \   // Fill in this function.\n    var count = 0\n    for char in s {\n      \
    \  if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char\
    \ == \"u\" {\n            count += 1\n        }\n    }\n    return count", " \
    \   let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let vowelsSet\
    \ = Set(vowels)\n    let word = s.lowercased()\n    var vowelCount = 0\n    for\
    \ (index,char) in word.enumerated() {\n        if vowelsSet.contains(char) {\n\
    \            vowelCount += 1\n            if index < word.count - 1 && char ==\
    \ \"y\" {\n                vowelCount -= 1\n            }\n        }\n    }\n\
    \    return vowelCount", '    return s.filter({ $0 == "a" || $0 == "e" || $0 ==
    "i" || $0 == "o" || $0 == "u" || $0 == "y" }).count', "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    var result = 0\n    for i in s {\n        if\
    \ vowels.contains(String(i)) {\n            result += 1\n        }\n    }\n  \
    \  return result", "    let vowels = Array(\"aeiouy\")\n    var count = 0\n  \
    \  for character in s {\n        if character.lowercased() == \"y\" && s.lastIndex(of:\
    \ character) == s.endIndex {\n            break\n        }\n        if vowels.contains(character.lowercased())\
    \ {\n            count += 1\n        }\n    }\n    return count", "  var vowelCount\
    \ = 0\n  for c in s {\n    if c == \"a\" || c == \"e\" || c == \"i\" || c == \"\
    o\" || c == \"u\" {\n      vowelCount += 1\n    }\n  }\n  return vowelCount",
  "    let vowels = Array(\"aeiou\")\n    let sArr = Array(s)\n    return sArr.reduce(0)\
    \ { count, c in\n        if vowels.contains(c) {\n            return count + 1\n\
    \        }\n        return count\n    }", "    var count = 0\n    for c in s {\n\
    \        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\"\
    \ {\n            count += 1\n        }\n    }\n    return count", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let chars = Array(s)\n    var count\
    \ = 0\n    for i in 0..<chars.count {\n        if (vowels.contains(String(chars[i])))\
    \ {\n            count += 1\n        }\n    }\n    let ys = chars.filter { $0\
    \ == \"y\" }\n    return count + ys.count"]
stop_tokens:
- "\n}"

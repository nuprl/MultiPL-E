language: swift
name: HumanEval_64_vowels_count
results:
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let chars = Array(s)\n    var idx = 0\n    var num = 0\n    while\
    \ idx < chars.count {\n        if vowels.contains(chars[idx]) {\n            num\
    \ += 1\n        }\n        idx += 1\n    }\n    return num\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp57xtw_3v/tmp57xtw_3v.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2bc0dcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2bbdd3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2bbdd3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2bbdd27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp57xtw_3v                        0x000055cb71f1e76b <unavailable> + 5995

    5    libc.so.6                          0x00002af2bc2c8460 __libc_start_main +
    245

    6    tmp57xtw_3v                        0x000055cb71f1e349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // This is your job.\n    let vowels: Set<Character> =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let indexOfY = s.index(of: \"y\")\n\
    \    let isYAtEnd = indexOfY != nil && s.index(indexOfY!, offsetBy: 1) == s.endIndex\n\
    \    return s.reduce(0) { (result, next) in\n        var count = result\n    \
    \    if vowels.contains(next) || (next == \"y\" && isYAtEnd) {\n            count\
    \ += 1\n        }\n        return count\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpqbyflomm/tmpqbyflomm.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b60e1990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60e1687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b60e1687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b60e16867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqbyflomm                        0x000055dbd2ae89bb <unavailable> + 6587

    5    libc.so.6                          0x00002b60e1b7c460 __libc_start_main +
    245

    6    tmpqbyflomm                        0x000055dbd2ae8599 <unavailable> + 5529

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ let all = s.lowercased()\n    var count = 0\n    for i in all {\n        if\
    \ (vowels.contains(String(i))) {\n            count += 1\n        }\n    }\n \
    \   if (all.count >= 2 && String(all[all.index(all.endIndex, offsetBy: -2)]) ==\
    \ \"y\") {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp67n49x0k/tmp67n49x0k.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6503af4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b65037ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b65037eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b65037ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp67n49x0k                        0x000055816f6278b2 <unavailable> + 6322

    5    libc.so.6                          0x00002b6503ce0460 __libc_start_main +
    245

    6    tmp67n49x0k                        0x000055816f6273e9 <unavailable> + 5097

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = CharacterSet(charactersIn: \"aeiouy\")\n\
    \    let components = s.lowercased().components(separatedBy: vowels)\n    return\
    \ components.count - 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp_s23qolz.swift:12:18: error: cannot find 'CharacterSet' in scope\n\
    \    let vowels = CharacterSet(charactersIn: \"aeiouy\")\n                 ^~~~~~~~~~~~\n\
    /tmp/tmp_s23qolz.swift:13:37: error: value of type 'String' has no member 'components'\n\
    \    let components = s.lowercased().components(separatedBy: vowels)\n       \
    \              ~~~~~~~~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let lowerCasedS = s.lowercased()\n    let filteredS =\
    \ lowerCasedS.filter {\n        $0 == \"a\" || $0 == \"e\" || $0 == \"i\" || $0\
    \ == \"o\" || $0 == \"u\" || $0 == \"y\"\n    }\n    let lastChar = filteredS.last\n\
    \    return lastChar == \"y\" ? filteredS.count - 1 : filteredS.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp5w8pd89m/tmp5w8pd89m.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba36f5bbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba36f2b2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba36f2b2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba36f2b17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5w8pd89m                        0x00005632ae4bc6c2 <unavailable> + 5826

    5    libc.so.6                          0x00002ba36f7a7460 __libc_start_main +
    245

    6    tmp5w8pd89m                        0x00005632ae4bc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = [Character]()\n    for char in s {\n    \
    \    if is_vowel(c: char) {\n            vowels.append(char)\n        }\n    }\n\
    \    return vowels.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp6xx9vz72.swift:14:12: error: cannot find 'is_vowel' in scope\n\
    \        if is_vowel(c: char) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let lower = s.lowercased()\n    var count = 0\n    for\
    \ char in lower {\n        if char == \"a\" || char == \"e\" || char == \"i\"\
    \ || char == \"o\" || char == \"u\" {\n            count += 1\n        }\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpvhpnosrr/tmpvhpnosrr.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab539c04c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab5398fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab5398fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab5398fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvhpnosrr                        0x000055608dda75c2 <unavailable> + 5570

    5    libc.so.6                          0x00002ab539df0460 __libc_start_main +
    245

    6    tmpvhpnosrr                        0x000055608dda70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     case \"y\":\n            if s.firstIndex(of: c) == s.lastIndex(of: c) {\n\
    \                count += 1\n            }\n        default:\n            continue\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp_mxo_ox6/tmp_mxo_ox6.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac8f8abbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac8f87b2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac8f87b2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac8f87b17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_mxo_ox6                        0x00005649d312868b <unavailable> + 5771

    5    libc.so.6                          0x00002ac8f8ca7460 __libc_start_main +
    245

    6    tmp_mxo_ox6                        0x00005649d3128269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ let lastLetter = s.last\n    var count = 0\n    for char in s {\n        if\
    \ vowels.contains(String(char)) {\n            count += 1\n        }\n    }\n\
    \    if lastLetter == \"y\" {\n        count += 1\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmps9gx_lof/tmps9gx_lof.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b80ac650c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b80ac347b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b80ac347988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b80ac3467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps9gx_lof                        0x000055ed8afc178b <unavailable> + 6027

    5    libc.so.6                          0x00002b80ac83c460 __libc_start_main +
    245

    6    tmps9gx_lof                        0x000055ed8afc1369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    \n    let vowels: [Character] = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"]\n    var count = 0\n    \n    for letter in s {\n        if vowels.contains(letter)\
    \ {\n            count += 1\n        }\n    }\n    \n    if s.last == \"y\" {\n\
    \        count += 1\n    }\n    \n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpcup2fhyb/tmpcup2fhyb.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d71b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d71841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d71841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d718407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcup2fhyb                        0x000055c700a8476b <unavailable> + 5995

    5    libc.so.6                          0x00002b2d71d36460 __libc_start_main +
    245

    6    tmpcup2fhyb                        0x000055c700a84349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for i in s {\n        if vowels.contains(i) {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpu_8fl_sr/tmpu_8fl_sr.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc0e0cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc0ddc1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc0ddc1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc0ddc07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu_8fl_sr                        0x0000557e9970976b <unavailable> + 5995

    5    libc.so.6                          0x00002abc0e2b6460 __libc_start_main +
    245

    6    tmpu_8fl_sr                        0x0000557e99709349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let lowercaseS = s.lowercased()\n    var counter = 0\n    for\
    \ (i, c) in lowercaseS.enumerated() {\n        if vowels.contains(c) {\n     \
    \       if c == \"y\" && i != lowercaseS.count - 1 {\n                continue\n\
    \            }\n            counter += 1\n        }\n    }\n    return counter\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpny_ibvzi/tmpny_ibvzi.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6da6604c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6da62fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6da62fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6da62fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpny_ibvzi                        0x0000559453e45a12 <unavailable> + 6674

    5    libc.so.6                          0x00002b6da67f0460 __libc_start_main +
    245

    6    tmpny_ibvzi                        0x0000559453e45549 <unavailable> + 5449

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    let c = s.filter { vowels.contains($0)\
    \ }\n    return c.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpwq07mlb2/tmpwq07mlb2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5c0536fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5c05066b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5c05066988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5c050657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwq07mlb2                        0x000056365af9151b <unavailable> + 5403

    5    libc.so.6                          0x00002b5c0555b460 __libc_start_main +
    245

    6    tmpwq07mlb2                        0x000056365af910f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ let end_vowels = [\"y\"]\n    var count = 0\n    for i in 0..<s.count {\n  \
    \      let index = s.index(s.startIndex, offsetBy: i)\n        let cur_char =\
    \ String(s[index])\n        if vowels.contains(cur_char) {\n            count\
    \ += 1\n        } else if end_vowels.contains(cur_char) && i == s.count - 1 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmps8binv4h/tmps8binv4h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae1f0b6cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae1f0863b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae1f0863988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae1f08627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps8binv4h                        0x000055fce89cf83b <unavailable> + 6203

    5    libc.so.6                          0x00002ae1f0d58460 __libc_start_main +
    245

    6    tmps8binv4h                        0x000055fce89cf419 <unavailable> + 5145

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // create a set of vowels from the string \"aeiouy\"\n\
    \    let vowels = Set(\"aeiouy\")\n    // create a set of characters from the\
    \ input string\n    let characters = Set(s.lowercased())\n    // create a set\
    \ that contains the intersection of characters and vowels\n    // in other words,\
    \ only vowels that are part of the input string\n    // then count how many characters\
    \ are in that set\n    return characters.intersection(vowels).count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpzq_z_83_/tmpzq_z_83_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b823f4e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b823f1e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b823f1e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b823f1df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzq_z_83_                        0x00005654288b16bf <unavailable> + 5823

    5    libc.so.6                          0x00002b823f6d5460 __libc_start_main +
    245

    6    tmpzq_z_83_                        0x00005654288b1149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var n = 0\n    for c in s {\n        if c == \"a\" ||\
    \ c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            n += 1\n\
    \        }\n    }\n    if s.last == \"y\" {\n        n += 1\n    }\n    return\
    \ n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(vowels_count(s: \"abcde\") ==\
    \ 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s: \"key\"\
    ) == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s: \"keY\"\
    ) == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\"\
    ) == 3)"
  status: Exception
  stderr: 'tmpsftcq94c/tmpsftcq94c.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0234a5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba02319cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba02319c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba02319b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsftcq94c                        0x000056180fd6958b <unavailable> + 5515

    5    libc.so.6                          0x00002ba023691460 __libc_start_main +
    245

    6    tmpsftcq94c                        0x000056180fd69169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    let vowelsSet = Set(vowels)\n    var count = 0\n    for c in s {\n\
    \        if vowelsSet.contains(c) {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpjahcth_q/tmpjahcth_q.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4e33efdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4e33bf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4e33bf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4e33bf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjahcth_q                        0x00005631ecc2d69b <unavailable> + 5787

    5    libc.so.6                          0x00002b4e340e9460 __libc_start_main +
    245

    6    tmpjahcth_q                        0x00005631ecc2d279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\", \"y\"]\n    for ch in s {\n        let vowel = String(ch).lowercased()\n\
    \        if vowels.contains(vowel) {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp9cdqpq3e/tmp9cdqpq3e.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac3a06e4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac3a03dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac3a03db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac3a03da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9cdqpq3e                        0x000055c01dfc27af <unavailable> + 6063

    5    libc.so.6                          0x00002ac3a08d0460 __libc_start_main +
    245

    6    tmp9cdqpq3e                        0x000055c01dfc2239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.filter { \"aeiouy\".contains($0) }.count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbkc6zjez/tmpbkc6zjez.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7036dd5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7036accb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7036acc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7036acb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbkc6zjez                        0x00005586d9f7f51b <unavailable> + 5403

    5    libc.so.6                          0x00002b7036fc1460 __libc_start_main +
    245

    6    tmpbkc6zjez                        0x00005586d9f7f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    var s = s.lowercased()\n    while !s.isEmpty\
    \ {\n        let first = s.removeFirst()\n        if vowels.contains(first) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpm6t6f6px/tmpm6t6f6px.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac8b0835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac8b052cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac8b052c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac8b052b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm6t6f6px                        0x000055d745da0802 <unavailable> + 6146

    5    libc.so.6                          0x00002ac8b0a21460 __libc_start_main +
    245

    6    tmpm6t6f6px                        0x000055d745da0339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\", \"y\"]\n    for ch in s {\n        if vowels.contains(String(ch))\
    \ {\n            count += 1\n        }\n    }\n    if vowels.contains(String(s.last!))\
    \ && count > 1 {\n        count -= 1\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpk6to0_kc/tmpk6to0_kc.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9179936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b917962db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b917962d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b917962c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk6to0_kc                        0x000055be120ca684 <unavailable> + 5764

    5    libc.so.6                          0x00002b9179b22460 __libc_start_main +
    245

    6    tmpk6to0_kc                        0x000055be120ca309 <unavailable> + 4873

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowel = CharacterSet(charactersIn: \"aeiouy\")\n \
    \   let vowelLast = CharacterSet(charactersIn: \"y\")\n    var count = 0\n   \
    \ for x in s.lowercased() {\n        if vowel.contains(x.unicodeScalars.first!)\
    \ {\n            count += 1\n        }\n    }\n    if count > 0 {\n        if\
    \ vowelLast.contains(s.unicodeScalars.last!) {\n            count -= 1\n     \
    \   }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpsrb2tmtw.swift:12:17: error: cannot find 'CharacterSet' in scope\n\
    \    let vowel = CharacterSet(charactersIn: \"aeiouy\")\n                ^~~~~~~~~~~~\n\
    /tmp/tmpsrb2tmtw.swift:13:21: error: cannot find 'CharacterSet' in scope\n   \
    \ let vowelLast = CharacterSet(charactersIn: \"y\")\n                    ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = Set(\"aeiouy\")\n    var counter = 0\n  \
    \  for c in s {\n        if vowels.contains(c) {\n            counter += 1\n \
    \       }\n    }\n    return counter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpcjdms7n6/tmpcjdms7n6.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2a2f5d2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2a2f2c9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2a2f2c9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2a2f2c87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcjdms7n6                        0x0000557d7b95756b <unavailable> + 5483

    5    libc.so.6                          0x00002b2a2f7be460 __libc_start_main +
    245

    6    tmpcjdms7n6                        0x0000557d7b957149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659978563
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n  return s.filter { c in\n    c == \"a\" || c == \"e\" ||\
    \ c == \"i\" || c == \"o\" || c == \"u\" ||\n      (c == \"y\" && s.last == \"\
    y\")\n  }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyc_jp145/tmpyc_jp145.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9cd9580c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9cd9277b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9cd9277988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9cd92767b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyc_jp145                        0x0000556e9567f5bb <unavailable> + 5563

    5    libc.so.6                          0x00002b9cd976c460 __libc_start_main +
    245

    6    tmpyc_jp145                        0x0000556e9567f199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let str = s.lowercased()\n    var set = Set<Character>()\n  \
    \  var count = 0\n    for c in str {\n        if vowels.contains(c) {\n      \
    \      set.insert(c)\n            count += 1\n        }\n    }\n    if set.contains(\"\
    y\") && vowels.contains(str.last!) {\n        count += 1\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpv8s_74qh/tmpv8s_74qh.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afe10528c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afe1021fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afe1021f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afe1021e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8s_74qh                        0x000056371f6dc9c2 <unavailable> + 6594

    5    libc.so.6                          0x00002afe10714460 __libc_start_main +
    245

    6    tmpv8s_74qh                        0x000056371f6dc4f9 <unavailable> + 5369

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for i in s {\n        if i == \"a\"\
    \ || i == \"e\" || i == \"i\" || i == \"o\" || i == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpxkgp8y8h/tmpxkgp8y8h.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abef4719c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abef4410b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abef4410988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abef440f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxkgp8y8h                        0x00005615973174bb <unavailable> + 5307

    5    libc.so.6                          0x00002abef4905460 __libc_start_main +
    245

    6    tmpxkgp8y8h                        0x0000561597317099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // TODO: Implement vowels_count function\n    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var count = 0\n    for char in s\
    \ {\n        if let lastChar = String(s.suffix(1)).lowercased().first, vowels.contains(String(lastChar))\
    \ {\n            count += 1\n        }\n        if vowels.contains(String(char).lowercased())\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmplbrxzb6j/tmplbrxzb6j.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba012c2dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba012924b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba012924988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0129237b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplbrxzb6j                        0x00005604da459734 <unavailable> + 5940

    5    libc.so.6                          0x00002ba012e19460 __libc_start_main +
    245

    6    tmplbrxzb6j                        0x00005604da4593b9 <unavailable> + 5049

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var c = 0\n    for i in s {\n        switch i {\n    \
    \    case \"a\", \"e\", \"i\", \"o\", \"u\", \"y\":\n            c += 1\n    \
    \    default:\n            continue\n        }\n    }\n    return c\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpp8tx0exf/tmpp8tx0exf.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5d200e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5d1fddcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5d1fddc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5d1fddb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp8tx0exf                        0x000055c8b65a14bb <unavailable> + 5307

    5    libc.so.6                          0x00002b5d202d1460 __libc_start_main +
    245

    6    tmpp8tx0exf                        0x000055c8b65a1099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n  var vowelCount = 0\n  let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n  for char in s {\n    let charLower = String(char).lowercased()\n\
    \    if vowels.contains(charLower) {\n      vowelCount += 1\n    }\n  }\n  if\
    \ s.last == \"y\" {\n    vowelCount += 1\n  }\n  return vowelCount\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpjktc4mf9/tmpjktc4mf9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b88d6755c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b88d644cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b88d644c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b88d644b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjktc4mf9                        0x0000562b6e5c69ee <unavailable> + 6638

    5    libc.so.6                          0x00002b88d6941460 __libc_start_main +
    245

    6    tmpjktc4mf9                        0x0000562b6e5c63b9 <unavailable> + 5049

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.filter { $0.isVowel }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpf1vq7jwb.swift:12:26: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return s.filter { $0.isVowel }.count\n\
    \                      ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var total = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            total += 1\n        }\n    }\n    return total\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmprjb5l8bt/tmprjb5l8bt.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad5eeaa9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad5ee7a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad5ee7a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad5ee79f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprjb5l8bt                        0x0000556586fbc4bb <unavailable> + 5307

    5    libc.so.6                          0x00002ad5eec95460 __libc_start_main +
    245

    6    tmprjb5l8bt                        0x0000556586fbc099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var v = 0\n    for c in s {\n        if c == \"a\" ||\
    \ c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            v += 1\n\
    \        }\n    }\n    if s.hasSuffix(\"y\") {\n        v += 1\n    }\n    return\
    \ v\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(vowels_count(s: \"abcde\") ==\
    \ 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s: \"key\"\
    ) == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s: \"keY\"\
    ) == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\"\
    ) == 3)"
  status: Exception
  stderr: 'tmp2re3ivmq/tmp2re3ivmq.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62d03b0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62d00a7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62d00a7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62d00a67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2re3ivmq                        0x000056278b6ac51b <unavailable> + 5403

    5    libc.so.6                          0x00002b62d059c460 __libc_start_main +
    245

    6    tmp2re3ivmq                        0x000056278b6ac0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // as far as I know, there is no way in standard Swift\
    \ to check if a\n    // character is a letter, so we'll just assume the string\
    \ is all ASCII\n    // characters\n    //\n    // CTEs are still used for this\
    \ exercise because it is easier to read\n    //\n    let vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"]\n    var count = 0\n    var s = s\n    while !s.isEmpty\
    \ {\n        let last = s.removeLast()\n        if vowels.contains(String(last))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpsefnm7ch/tmpsefnm7ch.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab66c972c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab66c669b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab66c669988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab66c6687b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsefnm7ch                        0x000055d71721367b <unavailable> + 5755

    5    libc.so.6                          0x00002ab66cb5e460 __libc_start_main +
    245

    6    tmpsefnm7ch                        0x000055d717213259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.lowercased().filter { $0 == \"a\" || $0 == \"\
    e\" || $0 == \"i\" || $0 == \"o\" || $0 == \"u\" || $0 == \"y\" }.count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpuy5t37ae/tmpuy5t37ae.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b362a8a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b362a5a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b362a5a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b362a59f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuy5t37ae                        0x00005555c8e596cf <unavailable> + 5839

    5    libc.so.6                          0x00002b362aa95460 __libc_start_main +
    245

    6    tmpuy5t37ae                        0x00005555c8e59159 <unavailable> + 4441

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // if string is empty the number of vowels is 0\n    if\
    \ s.isEmpty {\n        return 0\n    }\n    // else set up a counter and check\
    \ first character to see if it is a vowel.\n    // if so, increment the counter.\n\
    \    var count = 0\n    if s.first! == \"a\" || s.first! == \"e\" || s.first!\
    \ == \"i\" || s.first! == \"o\" || s.first! == \"u\" {\n        count += 1\n \
    \   }\n    // if the last character is y, increment the counter.\n    if s.last!\
    \ == \"y\" {\n        count += 1\n    }\n    // remove the first and last characters\
    \ from the string and call the function\n    // again on the resulting string.\n\
    \    return count + vowels_count(s: String(s.dropFirst().dropLast()))\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmptoovhv2o/tmptoovhv2o.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac1e9632c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac1e9329b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac1e9329988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac1e93287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptoovhv2o                        0x0000557299453734 <unavailable> + 5940

    5    libc.so.6                          0x00002ac1e981e460 __libc_start_main +
    245

    6    tmptoovhv2o                        0x00005572994533b9 <unavailable> + 5049

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // Using a set because we have to check for membership\
    \ a lot\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    var count = 0\n    for char in s {\n        if vowels.contains(char) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmplu9wrdvb/tmplu9wrdvb.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab16feb4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab16fbabb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab16fbab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab16fbaa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplu9wrdvb                        0x000055ef2e06569b <unavailable> + 5787

    5    libc.so.6                          0x00002ab1700a0460 __libc_start_main +
    245

    6    tmplu9wrdvb                        0x000055ef2e065279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp904j5i4s/tmp904j5i4s.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b85227cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85224c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85224c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85224c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp904j5i4s                        0x0000560f551d6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b85229b6460 __libc_start_main +
    245

    6    tmp904j5i4s                        0x0000560f551d5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: 0
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if c.lowercased() ==\
    \ \"y\" && s.last! == c {\n            count += 1\n        } else if vowels.contains(c.lowercased())\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        for v in vowels {\n   \
    \         if c == v {\n                count += 1\n            }\n        }\n\
    \    }\n    if s.hasSuffix(\"y\") {\n        count += 1\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpxo69vfew/tmpxo69vfew.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ffccb6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ffc9adb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ffc9ad988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ffc9ac7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxo69vfew                        0x000055f829e907bb <unavailable> + 6075

    5    libc.so.6                          0x00002b7ffcea2460 __libc_start_main +
    245

    6    tmpxo69vfew                        0x000055f829e90399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\", \"y\"]\n    let s = s.lowercased()\n    for i in 0..<s.count {\n\
    \        let character = String(s[s.index(s.startIndex, offsetBy: i)])\n     \
    \   if vowels.contains(character) {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmprdcdcp1x/tmprdcdcp1x.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af900d14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af900a0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af900a0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af900a0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprdcdcp1x                        0x0000556e2458b9df <unavailable> + 6623

    5    libc.so.6                          0x00002af900f00460 __libc_start_main +
    245

    6    tmprdcdcp1x                        0x0000556e2458b469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    let last: Character = s.last!\n    let s = Array(s.lowercased())\n\
    \    var count = 0\n    for i in s {\n        if i == last && last == \"y\" {\n\
    \            count += 1\n        } else if vowels.contains(i) {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyy8umxdx/tmpyy8umxdx.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c5ab5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c5a852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c5a852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c5a8517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyy8umxdx                        0x000055ed23a77bbe <unavailable> + 7102

    5    libc.so.6                          0x00002b2c5ad47460 __libc_start_main +
    245

    6    tmpyy8umxdx                        0x000055ed23a77589 <unavailable> + 5513

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n  var count = 0\n  for c in s {\n    if c == \"a\" || c ==\
    \ \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n      count += 1\n    }\n\
    \  }\n  if s.last == \"y\" {\n    count += 1\n  }\n  return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpviwnd5hy/tmpviwnd5hy.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b073ecd3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b073e9cab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b073e9ca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b073e9c97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpviwnd5hy                        0x0000562d8f19d58b <unavailable> + 5515

    5    libc.so.6                          0x00002b073eebf460 __libc_start_main +
    245

    6    tmpviwnd5hy                        0x0000562d8f19d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for c\
    \ in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpj_pk6va7/tmpj_pk6va7.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add320b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add31dacb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add31dac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add31dab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj_pk6va7                        0x000055625d37a4db <unavailable> + 5339

    5    libc.so.6                          0x00002add322a1460 __libc_start_main +
    245

    6    tmpj_pk6va7                        0x000055625d37a0b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n\
    \        case \"y\":\n            if s.last == \"y\" {\n                count\
    \ += 1\n            }\n        default:\n            continue\n        }\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp2u5swsbt/tmp2u5swsbt.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f79523c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f7921ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f7921a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f792197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2u5swsbt                        0x0000560b6727e58b <unavailable> + 5515

    5    libc.so.6                          0x00002b1f7970f460 __libc_start_main +
    245

    6    tmp2u5swsbt                        0x0000560b6727e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let letters = Array(s)\n    var counter = 0\n    for (index,\
    \ letter) in letters.enumerated() {\n        if vowels.contains(letter) {\n  \
    \          counter += 1\n        }\n        if index == letters.count - 1 {\n\
    \            if letter == \"y\" {\n                counter += 1\n            }\n\
    \        }\n    }\n    return counter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp0klfddi9.swift:15:12: error: cannot find 'vowels' in scope\n  \
    \      if vowels.contains(letter) {\n           ^~~~~~\n"
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let chars = Array(s)\n    let vowels: [Character] = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var vowelsCount = 0\n    let count = chars.count\n\
    \    for index in 0..<count {\n        let curr = chars[index]\n        if vowels.contains(curr)\
    \ {\n            if curr == \"y\" && index < count - 1 {\n                continue\n\
    \            }\n            vowelsCount += 1\n        }\n    }\n    return vowelsCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdlulp_2a/tmpdlulp_2a.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3dd9f3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3dd6eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3dd6ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3dd6e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdlulp_2a                        0x0000557375a8f8fb <unavailable> + 6395

    5    libc.so.6                          0x00002ae3ddbdf460 __libc_start_main +
    245

    6    tmpdlulp_2a                        0x0000557375a8f4d9 <unavailable> + 5337

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // TODO: Write some code to solve this coding problem\n\
    \    var vowelcount = 0\n    var charlist = [Character]()\n    for char in s {\n\
    \        charlist.append(char)\n    }\n    var length = charlist.count\n    for\
    \ i in 0..<length {\n        if charlist[i] == \"a\" || charlist[i] == \"e\" ||\
    \ charlist[i] == \"i\" || charlist[i] == \"o\" || charlist[i] == \"u\" {\n   \
    \         vowelcount += 1\n        }\n        if i == length - 1 && charlist[i]\
    \ == \"y\" {\n            vowelcount += 1\n        }\n    }\n    return vowelcount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpscwwwcvb/tmpscwwwcvb.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3499d9bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3499a92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3499a92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3499a917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpscwwwcvb                        0x000055a3518597eb <unavailable> + 6123

    5    libc.so.6                          0x00002b3499f87460 __libc_start_main +
    245

    6    tmpscwwwcvb                        0x000055a3518593c9 <unavailable> + 5065

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var letters = Array(s)\n    var count = 0\n    for i in 0..<letters.count\
    \ {\n        if vowels.contains(letters[i]) {\n            count += 1\n      \
    \  }\n    }\n    if vowels.contains(letters[letters.count - 1]) {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpca5za3g4/tmpca5za3g4.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b670e562c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b670e259b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b670e259988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b670e2587b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpca5za3g4                        0x0000562a5eb69844 <unavailable> + 6212

    5    libc.so.6                          0x00002b670e74e460 __libc_start_main +
    245

    6    tmpca5za3g4                        0x0000562a5eb694c9 <unavailable> + 5321

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if is_vowel(ch:\
    \ char) {\n            count += 1\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpsamvj5yh.swift:14:12: error: cannot find 'is_vowel' in scope\n\
    \        if is_vowel(ch: char) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978564
- exit_code: 0
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = 0\n    let input = s.lowercased()\n    let\
    \ last_index = input.index(before: input.endIndex)\n    for index in input.indices\
    \ {\n        if (input[index] == \"a\" || input[index] == \"e\" || input[index]\
    \ == \"i\" || input[index] == \"o\" || input[index] == \"u\") {\n            vowels\
    \ += 1\n        }\n        if (input[index] == \"y\" && index == last_index) {\n\
    \            vowels += 1\n        }\n    }\n    return vowels\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4qn7x_to/tmp4qn7x_to.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8c5e4dec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8c5e1d5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8c5e1d5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8c5e1d47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4qn7x_to                        0x00005630d1c1669b <unavailable> + 5787

    5    libc.so.6                          0x00002b8c5e6ca460 __libc_start_main +
    245

    6    tmp4qn7x_to                        0x00005630d1c16279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = 0\n    let arr = s.lowercased().characters.map\
    \ { String($0) }\n    let vowelSet = Set([\"a\", \"e\", \"i\", \"o\", \"u\"])\n\
    \    for (i, letter) in arr.enumerated() {\n        if vowelSet.contains(letter)\
    \ {\n            if letter == \"y\" && i < arr.count - 1 {\n                continue\n\
    \            }\n            vowels += 1\n        }\n    }\n    return vowels\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkud0xqgt.swift:13:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    let arr = s.lowercased().characters.map { String($0)\
    \ }\n                             ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    var lastchar = \"\"\n    for char in s {\n  \
    \      if vowels.contains(char) {\n            count += 1\n        }\n       \
    \ lastchar = String(char)\n    }\n    if lastchar == \"y\" {\n        count +=\
    \ 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpshqx1icu/tmpshqx1icu.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b034cdcdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b034cac4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b034cac4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b034cac37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpshqx1icu                        0x000055e0876e26eb <unavailable> + 5867

    5    libc.so.6                          0x00002b034cfb9460 __libc_start_main +
    245

    6    tmpshqx1icu                        0x000055e0876e22c9 <unavailable> + 4809

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vCount = 0\n    for letter in s {\n        switch\
    \ letter {\n        case \"a\":\n            vCount += 1\n        case \"e\":\n\
    \            vCount += 1\n        case \"i\":\n            vCount += 1\n     \
    \   case \"o\":\n            vCount += 1\n        case \"u\":\n            vCount\
    \ += 1\n        case \"y\":\n            if (s.last == \"y\") {\n            \
    \    vCount += 1\n            }\n        default:\n            vCount += 0\n \
    \       }\n    }\n    return vCount\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnn_jzmmy/tmpnn_jzmmy.swift:50: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73a1d5dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73a1a54b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73a1a54988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73a1a537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnn_jzmmy                        0x00005609c8c3b58b <unavailable> + 5515

    5    libc.so.6                          0x00002b73a1f49460 __libc_start_main +
    245

    6    tmpnn_jzmmy                        0x00005609c8c3b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp904j5i4s/tmp904j5i4s.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b85227cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85224c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85224c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85224c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp904j5i4s                        0x0000560f551d6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b85229b6460 __libc_start_main +
    245

    6    tmp904j5i4s                        0x0000560f551d5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: 0
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if (c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" ||\n            c ==\
    \ \"A\" || c == \"E\" || c == \"I\" || c == \"O\" || c == \"U\") {\n         \
    \   count += 1\n        }\n    }\n    if (s.last == \"y\" || s.last == \"Y\")\
    \ {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if \"aeiouy\"\
    .contains(char) {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp8e9rkqzp/tmp8e9rkqzp.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad02024cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad01ff43b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad01ff43988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad01ff427b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8e9rkqzp                        0x000055d13af7d4db <unavailable> + 5339

    5    libc.so.6                          0x00002ad020438460 __libc_start_main +
    245

    6    tmp8e9rkqzp                        0x000055d13af7d0b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var v = 0\n    var i = 0\n    while i < s.count - 1 {\n\
    \        if isVowel(s[i]) {\n            v += 1\n        }\n        i += 1\n \
    \   }\n    if isVowel(s[s.count - 1]) {\n        v += 1\n    }\n    return v\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmphlcihvqz.swift:15:12: error: cannot find 'isVowel' in scope\n \
    \       if isVowel(s[i]) {\n           ^~~~~~~\n/tmp/tmphlcihvqz.swift:20:8: error:\
    \ cannot find 'isVowel' in scope\n    if isVowel(s[s.count - 1]) {\n       ^~~~~~~\n"
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var s = s.lowercased()\n    if (s.count > 0 && (s.last\
    \ == \"y\" || s.last == \"Y\")) {\n        s.removeLast()\n    }\n    var vowels_count\
    \ = 0\n    for c in s {\n        if (c == \"a\" || c == \"e\" || c == \"i\" ||\
    \ c == \"o\" || c == \"u\") {\n            vowels_count += 1\n        }\n    }\n\
    \    return vowels_count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpzeir7ok_/tmpzeir7ok_.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fd7c08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fd78ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fd78ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fd78fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzeir7ok_                        0x0000556f0caf6782 <unavailable> + 6018

    5    libc.so.6                          0x00002b4fd7df4460 __libc_start_main +
    245

    6    tmpzeir7ok_                        0x0000556f0caf62b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.filter({ $0 == \"a\" || $0 == \"e\" || $0 ==\
    \ \"i\" || $0 == \"o\" || $0 == \"u\" || ($0 == \"y\" && s.last == \"y\") }).count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp28xpi8du/tmp28xpi8du.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2888db6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2888aadb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2888aad988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2888aac7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp28xpi8du                        0x000055cbdaf8a5bb <unavailable> + 5563

    5    libc.so.6                          0x00002b2888fa2460 __libc_start_main +
    245

    6    tmp28xpi8du                        0x000055cbdaf8a199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let charArray = Array(s)\n    var foundVowels = 0\n    for char\
    \ in charArray {\n        if vowels.contains(char) {\n            foundVowels\
    \ += 1\n        }\n    }\n    return foundVowels\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpz0saxobs/tmpz0saxobs.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2ce0bcac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2ce08c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2ce08c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2ce08c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0saxobs                        0x000055a86bffe82b <unavailable> + 6187

    5    libc.so.6                          0x00002b2ce0db6460 __libc_start_main +
    245

    6    tmpz0saxobs                        0x000055a86bffe409 <unavailable> + 5129

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for (_, char) in s.enumerated()\
    \ {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"\
    o\" || char == \"u\" {\n            vowelCount += 1\n        }\n    }\n    if\
    \ s.last == \"y\" {\n        vowelCount += 1\n    }\n    return vowelCount\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpjgqgmwwf/tmpjgqgmwwf.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b32a6088c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b32a5d7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b32a5d7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b32a5d7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjgqgmwwf                        0x000055d27978971b <unavailable> + 5915

    5    libc.so.6                          0x00002b32a6274460 __libc_start_main +
    245

    6    tmpjgqgmwwf                        0x000055d2797892f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"AEIOUaeiou\"\n    let ys = [\"Y\", \"y\"\
    ]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n    \
    \        count += 1\n        }\n    }\n    if ys.contains(s.last) {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpvqxti02f.swift:20:22: error: cannot convert value of type 'String.Element?'\
    \ (aka 'Optional<Character>') to expected argument type 'String'\n    if ys.contains(s.last)\
    \ {\n                     ^\n"
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for x in s {\n        if x == \"a\"\
    \ || x == \"e\" || x == \"i\" || x == \"o\" || x == \"u\" || x == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    if count == 0 {\n        return 0\n\
    \    }\n    else if s.last == \"y\" && count > 1 {\n        return count\n   \
    \ }\n    else if s.last == \"y\" && count == 1 {\n        return count - 1\n \
    \   }\n    else {\n        return count\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp8yom94un/tmp8yom94un.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b989f758c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b989f44fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b989f44f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b989f44e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8yom94un                        0x000055cd1978558b <unavailable> + 5515

    5    libc.so.6                          0x00002b989f944460 __libc_start_main +
    245

    6    tmp8yom94un                        0x000055cd19785169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let lastChar = s.last\n    var count = 0\n    for c in s {\n\
    \        if vowels.contains(c) {\n            count += 1\n        }\n    }\n \
    \   if (lastChar == \"y\") {\n        count += 1\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmps1z6_b6e/tmps1z6_b6e.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af4c6766c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af4c645db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af4c645d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af4c645c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps1z6_b6e                        0x00005593621f77bb <unavailable> + 6075

    5    libc.so.6                          0x00002af4c6952460 __libc_start_main +
    245

    6    tmps1z6_b6e                        0x00005593621f7399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    \n    let vowels: [Character] = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"]\n    var vowelsCount = 0\n    \n    for char in s {\n        for\
    \ vowel in vowels {\n            if vowel == char {\n                vowelsCount\
    \ += 1\n            }\n        }\n    }\n    \n    if s.last == \"y\" {\n    \
    \    vowelsCount += 1\n    }\n    \n    return vowelsCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpedkon8wm/tmpedkon8wm.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58e9d46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58e9a3db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58e9a3d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58e9a3c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpedkon8wm                        0x0000561c8026583b <unavailable> + 6203

    5    libc.so.6                          0x00002b58e9f32460 __libc_start_main +
    245

    6    tmpedkon8wm                        0x0000561c80265419 <unavailable> + 5145

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp904j5i4s/tmp904j5i4s.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b85227cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85224c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85224c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85224c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp904j5i4s                        0x0000560f551d6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b85229b6460 __libc_start_main +
    245

    6    tmp904j5i4s                        0x0000560f551d5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"\
    ]\n    var count = 0\n    for l in s {\n        if vowels.contains(String(l))\
    \ {\n            count += 1\n        }\n    }\n    if !vowels.contains(String(s.last!))\
    \ {\n        count -= 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyf584nyt/tmpyf584nyt.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad6b8abec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad6b87b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad6b87b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad6b87b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyf584nyt                        0x00005566034d472b <unavailable> + 5931

    5    libc.so.6                          0x00002ad6b8caa460 __libc_start_main +
    245

    6    tmpyf584nyt                        0x00005566034d4309 <unavailable> + 4873

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let word = s.lowercased()\n    var count = 0\n    for (i, v)\
    \ in word.enumerated() {\n        if vowels.contains(v) {\n            count +=\
    \ 1\n            if v == \"y\" && i != word.count - 1 {\n                count\
    \ -= 1\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpxseanqrk/tmpxseanqrk.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec0c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ebdbeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ebdbe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ebdbd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxseanqrk                        0x00005644de916a12 <unavailable> + 6674

    5    libc.so.6                          0x00002b08ec2b3460 __libc_start_main +
    245

    6    tmpxseanqrk                        0x00005644de916549 <unavailable> + 5449

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n  let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\", \"y\"]\n  let loweredS = s.lowercased()\n  let lastCharacter = loweredS.last\n\
    \  var count = 0\n  for c in loweredS {\n    if vowels.contains(c) {\n      count\
    \ += 1\n    }\n  }\n  if (lastCharacter == \"y\") {\n    count -= 1\n  }\n  return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"abcde\"\
    ) == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s: \"key\"\
    ) == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s: \"keY\"\
    ) == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\"\
    ) == 3)"
  status: Exception
  stderr: 'tmptlgzfzf5/tmptlgzfzf5.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad72bba6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad72b89db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad72b89d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad72b89c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptlgzfzf5                        0x00005617d81ed8b2 <unavailable> + 6322

    5    libc.so.6                          0x00002ad72bd92460 __libc_start_main +
    245

    6    tmptlgzfzf5                        0x00005617d81ed3e9 <unavailable> + 5097

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let characters = Array(s)\n    var vowelCount = 0\n  \
    \  var checkY = false\n    var yExists = false\n    for i in 0..<characters.count\
    \ {\n        if characters[i] == \"A\" || characters[i] == \"E\" || characters[i]\
    \ == \"I\" || characters[i] == \"O\" || characters[i] == \"U\" {\n           \
    \ vowelCount += 1\n        }\n        if characters[i] == \"Y\" {\n          \
    \  checkY = true\n            yExists = true\n        }\n        if yExists &&\
    \ checkY && characters[i] != \"Y\" {\n            checkY = false\n        }\n\
    \    }\n    if checkY {\n        vowelCount += 1\n    }\n    return vowelCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmph3qadldx/tmph3qadldx.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b889d6dcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b889d3d3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b889d3d3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b889d3d27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph3qadldx                        0x0000558a04bee6f4 <unavailable> + 5876

    5    libc.so.6                          0x00002b889d8c8460 __libc_start_main +
    245

    6    tmph3qadldx                        0x0000558a04bee379 <unavailable> + 4985

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var s = s.lowercased()\n    var count = 0\n    for c in\
    \ s {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c ==\
    \ \"u\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp9s0ma78j/tmp9s0ma78j.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2585154c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2584e4bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2584e4b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2584e4a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9s0ma78j                        0x00005637e02b45c2 <unavailable> + 5570

    5    libc.so.6                          0x00002b2585340460 __libc_start_main +
    245

    6    tmp9s0ma78j                        0x00005637e02b40f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // write your code here.\n    return 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpgjrxb481/tmpgjrxb481.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac2a8841c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac2a8538b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac2a8538988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac2a85377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgjrxb481                        0x000055712f223264 <unavailable> + 4708

    5    libc.so.6                          0x00002ac2a8a2d460 __libc_start_main +
    245

    6    tmpgjrxb481                        0x000055712f222ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // Replace the following line with your implementation\
    \ of this function\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp2wig3f72/tmp2wig3f72.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06ff73cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06ff433b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06ff433988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06ff4327b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2wig3f72                        0x000055b77e283264 <unavailable> + 4708

    5    libc.so.6                          0x00002b06ff928460 __libc_start_main +
    245

    6    tmp2wig3f72                        0x000055b77e282ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    let sArray = Array(s)\n    for i in 0..<sArray.count\
    \ {\n        if vowels.contains(sArray[i]) {\n            count += 1\n       \
    \ }\n    }\n    if sArray.last == \"y\" {\n        count += 1\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"abcde\"\
    ) == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s: \"key\"\
    ) == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s: \"keY\"\
    ) == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\"\
    ) == 3)"
  status: Exception
  stderr: 'tmp32fu9yjc/tmp32fu9yjc.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba41dcbdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba41d9b4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba41d9b4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba41d9b37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp32fu9yjc                        0x000055a983bbc9db <unavailable> + 6619

    5    libc.so.6                          0x00002ba41dea9460 __libc_start_main +
    245

    6    tmp32fu9yjc                        0x000055a983bbc5b9 <unavailable> + 5561

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = 0\n    for i in s {\n        switch i {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            vowels += 1\n  \
    \      case \"y\":\n            if s.lastIndex(of: i) == s.index(before: s.endIndex)\
    \ {\n                vowels += 1\n            }\n        default:\n          \
    \  break\n        }\n    }\n    return vowels\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpcrtf51nd/tmpcrtf51nd.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3338402c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33380f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33380f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33380f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcrtf51nd                        0x000055ba18dc869b <unavailable> + 5787

    5    libc.so.6                          0x00002b33385ee460 __libc_start_main +
    245

    6    tmpcrtf51nd                        0x000055ba18dc8279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var n = 0\n    for char in s {\n        if char == \"\
    a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n  \
    \          n += 1\n        }\n    }\n    return n\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmppxka3x9s/tmppxka3x9s.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b66e4269c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b66e3f60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b66e3f60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66e3f5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppxka3x9s                        0x00005622956384bb <unavailable> + 5307

    5    libc.so.6                          0x00002b66e4455460 __libc_start_main +
    245

    6    tmppxka3x9s                        0x0000562295638099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp904j5i4s/tmp904j5i4s.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b85227cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85224c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85224c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85224c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp904j5i4s                        0x0000560f551d6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b85229b6460 __libc_start_main +
    245

    6    tmp904j5i4s                        0x0000560f551d5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels_char = [\"a\", \"e\", \"i\", \"o\", \"u\",\
    \ \"y\"]\n    let vowels = Set(vowels_char)\n    var count = 0\n    for i in s.lowercased()\
    \ {\n        if vowels.contains(String(i)) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpjl188ns4/tmpjl188ns4.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9d53775c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9d5346cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9d5346c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9d5346b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjl188ns4                        0x0000556afe48b7ff <unavailable> + 6143

    5    libc.so.6                          0x00002b9d53961460 __libc_start_main +
    245

    6    tmpjl188ns4                        0x0000556afe48b289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    \n    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    var count = 0\n    \n    for i in s {\n        if i == \"y\" && s.last\
    \ == \"y\" {\n            count += 1\n        } else if vowels.contains(String(i))\
    \ {\n            count += 1\n        }\n    }\n    \n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpxr3650wj/tmpxr3650wj.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac4a1ee9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac4a1be0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac4a1be0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac4a1bdf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxr3650wj                        0x000055f55427578b <unavailable> + 6027

    5    libc.so.6                          0x00002ac4a20d5460 __libc_start_main +
    245

    6    tmpxr3650wj                        0x000055f554275369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.filter {\n        $0 == \"a\" || $0 == \"e\"\
    \ || $0 == \"i\" || $0 == \"o\" || $0 == \"u\" || $0 == \"y\"\n    }.count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpanh0abvu/tmpanh0abvu.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2e6ad41c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2e6aa38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2e6aa38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2e6aa377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpanh0abvu                        0x00005590d4c4b52b <unavailable> + 5419

    5    libc.so.6                          0x00002b2e6af2d460 __libc_start_main +
    245

    6    tmpanh0abvu                        0x00005590d4c4b109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.filter {char in\n        return [\"a\", \"e\"\
    , \"i\", \"o\", \"u\", \"y\"].contains(char)\n    }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp9x_qkoa_/tmp9x_qkoa_.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17aef4cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17aec43b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17aec43988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17aec427b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9x_qkoa_                        0x000056533bbe06bb <unavailable> + 5819

    5    libc.so.6                          0x00002b17af138460 __libc_start_main +
    245

    6    tmp9x_qkoa_                        0x000056533bbe0299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.characters.filter {\n        $0 == \"a\" || $0\
    \ == \"e\" || $0 == \"i\" || $0 == \"o\" || $0 == \"u\" || $0 == \"y\"\n    }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpx4919wo8.swift:12:14: error: 'characters' is unavailable: Please\
    \ use String directly\n    return s.characters.filter {\n             ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n  // TODO: implement this function\n  let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n  var count = 0\n  for (_, char) in s.enumerated()\
    \ {\n    let strChar = String(char)\n    if vowels.contains(strChar) {\n     \
    \ count += 1\n    }\n  }\n  return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpfcn1yq2u/tmpfcn1yq2u.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b141256ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1412265b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1412265988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b14122647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfcn1yq2u                        0x000056141f7c379b <unavailable> + 6043

    5    libc.so.6                          0x00002b141275a460 __libc_start_main +
    245

    6    tmpfcn1yq2u                        0x000056141f7c3379 <unavailable> + 4985

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let lastIndex = s.index(before: s.endIndex)\n\
    \    for ch in s {\n        if ch == \"a\" || ch == \"e\" || ch == \"i\" || ch\
    \ == \"o\" || ch == \"u\" {\n            count += 1\n        }\n        if ch\
    \ == \"y\" && s.index(of: ch) == lastIndex {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp522fichw/tmp522fichw.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4dc1ec5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4dc1bbcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4dc1bbc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4dc1bbb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp522fichw                        0x0000557b8e5b269b <unavailable> + 5787

    5    libc.so.6                          0x00002b4dc20b1460 __libc_start_main +
    245

    6    tmp522fichw                        0x0000557b8e5b2279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: 0
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var result = 0\n    let word = s.lowercased()\n    for\
    \ c in word {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\"\
    \ || c == \"u\" {\n            result += 1\n        }\n    }\n    if word.last\
    \ == \"y\" {\n        result += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    \n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    var count = 0\n    \n    for vowel in s {\n        if vowels.contains(String(vowel))\
    \ {\n            count += 1\n        }\n    }\n    \n    if s.hasSuffix(\"y\"\
    ) {\n        count += 1\n    }\n    \n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpqb2kvyef/tmpqb2kvyef.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b42799e4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b42796dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b42796db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b42796da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqb2kvyef                        0x000055558c98765b <unavailable> + 5723

    5    libc.so.6                          0x00002b4279bd0460 __libc_start_main +
    245

    6    tmpqb2kvyef                        0x000055558c987239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    let end = s.count - 1\n    for (index, c) in\
    \ s.enumerated() {\n        if vowels.contains(c) {\n            if index == end\
    \ && c == \"y\" {\n                continue\n            }\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpvetm_3fy/tmpvetm_3fy.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b51344b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b51341aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b51341ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b51341ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvetm_3fy                        0x000055bac9b318bb <unavailable> + 6331

    5    libc.so.6                          0x00002b51346a3460 __libc_start_main +
    245

    6    tmpvetm_3fy                        0x000055bac9b31499 <unavailable> + 5273

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: 0
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let string = s.lowercased()\n    let vowels: [Character]\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var count = 0\n    for char in string\
    \ {\n        if vowels.contains(char) {\n            count += 1\n        }\n \
    \   }\n    if string.hasSuffix(\"y\") {\n        count += 1\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"abcde\"\
    ) == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s: \"key\"\
    ) == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s: \"keY\"\
    ) == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\"\
    ) == 3)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // Fill in your code here.\n    return 0\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpx25s8zzo/tmpx25s8zzo.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5c37976c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5c3766db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5c3766d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5c3766c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx25s8zzo                        0x0000561c3e40b264 <unavailable> + 4708

    5    libc.so.6                          0x00002b5c37b62460 __libc_start_main +
    245

    6    tmpx25s8zzo                        0x0000561c3e40aee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpr4kvpem0/tmpr4kvpem0.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5b956c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5b953c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5b953c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5b953bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr4kvpem0                        0x0000555b0480264b <unavailable> + 5707

    5    libc.so.6                          0x00002b5b958b5460 __libc_start_main +
    245

    6    tmpr4kvpem0                        0x0000555b04802229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n  let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  var\
    \ count = 0\n  for char in s {\n    if vowels.contains(String(char)) {\n     \
    \ count += 1\n    }\n  }\n  if count > 0 && s.last == \"y\" {\n    count += 1\n\
    \  }\n  return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpok0w24qz/tmpok0w24qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad1596cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad1593c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad1593c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad1593c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpok0w24qz                        0x000055da8962678b <unavailable> + 6027

    5    libc.so.6                          0x00002ad1598b7460 __libc_start_main +
    245

    6    tmpok0w24qz                        0x000055da89626369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let last: Character = s.last!\n    var count = 0\n    for letter\
    \ in s {\n        if vowels.contains(letter) {\n            count += 1\n     \
    \   }\n    }\n    if last == \"y\" {\n        count += 1\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpjc9a33md/tmpjc9a33md.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad95dcb5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad95d9acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad95d9ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad95d9ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjc9a33md                        0x0000564ed162984b <unavailable> + 6219

    5    libc.so.6                          0x00002ad95dea1460 __libc_start_main +
    245

    6    tmpjc9a33md                        0x0000564ed1629429 <unavailable> + 5161

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: 0
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = Set<Character>([\"a\", \"e\", \"i\", \"o\"\
    , \"u\"])\n    let s = s.lowercased()\n    let ylast = s.hasSuffix(\"y\")\n  \
    \  let non_y_vowels = s.filter { c in vowels.contains(c) && c != \"y\" }\n   \
    \ let nnon_y_vowels = non_y_vowels.count\n    return nnon_y_vowels + (ylast ?\
    \ 1 : 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"abcde\"\
    ) == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s: \"key\"\
    ) == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s: \"keY\"\
    ) == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\"\
    ) == 3)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var vc = 0\n    for l in s {\n        if (vowels.contains(l)) {\n\
    \            vc += 1\n        }\n    }\n    if (s.last == \"y\") {\n        vc\
    \ += 1\n    }\n    return vc\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp7ui2k4eg/tmp7ui2k4eg.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b56e10b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b56e0daab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b56e0daa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b56e0da97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7ui2k4eg                        0x0000564bb769a76b <unavailable> + 5995

    5    libc.so.6                          0x00002b56e129f460 __libc_start_main +
    245

    6    tmp7ui2k4eg                        0x0000564bb769a349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp904j5i4s/tmp904j5i4s.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b85227cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85224c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85224c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85224c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp904j5i4s                        0x0000560f551d6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b85229b6460 __libc_start_main +
    245

    6    tmp904j5i4s                        0x0000560f551d5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiou\"\n    var count = 0\n    for c in\
    \ s {\n        if vowels.contains(c) {\n            count += 1\n        }\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpizfnu538/tmpizfnu538.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4ae4032c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4ae3d29b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4ae3d29988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4ae3d287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpizfnu538                        0x000055c9386d34db <unavailable> + 5339

    5    libc.so.6                          0x00002b4ae421e460 __libc_start_main +
    245

    6    tmpizfnu538                        0x000055c9386d30b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowelSet = Set<Character>([\"a\", \"e\", \"i\", \"\
    o\", \"u\"])\n    var count = 0\n    var end_y = false\n    for char in s {\n\
    \        if vowelSet.contains(char) {\n            count += 1\n        }\n   \
    \     if char == \"y\" {\n            end_y = true\n        } else {\n       \
    \     end_y = false\n        }\n    }\n    if end_y {\n        count += 1\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpb67ijm27/tmpb67ijm27.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8efb017c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8efad0eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8efad0e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8efad0d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb67ijm27                        0x00005568c20186fb <unavailable> + 5883

    5    libc.so.6                          0x00002b8efb203460 __libc_start_main +
    245

    6    tmpb67ijm27                        0x00005568c20182d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     case \"y\":\n            count += 1\n        default:\n            break\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpz0wty9b7/tmpz0wty9b7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f4f482c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f4f179b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f4f179988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f4f1787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0wty9b7                        0x00005627684844bb <unavailable> + 5307

    5    libc.so.6                          0x00002b3f4f66e460 __libc_start_main +
    245

    6    tmpz0wty9b7                        0x0000562768484099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // write your code in Swift 3.0 (Linux)\n    \n    let\
    \ lowercase = s.lowercased()\n    let lc = Array(lowercase)\n    var vowels =\
    \ [Character]()\n    var v_count = 0\n    \n    for i in lc {\n        if i ==\
    \ \"a\" || i == \"e\" || i == \"i\" || i == \"o\" || i == \"u\" {\n          \
    \  vowels.append(i)\n        }\n    }\n    \n    if vowels.count == 0 {\n    \
    \    return 0\n    }\n    \n    if vowels.last == \"y\" {\n        vowels.removeLast()\n\
    \        v_count = vowels.count + 1\n    } else {\n        v_count = vowels.count\n\
    \    }\n    \n    return v_count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmppf1hx5wh/tmppf1hx5wh.swift:54: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5700900c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b57005f7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b57005f7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b57005f67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppf1hx5wh                        0x000055ee7af09a12 <unavailable> + 6674

    5    libc.so.6                          0x00002b5700aec460 __libc_start_main +
    245

    6    tmppf1hx5wh                        0x000055ee7af09549 <unavailable> + 5449

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // TODO: Write vowels_count function\n    var count =\
    \ 0\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for\
    \ c in s {\n        if c == \"y\" && s.last == \"y\" {\n            count += 1\n\
    \        } else if vowels.contains(c) {\n            count += 1\n        }\n \
    \   }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp7fabf1nt/tmp7fabf1nt.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af91e701c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af91e3f8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af91e3f8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af91e3f77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7fabf1nt                        0x000055626e49d76b <unavailable> + 5995

    5    libc.so.6                          0x00002af91e8ed460 __libc_start_main +
    245

    6    tmp7fabf1nt                        0x000055626e49d349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp904j5i4s/tmp904j5i4s.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b85227cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85224c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85224c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85224c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp904j5i4s                        0x0000560f551d6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b85229b6460 __libc_start_main +
    245

    6    tmp904j5i4s                        0x0000560f551d5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var cnt = 0\n    for i in s {\n        if i == \"a\" ||\
    \ i == \"e\" || i == \"i\" || i == \"o\" || i == \"u\" || i == \"y\" {\n     \
    \       cnt += 1\n        }\n    }\n    return cnt\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpmnrg7o2e/tmpmnrg7o2e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba766429c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba766120b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba766120988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba76611f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmnrg7o2e                        0x000055a6d597f4bb <unavailable> + 5307

    5    libc.so.6                          0x00002ba766615460 __libc_start_main +
    245

    6    tmpmnrg7o2e                        0x000055a6d597f099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp904j5i4s/tmp904j5i4s.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b85227cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85224c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85224c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85224c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp904j5i4s                        0x0000560f551d6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b85229b6460 __libc_start_main +
    245

    6    tmp904j5i4s                        0x0000560f551d5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // TODO: Write some code to solve this coding challenge\n\
    \    var vowelList = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var vowelCount =\
    \ 0\n    for letter in s {\n        if vowelList.contains(String(letter)) {\n\
    \            vowelCount += 1\n        }\n    }\n    return vowelCount\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpovxelcbx/tmpovxelcbx.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4b6666bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4b66362b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4b66362988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4b663617b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpovxelcbx                        0x00005634a3a705fb <unavailable> + 5627

    5    libc.so.6                          0x00002b4b66857460 __libc_start_main +
    245

    6    tmpovxelcbx                        0x00005634a3a701d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmphz3fnktp/tmphz3fnktp.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abde9fb1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abde9ca8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abde9ca8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abde9ca77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphz3fnktp                        0x0000558fdcfd37bb <unavailable> + 6075

    5    libc.so.6                          0x00002abdea19d460 __libc_start_main +
    245

    6    tmphz3fnktp                        0x0000558fdcfd3399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpq_svw9zd/tmpq_svw9zd.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afe6e3cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afe6e0c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afe6e0c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afe6e0c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq_svw9zd                        0x0000556302c4b58b <unavailable> + 5515

    5    libc.so.6                          0x00002afe6e5bb460 __libc_start_main +
    245

    6    tmpq_svw9zd                        0x0000556302c4b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // Complete this function\n    var vowelCount = 0\n  \
    \  let lower = s.lowercased()\n    let array = Array(lower)\n    for i in 0..<array.count\
    \ {\n        if array[i] == \"a\" || array[i] == \"e\" || array[i] == \"i\" ||\
    \ array[i] == \"o\" || array[i] == \"u\" {\n            vowelCount += 1\n    \
    \    }\n        if array[i] == \"y\" && i != array.count - 1 {\n            vowelCount\
    \ += 1\n        }\n    }\n    return vowelCount\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpmphufw75/tmpmphufw75.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab3af22dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab3aef24b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab3aef24988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab3aef237b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmphufw75                        0x000055cdce2a18a2 <unavailable> + 6306

    5    libc.so.6                          0x00002ab3af419460 __libc_start_main +
    245

    6    tmpmphufw75                        0x000055cdce2a13d9 <unavailable> + 5081

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if (c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\") {\n \
    \           count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkg8s5vym/tmpkg8s5vym.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44350a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4434d9db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4434d9d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4434d9c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkg8s5vym                        0x0000564de39434bb <unavailable> + 5307

    5    libc.so.6                          0x00002b4435292460 __libc_start_main +
    245

    6    tmpkg8s5vym                        0x0000564de3943099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp904j5i4s/tmp904j5i4s.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b85227cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85224c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85224c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85224c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp904j5i4s                        0x0000560f551d6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b85229b6460 __libc_start_main +
    245

    6    tmp904j5i4s                        0x0000560f551d5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.count - s.lowercased().filter(Set(\"aeiouy\"\
    ).contains).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbhxjzv6g/tmpbhxjzv6g.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b724ae7ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b724ab71b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b724ab71988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b724ab707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbhxjzv6g                        0x00005577e3ee6634 <unavailable> + 5684

    5    libc.so.6                          0x00002b724b066460 __libc_start_main +
    245

    6    tmpbhxjzv6g                        0x00005577e3ee62b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp904j5i4s/tmp904j5i4s.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b85227cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85224c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85224c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85224c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp904j5i4s                        0x0000560f551d6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b85229b6460 __libc_start_main +
    245

    6    tmp904j5i4s                        0x0000560f551d5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     case \"y\":\n            if c == s.last {\n                count += 1\n\
    \            }\n        default:\n            continue\n        }\n    }\n   \
    \ return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpabm22vh7/tmpabm22vh7.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b175b5b6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b175b2adb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b175b2ad988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b175b2ac7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpabm22vh7                        0x000055a374d6f58b <unavailable> + 5515

    5    libc.so.6                          0x00002b175b7a2460 __libc_start_main +
    245

    6    tmpabm22vh7                        0x000055a374d6f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp904j5i4s/tmp904j5i4s.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b85227cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85224c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85224c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85224c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp904j5i4s                        0x0000560f551d6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b85229b6460 __libc_start_main +
    245

    6    tmp904j5i4s                        0x0000560f551d5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var counter = 0\n    let vowels = \"aeiou\"\n    let s\
    \ = s.lowercased()\n    for i in s {\n        if vowels.contains(i) {\n      \
    \      counter += 1\n        }\n    }\n    return counter\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpy4ositj0/tmpy4ositj0.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad07a977c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad07a66eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad07a66e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad07a66d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy4ositj0                        0x000055c6dd40c5e2 <unavailable> + 5602

    5    libc.so.6                          0x00002ad07ab63460 __libc_start_main +
    245

    6    tmpy4ositj0                        0x000055c6dd40c119 <unavailable> + 4377

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let lowerCase = s.lowercased()\n    var cnt = 0\n    var\
    \ isY = false\n    for i in lowerCase {\n        if i == \"a\" || i == \"e\" ||\
    \ i == \"i\" || i == \"o\" || i == \"u\" {\n            cnt += 1\n        }\n\
    \        if i == \"y\" {\n            isY = true\n        }\n    }\n    if isY\
    \ {\n        cnt += 1\n    }\n    return cnt\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp5fhqh8xi/tmp5fhqh8xi.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae754e20c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae754b17b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae754b17988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae754b167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fhqh8xi                        0x0000557f73a6166f <unavailable> + 5743

    5    libc.so.6                          0x00002ae75500c460 __libc_start_main +
    245

    6    tmp5fhqh8xi                        0x0000557f73a610f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let sArray = Array(s)\n    let vowelsArray = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    var count = 0\n    for char in sArray {\n     \
    \   if vowelsArray.contains(String(char)) || (String(char) == \"y\" && sArray.last\
    \ == char) {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpocek_66u/tmpocek_66u.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6189dc2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6189ab9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6189ab9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6189ab87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpocek_66u                        0x000055f2ee93b8db <unavailable> + 6363

    5    libc.so.6                          0x00002b6189fae460 __libc_start_main +
    245

    6    tmpocek_66u                        0x000055f2ee93b4b9 <unavailable> + 5305

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: 0
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var counter = 0\n    for letter in s {\n        if vowels.contains(String(letter).lowercased())\
    \ {\n            counter += 1\n        }\n    }\n    if s.last == \"y\" || s.last\
    \ == \"Y\" {\n        counter += 1\n    }\n    return counter\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978565
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var result = 0\n    for char in s {\n        if is_vowel(char:\
    \ char) {\n            result += 1\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp_ylnbub6.swift:14:12: error: cannot find 'is_vowel' in scope\n\
    \        if is_vowel(char: char) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    var currentChar\
    \ = 0\n    for char in s {\n        if currentChar < s.count - 1 {\n         \
    \   if vowels.contains(char) && !vowels.contains(s[s.index(s.startIndex, offsetBy:\
    \ currentChar + 1)]) {\n                count += 1\n            }\n        } else\
    \ {\n            if vowels.contains(char) {\n                count += 1\n    \
    \        }\n        }\n        currentChar += 1\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpxy4d5k8w/tmpxy4d5k8w.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab801128c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab800e1fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab800e1f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab800e1e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxy4d5k8w                        0x00005560495df64b <unavailable> + 5707

    5    libc.so.6                          0x00002ab801314460 __libc_start_main +
    245

    6    tmpxy4d5k8w                        0x00005560495df229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     case \"y\":\n            let index = s.index(of: c)\n            if index\
    \ == s.index(before: s.endIndex) {\n                count += 1\n            }\n\
    \        default:\n            continue\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpkj0io24z/tmpkj0io24z.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2036f5fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2036c56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2036c56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2036c557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkj0io24z                        0x000055557747569b <unavailable> + 5787

    5    libc.so.6                          0x00002b203714b460 __libc_start_main +
    245

    6    tmpkj0io24z                        0x0000555577475279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if is_vowel(c:\
    \ char) {\n            count += 1\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpwwvazozi.swift:14:12: error: cannot find 'is_vowel' in scope\n\
    \        if is_vowel(c: char) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels_count = 0\n    let vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"]\n    for (index, char) in s.enumerated() {\n        if\
    \ vowels.contains(String(char)) {\n            vowels_count += 1\n        }\n\
    \    }\n    return vowels_count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmplkwqw2ud/tmplkwqw2ud.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adbfe324c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adbfe01bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adbfe01b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adbfe01a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplkwqw2ud                        0x0000562dc850b79b <unavailable> + 6043

    5    libc.so.6                          0x00002adbfe510460 __libc_start_main +
    245

    6    tmplkwqw2ud                        0x0000562dc850b379 <unavailable> + 4985

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.characters.reduce(0) { (count, char) in\n   \
    \     var c = count\n        if \"AEIOUY\".characters.contains(char) {\n     \
    \       c += 1\n        }\n        return c\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpb1p32n3p.swift:12:14: error: 'characters' is unavailable: Please\
    \ use String directly\n    return s.characters.reduce(0) { (count, char) in\n\
    \             ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpb1p32n3p.swift:14:21: error: 'characters' is unavailable: Please\
    \ use String directly\n        if \"AEIOUY\".characters.contains(char) {\n   \
    \                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n  var count = 0\n  let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n  for c in s {\n    if vowels.contains(String(c)) {\n      count +=\
    \ 1\n    }\n  }\n  if s.last! == \"y\" {\n    count += 1\n  }\n  return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpmh5q30d5/tmpmh5q30d5.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b806ccccc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b806c9c3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b806c9c3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b806c9c27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmh5q30d5                        0x000055bc17c7781b <unavailable> + 6171

    5    libc.so.6                          0x00002b806ceb8460 __libc_start_main +
    245

    6    tmpmh5q30d5                        0x000055bc17c773f9 <unavailable> + 5113

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for i in s {\n        switch i {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     case \"y\":\n            let last = s.last\n            if last == \"y\"\
    \ {\n                count += 1\n            }\n        default:\n           \
    \ continue\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpq3oqk1x2/tmpq3oqk1x2.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab712edec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab712bd5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab712bd5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab712bd47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq3oqk1x2                        0x00005624311d558b <unavailable> + 5515

    5    libc.so.6                          0x00002ab7130ca460 __libc_start_main +
    245

    6    tmpq3oqk1x2                        0x00005624311d5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for i in s {\n        if i == \"a\"\
    \ || i == \"e\" || i == \"i\" || i == \"o\" || i == \"u\" || i == \"y\" {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4b6pb7os/tmp4b6pb7os.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba14d440c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba14d137b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba14d137988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba14d1367b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4b6pb7os                        0x00005649e0fbb4bb <unavailable> + 5307

    5    libc.so.6                          0x00002ba14d62c460 __libc_start_main +
    245

    6    tmp4b6pb7os                        0x00005649e0fbb099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for letter in s {\n        if vowels.contains(letter)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpmxax2yfm/tmpmxax2yfm.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab9e3635c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab9e332cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab9e332c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab9e332b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmxax2yfm                        0x0000555a813cb76b <unavailable> + 5995

    5    libc.so.6                          0x00002ab9e3821460 __libc_start_main +
    245

    6    tmpmxax2yfm                        0x0000555a813cb349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let charcterArray = Array(s)\n    let lastCharacter = charcterArray.last\n\
    \    if lastCharacter == \"y\" {\n        let arrayWithoutLastCharcter = Array(charcterArray.dropLast())\n\
    \        let filteredArray = arrayWithoutLastCharcter.filter({vowels.contains($0)})\n\
    \        return filteredArray.count + 1\n    }\n    else {\n        let filteredArray\
    \ = charcterArray.filter({vowels.contains($0)})\n        return filteredArray.count\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"abcde\"\
    ) == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s: \"key\"\
    ) == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s: \"keY\"\
    ) == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\"\
    ) == 3)"
  status: Exception
  stderr: 'tmpj718hp4c/tmpj718hp4c.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b811ff9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b811fc96b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b811fc96988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b811fc957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj718hp4c                        0x0000556b8542d9fb <unavailable> + 6651

    5    libc.so.6                          0x00002b812018b460 __libc_start_main +
    245

    6    tmpj718hp4c                        0x0000556b8542d5d9 <unavailable> + 5593

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = Set<Character>([\"a\", \"e\", \"i\", \"o\"\
    , \"u\"])\n    let len = s.count\n    var count = 0\n    for (i, char) in s.enumerated()\
    \ {\n        if vowels.contains(char) {\n            count += 1\n            if\
    \ i == len - 1 {\n                break\n            }\n            let next =\
    \ s[s.index(s.startIndex, offsetBy: i + 1)]\n            if next == \"y\" {\n\
    \                count -= 1\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4evqwnu_/tmp4evqwnu_.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaf5ff74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaf5fc6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaf5fc6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaf5fc6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4evqwnu_                        0x000055c32ea01a2b <unavailable> + 6699

    5    libc.so.6                          0x00002aaf60160460 __libc_start_main +
    245

    6    tmp4evqwnu_                        0x000055c32ea01609 <unavailable> + 5641

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: 0
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiou\"\n    let s = s.lowercased()\n \
    \   let endIsY = s.last == \"y\"\n    var count = 0\n    for c in s {\n      \
    \  if vowels.contains(c) {\n            count += 1\n        }\n    }\n    return\
    \ count + (endIsY ? 1 : 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for letter in s {\n        if vowels.contains(String(letter).lowercased())\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp3tbl_nj4/tmp3tbl_nj4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba04f89cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba04f593b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba04f593988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba04f5927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3tbl_nj4                        0x00005620ba15c702 <unavailable> + 5890

    5    libc.so.6                          0x00002ba04fa88460 __libc_start_main +
    245

    6    tmp3tbl_nj4                        0x00005620ba15c239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n  return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp8rlpkvt_/tmp8rlpkvt_.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b90f7914c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b90f760bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b90f760b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b90f760a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8rlpkvt_                        0x000055f04352b264 <unavailable> + 4708

    5    libc.so.6                          0x00002b90f7b00460 __libc_start_main +
    245

    6    tmp8rlpkvt_                        0x000055f04352aee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp904j5i4s/tmp904j5i4s.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b85227cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85224c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85224c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85224c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp904j5i4s                        0x0000560f551d6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b85229b6460 __libc_start_main +
    245

    6    tmp904j5i4s                        0x0000560f551d5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels_str = \"aeiouy\"\n    let vowels = Set(vowels_str)\n\
    \    var count = 0\n    for character in s {\n        let char = String(character).lowercased()\n\
    \        if vowels.contains(char) {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpzett5qlm/tmpzett5qlm.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf34a00c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf346f7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf346f7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf346f67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzett5qlm                        0x00005622f321985f <unavailable> + 6239

    5    libc.so.6                          0x00002adf34bec460 __libc_start_main +
    245

    6    tmpzett5qlm                        0x00005622f32192e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // hint: Swift String has .count, .lowercased(), .uppercased()\
    \ methods.\n    // hint: use switch statement.\n    var count = 0\n    let vowels:\
    \ Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let last = s.count\
    \ - 1\n    for (index, char) in s.enumerated() {\n        switch char {\n    \
    \    case \"y\":\n            if index == last {\n                count += 1\n\
    \            }\n        case _ where vowels.contains(char):\n            count\
    \ += 1\n        default:\n            break\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpryzgeyp6/tmpryzgeyp6.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4ea8bc9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4ea88c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4ea88c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4ea88bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpryzgeyp6                        0x0000558f04b7c90b <unavailable> + 6411

    5    libc.so.6                          0x00002b4ea8db5460 __libc_start_main +
    245

    6    tmpryzgeyp6                        0x0000558f04b7c4e9 <unavailable> + 5353

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.filter({ $0 == \"a\" || $0 == \"e\" || $0 ==\
    \ \"i\" || $0 == \"o\" || $0 == \"u\" || $0 == \"y\" }).count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpms43fj_g/tmpms43fj_g.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b99fdfbdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b99fdcb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b99fdcb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b99fdcb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpms43fj_g                        0x0000559ec35ec52b <unavailable> + 5419

    5    libc.so.6                          0x00002b99fe1a9460 __libc_start_main +
    245

    6    tmpms43fj_g                        0x0000559ec35ec109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // YOUR CODE GOES HERE\n    var vowel_count = 0\n    var\
    \ chars = Array(s)\n    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var i = 0\n    while (i < chars.count) {\n        if vowels.contains(String(chars[i]))\
    \ {\n            vowel_count += 1\n        }\n        i += 1\n    }\n    return\
    \ vowel_count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4ui0mwpr/tmp4ui0mwpr.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4577bb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45778afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45778af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45778ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ui0mwpr                        0x0000557d4d80a6cb <unavailable> + 5835

    5    libc.so.6                          0x00002b4577da4460 __libc_start_main +
    245

    6    tmp4ui0mwpr                        0x0000557d4d80a2a9 <unavailable> + 4777

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var num_vowels = 0\n    for c in s {\n        if c == \"y\" && (s.lastIndex(of:\
    \ c) != s.startIndex) {\n            continue\n        }\n        if vowels.contains(c)\
    \ {\n            num_vowels += 1\n        }\n    }\n    return num_vowels\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpde3189ev/tmpde3189ev.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac2e4020c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac2e3d17b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac2e3d17988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac2e3d167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpde3189ev                        0x000055cdb421a7db <unavailable> + 6107

    5    libc.so.6                          0x00002ac2e420c460 __libc_start_main +
    245

    6    tmpde3189ev                        0x000055cdb421a3b9 <unavailable> + 5049

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.characters.filter({ contains(array: vowels, value:\
    \ $0) }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpio87ho5e.swift:12:34: error: cannot find 'contains' in scope\n\
    \    return s.characters.filter({ contains(array: vowels, value: $0) }).count\n\
    \                                 ^~~~~~~~\n/tmp/tmpio87ho5e.swift:12:50: error:\
    \ cannot find 'vowels' in scope\n    return s.characters.filter({ contains(array:\
    \ vowels, value: $0) }).count\n                                              \
    \   ^~~~~~\n"
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n  let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  var\
    \ count = 0\n  for i in 0..<s.count {\n    let index = s.index(s.startIndex, offsetBy:\
    \ i)\n    let c = String(s[index])\n    if vowels.contains(c) {\n      count +=\
    \ 1\n    }\n  }\n  if s.last == \"y\" {\n    count += 1\n  }\n  return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaswwlhyi/tmpaswwlhyi.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affb7e62c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affb7b59b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affb7b59988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affb7b587b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaswwlhyi                        0x000055e9fa9e99bb <unavailable> + 6587

    5    libc.so.6                          0x00002affb804e460 __libc_start_main +
    245

    6    tmpaswwlhyi                        0x000055e9fa9e9599 <unavailable> + 5529

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpo39p9yb1/tmpo39p9yb1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8fa3dbec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8fa3ab5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8fa3ab5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8fa3ab47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo39p9yb1                        0x00005575ce6334db <unavailable> + 5339

    5    libc.so.6                          0x00002b8fa3faa460 __libc_start_main +
    245

    6    tmpo39p9yb1                        0x00005575ce6330b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var vowelCount = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            vowelCount += 1\n        }\n    }\n    return vowelCount\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp158txwqa/tmp158txwqa.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b20d8314c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b20d800bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b20d800b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20d800a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp158txwqa                        0x0000558f940c669b <unavailable> + 5787

    5    libc.so.6                          0x00002b20d8500460 __libc_start_main +
    245

    6    tmp158txwqa                        0x0000558f940c6279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    var i\
    \ = 0\n    while i < s.count {\n        let index = s.index(s.startIndex, offsetBy:\
    \ i)\n        let c = s[index]\n        if vowels.contains(c) {\n            count\
    \ += 1\n        }\n        i += 1\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp656n2w7c/tmp656n2w7c.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b62b1fb4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b62b1cabb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b62b1cab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b62b1caa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp656n2w7c                        0x0000556ecba5258b <unavailable> + 5515

    5    libc.so.6                          0x00002b62b21a0460 __libc_start_main +
    245

    6    tmp656n2w7c                        0x0000556ecba52169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowelChars = CharacterSet(charactersIn: \"aeiou\"\
    )\n    var numVowels = 0\n    for c in s.lowercased() {\n        if vowelChars.contains(UnicodeScalar(String(c))!)\
    \ {\n            numVowels += 1\n        }\n    }\n    return numVowels\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp_e2942k4.swift:12:22: error: cannot find 'CharacterSet' in scope\n\
    \    let vowelChars = CharacterSet(charactersIn: \"aeiou\")\n                \
    \     ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let inputArray = Array(s)\n    var count = 0\n    for\
    \ i in 0..<inputArray.count {\n        if inputArray[i] == \"a\" || inputArray[i]\
    \ == \"e\" || inputArray[i] == \"i\" || inputArray[i] == \"o\" || inputArray[i]\
    \ == \"u\" {\n            count += 1\n        }\n        if inputArray[i] == \"\
    y\" && i != inputArray.count - 1 {\n            continue\n        }\n        if\
    \ inputArray[i] == \"y\" && i == inputArray.count - 1 {\n            count +=\
    \ 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp63yhzq07/tmp63yhzq07.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aab64c46c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aab6493db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aab6493d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aab6493c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp63yhzq07                        0x0000564d3299c79b <unavailable> + 6043

    5    libc.so.6                          0x00002aab64e32460 __libc_start_main +
    245

    6    tmp63yhzq07                        0x0000564d3299c379 <unavailable> + 4985

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"AEIOUY\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp9qqri20h/tmp9qqri20h.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab3ee88dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab3ee584b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab3ee584988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab3ee5837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9qqri20h                        0x00005605a13ca434 <unavailable> + 5172

    5    libc.so.6                          0x00002ab3eea79460 __libc_start_main +
    245

    6    tmp9qqri20h                        0x00005605a13ca0b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let str = s.lowercased()\n    return str.characters.reduce(0)\
    \ {\n        $0 + (vowels.contains($1) ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpsklgoavk.swift:14:16: error: 'characters' is unavailable: Please\
    \ use String directly\n    return str.characters.reduce(0) {\n               ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        for vowel in vowels {\n        \
    \    if String(char).lowercased() == vowel {\n                count += 1\n   \
    \         }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmps_f9li3j/tmps_f9li3j.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e52297c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e51f8eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e51f8e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e51f8d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps_f9li3j                        0x00005582929df822 <unavailable> + 6178

    5    libc.so.6                          0x00002b3e52483460 __libc_start_main +
    245

    6    tmps_f9li3j                        0x00005582929df359 <unavailable> + 4953

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // write your code here\n    return 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpr8e18b3z/tmpr8e18b3z.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba41cffbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba41ccf2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba41ccf2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba41ccf17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr8e18b3z                        0x00005565a104a264 <unavailable> + 4708

    5    libc.so.6                          0x00002ba41d1e7460 __libc_start_main +
    245

    6    tmpr8e18b3z                        0x00005565a1049ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // Calculate the number of vowels in s and return the\
    \ result.\n    var count = 0\n    for letter in s {\n        if letter == \"a\"\
    \ || letter == \"e\" || letter == \"i\" || letter == \"o\" || letter == \"u\"\
    \ || letter == \"y\" {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp3n0h0chx/tmp3n0h0chx.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba22e114c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba22de0bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba22de0b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba22de0a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3n0h0chx                        0x0000560b6ad0d4bb <unavailable> + 5307

    5    libc.so.6                          0x00002ba22e300460 __libc_start_main +
    245

    6    tmp3n0h0chx                        0x0000560b6ad0d099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: 0
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let endVowels: Set<Character> = [\"y\"]\n    let s = s.lowercased()\n\
    \    var count = 0\n    for (i, c) in s.enumerated() {\n        if i == s.count\
    \ - 1 && endVowels.contains(c) {\n            count += 1\n        } else if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978565
- exit_code: 0
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    let s = s.lowercased()\n    var c = 0\n    for character in s {\n\
    \        if vowels.contains(character) {\n            c += 1\n        }\n    }\n\
    \    if s.last == \"y\" {\n        c += 1\n    }\n    return c\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var counter = 0\n    for\
    \ character in s {\n        if vowels.contains(character) {\n            counter\
    \ += 1\n        }\n    }\n    return counter\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpeoun6p97/tmpeoun6p97.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeaffa34c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeaff72bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeaff72b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeaff72a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeoun6p97                        0x000055932843d4db <unavailable> + 5339

    5    libc.so.6                          0x00002aeaffc20460 __libc_start_main +
    245

    6    tmpeoun6p97                        0x000055932843d0b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n  var cnt = 0\n  for c in s {\n    if (c == \"a\" || c ==\
    \ \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"y\") {\n      cnt\
    \ += 1\n    }\n  }\n  return cnt\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp7dwe_m5m/tmp7dwe_m5m.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad2ccfd9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad2cccd0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad2cccd0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad2ccccf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7dwe_m5m                        0x00005560320aa4bb <unavailable> + 5307

    5    libc.so.6                          0x00002ad2cd1c5460 __libc_start_main +
    245

    6    tmp7dwe_m5m                        0x00005560320aa099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: 0
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let s = s.lowercased()\n    for i in\
    \ s {\n        if i == \"a\" || i == \"e\" || i == \"i\" || i == \"o\" || i ==\
    \ \"u\" {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n\
    \        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let lowerCaseS = s.lowercased()\n    var vowelCount =\
    \ 0\n    for character in lowerCaseS {\n        if character == \"a\" || character\
    \ == \"e\" || character == \"i\" || character == \"o\" || character == \"u\" {\n\
    \            vowelCount += 1\n        }\n    }\n    return vowelCount\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpx3y2fkfb/tmpx3y2fkfb.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b83e170ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b83e1405b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b83e1405988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b83e14047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx3y2fkfb                        0x000055f0aade55c2 <unavailable> + 5570

    5    libc.so.6                          0x00002b83e18fa460 __libc_start_main +
    245

    6    tmpx3y2fkfb                        0x000055f0aade50f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels_count = 0\n    for s in s {\n        if s ==\
    \ \"a\" || s == \"e\" || s == \"i\" || s == \"o\" || s == \"u\" {\n          \
    \  vowels_count += 1\n        }\n    }\n    return vowels_count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpgyzfaifu/tmpgyzfaifu.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab5a4780c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab5a4477b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab5a4477988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab5a44767b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgyzfaifu                        0x000055b73c4334bb <unavailable> + 5307

    5    libc.so.6                          0x00002ab5a496c460 __libc_start_main +
    245

    6    tmpgyzfaifu                        0x000055b73c433099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.reduce(0) { (r, c) in\n        let u = String(c).uppercased()\n\
    \        if (u == \"A\" || u == \"E\" || u == \"I\" || u == \"O\" || u == \"U\"\
    \ || (u == \"Y\" && $1 == s.endIndex)) {\n            return r + 1\n        }\n\
    \        return r\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpia6r0rr9.swift:14:86: error: anonymous closure arguments cannot\
    \ be used inside a closure that has explicit arguments; did you mean 'c'?\n  \
    \      if (u == \"A\" || u == \"E\" || u == \"I\" || u == \"O\" || u == \"U\"\
    \ || (u == \"Y\" && $1 == s.endIndex)) {\n                                   \
    \                                                  ^~\n                      \
    \                                                               c\n/tmp/tmpia6r0rr9.swift:14:89:\
    \ error: binary operator '==' cannot be applied to operands of type 'String.Element'\
    \ (aka 'Character') and 'String.Index'\n        if (u == \"A\" || u == \"E\" ||\
    \ u == \"I\" || u == \"O\" || u == \"U\" || (u == \"Y\" && $1 == s.endIndex))\
    \ {\n                                                                        \
    \             ~~ ^  ~~~~~~~~~~\n/tmp/tmpia6r0rr9.swift:14:89: note: overloads\
    \ for '==' exist with these partially matching parameter lists: (Character, Character),\
    \ (String.Index, String.Index)\n        if (u == \"A\" || u == \"E\" || u == \"\
    I\" || u == \"O\" || u == \"U\" || (u == \"Y\" && $1 == s.endIndex)) {\n     \
    \                                                                            \
    \       ^\n"
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    \n    var vowelCount = 0\n    var charsArray = Array(s)\n\
    \    \n    for c in charsArray {\n        if c == \"a\" || c == \"e\" || c ==\
    \ \"i\" || c == \"o\" || c == \"u\" || c == \"y\" {\n            vowelCount +=\
    \ 1\n        }\n    }\n    \n    if charsArray.last == \"y\" {\n        vowelCount\
    \ -= 1\n    }\n    \n    return vowelCount\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmphxy8dw8p/tmphxy8dw8p.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0c2ac6bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0c2a962b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0c2a962988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0c2a9617b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphxy8dw8p                        0x000055ac54b7576b <unavailable> + 5995

    5    libc.so.6                          0x00002b0c2ae57460 __libc_start_main +
    245

    6    tmphxy8dw8p                        0x000055ac54b75349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if is_vowel(ch:\
    \ char) {\n            count += 1\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpsamvj5yh.swift:14:12: error: cannot find 'is_vowel' in scope\n\
    \        if is_vowel(ch: char) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978564
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var n = 0\n    for c in s {\n        let s = String(c).lowercased()\n      \
    \  if vowels.contains(s) {\n            n += 1\n        }\n    }\n    return n\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpgvgow7fn/tmpgvgow7fn.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac282c0fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac282906b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac282906988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac2829057b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgvgow7fn                        0x00005603a5a78702 <unavailable> + 5890

    5    libc.so.6                          0x00002ac282dfb460 __libc_start_main +
    245

    6    tmpgvgow7fn                        0x00005603a5a78239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\", \"y\"]\n    var array = Array(s)\n    for c in array {\n     \
    \   if vowels.contains(String(c)) {\n            count += 1\n        }\n    }\n\
    \    if vowels.contains(String(array.last!)) {\n        count += 1\n    }\n  \
    \  return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpx_i86_ne/tmpx_i86_ne.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af15ec93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af15e98ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af15e98a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af15e9897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx_i86_ne                        0x000055df406b1814 <unavailable> + 6164

    5    libc.so.6                          0x00002af15ee7f460 __libc_start_main +
    245

    6    tmpx_i86_ne                        0x000055df406b1499 <unavailable> + 5273

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        if letter\
    \ == \"a\" || letter == \"e\" || letter == \"i\" || letter == \"o\" || letter\
    \ == \"u\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp6ocrphfw/tmp6ocrphfw.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2441f98c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2441c8fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2441c8f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2441c8e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ocrphfw                        0x000055e1dae874bb <unavailable> + 5307

    5    libc.so.6                          0x00002b2442184460 __libc_start_main +
    245

    6    tmp6ocrphfw                        0x000055e1dae87099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ let characters = Array(s)\n    var count = 0\n    for i in 0..<characters.count\
    \ {\n        let c = String(characters[i]).lowercased()\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpgylaqypz/tmpgylaqypz.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6db83cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6db533b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6db533988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6db5327b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgylaqypz                        0x00005589267a5c3e <unavailable> + 7230

    5    libc.so.6                          0x00002ae6dba28460 __libc_start_main +
    245

    6    tmpgylaqypz                        0x00005589267a5609 <unavailable> + 5641

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    var s_copy = s\n    for _ in 0..<s.count\
    \ {\n        let v = vowels.firstIndex(of: s_copy.first!)\n        if v != nil\
    \ {\n            count += 1\n        }\n        s_copy.removeFirst()\n    }\n\
    \    if count == 0 && s.last == \"y\" {\n        count += 1\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"abcde\"\
    ) == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s: \"key\"\
    ) == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s: \"keY\"\
    ) == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\"\
    ) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpqpb8l8om.swift:15:17: error: cannot find 'vowels' in scope\n  \
    \      let v = vowels.firstIndex(of: s_copy.first!)\n                ^~~~~~\n"
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.lowercased().filter { [\"a\", \"e\", \"i\", \"\
    o\", \"u\", \"y\"].contains($0) }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp3a0r2jbn/tmp3a0r2jbn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b65f7c7cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b65f7973b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b65f7973988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b65f79727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3a0r2jbn                        0x000055c51678f85f <unavailable> + 6239

    5    libc.so.6                          0x00002b65f7e68460 __libc_start_main +
    245

    6    tmp3a0r2jbn                        0x000055c51678f2e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp904j5i4s/tmp904j5i4s.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b85227cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85224c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85224c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85224c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp904j5i4s                        0x0000560f551d6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b85229b6460 __libc_start_main +
    245

    6    tmp904j5i4s                        0x0000560f551d5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: 0
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    var vowels_count = 0\n    let s = s.lowercased()\n\
    \    for char in s {\n        if count == s.count - 1 && char == \"y\" {\n   \
    \         vowels_count += 1\n        } else if vowels.contains(char) {\n     \
    \       vowels_count += 1\n        }\n        count += 1\n    }\n    return vowels_count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.reduce(0) { $0 + ($1 == \"a\" || $1 == \"e\"\
    \ || $1 == \"i\" || $1 == \"o\" || $1 == \"u\" || $1 == \"y\" ? 1 : 0) }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpr0oxr1qx/tmpr0oxr1qx.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b732cf1dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b732cc14b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b732cc14988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b732cc137b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0oxr1qx                        0x0000559e415544eb <unavailable> + 5355

    5    libc.so.6                          0x00002b732d109460 __libc_start_main +
    245

    6    tmpr0oxr1qx                        0x0000559e415540c9 <unavailable> + 4297

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels_lowercase = \"aeiouy\"\n    let vowels_uppercase\
    \ = \"AEIOUY\"\n    let vowels = vowels_lowercase + vowels_uppercase\n    var\
    \ vowel_count = 0\n    for char in s {\n        if vowels.contains(char) {\n \
    \           vowel_count += 1\n        }\n    }\n    return vowel_count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpzzm0c9fs/tmpzzm0c9fs.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7028164c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7027e5bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7027e5b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7027e5a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzzm0c9fs                        0x0000558c3167268f <unavailable> + 5775

    5    libc.so.6                          0x00002b7028350460 __libc_start_main +
    245

    6    tmpzzm0c9fs                        0x0000558c31672119 <unavailable> + 4377

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    var temp = s.lowercased()\n    while let first\
    \ = temp.first {\n        if vowels.contains(first) {\n            count += 1\n\
    \        }\n        temp.removeFirst()\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpcfuspoa3/tmpcfuspoa3.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab73e331c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab73e028b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab73e028988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab73e0277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcfuspoa3                        0x0000556fb571d852 <unavailable> + 6226

    5    libc.so.6                          0x00002ab73e51d460 __libc_start_main +
    245

    6    tmpcfuspoa3                        0x0000556fb571d389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    var special = false\n    for letter in s {\n\
    \        if letter == \"y\" {\n            special = true\n        } else if vowels.contains(letter)\
    \ {\n            count += 1\n        } else {\n            special = false\n \
    \       }\n    }\n    if special {\n        count += 1\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpz4jhwl9x/tmpz4jhwl9x.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba66fd2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba66fa26b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba66fa26988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba66fa257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz4jhwl9x                        0x000055c651ab46eb <unavailable> + 5867

    5    libc.so.6                          0x00002ba66ff1b460 __libc_start_main +
    245

    6    tmpz4jhwl9x                        0x000055c651ab42c9 <unavailable> + 4809

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ let characters = Array(s)\n    var total = 0\n    var i = 0\n    while i < characters.count\
    \ {\n        if characters[i] == \"y\" && i == characters.count - 1 {\n      \
    \      total += 1\n        } else if vowels.contains(String(characters[i])) {\n\
    \            total += 1\n        }\n        i += 1\n    }\n    return total\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpuxea75z6/tmpuxea75z6.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70edd98c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b70eda8fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b70eda8f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70eda8e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuxea75z6                        0x000055fc710737bb <unavailable> + 6075

    5    libc.so.6                          0x00002b70edf84460 __libc_start_main +
    245

    6    tmpuxea75z6                        0x000055fc71073399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowel_set = Set(\"aeiouy\")\n    let vowel_set_without_y\
    \ = Set(\"aeiou\")\n    let s_lowercased = s.lowercased()\n    var vowel_count\
    \ = 0\n    for char in s_lowercased {\n        if vowel_set.contains(char) {\n\
    \            vowel_count += 1\n        }\n    }\n    if vowel_set_without_y.contains(s_lowercased.last!)\
    \ {\n        vowel_count -= 1\n    }\n    return vowel_count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpz_q1_bab/tmpz_q1_bab.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aed93883c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aed9357ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aed9357a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aed935797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz_q1_bab                        0x00005648ac4c8654 <unavailable> + 5716

    5    libc.so.6                          0x00002aed93a6f460 __libc_start_main +
    245

    6    tmpz_q1_bab                        0x00005648ac4c82d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var vowelCount = 0\n    let sArr = Array(s)\n    var vowelCounted\
    \ = false\n    for letter in sArr {\n        if vowels.contains(letter) {\n  \
    \          vowelCount += 1\n            vowelCounted = true\n        } else if\
    \ vowelCounted {\n            break\n        }\n    }\n    return vowelCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp49m324x9/tmp49m324x9.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad85a6fbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad85a3f2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad85a3f2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad85a3f17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp49m324x9                        0x000055f8c5bb5784 <unavailable> + 6020

    5    libc.so.6                          0x00002ad85a8e7460 __libc_start_main +
    245

    6    tmp49m324x9                        0x000055f8c5bb5409 <unavailable> + 5129

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = \"aeiouyAEIOUY\"\n   \
    \ for c in s {\n        if vowels.contains(c) {\n            count += 1\n    \
    \    }\n    }\n    if s.hasSuffix(\"y\") {\n        count += 1\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"abcde\"\
    ) == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s: \"key\"\
    ) == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s: \"keY\"\
    ) == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\"\
    ) == 3)"
  status: Exception
  stderr: 'tmp3t24itb7/tmp3t24itb7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adbaa7a4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adbaa49bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adbaa49b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adbaa49a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3t24itb7                        0x00005623b8ac25e2 <unavailable> + 5602

    5    libc.so.6                          0x00002adbaa990460 __libc_start_main +
    245

    6    tmp3t24itb7                        0x00005623b8ac2119 <unavailable> + 4377

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for char in s {\n        if char\
    \ == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\"\
    \ {\n            vowelCount += 1\n        }\n    }\n    return vowelCount\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpb2uvkzm0/tmpb2uvkzm0.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81509a1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8150698b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8150698988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81506977b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb2uvkzm0                        0x000055ae018714bb <unavailable> + 5307

    5    libc.so.6                          0x00002b8150b8d460 __libc_start_main +
    245

    6    tmpb2uvkzm0                        0x000055ae01871099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.filter { \"AEIOUYaeiouy\".contains($0) }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpw1hs858o/tmpw1hs858o.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aae691f7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aae68eeeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aae68eee988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aae68eed7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw1hs858o                        0x0000556ca7e1366f <unavailable> + 5743

    5    libc.so.6                          0x00002aae693e3460 __libc_start_main +
    245

    6    tmpw1hs858o                        0x0000556ca7e130f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for character in s {\n        let char = String(character).lowercased()\n\
    \        if vowels.contains(char) {\n            count += 1\n        }\n    }\n\
    \    if (s.last == \"y\") {\n        count += 1\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpvyf2af8k/tmpvyf2af8k.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1281b35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b128182cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b128182c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b128182b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvyf2af8k                        0x0000562d64dc29ee <unavailable> + 6638

    5    libc.so.6                          0x00002b1281d21460 __libc_start_main +
    245

    6    tmpvyf2af8k                        0x0000562d64dc23b9 <unavailable> + 5049

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // TODO: Write vowels_count() here\n    return 0\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpbow8vmxv/tmpbow8vmxv.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b131f18ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b131ee81b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b131ee81988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b131ee807b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbow8vmxv                        0x000055ec73572264 <unavailable> + 4708

    5    libc.so.6                          0x00002b131f376460 __libc_start_main +
    245

    6    tmpbow8vmxv                        0x000055ec73571ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for i in s {\n        if i == \"a\"\
    \ || i == \"e\" || i == \"i\" || i == \"o\" || i == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.contains(\"y\") {\n        count += 1\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyjb7yj45/tmpyjb7yj45.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e4e310c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e4e007b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e4e007988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e4e0067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyjb7yj45                        0x000055cf215095cb <unavailable> + 5579

    5    libc.so.6                          0x00002b8e4e4fc460 __libc_start_main +
    245

    6    tmpyjb7yj45                        0x000055cf215091a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // TODO: Implement me\n    return 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4w1vnaqn/tmp4w1vnaqn.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acf93570c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acf93267b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acf93267988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acf932667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4w1vnaqn                        0x0000555a23144264 <unavailable> + 4708

    5    libc.so.6                          0x00002acf9375c460 __libc_start_main +
    245

    6    tmp4w1vnaqn                        0x0000555a23143ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            vowels += 1\n  \
    \      case \"y\":\n            if s.last == \"y\" {\n                vowels +=\
    \ 1\n            }\n        default:\n            break\n        }\n    }\n  \
    \  return vowels\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpf6mcthcp/tmpf6mcthcp.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b48a0366c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b48a005db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b48a005d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b48a005c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf6mcthcp                        0x000055b988c5358b <unavailable> + 5515

    5    libc.so.6                          0x00002b48a0552460 __libc_start_main +
    245

    6    tmpf6mcthcp                        0x000055b988c53169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = Set(\"aeiouAEIOUyY\")\n    return s.reduce(0)\
    \ { (count, char) -> Int in\n        return vowels.contains(char) ? count + 1\
    \ : count\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmppcvnl2dz/tmppcvnl2dz.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2ce5a0fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2ce5706b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2ce5706988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2ce57057b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppcvnl2dz                        0x0000563d474f767f <unavailable> + 5759

    5    libc.so.6                          0x00002b2ce5bfb460 __libc_start_main +
    245

    6    tmppcvnl2dz                        0x0000563d474f7109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var s = s.lowercased()\n    var count = 0\n    while !s.isEmpty\
    \ {\n        if s.hasPrefix(\"a\") || s.hasPrefix(\"e\") || s.hasPrefix(\"i\"\
    ) || s.hasPrefix(\"o\") || s.hasPrefix(\"u\") {\n            count += 1\n    \
    \    }\n        s.removeFirst()\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpatp20c8u/tmpatp20c8u.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abdfc767c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abdfc45eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abdfc45e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abdfc45d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpatp20c8u                        0x0000559aaa09c592 <unavailable> + 5522

    5    libc.so.6                          0x00002abdfc953460 __libc_start_main +
    245

    6    tmpatp20c8u                        0x0000559aaa09c0c9 <unavailable> + 4297

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    var vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    let array = Array(s)\n    for char in array\
    \ {\n        if vowels.contains(char) {\n            count += 1\n        }\n \
    \   }\n    if array.last == \"y\" {\n        count += 1\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpvz76jc1f/tmpvz76jc1f.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef28e93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef28b8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef28b8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef28b897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvz76jc1f                        0x0000559aa7ee791b <unavailable> + 6427

    5    libc.so.6                          0x00002aef2907f460 __libc_start_main +
    245

    6    tmpvz76jc1f                        0x0000559aa7ee74f9 <unavailable> + 5369

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiou\"\n    let letterArray = Array(s)\n\
    \    var cnt = 0\n    for l in letterArray {\n        if l == \"y\" && l == letterArray.last\
    \ {\n            cnt += 1\n        } else if vowels.contains(l) {\n          \
    \  cnt += 1\n        }\n    }\n    return cnt\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyp0u19lv/tmpyp0u19lv.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002baaa1111c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002baaa0e08b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002baaa0e08988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002baaa0e077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyp0u19lv                        0x000055c8ce22580b <unavailable> + 6155

    5    libc.so.6                          0x00002baaa12fd460 __libc_start_main +
    245

    6    tmpyp0u19lv                        0x000055c8ce2253e9 <unavailable> + 5097

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.reduce(0) {\n        $1 == \"a\" || $1 == \"\
    e\" || $1 == \"i\" || $1 == \"o\" || $1 == \"u\" || ($1 == \"y\" && $0 == s.count\
    \ - 1) ? $0 + 1 : $0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpmwhkqewk/tmpmwhkqewk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad8e8f92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad8e8c89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad8e8c89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8e8c887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmwhkqewk                        0x0000555f7462153b <unavailable> + 5435

    5    libc.so.6                          0x00002ad8e917e460 __libc_start_main +
    245

    6    tmpmwhkqewk                        0x0000555f74621119 <unavailable> + 4377

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = Set(\"aeiouy\")\n    var count = 0\n    for\
    \ c in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4ciypenu/tmp4ciypenu.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab067604c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0672fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0672fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0672fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ciypenu                        0x00005626e6f2656b <unavailable> + 5483

    5    libc.so.6                          0x00002ab0677f0460 __libc_start_main +
    245

    6    tmp4ciypenu                        0x00005626e6f26149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    var endOfWord = false\n    for\
    \ c in s {\n        if \"aeiouy\".contains(c) {\n            vowelCount += 1\n\
    \        }\n        if c == \"y\" {\n            endOfWord = true\n        } else\
    \ {\n            endOfWord = false\n        }\n    }\n    if endOfWord {\n   \
    \     vowelCount += 1\n    }\n    return vowelCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp11pw3j8f/tmp11pw3j8f.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af349958c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af34964fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af34964f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af34964e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp11pw3j8f                        0x0000560ca206d5cb <unavailable> + 5579

    5    libc.so.6                          0x00002af349b44460 __libc_start_main +
    245

    6    tmp11pw3j8f                        0x0000560ca206d1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    // Fill in this function.\n    var count = 0\n    for\
    \ char in s {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char\
    \ == \"o\" || char == \"u\" {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"abcde\"\
    ) == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s: \"key\"\
    ) == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s: \"keY\"\
    ) == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\"\
    ) == 3)"
  status: Exception
  stderr: 'tmpl3mp_s1a/tmpl3mp_s1a.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae90bde0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae90bad7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae90bad7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae90bad67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl3mp_s1a                        0x000055d75e6194bb <unavailable> + 5307

    5    libc.so.6                          0x00002ae90bfcc460 __libc_start_main +
    245

    6    tmpl3mp_s1a                        0x000055d75e619099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    let vowelsSet = Set(vowels)\n    let word = s.lowercased()\n   \
    \ var vowelCount = 0\n    for (index,char) in word.enumerated() {\n        if\
    \ vowelsSet.contains(char) {\n            vowelCount += 1\n            if index\
    \ < word.count - 1 && char == \"y\" {\n                vowelCount -= 1\n     \
    \       }\n        }\n    }\n    return vowelCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp9pk5m89k/tmp9pk5m89k.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b80be3afc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b80be0a6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b80be0a6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b80be0a57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9pk5m89k                        0x0000563ad62bfa12 <unavailable> + 6674

    5    libc.so.6                          0x00002b80be59b460 __libc_start_main +
    245

    6    tmp9pk5m89k                        0x0000563ad62bf549 <unavailable> + 5449

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.filter({ $0 == \"a\" || $0 == \"e\" || $0 ==\
    \ \"i\" || $0 == \"o\" || $0 == \"u\" || $0 == \"y\" }).count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpms43fj_g/tmpms43fj_g.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b99fdfbdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b99fdcb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b99fdcb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b99fdcb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpms43fj_g                        0x0000559ec35ec52b <unavailable> + 5419

    5    libc.so.6                          0x00002b99fe1a9460 __libc_start_main +
    245

    6    tmpms43fj_g                        0x0000559ec35ec109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659978565
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var result = 0\n    for i in s {\n        if vowels.contains(String(i)) {\n\
    \            result += 1\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpqkpen4vf/tmpqkpen4vf.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aec4f689c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aec4f380b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aec4f380988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aec4f37f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqkpen4vf                        0x0000555f934f15fb <unavailable> + 5627

    5    libc.so.6                          0x00002aec4f875460 __libc_start_main +
    245

    6    tmpqkpen4vf                        0x0000555f934f11d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = Array(\"aeiouy\")\n    var count = 0\n  \
    \  for character in s {\n        if character.lowercased() == \"y\" && s.lastIndex(of:\
    \ character) == s.endIndex {\n            break\n        }\n        if vowels.contains(character.lowercased())\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp64kt4fk8/tmp64kt4fk8.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b53081c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b52d78b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b52d78988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b52d777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp64kt4fk8                        0x000056288e22c92f <unavailable> + 6447

    5    libc.so.6                          0x00002b9b5326d460 __libc_start_main +
    245

    6    tmp64kt4fk8                        0x000056288e22c3b9 <unavailable> + 5049

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n  var vowelCount = 0\n  for c in s {\n    if c == \"a\" ||\
    \ c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n      vowelCount +=\
    \ 1\n    }\n  }\n  return vowelCount\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp8e28zsie/tmp8e28zsie.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bec0a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bebd9db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bebd9d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bebd9c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8e28zsie                        0x0000560c3e8694bb <unavailable> + 5307

    5    libc.so.6                          0x00002b3bec292460 __libc_start_main +
    245

    6    tmp8e28zsie                        0x0000560c3e869099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = Array(\"aeiou\")\n    let sArr = Array(s)\n\
    \    return sArr.reduce(0) { count, c in\n        if vowels.contains(c) {\n  \
    \          return count + 1\n        }\n        return count\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpxvutxy49/tmpxvutxy49.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8cd18a4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8cd159bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8cd159b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8cd159a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxvutxy49                        0x000055f94b00258b <unavailable> + 5515

    5    libc.so.6                          0x00002b8cd1a90460 __libc_start_main +
    245

    6    tmpxvutxy49                        0x000055f94b002169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpiymjqqvw/tmpiymjqqvw.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad59449fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad594196b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad594196988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad5941957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiymjqqvw                        0x000055bbfcd264bb <unavailable> + 5307

    5    libc.so.6                          0x00002ad59468b460 __libc_start_main +
    245

    6    tmpiymjqqvw                        0x000055bbfcd26099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ let chars = Array(s)\n    var count = 0\n    for i in 0..<chars.count {\n  \
    \      if (vowels.contains(String(chars[i]))) {\n            count += 1\n    \
    \    }\n    }\n    let ys = chars.filter { $0 == \"y\" }\n    return count + ys.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpe6ek4lxn/tmpe6ek4lxn.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a139e0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a136d7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a136d7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a136d67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe6ek4lxn                        0x000055fd95a5ea0b <unavailable> + 6667

    5    libc.so.6                          0x00002b3a13bcc460 __libc_start_main +
    245

    6    tmpe6ek4lxn                        0x000055fd95a5e5e9 <unavailable> + 5609

    '
  stdout: ''
  timestamp: 1659978566

name: HumanEval_35_max_element
language: swift
prompt: "\n/// Return maximum element in the array.\n/// >>> max_element(l: [1, 2,\
  \ 3])\n/// 3\n/// >>> max_element(l: [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
  /// 123\nfunc max_element(l: [Int]) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(max_element(l: [1, 2, 3]) == 3)\nassert(max_element(l:\
  \ [5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)"
completions: ["    var max: Int = l[0]\n    for i in l {\n        if i > max {\n \
    \           max = i\n        }\n    }\n    return max", "    var max = l[0]\n\
    \    for e in l {\n        if e > max {\n            max = e\n        }\n    }\n\
    \    return max", "    var max: Int = l[0]\n    for i in 1..<l.count {\n     \
    \   if l[i] > max {\n            max = l[i]\n        }\n    }\n    return max",
  "    var max: Int = l[0]\n    for e in l {\n        if e > max {\n            max\
    \ = e\n        }\n    }\n    return max", "    var max = l[0]\n    for x in l\
    \ {\n        if x > max {\n            max = x\n        }\n    }\n    return max",
  "    var max: Int = l[0]\n    for item in l {\n        if item > max {\n       \
    \     max = item\n        }\n    }\n    return max", "    var max = l[0]\n   \
    \ for x in l {\n        if x > max {\n            max = x\n        }\n    }\n\
    \    return max", "    var n = l[0]\n    for i in 1..<l.count {\n        if l[i]\
    \ > n {\n            n = l[i]\n        }\n    }\n    return n", "  var max = l[0]\n\
    \  for i in l {\n    if i > max {\n      max = i\n    }\n  }\n  return max", " \
    \   var result = l[0]\n    for v in l {\n        if v > result {\n           \
    \ result = v\n        }\n    }\n    return result", '    return l.max()!', " \
    \   var max = l[0]\n    for x in l {\n        if x > max {\n            max =\
    \ x\n        }\n    }\n    return max", "    var result = l[0]\n    for element\
    \ in l {\n        if result < element {\n            result = element\n      \
    \  }\n    }\n    return result", "    var max = l[0]\n    for i in 1..<l.count\
    \ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", '    return l.reduce(l[0], { max($0, $1) })', '    return l.reduce(Int.min,
    max)', "    // TODO: Implement max_element\n    return 0", '    return l.reduce(l[0],
    combine: { max($0, $1) })', "    var m = l[0]\n    for e in l {\n        if e\
    \ > m {\n            m = e\n        }\n    }\n    return m", '    return l.reduce(l[0],
    { max($0, $1) })', "    var max = l[0]\n    for i in l {\n        if i > max {\n\
    \            max = i\n        }\n    }\n    return max", "    assert(l.count >\
    \ 0)\n    var m = l[0]\n    for i in 1..<l.count {\n        if l[i] > m {\n  \
    \          m = l[i]\n        }\n    }\n    return m", '    return l.max()!', " \
    \   var max = l[0]\n    for e in l {\n        if max < e {\n            max =\
    \ e\n        }\n    }\n    return max", '    return 0', "    if l.count == 0 {\n\
    \        return 0\n    }\n    if l.count == 1 {\n        return l[0]\n    }\n\
    \    var max = l[0]\n    for element in l {\n        if element > max {\n    \
    \        max = element\n        }\n    }\n    return max", "    var max = l[0]\n\
    \    for i in l {\n        if i > max {\n            max = i\n        }\n    }\n\
    \    return max", "    var max = l[0]\n    for n in l {\n        if max < n {\n\
    \            max = n\n        }\n    }\n    return max", '    return l.max()!',
  "    if (l.count == 0) {\n        return 0\n    }\n    var max = l[0]\n    for i\
    \ in l {\n        if i > max {\n            max = i\n        }\n    }\n    return\
    \ max", "    var max = l[0]\n    for i in l {\n        if i > max {\n        \
    \    max = i\n        }\n    }\n    return max", "    var cur_max = l[0]\n   \
    \ for i in 1..<l.count {\n        if l[i] > cur_max {\n            cur_max = l[i]\n\
    \        }\n    }\n    return cur_max", "    var max: Int = l[0]\n    for num\
    \ in l {\n        if max < num {\n            max = num\n        }\n    }\n  \
    \  return max", "    var max = l[0]\n    for i in 1..<l.count {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    return max", "    var\
    \ max = l[0]\n    for e in l {\n        if max < e {\n            max = e\n  \
    \      }\n    }\n    return max", "    var max = l[0]\n    for val in l {\n  \
    \      if val > max {\n            max = val\n        }\n    }\n    return max",
  '    return l.max()!', "    var max = l[0]\n    for i in l {\n        if i > max\
    \ {\n            max = i\n        }\n    }\n    return max", "    var max: Int\
    \ = l[0]\n    for i in l {\n        if i > max {\n            max = i\n      \
    \  }\n    }\n    return max", "    var max = l[0]\n    for x in l {\n        if\
    \ x > max {\n            max = x\n        }\n    }\n    return max", "    var\
    \ m = l[0]\n    for i in l {\n        if i > m {\n            m = i\n        }\n\
    \    }\n    return m", '    return l.max()!', "    var max = l[0]\n    for e in\
    \ l {\n        if max < e {\n            max = e\n        }\n    }\n    return\
    \ max", "    var res = l[0]\n    for i in 1..<l.count {\n        if l[i] > res\
    \ {\n            res = l[i]\n        }\n    }\n    return res", '    return reduce(l,
    minElement(l), { x, y in max(x, y) })', '    return l.max()!', '    return max_element(l:
    l, right: l.count - 1)', "    var m = l[0]\n    for i in l {\n        if m < i\
    \ {\n            m = i\n        }\n    }\n    return m", "    var max = l[0]\n\
    \    for i in l {\n        if i > max {\n            max = i\n        }\n    }\n\
    \    return max", "  var maximum = l[0]\n  for i in 1..<l.count {\n    if l[i]\
    \ > maximum {\n      maximum = l[i]\n    }\n  }\n  return maximum", "    if l.count\
    \ == 0 {\n        print(\"Error: empty array.\")\n        return 0\n    }\n  \
    \  var result = l[0]\n    for i in 1..<l.count {\n        if l[i] > result {\n\
    \            result = l[i]\n        }\n    }\n    return result", "    var m =\
    \ l[0]\n    for element in l {\n        if m < element {\n            m = element\n\
    \        }\n    }\n    return m", "    var max: Int = l[0]\n    for i in l {\n\
    \        if i > max {\n            max = i\n        }\n    }\n    return max",
  '    return l.max()!', "    var max = l[0]\n    for i in l {\n        if i > max\
    \ {\n            max = i\n        }\n    }\n    return max", "  var i = 1\n  var\
    \ max = l[0]\n  while i < l.count {\n    max = max(max, l[i])\n    i += 1\n  }\n\
    \  return max", "  var max = l[0]\n  for i in l {\n    if i > max {\n      max\
    \ = i\n    }\n  }\n  return max", "  if l.count == 0 {\n    return Int.min\n \
    \ }\n  return max_element(l: l, idx: 0, max: l[0])", "    var m = l[0]\n    for\
    \ x in l {\n        if m < x {\n            m = x\n        }\n    }\n    return\
    \ m", '    return l.max()!', "    var max = Int.min\n    for x in l {\n      \
    \  if x > max {\n            max = x\n        }\n    }\n    return max", "   \
    \ var max: Int = 0\n    if l.count > 0 {\n        max = l[0]\n        for i in\
    \ l {\n            if i > max {\n                max = i\n            }\n    \
    \    }\n    }\n    return max", '    return l.max()!', "    var max = l[0]\n \
    \   for i in l {\n        if i > max {\n            max = i\n        }\n    }\n\
    \    return max", "    var max = l[0]\n    for i in 1..<l.count {\n        if\
    \ max < l[i] {\n            max = l[i]\n        }\n    }\n    return max", '    return
    0', "    var m = Int.min\n    for i in l {\n        if i > m {\n            m\
    \ = i\n        }\n    }\n    return m", '    return l.reduce(Int.min, max)', " \
    \   if l.count == 0 {\n        return Int.min\n    }\n    return l.reduce(l[0])\
    \ { max($0, $1) }", "  var max: Int = l[0]\n  for x in l {\n    if x > max {\n\
    \      max = x\n    }\n  }\n  return max", "    var max = l[0]\n    for i in 1..<l.count\
    \ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", '    return reduce(l, l[0], {max($0, $1)})', "    assert(l.count > 0)\n\
    \    var m = l[0]\n    for i in 1..<l.count {\n        if l[i] > m {\n       \
    \     m = l[i]\n        }\n    }\n    return m", "  var max = l[0]\n  for num\
    \ in l {\n    if num > max {\n      max = num\n    }\n  }\n  return max", "  \
    \  var max = l[0]\n    for i in 1..<l.count {\n        if l[i] > max {\n     \
    \       max = l[i]\n        }\n    }\n    return max", '    return l.reduce(Int.min,
    max)', "    var max = l[0]\n    for i in 1..<l.count {\n        if max < l[i]\
    \ {\n            max = l[i]\n        }\n    }\n    return max", "    assert(l.count\
    \ != 0)\n    var max_elem = l[0]\n    for e in l {\n        if max_elem < e {\n\
    \            max_elem = e\n        }\n    }\n    return max_elem", "    var max\
    \ = l[0]\n    for item in l {\n        if max < item {\n            max = item\n\
    \        }\n    }\n    return max", "    var max = l[0]\n    for x in l {\n  \
    \      if x > max {\n            max = x\n        }\n    }\n    return max", " \
    \   var max = l[0]\n    for e in l {\n        if e > max {\n            max =\
    \ e\n        }\n    }\n    return max", "    var max = l[0]\n    for i in l {\n\
    \        if i > max {\n            max = i\n        }\n    }\n    return max",
  "    // Put code here\n    var max : Int = l[0]\n    for i in l {\n        if max\
    \ < i {\n            max = i\n        }\n    }\n    return max", "    var result\
    \ = l[0]\n    for i in l {\n        if i > result {\n            result = i\n\
    \        }\n    }\n    return result", "    var maxValue = Int.min\n    for i\
    \ in l {\n        if i > maxValue {\n            maxValue = i\n        }\n   \
    \ }\n    return maxValue", "    var max = l[0]\n    for i in l {\n        if max\
    \ < i {\n            max = i\n        }\n    }\n    return max", "    var max\
    \ = l[0]\n    for item in l {\n        if item > max {\n            max = item\n\
    \        }\n    }\n    return max", "    if l.count == 0 {\n        return 0\n\
    \    }\n    var max = l[0]\n    for i in 1..<l.count {\n        if l[i] > max\
    \ {\n            max = l[i]\n        }\n    }\n    return max", "    if l.count\
    \ == 0 {\n        return 0\n    }\n    var m = l[0]\n    for i in 1..<l.count\
    \ {\n        if l[i] > m {\n            m = l[i]\n        }\n    }\n    return\
    \ m", "    if l.count == 0 {\n        return 0\n    }\n    var max = l[0]\n  \
    \  for i in 1..<l.count {\n        if l[i] > max {\n            max = l[i]\n \
    \       }\n    }\n    return max", "    var result = l[0]\n    for i in 1 ..<\
    \ l.count {\n        if l[i] > result {\n            result = l[i]\n        }\n\
    \    }\n    return result", '    return l.max()!', "    var max = l[0]\n    for\
    \ e in l {\n        if max < e {\n            max = e\n        }\n    }\n    return\
    \ max", "    var max = l[0]\n    for i in 1..<l.count {\n        if l[i] > max\
    \ {\n            max = l[i]\n        }\n    }\n    return max", "    // TODO\n\
    \    return 0", "    if l.count == 0 {\n        return 0\n    }\n    return l.reduce(l[0])\
    \ { (max, item) in\n        return max > item ? max : item\n    }", "    var maximum\
    \ = l[0]\n    for i in 1..<l.count {\n        if maximum < l[i] {\n          \
    \  maximum = l[i]\n        }\n    }\n    return maximum", "    var max: Int =\
    \ l[0]\n    for i in 1..<l.count {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", "  var max = l[0]\n  for element in\
    \ l {\n    if element > max {\n      max = element\n    }\n  }\n  return max",
  "    // TODO\n    var max = 0\n    for n in l {\n        if n > max {\n        \
    \    max = n\n        }\n    }\n    return max", '    return _max_element(l, l.count)',
  '  return reduce(l, start: l[0], f: {x, y in max(x, y)})', '    return l.max()!',
  "    var max = l[0]\n    for i in 1..<l.count {\n        if max < l[i] {\n     \
    \       max = l[i]\n        }\n    }\n    return max", '    return 0', "    var\
    \ max = l[0]\n    for x in l {\n        if x > max {\n            max = x\n  \
    \      }\n    }\n    return max", "    var m = l[0]\n    for a in l {\n      \
    \  if a > m {\n            m = a\n        }\n    }\n    return m", "    var m\
    \ = l[0]\n    for x in l {\n        if x > m {\n            m = x\n        }\n\
    \    }\n    return m", "    var max_el = l[0]\n    for i in l {\n        if i\
    \ > max_el {\n            max_el = i\n        }\n    }\n    return max_el", " \
    \   var max = l[0]\n    for i in l {\n        if max < i {\n            max =\
    \ i\n        }\n    }\n    return max", "    var max = l[0]\n    for element in\
    \ l {\n        if element > max {\n            max = element\n        }\n    }\n\
    \    return max", '  return l.max()!', "    var max = l[0]\n    for elem in l\
    \ {\n        if elem > max {\n            max = elem\n        }\n    }\n    return\
    \ max", "    var max: Int = 0\n    for i in l {\n        if i > max {\n      \
    \      max = i\n        }\n    }\n    return max", "    assert(l.count > 0)\n\
    \    return l.reduce(l[0], { max($0, $1) })", "    var max = l[0]\n    for e in\
    \ l {\n        if e > max {\n            max = e\n        }\n    }\n    return\
    \ max", "    var max = l[0]\n    for i in 1..<l.count {\n        if l[i] > max\
    \ {\n            max = l[i]\n        }\n    }\n    return max", "    var max =\
    \ l[0]\n    for i in 1..<l.count {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max", "    assert(l.count > 0)\n    var max:\
    \ Int = l[0]\n    for i in 1..<l.count {\n        if l[i] > max {\n          \
    \  max = l[i]\n        }\n    }\n    return max", '    return l.reduce(l[0], combine:
    { max($0, $1) })', "    var max = l[0]\n    for item in l {\n        if item >\
    \ max {\n            max = item\n        }\n    }\n    return max", "    var max\
    \ = l[0]\n    for i in l {\n        if i > max {\n            max = i\n      \
    \  }\n    }\n    return max", "    var maxElement = Int.min\n    for element in\
    \ l {\n        if maxElement < element {\n            maxElement = element\n \
    \       }\n    }\n    return maxElement", "    guard !l.isEmpty else { return\
    \ 0 }\n    var max_elem = l[0]\n    for elem in l {\n        if elem > max_elem\
    \ {\n            max_elem = elem\n        }\n    }\n    return max_elem", '  return
    0', "    var temp = l[0]\n    for item in l {\n        if item > temp {\n    \
    \        temp = item\n        }\n    }\n    return temp", "    // TODO: implement\
    \ here\n    return 0", "    if let m = l.max() {\n        return m\n    }\n  \
    \  return 0", "    var max_element = l[0]\n    for element in l {\n        if\
    \ element > max_element {\n            max_element = element\n        }\n    }\n\
    \    return max_element", "    var max = l[0]\n    for element in l {\n      \
    \  if element > max {\n            max = element\n        }\n    }\n    return\
    \ max", '    return l.max()!', "    var max = l[0]\n    for i in l {\n       \
    \ if i > max {\n            max = i\n        }\n    }\n    return max", "    var\
    \ max_element = l[0]\n    for x in l {\n        if x > max_element {\n       \
    \     max_element = x\n        }\n    }\n    return max_element", '    return
    l.reduce(l[0], { $0 > $1 ? $0 : $1 })', "    assert(l.count > 0)\n    var max\
    \ = l[0]\n    for i in l {\n        if i > max {\n            max = i\n      \
    \  }\n    }\n    return max", "  var max = l[0]\n  for num in l {\n    if num\
    \ > max {\n      max = num\n    }\n  }\n  return max", "    assert(l.count > 0)\n\
    \    var max = l[0]\n    for i in 1..<l.count {\n        if l[i] > max {\n   \
    \         max = l[i]\n        }\n    }\n    return max", "    var max = l[0]\n\
    \    for val in l {\n        if val > max {\n            max = val\n        }\n\
    \    }\n    return max", "    var max = l[0]\n    for item in l {\n        if\
    \ item > max {\n            max = item\n        }\n    }\n    return max", " \
    \   var max = l[0]\n    for e in l {\n        if e > max {\n            max =\
    \ e\n        }\n    }\n    return max", "    if l.count == 0 {\n        return\
    \ 0\n    }\n    var max = l[0]\n    for i in l {\n        if i > max {\n     \
    \       max = i\n        }\n    }\n    return max", "    var max = l[0]\n    for\
    \ i in l {\n        if i > max {\n            max = i\n        }\n    }\n    return\
    \ max", "    var result = Int.min\n    for item in l {\n        if item > result\
    \ {\n            result = item\n        }\n    }\n    return result", "    var\
    \ max = l[0]\n    for i in 1..<l.count {\n        if max < l[i] {\n          \
    \  max = l[i]\n        }\n    }\n    return max", "    var max = l[0]\n    for\
    \ e in l {\n        if max < e {\n            max = e\n        }\n    }\n    return\
    \ max", "    var max = l[0]\n    for i in 1..<l.count {\n        if l[i] > max\
    \ {\n            max = l[i]\n        }\n    }\n    return max", "  var m = l[0]\n\
    \  for i in 1..<l.count {\n    if m < l[i] {\n      m = l[i]\n    }\n  }\n  return\
    \ m", "    var max = l[0]\n    for i in 1..<l.count {\n        if max < l[i] {\n\
    \            max = l[i]\n        }\n    }\n    return max", "    guard l.count\
    \ > 0 else { return 0 }\n    var num = l[0]\n    for value in l {\n        if\
    \ value > num {\n            num = value\n        }\n    }\n    return num", " \
    \   var m = l[0]\n    for e in l {\n        if e > m {\n            m = e\n  \
    \      }\n    }\n    return m", "    guard l.count > 0 else {\n        print(\"\
    Error: empty list\")\n        return -1\n    }\n    var max = l[0]\n    for num\
    \ in l {\n        if num > max {\n            max = num\n        }\n    }\n  \
    \  return max", '    return l.reduce(Int.min, max)', "    var max = l[0]\n   \
    \ for e in l {\n        if e > max {\n            max = e\n        }\n    }\n\
    \    return max", "    if l.count == 0 {\n        return nil\n    }\n    var maximum\
    \ = l[0]\n    for i in 1..<l.count {\n        if l[i] > maximum {\n          \
    \  maximum = l[i]\n        }\n    }\n    return maximum", "    var res = l[0]\n\
    \    for i in l {\n        if res < i {\n            res = i\n        }\n    }\n\
    \    return res", "    var max = l[0]\n    for el in l {\n        if el > max\
    \ {\n            max = el\n        }\n    }\n    return max", '    return max_element(l:
    l, lo: 0, hi: l.count - 1)', "    var max = l[0]\n    for elem in l {\n      \
    \  if elem > max {\n            max = elem\n        }\n    }\n    return max",
  "    var m = l[0]\n    for e in l {\n        if e > m {\n            m = e\n   \
    \     }\n    }\n    return m", "  var max = l[0]\n  for i in 1..<l.count {\n \
    \   if l[i] > max {\n      max = l[i]\n    }\n  }\n  return max", "  var maximum:\
    \ Int = l[0]\n  for i in l {\n    if i > maximum {\n      maximum = i\n    }\n\
    \  }\n  return maximum", '    return l.max()!', '    return l.reduce(l[0], combine:
    {max($0, $1)})', '    return l.reduce(Int.min, {$0 > $1 ? $0 : $1})', "    var\
    \ max_value = l[0]\n    for i in 1..<l.count {\n        if l[i] > max_value {\n\
    \            max_value = l[i]\n        }\n    }\n    return max_value", '    return
    max_element(l: l, start: 0, end: l.count - 1)', "    var max = l[0]\n    for i\
    \ in l {\n        if i > max {\n            max = i\n        }\n    }\n    return\
    \ max", '    return l.max()!', "    var max = l[0]\n    for i in l {\n       \
    \ if max < i {\n            max = i\n        }\n    }\n    return max", "    var\
    \ max: Int = l[0]\n    for n in l {\n        if max < n {\n            max = n\n\
    \        }\n    }\n    return max", "    var result = l[0]\n    for i in 1..<l.count\
    \ {\n        if l[i] > result {\n            result = l[i]\n        }\n    }\n\
    \    return result", '    return l.max()!', "    var max = Int.min\n    for i\
    \ in l {\n        if i > max {\n            max = i\n        }\n    }\n    return\
    \ max", "    if l.count == 0 {\n        print(\"The array is empty\")\n      \
    \  return 0\n    }\n    var max_elem = l[0]\n    for elem in l {\n        if elem\
    \ > max_elem {\n            max_elem = elem\n        }\n    }\n    return max_elem",
  '    return l.reduce(l[0], { max($0, $1) })', "    if let f = l.first {\n      \
    \  return l.reduce(f) { $0 > $1 ? $0 : $1 }\n    }\n    return 0", "    var max\
    \ = l[0]\n    for i in l {\n        if i > max {\n            max = i\n      \
    \  }\n    }\n    return max", "    var max = l[0]\n    for i in 1..<l.count {\n\
    \        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", "    var max: Int = l[0]\n    for i in 1..<l.count {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    return max", "    var\
    \ max = l[0]\n    for i in 1..<l.count {\n        if l[i] > max {\n          \
    \  max = l[i]\n        }\n    }\n    return max", '    return reduce(l, l[0],
    { max($0, $1) })', "    var maxValue = l[0]\n    for i in 1..<l.count {\n    \
    \    if maxValue < l[i] {\n            maxValue = l[i]\n        }\n    }\n   \
    \ return maxValue", "  if l.count == 0 {\n    return Int.min\n  }\n\n  return\
    \ l.reduce(Int.min) { (x, y) in\n    max(x, y)\n  }", "    var max = l[0]\n  \
    \  for i in l {\n        if i > max {\n            max = i\n        }\n    }\n\
    \    return max", "    if l.count == 0 {\n        return 0\n    }\n    var m =\
    \ l[0]\n    for i in l {\n        if i > m {\n            m = i\n        }\n \
    \   }\n    return m", "    var m = Int.min\n    for x in l {\n        if x > m\
    \ {\n            m = x\n        }\n    }\n    return m", "    if l.count < 1 {\n\
    \        return 0\n    }\n    var max = l[0]\n    for i in 1..<l.count {\n   \
    \     if l[i] > max {\n            max = l[i]\n        }\n    }\n    return max",
  '    return max(l, by: { $0 < $1 }) ?? 0', "    var m: Int = l[0]\n    for i in\
    \ l {\n        if i > m {\n            m = i\n        }\n    }\n    return m",
  '    return 0', "    var max = l[0]\n    for n in l {\n        if n > max {\n  \
    \          max = n\n        }\n    }\n    return max", '    return l.max()!',
  '    return reduce(l, l[0], {max($0, $1)})', "    var res = l[0]\n    for element\
    \ in l {\n        if res < element {\n            res = element\n        }\n \
    \   }\n    return res", "    var maxElement = l[0]\n    for i in l {\n       \
    \ if maxElement < i {\n            maxElement = i\n        }\n    }\n    return\
    \ maxElement", "    if (l.count == 0) {\n        return 0\n    }\n    var max\
    \ = l[0]\n    for e in l {\n        if (e > max) {\n            max = e\n    \
    \    }\n    }\n    return max", "    var max = l[0]\n    for i in 1..<l.count\
    \ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", "    var arr = l\n    var max: Int = arr[0]\n    var i: Int = 0\n    while\
    \ i < arr.count {\n        if arr[i] > max {\n            max = arr[i]\n     \
    \   }\n        i += 1\n    }\n    return max", '    return l.reduce(l[0], combine:
    {max($0, $1)})', "    if l.count == 0 {\n        return Int.min\n    }\n    var\
    \ largest = l[0]\n    for i in l {\n        if i > largest {\n            largest\
    \ = i\n        }\n    }\n    return largest"]
stop_tokens:
- "\n}"

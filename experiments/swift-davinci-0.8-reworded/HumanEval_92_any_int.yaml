name: HumanEval_92_any_int
language: swift
prompt: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one of\
  \ the numbers is equal to the sum of the other two, and all numbers are integers.\n\
  /// Returns false in any other cases.\n/// Examples\n/// >>> any_int(x: 5, y: 2,\
  \ z: 7)\n/// true\n/// >>> any_int(x: 3, y: 2, z: 2)\n/// false\n/// >>> any_int(x:\
  \ 3, y: -2, z: 1)\n/// true\n/// >>> any_int(x: 3.6, y: -2.2, z: 2)\n/// false\n\
  func any_int(x: Double, y: Double, z: Double) -> Bool {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
  \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
  \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
  \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x:\
  \ 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x:\
  \ 3.0, y: 4, z: 7) == false)"
completions: ['    return Int(x) + Int(y) == Int(z) || Int(x) + Int(z) == Int(y) ||
    Int(y) + Int(z) == Int(x)', "    if (x.truncatingRemainder(dividingBy: 1) == 0\
    \ && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        return (x == y + z || y == x + z || z == x + y)\n    }\n\
    \    return false", '    return ((x == y + z) || (y == x + z) || (z == x + y))
    && (floor(x) == x) && (floor(y) == y) && (floor(z) == z)', "    let (x, y, z)\
    \ = (Int(x), Int(y), Int(z))\n    return x + y == z || x + z == y || y + z ==\
    \ x", '    return ((x == y + z) || (y == x + z) || (z == x + y)) && (x.truncatingRemainder(dividingBy:
    1) == 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:
    1) == 0)', '    return true', "    if  !(x - Double(Int(x))).isZero && !(y - Double(Int(y))).isZero\
    \ && !(z - Double(Int(z))).isZero{\n        return false\n    }\n    return (x\
    \ + y == z) || (x + z == y) || (y + z == x)", '    return (Int(x) + Int(y) ==
    Int(z)) || (Int(x) + Int(z) == Int(y)) || (Int(y) + Int(z) == Int(x))', "    if\
    \ (Double(Int(x)) == x && Double(Int(y)) == y && Double(Int(z)) == z) {\n    \
    \    if (x + y == z || x + z == y || y + z == x) {\n            return true\n\
    \        }\n    }\n    return false", "    let sum = x + y + z\n    return ((floor(x)\
    \ == x) && (floor(y) == y) && (floor(z) == z))\n        && ((x == sum - y - z)\
    \ || (y == sum - x - z) || (z == sum - x - y))", '    return x + y == z || x +
    z == y || y + z == x', "    let summ: Double = x + y + z\n    if (summ).truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        return true\n    } else {\n        return false\n    }",
  "  if x.truncatingRemainder(dividingBy: 1) == 0 {\n    if y.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n      if z.truncatingRemainder(dividingBy: 1) == 0 {\n        return\
    \ (x + y == z) || (x + z == y) || (y + z == x)\n      }\n    }\n  }\n  return\
    \ false", '    return (x + y == z || x + z == y || y + z == x) && floor(x) ==
    x && floor(y) == y && floor(z) == z', "    if (Int(x) == Int(y + z)) || (Int(y)\
    \ == Int(x + z)) || (Int(z) == Int(x + y)) {\n        return true\n    } else\
    \ {\n        return false\n    }", "  // YOUR CODE GOES HERE\n  return false",
  "    return (floor(x) == x && floor(y) == y && floor(z) == z) &&\n        ((x +\
    \ y == z) || (x + z == y) || (y + z == x))", '    return (floor(x) == x && floor(y)
    == y && floor(z) == z) && ((x + y == z) || (x + z == y) || (y + z == x))', " \
    \   if (x - y == z || y - x == z || x - z == y || z - x == y || y - z == x ||\
    \ z - y == x) && x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        return true\n\
    \    } else {\n        return false\n    }", '    return ((Int(x) == (Int(y) +
    Int(z))) || (Int(y) == (Int(x) + Int(z))) || (Int(z) == (Int(x) + Int(y))))',
  "    var test_1 = Int(x) == Int(y) + Int(z)\n    var test_2 = Int(y) == Int(x) +\
    \ Int(z)\n    var test_3 = Int(z) == Int(x) + Int(y)\n    return test_1 || test_2\
    \ || test_3", "    var result = false\n    if x == y + z || y == x + z || z ==\
    \ x + y {\n        result = true\n    }\n    return result", '  return (x == y
    + z || y == x + z || z == x + y) && (x % 1 == 0 && y % 1 == 0 && z % 1 == 0)',
  '    return (x == Int(x) && y == Int(y) && z == Int(z)) && ((x + y == z) || (x +
    z == y) || (y + z == x))', "    if (x.truncatingRemainder(dividingBy: 1) == 0)\
    \ && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        return ((x + y == z) || (x + z == y) || (y + z == x))\n\
    \    }\n    return false", '    return false', "    if (x.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if x == y + z || y == x + z || z == x + y {\n          \
    \  return true\n        }\n    }\n    return false", '    return false', '    return
    false', '    return (x + y == z) || (x + z == y) || (y + z == x)', "    if x ==\
    \ (y + z) && z == (x + y) && y == (x + z) {\n        return true\n    } else {\n\
    \        return false\n    }", '    return [x, y, z].allSatisfy({ $0.isInteger
    }) && [x, y, z].sorted().doesSumToDouble(x + y + z)', '    return (x.truncatingRemainder(dividingBy:
    1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0) && (x == y + z || y == x + z || z == x + y)', '    return x + y == z
    || x + z == y || y + z == x', "    \n    //return ((x.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0)) && ( (x == y + z) || (y == x + z) || (z == x + y) )\n    \n    return\
    \ (((x % 1) == 0) && ((y % 1) == 0) && ((z % 1) == 0)) && ( (x == y + z) || (y\
    \ == x + z) || (z == x + y) )", "    if x % 1 != 0 || y % 1 != 0 || z % 1 != 0\
    \ {\n        return false\n    }\n    if x + y == z || x + z == y || y + z ==\
    \ x {\n        return true\n    }\n    return false", "    var result = false\n\
    \    let absX = x.truncatingRemainder(dividingBy: 1)\n    let absY = y.truncatingRemainder(dividingBy:\
    \ 1)\n    let absZ = z.truncatingRemainder(dividingBy: 1)\n    if x != 0 && y\
    \ != 0 && z != 0 && (absX + absY + absZ) == 0 {\n        if (x + y == z) || (x\
    \ + z == y) || (y + z == x) {\n            result = true\n        }\n    }\n \
    \   return result", '    return (x + y == z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy:
    1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0)', '    return ((x - y == z) || (x - z == y) || (y - x == z) || (y - z
    == x) || (z - x == y) || (z - y == x)) && (x == floor(x)) && (y == floor(y)) &&
    (z == floor(z))', '    return (Double(Int(x)) == x && Double(Int(y)) == y && Double(Int(z))
    == z) && (x + y == z || x + z == y || y + z == x)', "    var A = x + y\n    var\
    \ B = y + z\n    var C = x + z\n    var D = A\n    if A == z {\n        D = A\n\
    \    } else if B == x {\n        D = B\n    } else if C == y {\n        D = C\n\
    \    }\n    if D.truncatingRemainder(dividingBy: 1) == 0 {\n        return true\n\
    \    } else {\n        return false\n    }", "    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false", '    return x.truncatingRemainder(dividingBy:
    1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0 && (x == y + z || y == x + z || z == x + y)', "    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x + y == z || x + z == y || y + z == x {\n           \
    \ return true\n        }\n    }\n    return false", '    return (x + y == z ||
    x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:
    1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0)', "  let sum = x + y + z\n\
    \  if sum.truncatingRemainder(dividingBy: 1) == 0 {\n    return true\n  } else\
    \ {\n    return false\n  }", '    return (x+y == z || x+z == y || y+z == x) &&
    x == Double(Int(x)) && y == Double(Int(y)) && z == Double(Int(z))', '    return
    (x.truncatingRemainder(dividingBy: 1) == 0) && (y.truncatingRemainder(dividingBy:
    1) == 0) && (z.truncatingRemainder(dividingBy: 1) == 0) && ((x + y == z) || (x
    + z == y) || (y + z == x))', "    if (x + y == z) && (floor(x) == x) && (floor(y)\
    \ == y) && (floor(z) == z) {\n        return true\n    } else if (x + z == y)\
    \ && (floor(x) == x) && (floor(y) == y) && (floor(z) == z) {\n        return true\n\
    \    } else if (y + z == x) && (floor(x) == x) && (floor(y) == y) && (floor(z)\
    \ == z) {\n        return true\n    } else {\n        return false\n    }", " \
    \   if (x.truncatingRemainder(dividingBy: 1) == 0) && (y.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (z.truncatingRemainder(dividingBy: 1) == 0) {\n        if (x + y\
    \ == z) || (x + z == y) || (y + z == x) {\n            return true\n        }\n\
    \    }\n    return false", '    return false', "    if (x == (y + z)) && (x -\
    \ floor(x) == 0) && (y - floor(y) == 0) && (z - floor(z) == 0) {\n        return\
    \ true\n    } else if (y == (x + z)) && (x - floor(x) == 0) && (y - floor(y) ==\
    \ 0) && (z - floor(z) == 0) {\n        return true\n    } else if (z == (x + y))\
    \ && (x - floor(x) == 0) && (y - floor(y) == 0) && (z - floor(z) == 0) {\n   \
    \     return true\n    } else {\n        return false\n    }", '    return (abs(x)
    == floor(abs(x))) && (abs(y) == floor(abs(y))) && (abs(z) == floor(abs(z))) &&
    ((x == y + z) || (y == x + z) || (z == x + y))', "    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0{\n        if x == y + z || y == x + z || z == x + y {\n            return\
    \ true\n        }\n    }\n    return false", '    return !((x.truncatingRemainder(dividingBy:
    1) != 0 || y.truncatingRemainder(dividingBy: 1) != 0 || z.truncatingRemainder(dividingBy:
    1) != 0) || x + y != z && x + z != y && y + z != x)', '    return x == y + z ||
    x == y - z || x == z - y || y == x + z || y == x - z || y == z - x || z == x +
    y || z == x - y || z == y - x', '    return (x + y == z || x + z == y || y + z
    == x) && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:
    1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0)', '    return false', " \
    \   var sum = x + y + z\n    let diff = [x - z, y - z, z - x, z - y]\n    for\
    \ number in diff {\n        if number == 0 {\n            return false\n     \
    \   }\n        if floor(number) == ceil(number) {\n            sum -= number\n\
    \        }\n    }\n    return floor(sum) == ceil(sum)", "    let ints = [x, y,\
    \ z].map({ Int($0) })\n    guard ints.reduce(true, { (res, int) -> Bool in res\
    \ && int != nil }) else { return false }\n    let ints_sorted = ints.sorted()\n\
    \    return ints_sorted[0]! + ints_sorted[1]! == ints_sorted[2]!", '    return
    (x + y == z || x + z == y || y + z == x) && (x == round(x) && y == round(y) &&
    z == round(z))', '  return (x == y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy:
    1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0', "  if x == y + z || y == x + z || z == x + y {\n    return true\n  }\
    \ else {\n    return false\n  }", "    let summ = x + y + z\n    if(summ == Int(summ)){\n\
    \        return true\n    }else{\n        return false\n    }", "    if x.isInteger\
    \ && y.isInteger && z.isInteger {\n        if x == y + z || y == x + z || z ==\
    \ x + y {\n            return true\n        }\n    }\n    return false", '    return
    Int(x) + Int(y) == Int(z) || Int(x) + Int(z) == Int(y) || Int(y) + Int(z) == Int(x)',
  '    return (x % 1 == 0 && y % 1 == 0 && z % 1 == 0) && (x + y == z || x + z ==
    y || y + z == x)', "    let list = [x, y, z]\n    if list.contains(x + y) || list.contains(x\
    \ + z) || list.contains(y + z) {\n        return true\n    }\n    return false",
  "    return (x - y == z || x - z == y || y - x == z || y - z == x || z - x == y\
    \ || z - y == x) &&\n        x.truncatingRemainder(dividingBy: 1) == 0 &&\n  \
    \      y.truncatingRemainder(dividingBy: 1) == 0 &&\n        z.truncatingRemainder(dividingBy:\
    \ 1) == 0", "    if x.isInteger && y.isInteger && z.isInteger {\n        return\
    \ x + y == z || x + z == y || y + z == x\n    }\n    return false", '    return
    false', "    if !x.isInteger || !y.isInteger || !z.isInteger {\n        return\
    \ false\n    }\n    return (x + y == z) || (x + z == y) || (y + z == x)", "  \
    \  if !is_int(x) || !is_int(y) || !is_int(z) {\n        return false\n    }\n\
    \    return x == y + z || y == x + z || z == x + y", "    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0.0 && y.truncatingRemainder(dividingBy: 1) == 0.0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0.0 {\n        if x == y + z || y == x + z || z == x + y {\n         \
    \   return true\n        }\n    }\n    return false", '    return false', "  \
    \  if x == y + z || y == x + z || z == x + y {\n        return true\n    } else\
    \ {\n        return false\n    }", '    return (x + y == z || x + z == y || y
    + z == x) && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:
    1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0)', "    if ((x == (y + z))\
    \ || (y == (x + z)) || (z == (x + y))) && (x.isInteger && y.isInteger && z.isInteger)\
    \ {\n        return true\n    } else {\n        return false\n    }", "    if\
    \ x % 1 == 0 && y % 1 == 0 && z % 1 == 0 {\n        if (x + y == z) || (x + z\
    \ == y) || (y + z == x) {\n            return true\n        }\n    }\n    return\
    \ false", '  return ((x == y + z) || (y == x + z) || (z == x + y)) && (x.truncatingRemainder(dividingBy:
    1) == 0) && (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:
    1) == 0)', "    let nums = [x, y, z]\n    for i in 0...2 {\n        for j in 0...2\
    \ {\n            if i != j {\n                for k in 0...2 {\n             \
    \       if k != i && k != j {\n                        if nums[i] == nums[j] +\
    \ nums[k] {\n                            return true\n                       \
    \ }\n                    }\n                }\n            }\n        }\n    }\n\
    \    return false", '    return false', '    return (Int(x) + Int(y) == Int(z))
    || (Int(x) + Int(z) == Int(y)) || (Int(y) + Int(z) == Int(x))', '    return (x
    == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy: 1)
    == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0)', "    if x.truncatingRemainder(dividingBy: 1) == 0.0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0.0 && z.truncatingRemainder(dividingBy: 1) == 0.0 {\n        if x + y\
    \ == z || x + z == y || y + z == x {\n            return true\n        }\n   \
    \ }\n    return false", "    let xi = floor(x)\n    let yi = floor(y)\n    let\
    \ zi = floor(z)\n    return xi == yi + zi || yi == xi + zi || zi == xi + yi",
  "    let result = x == y + z || y == x + z || z == x + y\n    if result {\n    \
    \    return true\n    } else {\n        return false\n    }", '    return ((x.truncatingRemainder(dividingBy:
    1) == 0 || y.truncatingRemainder(dividingBy: 1) == 0 || z.truncatingRemainder(dividingBy:
    1) == 0) && (x + y == z || x + z == y || y + z == x))', "    let sum = x + y +\
    \ z\n    if (sum - x).isInteger && x.isInteger && y.isInteger && z.isInteger {\n\
    \        return true\n    } else if (sum - y).isInteger && x.isInteger && y.isInteger\
    \ && z.isInteger {\n        return true\n    } else if (sum - z).isInteger &&\
    \ x.isInteger && y.isInteger && z.isInteger {\n        return true\n    } else\
    \ {\n        return false\n    }", "    // Implement your code here.\n    return\
    \ false", "    if round(x) == round(y) + round(z) || round(y) == round(x) + round(z)\
    \ || round(z) == round(x) + round(y) {\n        return true\n    } else {\n  \
    \      return false\n    }", "    if x % 1 == 0 && y % 1 == 0 && z % 1 == 0 &&\
    \ ((x + y == z) || (x + z == y) || (y + z == x)) {\n        return true\n    }\
    \ else {\n        return false\n    }", "    var sum = x + y + z\n    if (x +\
    \ y == z || x + z == y || y + z == x) && sum == sum.rounded(.toNearestOrAwayFromZero)\
    \ {\n        return true\n    } else {\n        return false\n    }", "  if (x\
    \ == y + z) || (y == x + z) || (z == x + y) {\n    return true\n  } else {\n \
    \   return false\n  }", '    return x.truncatingRemainder(dividingBy: 1) == 0
    && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0 && (x == y + z || y == x + z || z == x + y)', '    return x.truncatingRemainder(dividingBy:
    1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0 && (x + y == z || x + z == y || y + z == x)', '    return false', "  \
    \  if x == y + z || y == x + z || z == x + y {\n        return true\n    } else\
    \ {\n        return false\n    }", "    let sum = x + y + z\n    if floor(sum)\
    \ == sum {\n        return true\n    }\n    return false", "    let xInt = Int(x)\n\
    \    let yInt = Int(y)\n    let zInt = Int(z)\n    return ((xInt == x) && (yInt\
    \ == y) && (zInt == z)) && (xInt + yInt == zInt || xInt + zInt == yInt || yInt\
    \ + zInt == xInt)", '    return (x.truncatingRemainder(dividingBy: 1) == 0 &&
    y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0) && ((x + y == z) || (x + z == y) || (y + z == x))', '    return false',
  "    var result: Bool = false\n    if x.truncatingRemainder(dividingBy: 1) == 0,\
    \ y.truncatingRemainder(dividingBy: 1) == 0, z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ result = true\n        }\n    }\n    return result", "  if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n    return (x + y == z || x + z == y || y + z == x)\n  }\n  return\
    \ false", "  if (floor(x) == x && floor(y) == y && floor(z) == z) {\n    return\
    \ (x == y + z || y == x + z || z == x + y)\n  }\n  return false", "    var result\
    \ = false\n    if (x == y + z || x == y - z || x == z - y) && x.isInteger && y.isInteger\
    \ && z.isInteger {\n        result = true\n    } else if (y == x + z || y == x\
    \ - z || y == z - x) && x.isInteger && y.isInteger && z.isInteger {\n        result\
    \ = true\n    } else if (z == x + y || z == x - y || z == y - x) && x.isInteger\
    \ && y.isInteger && z.isInteger {\n        result = true\n    }\n    return result",
  "    if (x - y == z) || (x - z == y) || (y - z == x) {\n        return true\n  \
    \  } else {\n        return false\n    }", "    var sum: Double = 0\n    if x.isInteger\
    \ && y.isInteger && z.isInteger {\n        if (x == y + z) || (y == x + z) ||\
    \ (z == x + y) {\n            return true\n        }\n    }\n    return false",
  '    return false', "    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false", '    return (x + y == z || x + z == y || y + z == x) && x.truncatingRemainder(dividingBy:
    1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0', "    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false", '    return (x == y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy:
    1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0', '    return (Double(Int(x)) == x && Double(Int(y)) == y && Double(Int(z))
    == z)', '    return x + y == z || x + z == y || y + z == x', '    return (x ==
    y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) ==
    0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0', "    if x == y + z || x == y - z || x == z - y {\n        return true\n\
    \    } else if y == x + z || y == x - z || y == z - x {\n        return true\n\
    \    } else if z == x + y || z == x - y || z == y - x {\n        return true\n\
    \    } else {\n        return false\n    }", '    return false', "    if floor(x)\
    \ == x && floor(y) == y && floor(z) == z {\n        if x == y + z || y == x +\
    \ z || z == x + y {\n            return true\n        }\n    }\n    return false",
  "    if Int(x) == Int(y) + Int(z) || Int(x) == Int(y) + Int(z) || Int(x) == Int(y)\
    \ + Int(z) {\n        return true\n    } else {\n        return false\n    }",
  '    return (y + z == x) || (x + z == y) || (x + y == z)', '    return (x == y +
    z || y == x + z || z == x + y) && floor(x) == x && floor(y) == y && floor(z) ==
    z', "    if (x.truncatingRemainder(dividingBy: 1) == 0) || (y.truncatingRemainder(dividingBy:\
    \ 1) == 0) || (z.truncatingRemainder(dividingBy: 1) == 0) {\n        if x + y\
    \ == z || x + z == y || y + z == x {\n            return true\n        }\n   \
    \ }\n    return false", "    if x == Int(x) && y == Int(y) && z == Int(z) {\n\
    \        if x == y + z || y == x + z || z == x + y {\n            return true\n\
    \        }\n    }\n    return false", "    let array = [x, y, z]\n    let sortedArray\
    \ = array.sorted()\n    let max = sortedArray[2]\n    let sum = sortedArray[0]\
    \ + sortedArray[1]\n    return max == sum && array.filter({x in x.truncatingRemainder(dividingBy:\
    \ 1) == 0}).count == 3", '    return x == y + z || y == x + z || z == x + y',
  "    if (x + y == z) || (x + z == y) || (y + z == x) {\n        return true\n  \
    \  } else {\n        return false\n    }", '    return (x + y == z) || (x + z
    == y) || (y + z == x)', "    if(x.truncatingRemainder(dividingBy: 1) == 0.0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0.0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0.0) {\n        if((x + y == z) || (x + z == y) || (y + z == x)) {\n \
    \           return true\n        }\n    }\n    return false", "    return (Double(Int(x))\
    \ == x && Double(Int(y)) == y && Double(Int(z)) == z) &&\n        (x == y + z\
    \ || y == x + z || z == x + y)", "    if (x - y - z).rounded() == 0 || (x + y\
    \ - z).rounded() == 0 || (x - y + z).rounded() == 0 {\n        return true\n \
    \   }\n    return false", '    return true', '    return (Int(x) + Int(y) == Int(z))
    || (Int(x) + Int(z) == Int(y)) || (Int(y) + Int(z) == Int(x))', '    return (x
    == y + z || y == x + z || z == x + y) && floor(x) == x && floor(y) == y && floor(z)
    == z', "    //   let result: Bool\n    //    if (x + y == z || x + z == y || y\
    \ + z == x) && x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n    //        result\
    \ = true\n    //    } else {\n    //        result = false\n    //    }\n    return\
    \ (x + y == z || x + z == y || y + z == x) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0", '  return (x.isInteger && y.isInteger && z.isInteger) && ((x == y
    + z) || (y == x + z) || (z == x + y))', '    return x == y + z || x == y - z ||
    x == z - y', '    return ((Int(x) == Int(y) + Int(z)) || (Int(y) == Int(x) + Int(z))
    || (Int(z) == Int(x) + Int(y))) && (Int(x) == x) && (Int(y) == y) && (Int(z) ==
    z)', "    let ints = [x, y, z].map { floor($0) }\n    let sum = ints.reduce(0,\
    \ +)\n    return ints.contains(sum)", '    return false', '    return (x % 1 ==
    0 && y % 1 == 0 && z % 1 == 0) && (x + y == z || x + z == y || y + z == x)', '  return
    (x + y == z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy:
    1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0)', "    if (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0) {\n        if (x == y\
    \ + z || y == x + z || z == x + y) {\n            return true\n        }\n   \
    \ }\n    return false", '    return (x == y + z) || (x == y - z) || (x == z -
    y)', "    let result = x + y == z || x + z == y || y + z == x\n    return result\
    \ && x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0", "  let sumOfXY = x +\
    \ y\n  let sumOfYZ = y + z\n  let sumOfXZ = x + z\n  let sumOfXYZ = x + y + z\n\
    \  if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && sumOfXY == z || sumOfYZ\
    \ == x || sumOfXZ == y || sumOfXYZ == 0 {\n    return true\n  } else {\n    return\
    \ false\n  }", '    return (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:
    1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0) && (x + y == z || x + z
    == y || y + z == x)', "    var array = [x, y, z]\n    for i in 0..<array.count\
    \ - 1 {\n        let sum = array[i] + array[i + 1]\n        if sum.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n            return true\n        }\n    }\n    return false", " \
    \   if (x + y == z) || (x + z == y) || (y + z == x) {\n        return true\n \
    \   } else {\n        return false\n    }", "    if x == y + z || y == x + z ||\
    \ z == x + y {\n        return true\n    } else {\n        return false\n    }",
  '    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:
    1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x + y == z || x + z ==
    y || y + z == x)', "    let sum = x + y + z\n    return sum == Int(sum)", "  \
    \  let a = x == y+z\n    let b = y == x+z\n    let c = z == x+y\n    let d = floor(x)\
    \ == x\n    let e = floor(y) == y\n    let f = floor(z) == z\n    return (a ||\
    \ b || c) && d && e && f", '    return ((x == y + z) || (y == x + z) || (z ==
    x + y)) && (x == floor(x)) && (y == floor(y)) && (z == floor(z))', "    // x +\
    \ y == z || y + z == x || x + z == y\n    var numbers: [Double] = [x, y, z]\n\
    \    numbers.sort()\n    if numbers[0] + numbers[1] == numbers[2] {\n        return\
    \ true\n    }\n    return false", '    return (x == y + z || y == x + z || z ==
    x + y) && x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:
    1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0', "    if is_int(x) && is_int(y)\
    \ && is_int(z) {\n        if x + y == z || x + z == y || y + z == x {\n      \
    \      return true\n        }\n    }\n    return false", '    return (x.truncatingRemainder(dividingBy:
    1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0) && (x + y == z || x + z == y || y + z == x)', '  return false', "   \
    \ var result = false\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0{\n        if x == y + z\
    \ || y == x + z || z == x + y {\n            result = true\n        }\n    }\n\
    \    return result", '    return false', "    if (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) {\n        if (x == y + z || y == x + z || z == x + y) {\n        \
    \    return true\n        }\n    }\n    return false", "    let sum = x + y +\
    \ z\n    let areInts = x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0\n    return areInts &&\
    \ (x == sum - y - z || y == sum - x - z || z == sum - x - y)", "    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        return true\n    } else {\n        return false\n    }",
  "    if (x.truncatingRemainder(dividingBy: 1) == 0) && (y.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (z.truncatingRemainder(dividingBy: 1) == 0) {\n        if (x + y\
    \ == z) || (x + z == y) || (y + z == x) {\n            return true\n        }\n\
    \    }\n    return false", '    return (x == (y + z) || y == (x + z) || z == (x
    + y)) && (x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:
    1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0)', "    var result = false\n\
    \    if Int(x) + Int(y) == Int(z) {\n        result = true\n    } else if Int(x)\
    \ + Int(z) == Int(y) {\n        result = true\n    } else if Int(y) + Int(z) ==\
    \ Int(x) {\n        result = true\n    }\n    return result", '    return (x ==
    y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy: 1) ==
    0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0', '    return x.isInteger && y.isInteger && z.isInteger && x + y == z
    || x + z == y || y + z == x', '    return true', '    return (x.truncatingRemainder(dividingBy:
    1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0) && ((x + y == z) || (x + z == y) || (y + z == x))', '    return (x ==
    y + z || x == y - z || y == x + z || y == x - z || z == x + y || z == x - y) &&
    (x.truncatingRemainder(dividingBy: 1) == 0 || y.truncatingRemainder(dividingBy:
    1) == 0 || z.truncatingRemainder(dividingBy: 1) == 0)', '    return (x - y ==
    z || x - z == y || y - x == z || y - z == x || z - x == y || z - y == x) && (Int(x)
    == x && Int(y) == y && Int(z) == z)', '  return (x == Double(Int(x)) && y == Double(Int(y))
    && z == Double(Int(z)) && (x + y == z || x + z == y || y + z == x))', '    return
    (x + y == z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy:
    1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0)', '    return (x == (y + z) || y == (x + z) || z == (x + y)) && x ==
    floor(x) && y == floor(y) && z == floor(z)', "    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if x == y + z || y == x + z || z == x + y {\n           \
    \ return true\n        }\n    }\n    return false", '    return (x + y == z) ||
    (x + z == y) || (y + z == x)', "    if (x == y + z || y == x + z || z == x + y)\
    \ && (isInteger(x) && isInteger(y) && isInteger(z)) {\n        return true\n \
    \   }\n    return false", "    if !x.isInteger || !y.isInteger || !z.isInteger\
    \ {\n        return false\n    }\n    let sum = x + y + z\n    if x == sum / 2\
    \ || y == sum / 2 || z == sum / 2 {\n        return true\n    }\n    return false",
  "    let sum = x + y + z\n    if (fmod(sum, 1) == 0) {\n        return true\n  \
    \  }\n    else {\n        return false\n    }", '    return (x.truncatingRemainder(dividingBy:
    1) == 0 || y.truncatingRemainder(dividingBy: 1) == 0 || z.truncatingRemainder(dividingBy:
    1) == 0) && (x + y == z || x + z == y || y + z == x)', "    let x_is_int = floor(x)\
    \ == x\n    let y_is_int = floor(y) == y\n    let z_is_int = floor(z) == z\n \
    \   let left_sum = x + y\n    let right_sum = y + z\n    let x_sum = x + z\n \
    \   let sum_test = (x_sum == z) || (left_sum == z) || (right_sum == x)\n    return\
    \ x_is_int && y_is_int && z_is_int && sum_test", "    var result = false\n   \
    \ if x == y + z {\n        result = true\n    } else if y == x + z {\n       \
    \ result = true\n    } else if z == x + y {\n        result = true\n    }\n  \
    \  return result", "    if (x == y + z) || (y == x + z) || (z == x + y) {\n  \
    \      return true\n    } else {\n        return false\n    }", "    if !is_int(num:\
    \ x) || !is_int(num: y) || !is_int(num: z) {\n        return false\n    }\n  \
    \  if x == y + z || y == x + z || z == x + y {\n        return true\n    }\n \
    \   return false", '    return ((x + y == z || x + z == y || y + z == x) && x.truncatingRemainder(dividingBy:
    1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:
    1) == 0)', "    if (x+y == z) || (x+z == y) || (y+z == x) {\n        return true\n\
    \    }\n    return false", "    let sum = x + y + z\n    if sum.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        return true\n    } else {\n        return false\n    }",
  '    return false', '    return x == y + z || y == x + z || z == x + y', "    return\
    \  x.truncatingRemainder(dividingBy: 1) == 0 &&\n            y.truncatingRemainder(dividingBy:\
    \ 1) == 0 &&\n            z.truncatingRemainder(dividingBy: 1) == 0 &&\n     \
    \       (x + y == z || x + z == y || y + z == x)", "    if !x.isInteger || !y.isInteger\
    \ || !z.isInteger {\n        return false\n    }\n    return (x + y == z) || (x\
    \ + z == y) || (y + z == x)", "    if x.truncatingRemainder(dividingBy: 1) ==\
    \ 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        return (x == y + z) || (y == x + z) || (z == x + y)\n   \
    \ }\n    return false", "    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        return x + y\
    \ == z || x + z == y || y + z == x\n    }\n    return false", '    return (x %
    1 == 0 || y % 1 == 0 || z % 1 == 0) && (x + y == z || x + z == y || y + z == x)',
  "  if (x % 1 == 0) && (y % 1 == 0) && (z % 1 == 0) {\n    if (x + y == z) || (x\
    \ + z == y) || (y + z == x) {\n      return true\n    }\n  }\n  return false",
  "    if x == (y + z) || y == (x + z) || z == (x + y) {\n        return true\n  \
    \  } else {\n        return false\n    }", "    if Int(x) == Int(y) + Int(z) ||\
    \ Int(x) == Int(y) - Int(z) || Int(x) == Int(z) - Int(y) {\n        return true\n\
    \    } else if Int(y) == Int(x) + Int(z) || Int(y) == Int(x) - Int(z) || Int(y)\
    \ == Int(z) - Int(x) {\n        return true\n    } else if Int(z) == Int(x) +\
    \ Int(y) || Int(z) == Int(x) - Int(y) || Int(z) == Int(y) - Int(x) {\n       \
    \ return true\n    } else {\n        return false\n    }", "    if x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        if (x == y + z) || (y == x + z) || (z == x + y) {\n     \
    \       return true\n        }\n    }\n    return false"]
stop_tokens:
- "\n}"

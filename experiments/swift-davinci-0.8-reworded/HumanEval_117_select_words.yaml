name: HumanEval_117_select_words
language: swift
prompt: "\n/// Given a string s and a natural number n, you have been tasked to implement\
  \ \n/// a function that returns an array of all words from string s that contain\
  \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
  \ If the string s is empty then the function should return an empty array.\n///\
  \ Note: you may assume the input string contains only letters and spaces.\n/// Examples:\n\
  /// >>> select_words(s: \"Mary had a little lamb\", n: 4)\n/// [\"little\"]\n///\
  \ >>> select_words(s: \"Mary had a little lamb\", n: 3)\n/// [\"Mary\", \"lamb\"\
  ]\n/// >>> select_words(s: \"simple white space\", n: 2)\n/// [] as [String]\n///\
  \ >>> select_words(s: \"Hello world\", n: 4)\n/// [\"world\"]\n/// >>> select_words(s:\
  \ \"Uncle sam\", n: 3)\n/// [\"Uncle\"]\nfunc select_words(s: String, n: Int) ->\
  \ [String] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(select_words(s: \"Mary had a little lamb\"\
  , n: 4) == [\"little\"])\nassert(select_words(s: \"Mary had a little lamb\", n:\
  \ 3) == [\"Mary\", \"lamb\"])\nassert(select_words(s: \"simple white space\", n:\
  \ 2) == [] as [String])\nassert(select_words(s: \"Hello world\", n: 4) == [\"world\"\
  ])\nassert(select_words(s: \"Uncle sam\", n: 3) == [\"Uncle\"])\nassert(select_words(s:\
  \ \"\", n: 4) == [] as [String])\nassert(select_words(s: \"a b c d e f\", n: 1)\
  \ == [\"b\", \"c\", \"d\", \"f\"])"
completions: ["    let vowels = Set(\"aeiou\")\n    let letters = Set(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n    var ans = [String]()\n    for word in s.lowercased().split(separator: \"\
    \ \") {\n        var cons = 0\n        for c in word {\n            if letters.contains(c)\
    \ && !vowels.contains(c) {\n                cons += 1\n            }\n       \
    \ }\n        if cons == n {\n            ans.append(String(word))\n        }\n\
    \    }\n    return ans", "    return s.components(separatedBy: \" \").filter {\
    \ word in\n        word.components(separatedBy: vowels).count - 1 == n\n    }",
  "\treturn []", "    var result: [String] = []\n    for word in s.components(separatedBy:\
    \ \" \") {\n        if !word.isEmpty {\n            var numConsonants = 0\n  \
    \          for char in word {\n                if (char == \"a\" || char == \"\
    e\" || char == \"i\" || char == \"o\" || char == \"u\") {\n                  \
    \  continue\n                }\n                numConsonants += 1\n         \
    \   }\n            if numConsonants == n {\n                result.append(word)\n\
    \            }\n        }\n    }\n    return result", "  var m = [String]()\n\
    \  let l = s.split(separator: \" \")\n  for i in l {\n    if get_count(s: String(i))\
    \ == n {\n      m.append(String(i))\n    }\n  }\n  return m", "    let words =\
    \ s.components(separatedBy: \" \")\n    var result: [String] = []\n    for word\
    \ in words {\n        if consonants_counter(s: word) == n {\n            result.append(word)\n\
    \        }\n    }\n    return result", "    let vowels = Set(\"aeiou\")\n    let\
    \ words = s.components(separatedBy: \" \")\n    return words.filter { word in\n\
    \        word.reduce(0) { count, letter in\n            vowels.contains(letter)\
    \ ? count : count + 1\n        } == n\n    }", "    var consonants = 0\n    var\
    \ result = [String]()\n    let temp = s.components(separatedBy: \" \")\n    for\
    \ i in temp {\n        for j in i {\n            switch j {\n            case\
    \ \"a\", \"e\", \"i\", \"o\", \"u\", \"y\":\n                break\n         \
    \   default:\n                consonants += 1\n            }\n        }\n    \
    \    if consonants == n {\n            result.append(i)\n        }\n        consonants\
    \ = 0\n    }\n    return result", "    let words = s.split(separator: \" \")\n\
    \    let vowels = \"aeiou\"\n    return words.filter {\n        $0.filter {\n\
    \            !vowels.contains($0)\n        }.count == n\n    }", "    var results\
    \ = [String]()\n    let s = s.lowercased()\n    let words = s.components(separatedBy:\
    \ \" \")\n    for var word in words {\n        let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n        var numberOfConsonants = 0\n        for var letter\
    \ in word {\n            if !vowels.contains(String(letter)) {\n             \
    \   numberOfConsonants += 1\n            }\n        }\n        if numberOfConsonants\
    \ == n {\n            results.append(word)\n        }\n    }\n    return results",
  "    var words: [String] = []\n    var word: String = \"\"\n    for char in s {\n\
    \        let lowChar = String(char).lowercased()\n        if lowChar == \" \"\
    \ {\n            if countConsonants(word) == n {\n                words.append(word)\n\
    \            }\n            word = \"\"\n        } else {\n            word +=\
    \ String(char)\n        }\n    }\n    if countConsonants(word) == n {\n      \
    \  words.append(word)\n    }\n    return words", '    return s.components(separatedBy:
    " ").filter({ countConsonants(word: $0) == n })', '    return s.components(separatedBy:
    " ").filter { $0.contains(n, of: "bcdfghjklmnpqrstvwxyz") }', "    let onlyAlpha\
    \ = s.replacingOccurrences(of: \"[^a-zA-Z ]\", with: \"\", options: .regularExpression)\n\
    \    var words = onlyAlpha.components(separatedBy: \" \")\n    words = words.filter\
    \ {\n        let chars = Array($0.lowercased())\n        let consonants = chars.filter\
    \ { !$0.isVowel }\n        return consonants.count == n\n    }\n    return words",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  let words = s.lowercased().components(separatedBy: \" \")\n    var result =\
    \ [String]()\n    for word in words {\n        var count = 0\n        for letter\
    \ in word {\n            if vowels.contains(letter) {\n                continue\n\
    \            } else if consonants.contains(letter) {\n                count +=\
    \ 1\n            }\n        }\n        if count == n {\n            result.append(word)\n\
    \        }\n    }\n    return result", "    let s = s.components(separatedBy:\
    \ \" \")\n    var result = [String]()\n    for str in s {\n        if str.count\
    \ > n {\n            var count = 0\n            for char in str {\n          \
    \      if !is_vowel(c: char) {\n                    count += 1\n             \
    \   }\n            }\n            if count == n {\n                result.append(str)\n\
    \            }\n        }\n    }\n    return result", '    return []', "    if\
    \ s.isEmpty {\n        return []\n    }\n    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    let s = s.lowercased()\n    var temp = s.components(separatedBy:\
    \ \" \")\n    temp = temp.filter { w in\n        var total = 0\n        for c\
    \ in w {\n            if vowels.contains(c) {\n                total += 1\n  \
    \          }\n        }\n        return total == n\n    }\n    return temp", " \
    \   let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\",\
    \ \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"z\"]\n    var words = s.components(separatedBy: \" \")\n    var result = [String]()\n\
    \    for (index, word) in words.enumerated() {\n        var number = 0\n     \
    \   for letter in word {\n            if consonants.contains(String(letter).lowercased())\
    \ {\n                number += 1\n            }\n        }\n        if number\
    \ == n {\n            result.append(word)\n        }\n    }\n    return result",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var selectedWords: [String] = []\n    let words = s.split(separator: \"\
    \ \")\n    for word in words {\n        var consonantCount = 0\n        for letter\
    \ in word {\n            if !vowels.contains(letter) {\n                consonantCount\
    \ += 1\n            }\n        }\n        if consonantCount == n {\n         \
    \   selectedWords.append(String(word))\n        }\n    }\n    return selectedWords",
  "\tvar consonants: String = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\n\tvar\
    \ consonantList: [String] = []\n\tvar words: [String] = []\n\t\n\tvar result:\
    \ [String] = []\n\t\n\tfor i in s {\n\t\tif consonants.contains(i) {\n\t\t\tconsonantList.append(String(i))\n\
    \t\t}\n\t}\n\t\n\twords = s.components(separatedBy: \" \")\n\t\n\tfor i in words\
    \ {\n\t\tvar count: Int = 0\n\t\t\n\t\tfor j in i {\n\t\t\tif consonants.contains(j)\
    \ {\n\t\t\t\tcount += 1\n\t\t\t}\n\t\t}\n\t\t\n\t\tif count == n {\n\t\t\tresult.append(i)\n\
    \t\t}\n\t}\n\t\n\treturn result", '    return s.split(separator: " ").filter {String($0).filter("bcdfghjklmnpqrstvwxyz".contains).count
    == n}', "    var words = s.split(separator: \" \")\n    var result: [String] =\
    \ []\n    for word in words {\n        var wordCount = 0\n        for letter in\
    \ word {\n            if !is_vowel(letter: letter) {\n                wordCount\
    \ += 1\n            }\n        }\n        if wordCount == n {\n            result.append(String(word))\n\
    \        }\n    }\n    return result", "    var result = [String]()\n    var word\
    \ = \"\"\n    var consonantsCount = 0\n    var i = 0\n    while i < s.count {\n\
    \        let index = s.index(s.startIndex, offsetBy: i)\n        let char = s[index]\n\
    \        if char == \" \" {\n            i += 1\n            continue\n      \
    \  }\n        if isConsonant(c: char) {\n            consonantsCount += 1\n  \
    \      }\n        word += String(char)\n        if consonantsCount == n {\n  \
    \          result.append(word)\n            consonantsCount = 0\n            word\
    \ = \"\"\n        }\n        i += 1\n    }\n    return result", "    let vowels\
    \ = Set([\"a\", \"e\", \"i\", \"o\", \"u\"])\n    var words = s.components(separatedBy:\
    \ \" \")\n    for i in 0..<words.count {\n        var word = words[i]\n      \
    \  word = word.lowercased()\n        var consonants = 0\n        for j in 0..<word.count\
    \ {\n            if !vowels.contains(word[word.index(word.startIndex, offsetBy:\
    \ j)]) {\n                consonants += 1\n            }\n        }\n        if\
    \ consonants != n {\n            words.remove(at: i)\n        }\n    }\n    return\
    \ words", "    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    let vowels = \"\
    aeiou\"\n    let s = s.lowercased()\n    var strArray = s.components(separatedBy:\
    \ \" \")\n    var resultArray: [String] = []\n    for i in 0..<strArray.count\
    \ {\n        var consonantCounter = 0\n        var vowelCounter = 0\n        for\
    \ j in 0..<strArray[i].count {\n            let index = strArray[i].index(strArray[i].startIndex,\
    \ offsetBy: j)\n            let char = strArray[i][index]\n            if consonants.contains(char)\
    \ {\n                consonantCounter += 1\n            } else if vowels.contains(char)\
    \ {\n                vowelCounter += 1\n            }\n        }\n        if consonantCounter\
    \ == n {\n            resultArray.append(strArray[i])\n        }\n    }\n    return\
    \ resultArray", "    let vowels = \"aeiouAEIOU\"\n    let words = s.components(separatedBy:\
    \ \" \")\n    return words.filter { $0.filter { !vowels.contains($0) }.count ==\
    \ n }", "    let vowels = \"aeiou\"\n    let result = s.split(separator: \" \"\
    ).filter({(word) -> Bool in\n        return word.filter({!vowels.contains($0)}).count\
    \ == n\n    })\n    return result.map({String($0)})", "\tlet string = s.lowercased()\n\
    \tlet vowels = \"aeiou\"\n\tvar words = [String]()\n\tvar consonants = 0\n\tvar\
    \ word = \"\"\n\tfor char in string {\n\t\tif char != \" \" {\n\t\t\tword += String(char)\n\
    \t\t\tif !vowels.contains(char) {\n\t\t\t\tconsonants += 1\n\t\t\t}\n\t\t} else\
    \ {\n\t\t\tif consonants == n {\n\t\t\t\twords.append(word)\n\t\t\t}\n\t\t\tword\
    \ = \"\"\n\t\t\tconsonants = 0\n\t\t}\n\t}\n\tif consonants == n {\n\t\twords.append(word)\n\
    \t}\n\treturn words", "  // Check that the input is not empty\n  guard !s.isEmpty\
    \ else { return [] }\n  // Split the string by space\n  let words = s.split(separator:\
    \ \" \")\n  // Create an empty array of strings\n  var result = [String]()\n \
    \ // Loop over the words\n  for word in words {\n    // Create an empty array\
    \ of string\n    var chars = [String]()\n    // Loop over the characters in a\
    \ word\n    for char in word {\n      // Check that the character is a letter\n\
    \      guard char.isLetter else { continue }\n      // Convert the character to\
    \ string\n      let char = String(char)\n      // Convert the letter to lowercase\n\
    \      let lowercased = char.lowercased()\n      // If the letter is a vowel then\
    \ skip it\n      if lowercased == \"a\" || lowercased == \"e\" || lowercased ==\
    \ \"i\" || lowercased == \"o\" || lowercased == \"u\" {\n        continue\n  \
    \    }\n      // Append the character to the array of string\n      chars.append(char)\n\
    \    }\n    // Count the number of consonants in the word\n    let count = chars.count\n\
    \    // Check that the word contains the correct number of consonants\n    if\
    \ count == n {\n      // Append the word to the result array\n      result.append(String(word))\n\
    \    }\n  }\n  // Return the result array\n  return result", "\tvar arr = [String]()\n\
    \tfor word in s.components(separatedBy: \" \") {\n\t\tvar c = 0\n\t\tfor char\
    \ in word {\n\t\t\tif !\"aeiou\".contains(char) {\n\t\t\t\tc += 1\n\t\t\t}\n\t\
    \t}\n\t\tif c == n {\n\t\t\tarr.append(word)\n\t\t}\n\t}\n\treturn arr", "   \
    \ let consonants = \"qwrtypsdfghjklzxcvbnm\"\n    let words = s.split(separator:\
    \ \" \")\n    return words.filter({$0.filter( {consonants.contains($0) }).count\
    \ == n}).map({String($0)})", "    let vowels = Set(\"aeiouAEIOU\")\n    let words\
    \ = s.split(separator: \" \")\n    return words.filter { $0.filter { !vowels.contains($0)\
    \ }.count == n }", "  let words = s.split(separator: \" \")\n  let vowels = \"\
    aeiou\"\n  return words.filter { word in\n    word.lowercased().filter { vowels.contains($0)\
    \ }.count == n\n  }", "    var newArr = [String]()\n    let arr = s.components(separatedBy:\
    \ \" \")\n    for i in arr {\n        var count = 0\n        for j in i {\n  \
    \          if (j == \"a\" || j == \"e\" || j == \"i\" || j == \"o\" || j == \"\
    u\") {\n                count += 1\n            }\n        }\n        if count\
    \ == n {\n            newArr.append(i)\n        }\n    }\n    return newArr",
  "    var stringArray = s.components(separatedBy: \" \")\n    var outputArray = [String]()\n\
    \    for i in 0..<stringArray.count {\n        if !isVowel(c: stringArray[i].characters.first!)\
    \ {\n            var cc = 0\n            for j in 0..<stringArray[i].characters.count\
    \ {\n                if !isVowel(c: stringArray[i].characters[stringArray[i].index(stringArray[i].startIndex,\
    \ offsetBy: j)]) {\n                    cc += 1\n                }\n         \
    \   }\n            if cc == n {\n                outputArray.append(stringArray[i])\n\
    \            }\n        }\n    }\n    return outputArray", "\tvar result = [String]()\n\
    \tvar count = 0\n\tvar words = \"\"\n\t\n\tfor i in s {\n\t\tif i != \" \" {\n\
    \t\t\twords += String(i)\n\t\t} else {\n\t\t\tfor j in words {\n\t\t\t\tif j !=\
    \ \"a\" && j != \"e\" && j != \"i\" && j != \"o\" && j != \"u\" {\n\t\t\t\t\t\
    count += 1\n\t\t\t\t}\n\t\t\t}\n\t\t\tif count == n {\n\t\t\t\tresult.append(words)\n\
    \t\t\t}\n\t\t\tcount = 0\n\t\t\twords = \"\"\n\t\t}\n\t}\n\t\n\tfor i in words\
    \ {\n\t\tif i != \"a\" && i != \"e\" && i != \"i\" && i != \"o\" && i != \"u\"\
    \ {\n\t\t\tcount += 1\n\t\t}\n\t}\n\tif count == n {\n\t\tresult.append(words)\n\
    \t}\n\t\n\treturn result", "    let vowels = \"aeiouAEIOU\"\n    let sArr = s.components(separatedBy:\
    \ \" \")\n    var result = [String]()\n    for word in sArr {\n        var numConsonants\
    \ = 0\n        for char in word {\n            if !vowels.contains(char) {\n \
    \               numConsonants += 1\n            }\n        }\n        if numConsonants\
    \ == n {\n            result.append(word)\n        }\n    }\n    return result",
  "    var result = [String]()\n    let s = s.lowercased()\n    let words = s.components(separatedBy:\
    \ \" \")\n    for word in words {\n        var consonants = 0\n        for c in\
    \ word {\n            if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\"\
    \ || c == \"u\" {\n                consonants += 1\n            }\n        }\n\
    \        if consonants == n {\n            result.append(word)\n        }\n  \
    \  }\n    return result", "    //consonants = 'BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz'\n\
    \    let vowels = Set(\"aeiouAEIOU\")\n    let sArray = s.split(separator: \"\
    \ \")\n    var result: [String] = []\n    for i in sArray {\n        var count\
    \ = 0\n        for j in i {\n            if(!vowels.contains(j)) {\n         \
    \       count += 1\n            }\n        }\n        if(count == n) {\n     \
    \       result.append(String(i))\n        }\n    }\n    return result", "    return\
    \ s.split(separator: \" \").filter { word in\n        var cons = 0\n        let\
    \ vowels = Set(\"aeiou\")\n        for char in word {\n            if !vowels.contains(char)\
    \ {\n                cons += 1\n            }\n        }\n        return cons\
    \ == n\n    }.map { String($0) }", "    var words = [String]()\n    var curr_word\
    \ = \"\"\n    for char in s {\n        if char == \" \" {\n            if count_consonants(str:\
    \ curr_word) == n {\n                words.append(curr_word)\n            }\n\
    \            curr_word = \"\"\n        } else {\n            curr_word += String(char)\n\
    \        }\n    }\n    if count_consonants(str: curr_word) == n {\n        words.append(curr_word)\n\
    \    }\n    return words", "    guard s.count > 0 else { return [] }\n    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let arr = s.split(separator:\
    \ \" \")\n    var result: [String] = []\n    for i in arr {\n        var consonants\
    \ = 0\n        for j in i {\n            if !vowels.contains(String(j)) {\n  \
    \              consonants += 1\n            }\n        }\n        if consonants\
    \ == n {\n            result.append(String(i))\n        }\n    }\n    return result",
  "  var consonants = CharacterSet(charactersIn: \"BbCcDdFfGgHhJjKkLlMmNnPpQqRrSsTtVvWwXxYyZz\"\
    )\n  var words: [String] = []\n  for word in s.components(separatedBy: \" \")\
    \ {\n    let numConsonants = word.filter({ consonants.contains($0.unicodeScalars.first!)\
    \ }).count\n    if numConsonants == n {\n      words.append(word)\n    }\n  }\n\
    \  return words", "    guard !s.isEmpty else { return [] }\n    let words = s.split(separator:\
    \ \" \")\n    var result = [String]()\n    for word in words {\n        let wordConsonants\
    \ = word.filter{!\"aeiouAEIOU\".contains($0)}\n        if wordConsonants.count\
    \ == n {\n            result.append(String(word))\n        }\n    }\n    return\
    \ result", "    let arr = s.components(separatedBy: \" \")\n    var res: [String]\
    \ = []\n    for i in arr {\n        if i.consonants_count == n {\n           \
    \ res.append(i)\n        }\n    }\n    return res", "    var arrayOfWords = s.components(separatedBy:\
    \ \" \")\n    var arrayConsonants = [String]()\n    var arrayConsonantsWithN =\
    \ [String]()\n    for i in 0..<arrayOfWords.count {\n        var stringConsonants\
    \ = \"\"\n        for j in 0..<arrayOfWords[i].count {\n            let index\
    \ = arrayOfWords[i].index(arrayOfWords[i].startIndex, offsetBy: j)\n         \
    \   let charIndex = String(arrayOfWords[i][index])\n            if(charIndex ==\
    \ \"b\" || charIndex == \"c\" || charIndex == \"d\" || charIndex == \"f\" || charIndex\
    \ == \"g\" || charIndex == \"h\" || charIndex == \"j\" || charIndex == \"k\" ||\
    \ charIndex == \"l\" || charIndex == \"m\" || charIndex == \"n\" || charIndex\
    \ == \"p\" || charIndex == \"q\" || charIndex == \"r\" || charIndex == \"s\" ||\
    \ charIndex == \"t\" || charIndex == \"v\" || charIndex == \"w\" || charIndex\
    \ == \"x\" || charIndex == \"z\") {\n                stringConsonants += charIndex\n\
    \            }\n        }\n        arrayConsonants.append(stringConsonants)\n\
    \    }\n    for i in 0..<arrayConsonants.count {\n        if(arrayConsonants[i].count\
    \ == n) {\n            arrayConsonantsWithN.append(arrayOfWords[i])\n        }\n\
    \    }\n    return arrayConsonantsWithN", '  return s.split(separator: " ").filter
    { $0.containsExactlyNConsonants(n) }', "    return s.split(separator: \" \").filter\
    \ {word in\n        return word.unicodeScalars.filter {\n            !consonants.contains($0)\n\
    \        }.count == n\n    }.map { String($0) }", "    return s.split(separator:\
    \ \" \").filter {\n        $0.count == n && $0.unicodeScalars.filter {\n     \
    \       !CharacterSet.letters.contains($0)\n        }.count == n\n    }.map {\n\
    \        String($0)\n    }", "    // Your code here\n    return []", "    let\
    \ vowels = \"aeiouAEIOU\"\n    let characters = s.components(separatedBy: \" \"\
    )\n    var result = [String]()\n    for char in characters {\n        var counter\
    \ = 0\n        for letter in char {\n            if !vowels.contains(letter) {\n\
    \                counter += 1\n            }\n        }\n        if counter ==\
    \ n {\n            result.append(char)\n        }\n    }\n    return result",
  "  guard !s.isEmpty else { return [] }\n  let consonants = CharacterSet(charactersIn:\
    \ \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\")\n  return s.split(separator:\
    \ \" \").filter {\n    $0.rangeOfCharacter(from: consonants) != nil &&\n    $0.rangeOfCharacter(from:\
    \ consonants, options: .caseInsensitive) == nil\n  }.filter { $0.count == n }",
  '  return []', "    let vowels = \"aeiouAEIOU\"\n    let words = s.split(separator:\
    \ \" \")\n    var result = [String]()\n    for word in words {\n        var counter\
    \ = 0\n        for char in word {\n            if !vowels.contains(char) {\n \
    \               counter += 1\n            }\n        }\n        if counter ==\
    \ n {\n            result.append(String(word))\n        }\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    let stringArray = s.split(separator: \" \")\n \
    \   var outputArray = [String]()\n    for word in stringArray {\n        var consonantCount\
    \ = 0\n        for character in word {\n            if !vowels.contains(character)\
    \ {\n                consonantCount += 1\n            }\n        }\n        if\
    \ consonantCount == n {\n            outputArray.append(String(word))\n      \
    \  }\n    }\n    return outputArray", "    var words = s.split(separator: \" \"\
    )\n    var selectedWords = [String]()\n    for word in words {\n        var word\
    \ = word\n        var count = 0\n        for letter in word {\n            if\
    \ !letter.isVowel() {\n                count += 1\n            }\n        }\n\
    \        if count == n {\n            selectedWords.append(String(word))\n   \
    \     }\n    }\n    return selectedWords", "    var words = [String]()\n    let\
    \ vowels = \"aeiouAEIOU\"\n    let consonants = s.filter({\n        !vowels.contains($0)\n\
    \    })\n    let pairs = s.components(separatedBy: \" \")\n    pairs.forEach {\
    \ word in\n        let count = word.filter({\n            !vowels.contains($0)\n\
    \        }).count\n        if count == n {\n            words.append(word)\n \
    \       }\n    }\n    return words", "    var res : [String] = []\n    let words\
    \ = s.components(separatedBy: \" \")\n    for word in words {\n        if n ==\
    \ count_consonants(s: word) {\n            res.append(word)\n        }\n    }\n\
    \    return res", "    let words = s.components(separatedBy: \" \")\n    let vowels\
    \ = \"aeiouAEIOU\"\n    var output = [String]()\n    var consonants = 0\n    for\
    \ word in words {\n        for letter in word {\n            if !vowels.contains(letter)\
    \ {\n                consonants += 1\n            }\n        }\n        if consonants\
    \ == n {\n            output.append(word)\n        }\n        consonants = 0\n\
    \    }\n    return output", "    return s.components(separatedBy: \" \").filter({\
    \ (word) -> Bool in\n        return word.count - word.uppercased().filter({ (c)\
    \ -> Bool in\n            return !is_vowel(c: c)\n        }).count == n\n    })",
  "\treturn s.components(separatedBy: \" \").filter { $0.contains_exactly(n: n) }",
  "    var result = [String]()\n    for word in s.components(separatedBy: \" \") {\n\
    \        if findConsonants(word) == n {\n            result.append(word)\n   \
    \     }\n    }\n    return result", "    let words = s.components(separatedBy:\
    \ \" \")\n    var wordsWithNConsonants = [String]()\n    for word in words {\n\
    \        if countConsonants(word: word) == n {\n            wordsWithNConsonants.append(word)\n\
    \        }\n    }\n    return wordsWithNConsonants", "\tlet vowels = \"AEIOUaeiou\"\
    \n\tlet words = s.split(separator: \" \")\n\tvar result: [String] = []\n\tfor\
    \ word in words {\n\t\tvar count = 0\n\t\tfor c in word {\n\t\t\tif !vowels.contains(c)\
    \ {\n\t\t\t\tcount += 1\n\t\t\t}\n\t\t}\n\t\tif count == n {\n\t\t\tresult.append(String(word))\n\
    \t\t}\n\t}\n\treturn result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"y\"]\n    var output: [String] = []\n    let words = s.components(separatedBy:\
    \ \" \")\n    for word in words {\n        var word = word.lowercased()\n    \
    \    for vowel in vowels {\n            word = word.replacingOccurrences(of: vowel,\
    \ with: \"\")\n        }\n        if word.count == n {\n            output.append(word)\n\
    \        }\n    }\n    return output", "    // your code here\n    return []",
  "  var result = [String]()\n  let words = s.split(separator: \" \")\n  let vowels\
    \ = \"aeiou\"\n  for word in words {\n    let consonants = word.filter { !vowels.contains($0)\
    \ }\n    if consonants.count == n {\n      result.append(String(word))\n    }\n\
    \  }\n  return result", "\treturn []", "    let letters = CharacterSet.letters\n\
    \    let words = s.components(separatedBy: \" \")\n    var result = [String]()\n\
    \    for word in words {\n        var count = 0\n        for character in word.unicodeScalars\
    \ {\n            if !letters.contains(character) {\n                count += 1\n\
    \            }\n        }\n        if count == n {\n            result.append(word)\n\
    \        }\n    }\n    return result", "    let words = s.split(separator: \"\
    \ \")\n    var result = [String]()\n    for word in words {\n        if consonants(in:\
    \ word) == n {\n            result.append(String(word))\n        }\n    }\n  \
    \  return result", "    var result: [String] = []\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    for word in s.split(separator: \" \") {\n        var cn = 0\n        for\
    \ letter in word {\n            if consonants.contains(letter) {\n           \
    \     cn += 1\n            }\n        }\n        if cn == n {\n            result.append(String(word))\n\
    \        }\n    }\n    return result", '    return s.split(separator: " ").filter({
    return $0.count == n}).map({ String($0) })', "    let vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\", \"y\"]\n    let symbols = CharacterSet.symbols\n    let\
    \ punctuation = CharacterSet.punctuationCharacters\n    let letters = CharacterSet.letters\n\
    \    let words = s.lowercased().components(separatedBy: \" \")\n    let chars\
    \ = s.lowercased().characters.map{String($0)}\n    var selectedWords = [String]()\n\
    \    var consonants = [String]()\n    for i in 0..<chars.count {\n        if !vowels.contains(chars[i])\
    \ && !symbols.contains(chars[i].unicodeScalars.first!) && !punctuation.contains(chars[i].unicodeScalars.first!)\
    \ && letters.contains(chars[i].unicodeScalars.first!) {\n            consonants.append(chars[i])\n\
    \        }\n    }\n    for i in 0..<words.count {\n        if count_consonants(word:\
    \ words[i]) == n {\n            selectedWords.append(words[i])\n        }\n  \
    \  }\n    return selectedWords", "    // Write your code here!\n    return []",
  "    let vowels = Set(\"aeiouAEIOU\")\n    let words = s.split(separator: \" \"\
    )\n    var result = [String]()\n    for word in words {\n        var numConsonants\
    \ = 0\n        for letter in word {\n            if !vowels.contains(letter) {\n\
    \                numConsonants += 1\n            }\n        }\n        if numConsonants\
    \ == n {\n            result.append(String(word))\n        }\n    }\n    return\
    \ result", '    return s.split(separator: " ").filter({ ($0.count - $0.filter({
    $0.isConsonant }).count) == n }).map { "\($0)" }', "    // your code here\n  \
    \  return []", "  let vowels = Set(\"aeiou\")\n  let s = s.lowercased()\n  let\
    \ words = s.components(separatedBy: \" \")\n  var result = [String]()\n  for word\
    \ in words {\n    var num = 0\n    for c in word.characters {\n      if !vowels.contains(c)\
    \ {\n        num += 1\n      }\n    }\n    if num == n {\n      result.append(word)\n\
    \    }\n  }\n  return result", "    return s.components(separatedBy: .whitespaces)\n\
    \        .filter { $0.filter({ !\"aieouAEIOU\".contains($0) }).count == n }",
  "    guard s.count > 0 else { return [] }\n    let characters = Array(s.characters)\n\
    \    var words = [String]()\n    var word = [Character]()\n    for c in characters\
    \ {\n        if c == \" \" {\n            let consonants = word.filter { !c.is_vowel()\
    \ }\n            if consonants.count == n {\n                words.append(String(word))\n\
    \            }\n            word = []\n        } else {\n            word.append(c)\n\
    \        }\n    }\n    if word.count > 0 {\n        let consonants = word.filter\
    \ { !c.is_vowel() }\n        if consonants.count == n {\n            words.append(String(word))\n\
    \        }\n    }\n    return words", '    return []', "    var result: [String]\
    \ = []\n    var lettersArray: [Character] = []\n    var vowels = Set([\"a\", \"\
    e\", \"i\", \"o\", \"u\"])\n    var word: String = \"\"\n    for letter in s {\n\
    \        if letter == \" \" {\n            for item in word {\n              \
    \  if !vowels.contains(String(item)) {\n                    lettersArray.append(item)\n\
    \                }\n            }\n            if lettersArray.count == n {\n\
    \                result.append(word)\n            }\n            lettersArray\
    \ = []\n            word = \"\"\n        } else {\n            word += String(letter)\n\
    \        }\n    }\n    return result", "    return s.components(separatedBy: \"\
    \ \").filter { (word) -> Bool in\n        let vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n        return word.lowercased().filter({ (c) ->\
    \ Bool in\n            return !vowels.contains(c)\n        }).count == n\n   \
    \ }", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n    var result\
    \ = [String]()\n    for word in s.components(separatedBy: \" \") {\n        var\
    \ count = 0\n        for letter in word {\n            if !vowels.contains(String(letter).lowercased())\
    \ {\n                count += 1\n            }\n        }\n        if count ==\
    \ n {\n            result.append(word)\n        }\n    }\n    return result",
  "    var splitted = s.split(separator: \" \")\n    var res = [String]()\n    for\
    \ i in 0..<splitted.count {\n        if (count_consonants(splitted[i]) == n) {\n\
    \            res.append(String(splitted[i]))\n        }\n    }\n    return res",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n    var words = s.split(separator:\
    \ \" \")\n    var filteredWords = [String]()\n    for word in words {\n      \
    \  let consonants = word.filter { !vowels.contains($0.lowercased()) }\n      \
    \  if consonants.count == n {\n            filteredWords.append(String(word))\n\
    \        }\n    }\n    return filteredWords", "    let words = s.split(separator:\
    \ \" \")\n    var result: [String] = []\n    for word in words {\n        var\
    \ c = 0\n        for char in word {\n            switch char {\n            case\
    \ \"a\", \"e\", \"i\", \"o\", \"u\", \"y\":\n                continue\n      \
    \      default:\n                c += 1\n            }\n        }\n        if\
    \ c == n {\n            result.append(String(word))\n        }\n    }\n    return\
    \ result", "    var words: [String] = []\n    let letters = Set(\"qwrtypsdfghjklzxcvbnm\"\
    )\n    for word in s.split(separator: \" \") {\n        let consonants = word.lowercased().filter({\
    \ letters.contains($0) })\n        if consonants.count == n {\n            words.append(String(word))\n\
    \        }\n    }\n    return words", "    let vowels = Set(\"aeiouAEIOU\")\n\
    \    let words = s.components(separatedBy: \" \")\n    var consonants = [String]()\n\
    \    for word in words {\n        var n1 = 0\n        for letter in word {\n \
    \           if !vowels.contains(letter) {\n                n1 += 1\n         \
    \   }\n        }\n        if n1 == n {\n            consonants.append(word)\n\
    \        }\n    }\n    return consonants", "    let vowels = \"aeiou\"\n    let\
    \ words = s.components(separatedBy: \" \")\n    var result: [String] = []\n  \
    \  for i in 0..<words.count {\n        let word = words[i]\n        var count\
    \ = 0\n        for char in word {\n            if !vowels.contains(char) {\n \
    \               count += 1\n            }\n        }\n        if count == n {\n\
    \            result.append(word)\n        }\n    }\n    return result", "    var\
    \ result: [String] = []\n    s.split(separator: \" \").forEach {\n        if count_consonants(s:\
    \ String($0)) == n {\n            result.append(String($0))\n        }\n    }\n\
    \    return result", "    let vowels = \"aeiou\"\n    let words = s.components(separatedBy:\
    \ \" \")\n    var result = [String]()\n    words.forEach { (word) in\n       \
    \ var count = 0\n        word.forEach { (c) in\n            if !vowels.contains(c)\
    \ {\n                count += 1\n            }\n        }\n        if count ==\
    \ n {\n            result.append(word)\n        }\n    }\n    return result",
  "    var myWordsArray = s.components(separatedBy: \" \")\n    var result = [String]()\n\
    \    for word in myWordsArray {\n        if !word.contains(\" \") {\n        \
    \    let vowels = CharacterSet(charactersIn: \"aeiou\")\n            let cons\
    \ = CharacterSet(charactersIn: \"bcdfghjklmnpqrstvwxyz\")\n            let vc\
    \ = word.lowercased().components(separatedBy: vowels)\n            let cc = word.lowercased().components(separatedBy:\
    \ cons)\n            if cc.count - 1 == n {\n                result.append(word)\n\
    \            }\n        }\n    }\n    return result", "    if (s.isEmpty) {\n\
    \        return [String]()\n    }\n    var result = [String]()\n    var array\
    \ = s.components(separatedBy: \" \")\n    array = array.filter {$0 != \"\"}\n\
    \    for var str in array {\n        var num = 0\n        for var char in str.characters\
    \ {\n            switch char {\n            case \"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\":\n                break\n            default:\n\
    \                num += 1\n            }\n        }\n        if (num == n) {\n\
    \            result.append(str)\n        }\n    }\n    return result", '    return
    s.split(separator: " ").filter { $0.lowercased().filter { "aeiou".contains($0)
    }.count == n }.map { String($0) }', '  return [String]()', "    var words = s.split(separator:\
    \ \" \")\n    for (i, word) in words.enumerated() {\n        words[i] = String(word)\n\
    \    }\n    var consonants = 0\n    var result = [String]()\n    for word in words\
    \ {\n        for letter in word {\n            let letterValue = letter.unicodeScalars.first!.value\n\
    \            if letterValue < 97 || letterValue > 122 {\n                continue\n\
    \            }\n            switch letter {\n            case \"a\", \"e\", \"\
    i\", \"o\", \"u\":\n                continue\n            default:\n         \
    \       consonants += 1\n            }\n        }\n        if consonants == n\
    \ {\n            result.append(word)\n        }\n        consonants = 0\n    }\n\
    \    return result", "    var words : [String] = []\n    var vowel = \"aeiou\"\
    \n    let input = s.lowercased()\n    let inputArr = input.split(separator: \"\
    \ \")\n    for word in inputArr {\n        var count = 0\n        for letter in\
    \ word {\n            if !vowel.contains(letter) {\n                count += 1\n\
    \            }\n        }\n        if count == n {\n            words.append(String(word))\n\
    \        }\n    }\n    return words", "  return s.components(separatedBy: \" \"\
    ).filter { word in\n    word.characters.filter { char in\n      let lowercasedChar\
    \ = String(char).lowercased()\n      return lowercasedChar != \"a\" && lowercasedChar\
    \ != \"e\" && lowercasedChar != \"i\" && lowercasedChar != \"o\" && lowercasedChar\
    \ != \"u\"\n    }.count == n\n  }", "    var results: [String] = []\n    var string\
    \ = \"\"\n    for char in s {\n        if char == \" \" {\n            if consonants_number(s:\
    \ string) == n {\n                results.append(string)\n            }\n    \
    \        string = \"\"\n        } else {\n            string.append(char)\n  \
    \      }\n    }\n    if consonants_number(s: string) == n {\n        results.append(string)\n\
    \    }\n    return results", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"y\"]\n    var words = s.split(separator: \" \")\n    for i in 0..<words.count\
    \ {\n        words[i] = String(words[i])\n    }\n    var result = [String]()\n\
    \    for i in 0..<words.count {\n        var consonants = 0\n        for j in\
    \ 0..<words[i].count {\n            if !vowels.contains(String(words[i][words[i].index(words[i].startIndex,\
    \ offsetBy: j)])) {\n                consonants += 1\n            }\n        }\n\
    \        if consonants == n {\n            result.append(words[i])\n        }\n\
    \    }\n    return result", "    let v = vowels\n    let arr = s.components(separatedBy:\
    \ \" \")\n    var res = [String]()\n    for w in arr {\n        if count_consonants(s:\
    \ w) == n {\n            res.append(w)\n        }\n    }\n    return res", " \
    \   let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n    var words = s.lowercased().split(separator:\
    \ \" \")\n    for i in 0..<words.count {\n        var consonants = 0\n       \
    \ for char in words[i] {\n            if !vowels.contains(String(char)) {\n  \
    \              consonants += 1\n            }\n        }\n        if consonants\
    \ != n {\n            words.remove(at: i)\n        }\n    }\n    return words",
  '    return s.split(separator: " ").map { String($0) }.filter { containsNConsecutiveConsonants($0,
    n) }', "    var result: [String] = []\n    if s.isEmpty {\n        return result\n\
    \    }\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    let wordArr = s.components(separatedBy:\
    \ \" \")\n    for word in wordArr {\n        var wordConsonantsCount = 0\n   \
    \     for c in word.lowercased() {\n            if consonants.contains(c) {\n\
    \                wordConsonantsCount += 1\n            }\n        }\n        if\
    \ wordConsonantsCount == n {\n            result.append(word)\n        }\n   \
    \ }\n    return result", "\treturn s.split(separator: \" \").filter { word in\
    \ word.filter { !$0.isVowel }.count == n }.map { String($0) }", "  let words =\
    \ s.split(separator: \" \")\n  var selectedWords = [String]()\n  for word in words\
    \ {\n    var countConsonants = 0\n    for character in word {\n      if character\
    \ != \"a\" && character != \"e\" && character != \"i\" && character != \"o\" &&\
    \ character != \"u\" {\n        countConsonants += 1\n      }\n    }\n    if countConsonants\
    \ == n {\n      selectedWords.append(String(word))\n    }\n  }\n  return selectedWords",
  "    if s.count == 0 {\n        return []\n    } else {\n        let words = s.components(separatedBy:\
    \ \" \")\n        var res: [String] = []\n        for word in words {\n      \
    \      var numConsonants = 0\n            for letter in word {\n             \
    \   if !isVowel(letter: letter) {\n                    numConsonants += 1\n  \
    \              }\n            }\n            if numConsonants == n {\n       \
    \         res.append(word)\n            }\n        }\n        return res\n   \
    \ }", '    return s.components(separatedBy: " ").filter { consonants(in: $0) ==
    n }', "    var result = [String]()\n    let vowels = \"aeiou\"\n    let s = s.lowercased()\n\
    \    let arr = s.components(separatedBy: \" \")\n    for word in arr {\n     \
    \   var count = 0\n        for char in word {\n            if !vowels.contains(char)\
    \ {\n                count += 1\n            }\n        }\n        if count ==\
    \ n {\n            result.append(word)\n        }\n    }\n    return result",
  "    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"\
    z\"]\n    var consonant_count = 0\n    var result = [String]()\n    let words\
    \ = s.split(separator: \" \")\n    for word in words {\n        for char in word\
    \ {\n            if consonants.contains(String(char).lowercased()) {\n       \
    \         consonant_count += 1\n            }\n        }\n        if consonant_count\
    \ == n {\n            result.append(String(word))\n        }\n        consonant_count\
    \ = 0\n    }\n    return result", "    // TODO: Write select_words function here\n\
    \    return []", "  var result = [String]()\n  let words = s.split(separator:\
    \ \" \")\n  for word in words {\n    var count = 0\n    for letter in word {\n\
    \      if is_consonant(letter: letter) {\n        count += 1\n      }\n    }\n\
    \    if count == n {\n      result.append(String(word))\n    }\n  }\n  return\
    \ result", "    let s = s.lowercased()\n    let vowels = \"aeiou\"\n    let chars\
    \ = Array(s)\n    var word = [Character]()\n    var results = [String]()\n   \
    \ var current_consonants = 0\n    for c in chars {\n        if vowels.contains(c)\
    \ {\n            current_consonants = 0\n        } else {\n            current_consonants\
    \ += 1\n        }\n        if current_consonants <= n {\n            word.append(c)\n\
    \        } else {\n            word = [Character]()\n        }\n        if c ==\
    \ \" \" {\n            if word.count > 0 {\n                let word_string =\
    \ String(word)\n                if word_string.contains(vowels) {\n          \
    \          word = [Character]()\n                } else {\n                  \
    \  results.append(word_string)\n                    word = [Character]()\n   \
    \             }\n            }\n        }\n    }\n    if word.count > 0 {\n  \
    \      let word_string = String(word)\n        if word_string.contains(vowels)\
    \ {\n            word = [Character]()\n        } else {\n            results.append(word_string)\n\
    \            word = [Character]()\n        }\n    }\n    return results", '    return
    []', "  var result = [String]()\n  let consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"z\"]\n  let words = s.split(separator: \" \")\n\
    \  for word in words {\n    var wordString = String(word)\n    var count = 0\n\
    \    for char in word {\n      let character = String(char)\n      if consonants.contains(character)\
    \ {\n        count += 1\n      }\n    }\n    if count == n {\n      result.append(wordString)\n\
    \    }\n  }\n  return result", "    let consonants = [\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\", \"y\"]\n    var result = [String]()\n    let words = s.lowercased().split(separator:\
    \ \" \")\n    for word in words {\n        var consonant_counter = 0\n       \
    \ for i in word {\n            if consonants.contains(String(i)) {\n         \
    \       consonant_counter += 1\n            }\n        }\n        if consonant_counter\
    \ == n {\n            result.append(String(word))\n        }\n    }\n    return\
    \ result", "    let vowels = Set(\"aeiou\")\n    let words = s.split(separator:\
    \ \" \")\n    var r = [String]()\n    for word in words {\n        var c = 0\n\
    \        for character in word {\n            if !vowels.contains(character) {\n\
    \                c += 1\n            }\n        }\n        if c == n {\n     \
    \       r.append(String(word))\n        }\n    }\n    return r", "    let vowels\
    \ = \"aeiou\"\n    let words = s.components(separatedBy: \" \")\n    return words.filter({\
    \ word in word.lowercased().filter({ vowels.contains($0) }).count == n })", "\t\
    return []", "    guard s.count > 0 else { return [] }\n    let vowels = \"aeiou\"\
    \n    let words = s.split(separator: \" \")\n    return words.filter {\n     \
    \   $0.filter { !vowels.contains($0) }.count == n\n    }", "    let l = \"a,e,i,o,u,y\"\
    .components(separatedBy: \",\")\n    let t = s.components(separatedBy: \" \")\n\
    \    var r = [String]()\n    for i in t {\n        var c = 0\n        for j in\
    \ i {\n            if !l.contains(String(j)) {\n                c += 1\n     \
    \       }\n        }\n        if c == n {\n            r.append(i)\n        }\n\
    \    }\n    return r", "    return s.components(separatedBy: \" \").filter { word\
    \ in\n        word.lowercased().filter { \"aeiou\".contains($0) }.count == n\n\
    \    }", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n    let\
    \ sCharacters = s.components(separatedBy: \" \")\n    var matches = [String]()\n\
    \    for word in sCharacters {\n        var wordConsonants = 0\n        for character\
    \ in word {\n            if !vowels.contains(String(character).lowercased()) {\n\
    \                wordConsonants += 1\n            }\n        }\n        if wordConsonants\
    \ == n {\n            matches.append(word)\n        }\n    }\n    return matches",
  "  let vowels = \"aeiouy\"\n  let letters = s.lowercased().characters.map { String($0)\
    \ }\n  var words = [[String]]()\n  var nextWord = [String]()\n  var consonantsCount\
    \ = 0\n  for letter in letters {\n    if letter == \" \" {\n      words.append(nextWord)\n\
    \      nextWord = []\n      consonantsCount = 0\n    } else if vowels.contains(letter)\
    \ {\n      nextWord.append(letter)\n    } else {\n      nextWord.append(letter)\n\
    \      consonantsCount += 1\n    }\n  }\n  words.append(nextWord)\n  let result\
    \ = words.filter { $0.count > 1 && consonantsCount == n }\n  return result.map\
    \ { $0.joined() }", "    var words = [String]()\n    var consonants = 0\n    var\
    \ word = \"\"\n    for char in s {\n        if char == \" \" {\n            if\
    \ consonants == n {\n                words.append(word)\n            }\n     \
    \       consonants = 0\n            word = \"\"\n        } else {\n          \
    \  if isConsonant(char: char) {\n                consonants += 1\n           \
    \ }\n            word += String(char)\n        }\n    }\n    if consonants ==\
    \ n {\n        words.append(word)\n    }\n    return words", "    let chars =\
    \ s.filter { $0 != \" \" }\n    let arr = chars.map { String($0) }\n    let set\
    \ = arr.filter { $0.count == n }\n    return set", "    var result: [String] =\
    \ []\n    for w in s.components(separatedBy: \" \") {\n        var counter = 0\n\
    \        for c in w {\n            if !isVowel(c: c) {\n                counter\
    \ += 1\n            }\n        }\n        if counter == n {\n            result.append(w)\n\
    \        }\n    }\n    return result", '    return []', "    let consonants =\
    \ [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    var result:\
    \ [String] = []\n    let words = s.split(separator: \" \")\n    for word in words\
    \ {\n        var counter = 0\n        for letter in word {\n            if consonants.contains(String(letter).lowercased())\
    \ {\n                counter += 1\n            }\n        }\n        if counter\
    \ == n {\n            result.append(String(word))\n        }\n    }\n    return\
    \ result", '  return []', "    if s.isEmpty {\n        return []\n    }\n    let\
    \ vowels = Set([\"a\", \"e\", \"i\", \"o\", \"u\"])\n    let words = s.split(separator:\
    \ \" \")\n    var res: [String] = []\n    for word in words {\n        var curr\
    \ = 0\n        for letter in word {\n            if !vowels.contains(String(letter))\
    \ {\n                curr += 1\n            }\n        }\n        if curr == n\
    \ {\n            res.append(String(word))\n        }\n    }\n    return res",
  '    return []', "    var result = [String]()\n    for i in s.split(separator: \"\
    \ \") {\n        var count = 0\n        for j in i {\n            if j != \"a\"\
    \ && j != \"e\" && j != \"i\" && j != \"o\" && j != \"u\" {\n                count\
    \ += 1\n            }\n        }\n        if count == n {\n            result.append(String(i))\n\
    \        }\n    }\n    return result", '    return s.components(separatedBy: "
    ").filter { $0.consonants().count == n }', "    let vowels = \"aeiou\"\n    var\
    \ words = s.split(separator: \" \")\n    var results: [String] = []\n    for i\
    \ in 0..<words.count {\n        var numConsonants = 0\n        for j in 0..<words[i].count\
    \ {\n            if !vowels.contains(words[i][j]) {\n                numConsonants\
    \ += 1\n            }\n        }\n        if numConsonants == n {\n          \
    \  results.append(String(words[i]))\n        }\n    }\n    return results", "\t\
    let vowels = \"aeiou\"\n\tlet words = s.components(separatedBy: \" \")\n\treturn\
    \ words.filter { (word) -> Bool in\n\t\treturn (word.unicodeScalars.filter { !vowels.contains($0)\
    \ }).count == n\n\t}", "    let vowels = \"aeiou\"\n    let words = s.split(separator:\
    \ \" \")\n    var result = [String]()\n    for word in words {\n        var count\
    \ = 0\n        for c in word {\n            if !vowels.contains(c) {\n       \
    \         count += 1\n            }\n        }\n        if count == n {\n    \
    \        result.append(String(word))\n        }\n    }\n    return result", " \
    \   var nConsWords: [String] = []\n    let vowels = Set(\"aeiouAEIOU\")\n    let\
    \ cWords = s.split(separator: \" \")\n    for word in cWords {\n        var cCount\
    \ = 0\n        for char in word {\n            if !vowels.contains(char) {\n \
    \               cCount += 1\n            }\n        }\n        if cCount == n\
    \ {\n            nConsWords.append(String(word))\n        }\n    }\n    return\
    \ nConsWords", "    if s.isEmpty {\n        return []\n    }\n    return s.split(separator:\
    \ \" \").filter { $0.countConsonants() == n }.map(String.init)", "    var consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    var vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n    var result: [String] = []\n\
    \    var wordArray = s.components(separatedBy: \" \")\n    for word in wordArray\
    \ {\n        var consonantCount = 0\n        for char in word {\n            if\
    \ vowels.contains(String(char).lowercased()) {\n                consonantCount\
    \ += 1\n            }\n        }\n        if consonantCount == n {\n         \
    \   result.append(word)\n        }\n    }\n    return result", "    var result\
    \ = [String]()\n    let words = s.split(separator: \" \")\n    for word in words\
    \ {\n        var count = 0\n        for char in word {\n            if is_vowel(c:\
    \ char) {\n                count += 1\n            }\n        }\n        if count\
    \ == n {\n            result.append(String(word))\n        }\n    }\n    return\
    \ result", "    guard s.count > 0 else { return [] }\n    var result: [String]\
    \ = []\n    let words = s.components(separatedBy: \" \")\n    for word in words\
    \ {\n        if word.count > 0 {\n            let consonants = word.filter { \"\
    bcdfghjklmnpqrstvwxyz\".contains($0) }\n            if consonants.count == n {\n\
    \                result.append(word)\n            }\n        }\n    }\n    return\
    \ result", "    let consonants = \"bcdfghjklmnpqrstvwxz\"\n    let vowels = \"\
    aeiouy\"\n    var consonantCount = 0\n    var arr = s.lowercased().split(separator:\
    \ \" \")\n    for x in arr {\n        for y in x {\n            if consonants.contains(y)\
    \ {\n                consonantCount += 1\n            }\n        }\n        if\
    \ consonantCount != n {\n            arr.remove(at: arr.firstIndex(of: x)!)\n\
    \        }\n        consonantCount = 0\n    }\n    return arr", "    return s.components(separatedBy:\
    \ \" \").filter { word in\n        word.lowercased().filter { character in\n \
    \           return !isVowel(character)\n        }.count == n\n    }", "    var\
    \ result: [String] = []\n    let vowels = \"aeiou\"\n    let words = s.components(separatedBy:\
    \ \" \")\n    for word in words {\n        var counter = 0\n        for letter\
    \ in word {\n            if !vowels.contains(letter) {\n                counter\
    \ += 1\n            }\n        }\n        if counter == n {\n            result.append(word)\n\
    \        }\n    }\n    return result", '    return s.components(separatedBy: "
    ").filter { $0.countConsonants() == n }', "    // TODO: Write your code here\n\
    \    return []", "    var result = [String]()\n    if !s.isEmpty {\n        let\
    \ all = s.components(separatedBy: \" \")\n        for i in all {\n           \
    \ if consonants_count(s: i) == n {\n                result.append(i)\n       \
    \     }\n        }\n    }\n    return result", "    if (s.isEmpty) {\n       \
    \ return []\n    }\n\n    let ws = s.split(separator: \" \")\n    var res: [String]\
    \ = []\n    for w in ws {\n        if (countVowels(w: w) == n) {\n           \
    \ res.append(String(w))\n        }\n    }\n    return res", "  guard s.isEmpty\
    \ == false else { return [] }\n  let arr = s.split(separator: \" \")\n  return\
    \ arr.filter { (w) -> Bool in\n    var cnt = 0\n    for char in w {\n      if\
    \ char.isConsonant {\n        cnt += 1\n      }\n    }\n    return cnt == n\n\
    \  }", "    var result = [String]()\n    for word in s.components(separatedBy:\
    \ \" \") {\n        if (countConsonants(word) == n) {\n            result.append(word)\n\
    \        }\n    }\n    return result", "    var s = s\n    var words: [String]\
    \ = []\n    if s.count == 0 {\n        return words\n    }\n    if Array(s)[0]\
    \ == \" \" {\n        s.removeFirst()\n    }\n    while !s.isEmpty {\n       \
    \ if s.firstIndex(of: \" \") == nil {\n            if count_consonants(s) == n\
    \ {\n                words.append(s)\n            }\n            break\n     \
    \   }\n        let word = String(s[..<s.firstIndex(of: \" \")!])\n        if count_consonants(word)\
    \ == n {\n            words.append(word)\n        }\n        s.removeFirst(word.count\
    \ + 1)\n    }\n    return words", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var result: [String] = []\n    let words = s.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word.count == n + 1 {\n        \
    \    if !vowels.contains(word[word.startIndex]) {\n                result.append(word)\n\
    \            }\n        }\n    }\n    return result", "    var words = s.components(separatedBy:\
    \ \" \")\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in 0..<words.count\
    \ {\n        words[i] = words[i].lowercased()\n        for v in vowels {\n   \
    \         words[i] = words[i].replacingOccurrences(of: v, with: \"\")\n      \
    \  }\n    }\n    var result = [String]()\n    for i in 0..<words.count {\n   \
    \     if words[i].count == n {\n            result.append(words[i])\n        }\n\
    \    }\n    return result", '    return []', "  var words = [String]()\n  var\
    \ consonants = 0\n  var currentWord = \"\"\n  s.forEach {\n    if ($0 == \" \"\
    ) {\n      if (consonants == n) {\n        words.append(currentWord)\n      }\n\
    \      consonants = 0\n      currentWord = \"\"\n    } else {\n      if (!isVowel($0))\
    \ {\n        consonants += 1\n      }\n      currentWord.append($0)\n    }\n \
    \ }\n  if (consonants == n) {\n    words.append(currentWord)\n  }\n  return words",
  "  var res = [String]()\n  var i = 0\n  var temp = \"\"\n  var count = 0\n  for\
    \ c in s {\n    if c == \" \" {\n      if count == n {\n        res.append(temp)\n\
    \      }\n      temp = \"\"\n      count = 0\n    } else {\n      if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n        continue\n\
    \      } else {\n        count += 1\n        temp.append(c)\n      }\n    }\n\
    \  }\n  if count == n {\n    res.append(temp)\n  }\n  return res", "    var arr\
    \ = s.split(separator: \" \")\n    let vowels: [Character] = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    var consonants: [String] = []\n    for word in arr {\n\
    \        if !vowels.contains(word.lowercased().first!) {\n            consonants.append(String(word))\n\
    \        }\n    }\n    return consonants", '    return []', "    let vowels =\
    \ Set(\"aeiouAEIOU\")\n    return s.split(separator: \" \").filter { (word) ->\
    \ Bool in\n        var counter = 0\n        for char in word {\n            if\
    \ !vowels.contains(char) {\n                counter += 1\n            }\n    \
    \    }\n        return counter == n\n    }", "    guard !s.isEmpty else { return\
    \ [] }\n    let arr = s.components(separatedBy: \" \")\n    return arr.filter\
    \ { word in word.getConsonants().count == n }", "    if (s.isEmpty) {\n      \
    \  return []\n    }\n    return s.split(separator: \" \").filter { (word) -> Bool\
    \ in\n        word.filter({ (char) -> Bool in\n            \"aeiouAEIOU\".contains(char)\n\
    \        }).count == n\n    }.map { String($0) }", "    var result : [String]\
    \ = []\n    let vowel : Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    let words = s.components(separatedBy: \" \")\n    for word in words {\n \
    \       var cnt : Int = 0\n        for ch in word {\n            if !vowel.contains(ch)\
    \ {\n                cnt += 1\n            }\n        }\n        if cnt == n {\n\
    \            result.append(word)\n        }\n    }\n    return result", '    return
    s.split(separator: " ").filter({ $0.countOfConsonants() == n }).map { String($0)
    }', '    return ["Uncle"]', "    let vowels = \"aeiou\"\n    let letters = s.lowercased().components(separatedBy:\
    \ \" \")\n    var words = [String]()\n    for letter in letters {\n        var\
    \ count = 0\n        for l in letter {\n            if !vowels.contains(l) {\n\
    \                count += 1\n            }\n        }\n        if count == n {\n\
    \            words.append(letter)\n        }\n    }\n    return words", "    let\
    \ consonants = CharacterSet(charactersIn: \"bBcCdDfFgGhHjJkKlLmMnNpPqQrRsStTvVwWxXyYzZ\"\
    )\n    let vowels = CharacterSet(charactersIn: \"aAeEiIoOuU\")\n    var words\
    \ = [String]()\n    let wordCount = s.components(separatedBy: \" \")\n    for\
    \ word in wordCount {\n        var consCount = 0\n        var cons = 0\n     \
    \   var vowel = 0\n        for char in word {\n            if String(char).rangeOfCharacter(from:\
    \ consonants) != nil {\n                consCount += 1\n            }\n      \
    \      if String(char).rangeOfCharacter(from: vowels) != nil {\n             \
    \   vowel += 1\n            }\n        }\n        cons = consCount - vowel\n \
    \       if cons == n {\n            words.append(word)\n        }\n    }\n   \
    \ return words", "    var arr = s.components(separatedBy: \" \")\n    var result\
    \ = [String]()\n    for word in arr {\n        if consonants(s: word) == n {\n\
    \            result.append(word)\n        }\n    }\n    return result", "    let\
    \ consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"\
    ]\n    var count: Int = 0\n    var words = [String]()\n    let myStringArr = s.split(separator:\
    \ \" \")\n    for word in myStringArr {\n        for letter in word {\n      \
    \      if consonants.contains(String(letter).lowercased()) {\n               \
    \ count += 1\n            }\n        }\n        if count == n {\n            words.append(String(word))\n\
    \        }\n        count = 0\n    }\n    return words", '    return s.split(separator:
    " ").filter { $0.filter(is_consonant).count == n }.map { String($0) }', "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let separatedWords = s.components(separatedBy:\
    \ \" \")\n    var selectedWords = [String]()\n    for word in separatedWords {\n\
    \        var count = 0\n        for letter in word {\n            if !vowels.contains(String(letter).lowercased())\
    \ {\n                count += 1\n            }\n        }\n        if count ==\
    \ n {\n            selectedWords.append(word)\n        }\n    }\n    return selectedWords",
  "    var words = s.components(separatedBy: \" \")\n    var res = [String]()\n  \
    \  var vowels = Set<Character>(\"aeiouAEIOU\")\n    words = words.filter { !$0.isEmpty\
    \ }\n    for word in words {\n        var num = 0\n        for letter in word\
    \ {\n            if !vowels.contains(letter) {\n                num += 1\n   \
    \         }\n        }\n        if num == n {\n            res.append(word)\n\
    \        }\n    }\n    return res", "    var words = [String]()\n    var count\
    \ = 0\n    for i in s.lowercased() {\n        if i == \"a\" || i == \"e\" || i\
    \ == \"i\" || i == \"o\" || i == \"u\" {\n            continue\n        } else\
    \ {\n            count += 1\n        }\n    }\n    if count == n {\n        words.append(s)\n\
    \    }\n    return words", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let letters = s.map { $0.lowercased() }\n    var words = [String]()\n \
    \   var word = [Character]()\n    var consonants = 0\n    for letter in letters\
    \ {\n        if letter == \" \" {\n            if consonants == n {\n        \
    \        words.append(String(word))\n            }\n            word = [Character]()\n\
    \            consonants = 0\n        } else if !vowels.contains(letter) {\n  \
    \          consonants += 1\n            word.append(letter)\n        } else {\n\
    \            word.append(letter)\n        }\n    }\n    if consonants == n {\n\
    \        words.append(String(word))\n    }\n    return words", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let charArray = Array(s)\n    var\
    \ word = \"\"\n    var words = [String]()\n    var consonantsCount = 0\n    for\
    \ i in charArray {\n        if i != \" \" {\n            word.append(i)\n    \
    \        if !vowels.contains(String(i)) {\n                consonantsCount +=\
    \ 1\n            }\n        } else {\n            if consonantsCount == n {\n\
    \                words.append(word)\n            }\n            word = \"\"\n\
    \            consonantsCount = 0\n        }\n    }\n    if consonantsCount ==\
    \ n {\n        words.append(word)\n    }\n    return words", "    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    let vowels = \"aeiou\"\n    let words = s.lowercased().components(separatedBy:\
    \ \" \")\n    var result = [String]()\n    for word in words {\n        var count\
    \ = 0\n        for letter in word {\n            if vowels.contains(letter) {\n\
    \                continue\n            }\n            count += 1\n        }\n\
    \        if count == n {\n            result.append(word)\n        }\n    }\n\
    \    return result", "    let string = s.lowercased()\n    let array = string.components(separatedBy:\
    \ \" \")\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\"\
    , \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\"\
    , \"x\", \"y\", \"z\"]\n    var answer: [String] = []\n    for word in array {\n\
    \        var counter = 0\n        for char in word {\n            if consonants.contains(String(char))\
    \ {\n                counter += 1\n            }\n        }\n        if counter\
    \ == n {\n            answer.append(word)\n        }\n    }\n    return answer",
  "    var ret = [String]()\n    var currentWord = \"\"\n    var currentConsonants\
    \ = 0\n    for c in s {\n        if c == \" \" {\n            if currentConsonants\
    \ == n {\n                ret.append(currentWord)\n            }\n           \
    \ currentWord = \"\"\n            currentConsonants = 0\n        } else {\n  \
    \          currentWord += String(c)\n            if c.isConsonant() {\n      \
    \          currentConsonants += 1\n            }\n        }\n    }\n    return\
    \ ret", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var wordCount\
    \ = [String: Int]()\n    var words = [String]()\n    let letters = s.split(separator:\
    \ \" \")\n    for word in letters {\n        let consts = word.filter { !vowels.contains(String($0))\
    \ }\n        wordCount[String(word)] = consts.count\n    }\n    for (word, count)\
    \ in wordCount {\n        if count == n {\n            words.append(word)\n  \
    \      }\n    }\n    return words", "\tvar words = [String]()\n\tvar startIndex\
    \ = s.startIndex\n\tvar endIndex = s.startIndex\n\tvar searchRange = startIndex..<s.endIndex\n\
    \tfor endIndex in searchRange {\n\t\tif String(s[endIndex]) == \" \" {\n\t\t\t\
    let word = String(s[startIndex..<endIndex])\n\t\t\tif consonants(s: word) == n\
    \ {\n\t\t\t\twords.append(word)\n\t\t\t}\n\t\t\tsearchRange = (endIndex..<s.endIndex)\n\
    \t\t\tstartIndex = endIndex\n\t\t}\n\t}\n\tif consonants(s: String(s[startIndex..<s.endIndex]))\
    \ == n {\n\t\twords.append(String(s[startIndex..<s.endIndex]))\n\t}\n\treturn\
    \ words", "  if s.isEmpty {\n    return []\n  }\n\n  var words = s.components(separatedBy:\
    \ \" \")\n  for word in words {\n    if !hasConsonants(word, n) {\n      words.removeAll(where:\
    \ {$0 == word})\n    }\n  }\n  return words", "  let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n  let s = s.lowercased()\n  var words = s.components(separatedBy:\
    \ \" \")\n  var result = [String]()\n  for var word in words {\n    word = word.lowercased()\n\
    \    var counter = 0\n    for letter in word {\n      if !vowels.contains(String(letter))\
    \ {\n        counter += 1\n      }\n    }\n    if counter == n {\n      result.append(word)\n\
    \    }\n  }\n  return result", "    let vowels = \"aeiou\"\n    let words = s.split(separator:\
    \ \" \")\n    var result = [String]()\n    for word in words {\n        var count\
    \ = 0\n        for char in word {\n            if !vowels.contains(char) {\n \
    \               count += 1\n            }\n        }\n        if count == n {\n\
    \            result.append(String(word))\n        }\n    }\n    return result",
  "    if s.isEmpty {\n        return []\n    }\n    var arrayString = s.components(separatedBy:\
    \ \" \")\n    var result: [String] = []\n    for word in arrayString {\n     \
    \   if word.vowels_count() != n {\n            result.append(word)\n        }\n\
    \    }\n    return result", "    guard !s.isEmpty else { return [] }\n    let\
    \ words = s.components(separatedBy: \" \")\n    var result = [String]()\n    for\
    \ word in words {\n        let count = word.filter { $0.isConsonant }.count\n\
    \        if count == n {\n            result.append(word)\n        }\n    }\n\
    \    return result", "    var array = [String]()\n    let words = s.split(separator:\
    \ \" \")\n    let vowels = \"aeiou\"\n    for word in words {\n        var counter\
    \ = 0\n        for letter in word {\n            if !vowels.contains(letter) {\n\
    \                counter += 1\n            }\n        }\n        if counter ==\
    \ n {\n            array.append(String(word))\n        }\n    }\n    return array",
  '    return select_words(s: s, n: n, n: n)', "    let s = s.components(separatedBy:\
    \ \" \")\n    var a: [String] = []\n    for (i, e) in s.enumerated() {\n     \
    \   if vowelCount(e) == n {\n            a.append(e)\n        }\n    }\n    return\
    \ a", "    let consonants = Set(\"bcdfghjklmnpqrstvwxyz\")\n    let arr = s.lowercased().split(separator:\
    \ \" \")\n    var words = [String]()\n    for word in arr {\n        var count\
    \ = 0\n        for char in word {\n            if consonants.contains(char) {\n\
    \                count += 1\n            }\n        }\n        if count == n {\n\
    \            words.append(String(word))\n        }\n    }\n    return words",
  "    var words = [String]()\n    let countConsonants = CharacterSet(charactersIn:\
    \ \"bcdfghjklmnpqrstvwxyz\")\n    let countVowels = CharacterSet(charactersIn:\
    \ \"aeiou\")\n    s.lowercased().split(separator: \" \").forEach { word in\n \
    \       var wordConsonants = 0\n        var wordVowels = 0\n        word.unicodeScalars.forEach\
    \ {\n            let scalar = $0\n            if countConsonants.contains(scalar)\
    \ {\n                wordConsonants += 1\n            } else if countVowels.contains(scalar)\
    \ {\n                wordVowels += 1\n            }\n        }\n        if wordConsonants\
    \ == n {\n            words.append(String(word))\n        }\n    }\n    return\
    \ words", "    var result: [String] = []\n    let source = s.components(separatedBy:\
    \ \" \")\n    for word in source {\n        if countConsonants(word) == n {\n\
    \            result.append(word)\n        }\n    }\n    return result", "    guard\
    \ !s.isEmpty else { return [] }\n    let words = s.components(separatedBy: \"\
    \ \")\n    let vowels = \"aeiou\"\n    return words.filter { word in\n       \
    \ word.lowercased().filter { !vowels.contains($0) }.count == n\n    }", "\tfunc\
    \ count_consonants(s: String) -> Int {\n\t\tfunc is_consonant(c: Character) ->\
    \ Bool {\n\t\t\tswitch c {\n\t\t\tcase \"a\", \"e\", \"i\", \"o\", \"u\", \" \"\
    :\n\t\t\t\treturn false\n\t\t\tdefault:\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\
    \t\treturn s.filter(is_consonant).count\n\t}\n\treturn s.components(separatedBy:\
    \ \" \").filter { count_consonants(s: $0) == n }", "    // your code here\n  \
    \  var arr = s.components(separatedBy: \" \")\n    var result = [String]()\n \
    \   for item in arr {\n        var count = 0\n        for c in item {\n      \
    \      if c != \"a\" && c != \"e\" && c != \"i\" && c != \"o\" && c != \"u\" &&\
    \ c != \"A\" && c != \"E\" && c != \"I\" && c != \"O\" && c != \"U\" {\n     \
    \           count += 1\n            }\n        }\n        if count == n {\n  \
    \          result.append(item)\n        }\n    }\n    return result", "  guard\
    \ !s.isEmpty else { return [] }\n  let vowels = \"aeiou\"\n  let list = s.components(separatedBy:\
    \ \" \")\n  var result = [String]()\n  for str in list {\n    let filtered = str.filter\
    \ { !vowels.contains($0) }\n    if filtered.count == n {\n      result.append(str)\n\
    \    }\n  }\n  return result", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var stringArray = s.components(separatedBy:\
    \ \" \")\n    var stringsWithNconsonants = [String]()\n    var consonantCounter\
    \ = 0\n    for word in stringArray {\n        for char in word {\n           \
    \ for c in consonants {\n                if c == char {\n                    consonantCounter\
    \ += 1\n                }\n            }\n        }\n        if consonantCounter\
    \ == n {\n            stringsWithNconsonants.append(word)\n        }\n       \
    \ consonantCounter = 0\n    }\n    return stringsWithNconsonants", "  guard !s.isEmpty\
    \ else { return [] }\n  let arr = s.components(separatedBy: \" \")\n  let ans\
    \ = arr.filter { word in\n    word.filter { !consonants.contains($0) }.count ==\
    \ n\n  }\n  return ans", "    let words = s.components(separatedBy: \" \")\n \
    \   var result: [String] = []\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    for word in words {\n        var count = 0\n        for letter in word\
    \ {\n            if !vowels.contains(String(letter).lowercased()) {\n        \
    \        count += 1\n            }\n        }\n        if count == n {\n     \
    \       result.append(word)\n        }\n    }\n    return result"]
stop_tokens:
- "\n}"

name: HumanEval_105_by_length
language: swift
prompt: "\n/// Given an array of integers, sort the integers that are between 1 and\
  \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
  \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
  , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(arr:\
  \ [2, 1, 1, 4, 5, 8, 2, 3])\n/// [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\"\
  , \"Two\", \"One\", \"One\"]\n/// If the array is empty, return an empty array:\n\
  /// >>> by_length(arr: [] as [Int])\n/// [] as [String]\n/// If the array has any\
  \ strange number ignore it:\n/// >>> by_length(arr: [1, -1, 55])\n/// [\"One\"]\n\
  func by_length(arr: [Int]) -> [String] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(by_length(arr: [2, 1, 1, 4, 5, 8, 2, 3])\
  \ == [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"\
  ])\nassert(by_length(arr: [] as [Int]) == [] as [String])\nassert(by_length(arr:\
  \ [1, -1, 55]) == [\"One\"])\nassert(by_length(arr: [1, -1, 3, 2]) == [\"Three\"\
  , \"Two\", \"One\"])\nassert(by_length(arr: [9, 4, 8]) == [\"Nine\", \"Eight\",\
  \ \"Four\"])"
completions: ["    var nums = [Int]()\n    for n in arr {\n        if n > 0 && n <\
    \ 10 {\n            nums.append(n)\n        }\n    }\n    nums.sort()\n    var\
    \ result = [String]()\n    var numss = nums.reversed()\n    for n in numss {\n\
    \        if n == 1 {\n            result.append(\"One\")\n        } else if n\
    \ == 2 {\n            result.append(\"Two\")\n        } else if n == 3 {\n   \
    \         result.append(\"Three\")\n        } else if n == 4 {\n            result.append(\"\
    Four\")\n        } else if n == 5 {\n            result.append(\"Five\")\n   \
    \     } else if n == 6 {\n            result.append(\"Six\")\n        } else if\
    \ n == 7 {\n            result.append(\"Seven\")\n        } else if n == 8 {\n\
    \            result.append(\"Eight\")\n        } else if n == 9 {\n          \
    \  result.append(\"Nine\")\n        }\n    }\n    return result", '    return
    arr.filter({$0 >= 1 && $0 <= 9}).sorted().reversed().map({String($0)})', "   \
    \ var result: [String] = []\n    var nums: [Int] = []\n    for el in arr {\n \
    \       if el > 0 && el < 10 {\n            nums.append(el)\n        }\n    }\n\
    \    nums.sort()\n    nums.reverse()\n    for el in nums {\n        switch el\
    \ {\n        case 1:\n            result.append(\"One\")\n        case 2:\n  \
    \          result.append(\"Two\")\n        case 3:\n            result.append(\"\
    Three\")\n        case 4:\n            result.append(\"Four\")\n        case 5:\n\
    \            result.append(\"Five\")\n        case 6:\n            result.append(\"\
    Six\")\n        case 7:\n            result.append(\"Seven\")\n        case 8:\n\
    \            result.append(\"Eight\")\n        case 9:\n            result.append(\"\
    Nine\")\n        default:\n            print(\"\")\n        }\n    }\n    return\
    \ result", '    return arr.filter { $0 > 0 && $0 < 10 }.sorted().reversed().map
    { Array(["One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"])[$0
    - 1] }', "    let filtered = arr.filter({$0 >= 1 && $0 <= 9})\n    let sorted\
    \ = filtered.sorted()\n    let reversed = sorted.reversed()\n    return reversed.map({\n\
    \        switch $0 {\n        case 1:\n            return \"One\"\n        case\
    \ 2:\n            return \"Two\"\n        case 3:\n            return \"Three\"\
    \n        case 4:\n            return \"Four\"\n        case 5:\n            return\
    \ \"Five\"\n        case 6:\n            return \"Six\"\n        case 7:\n   \
    \         return \"Seven\"\n        case 8:\n            return \"Eight\"\n  \
    \      case 9:\n            return \"Nine\"\n        default:\n            return\
    \ \"\"\n        }\n    })", '    return []', "    var sortedArr = arr.filter {\
    \ $0 >= 1 && $0 <= 9 }.sorted()\n    sortedArr.reverse()\n    return sortedArr.map\
    \ { \"\\($0)\" }", '    return arr.filter { $0 > 0 && $0 < 10 }.sorted().reversed().map
    { map_number(number: $0) }', "    var newArr = arr.filter { (x) -> Bool in\n \
    \       return x > 0 && x < 10\n    }\n    newArr.sort()\n    newArr.reverse()\n\
    \    return newArr.map { (x) -> String in\n        switch x {\n        case 1:\n\
    \            return \"One\"\n        case 2:\n            return \"Two\"\n   \
    \     case 3:\n            return \"Three\"\n        case 4:\n            return\
    \ \"Four\"\n        case 5:\n            return \"Five\"\n        case 6:\n  \
    \          return \"Six\"\n        case 7:\n            return \"Seven\"\n   \
    \     case 8:\n            return \"Eight\"\n        case 9:\n            return\
    \ \"Nine\"\n        default:\n            return \"\"\n        }\n    }", "  \
    \  var digits = [String]()\n    let numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n  \
    \  arr.forEach { (num) in\n        guard numbers.contains(num) else { return }\n\
    \        let text = String(num)\n        let digit = text.digit()\n        digits.append(digit)\n\
    \    }\n    digits.sort()\n    digits.reverse()\n    return digits", '    return
    arr.filter { $0 > 0 && $0 < 10 }.sorted(by: >).map { digits[$0 - 1] }', '    return
    sort_array(arr: arr).reversed().map { to_name(digit: $0) }', "    if !arr.isEmpty\
    \ {\n        let validArray = arr.filter({ $0 > 0 && $0 < 10})\n        let reverse\
    \ = validArray.reversed()\n        let dict = [1: \"One\", 2: \"Two\", 3: \"Three\"\
    , 4: \"Four\", 5: \"Five\", 6: \"Six\", 7: \"Seven\", 8: \"Eight\", 9: \"Nine\"\
    ]\n        return reverse.map { dict[$0]! }\n    }\n    return []", '    return
    arr.filter { $0 >= 1 && $0 <= 9 }.sorted().reversed().map { String($0) }', " \
    \ let sorted_array = arr.filter({$0 <= 9 && $0 >= 1}).sorted().reversed()\n  let\
    \ final_array = sorted_array.map { (number) -> String in\n    switch number {\n\
    \    case 1:\n      return \"One\"\n    case 2:\n      return \"Two\"\n    case\
    \ 3:\n      return \"Three\"\n    case 4:\n      return \"Four\"\n    case 5:\n\
    \      return \"Five\"\n    case 6:\n      return \"Six\"\n    case 7:\n     \
    \ return \"Seven\"\n    case 8:\n      return \"Eight\"\n    case 9:\n      return\
    \ \"Nine\"\n    default:\n      return \"\"\n    }\n  }\n  return final_array",
  "    var output = [String]()\n    let letters = [\"One\", \"Two\", \"Three\", \"\
    Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n    var filtered =\
    \ arr.filter{ $0 < 10 && $0 > 0}\n    filtered.sort()\n    for i in filtered.reversed()\
    \ {\n        output.append(letters[i - 1])\n    }\n    return output", "    if\
    \ arr.isEmpty {\n        return []\n    }\n    let sortedArr = arr.filter { $0\
    \ >= 1 && $0 <= 9 }.sorted()\n    return sortedArr.reversed().map { \"\\($0)\"\
    .capitalized }", "    let nums = arr.filter({$0 > 0 && $0 < 10})\n    let sorted\
    \ = nums.sorted()\n    let inversed = sorted.reversed()\n    return inversed.map\
    \ {\n        switch $0 {\n        case 1:\n            return \"One\"\n      \
    \  case 2:\n            return \"Two\"\n        case 3:\n            return \"\
    Three\"\n        case 4:\n            return \"Four\"\n        case 5:\n     \
    \       return \"Five\"\n        case 6:\n            return \"Six\"\n       \
    \ case 7:\n            return \"Seven\"\n        case 8:\n            return \"\
    Eight\"\n        case 9:\n            return \"Nine\"\n        default:\n    \
    \        return \"\"\n        }\n    }", '  return []', "    var result: [String]\
    \ = []\n    var validNumbers: [Int] = []\n    var dictionary: [Int: String] =\
    \ [:]\n    dictionary[1] = \"One\"\n    dictionary[2] = \"Two\"\n    dictionary[3]\
    \ = \"Three\"\n    dictionary[4] = \"Four\"\n    dictionary[5] = \"Five\"\n  \
    \  dictionary[6] = \"Six\"\n    dictionary[7] = \"Seven\"\n    dictionary[8] =\
    \ \"Eight\"\n    dictionary[9] = \"Nine\"\n    \n    for number in arr {\n   \
    \     if (number > 0 && number < 10) {\n            validNumbers.append(number)\n\
    \        }\n    }\n    \n    validNumbers.sort()\n    validNumbers.reverse()\n\
    \    \n    for number in validNumbers {\n        result.append(dictionary[number]!)\n\
    \    }\n    \n    return result", "    let words = [\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n    return arr.filter({\
    \ $0 > 0 && $0 < 10 }).sorted().reversed().map({ words[$0 - 1] })", "    \n  \
    \  return arr.filter({ $0 >= 1 && $0 <= 9 }).sorted(by: >).map({ String($0) })",
  "    // Write your code below this line\n    let validNumbers = arr.filter{ (num)\
    \ -> Bool in\n        num >= 1 && num <= 9\n    }\n    let sortedNumbers = validNumbers.sorted()\n\
    \    var numberNames = [String]()\n    for number in sortedNumbers {\n       \
    \ switch number {\n        case 1:\n            numberNames.append(\"One\")\n\
    \        case 2:\n            numberNames.append(\"Two\")\n        case 3:\n \
    \           numberNames.append(\"Three\")\n        case 4:\n            numberNames.append(\"\
    Four\")\n        case 5:\n            numberNames.append(\"Five\")\n        case\
    \ 6:\n            numberNames.append(\"Six\")\n        case 7:\n            numberNames.append(\"\
    Seven\")\n        case 8:\n            numberNames.append(\"Eight\")\n       \
    \ case 9:\n            numberNames.append(\"Nine\")\n        default:\n      \
    \      print(\"Error\")\n        }\n    }\n    return numberNames.reversed()",
  "    let sorted = arr.filter({$0 >= 1 && $0 <= 9}).sorted().reversed()\n    return\
    \ sorted.map({numberToString(number: $0)})", "    let valid = arr.filter({ $0\
    \ > 0 && $0 < 10 })\n    let names = valid.sorted().reversed().map({ switch $0\
    \ {\n        case 1: return \"One\"\n        case 2: return \"Two\"\n        case\
    \ 3: return \"Three\"\n        case 4: return \"Four\"\n        case 5: return\
    \ \"Five\"\n        case 6: return \"Six\"\n        case 7: return \"Seven\"\n\
    \        case 8: return \"Eight\"\n        case 9: return \"Nine\"\n        default:\
    \ fatalError()\n    }})\n    return names", "  // your code here\n  return []",
  '    return []', "    // write your code here\n    var numberNames: [String] = []\n\
    \    let numberToName = [1: \"One\", 2: \"Two\", 3: \"Three\", 4: \"Four\", 5:\
    \ \"Five\", 6: \"Six\", 7: \"Seven\", 8: \"Eight\", 9: \"Nine\"]\n    var result:\
    \ [String] = []\n    for value in arr {\n        if value >= 1 && value <= 9 {\n\
    \            numberNames.append(numberToName[value]!)\n        }\n    }\n    numberNames.sort(by:\
    \ <)\n    for value in numberNames.reversed() {\n        result.append(value)\n\
    \    }\n    return result", "    let sorted = arr.filter({$0 >= 1 && $0 <= 9}).sorted(by:\
    \ {$0 < $1})\n    return sorted.map({String($0)})", '    return []', "    let\
    \ sorted = arr.filter { $0 > 0 && $0 < 10 }.sorted(by: <)\n    let reversed =\
    \ sorted.reversed()\n    return reversed.map { String($0) }", "    // write your\
    \ code here\n    return []", "  var newArr: [String] = []\n  let nums = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9]\n  let names = [\"One\", \"Two\", \"Three\", \"Four\",\
    \ \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n  for num in arr {\n   \
    \ if nums.contains(num) {\n      newArr.append(names[nums.index(of: num)!])\n\
    \    }\n  }\n  newArr.sort()\n  newArr.reverse()\n  return newArr", "    return\
    \ arr.filter({$0 >= 1 && $0 <= 9}).sorted().reversed().map({num in\n        switch\
    \ num {\n        case 1:\n            return \"One\"\n        case 2:\n      \
    \      return \"Two\"\n        case 3:\n            return \"Three\"\n       \
    \ case 4:\n            return \"Four\"\n        case 5:\n            return \"\
    Five\"\n        case 6:\n            return \"Six\"\n        case 7:\n       \
    \     return \"Seven\"\n        case 8:\n            return \"Eight\"\n      \
    \  case 9:\n            return \"Nine\"\n        default:\n            return\
    \ \"\"\n        }\n    })", "    let numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n \
    \   let names = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"\
    Seven\", \"Eight\", \"Nine\"]\n    let result = arr.filter { numbers.contains($0)\
    \ }.sorted()\n    return result.reversed().map { names[numbers.firstIndex(of:\
    \ $0)!] }", "    var result = arr.filter({ $0 > 0 && $0 < 10 })\n    result.sort()\n\
    \    result.reverse()\n    return result.map({\n        switch $0 {\n        case\
    \ 1: return \"One\"\n        case 2: return \"Two\"\n        case 3: return \"\
    Three\"\n        case 4: return \"Four\"\n        case 5: return \"Five\"\n  \
    \      case 6: return \"Six\"\n        case 7: return \"Seven\"\n        case\
    \ 8: return \"Eight\"\n        case 9: return \"Nine\"\n        default: return\
    \ \"\"\n        }\n    })", "  var result = [String]()\n  let digitCount = 9\n\
    \  var digitCounts = [Int](repeating: 0, count: digitCount + 1)\n  var seen =\
    \ [Bool](repeating: false, count: digitCount + 1)\n  for i in arr {\n    if i\
    \ >= 1 && i <= digitCount {\n      digitCounts[i] += 1\n      seen[i] = true\n\
    \    }\n  }\n  for i in 1...digitCount {\n    if seen[i] {\n      for _ in 0..<digitCounts[i]\
    \ {\n        result.append(numberToString(i))\n      }\n    }\n  }\n  return result.reversed()",
  "    var inter = [Int]()\n    var out = [String]()\n    for i in arr {\n       \
    \ if i <= 9 && i >= 1 {\n            inter.append(i)\n        }\n    }\n    inter.sort()\n\
    \    for i in inter.reversed() {\n        switch i {\n        case 1:\n      \
    \      out.append(\"One\")\n        case 2:\n            out.append(\"Two\")\n\
    \        case 3:\n            out.append(\"Three\")\n        case 4:\n       \
    \     out.append(\"Four\")\n        case 5:\n            out.append(\"Five\")\n\
    \        case 6:\n            out.append(\"Six\")\n        case 7:\n         \
    \   out.append(\"Seven\")\n        case 8:\n            out.append(\"Eight\")\n\
    \        case 9:\n            out.append(\"Nine\")\n        default:\n       \
    \     break\n        }\n    }\n    return out", "    return arr.filter {$0 > 0\
    \ && $0 < 10}\n        .sorted()\n        .reversed()\n        .map { num in\n\
    \            switch num {\n            case 1: return \"One\"\n            case\
    \ 2: return \"Two\"\n            case 3: return \"Three\"\n            case 4:\
    \ return \"Four\"\n            case 5: return \"Five\"\n            case 6: return\
    \ \"Six\"\n            case 7: return \"Seven\"\n            case 8: return \"\
    Eight\"\n            case 9: return \"Nine\"\n            default: return \"\"\
    \n            }\n    }", "    let names = [\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n    return arr.filter({\
    \ $0 >= 1 && $0 <= 9 }).sorted().reversed().map({ names[$0 - 1] })", "    // your\
    \ code here\n    return []", "    let invalidRange = Set(1...9)\n    let strArray\
    \ = arr.filter { invalidRange.contains($0) }.sorted(by: >).map { \"\\($0)\" }\n\
    \    return strArray", '    return ""', "    // Write your code here.\n    let\
    \ num_array = arr.filter { $0 <= 9 && $0 >= 1 }\n    return [\"One\", \"Two\"\
    , \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]", " \
    \   let N = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\"]\n    let sorted = arr.filter({ $0 > 0 && $0 < 10 }).sorted()\n\
    \    return sorted.reversed().map { N[$0 - 1] }", "    let results = arr.filter\
    \ { (number) -> Bool in\n        return number <= 9 && number >= 1\n    }.sorted().reversed().map\
    \ { (number) -> String in\n        return number.toString()\n    }\n    return\
    \ results", "    // FIXME: Implement me!\n    return []", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    let sorted = arr.filter { $0 <= 9 && $0 >=\
    \ 1 }.sorted()\n    return sorted.map { String(describing: Numeral.init(number:\
    \ $0)) }.reversed()", "    var sorted_arr = arr.filter {\n        $0 > 0 && $0\
    \ < 10\n    }.sorted()\n    sorted_arr.reverse()\n    return sorted_arr.map {\n\
    \        switch $0 {\n        case 1:\n            return \"One\"\n        case\
    \ 2:\n            return \"Two\"\n        case 3:\n            return \"Three\"\
    \n        case 4:\n            return \"Four\"\n        case 5:\n            return\
    \ \"Five\"\n        case 6:\n            return \"Six\"\n        case 7:\n   \
    \         return \"Seven\"\n        case 8:\n            return \"Eight\"\n  \
    \      case 9:\n            return \"Nine\"\n        default:\n            return\
    \ \"\"\n        }\n    }", "    let validDigits = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\
    \    let validDigitsSet = Set(validDigits)\n    let names = [\"One\", \"Two\"\
    , \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n  \
    \  let sorted = arr.filter {validDigitsSet.contains($0)}.sorted()\n    let reversed\
    \ = sorted.reversed()\n    let namesArr = reversed.map {names[$0 - 1]}\n    return\
    \ namesArr", '    return arr.filter { $0 >= 1 && $0 <= 9 }.sorted().reversed().map
    { String($0) }', "    let sortedArray = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n\
    \    return sortedArray.map { String(describing: $0) }.reversed()", "    return\
    \ arr.sorted().reversed().filter { 0..<10 ~= $0 }.map {\n        switch $0 {\n\
    \        case 1: return \"One\"\n        case 2: return \"Two\"\n        case\
    \ 3: return \"Three\"\n        case 4: return \"Four\"\n        case 5: return\
    \ \"Five\"\n        case 6: return \"Six\"\n        case 7: return \"Seven\"\n\
    \        case 8: return \"Eight\"\n        case 9: return \"Nine\"\n        default:\
    \ fatalError()\n        }\n    }", "    let lower = 1\n    let upper = 9\n   \
    \ var numbers = [Int]()\n    var counter = 0\n    for i in arr {\n        if i\
    \ >= lower && i <= upper {\n            numbers.append(i)\n        }\n    }\n\
    \    numbers.sort()\n    numbers.reverse()\n    var result = [String]()\n    for\
    \ i in numbers {\n        switch i {\n        case 1:\n            result.append(\"\
    One\")\n        case 2:\n            result.append(\"Two\")\n        case 3:\n\
    \            result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            counter\
    \ += 1\n        }\n    }\n    if counter == numbers.count {\n        return []\n\
    \    }\n    return result", '    return []', "    let dict: [Int: String] = [1:\
    \ \"One\", 2: \"Two\", 3: \"Three\", 4: \"Four\", 5: \"Five\", 6: \"Six\", 7:\
    \ \"Seven\", 8: \"Eight\", 9: \"Nine\"]\n    let range = 1...9\n    let integerBetweenOneAndNine\
    \ = arr.filter({ range.contains($0) })\n    let sorted = integerBetweenOneAndNine.sorted()\n\
    \    let reversed = sorted.reversed()\n    let words = reversed.map({ dict[$0]!\
    \ })\n    return words", "    return arr.filter({ $0 <= 9 && $0 >= 1 }).sorted().reversed().map({\
    \ num -> String in\n        switch num {\n        case 1:\n            return\
    \ \"One\"\n        case 2:\n            return \"Two\"\n        case 3:\n    \
    \        return \"Three\"\n        case 4:\n            return \"Four\"\n    \
    \    case 5:\n            return \"Five\"\n        case 6:\n            return\
    \ \"Six\"\n        case 7:\n            return \"Seven\"\n        case 8:\n  \
    \          return \"Eight\"\n        case 9:\n            return \"Nine\"\n  \
    \      default:\n            return \"\"\n        }\n    })", "    return arr.filter\
    \ {\n        $0 >= 1 && $0 <= 9\n    }.sorted(by: >).map {\n        digitToString($0)\n\
    \    }", "    let acceptableNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    let filtered\
    \ = arr.filter { acceptableNumbers.contains($0) }\n    let sorted = filtered.sorted\
    \ { $0 < $1 }\n    let reversed = sorted.reversed()\n    let strings = reversed.map\
    \ { number -> String in\n        switch number {\n        case 1:\n          \
    \  return \"One\"\n        case 2:\n            return \"Two\"\n        case 3:\n\
    \            return \"Three\"\n        case 4:\n            return \"Four\"\n\
    \        case 5:\n            return \"Five\"\n        case 6:\n            return\
    \ \"Six\"\n        case 7:\n            return \"Seven\"\n        case 8:\n  \
    \          return \"Eight\"\n        case 9:\n            return \"Nine\"\n  \
    \      default:\n            fatalError(\"This shouldn't happen\")\n        }\n\
    \    }\n    return strings", "    // your code here\n    var arrs = arr.filter\
    \ {$0 <= 9 && $0 >= 1}\n    var nums = [\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n    arrs.sort()\n    arrs\
    \ = arrs.reversed()\n    return arrs.map { nums[$0 - 1] }", '    return []', " \
    \   return arr.sorted().reversed().filter({ $0 >= 1 && $0 <= 9 }).map({\n    \
    \    switch $0 {\n        case 1: return \"One\"\n        case 2: return \"Two\"\
    \n        case 3: return \"Three\"\n        case 4: return \"Four\"\n        case\
    \ 5: return \"Five\"\n        case 6: return \"Six\"\n        case 7: return \"\
    Seven\"\n        case 8: return \"Eight\"\n        case 9: return \"Nine\"\n \
    \       default: return \"\"\n        }\n    })", "    let words = [\"One\", \"\
    Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    ]\n    var result = [String]()\n    for item in arr {\n        if item > 0 &&\
    \ item < 10 {\n            result.append(words[item - 1])\n        }\n    }\n\
    \    return result.reversed()", '    return []', "    \n    var numberArray: [Int]\
    \ = arr.filter{ $0 > 0 && $0 < 10 }\n    numberArray.sort()\n    let resultArray\
    \ = numberArray.map { $0.string }\n    return resultArray.reversed()", '    return
    arr.filter({$0 >= 1 && $0 <= 9}).sorted(by: { $0 > $1 }).map({ String($0) })',
  "    let invalid: [Int] = []\n    let sortedArr = arr.filter { $0 > 0 && $0 < 10\
    \ }.sorted()\n    let reversedArr = sortedArr.reversed()\n    var names: [String]\
    \ = []\n    for number in reversedArr {\n        switch number {\n        case\
    \ 1:\n            names.append(\"One\")\n        case 2:\n            names.append(\"\
    Two\")\n        case 3:\n            names.append(\"Three\")\n        case 4:\n\
    \            names.append(\"Four\")\n        case 5:\n            names.append(\"\
    Five\")\n        case 6:\n            names.append(\"Six\")\n        case 7:\n\
    \            names.append(\"Seven\")\n        case 8:\n            names.append(\"\
    Eight\")\n        case 9:\n            names.append(\"Nine\")\n        default:\n\
    \            names.append(\"Invalid Number!\")\n        }\n    }\n    return names",
  "  let ones = [\"\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"\
    Seven\", \"Eight\", \"Nine\"]\n  let sorted = arr.filter { $0 >= 1 && $0 <= 9\
    \ }.sorted()\n  return sorted.reversed().map { ones[$0] }", "    let ret = sort_by_length(arr:\
    \ arr)\n    return get_names(arr: ret)", "    var result = [String]()\n    let\
    \ words = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\"]\n    for number in arr {\n        if 1...9 ~= number {\n\
    \            result.append(words[number - 1])\n        }\n    }\n    return result.reversed()",
  "    var newArray = arr.filter {$0 < 10 && $0 > 0}\n    newArray.sort()\n    newArray.reverse()\n\
    \    return newArray.map {String(characters: $0.description)}", "    let numbers\
    \ = arr.filter { num in\n        num >= 1 && num <= 9\n    }\n    let sortedNumbers\
    \ = numbers.sorted()\n    let reversedNumbers = sortedNumbers.reversed()\n   \
    \ let numbersArray = reversedNumbers.map { (number) -> String in\n        switch\
    \ number {\n        case 1:\n            return \"One\"\n        case 2:\n   \
    \         return \"Two\"\n        case 3:\n            return \"Three\"\n    \
    \    case 4:\n            return \"Four\"\n        case 5:\n            return\
    \ \"Five\"\n        case 6:\n            return \"Six\"\n        case 7:\n   \
    \         return \"Seven\"\n        case 8:\n            return \"Eight\"\n  \
    \      case 9:\n            return \"Nine\"\n        default:\n            return\
    \ \"\"\n        }\n    }\n    return numbersArray", "    var str = [String]()\n\
    \    for i in arr {\n        if i == 1 {\n            str.append(\"One\")\n  \
    \      } else if i == 2 {\n            str.append(\"Two\")\n        } else if\
    \ i == 3 {\n            str.append(\"Three\")\n        } else if i == 4 {\n  \
    \          str.append(\"Four\")\n        } else if i == 5 {\n            str.append(\"\
    Five\")\n        } else if i == 6 {\n            str.append(\"Six\")\n       \
    \ } else if i == 7 {\n            str.append(\"Seven\")\n        } else if i ==\
    \ 8 {\n            str.append(\"Eight\")\n        } else if i == 9 {\n       \
    \     str.append(\"Nine\")\n        }\n    }\n    str.sort()\n    return str.reversed()",
  '    return arr.filter { $0 >= 1 && $0 <= 9 }.sorted().reversed().map { NumberToWord(rawValue:
    $0)?.description ?? "" }', '    return []', "  let sortedArr = arr.filter({ $0\
    \ >= 1 && $0 <= 9 }).sorted(by: >)\n  let intNames = [1: \"One\", 2: \"Two\",\
    \ 3: \"Three\", 4: \"Four\", 5: \"Five\", 6: \"Six\", 7: \"Seven\", 8: \"Eight\"\
    , 9: \"Nine\"]\n  return sortedArr.map({ intNames[$0]! })", "    var tmp = [Int]()\n\
    \    var tmp2 = [String]()\n    for i in arr {\n        if i > 0 && i < 10 {\n\
    \            tmp.append(i)\n        }\n    }\n    tmp.sort()\n    for i in tmp.reversed()\
    \ {\n        switch i {\n        case 1:\n            tmp2.append(\"One\")\n \
    \       case 2:\n            tmp2.append(\"Two\")\n        case 3:\n         \
    \   tmp2.append(\"Three\")\n        case 4:\n            tmp2.append(\"Four\"\
    )\n        case 5:\n            tmp2.append(\"Five\")\n        case 6:\n     \
    \       tmp2.append(\"Six\")\n        case 7:\n            tmp2.append(\"Seven\"\
    )\n        case 8:\n            tmp2.append(\"Eight\")\n        case 9:\n    \
    \        tmp2.append(\"Nine\")\n        default:\n            tmp2.append(\"\"\
    )\n        }\n    }\n    return tmp2", "    // Implement your solution here!\n\
    \    return arr.filter { $0 >= 1 && $0 <= 9 }.sorted().reversed().map { return\
    \ String(describing: $0) }", '    return arr.filter { x in x >= 1 && x <= 9 }.sorted().reversed().map
    { $0.digit }', "    let tmp = arr.filter { (arg) -> Bool in\n        let (value)\
    \ = arg\n        return value > 0 && value < 10\n    }.sorted { (value1, value2)\
    \ -> Bool in\n        return value1 > value2\n    }\n    var result: [String]\
    \ = []\n    tmp.forEach { (value) in\n        switch value {\n        case 1:\n\
    \            result.append(\"One\")\n        case 2:\n            result.append(\"\
    Two\")\n        case 3:\n            result.append(\"Three\")\n        case 4:\n\
    \            result.append(\"Four\")\n        case 5:\n            result.append(\"\
    Five\")\n        case 6:\n            result.append(\"Six\")\n        case 7:\n\
    \            result.append(\"Seven\")\n        case 8:\n            result.append(\"\
    Eight\")\n        case 9:\n            result.append(\"Nine\")\n        default:\n\
    \            break\n        }\n    }\n    return result", "    var arr = arr.filter\
    \ { $0 >= 1 && $0 <= 9 }\n    arr.sort()\n    arr.reverse()\n    return arr.map\
    \ { stringify($0) }", "    let words = [\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n    let valid = arr.filter\
    \ { (val) -> Bool in\n        return val > 0 && val < 10\n    }\n    let sorted\
    \ = valid.sorted()\n    return sorted.reversed().map({ (val) -> String in\n  \
    \      return words[val - 1]\n    })", "    // your code here\n    return []",
  "    \n    // TODO\n    var numbers = [String]()\n    for number in arr {\n    \
    \    switch number {\n        case 1:\n            numbers.append(\"One\")\n \
    \       case 2:\n            numbers.append(\"Two\")\n        case 3:\n      \
    \      numbers.append(\"Three\")\n        case 4:\n            numbers.append(\"\
    Four\")\n        case 5:\n            numbers.append(\"Five\")\n        case 6:\n\
    \            numbers.append(\"Six\")\n        case 7:\n            numbers.append(\"\
    Seven\")\n        case 8:\n            numbers.append(\"Eight\")\n        case\
    \ 9:\n            numbers.append(\"Nine\")\n        default:\n            break\n\
    \        }\n    }\n    numbers.sort()\n    return numbers.reversed()", "    let\
    \ result: [String] = arr.filter { $0 > 0 && $0 < 10 }.sorted().reversed().map\
    \ { String($0) }\n    return result", "    var newArr: [String] = []\n    for\
    \ num in arr {\n        switch num {\n        case 1:\n            newArr.append(\"\
    One\")\n        case 2:\n            newArr.append(\"Two\")\n        case 3:\n\
    \            newArr.append(\"Three\")\n        case 4:\n            newArr.append(\"\
    Four\")\n        case 5:\n            newArr.append(\"Five\")\n        case 6:\n\
    \            newArr.append(\"Six\")\n        case 7:\n            newArr.append(\"\
    Seven\")\n        case 8:\n            newArr.append(\"Eight\")\n        case\
    \ 9:\n            newArr.append(\"Nine\")\n        default:\n            break\n\
    \        }\n    }\n    newArr.sort()\n    newArr.reverse()\n    return newArr",
  '    return []', "    var result = [String]()\n    for num in arr where (1...9).contains(num)\
    \ {\n        switch num {\n        case 1:\n            result.append(\"One\"\
    )\n        case 2:\n            result.append(\"Two\")\n        case 3:\n    \
    \        result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            break\n\
    \        }\n    }\n    return result.reversed()", "    // your code here\n   \
    \ return []", "    let words = [ \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\" ]\n    return arr.filter { $0 >= 1 &&\
    \ $0 <= 9 }.sorted().reversed().map { words[$0 - 1] }", "    \n    let actualNumber\
    \ = arr.filter({\n        return $0 >= 1 && $0 <= 9\n    })\n    \n    let sortedNumber\
    \ = actualNumber.sorted()\n    \n    let reversedNumber = sortedNumber.reversed()\n\
    \    \n    var stringNumbers = [String]()\n    \n    for number in reversedNumber\
    \ {\n        switch number {\n        case 1:\n            stringNumbers.append(\"\
    One\")\n        case 2:\n            stringNumbers.append(\"Two\")\n        case\
    \ 3:\n            stringNumbers.append(\"Three\")\n        case 4:\n         \
    \   stringNumbers.append(\"Four\")\n        case 5:\n            stringNumbers.append(\"\
    Five\")\n        case 6:\n            stringNumbers.append(\"Six\")\n        case\
    \ 7:\n            stringNumbers.append(\"Seven\")\n        case 8:\n         \
    \   stringNumbers.append(\"Eight\")\n        case 9:\n            stringNumbers.append(\"\
    Nine\")\n        default:\n            break\n        }\n    }\n    \n    return\
    \ stringNumbers", "    if arr.isEmpty {\n        return []\n    }\n    else {\n\
    \        let numbers = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n        let\
    \ words = numbers.map { (number) -> String in\n            switch number {\n \
    \           case 1:\n                return \"One\"\n            case 2:\n   \
    \             return \"Two\"\n            case 3:\n                return \"Three\"\
    \n            case 4:\n                return \"Four\"\n            case 5:\n\
    \                return \"Five\"\n            case 6:\n                return\
    \ \"Six\"\n            case 7:\n                return \"Seven\"\n           \
    \ case 8:\n                return \"Eight\"\n            case 9:\n           \
    \     return \"Nine\"\n            default:\n                return \"\"\n   \
    \         }\n        }\n        return words.reversed()\n    }", "    // your\
    \ code here\n    return []", "    let allowed: Set<Int> = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9]\n    let sorted = arr.filter {allowed.contains($0)}.sorted()\n    let\
    \ reversed = sorted.reversed()\n    let words = reversed.map {\n        switch\
    \ $0 {\n        case 1: return \"One\"\n        case 2: return \"Two\"\n     \
    \   case 3: return \"Three\"\n        case 4: return \"Four\"\n        case 5:\
    \ return \"Five\"\n        case 6: return \"Six\"\n        case 7: return \"Seven\"\
    \n        case 8: return \"Eight\"\n        case 9: return \"Nine\"\n        default:\
    \ return \"\"\n        }\n    }\n    return words", '    // your code goes here',
  "    let sorted = arr.filter({$0 > 0 && $0 < 10}).sorted().reversed()\n    let map\
    \ = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\"\
    , \"Nine\"]\n    return sorted.map({ map[$0 - 1] })", "    var result: [String]\
    \ = []\n    let numToString = [1: \"One\", 2: \"Two\", 3: \"Three\", 4: \"Four\"\
    , 5: \"Five\", 6: \"Six\", 7: \"Seven\", 8: \"Eight\", 9: \"Nine\"]\n    for num\
    \ in arr {\n        if num <= 9 && num >= 1 {\n            result.append(numToString[num]!)\n\
    \        }\n    }\n    return result.sorted().reversed()", '    return []', " \
    \   if arr.isEmpty {\n        return []\n    }\n    var sortedArr = arr.filter({\
    \ $0 > 0 && $0 < 10}).sorted()\n    if sortedArr.isEmpty {\n        return [\"\
    \"]\n    }\n    for (index, val) in sortedArr.enumerated() {\n        switch val\
    \ {\n        case 1:\n            sortedArr[index] = \"One\"\n        case 2:\n\
    \            sortedArr[index] = \"Two\"\n        case 3:\n            sortedArr[index]\
    \ = \"Three\"\n        case 4:\n            sortedArr[index] = \"Four\"\n    \
    \    case 5:\n            sortedArr[index] = \"Five\"\n        case 6:\n     \
    \       sortedArr[index] = \"Six\"\n        case 7:\n            sortedArr[index]\
    \ = \"Seven\"\n        case 8:\n            sortedArr[index] = \"Eight\"\n   \
    \     case 9:\n            sortedArr[index] = \"Nine\"\n        default:\n   \
    \         print(\"error\")\n        }\n    }\n    return sortedArr.reversed()",
  '    return arr.filter({ $0 >= 1 && $0 <= 9}).sorted().reversed().map({ String($0)
    })', "    var result = [String]()\n    var numbersInRange = [Int]()\n    for number\
    \ in arr {\n        if number >= 1 && number <= 9 {\n            numbersInRange.append(number)\n\
    \        }\n    }\n    numbersInRange.sort()\n    for number in numbersInRange.reversed()\
    \ {\n        if number == 1 {\n            result.append(\"One\")\n        } else\
    \ if number == 2 {\n            result.append(\"Two\")\n        } else if number\
    \ == 3 {\n            result.append(\"Three\")\n        } else if number == 4\
    \ {\n            result.append(\"Four\")\n        } else if number == 5 {\n  \
    \          result.append(\"Five\")\n        } else if number == 6 {\n        \
    \    result.append(\"Six\")\n        } else if number == 7 {\n            result.append(\"\
    Seven\")\n        } else if number == 8 {\n            result.append(\"Eight\"\
    )\n        } else if number == 9 {\n            result.append(\"Nine\")\n    \
    \    }\n    }\n    return result", "    var list = [String]()\n    var sorted\
    \ = arr.sorted()\n    let dictionary = [1:\"One\", 2:\"Two\", 3:\"Three\", 4:\"\
    Four\", 5:\"Five\", 6:\"Six\", 7:\"Seven\", 8:\"Eight\", 9:\"Nine\"]\n    for\
    \ i in sorted {\n        if i <= 9 && i >= 1 {\n            list.append(dictionary[i]!)\n\
    \        }\n    }\n    return list.reversed()", "    var names: [String] = []\n\
    \    for num in arr {\n        switch num {\n        case 1:\n            names.append(\"\
    One\")\n        case 2:\n            names.append(\"Two\")\n        case 3:\n\
    \            names.append(\"Three\")\n        case 4:\n            names.append(\"\
    Four\")\n        case 5:\n            names.append(\"Five\")\n        case 6:\n\
    \            names.append(\"Six\")\n        case 7:\n            names.append(\"\
    Seven\")\n        case 8:\n            names.append(\"Eight\")\n        case 9:\n\
    \            names.append(\"Nine\")\n        default:\n            continue\n\
    \        }\n    }\n    names.sort()\n    names.reverse()\n    return names", " \
    \   let digits = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    let names = [\"One\", \"Two\"\
    , \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n  \
    \  var result = [String]()\n    var digits_matching = [Int]()\n    for number\
    \ in arr {\n        for digit in digits {\n            if number == digit {\n\
    \                digits_matching.append(number)\n            }\n        }\n  \
    \  }\n    digits_matching.sort()\n    for digit in digits_matching.reversed()\
    \ {\n        for (index, number) in digits.enumerated() {\n            if digit\
    \ == number {\n                result.append(names[index])\n            }\n  \
    \      }\n    }\n    return result", "    let sorted = arr.filter { 1...9 ~= $0\
    \ }.sorted()\n    let name = [\"\", \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n    return sorted.reversed().map\
    \ { name[$0] }", "  let dic: [Int: String] = [1: \"One\", 2: \"Two\", 3: \"Three\"\
    , 4: \"Four\", 5: \"Five\", 6: \"Six\", 7: \"Seven\", 8: \"Eight\", 9: \"Nine\"\
    ]\n  var sortedArr = arr.filter({ (element) -> Bool in\n    return element > 0\
    \ && element < 10\n  }).sorted()\n  if sortedArr.count < 1 {\n    return []\n\
    \  }\n  return sortedArr.reversed().map({ (element) -> String in\n    return dic[element]!\n\
    \  })", "    var arr = arr.filter { $0 >= 1 && $0 <= 9 }\n    arr.sort()\n   \
    \ var result = [String]()\n    for num in arr.reversed() {\n        result.append(digitToString(digit:\
    \ num))\n    }\n    return result", "    var names: [String] = []\n    for num\
    \ in arr {\n        switch num {\n        case 1:\n            names.append(\"\
    One\")\n        case 2:\n            names.append(\"Two\")\n        case 3:\n\
    \            names.append(\"Three\")\n        case 4:\n            names.append(\"\
    Four\")\n        case 5:\n            names.append(\"Five\")\n        case 6:\n\
    \            names.append(\"Six\")\n        case 7:\n            names.append(\"\
    Seven\")\n        case 8:\n            names.append(\"Eight\")\n        case 9:\n\
    \            names.append(\"Nine\")\n        default:\n            break\n   \
    \     }\n    }\n    return names.sorted().reversed()", '    return arr.filter
    { $0 > 0 && $0 < 10 }.sorted().reversed().map { "\($0)" }', "    let oneThroughNine:\
    \ [Int] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    var strings: [String] = []\n    let\
    \ filteredNumbers = arr.filter({ (int) -> Bool in\n        return oneThroughNine.contains(int)\n\
    \    })\n    let sortedNumbers = filteredNumbers.sorted()\n    let reversedNumbers\
    \ = sortedNumbers.reversed()\n    for number in reversedNumbers {\n        switch\
    \ number {\n        case 1:\n            strings.append(\"One\")\n        case\
    \ 2:\n            strings.append(\"Two\")\n        case 3:\n            strings.append(\"\
    Three\")\n        case 4:\n            strings.append(\"Four\")\n        case\
    \ 5:\n            strings.append(\"Five\")\n        case 6:\n            strings.append(\"\
    Six\")\n        case 7:\n            strings.append(\"Seven\")\n        case 8:\n\
    \            strings.append(\"Eight\")\n        case 9:\n            strings.append(\"\
    Nine\")\n        default:\n            print(\"default\")\n        }\n    }\n\
    \    return strings", "    let nums = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    let text\
    \ = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\"\
    , \"Nine\"]\n    var result = [String]()\n    for i in arr {\n        if nums.contains(i)\
    \ {\n            for index in 0...text.count - 1 {\n                if nums[index]\
    \ == i {\n                    result.append(text[index])\n                }\n\
    \            }\n        }\n    }\n    return result.reversed()", "  var result\
    \ = [String]()\n  let valid = Array(1...9)\n  let words = [\"One\", \"Two\", \"\
    Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n  for number\
    \ in arr {\n    guard valid.contains(number) else { continue }\n    result.append(words[number\
    \ - 1])\n  }\n  return result.reversed()", "    let map = [1:\"One\", 2:\"Two\"\
    , 3:\"Three\", 4:\"Four\", 5:\"Five\", 6:\"Six\", 7:\"Seven\", 8:\"Eight\", 9:\"\
    Nine\"]\n    let a = arr.filter({$0 > 0 && $0 < 10}).sorted()\n    return a.reversed().map({map[$0]!})",
  "    let numbers = arr.filter({$0 > 0 && $0 < 10})\n    var numbersSorted = numbers.sorted()\n\
    \    numbersSorted.reverse()\n    var result = [String]()\n    for number in numbersSorted\
    \ {\n        switch number {\n        case 1:\n            result.append(\"One\"\
    )\n        case 2:\n            result.append(\"Two\")\n        case 3:\n    \
    \        result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            print(\"\
    Error\")\n        }\n    }\n    return result", '    // your code here', "   \
    \ return arr.sorted().reversed().map {\n        switch $0 {\n        case 1: return\
    \ \"One\"\n        case 2: return \"Two\"\n        case 3: return \"Three\"\n\
    \        case 4: return \"Four\"\n        case 5: return \"Five\"\n        case\
    \ 6: return \"Six\"\n        case 7: return \"Seven\"\n        case 8: return\
    \ \"Eight\"\n        case 9: return \"Nine\"\n        default: return \"\"\n \
    \       }\n    }.filter { $0 != \"\" }", '    return []', "    let _ = arr.sorted().filter\
    \ { $0 >= 1 && $0 <= 9 }.reversed().map { [\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][$0 - 1] }\n    return []",
  "    let valid = arr.filter({$0 >= 1 && $0 <= 9})\n    let result = valid.sorted().reversed().map({String($0)})\n\
    \    return result", "    return arr.sorted(by: <).filter({$0 >= 1 && $0 <= 9}).reversed().map({\n\
    \        switch $0 {\n        case 1:\n            return \"One\"\n        case\
    \ 2:\n            return \"Two\"\n        case 3:\n            return \"Three\"\
    \n        case 4:\n            return \"Four\"\n        case 5:\n            return\
    \ \"Five\"\n        case 6:\n            return \"Six\"\n        case 7:\n   \
    \         return \"Seven\"\n        case 8:\n            return \"Eight\"\n  \
    \      case 9:\n            return \"Nine\"\n        default:\n            return\
    \ \"\"\n        }\n    })", "    let ints = arr.filter({ $0 > 0 && $0 < 10 })\n\
    \    let sortedInts = ints.sorted()\n    let reversedInts = sortedInts.reversed()\n\
    \    let stringDigits = reversedInts.map({ \"\\($0)\" })\n    let intDigits =\
    \ stringDigits.map({ Int($0) })\n    let numberNames = intDigits.map({ getNumberName(number:\
    \ $0!) })\n    return numberNames", '  return []', "    var output = [String]()\n\
    \    var numbers = arr.filter { $0 > 0 && $0 < 10 }\n    if numbers.count > 0\
    \ {\n        numbers.sort()\n        numbers.reverse()\n        for number in\
    \ numbers {\n            switch number {\n            case 1:\n              \
    \  output.append(\"One\")\n            case 2:\n                output.append(\"\
    Two\")\n            case 3:\n                output.append(\"Three\")\n      \
    \      case 4:\n                output.append(\"Four\")\n            case 5:\n\
    \                output.append(\"Five\")\n            case 6:\n              \
    \  output.append(\"Six\")\n            case 7:\n                output.append(\"\
    Seven\")\n            case 8:\n                output.append(\"Eight\")\n    \
    \        case 9:\n                output.append(\"Nine\")\n            default:\n\
    \                break\n            }\n        }\n    }\n    return output", " \
    \   let digits = [0:\"Zero\", 1:\"One\", 2:\"Two\", 3:\"Three\", 4:\"Four\", 5:\"\
    Five\", 6:\"Six\", 7:\"Seven\", 8:\"Eight\", 9:\"Nine\"]\n    let a = arr.filter({$0\
    \ >= 1 && $0 <= 9}).sorted()\n    var result = [String]()\n    for num in a.reversed()\
    \ {\n        if let digit = digits[num] {\n            result.append(digit)\n\
    \        }\n    }\n    return result", '    return []', "    // TODO: Implement\
    \ by_length(_:)\n    return arr.sorted(by: <).filter { $0 > 0 && $0 < 10 }.reversed().map\
    \ {\n        switch $0 {\n        case 1:\n            return \"One\"\n      \
    \  case 2:\n            return \"Two\"\n        case 3:\n            return \"\
    Three\"\n        case 4:\n            return \"Four\"\n        case 5:\n     \
    \       return \"Five\"\n        case 6:\n            return \"Six\"\n       \
    \ case 7:\n            return \"Seven\"\n        case 8:\n            return \"\
    Eight\"\n        case 9:\n            return \"Nine\"\n        default:\n    \
    \        return \"Some other number\"\n        }\n    }", "    if (arr.isEmpty)\
    \ {\n        return [];\n    }\n    var output: [String] = [];\n    let sortedArray\
    \ = arr.sorted(by: { $0 < $1 });\n    for i in sortedArray {\n        switch i\
    \ {\n        case 1:\n            output.append(\"One\");\n        case 2:\n \
    \           output.append(\"Two\");\n        case 3:\n            output.append(\"\
    Three\");\n        case 4:\n            output.append(\"Four\");\n        case\
    \ 5:\n            output.append(\"Five\");\n        case 6:\n            output.append(\"\
    Six\");\n        case 7:\n            output.append(\"Seven\");\n        case\
    \ 8:\n            output.append(\"Eight\");\n        case 9:\n            output.append(\"\
    Nine\");\n        default:\n            break;\n        }\n    }\n    output.reverse();\n\
    \    return output;", '    return arr.filter { $0 > 0 && $0 < 10 }.sorted().reversed().map
    { _ in "" }', "    if arr.isEmpty {\n        return []\n    }\n    return arr.filter\
    \ { $0 > 0 && $0 < 10 }.sorted().reversed().map { String(describing: Number(rawValue:\
    \ $0)!) }", "    let allWords = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n    var newArray = [String]()\n  \
    \  for item in arr {\n        if allWords.contains(allWords[item-1]){\n      \
    \      newArray.append(allWords[item-1])\n        }\n    }\n    return newArray.reversed()",
  "    let rtn: [String] = []\n    return rtn", "    let validDigits = arr.filter({\
    \ $0 >= 1 && $0 <= 9 })\n    let namesOfDigits = validDigits.map({ digitToName(digit:\
    \ $0) })\n    return namesOfDigits.reversed()", "    let dict = [1: \"One\", 2:\
    \ \"Two\", 3: \"Three\", 4: \"Four\", 5: \"Five\", 6: \"Six\", 7: \"Seven\", 8:\
    \ \"Eight\", 9: \"Nine\"]\n    let sorted = arr.filter({dict[$0] != nil}).sorted()\n\
    \    return sorted.map({dict[$0]!}).reversed()", "    let temp = arr.filter({$0\
    \ > 0 && $0 < 10}).sorted(by: >)\n    return temp.map({String($0)})", "    let\
    \ sortedByLength = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n    let words =\
    \ sortedByLength.map { $0.getWord() }\n    return words.reversed()", "    let\
    \ sorted_arr = arr.filter({$0 >= 1 && $0 <= 9}).sorted(by: {$0 < $1})\n    let\
    \ reversed_arr = sorted_arr.reversed()\n    let arr_of_strings = reversed_arr.map({String($0)})\n\
    \    let result_arr = arr_of_strings.map({Int($0)!})\n    \n    var new_arr: [String]\
    \ = []\n    \n    for i in result_arr {\n        switch i {\n        case 1:\n\
    \            new_arr.append(\"One\")\n        case 2:\n            new_arr.append(\"\
    Two\")\n        case 3:\n            new_arr.append(\"Three\")\n        case 4:\n\
    \            new_arr.append(\"Four\")\n        case 5:\n            new_arr.append(\"\
    Five\")\n        case 6:\n            new_arr.append(\"Six\")\n        case 7:\n\
    \            new_arr.append(\"Seven\")\n        case 8:\n            new_arr.append(\"\
    Eight\")\n        case 9:\n            new_arr.append(\"Nine\")\n        default:\n\
    \            new_arr.append(\"\")\n        }\n    }\n    return new_arr", '    return
    arr.filter { $0 > 0 && $0 < 10 }.sorted(by: >).map { digitToWord(digit: $0) }',
  "    var sortedArray = arr.filter { $0 >= 1 && $0 <= 9 }.sorted(by: >)\n    let\
    \ namesArray = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\"]\n    return sortedArray.map { (number) -> String in\n \
    \       let index = number - 1\n        return namesArray[index]\n    }", '  return
    []', "    let digits = arr.filter { number in\n        return number > 0 && number\
    \ < 10\n    }\n    let sorted = digits.sorted { $0 < $1 }\n    let reversed =\
    \ sorted.reversed()\n    return reversed.map { number in\n        return String(number)\n\
    \    }", '    return []', "    let words = [\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n    var result = arr.filter({(x:\
    \ Int) -> Bool in x > 0 && x < 10}).sorted(by: >).map({(x: Int) -> String in words[x\
    \ - 1]})\n    return result", "    // Implement me!\n    var result: [String]\
    \ = []\n    let input = arr.filter{$0 > 0 && $0 < 10}\n    for item in input {\n\
    \        switch item {\n        case 1:\n            result.append(\"One\")\n\
    \        case 2:\n            result.append(\"Two\")\n        case 3:\n      \
    \      result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            print(\"\
    Wrong!\")\n        }\n    }\n    return result.sorted().reversed()", "    // Write\
    \ the code here\n    let validArray = arr.filter { (number) -> Bool in\n     \
    \   return number > 0 && number < 10\n    }\n    let mapArray = validArray.map\
    \ { (number) -> String in\n        switch number {\n        case 1:\n        \
    \    return \"One\"\n        case 2:\n            return \"Two\"\n        case\
    \ 3:\n            return \"Three\"\n        case 4:\n            return \"Four\"\
    \n        case 5:\n            return \"Five\"\n        case 6:\n            return\
    \ \"Six\"\n        case 7:\n            return \"Seven\"\n        case 8:\n  \
    \          return \"Eight\"\n        case 9:\n            return \"Nine\"\n  \
    \      default:\n            return \"\"\n        }\n    }\n    return mapArray.sorted(by:\
    \ {$0 > $1})", "    let range = 1...9\n    let int2string = [\"One\", \"Two\"\
    , \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n  \
    \  let s = arr.filter({ range.contains($0) }).sorted().map({ int2string[$0 - 1]\
    \ }).reversed()\n    return s", "    if arr.isEmpty {\n        return []\n   \
    \ }\n    return arr.filter { $0 >= 1 && $0 <= 9 }.sorted().reversed().map { String(describing:\
    \ Digit(rawValue: $0)!) }", "    var res: [String] = []\n    let dict: [Int: String]\
    \ = [1: \"One\", 2: \"Two\", 3: \"Three\", 4: \"Four\", 5: \"Five\", 6: \"Six\"\
    , 7: \"Seven\", 8: \"Eight\", 9: \"Nine\"]\n    for digit in arr {\n        if\
    \ dict[digit] != nil {\n            res.append(dict[digit]!)\n        }\n    }\n\
    \    res.sort()\n    return res.reversed()", '    return arr.filter { $0 > 0 &&
    $0 < 10 }.sorted(by: <).reversed().map { "\($0)" }', '    // your code here',
  "    let set = Set(arr)\n    if set.isEmpty {\n        return []\n    }\n    let\
    \ sortedSet = set.sorted()\n    let validIntegers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\
    \    var validArray = [Int]()\n    var result: [String] = []\n    for int in sortedSet\
    \ {\n        if validIntegers.contains(int) {\n            validArray.append(int)\n\
    \        }\n    }\n    for number in validArray.reversed() {\n        switch number\
    \ {\n        case 1:\n            result.append(\"One\")\n        case 2:\n  \
    \          result.append(\"Two\")\n        case 3:\n            result.append(\"\
    Three\")\n        case 4:\n            result.append(\"Four\")\n        case 5:\n\
    \            result.append(\"Five\")\n        case 6:\n            result.append(\"\
    Six\")\n        case 7:\n            result.append(\"Seven\")\n        case 8:\n\
    \            result.append(\"Eight\")\n        case 9:\n            result.append(\"\
    Nine\")\n        default:\n            print(\"Something wrong\")\n        }\n\
    \    }\n    return result", "    let digit = [1:\"One\", 2:\"Two\", 3:\"Three\"\
    , 4:\"Four\", 5:\"Five\", 6:\"Six\", 7:\"Seven\", 8:\"Eight\", 9:\"Nine\"]\n \
    \   let sorted = arr.filter{ $0 >= 1 && $0 <= 9 }.sorted()\n    return sorted.reversed().map{\
    \ digit[$0]! }", "    let digits = [\n        1: \"One\",\n        2: \"Two\"\
    ,\n        3: \"Three\",\n        4: \"Four\",\n        5: \"Five\",\n       \
    \ 6: \"Six\",\n        7: \"Seven\",\n        8: \"Eight\",\n        9: \"Nine\"\
    \n    ]\n    let sortArray = arr.filter({ (element) -> Bool in\n        return\
    \ element >= 1 && element <= 9\n    }).sorted()\n    let reverseArray = sortArray.reversed()\n\
    \    let result = reverseArray.map({ (element) -> String in\n        return digits[element]!\n\
    \    })\n    return result", "    return arr.filter {\n        $0 >= 1 && $0 <=\
    \ 9\n    }.sorted().reversed().map {\n        String($0)\n    }", "    let sorted\
    \ = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n    let reversed = sorted.reversed()\n\
    \    let mapped = reversed.map { String($0) }\n    return mapped", "    let sorted\
    \ = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n    return sorted.map { String($0)\
    \ }.reversed()", '    return []', "    // Fill in your code here:\n    var result:\
    \ [String] = []\n    for number in arr {\n        switch number {\n        case\
    \ 1:\n            result.append(\"One\")\n        case 2:\n            result.append(\"\
    Two\")\n        case 3:\n            result.append(\"Three\")\n        case 4:\n\
    \            result.append(\"Four\")\n        case 5:\n            result.append(\"\
    Five\")\n        case 6:\n            result.append(\"Six\")\n        case 7:\n\
    \            result.append(\"Seven\")\n        case 8:\n            result.append(\"\
    Eight\")\n        case 9:\n            result.append(\"Nine\")\n        default:\n\
    \            break\n        }\n    }\n    return result.sorted().reversed()",
  "    let array = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n    let reversed =\
    \ array.reversed()\n    return reversed.map { String($0) }", "    var arr = arr.filter({(i:\
    \ Int) -> Bool in i >= 1 && i <= 9}).sorted().reversed()\n    for i in 0..<arr.count\
    \ {\n        switch arr[i] {\n        case 1:\n            arr[i] = \"One\"\n\
    \        case 2:\n            arr[i] = \"Two\"\n        case 3:\n            arr[i]\
    \ = \"Three\"\n        case 4:\n            arr[i] = \"Four\"\n        case 5:\n\
    \            arr[i] = \"Five\"\n        case 6:\n            arr[i] = \"Six\"\n\
    \        case 7:\n            arr[i] = \"Seven\"\n        case 8:\n          \
    \  arr[i] = \"Eight\"\n        case 9:\n            arr[i] = \"Nine\"\n      \
    \  default:\n            break\n        }\n    }\n    return arr", '    return
    arr.filter({ $0 > 0 && $0 < 10 }).sorted().reversed().map({ String($0) })', " \
    \   // your code here\n    var newArray: [String] = []\n    for i in arr {\n \
    \       switch i {\n        case 1:\n            newArray.append(\"One\")\n  \
    \      case 2:\n            newArray.append(\"Two\")\n        case 3:\n      \
    \      newArray.append(\"Three\")\n        case 4:\n            newArray.append(\"\
    Four\")\n        case 5:\n            newArray.append(\"Five\")\n        case\
    \ 6:\n            newArray.append(\"Six\")\n        case 7:\n            newArray.append(\"\
    Seven\")\n        case 8:\n            newArray.append(\"Eight\")\n        case\
    \ 9:\n            newArray.append(\"Nine\")\n        default:\n            break\n\
    \        }\n    }\n    return newArray.sorted(by: >)", "    var str_arr = [String]()\n\
    \    var int_arr = [Int]()\n    for item in arr {\n        if item >= 1 && item\
    \ <= 9 {\n            int_arr.append(item)\n        }\n    }\n    int_arr.sort()\n\
    \    int_arr.reverse()\n    for item in int_arr {\n        switch item {\n   \
    \     case 1:\n            str_arr.append(\"One\")\n        case 2:\n        \
    \    str_arr.append(\"Two\")\n        case 3:\n            str_arr.append(\"Three\"\
    )\n        case 4:\n            str_arr.append(\"Four\")\n        case 5:\n  \
    \          str_arr.append(\"Five\")\n        case 6:\n            str_arr.append(\"\
    Six\")\n        case 7:\n            str_arr.append(\"Seven\")\n        case 8:\n\
    \            str_arr.append(\"Eight\")\n        case 9:\n            str_arr.append(\"\
    Nine\")\n        default:\n            print(\"\")\n        }\n    }\n    return\
    \ str_arr", "    let sorted = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n   \
    \ let reversed = sorted.reversed()\n    let text = reversed.map {\n        switch\
    \ $0 {\n        case 1: return \"One\"\n        case 2: return \"Two\"\n     \
    \   case 3: return \"Three\"\n        case 4: return \"Four\"\n        case 5:\
    \ return \"Five\"\n        case 6: return \"Six\"\n        case 7: return \"Seven\"\
    \n        case 8: return \"Eight\"\n        case 9: return \"Nine\"\n        default:\
    \ return \"Something went wrong\"\n        }\n    }\n    return text", "    //\
    \ Int => String\n    let numbersDictionary = [\n        1: \"One\",\n        2:\
    \ \"Two\",\n        3: \"Three\",\n        4: \"Four\",\n        5: \"Five\",\n\
    \        6: \"Six\",\n        7: \"Seven\",\n        8: \"Eight\",\n        9:\
    \ \"Nine\"\n    ]\n    \n    let filteredArr = arr.filter { $0 > 0 && $0 < 10\
    \ }\n    let sortedArr = filteredArr.sorted { $0 < $1 }\n    let reversedArr =\
    \ sortedArr.reversed()\n    let mappedArr = reversedArr.map { String(numbersDictionary[$0]!)\
    \ }\n    \n    return mappedArr", "    // your code here\n    return []", "  \
    \  let valid = arr.filter { $0 >= 1 && $0 <= 9 }\n    return valid.sorted().reversed().map\
    \ { \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\"\
    , \"Nine\" }[$0 - 1]", "    \n    // TODO: - write some code to solve this coding\
    \ challenge\n    \n    return []", '    return arr.filter { $0 > 0 && $0 < 10
    }.sorted().reversed().map { get_number_name(number: $0) }', "    let copy = arr.filter\
    \ { $0 >= 1 && $0 <= 9 }\n    let res = copy.sorted().reversed().map { num ->\
    \ String in\n        switch num {\n        case 1:\n            return \"One\"\
    \n        case 2:\n            return \"Two\"\n        case 3:\n            return\
    \ \"Three\"\n        case 4:\n            return \"Four\"\n        case 5:\n \
    \           return \"Five\"\n        case 6:\n            return \"Six\"\n   \
    \     case 7:\n            return \"Seven\"\n        case 8:\n            return\
    \ \"Eight\"\n        case 9:\n            return \"Nine\"\n        default:\n\
    \            return \"\"\n        }\n    }\n    return res", "    \n    let sortedNums\
    \ = arr.filter { (num) -> Bool in\n        if num > 0 && num < 10 {\n        \
    \    return true\n        }\n        return false\n    }.sorted { (first, second)\
    \ -> Bool in\n        return first < second\n    }\n    \n    let reversedNums\
    \ = sortedNums.reversed()\n    \n    let result = reversedNums.map { (num) ->\
    \ String in\n        switch num {\n        case 1:\n            return \"One\"\
    \n        case 2:\n            return \"Two\"\n        case 3:\n            return\
    \ \"Three\"\n        case 4:\n            return \"Four\"\n        case 5:\n \
    \           return \"Five\"\n        case 6:\n            return \"Six\"\n   \
    \     case 7:\n            return \"Seven\"\n        case 8:\n            return\
    \ \"Eight\"\n        case 9:\n            return \"Nine\"\n        default:\n\
    \            return \"\"\n        }\n    }\n    \n    return result", '    return
    []', "    let filtered = arr.filter { $0 >= 1 && $0 <= 9 }\n    let sorted = filtered.sorted()\n\
    \    let reversed = sorted.reversed()\n    let names = reversed.map { num in\n\
    \        switch num {\n        case 1: return \"One\"\n        case 2: return\
    \ \"Two\"\n        case 3: return \"Three\"\n        case 4: return \"Four\"\n\
    \        case 5: return \"Five\"\n        case 6: return \"Six\"\n        case\
    \ 7: return \"Seven\"\n        case 8: return \"Eight\"\n        case 9: return\
    \ \"Nine\"\n        default: return \"\"\n        }\n    }\n    return names",
  "    var arr = arr.filter { $0 >= 1 && $0 <= 9 }\n    arr.sort()\n    arr.reverse()\n\
    \    return arr.map { \"\\($0)\" }", "    \n    //Create filtered array containing\
    \ only numbers between 1 and 9\n    let inBounds = arr.filter({ (number) -> Bool\
    \ in\n        number > 0 && number < 10\n    })\n    \n    //create dictionary\
    \ of numbers\n    let numDict = [1: \"One\", 2: \"Two\", 3: \"Three\", 4: \"Four\"\
    , 5: \"Five\", 6: \"Six\", 7: \"Seven\", 8: \"Eight\", 9: \"Nine\"]\n    \n  \
    \  //reverse array of numbers from 1 to 9\n    let arrayReversed = inBounds.reversed()\n\
    \    \n    //map to return the values of dictionary for the keys in reversed array\n\
    \    let mappedArr = arrayReversed.map({ (number) -> String in\n        numDict[number]!\n\
    \    })\n    \n    return mappedArr", "    let numbers = arr.filter { $0 > 0 &&\
    \ $0 < 10 }\n    let sorted = numbers.sorted(by: >)\n    let names = [\"\", \"\
    One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\",\
    \ \"Nine\"]\n    return sorted.map { names[$0] }", "    if arr.isEmpty {\n   \
    \     return []\n    }\n    let sortedArr = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n\
    \    return sortedArr.map { digitName($0) }.reversed()", "    let arr1 = arr.filter\
    \ { $0 >= 1 && $0 <= 9 }\n    let arr2 = arr1.sorted { $0 < $1 }\n    let arr3\
    \ = arr2.reversed()\n    let numberNames = [\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n    let arr4 = arr3.map\
    \ { numberNames[$0 - 1] }\n    return arr4", "    var result: [String] = []\n\
    \    if arr.count == 0 {\n        return result\n    }\n    var sortedArr = arr.filter\
    \ { $0 >= 1 && $0 <= 9 }.sorted()\n    sortedArr.reverse()\n    for item in sortedArr\
    \ {\n        switch item {\n        case 1:\n            result.append(\"One\"\
    )\n        case 2:\n            result.append(\"Two\")\n        case 3:\n    \
    \        result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            result.append(\"\
    \")\n        }\n    }\n    return result", "    let arrSorted = arr.filter { $0\
    \ >= 1 && $0 <= 9 }.sorted().reversed()\n    return arrSorted.map { dict[$0]!\
    \ }", "    let names = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\"\
    , \"Seven\", \"Eight\", \"Nine\"]\n    let sorted = arr.filter { $0 >= 1 && $0\
    \ <= 9 }.sorted().reversed()\n    return sorted.map { names[$0 - 1] }", "    \n\
    \    let result = arr.filter({$0 >= 1 && $0 <= 9}).sorted().reversed().map({String(describing:\
    \ $0)})\n    \n    return result", "    // [1, -1, 55] -> [1]\n    let sorted:\
    \ [Int] = arr.filter { $0 <= 9 && $0 >= 1 }.sorted()\n    // [1] -> [\"One\"]\n\
    \    let reversed: [String] = sorted.reversed().map { num in\n        switch num\
    \ {\n        case 1:\n            return \"One\"\n        case 2:\n          \
    \  return \"Two\"\n        case 3:\n            return \"Three\"\n        case\
    \ 4:\n            return \"Four\"\n        case 5:\n            return \"Five\"\
    \n        case 6:\n            return \"Six\"\n        case 7:\n            return\
    \ \"Seven\"\n        case 8:\n            return \"Eight\"\n        case 9:\n\
    \            return \"Nine\"\n        default:\n            return \"\"\n    \
    \    }\n    }\n    return reversed", "    var result: [String] = []\n    for n\
    \ in arr {\n        if n >= 1 && n <= 9 {\n            result.append(String(n))\n\
    \        }\n    }\n    result.sort(by: <)\n    var res: [String] = []\n    let\
    \ words = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\"]\n    for s in result {\n        res.append(words[Int(s)!\
    \ - 1])\n    }\n    return res.reversed()", '    return sort(arr: arr, operation:
    "a")', "    \n    var newArr: [Int] = []\n    var resultArr: [String] = []\n \
    \   \n    for element in arr {\n        if element >= 1 && element <= 9 {\n  \
    \          newArr.append(element)\n        }\n    }\n    \n    if newArr.count\
    \ == 0 {\n        return []\n    }\n    \n    newArr.sort()\n    newArr.reverse()\n\
    \    \n    for element in newArr {\n        resultArr.append(numberToString(number:\
    \ element))\n    }\n    \n    return resultArr", "    // Your code here\n    return\
    \ []", "    let numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    let names = [\"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    ]\n    var result = [String]()\n    for number in arr {\n        for index in\
    \ 0..<numbers.count {\n            if number == numbers[index] {\n           \
    \     result.append(names[index])\n            }\n        }\n    }\n    return\
    \ result.reversed()", "    // Implement your solution here.\n    var result =\
    \ [String]()\n    var filteredNumbers = [Int]()\n    for number in arr {\n   \
    \     if number > 0 && number < 10 {\n            filteredNumbers.append(number)\n\
    \        }\n    }\n    filteredNumbers.sort(by: <)\n    for number in filteredNumbers.reversed()\
    \ {\n        switch number {\n        case 1:\n            result.append(\"One\"\
    )\n        case 2:\n            result.append(\"Two\")\n        case 3:\n    \
    \        result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            break\n\
    \        }\n    }\n    return result", '    return []', '    return ["One"]',
  "    \n    var output: [String] = []\n    var arr = arr\n    \n    // Sort the integers\
    \ from 1 to 9\n    arr.sort()\n    \n    // Extracting all the integers from 1\
    \ to 9\n    for number in arr {\n        if number > 0 && number < 10 {\n    \
    \        output.append(String(number))\n        }\n    }\n    \n    // Replace\
    \ each digit by its corresponding name from \"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\n    for (index, number) in\
    \ output.enumerated() {\n        switch number {\n        case \"1\":\n      \
    \      output[index] = \"One\"\n        case \"2\":\n            output[index]\
    \ = \"Two\"\n        case \"3\":\n            output[index] = \"Three\"\n    \
    \    case \"4\":\n            output[index] = \"Four\"\n        case \"5\":\n\
    \            output[index] = \"Five\"\n        case \"6\":\n            output[index]\
    \ = \"Six\"\n        case \"7\":\n            output[index] = \"Seven\"\n    \
    \    case \"8\":\n            output[index] = \"Eight\"\n        case \"9\":\n\
    \            output[index] = \"Nine\"\n        default:\n            break\n \
    \       }\n    }\n    \n    // Reverse the resulting array\n    output = output.reversed()\n\
    \    \n    return output", "    var sortedArr = arr.filter { $0 > 0 && $0 < 10\
    \ }.sorted()\n    sortedArr.reverse()\n    return sortedArr.map { numbers[$0]\
    \ }", '    return []', "    // Your code goes here!\n    return []", "    let\
    \ sortArr = arr.filter({ $0 > 0 && $0 < 10 }).sorted()\n    let reverseSortArr\
    \ = sortArr.reversed()\n    var result: [String] = []\n    for item in reverseSortArr\
    \ {\n        switch item {\n        case 1:\n            result.append(\"One\"\
    )\n        case 2:\n            result.append(\"Two\")\n        case 3:\n    \
    \        result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            break\n\
    \        }\n    }\n    return result", "    let names = [\"One\", \"Two\", \"\
    Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n    return\
    \ arr.sorted().filter({ $0 > 0 && $0 < 10 }).reversed().map({ names[$0 - 1] })",
  "    let realNumber = arr.filter {$0 >= 1 && $0 <= 9}\n    var cDict = [Int: String]()\n\
    \    cDict[1] = \"One\"\n    cDict[2] = \"Two\"\n    cDict[3] = \"Three\"\n  \
    \  cDict[4] = \"Four\"\n    cDict[5] = \"Five\"\n    cDict[6] = \"Six\"\n    cDict[7]\
    \ = \"Seven\"\n    cDict[8] = \"Eight\"\n    cDict[9] = \"Nine\"\n    return realNumber.sorted().reversed().map{cDict[$0]!}",
  '    return arr.filter {$0 >= 1 && $0 <= 9}.sorted().reversed().map {String($0)}',
  '    return []', '    return []']
stop_tokens:
- "\n}"

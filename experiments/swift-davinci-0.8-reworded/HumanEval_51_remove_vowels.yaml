name: HumanEval_51_remove_vowels
language: swift
prompt: "\n/// remove_vowels is a function that takes string and returns string without\
  \ vowels.\n/// >>> remove_vowels(text: \"\")\n/// \"\"\n/// >>> remove_vowels(text:\
  \ \"abcdef\")\n/// \"bcdf\"\n/// >>> remove_vowels(text: \"aaaaa\")\n/// \"\"\n\
  /// >>> remove_vowels(text: \"aaBAA\")\n/// \"B\"\n/// >>> remove_vowels(text: \"\
  zbcd\")\n/// \"zbcd\"\nfunc remove_vowels(text: String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
  \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
  ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
  \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
  \ \"ybcd\") == \"ybcd\")"
completions: ["    return text.filter({\n        $0 != \"a\" && $0 != \"A\" && $0\
    \ != \"e\" && $0 != \"E\" && $0 != \"i\" && $0 != \"I\" && $0 != \"o\" && $0 !=\
    \ \"O\" && $0 != \"u\" && $0 != \"U\"\n    })", "    let vowels: Set<Character>\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n \
    \   return String(text.filter { !vowels.contains($0) })", "    var result = \"\
    \"\n    for char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result", "    var output = \"\"\n    for char in\
    \ text {\n        switch char {\n        case \"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\":\n            output += \"\"\n        default:\n\
    \            output += String(char)\n        }\n    }\n    return output", '    return
    text.filter { !is_vowel($0) }', "    // Place your code here\n    var newString\
    \ = \"\"\n    for letter in text {\n        if (!letter.isVowel) {\n         \
    \   newString.append(letter)\n        }\n    }\n    return newString", "    var\
    \ text_without_vowels = \"\"\n    for i in text {\n        switch i {\n      \
    \  case \"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\":\n\
    \            break\n        default:\n            text_without_vowels.append(i)\n\
    \        }\n    }\n    return text_without_vowels", "    var result = \"\"\n \
    \   for c in text {\n        switch c {\n        case \"a\", \"e\", \"i\", \"\
    o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\":\n            continue\n       \
    \ default:\n            result.append(c)\n        }\n    }\n    return result",
  "    let vowels: CharacterSet = CharacterSet(charactersIn: \"aeiouAEIOU\")\n   \
    \ let ", "    var str = text\n    let vowels: [Character] = [\"a\", \"e\", \"\
    i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    for i in str.indices\
    \ {\n        if vowels.contains(str[i]) {\n            str.remove(at: i)\n   \
    \     }\n    }\n    return str", "    let vowels: Set<Character> = [\"a\", \"\
    e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result =\
    \ \"\"\n    for char in text {\n        if !vowels.contains(char) {\n        \
    \    result.append(char)\n        }\n    }\n    return result", "    let vowels\
    \ = Set(\"aeiouyAEIOUY\")\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })", "    var result = \"\"\n    for char in text {\n        if !vowels.contains(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result", " \
    \   var vowels = \"aeiou\"\n    var result = \"\"\n    for char in text {\n  \
    \      if !vowels.contains(char) {\n            result.append(char)\n        }\n\
    \    }\n    return result", '    return text.filter { !$0.isVowel }', "    let\
    \ vowels = \"aeiou\"\n    var res = \"\"\n    for ch in text {\n        if !vowels.contains(ch)\
    \ {\n            res.append(ch)\n        }\n    }\n    return res", "    let vowels:\
    \ [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\"\
    , \"U\"]\n    var result = text\n    for i in 0..<text.count {\n        let char\
    \ = text[text.index(text.startIndex, offsetBy: i)]\n        if vowels.contains(char)\
    \ {\n            result.remove(at: text.index(text.startIndex, offsetBy: i))\n\
    \        }\n    }\n    return result", "    let vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result:\
    \ String = \"\"\n    for char in text {\n        if !vowels.contains(char) {\n\
    \            result.append(char)\n        }\n    }\n    return result", "    let\
    \ vowels = \"aeiou\"\n    var new_text = \"\"\n    for item in text {\n      \
    \  if vowels.contains(item) == false {\n            new_text.append(item)\n  \
    \      }\n    }\n    return new_text", "\treturn \"\"", "    var result = \"\"\
    \n    for c in text {\n        if (c != \"a\" && c != \"A\" && c != \"e\" && c\
    \ != \"E\" && c != \"i\" && c != \"I\" && c != \"o\" && c != \"O\" && c != \"\
    u\" && c != \"U\") {\n            result.append(c)\n        }\n    }\n    return\
    \ result", "    var new_text = \"\"\n    for char in text {\n        if char.uppercased()\
    \ != \"A\" && char.uppercased() != \"E\" && char.uppercased() != \"I\" && char.uppercased()\
    \ != \"O\" && char.uppercased() != \"U\" {\n            new_text.append(char)\n\
    \        }\n    }\n    return new_text", '  return text.replacingOccurrences(of:
    "[aeiouAEIOU]", with: "", options: .regularExpression)', "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result\
    \ = \"\"\n    for c in text {\n        if !vowels.contains(String(c)) {\n    \
    \        result += String(c)\n        }\n    }\n    return result", "    var result:\
    \ String = \"\"\n    for char in text {\n        switch char {\n        case \"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\":\n        \
    \    break\n        default:\n            result.append(char)\n        }\n   \
    \ }\n    return result", '    return String(text.filter { !"aeiouAEIOU".contains($0)
    })', '    return text.filter { !vowels.contains($0) }', "    let vowels: [Character]\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n \
    \   var result = String()\n    for char in text {\n        if !vowels.contains(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result", " \
    \   var new_text = \"\"\n    for letter in text {\n        if !(letter == \"a\"\
    \ || letter == \"e\" || letter == \"i\" || letter == \"o\" || letter == \"u\"\
    \ || letter == \"A\" || letter == \"E\" || letter == \"I\" || letter == \"O\"\
    \ || letter == \"U\") {\n            new_text += String(letter)\n        }\n \
    \   }\n    return new_text", "    let vowels = \"aeiouAEIOU\"\n    var result\
    \ = \"\"\n    for l in text {\n        if !vowels.contains(l) {\n            result.append(l)\n\
    \        }\n    }\n    return result", "    var result: String = \"\"\n    for\
    \ char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result", '    return text.replacingOccurrences(of:
    "[aeiouAEIOU]", with: "", options: .regularExpression)', "    var new_text = \"\
    \"\n    let vowels = \"AaEeIiOoUu\"\n    for letter in text {\n        if !vowels.contains(letter)\
    \ {\n            new_text.append(letter)\n        }\n    }\n    return new_text",
  "    // YOUR CODE GOES HERE\n    return \"\"", "    var res = \"\"\n    for char\
    \ in text {\n        if !char.isVowel {\n            res.append(char)\n      \
    \  }\n    }\n    return res", "    var result = \"\"\n    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    for letter\
    \ in text {\n        if !vowels.contains(String(letter)) {\n            result\
    \ += String(letter)\n        }\n    }\n    return result", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result\
    \ = \"\"\n    for char in text {\n        if (vowels.contains(String(char))) {\n\
    \            continue\n        }\n        result.append(char)\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\"\
    , \"I\", \"O\", \"U\"]\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })", '    return ""', "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\",\
    \ \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var res = \"\"\n    for elem in text\
    \ {\n        if !vowels.contains(String(elem)) {\n            res.append(elem)\n\
    \        }\n    }\n    return res", "    var result: String = \"\"\n    for letter\
    \ in text {\n        if !vowels.contains(letter) {\n            result.append(letter)\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n \
    \   for char in text {\n        if !vowels.contains(String(char)) {\n        \
    \    result.append(char)\n        }\n    }\n    return result", "\tlet vowels:\
    \ Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"\
    O\", \"U\"]\n\treturn String(text.filter({ !vowels.contains($0) }))", "    var\
    \ result = \"\"\n    for c in text {\n        if !vowels.contains(c) {\n     \
    \       result.append(c)\n        }\n    }\n    return result", "    let vowels\
    \ = \"aeiou\"\n    var result = text\n    var i = 0\n    while i < result.count\
    \ {\n        let letter = result[result.index(result.startIndex, offsetBy: i)]\n\
    \        if vowels.contains(letter) {\n            result.remove(at: result.index(result.startIndex,\
    \ offsetBy: i))\n        } else {\n            i += 1\n        }\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\"\
    , \"I\", \"O\", \"U\"]\n    var new_text = text\n    for vowel in vowels {\n \
    \       new_text = new_text.replacingOccurrences(of: vowel, with: \"\")\n    }\n\
    \    return new_text", "    let vowels: Set<Character> = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.filter\
    \ {!vowels.contains($0)})", "    // Initialize a String array to compare against.\n\
    \    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    // Initialize\
    \ an empty String\n    var result = \"\"\n    // Loop through all the characters\
    \ in the string\n    for letter in text {\n        // If the character is NOT\
    \ in the vowels array,\n        // append the character to the result string.\n\
    \        if !vowels.contains(letter) {\n            result.append(letter)\n  \
    \      }\n    }\n    // Return the result string\n    return result", "    let\
    \ vowels = [\"a\", \"A\", \"e\", \"E\", \"i\", \"I\", \"o\", \"O\", \"u\", \"\
    U\"]\n    var result = \"\"\n    for letter in text {\n        if !vowels.contains(String(letter))\
    \ {\n            result += String(letter)\n        }\n    }\n    return result",
  "    var result: String = text\n    for char in vowels {\n        result = result.replacingOccurrences(of:\
    \ char, with: \"\")\n    }\n    return result", "    return text.filter {\n  \
    \      \"aeiouAEIOU\".contains($0) == false\n    }", "    let vowels: [Character]\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n \
    \   var out: String = \"\"\n    for c in text {\n        if !vowels.contains(c)\
    \ {\n            out.append(c)\n        }\n    }\n    return out", "\tif text.isEmpty\
    \ {\n\t\treturn \"\"\n\t}\n\tvar vowels = [Character]()\n\tvowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n\tvar text_clean\
    \ = \"\"\n\tfor letter in text {\n\t\tif !vowels.contains(letter) {\n\t\t\ttext_clean.append(letter)\n\
    \t\t}\n\t}\n\treturn text_clean", "    let vowels: Set<Character> = [\"a\", \"\
    A\", \"e\", \"E\", \"i\", \"I\", \"o\", \"O\", \"u\", \"U\"]\n    return String(text.filter\
    \ { !vowels.contains($0) })", "    let vowels = \"aeiouAEIOU\"\n    return text.filter\
    \ {\n        !vowels.contains($0)\n    }", "    let vowels: [Character] = [\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var text_without_vowels\
    \ = \"\"\n    for index in text.indices {\n        if !vowels.contains(text[index])\
    \ {\n            text_without_vowels.append(text[index])\n        }\n    }\n \
    \   return text_without_vowels", "    // FIXME\n    let vowels: Set<Character>\
    \ = [\"a\", \"A\", \"e\", \"E\", \"i\", \"I\", \"o\", \"O\", \"u\", \"U\"]\n \
    \   return String(text.filter { !vowels.contains($0) })", '    return text.filter
    { !$0.is_vowel }', "    var result = \"\"\n    for char in text {\n        if\
    \ !char.is_vowel() {\n            result.append(char)\n        }\n    }\n    return\
    \ result", "    var result: String = \"\"\n    for i in text {\n        if i !=\
    \ \"a\" && i != \"e\" && i != \"i\" && i != \"o\" && i != \"u\" {\n          \
    \  result.append(i)\n        }\n    }\n    return result", "    var result = text.replacingOccurrences(of:\
    \ \"[aeiou]\", with: \"\", options: .regularExpression)\n    result = result.replacingOccurrences(of:\
    \ \"[AEIOU]\", with: \"\", options: .regularExpression)\n    return result", " \
    \   let vowels = CharacterSet(charactersIn: \"aeiou\")\n    return String(text.filter\
    \ { !vowels.contains($0.unicodeScalars.first!) })", "    let vowels: Set<Character>\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n \
    \   return String(text.filter { !vowels.contains($0) })", "    var result = text.uppercased()\n\
    \    result = result.replacingOccurrences(of: \"A\", with: \"\")\n    result =\
    \ result.replacingOccurrences(of: \"E\", with: \"\")\n    result = result.replacingOccurrences(of:\
    \ \"I\", with: \"\")\n    result = result.replacingOccurrences(of: \"O\", with:\
    \ \"\")\n    result = result.replacingOccurrences(of: \"U\", with: \"\")\n   \
    \ return result", '    return text.filter { !is_vowel($0) }', "    let vowels:\
    \ [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\"\
    , \"U\"]\n    return String(text.filter { !vowels.contains($0) })", "    let vowels\
    \ = \"aeiou\"\n    return text.filter { !vowels.contains($0) }", "    let vowels:\
    \ Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"\
    O\", \"U\"]\n    var result = \"\"\n    for char in text {\n        if !vowels.contains(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result", " \
    \   let vowels = Set(\"aeiouAEIOU\")\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })", '    return text.filter { !$0.isVowel }', '    return
    text.filter { !$0.isVowel }', "    var s = text\n    for c in text {\n       \
    \ if [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"].contains(c)\
    \ {\n            s.remove(at: s.firstIndex(of: c)!)\n        }\n    }\n    return\
    \ s", "\tlet vowels = \"aeiou\"\n\treturn text.filter { !vowels.contains($0) }",
  "  var result = \"\"\n  for char in text {\n    if !is_vowel(char: char) {\n   \
    \   result.append(char)\n    }\n  }\n  return result", "    // TODO\n    var r\
    \ = \"\"\n    for (i, c) in text.enumerated() {\n        if [\"a\", \"e\", \"\
    i\", \"o\", \"u\"].contains(String(c).lowercased()) {\n            continue\n\
    \        }\n        r += String(c)\n    }\n    return r", '    return text.filter
    { !$0.isVowel }', "    var result = \"\"\n    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    for char in text {\n \
    \       if !vowels.contains(String(char)) {\n            result.append(char)\n\
    \        }\n    }\n    return result", "    var res: String = text\n    let vowels:\
    \ Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"\
    O\", \"U\"]\n    res.removeAll(where: { vowels.contains($0) })\n    return res",
  "    var res = \"\"\n    for c in text {\n        if (c != \"a\" && c != \"e\" &&\
    \ c != \"i\" && c != \"o\" && c != \"u\") {\n            res += String(c)\n  \
    \      }\n    }\n    return res", "    var result: String = \"\"\n    for letter\
    \ in text {\n        if !letter.isVowel {\n            result.append(letter)\n\
    \        }\n    }\n    return result", "    var res = \"\"\n    for c in text\
    \ {\n        if !vowels.contains(c) {\n            res.append(c)\n        }\n\
    \    }\n    return res", "\tvar vowels: [Character] = []\n\tvowels.append(\"a\"\
    )\n\tvowels.append(\"e\")\n\tvowels.append(\"i\")\n\tvowels.append(\"o\")\n\t\
    vowels.append(\"u\")\n\tvowels.append(\"A\")\n\tvowels.append(\"E\")\n\tvowels.append(\"\
    I\")\n\tvowels.append(\"O\")\n\tvowels.append(\"U\")\n\tvar ntext: String = \"\
    \"\n\tvar found: Bool = false\n\tfor i in text {\n\t\tfound = false\n\t\tfor j\
    \ in vowels {\n\t\t\tif i == j {\n\t\t\t\tfound = true\n\t\t\t\tbreak\n\t\t\t\
    }\n\t\t}\n\t\tif !found {\n\t\t\tntext.append(i)\n\t\t}\n\t}\n\treturn ntext",
  '    return text.filter { $0.lowercased() != "a" && $0.lowercased() != "e" && $0.lowercased()
    != "i" && $0.lowercased() != "o" && $0.lowercased() != "u" }', "  let vowels =\
    \ \"aeiouAEIOU\"\n  var text = text\n  for vowel in vowels {\n    text = text.replacingOccurrences(of:\
    \ String(vowel), with: \"\")\n  }\n  return text", "    let vowels: Set<Character>\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n \
    \   return String(text.filter { !vowels.contains($0) })", "  var str = text\n\
    \  str.removeAll { $0 == \"a\" || $0 == \"e\" || $0 == \"i\" || $0 == \"o\" ||\
    \ $0 == \"u\" || $0 == \"A\" || $0 == \"E\" || $0 == \"I\" || $0 == \"O\" || $0\
    \ == \"U\" }\n  return str", '    return text.filter({("aeiouAEIOU".range(of:
    $0) == nil)})', "    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.filter { !vowels.contains($0)\
    \ })", "    var result = \"\"\n    for c in text {\n        if (c == \"a\" ||\
    \ c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"A\" || c == \"\
    E\" || c == \"I\" || c == \"O\" || c == \"U\") {\n            continue\n     \
    \   }\n        result += String(c)\n    }\n    return result", "    let vowels\
    \ = \"aeiouAEIOU\"\n    return String(text.filter {!vowels.contains($0)})", "\t\
    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\"\
    , \"I\", \"O\", \"U\"]\n\treturn String(text.filter({ !vowels.contains($0) }))",
  '    return text.filter {$0 != "a" && $0 != "A" && $0 != "e" && $0 != "E" && $0
    != "i" && $0 != "I" && $0 != "o" && $0 != "O" && $0 != "u" && $0 != "U"}', " \
    \   // TODO: Write some code to solve this coding exercise.\n    var result =\
    \ \"\"\n    for c in text {\n        switch c {\n        case \"a\", \"e\", \"\
    i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\":\n            break\n   \
    \     default:\n            result.append(c)\n        }\n    }\n    return result",
  '    return ""', "    let vowels = \"aeiouAEIOU\"\n    var result: String = \"\"\
    \n    for letter in text {\n        if (!vowels.contains(letter)) {\n        \
    \    result.append(letter)\n        }\n    }\n    return result", "    var new_text\
    \ = \"\"\n    for char in text {\n        switch char {\n        case \"a\",\"\
    e\",\"i\",\"o\",\"u\":\n            continue\n        default:\n            new_text.append(char)\n\
    \        }\n    }\n    return new_text", "    var res = \"\"\n    for i in text\
    \ {\n        if i != \"a\" && i != \"e\" && i != \"i\" && i != \"o\" && i != \"\
    u\" {\n            res.append(i)\n        }\n    }\n    return res", "    if text.count\
    \ == 0 {\n        return \"\"\n    }\n    if \"aeiou\".contains(text.last!) {\n\
    \        return remove_vowels(text: String(text.dropLast()))\n    }\n    return\
    \ remove_vowels(text: String(text.dropLast())) + String(text.last!)", "    let\
    \ vowels = \"aeiouAEIOU\"\n    var result = text\n    for vowel in vowels {\n\
    \        result = result.replacingOccurrences(of: String(vowel), with: \"\")\n\
    \    }\n    return result", '    return text.replacingOccurrences(of: "[aeiouAEIOU]",
    with: "", options: .regularExpression)', "    let vowels: Set<Character> = [\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result\
    \ = String()\n    for char in text {\n        if !vowels.contains(char) {\n  \
    \          result.append(char)\n        }\n    }\n    return result", '    return
    text.characters.filter({ !vowels.contains($0) }).reduce("", +)', "    var result:\
    \ String = \"\"\n    for char in text {\n        if \"aeiouAEIOU\".contains(char)\
    \ {\n            continue\n        }\n        result.append(char)\n    }\n   \
    \ return result", "    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\",\
    \ \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result: String = \"\"\n \
    \   for letter in text {\n        if !vowels.contains(letter) {\n            result.append(letter)\n\
    \        }\n    }\n    return result", "    var result: String = \"\"\n    for\
    \ char in text {\n        if !char.is_vowel() {\n            result.append(char)\n\
    \        }\n    }\n    return result", "    let vowels = [\"a\", \"A\", \"e\"\
    , \"E\", \"i\", \"I\", \"o\", \"O\", \"u\", \"U\"]\n    var vtext = text\n   \
    \ for v in vowels {\n        vtext = vtext.replacingOccurrences(of: v, with: \"\
    \")\n    }\n    return vtext", "    let vowels: Set<Character> = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.filter\
    \ { !vowels.contains($0) })", "    let vowels = CharacterSet(charactersIn: \"\
    AEIOUaeiou\")\n    return text.filter { !vowels.contains($0.unicodeScalars.first!)\
    \ }", '    return String(text.filter { !vowels.contains($0) })', "    var value\
    \ = text\n    for vowel in \"aeiou\" {\n        value = value.replacingOccurrences(of:\
    \ String(vowel), with: \"\")\n    }\n    return value", "    var result = \"\"\
    \n    for char in text {\n        switch char {\n        case \"a\", \"e\", \"\
    i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\":\n            continue\n\
    \        default:\n            result.append(char)\n        }\n    }\n    return\
    \ result", "\tvar result = String()\n\tfor character in text {\n\t\tif character\
    \ != \"a\" && character != \"A\" && character != \"e\" && character != \"E\" &&\
    \ character != \"i\" && character != \"I\" && character != \"o\" && character\
    \ != \"O\" && character != \"u\" && character != \"U\" {\n\t\t\tresult += String(character)\n\
    \t\t}\n\t}\n\treturn result", "    let vowels: Set<Character> = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.filter\
    \ { !vowels.contains($0) })", "    let vowels = \"aeiou\"\n    var res = \"\"\n\
    \    for c in text {\n        if !vowels.contains(c) {\n            res.append(c)\n\
    \        }\n    }\n    return res", '    return String(text.filter { "aeiou".contains($0)
    == false })', '    return text.filter { !$0.is_vowel }', "    var output = \"\"\
    \n    let vowels = \"aeiou\"\n    for character in text {\n        if !vowels.contains(character)\
    \ {\n            output.append(character)\n        }\n    }\n    return output",
  '    return ""', "    // Good luck!\n    var newText = \"\"\n    for char in text\
    \ {\n        if char != \"a\" && char != \"e\" && char != \"i\" && char != \"\
    o\" && char != \"u\" && char != \"A\" && char != \"E\" && char != \"I\" && char\
    \ != \"O\" && char != \"U\" {\n            newText += String(char)\n        }\n\
    \    }\n    return newText", '    return String(text.filter { !"aeiou".contains($0)
    })', "    var new_string = \"\"\n    for char in text {\n        switch char {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"\
    U\":\n            continue\n        default:\n            new_string.append(char)\n\
    \        }\n    }\n    return new_string", "    let vowels: Set<Character> = [\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return\
    \ String(text.filter { !vowels.contains($0) })", '    return text.replacingOccurrences(of:
    "[AEIOUaeiou]", with: "", options: .regularExpression)', "    let vowels = \"\
    aeiou\"\n    var textWithoutVowels = \"\"\n    for char in text {\n        if\
    \ !vowels.contains(char) {\n            textWithoutVowels.append(char)\n     \
    \   }\n    }\n    return textWithoutVowels", '    return text.filter { !"aeiou".contains($0)
    }', "    var result = \"\"\n    for char in text {\n        switch char {\n  \
    \      case \"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"\
    U\":\n            continue\n        default:\n            result.append(char)\n\
    \        }\n    }\n    return result", "    var vowels = \"aeiouAEIOU\"\n    var\
    \ result = \"\"\n    for letter in text {\n        if !vowels.contains(letter)\
    \ {\n            result.append(letter)\n        }\n    }\n    return result",
  "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"\
    E\", \"I\", \"O\", \"U\"]\n    return String(text.filter {!vowels.contains($0)})",
  "    let vowels = \"aeiou\"\n    var new_text = \"\"\n    for char in text {\n \
    \       if !vowels.contains(char) {\n            new_text.append(char)\n     \
    \   }\n    }\n    return new_text", '    return text.filter{ !$0.isVowel }', " \
    \   let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"\
    E\", \"I\", \"O\", \"U\"]\n    return String(text.filter { !vowels.contains($0)\
    \ })", "    let chars = text.characters\n    let vowels = Set(\"aeiou\")\n   \
    \ let result = chars.filter { !vowels.contains($0) }\n    return String(result)",
  '    return text.filter { !is_vowel($0) }', "    let vowels: Set<Character> = [\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var buffer\
    \ = \"\"\n    for char in text {\n        if !vowels.contains(char) {\n      \
    \      buffer.append(char)\n        }\n    }\n    return buffer", "\tlet vowels:\
    \ Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"\
    O\", \"U\"]\n\treturn String(text.filter({!vowels.contains($0)}))", "    var vowels\
    \ = Set<Character>()\n    vowels.insert(\"a\")\n    vowels.insert(\"e\")\n   \
    \ vowels.insert(\"i\")\n    vowels.insert(\"o\")\n    vowels.insert(\"u\")\n \
    \   vowels.insert(\"A\")\n    vowels.insert(\"E\")\n    vowels.insert(\"I\")\n\
    \    vowels.insert(\"O\")\n    vowels.insert(\"U\")\n    return String(text.filter\
    \ { !vowels.contains($0) })", '    return text.replacingOccurrences(of: "a|A|e|E|i|I|o|O|u|U",
    with: "", options: .regularExpression)', "    let vowels: [Character] = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.filter\
    \ { !vowels.contains($0) })", '    return text.filter { !$0.is_vowel }', "   \
    \ var result = \"\"\n    for char in text {\n        if char != \"a\" && char\
    \ != \"e\" && char != \"i\" && char != \"o\" && char != \"u\" {\n            result.append(char)\n\
    \        }\n    }\n    return result", "    let vowels = [\"a\", \"A\", \"e\"\
    , \"E\", \"i\", \"I\", \"o\", \"O\", \"u\", \"U\"]\n    var result = \"\"\n  \
    \  for char in text {\n        if !vowels.contains(String(char)) {\n         \
    \   result += String(char)\n        }\n    }\n    return result", "    // return\
    \ your answer\n    var result: String = \"\"\n    for ch in text {\n        if\
    \ ch != \"a\" && ch != \"e\" && ch != \"i\" && ch != \"o\" && ch != \"u\" {\n\
    \            result += String(ch)\n        }\n    }\n    return result", "   \
    \ var lowercase = text.lowercased()\n    lowercase = lowercase.replacingOccurrences(of:\
    \ \"a\", with: \"\")\n    lowercase = lowercase.replacingOccurrences(of: \"e\"\
    , with: \"\")\n    lowercase = lowercase.replacingOccurrences(of: \"i\", with:\
    \ \"\")\n    lowercase = lowercase.replacingOccurrences(of: \"o\", with: \"\"\
    )\n    lowercase = lowercase.replacingOccurrences(of: \"u\", with: \"\")\n   \
    \ return lowercase", "    let vowels = Set(\"aeiouAEIOU\")\n    return String(text.filter({!vowels.contains($0)}))",
  "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"\
    E\", \"I\", \"O\", \"U\"]\n    return String(text.filter { !vowels.contains($0)\
    \ })", '    return text.filter { "aeiouAEIOU".contains($0) == false }', "    let\
    \ vowels = \"aeiouAEIOU\"\n    var result: String = \"\"\n    for c in text {\n\
    \        if !vowels.contains(c) {\n            result.append(c)\n        }\n \
    \   }\n    return result", '    return text.filter {$0 != "a" && $0 != "e" &&
    $0 != "i" && $0 != "o" && $0 != "u" && $0 != "A" && $0 != "E" && $0 != "I" &&
    $0 != "O" && $0 != "U"}', '    return text.filter { !$0.is_vowel }', "    let\
    \ vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"\
    I\", \"O\", \"U\"]\n    var result: String = \"\"\n    for char in text {\n  \
    \      if !vowels.contains(char) {\n            result.append(char)\n        }\n\
    \    }\n    return result", "    return text.filter {\n        \"aeiou\".contains($0)\
    \ == false\n    }", "\tlet vowels: [Character] = [\"a\", \"e\", \"i\", \"o\",\
    \ \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n\tlet result = text.filter {\n\t\t\
    (c: Character) -> Bool in\n\t\t!vowels.contains(c)\n\t}\n\treturn String(result)",
  "    // your code here\n    var temp = text\n    let vowels: Set<Character> = [\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    for char\
    \ in temp {\n        if vowels.contains(char) {\n            temp.remove(at: temp.firstIndex(of:\
    \ char)!)\n        }\n    }\n    return temp", "    var result = \"\"\n    for\
    \ c in text {\n        if !(c == \"a\" || c == \"e\" || c == \"i\" || c == \"\
    o\" || c == \"u\" || c == \"A\" || c == \"E\" || c == \"I\" || c == \"O\" || c\
    \ == \"U\") {\n            result += String(c)\n        }\n    }\n    return result",
  '    return text.filter { !$0.isVowel }', '    return text.filter { !$0.isVowel
    }', "\tlet vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"\
    E\", \"I\", \"O\", \"U\"]\n\treturn String(text.filter({!vowels.contains($0)}))",
  "    let vowels = \"aeiou\"\n    var result = \"\"\n    for character in text {\n\
    \        if !vowels.contains(character) {\n            result.append(character)\n\
    \        }\n    }\n    return result", "    let vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.filter\
    \ { !vowels.contains($0) })", "    let vowels = [\"a\", \"A\", \"e\", \"E\", \"\
    i\", \"I\", \"o\", \"O\", \"u\", \"U\"]\n    var result = text\n    for vowel\
    \ in vowels {\n        result = result.replacingOccurrences(of: vowel, with: \"\
    \")\n    }\n    return result", "    var clean_text = \"\"\n    for letter in\
    \ text {\n        if(letter != \"a\" && letter != \"e\" && letter != \"i\" &&\
    \ letter != \"o\" && letter != \"u\") {\n            clean_text += String(letter)\n\
    \        }\n    }\n    return clean_text", "    var result = \"\"\n    let vowels:\
    \ Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"\
    O\", \"U\"]\n    for c in text {\n        if !vowels.contains(c) {\n         \
    \   result.append(c)\n        }\n    }\n    return result", "    var text = text\n\
    \    let vowels: Set<Character> = [\"a\", \"A\", \"e\", \"E\", \"i\", \"I\", \"\
    o\", \"O\", \"u\", \"U\"]\n    text.removeAll(where: { vowels.contains($0) })\n\
    \    return text", '    return text.replacingOccurrences(of: "[aeiou]", with:
    "", options: .regularExpression)', "    let vowels = [\"a\", \"A\", \"e\", \"\
    E\", \"i\", \"I\", \"o\", \"O\", \"u\", \"U\"]\n    var result = \"\"\n    for\
    \ char in text {\n        if !vowels.contains(String(char)) {\n            result\
    \ += String(char)\n        }\n    }\n    return result", "    var chars = Array(text)\n\
    \    var start = 0\n    var end = chars.count - 1\n    while start <= end {\n\
    \        while start <= end && !vowels.contains(chars[start]) {\n            start\
    \ += 1\n        }\n        while start <= end && !vowels.contains(chars[end])\
    \ {\n            end -= 1\n        }\n        if start <= end {\n            chars.swapAt(start,\
    \ end)\n            start += 1\n            end -= 1\n        }\n    }\n    return\
    \ String(chars)", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\"\
    , \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text {\n\
    \        if !vowels.contains(String(char)) {\n            result += String(char)\n\
    \        }\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var text = text\n    for\
    \ vowel in vowels {\n        text = text.replacingOccurrences(of: vowel, with:\
    \ \"\")\n    }\n    return text", "    let vowels = Set([\"a\", \"e\", \"i\",\
    \ \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"])\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })", "    var word = \"\"\n    let vowels: Set<Character>\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n \
    \   for letter in text {\n        if !vowels.contains(letter) {\n            word.append(letter)\n\
    \        }\n    }\n    return word", "    let vowels = [\"a\", \"A\", \"e\", \"\
    E\", \"i\", \"I\", \"o\", \"O\", \"u\", \"U\"]\n    var ret = \"\"\n    for char\
    \ in text {\n        if !vowels.contains(String(char)) {\n            ret.append(char)\n\
    \        }\n    }\n    return ret", "    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result =\
    \ \"\"\n    for char in text {\n        if vowels.contains(char) {\n         \
    \   continue\n        }\n        result.append(char)\n    }\n    return result",
  "    // >> write your solution here <<\n    let vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    let newText = text.characters.filter({!vowels.contains(String($0))})\n\
    \    return String(newText)", "    // TODO: Write remove_vowels here\n    return\
    \ \"\"", "    let vowels: [Character] = [\"a\", \"A\", \"e\", \"E\", \"i\", \"\
    I\", \"o\", \"O\", \"u\", \"U\"]\n    var result: String = \"\"\n    for char\
    \ in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result", "    let vowels: [Character] = [\"a\",\
    \ \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var res\
    \ = \"\"\n    for char in text {\n        if vowels.contains(char) {\n       \
    \     continue\n        }\n        res.append(char)\n    }\n    return res", '    return
    text.filter { "aeiou".contains($0) == false }', "  return text.filter { (l: Character)\
    \ -> Bool in\n    l != \"a\" && l != \"A\" && l != \"e\" && l != \"E\" && l !=\
    \ \"i\" && l != \"I\" && l != \"o\" && l != \"O\" && l != \"u\" && l != \"U\"\n\
    \  }", '    return String(text.filter { !$0.is_vowel() })', "    var return_string\
    \ = \"\"\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"\
    I\", \"O\", \"U\"]\n    for character in text {\n        if !vowels.contains(String(character))\
    \ {\n            return_string.append(character)\n        }\n    }\n    return\
    \ return_string", "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.filter({!vowels.contains($0)}))",
  "  let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\"\
    , \"I\", \"O\", \"U\"]\n  return String(text.filter {!vowels.contains($0)})",
  "    let vowels: CharacterSet = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\"\
    , \"I\", \"O\", \"U\"]\n    return String(text.unicodeScalars.filter { !vowels.contains($0)\
    \ })", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"\
    I\", \"O\", \"U\"]\n    var text_without_vowels = \"\"\n    for char in text {\n\
    \        if !vowels.contains(String(char)) {\n            text_without_vowels\
    \ += String(char)\n        }\n    }\n    return text_without_vowels", '    return
    text.lowercased().replacingOccurrences(of: "[a, e, i, o, u]", with: "", options:
    .regularExpression)', "    let vovels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"\
    A\", \"E\", \"I\", \"O\", \"U\"]\n    return text.filter { vovels.contains($0)\
    \ == false }", "    var result = \"\"\n    for ch in text {\n        if ch !=\
    \ \"a\" && ch != \"e\" && ch != \"i\" && ch != \"o\" && ch != \"u\" {\n      \
    \      result += String(ch)\n        }\n    }\n    return result", '    return
    text.replacingOccurrences(of: "[aeiou]", with: "", options: .regularExpression)',
  "    if text.isEmpty {\n        return \"\"\n    }\n    if text.count == 1 {\n \
    \       if is_vowel(character: text[0]) {\n            return \"\"\n        }\
    \ else {\n            return text\n        }\n    }\n    let front = text[0]\n\
    \    let back = remove_vowels(text: String(text[1...]))\n    if is_vowel(character:\
    \ front) {\n        return back\n    } else {\n        return String(front) +\
    \ back\n    }", "    var mutableText = text\n    for vowel in vowels {\n     \
    \   mutableText = mutableText.replacingOccurrences(of: vowel, with: \"\")\n  \
    \  }\n    return mutableText", "    let vowels: Set<Character> = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.filter({!vowels.contains($0)}))",
  "    let vowels: CharacterSet = CharacterSet(charactersIn: \"aeiouAEIOU\")\n   \
    \ return text.components(separatedBy: vowels).joined()", "    var res = \"\"\n\
    \    for element in text.uppercased() {\n        if element != \"A\" && element\
    \ != \"E\" && element != \"I\" && element != \"O\" && element != \"U\" {\n   \
    \         res.append(element)\n        }\n    }\n    return res", "    var result\
    \ = \"\"\n    for letter in text {\n        switch letter {\n        case \"a\"\
    , \"A\", \"e\", \"E\", \"i\", \"I\", \"o\", \"O\", \"u\", \"U\":\n           \
    \ break\n        default:\n            result.append(letter)\n        }\n    }\n\
    \    return result", "    var string = text\n    let vowels = [\"a\", \"A\", \"\
    e\", \"E\", \"i\", \"I\", \"o\", \"O\", \"u\", \"U\"]\n    string = string.filter\
    \ { !vowels.contains($0)}\n    return string", "    let vowels = CharacterSet(charactersIn:\
    \ \"aeiouAEIOU\")\n    let result = text.trimmingCharacters(in: vowels)\n    return\
    \ result", "    var result = \"\"\n    for char in text {\n        if !is_vowel(letter:\
    \ char) {\n            result.append(char)\n        }\n    }\n    return result",
  "    // TODO: student implement this.\n    return \"\";", "    let vowels: Set<Character>\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n \
    \   var index = text.startIndex\n    var out = \"\"\n    while index != text.endIndex\
    \ {\n        let index2 = text.index(after: index)\n        let character = text[index]\n\
    \        if !vowels.contains(character) {\n            out.append(character)\n\
    \        }\n        index = index2\n    }\n    return out", "    var text_without_vowels\
    \ = \"\"\n    let vowels = \"aeiou\"\n    for char in text {\n        if !vowels.contains(char)\
    \ {\n            text_without_vowels.append(char)\n        }\n    }\n    return\
    \ text_without_vowels"]
stop_tokens:
- "\n}"

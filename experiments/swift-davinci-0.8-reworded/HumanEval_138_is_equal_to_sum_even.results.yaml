language: swift
name: HumanEval_138_is_equal_to_sum_even
results:
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // Fill in the\
    \ code for this function\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp2xihuixj/tmp2xihuixj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ca477c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ca16eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ca16e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ca16d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2xihuixj                        0x000055c65f35c29d <unavailable> + 4765

    5    libc.so.6                          0x00002b08ca663460 __libc_start_main +
    245

    6    tmp2xihuixj                        0x000055c65f35be69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var num = n\n\
    \    var sum = 0\n    while num > 0 {\n        sum += num % 10\n        num /=\
    \ 10\n    }\n    return sum % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpoohk0rvd/tmpoohk0rvd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba79cebdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba79cbb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba79cbb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba79cbb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoohk0rvd                        0x000055ce3c9a3243 <unavailable> + 4675

    5    libc.so.6                          0x00002ba79d0a9460 __libc_start_main +
    245

    6    tmpoohk0rvd                        0x000055ce3c9a2ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    fatalError(\"\
    Please implement the function is_equal_to_sum_even(n: Int) -> Bool\")\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpf0aicf8v/tmpf0aicf8v.swift:11: Fatal error: Please implement the function
    is_equal_to_sum_even(n: Int) -> Bool

    Current stack trace:

    0    libswiftCore.so                    0x00002ab706168c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab705e5fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab705e5f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab705e5e7b0 _assertionFailure(_:_:file:line:flags:)
    + 365

    4    tmpf0aicf8v                        0x0000560c9465f60c <unavailable> + 5644

    5    tmpf0aicf8v                        0x0000560c9465f1cb <unavailable> + 4555

    6    libc.so.6                          0x00002ab706354460 __libc_start_main +
    245

    7    tmpf0aicf8v                        0x0000560c9465eee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ || n < 8 || n > 32 {\n        return false\n    }\n    return true\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    guard n % 2 ==\
    \ 0 else { return false }\n    guard n > 2 else { return false }\n    let min\
    \ = n / 4\n    let max = n / 2\n    for i in min...max {\n        for j in i..<max\
    \ {\n            for k in j..<max {\n                for l in k..<max {\n    \
    \                if i + j + k + l == n {\n                        return true\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpf7fr55th/tmpf7fr55th.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2ef5300c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2ef4ff7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2ef4ff7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2ef4ff67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf7fr55th                        0x00005615043b8423 <unavailable> + 5155

    5    libc.so.6                          0x00002b2ef54ec460 __libc_start_main +
    245

    6    tmpf7fr55th                        0x00005615043b80d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var s = n\n \
    \   var i = 1\n    while s > 4 {\n        i += 2\n        s -= i\n    }\n    return\
    \ s == 4\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpx2wj08_2/tmpx2wj08_2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af6d3ec9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af6d3bc0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af6d3bc0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af6d3bbf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx2wj08_2                        0x00005577bc8c81b3 <unavailable> + 4531

    5    libc.so.6                          0x00002af6d40b5460 __libc_start_main +
    245

    6    tmpx2wj08_2                        0x00005577bc8c7e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // TODO: Implement\
    \ it.\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp3r4vq_nj/tmp3r4vq_nj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6d4811c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6d4508b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6d4508988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6d45077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3r4vq_nj                        0x0000557e8020029d <unavailable> + 4765

    5    libc.so.6                          0x00002ae6d49fd460 __libc_start_main +
    245

    6    tmp3r4vq_nj                        0x0000557e801ffe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // your code\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: '/tmp/tmphvn3xhr_.swift:12:1: error: missing return in global function expected
    to return ''Bool''

    }

    ^

    '
  stdout: ''
  timestamp: 1660009728
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    let m = 2*n\n\
    \    var i = 2\n    var count = 0\n    while i <= m {\n        if m % i == 0 {\n\
    \            let a = (m / i) / 2\n            let b = m / i - a\n            let\
    \ d = b - a\n            if (b % 2 == 0) && (d % 2 == 0) {\n                count\
    \ += 1\n            }\n        }\n        i += 1\n    }\n    return count > 0\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpasvxxi5y/tmpasvxxi5y.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad13e0f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad13ddebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad13ddeb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad13ddea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpasvxxi5y                        0x00005641ae053243 <unavailable> + 4675

    5    libc.so.6                          0x00002ad13e2e0460 __libc_start_main +
    245

    6    tmpasvxxi5y                        0x00005641ae052ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    if n < 4 {\n        return false\n    }\n\
    \    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpwdz9s20b/tmpwdz9s20b.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b936dbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b933d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b933d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b933d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwdz9s20b                        0x00005627d8588243 <unavailable> + 4675

    5    libc.so.6                          0x00002b7b938c7460 __libc_start_main +
    245

    6    tmpwdz9s20b                        0x00005627d8587ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    return is_equal_to_sum(n: n, s: 2, k: 4)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpvxt0ad2j.swift:14:12: error: cannot find 'is_equal_to_sum' in scope\n\
    \    return is_equal_to_sum(n: n, s: 2, k: 4)\n           ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009728
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n%2 != 0 {\n\
    \        return false\n    }\n    for i in 2...n/2 {\n        for j in i+2...n/2\
    \ {\n            for k in j+2...n/2 {\n                for l in k+2...n/2 {\n\
    \                    if n == i+j+k+l {\n                        return true\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'Swift/ClosedRange.swift:347: Fatal error: Range requires lowerBound <=
    upperBound

    Current stack trace:

    0    libswiftCore.so                    0x00002ac27af5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac27ac52561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ac27ac52286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ac27ac5213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ac27ac51bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmppbb8fww1                        0x000055e6172e0b0d <unavailable> + 6925

    6    tmppbb8fww1                        0x000055e6172e02cb <unavailable> + 4811

    7    libc.so.6                          0x00002ac27b147460 __libc_start_main +
    245

    8    tmppbb8fww1                        0x000055e6172dffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n  // your code here\n\
    \  return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpeo6mbikr/tmpeo6mbikr.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab9ed7cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab9ed4c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab9ed4c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab9ed4c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo6mbikr                        0x000055855d33229d <unavailable> + 4765

    5    libc.so.6                          0x00002ab9ed9b7460 __libc_start_main +
    245

    6    tmpeo6mbikr                        0x000055855d331e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    if n < 4 {\n        return false\n    }\n\
    \    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpwdz9s20b/tmpwdz9s20b.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b936dbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b933d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b933d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b933d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwdz9s20b                        0x00005627d8588243 <unavailable> + 4675

    5    libc.so.6                          0x00002b7b938c7460 __libc_start_main +
    245

    6    tmpwdz9s20b                        0x00005627d8587ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    var sum = 0\n    for _ in 0..<4 {\n    \
    \    sum += n\n    }\n    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp4kcshaz0/tmp4kcshaz0.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae16e1f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae16dee8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae16dee8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae16dee77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4kcshaz0                        0x00005642e956741d <unavailable> + 5149

    5    libc.so.6                          0x00002ae16e3dd460 __libc_start_main +
    245

    6    tmp4kcshaz0                        0x00005642e9566fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    } else if n < 8 {\n        return false\n    }\
    \ else {\n        return true\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n < 8 {\n\
    \        return false\n    }\n    let number_of_four_partitions = part(n: n -\
    \ 4, m: 4)\n    return number_of_four_partitions > 0\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp8wzejm_2.swift:14:37: error: cannot find 'part' in scope\n    let\
    \ number_of_four_partitions = part(n: n - 4, m: 4)\n                         \
    \           ^~~~\n"
  stdout: ''
  timestamp: 1660009728
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return (n % 2\
    \ == 0) && (n % 4 != 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpgrjyhzi_/tmpgrjyhzi_.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e5457bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e54272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e54272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e542717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgrjyhzi_                        0x00005596f87b22b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b8e54767460 __libc_start_main +
    245

    6    tmpgrjyhzi_                        0x00005596f87b1ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    \n    var index\
    \ = 0\n    for i in 1...n {\n        index += i\n        if index == n {\n   \
    \         return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp6779vf2v/tmp6779vf2v.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba6fa3dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba6fa0d6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba6fa0d6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba6fa0d57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6779vf2v                        0x000055e7152a53a9 <unavailable> + 5033

    5    libc.so.6                          0x00002ba6fa5cb460 __libc_start_main +
    245

    6    tmp6779vf2v                        0x000055e7152a4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // find the sum\
    \ of a specific combination of 4 positive even numbers\n    func sum_of_combination(a:\
    \ Int, b: Int, c: Int, d: Int) -> Int {\n        return a + b + c + d\n    }\n\
    \    \n    // find the sum of 4 positive even numbers\n    // this function is\
    \ used to check for the other combinations in which 4 positive even numbers sum\
    \ up to n\n    func sum_of_even(n: Int) -> Int {\n        return 2 * n\n    }\n\
    \    \n    // the given number is divisible by 4\n    if n % 4 == 0 {\n      \
    \  let a = n / 4\n        let b = n / 4\n        let c = n / 4\n        let d\
    \ = n / 4\n        if sum_of_combination(a: a, b: b, c: c, d: d) == n {\n    \
    \        return true\n        }\n    }\n    \n    // the given number is not divisible\
    \ by 4\n    // then the sum of 4 positive even numbers is >= n\n    if sum_of_even(n:\
    \ n) >= n {\n        let a = n\n        let b = n - 2\n        let c = n - 4\n\
    \        let d = n - 6\n        if sum_of_combination(a: a, b: b, c: c, d: d)\
    \ == n {\n            return true\n        }\n    }\n    \n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp82xvrngb/tmp82xvrngb.swift:61: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6c11e22c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6c11b19b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6c11b19988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6c11b187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp82xvrngb                        0x00005573db23c243 <unavailable> + 4675

    5    libc.so.6                          0x00002b6c1200e460 __libc_start_main +
    245

    6    tmp82xvrngb                        0x00005573db23bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sumOfEvens\
    \ = 0\n\n    for i in 1...(n/2) {\n        if i % 2 == 0 {\n            sumOfEvens\
    \ += i\n        }\n    }\n\n    return sumOfEvens == n\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp89cx2_ql/tmp89cx2_ql.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b615c803c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b615c4fab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b615c4fa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b615c4f97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp89cx2_ql                        0x000055ddbca6c41d <unavailable> + 5149

    5    libc.so.6                          0x00002b615c9ef460 __libc_start_main +
    245

    6    tmp89cx2_ql                        0x000055ddbca6bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var count = 0\n\
    \    let limit = n / 2\n    for i in 2..<limit {\n        if n % i == 0 {\n  \
    \          count += 1\n        }\n    }\n    return count == 4\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp4tp66d5n/tmp4tp66d5n.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3251d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae324eceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae324ece988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae324ecd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4tp66d5n                        0x0000557344cf341d <unavailable> + 5149

    5    libc.so.6                          0x00002ae3253c3460 __libc_start_main +
    245

    6    tmp4tp66d5n                        0x0000557344cf2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    for i in 1...n/2 {\n        for j in i...n/2\
    \ {\n            for k in j...n/2 {\n                for m in k...n/2 {\n    \
    \                if i + j + k + m == n {\n                        return true\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp0wq81_d6/tmp0wq81_d6.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b90272ccc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9026fc3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9026fc3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9026fc27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0wq81_d6                        0x000055e3eb2d1333 <unavailable> + 4915

    5    libc.so.6                          0x00002b90274b8460 __libc_start_main +
    245

    6    tmp0wq81_d6                        0x000055e3eb2d0fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return (n % 2\
    \ == 0) && (n % 4 != 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpgrjyhzi_/tmpgrjyhzi_.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e5457bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e54272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e54272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e542717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgrjyhzi_                        0x00005596f87b22b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b8e54767460 __libc_start_main +
    245

    6    tmpgrjyhzi_                        0x00005596f87b1ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    let upperLimit\
    \ = n / 2 - 1\n    let lowerLimit = (n % 2 == 0) ? 0 : 1\n    for i in lowerLimit...upperLimit\
    \ {\n        for j in lowerLimit...upperLimit {\n            for k in lowerLimit...upperLimit\
    \ {\n                for l in lowerLimit...upperLimit {\n                    if\
    \ 2 * i + 2 * j + 2 * k + 2 * l == n {\n                        return true\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpughmbttt/tmpughmbttt.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac3b2c3cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac3b2933b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac3b2933988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac3b29327b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpughmbttt                        0x0000555e2ff95333 <unavailable> + 4915

    5    libc.so.6                          0x00002ac3b2e28460 __libc_start_main +
    245

    6    tmpughmbttt                        0x0000555e2ff94fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    let positive_even_numbers = [2, 4, 6, 8]\n\
    \    let combinations = positive_even_numbers.combinations(r: 4)\n    for combination\
    \ in combinations {\n        if combination.reduce(0, +) == n {\n            return\
    \ true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpt848muey.swift:15:46: error: value of type '[Int]' has no member\
    \ 'combinations'\n    let combinations = positive_even_numbers.combinations(r:\
    \ 4)\n                       ~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009729
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    if n == 4 {\n        return false\n    }\n\
    \    if n == 6 {\n        return false\n    }\n    return true\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // your code\
    \ here\n    var x = n\n    var i = 0\n    while (x > 0){\n        if (x % 2 ==\
    \ 0){\n            i += 1\n        }\n        x = x / 2\n    }\n    return i ==\
    \ 4\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n: 4) ==\
    \ false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpid_9c1hy/tmpid_9c1hy.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add4c460c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add4c157b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add4c157988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add4c1567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpid_9c1hy                        0x00005608023f332d <unavailable> + 4909

    5    libc.so.6                          0x00002add4c64c460 __libc_start_main +
    245

    6    tmpid_9c1hy                        0x00005608023f2ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // your code\
    \ here\n    let p = n / 2\n    var s = n\n    for a in 1...p - 3 {\n        let\
    \ b = p - a\n        for c in b + 1...p - 1 {\n            let d = p - c\n   \
    \         for e in d + 1...p {\n                if a + b + c + d + e == n {\n\
    \                    return true\n                }\n            }\n        }\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'Swift/ClosedRange.swift:347: Fatal error: Range requires lowerBound <=
    upperBound

    Current stack trace:

    0    libswiftCore.so                    0x00002ae331746c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae33143d561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae33143d286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae33143d13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae33143cbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpm9ulpodr                        0x00005636a61658cf <unavailable> + 6351

    6    tmpm9ulpodr                        0x00005636a61652cb <unavailable> + 4811

    7    libc.so.6                          0x00002ae331932460 __libc_start_main +
    245

    8    tmpm9ulpodr                        0x00005636a6164fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n < 4 {\n\
    \        return false\n    }\n    var a = 0\n    var b = 0\n    var c = 0\n  \
    \  var d = 0\n    while a <= n {\n        b = 0\n        while a + b <= n {\n\
    \            c = 0\n            while a + b + c <= n {\n                d = n\
    \ - a - b - c\n                if d >= 0 && a % 2 == 0 && b % 2 == 0 && c % 2\
    \ == 0 && d % 2 == 0 {\n                    return true\n                }\n \
    \               c += 2\n            }\n            b += 2\n        }\n       \
    \ a += 2\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpvd_cl865/tmpvd_cl865.swift:49: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acfcfba6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acfcf89db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acfcf89d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acfcf89c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvd_cl865                        0x0000558c6a958243 <unavailable> + 4675

    5    libc.so.6                          0x00002acfcfd92460 __libc_start_main +
    245

    6    tmpvd_cl865                        0x0000558c6a957ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ || n < 8 {\n        return false\n    }\n    var n = n\n    while n >= 4 {\n\
    \        n -= 4\n    }\n    return n == 0\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp6lizk3hy/tmp6lizk3hy.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a18d09c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a18a00b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a18a00988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a189ff7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6lizk3hy                        0x000055f1a32653a1 <unavailable> + 5025

    5    libc.so.6                          0x00002b9a18ef5460 __libc_start_main +
    245

    6    tmp6lizk3hy                        0x000055f1a3264ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    let exp2 = Int(pow(Double(n),\
    \ 2.0))\n    let exp3 = Int(pow(Double(n), 3.0))\n    let exp4 = Int(pow(Double(n),\
    \ 4.0))\n    let exp5 = Int(pow(Double(n), 5.0))\n    let exp6 = Int(pow(Double(n),\
    \ 6.0))\n    let exp7 = Int(pow(Double(n), 7.0))\n    let exp8 = Int(pow(Double(n),\
    \ 8.0))\n    let exp9 = Int(pow(Double(n), 9.0))\n    return n == 4*exp2 - 2*exp3\
    \ + 6*exp4 - 7*exp5 + 4*exp6 - 10*exp7 + 9*exp8 - 4*exp9 + 1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmplikgb7sq.swift:11:20: error: cannot find 'pow' in scope\n    let\
    \ exp2 = Int(pow(Double(n), 2.0))\n                   ^~~\n/tmp/tmplikgb7sq.swift:12:20:\
    \ error: cannot find 'pow' in scope\n    let exp3 = Int(pow(Double(n), 3.0))\n\
    \                   ^~~\n/tmp/tmplikgb7sq.swift:13:20: error: cannot find 'pow'\
    \ in scope\n    let exp4 = Int(pow(Double(n), 4.0))\n                   ^~~\n\
    /tmp/tmplikgb7sq.swift:14:20: error: cannot find 'pow' in scope\n    let exp5\
    \ = Int(pow(Double(n), 5.0))\n                   ^~~\n/tmp/tmplikgb7sq.swift:15:20:\
    \ error: cannot find 'pow' in scope\n    let exp6 = Int(pow(Double(n), 6.0))\n\
    \                   ^~~\n/tmp/tmplikgb7sq.swift:16:20: error: cannot find 'pow'\
    \ in scope\n    let exp7 = Int(pow(Double(n), 7.0))\n                   ^~~\n\
    /tmp/tmplikgb7sq.swift:17:20: error: cannot find 'pow' in scope\n    let exp8\
    \ = Int(pow(Double(n), 8.0))\n                   ^~~\n/tmp/tmplikgb7sq.swift:18:20:\
    \ error: cannot find 'pow' in scope\n    let exp9 = Int(pow(Double(n), 9.0))\n\
    \                   ^~~\n"
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n\
    \    var count = 0\n    for i in stride(from: 0, to: n + 1, by: 2) {\n       \
    \ sum += i\n        count += 1\n        if sum == n && count == 4 {\n        \
    \    return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpvxbt4mwr/tmpvxbt4mwr.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba32cb4cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba32c843b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba32c843988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba32c8427b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvxbt4mwr                        0x000055748d22f4ad <unavailable> + 5293

    5    libc.so.6                          0x00002ba32cd38460 __libc_start_main +
    245

    6    tmpvxbt4mwr                        0x000055748d22f079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return is_equal_to_sum_odd(n:\
    \ n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n: 4) ==\
    \ false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpy_ommf56.swift:11:12: error: cannot find 'is_equal_to_sum_odd'\
    \ in scope\n    return is_equal_to_sum_odd(n: n)\n           ^~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var possibleSums\
    \ = Set<Int>()\n    for i in 0...n / 2 {\n        possibleSums.insert(i * 2)\n\
    \    }\n    for sum in possibleSums {\n        if possibleSums.contains(n - sum)\
    \ {\n            if possibleSums.contains(n - sum - sum) {\n                if\
    \ possibleSums.contains(n - sum - sum - sum) {\n                    return true\n\
    \                }\n            }\n        }\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp_169jp9q/tmp_169jp9q.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b0adeec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b0aae5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b0aae5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b0aae47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_169jp9q                        0x000055d6197165f3 <unavailable> + 5619

    5    libc.so.6                          0x00002b0b0afda460 __libc_start_main +
    245

    6    tmp_169jp9q                        0x000055d6197162a9 <unavailable> + 4777

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result =\
    \ false\n    var i = 2\n    while i <= n - 4 {\n        var j = 2\n        while\
    \ j <= n - 2 - i {\n            var k = 2\n            while k <= n - i - j {\n\
    \                let l = n - i - j - k\n                if i % 2 == 0 && j % 2\
    \ == 0 && k % 2 == 0 && l % 2 == 0 {\n                    result = true\n    \
    \            }\n                k += 2\n            }\n            j += 2\n  \
    \      }\n        i += 2\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp9q2t0t4y/tmp9q2t0t4y.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0c6ed02c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0c6e9f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0c6e9f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0c6e9f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9q2t0t4y                        0x000055dd672fe2b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b0c6eeee460 __libc_start_main +
    245

    6    tmp9q2t0t4y                        0x000055dd672fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // your code\
    \ here\n    var tmp = n\n    for i in stride(from: 1, to: Int(sqrt(Double(n))),\
    \ by: 2) {\n        for j in stride(from: i + 2, to: Int(sqrt(Double(n))), by:\
    \ 2) {\n            for k in stride(from: j + 2, to: Int(sqrt(Double(n))), by:\
    \ 2) {\n                for l in stride(from: k + 2, to: Int(sqrt(Double(n))),\
    \ by: 2) {\n                    if i + j + k + l == n {\n                    \
    \    return true\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpo7vavl21.swift:13:38: error: cannot find 'sqrt' in scope\n    for\
    \ i in stride(from: 1, to: Int(sqrt(Double(n))), by: 2) {\n                  \
    \                   ^~~~\n/tmp/tmpo7vavl21.swift:14:46: error: cannot find 'sqrt'\
    \ in scope\n        for j in stride(from: i + 2, to: Int(sqrt(Double(n))), by:\
    \ 2) {\n                                             ^~~~\n/tmp/tmpo7vavl21.swift:15:50:\
    \ error: cannot find 'sqrt' in scope\n            for k in stride(from: j + 2,\
    \ to: Int(sqrt(Double(n))), by: 2) {\n                                       \
    \          ^~~~\n/tmp/tmpo7vavl21.swift:16:54: error: cannot find 'sqrt' in scope\n\
    \                for l in stride(from: k + 2, to: Int(sqrt(Double(n))), by: 2)\
    \ {\n                                                     ^~~~\n"
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    if n % 4 == 0 {\n        return true\n \
    \   }\n    if n < 8 {\n        return false\n    }\n    return is_equal_to_sum_even(n:\
    \ n - 8)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp54kgum7i/tmp54kgum7i.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9b0ea92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9b0e789b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9b0e789988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9b0e7887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp54kgum7i                        0x00005607944f2243 <unavailable> + 4675

    5    libc.so.6                          0x00002b9b0ec7e460 __libc_start_main +
    245

    6    tmp54kgum7i                        0x00005607944f1ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n\
    \    var a = n\n    var i = 2\n    while (sum < n) {\n        if (a == 0) {\n\
    \            return true\n        }\n        if (a < i) {\n            return\
    \ false\n        }\n        if (a % i == 0) {\n            sum += i\n        \
    \    a -= i\n        }\n        i += 2\n    }\n    return sum == n\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpj_sx3cme/tmpj_sx3cme.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8f6f6bbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8f6f3b2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8f6f3b2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8f6f3b17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj_sx3cme                        0x0000564189fd22b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b8f6f8a7460 __libc_start_main +
    245

    6    tmpj_sx3cme                        0x0000564189fd1ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // TODO: Please\
    \ implement the function\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp75b33f4_/tmp75b33f4_.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad6f0f0cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad6f0c03b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad6f0c03988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad6f0c027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp75b33f4_                        0x000055cf2bde029d <unavailable> + 4765

    5    libc.so.6                          0x00002ad6f10f8460 __libc_start_main +
    245

    6    tmp75b33f4_                        0x000055cf2bddfe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    <#Function body#>\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpq5jzo876.swift:11:5: error: editor placeholder in source file\n\
    \    <#Function body#>\n    ^\n"
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n < 4 {\n\
    \        return false\n    }\n    if n % 2 == 1 {\n        return false\n    }\n\
    \    if n % 4 == 0 {\n        return true\n    }\n    if n % 4 == 2 {\n      \
    \  return false\n    }\n    if n % 8 == 6 {\n        return true\n    }\n    if\
    \ n % 8 == 4 {\n        return false\n    }\n    if n % 12 == 10 {\n        return\
    \ true\n    }\n    if n % 12 == 8 {\n        return false\n    }\n    if n % 16\
    \ == 14 {\n        return true\n    }\n    if n % 16 == 12 {\n        return false\n\
    \    }\n    return n % 20 == 18\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpux_bfgux/tmpux_bfgux.swift:57: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeac5461c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeac5158b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeac5158988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeac51577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpux_bfgux                        0x00005561ffbe7243 <unavailable> + 4675

    5    libc.so.6                          0x00002aeac564d460 __libc_start_main +
    245

    6    tmpux_bfgux                        0x00005561ffbe6ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // your code\
    \ here\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp66cxy3t_/tmp66cxy3t_.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acc179edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acc176e4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acc176e4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acc176e37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp66cxy3t_                        0x000055aba21bd29d <unavailable> + 4765

    5    libc.so.6                          0x00002acc17bd9460 __libc_start_main +
    245

    6    tmp66cxy3t_                        0x000055aba21bce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // your code\
    \ here\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp66cxy3t_/tmp66cxy3t_.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acc179edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acc176e4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acc176e4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acc176e37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp66cxy3t_                        0x000055aba21bd29d <unavailable> + 4765

    5    libc.so.6                          0x00002acc17bd9460 __libc_start_main +
    245

    6    tmp66cxy3t_                        0x000055aba21bce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // write your\
    \ solution here\n    for _ in 1...4 {\n        if n % 2 == 0 {\n            return\
    \ true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpgr5m7dlj/tmpgr5m7dlj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6be26ecc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6be23e3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6be23e3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6be23e27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgr5m7dlj                        0x000055b24bc2b333 <unavailable> + 4915

    5    libc.so.6                          0x00002b6be28d8460 __libc_start_main +
    245

    6    tmpgr5m7dlj                        0x000055b24bc2afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // This is your\
    \ job. Fill in this function.\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp20nafdfc/tmp20nafdfc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afcb5abac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afcb57b1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afcb57b1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afcb57b07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp20nafdfc                        0x000055c07db5929d <unavailable> + 4765

    5    libc.so.6                          0x00002afcb5ca6460 __libc_start_main +
    245

    6    tmp20nafdfc                        0x000055c07db58e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var count = 0\n\
    \    for i in 0..<n {\n        if i % 2 == 0 {\n            count += 1\n     \
    \   }\n    }\n    return count == 4\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp45s9pt47/tmp45s9pt47.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7172e9ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7172b91b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7172b91988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7172b907b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp45s9pt47                        0x000055be98da9491 <unavailable> + 5265

    5    libc.so.6                          0x00002b7173086460 __libc_start_main +
    245

    6    tmp45s9pt47                        0x000055be98da8fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var current =\
    \ n\n    var total = 0\n    while current > 0 {\n        if current % 2 == 0 {\n\
    \            total += 1\n        }\n        current -= 1\n    }\n    return total\
    \ == 4\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpt3n6wb3l/tmpt3n6wb3l.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af461da3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af461a9ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af461a9a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af461a997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt3n6wb3l                        0x0000555f4404e3a1 <unavailable> + 5025

    5    libc.so.6                          0x00002af461f8f460 __libc_start_main +
    245

    6    tmpt3n6wb3l                        0x0000555f4404def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    if n < 8 {\n        return false\n    }\n\
    \    var count = 0\n    var sum = 0\n    for i in 2...n/2 {\n        if i % 2\
    \ == 0 {\n            count += 1\n            sum += i\n        }\n        if\
    \ count == 4 && sum == n {\n            return true\n        }\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmphk3ttbzh/tmphk3ttbzh.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b889df43c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b889dc3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b889dc3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b889dc397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphk3ttbzh                        0x0000557f837c141d <unavailable> + 5149

    5    libc.so.6                          0x00002b889e12f460 __libc_start_main +
    245

    6    tmphk3ttbzh                        0x0000557f837c0fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    assert(n % 2\
    \ == 0)\n    var is_equal = false\n    let max_num = n / 2\n    for a in 1...max_num\
    \ {\n        for b in 1...max_num {\n            for c in 1...max_num {\n    \
    \            for d in 1...max_num {\n                    if (a + b + c + d) ==\
    \ n {\n                        is_equal = true\n                    }\n      \
    \          }\n            }\n        }\n    }\n    return is_equal\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp71ujsqn0/tmp71ujsqn0.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b76113c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b75e0ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b75e0a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b75e097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp71ujsqn0                        0x0000561e1c055333 <unavailable> + 4915

    5    libc.so.6                          0x00002b8b762ff460 __libc_start_main +
    245

    6    tmp71ujsqn0                        0x0000561e1c054fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    fatalError(\"\
    TODO: Implement is_equal_to_sum_even\")\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpunbjy691/tmpunbjy691.swift:11: Fatal error: TODO: Implement is_equal_to_sum_even

    Current stack trace:

    0    libswiftCore.so                    0x00002af288023c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af287d1ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af287d1a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af287d197b0 _assertionFailure(_:_:file:line:flags:)
    + 365

    4    tmpunbjy691                        0x000055807ed4060c <unavailable> + 5644

    5    tmpunbjy691                        0x000055807ed401cb <unavailable> + 4555

    6    libc.so.6                          0x00002af28820f460 __libc_start_main +
    245

    7    tmpunbjy691                        0x000055807ed3fee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n  var tempSum = n\n\
    \  var counter = 0\n  while tempSum > 0 {\n    tempSum -= 2\n    counter += 1\n\
    \  }\n  return counter == 4\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpwnaswrq6/tmpwnaswrq6.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac32256cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac322263b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac322263988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac3222627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwnaswrq6                        0x00005560ddbaf311 <unavailable> + 4881

    5    libc.so.6                          0x00002ac322758460 __libc_start_main +
    245

    6    tmpwnaswrq6                        0x00005560ddbaee69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // <#code#>\n\
    \    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpt4pdlaih/tmpt4pdlaih.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab90fc9cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab90f993b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab90f993988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab90f9927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt4pdlaih                        0x0000557ca8a5a1b3 <unavailable> + 4531

    5    libc.so.6                          0x00002ab90fe88460 __libc_start_main +
    245

    6    tmpt4pdlaih                        0x0000557ca8a59e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    guard n % 2 ==\
    \ 0 else {\n        return false\n    }\n    for a in stride(from: 0, to: n, by:\
    \ 2) {\n        for b in stride(from: 0, to: n, by: 2) {\n            for c in\
    \ stride(from: 0, to: n, by: 2) {\n                for d in stride(from: 0, to:\
    \ n, by: 2) {\n                    if a + b + c + d == n {\n                 \
    \       return true\n                    }\n                }\n            }\n\
    \        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp7vvrrhrw/tmp7vvrrhrw.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b306eb2ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b306e821b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b306e821988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b306e8207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7vvrrhrw                        0x000055690fe5b453 <unavailable> + 5203

    5    libc.so.6                          0x00002b306ed16460 __libc_start_main +
    245

    6    tmp7vvrrhrw                        0x000055690fe5b109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return is_equal_to_sum_even_helper(n:\
    \ n, sum: 0, count: 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpbspg9ap7.swift:11:12: error: cannot find 'is_equal_to_sum_even_helper'\
    \ in scope\n    return is_equal_to_sum_even_helper(n: n, sum: 0, count: 0)\n \
    \          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    \n    if n %\
    \ 2 != 0 || n == 0 {\n        return false\n    }\n    \n    var sum = 0\n   \
    \ var counter = 0\n    \n    for i in 0...n {\n        if i % 2 == 0 {\n     \
    \       sum += i\n            counter += 1\n            if sum == n && counter\
    \ == 4 {\n                return true\n            }\n        }\n    }\n    \n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp3iobrcd8/tmp3iobrcd8.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0fb2134c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0fb1e2bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0fb1e2b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0fb1e2a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3iobrcd8                        0x000055b71a0c041d <unavailable> + 5149

    5    libc.so.6                          0x00002b0fb2320460 __libc_start_main +
    245

    6    tmp3iobrcd8                        0x000055b71a0bffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var m = [Int]()\n\
    \    var i = 0\n    while i*i <= n {\n        if i % 2 == 0 {\n            m.append(i)\n\
    \        }\n        i = i + 1\n    }\n    var sum = 0\n    i = m.count - 1\n \
    \   var j = i\n    while i >= 0 {\n        while j >= 0 {\n            sum = m[i]*m[i]\
    \ + m[j]*m[j]\n            if sum == n {\n                return true\n      \
    \      }\n            j = j - 1\n        }\n        i = i - 1\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp6de9vric/tmp6de9vric.swift:48: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0785e9cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0785b93b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0785b93988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0785b927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6de9vric                        0x00005597304063f3 <unavailable> + 5107

    5    libc.so.6                          0x00002b0786088460 __libc_start_main +
    245

    6    tmp6de9vric                        0x00005597304060a9 <unavailable> + 4265

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var x = n\n \
    \   var y = n\n    while x>1 {\n        y = n\n        while y>1 {\n         \
    \   y = y - 2\n            if x == n-y {\n                return true\n      \
    \      }\n        }\n        x = x - 2\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpy9mol2d7/tmpy9mol2d7.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b302318ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3022e85b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3022e85988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3022e847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy9mol2d7                        0x00005627434571b3 <unavailable> + 4531

    5    libc.so.6                          0x00002b302337a460 __libc_start_main +
    245

    6    tmpy9mol2d7                        0x0000562743456e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    var res = false\n    for i in 2...(n - 6)\
    \ {\n        for j in i...(n - 3) {\n            for k in j...(n - 1) {\n    \
    \            for l in k...n {\n                    if i + j + k + l == n {\n \
    \                       res = true\n                    }\n                }\n\
    \            }\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'Swift/ClosedRange.swift:347: Fatal error: Range requires lowerBound <=
    upperBound

    Current stack trace:

    0    libswiftCore.so                    0x00002acd11640c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd11337561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002acd11337286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002acd1133713c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002acd11336bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpg82ntcfk                        0x00005590543418d4 <unavailable> + 6356

    6    tmpg82ntcfk                        0x00005590543412cb <unavailable> + 4811

    7    libc.so.6                          0x00002acd1182c460 __libc_start_main +
    245

    8    tmpg82ntcfk                        0x0000559054340fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    var numberOfEvens = 0\n    var count = n\n\
    \    while count > 0 {\n        if count % 2 == 0 {\n            numberOfEvens\
    \ += 1\n        }\n        count -= 1\n    }\n    return numberOfEvens == 4\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmptkfb19_v/tmptkfb19_v.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e57083c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e56d7ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e56d7a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e56d797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptkfb19_v                        0x0000560f178433a1 <unavailable> + 5025

    5    libc.so.6                          0x00002b8e5726f460 __libc_start_main +
    245

    6    tmptkfb19_v                        0x0000560f17842ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // TODO: Please\
    \ write your code here\n    let sumEvenNum = n.digits.sum().digits.filter {$0\
    \ % 2 == 0}\n    print(sumEvenNum)\n    print(sumEvenNum.count)\n    if sumEvenNum.count\
    \ >= 4 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp2_6wqsto.swift:12:24: error: value of type 'Int' has no member\
    \ 'digits'\n    let sumEvenNum = n.digits.sum().digits.filter {$0 % 2 == 0}\n\
    \                     ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n <= 0 {\n\
    \        return false\n    }\n    if n == 4 {\n        return false\n    }\n \
    \   if n == 6 {\n        return false\n    }\n    if n == 8 {\n        return\
    \ true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpdizu2srf/tmpdizu2srf.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab627d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab627a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab627a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab627a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdizu2srf                        0x0000561e9f57d311 <unavailable> + 4881

    5    libc.so.6                          0x00002ab627f55460 __libc_start_main +
    245

    6    tmpdizu2srf                        0x0000561e9f57ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n < 0 {\n\
    \        return false\n    } else if n % 2 == 1 {\n        return false\n    }\
    \ else if n == 0 {\n        return true\n    } else {\n        return is_equal_to_sum_even(n:\
    \ n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp6fmi5r5k/tmp6fmi5r5k.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b43cbabbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b43cb7b2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b43cb7b2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43cb7b17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6fmi5r5k                        0x0000564c4014f243 <unavailable> + 4675

    5    libc.so.6                          0x00002b43cbca7460 __libc_start_main +
    245

    6    tmp6fmi5r5k                        0x0000564c4014eef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var isEqual =\
    \ false\n    for i in 1...n {\n        if i % 2 == 0 {\n            for j in 1...n\
    \ {\n                if j % 2 == 0 {\n                    for k in 1...n {\n \
    \                       if k % 2 == 0 {\n                            for l in\
    \ 1...n {\n                                if l % 2 == 0 {\n                 \
    \                   if i + j + k + l == n {\n                                \
    \        isEqual = true\n                                    }\n             \
    \                   }\n                            }\n                       \
    \ }\n                    }\n                }\n            }\n        }\n    }\n\
    \    return isEqual\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009729
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    //YOUR CODE GOES\
    \ HERE\n    if n % 2 == 0 {\n        for a in 2...n {\n            for b in 2...n\
    \ {\n                for c in 2...n {\n                    for d in 2...n {\n\
    \                        if a + b + c + d == n {\n                           \
    \ return true\n                        }\n                    }\n            \
    \    }\n            }\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // Your code\
    \ here!\n    // return true or false\n    if n < 8 {\n        return false\n \
    \   }\n    var evenNumbers = [Int]()\n    for i in 1..<n {\n        if i % 2 ==\
    \ 0 {\n            evenNumbers.append(i)\n        }\n    }\n    for i in 0..<evenNumbers.count\
    \ {\n        for j in i+1..<evenNumbers.count {\n            for k in j+1..<evenNumbers.count\
    \ {\n                for l in k+1..<evenNumbers.count {\n                    if\
    \ evenNumbers[i] + evenNumbers[j] + evenNumbers[k] + evenNumbers[l] == n {\n \
    \                       return true\n                    }\n                }\n\
    \            }\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpuwg1tbrw/tmpuwg1tbrw.swift:51: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afab96f7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afab93eeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afab93ee988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afab93ed7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuwg1tbrw                        0x000055ad4f38e5cd <unavailable> + 5581

    5    libc.so.6                          0x00002afab98e3460 __libc_start_main +
    245

    6    tmpuwg1tbrw                        0x000055ad4f38e199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    //TODO: Write\
    \ your solution here\n    if n < 8 {\n        return false\n    }\n    let array\
    \ = get_positive_even_numbers(n: n)\n    if n < 10 {\n        for value in array\
    \ {\n            for value2 in array {\n                for value3 in array {\n\
    \                    for value4 in array {\n                        if value +\
    \ value2 + value3 + value4 == n {\n                            return true\n \
    \                       }\n                    }\n                }\n        \
    \    }\n        }\n    } else {\n        for value in array {\n            for\
    \ value2 in array {\n                for value3 in array {\n                 \
    \   for value4 in array {\n                        if value + value2 + value3\
    \ + value4 > n {\n                            break\n                        }\n\
    \                        if value + value2 + value3 + value4 == n {\n        \
    \                    return true\n                        }\n                \
    \    }\n                }\n            }\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp6kjh6hn2.swift:15:17: error: cannot find 'get_positive_even_numbers'\
    \ in scope\n    let array = get_positive_even_numbers(n: n)\n                ^~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var n = n\n \
    \   for i in 1...4 {\n        n -= 2 * i\n    }\n    return n == 0\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpxmte1nrc/tmpxmte1nrc.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acfcb5fec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acfcb2f5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acfcb2f5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acfcb2f47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxmte1nrc                        0x000055dc1c46738d <unavailable> + 5005

    5    libc.so.6                          0x00002acfcb7ea460 __libc_start_main +
    245

    6    tmpxmte1nrc                        0x000055dc1c466f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // write your\
    \ code here\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpws0gime9/tmpws0gime9.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9e9193fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9e91636b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9e91636988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9e916357b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpws0gime9                        0x000055ba22eb129d <unavailable> + 4765

    5    libc.so.6                          0x00002b9e91b2b460 __libc_start_main +
    245

    6    tmpws0gime9                        0x000055ba22eb0e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ || n <= 0 {\n        return false\n    }\n    var sum: Int = 0\n    for i in\
    \ 0...n {\n        sum += i\n        if sum == n {\n            return true\n\
    \        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpvp9gzo32/tmpvp9gzo32.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad5c0a2dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad5c0724b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad5c0724988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad5c07237b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvp9gzo32                        0x000055fc946933a9 <unavailable> + 5033

    5    libc.so.6                          0x00002ad5c0c19460 __libc_start_main +
    245

    6    tmpvp9gzo32                        0x000055fc94692fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    let sqrtN = Int(sqrt(Double(n)))\n\
    \    for a in stride(from: 2, through: sqrtN, by: 2) {\n        let remaining\
    \ = n - a\n        let sqrtRemaining = Int(sqrt(Double(remaining)))\n        for\
    \ b in stride(from: 2, through: sqrtRemaining, by: 2) {\n            let remaining2\
    \ = remaining - b\n            let sqrtRemaining2 = Int(sqrt(Double(remaining2)))\n\
    \            for c in stride(from: 2, through: sqrtRemaining2, by: 2) {\n    \
    \            let remaining3 = remaining2 - c\n                if remaining3 %\
    \ 2 == 0 {\n                    return true\n                }\n            }\n\
    \        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp2t5q16vc.swift:11:21: error: cannot find 'sqrt' in scope\n    let\
    \ sqrtN = Int(sqrt(Double(n)))\n                    ^~~~\n/tmp/tmp2t5q16vc.swift:14:33:\
    \ error: cannot find 'sqrt' in scope\n        let sqrtRemaining = Int(sqrt(Double(remaining)))\n\
    \                                ^~~~\n/tmp/tmp2t5q16vc.swift:17:38: error: cannot\
    \ find 'sqrt' in scope\n            let sqrtRemaining2 = Int(sqrt(Double(remaining2)))\n\
    \                                     ^~~~\n"
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    //your code here\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpr3ea2xyv/tmpr3ea2xyv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6fd9563c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6fd925ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6fd925a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6fd92597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3ea2xyv                        0x0000563e26afc29d <unavailable> + 4765

    5    libc.so.6                          0x00002b6fd974f460 __libc_start_main +
    245

    6    tmpr3ea2xyv                        0x0000563e26afbe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n < 4 {\n\
    \        return false\n    }\n    if n % 2 == 1 {\n        return false\n    }\n\
    \    return (1...n/2).contains { $0 % 2 == 0 && (n - $0) % 2 == 0 }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpb3p69nfu/tmpb3p69nfu.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b10e1f6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b10e1c65b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b10e1c65988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b10e1c647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb3p69nfu                        0x000055b7a3b07373 <unavailable> + 4979

    5    libc.so.6                          0x00002b10e215a460 __libc_start_main +
    245

    6    tmpb3p69nfu                        0x000055b7a3b07029 <unavailable> + 4137

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var total = 0\n\
    \    var count = 0\n    while total < n {\n        total += 2\n        count +=\
    \ 1\n    }\n    return total == n && count == 4\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp2gc5nga4/tmp2gc5nga4.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f5d1eac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f5cee1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f5cee1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f5cee07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2gc5nga4                        0x0000560a4046f311 <unavailable> + 4881

    5    libc.so.6                          0x00002b1f5d3d6460 __libc_start_main +
    245

    6    tmp2gc5nga4                        0x0000560a4046ee69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return n % 2\
    \ == 0 && n != 4\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp_1qa5ldj/tmp_1qa5ldj.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1559cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1556c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1556c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1556c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_1qa5ldj                        0x0000556818a7f2b9 <unavailable> + 4793

    5    libc.so.6                          0x00002af155bbb460 __libc_start_main +
    245

    6    tmp_1qa5ldj                        0x0000556818a7eef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result =\
    \ false\n    for i in 1...n {\n        for j in 1...n {\n            for k in\
    \ 1...n {\n                for l in 1...n {\n                    if (i + j + k\
    \ + l) == n {\n                        result = true\n                    }\n\
    \                }\n            }\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpf0jd69kc/tmpf0jd69kc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afec0848c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afec053fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afec053f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afec053e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf0jd69kc                        0x000056132aac2333 <unavailable> + 4915

    5    libc.so.6                          0x00002afec0a34460 __libc_start_main +
    245

    6    tmpf0jd69kc                        0x000056132aac1fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    if n <= 4 {\n        return false\n    }\n\
    \    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpwttcd6vw/tmpwttcd6vw.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c3596bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c35662b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c35662988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c356617b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwttcd6vw                        0x000055b7f898c2b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b2c35b57460 __libc_start_main +
    245

    6    tmpwttcd6vw                        0x000055b7f898bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    if n == 0 {\n        return true\n    }\n\
    \    if n == 2 {\n        return false\n    }\n    var numbers = [Int]()\n   \
    \ var sum = 0\n    for i in 1...(n/2) {\n        if n - sum > 2 {\n          \
    \  numbers.append(2)\n            sum += 2\n        } else {\n            numbers.append(n\
    \ - sum)\n            sum += (n - sum)\n        }\n    }\n    return (sum == n)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpp9ejdn_7/tmpp9ejdn_7.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b44e394ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b44e3641b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b44e3641988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b44e36407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp9ejdn_7                        0x000055a4fb6653e3 <unavailable> + 5091

    5    libc.so.6                          0x00002b44e3b36460 __libc_start_main +
    245

    6    tmpp9ejdn_7                        0x000055a4fb665099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var true_false\
    \ = false\n    var counter = 2\n    var sum = 0\n    while counter < n {\n   \
    \     if n % counter == 0 {\n            sum += counter\n        }\n        counter\
    \ += 2\n    }\n    if sum == n {\n        true_false = true\n    }\n    return\
    \ true_false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp6law9fli/tmp6law9fli.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b064da43c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b064d73ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b064d73a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b064d7397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6law9fli                        0x000056475c23132d <unavailable> + 4909

    5    libc.so.6                          0x00002b064dc2f460 __libc_start_main +
    245

    6    tmp6law9fli                        0x000056475c230ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return n == 0\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmprwsy06ya/tmprwsy06ya.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72b4ea2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72b4b99b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72b4b99988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72b4b987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwsy06ya                        0x000055e166d0429d <unavailable> + 4765

    5    libc.so.6                          0x00002b72b508e460 __libc_start_main +
    245

    6    tmprwsy06ya                        0x000055e166d03e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    if n == 0 {\n        return true\n    }\n\
    \    if n == 2 {\n        return false\n    }\n    return is_equal_to_sum_even(n:\
    \ n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp11jevh_2/tmp11jevh_2.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b79af6bac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b79af3b1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b79af3b1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b79af3b07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp11jevh_2                        0x0000561b307ce32d <unavailable> + 4909

    5    libc.so.6                          0x00002b79af8a6460 __libc_start_main +
    245

    6    tmp11jevh_2                        0x0000561b307cdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return n % 2\
    \ == 0 && n == 4 || n % 2 == 0 && n == 6 || n % 2 == 0 && n == 8\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmprkbqh33e/tmprkbqh33e.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7582b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba757fb0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba757fb0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba757faf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprkbqh33e                        0x00005579bd5b0243 <unavailable> + 4675

    5    libc.so.6                          0x00002ba7584a5460 __libc_start_main +
    245

    6    tmprkbqh33e                        0x00005579bd5afef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n  var result = false\n\
    \  let max = n/2\n  var current_number = 0\n  while current_number <= max {\n\
    \    if is_equal_to_sum_even(n: n - current_number, current_number: current_number)\
    \ {\n      result = true\n      break\n    }\n    current_number += 2\n  }\n \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpcvmm6h3v.swift:15:68: error: extra argument 'current_number' in\
    \ call\n    if is_equal_to_sum_even(n: n - current_number, current_number: current_number)\
    \ {\n                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result =\
    \ false\n    var sum = 0\n    var count = 0\n    var num = n\n    while num >\
    \ 0 {\n        if num % 2 == 0 {\n            sum += num\n            count +=\
    \ 1\n        }\n        num -= 1\n    }\n    if count == 4 && sum == n {\n   \
    \     result = true\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpbxskfste/tmpbxskfste.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac66523ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac664f35b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac664f35988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac664f347b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbxskfste                        0x0000563d8361432d <unavailable> + 4909

    5    libc.so.6                          0x00002ac66542a460 __libc_start_main +
    245

    6    tmpbxskfste                        0x0000563d83613ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return is_equal_to_sum_n_even(n:\
    \ n, n: 4)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmphzm5yjrh.swift:11:12: error: cannot find 'is_equal_to_sum_n_even'\
    \ in scope\n    return is_equal_to_sum_n_even(n: n, n: 4)\n           ^~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n < 8 {\n\
    \        return false\n    }\n    let x = n / 2\n    for i in 0...x {\n      \
    \  for j in 0...x {\n            for k in 0...x {\n                for l in 0...x\
    \ {\n                    if i + j + k + l == x {\n                        return\
    \ true\n                    }\n                }\n            }\n        }\n \
    \   }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpzrot9g0u/tmpzrot9g0u.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af969a74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af96976bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af96976b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af96976a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzrot9g0u                        0x0000556e57dc8507 <unavailable> + 5383

    5    libc.so.6                          0x00002af969c60460 __libc_start_main +
    245

    6    tmpzrot9g0u                        0x0000556e57dc7fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    /// Write your\
    \ code here and return the right value\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpf5w45wd9/tmpf5w45wd9.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5d007f7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5d004eeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5d004ee988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5d004ed7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf5w45wd9                        0x0000559827bc829d <unavailable> + 4765

    5    libc.so.6                          0x00002b5d009e3460 __libc_start_main +
    245

    6    tmpf5w45wd9                        0x0000559827bc7e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    \n    guard n\
    \ > 0 else { return false }\n    \n    var isEqual = false\n    var even = 2\n\
    \    var sum = 0\n    var howMany = 0\n    \n    while !isEqual {\n        if\
    \ sum == n {\n            if howMany == 4 {\n                isEqual = true\n\
    \            } else {\n                sum = 0\n                howMany = 0\n\
    \                even = 2\n            }\n        } else if sum > n {\n      \
    \      if even > n {\n                sum = 0\n                howMany = 0\n \
    \               even = 2\n            } else {\n                even += 2\n  \
    \          }\n        } else {\n            sum += even\n            howMany +=\
    \ 1\n        }\n    }\n    \n    return isEqual\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660009735
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ || n < 8 {\n        return false\n    }\n    return true\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009730
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return is_equal_to_sum_even(n:\
    \ n, count: 4)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpo26mrvyy.swift:11:46: error: extra argument 'count' in call\n \
    \   return is_equal_to_sum_even(n: n, count: 4)\n                            \
    \   ~~~~~~~~~~~~~~^~\n"
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result =\
    \ false\n    // TODO: write your code here\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpnplivcfe/tmpnplivcfe.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5fd0e5fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5fd0b56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5fd0b56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5fd0b557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnplivcfe                        0x0000564d9364629d <unavailable> + 4765

    5    libc.so.6                          0x00002b5fd104b460 __libc_start_main +
    245

    6    tmpnplivcfe                        0x0000564d93645e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n < 2 {\n\
    \        return false\n    }\n    if n % 2 == 1 {\n        return false\n    }\n\
    \    if n % 4 == 0 {\n        return true\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpqacgxzp_/tmpqacgxzp_.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae52ede4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae52eadbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae52eadb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae52eada7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqacgxzp_                        0x000055797baef243 <unavailable> + 4675

    5    libc.so.6                          0x00002ae52efd0460 __libc_start_main +
    245

    6    tmpqacgxzp_                        0x000055797baeeef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var results =\
    \ [Int]()\n    findCombination(n, [], &results)\n    for result in results {\n\
    \        if result.count == 4 {\n            return true\n        }\n    }\n \
    \   return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp7uuz0t94.swift:12:5: error: cannot find 'findCombination' in scope\n\
    \    findCombination(n, [], &results)\n    ^~~~~~~~~~~~~~~\n/tmp/tmp7uuz0t94.swift:14:19:\
    \ error: value of type 'Int' has no member 'count'\n        if result.count ==\
    \ 4 {\n           ~~~~~~ ^~~~~\n"
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n%2 != 0 ||\
    \ n < 8 {\n        return false\n    }\n    var remainder = n\n    var result\
    \ = 0\n    for i in 1...4 {\n        remainder -= 2\n        result += remainder\n\
    \    }\n    return n == result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmptqdk0tqs/tmptqdk0tqs.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2f4368c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2f405fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2f405f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2f405e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptqdk0tqs                        0x000055d58b52641d <unavailable> + 5149

    5    libc.so.6                          0x00002ab2f4554460 __libc_start_main +
    245

    6    tmptqdk0tqs                        0x000055d58b525fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // TODO: Complete\
    \ the function\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp6_e0uped/tmp6_e0uped.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abaedd29c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abaeda20b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abaeda20988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abaeda1f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6_e0uped                        0x0000561158a721b3 <unavailable> + 4531

    5    libc.so.6                          0x00002abaedf15460 __libc_start_main +
    245

    6    tmp6_e0uped                        0x0000561158a71e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return (n % 2\
    \ == 0) && (n % 4 != 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpgrjyhzi_/tmpgrjyhzi_.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e5457bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e54272b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e54272988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e542717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgrjyhzi_                        0x00005596f87b22b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b8e54767460 __libc_start_main +
    245

    6    tmpgrjyhzi_                        0x00005596f87b1ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n <= 0 {\n\
    \        return false\n    }\n    var list = Array(repeating: 0, count: n)\n \
    \   return findCombinations(n: n, list: &list, i: 0, sum: 0)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpeeenkqb3.swift:15:12: error: cannot find 'findCombinations' in\
    \ scope\n    return findCombinations(n: n, list: &list, i: 0, sum: 0)\n      \
    \     ^~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n == 0 {\n\
    \        return true\n    }\n    for i in 2...n {\n        if n % i == 0 && n\
    \ / i % 2 == 0 {\n            return true\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpl8lpoebc/tmpl8lpoebc.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab6374bcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab6371b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab6371b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab6371b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl8lpoebc                        0x0000558005c17333 <unavailable> + 4915

    5    libc.so.6                          0x00002ab6376a8460 __libc_start_main +
    245

    6    tmpl8lpoebc                        0x0000558005c16fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n\
    \    for i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n       \
    \ }\n    }\n    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpn1uchejw/tmpn1uchejw.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1074655c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b107434cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b107434c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b107434b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpn1uchejw                        0x000055d3d00a841d <unavailable> + 5149

    5    libc.so.6                          0x00002b1074841460 __libc_start_main +
    245

    6    tmpn1uchejw                        0x000055d3d00a7fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    guard n >= 8\
    \ else { return false }\n    for a in 2...n {\n        for b in 2...n {\n    \
    \        for c in 2...n {\n                for d in 2...n {\n                \
    \    if (a + b + c + d == n) && (a % 2 == 0) && (b % 2 == 0) && (c % 2 == 0) &&\
    \ (d % 2 == 0) {\n                        return true\n                    }\n\
    \                }\n            }\n        }\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return n % 2\
    \ == 0 && n % 4 != 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkl2e7bvj/tmpkl2e7bvj.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afbec431c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afbec128b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afbec128988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afbec1277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkl2e7bvj                        0x0000564e000082b9 <unavailable> + 4793

    5    libc.so.6                          0x00002afbec61d460 __libc_start_main +
    245

    6    tmpkl2e7bvj                        0x0000564e00007ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // Write your\
    \ solution here\n    var result = false\n    var sum = 0\n    for i in 1...n {\n\
    \        if i % 2 == 0 {\n            sum += i\n            if sum == n {\n  \
    \              result = true\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp2efctme4/tmp2efctme4.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b99e41fcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b99e3ef3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b99e3ef3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b99e3ef27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2efctme4                        0x00005632800153a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b99e43e8460 __libc_start_main +
    245

    6    tmp2efctme4                        0x0000563280014fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if (n % 2 !=\
    \ 0) {\n        return false\n    }\n    if (n < 8) {\n        return false\n\
    \    }\n    var sum = 0\n    for i in 0...n/2 {\n        for j in i...n/2 {\n\
    \            for k in j...n/2 {\n                for l in k...n/2 {\n        \
    \            sum = i + j + k + l\n                    if (sum == n) {\n      \
    \                  return true\n                    }\n                }\n   \
    \         }\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009730
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return is_equal_to_sum_even(n:\
    \ n, m: 4)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpbb6eh3x2.swift:11:42: error: extra argument 'm' in call\n    return\
    \ is_equal_to_sum_even(n: n, m: 4)\n                               ~~~~~~~~~~^~\n"
  stdout: ''
  timestamp: 1660009730
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return is_equal_to_sum_even_helper(n:\
    \ n, positiveEvenNumbers: 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpzg0z8ft5.swift:11:12: error: cannot find 'is_equal_to_sum_even_helper'\
    \ in scope\n    return is_equal_to_sum_even_helper(n: n, positiveEvenNumbers:\
    \ 2)\n           ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009730
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return sum_even(n:\
    \ n) == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp6bp0eswl.swift:11:12: error: cannot find 'sum_even' in scope\n\
    \    return sum_even(n: n) == n\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    //your code here\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpr3ea2xyv/tmpr3ea2xyv.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6fd9563c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6fd925ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6fd925a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6fd92597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr3ea2xyv                        0x0000563e26afc29d <unavailable> + 4765

    5    libc.so.6                          0x00002b6fd974f460 __libc_start_main +
    245

    6    tmpr3ea2xyv                        0x0000563e26afbe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    if n > 10 {\n        return true\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpobw1epym/tmpobw1epym.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae41fdccc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae41fac3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae41fac3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae41fac27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpobw1epym                        0x000055f2a12bc32d <unavailable> + 4909

    5    libc.so.6                          0x00002ae41ffb8460 __libc_start_main +
    245

    6    tmpobw1epym                        0x000055f2a12bbef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var count = 0\n\
    \    var sum = 0\n    for i in 2...n{\n        if i % 2 == 0{\n            sum\
    \ += i\n            count += 1\n        }\n        if count == 4 && sum == n{\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpcfk3le91/tmpcfk3le91.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b908b4aac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b908b1a1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b908b1a1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b908b1a07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcfk3le91                        0x0000559e998c041d <unavailable> + 5149

    5    libc.so.6                          0x00002b908b696460 __libc_start_main +
    245

    6    tmpcfk3le91                        0x0000559e998bffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result =\
    \ false\n    if n % 2 == 0 && n > 3 {\n        for i in 1...n {\n            if\
    \ i % 2 == 0 {\n                var temp = n - i\n                if temp % 2\
    \ == 0 {\n                    for j in 1...temp {\n                        if\
    \ j % 2 == 0 {\n                            var temp2 = temp - j\n           \
    \                 if temp2 % 2 == 0 {\n                                for k in\
    \ 1...temp2 {\n                                    if k % 2 == 0 {\n         \
    \                               var temp3 = temp2 - k\n                      \
    \                  if temp3 % 2 == 0 {\n                                     \
    \       var temp4 = temp3 - i\n                                            if\
    \ temp4 % 2 == 0 {\n                                                result = true\n\
    \                                            }\n                             \
    \           }\n                                    }\n                       \
    \         }\n                            }\n                        }\n      \
    \              }\n                }\n            }\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'Swift/ClosedRange.swift:347: Fatal error: Range requires lowerBound <=
    upperBound

    Current stack trace:

    0    libswiftCore.so                    0x00002b0e205a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0e202a0561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b0e202a0286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b0e202a013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b0e2029fbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpglzgr1nv                        0x0000559b3c0c2e24 <unavailable> + 7716

    6    tmpglzgr1nv                        0x0000559b3c0c22cb <unavailable> + 4811

    7    libc.so.6                          0x00002b0e20795460 __libc_start_main +
    245

    8    tmpglzgr1nv                        0x0000559b3c0c1fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // your code\
    \ here\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp66cxy3t_/tmp66cxy3t_.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acc179edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acc176e4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acc176e4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acc176e37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp66cxy3t_                        0x000055aba21bd29d <unavailable> + 4765

    5    libc.so.6                          0x00002acc17bd9460 __libc_start_main +
    245

    6    tmp66cxy3t_                        0x000055aba21bce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n\
    \    var even = 2\n    var count = 0\n    while sum < n && count < 4 {\n     \
    \   sum += even\n        even += 2\n        count += 1\n    }\n    return (sum\
    \ == n) && (count == 4)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpjt6h7e8b/tmpjt6h7e8b.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abcf0c7bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abcf0972b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abcf0972988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abcf09717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjt6h7e8b                        0x0000559dee73829d <unavailable> + 4765

    5    libc.so.6                          0x00002abcf0e67460 __libc_start_main +
    245

    6    tmpjt6h7e8b                        0x0000559dee737e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    //TODO: Implement\
    \ this function\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpjfw7b0eo/tmpjfw7b0eo.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b12c03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b128fab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b128fa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b128f97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjfw7b0eo                        0x0000562222f591b3 <unavailable> + 4531

    5    libc.so.6                          0x00002b7b12def460 __libc_start_main +
    245

    6    tmpjfw7b0eo                        0x0000562222f58e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return n % 2\
    \ == 0 && n % 8 != 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp5lmkrrej/tmp5lmkrrej.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b23b2dfcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b23b2af3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b23b2af3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23b2af27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5lmkrrej                        0x00005622c0614243 <unavailable> + 4675

    5    libc.so.6                          0x00002b23b2fe8460 __libc_start_main +
    245

    6    tmp5lmkrrej                        0x00005622c0613ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return n == n_sum_even(n:\
    \ n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n: 4) ==\
    \ false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp38kj0lep.swift:11:17: error: cannot find 'n_sum_even' in scope\n\
    \    return n == n_sum_even(n: n)\n                ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp8i_k5dmt/tmp8i_k5dmt.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b241cf86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b241cc7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b241cc7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b241cc7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8i_k5dmt                        0x0000564111da21b3 <unavailable> + 4531

    5    libc.so.6                          0x00002b241d172460 __libc_start_main +
    245

    6    tmp8i_k5dmt                        0x0000564111da1e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // TODO: This\
    \ function should be implemented\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp9vd1f2gc/tmp9vd1f2gc.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab6b0e48c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab6b0b3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab6b0b3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab6b0b3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9vd1f2gc                        0x00005571ec32f29d <unavailable> + 4765

    5    libc.so.6                          0x00002ab6b1034460 __libc_start_main +
    245

    6    tmp9vd1f2gc                        0x00005571ec32ee69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // your code\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpvrv6nays/tmpvrv6nays.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0ef7702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0ef73f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0ef73f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0ef73f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvrv6nays                        0x0000563c5f64329d <unavailable> + 4765

    5    libc.so.6                          0x00002b0ef78ee460 __libc_start_main +
    245

    6    tmpvrv6nays                        0x0000563c5f642e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    for i in 2..<n\
    \ {\n        for j in i..<n {\n            for k in j..<n {\n                for\
    \ l in k..<n {\n                    if i + j + k + l == n && i % 2 == 0 && j %\
    \ 2 == 0 && k % 2 == 0 && l % 2 == 0 {\n                        return true\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n < 4 {\n\
    \        return false\n    }\n    if n % 2 == 1 {\n        return false\n    }\n\
    \    var x = n / 2\n    var y = 2\n    var z = 2\n    var w = 2\n    var i = 0\n\
    \    while i != x {\n        while y != x {\n            while z != x {\n    \
    \            while w != x {\n                    if i + y + z + w == n {\n   \
    \                     return true\n                    }\n                   \
    \ w += 2\n                }\n                w = 2\n                z += 2\n \
    \           }\n            z = 2\n            y += 2\n        }\n        y = 2\n\
    \        i += 2\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmppt3xvcc4/tmppt3xvcc4.swift:57: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0f82926c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0f8261db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0f8261d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0f8261c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppt3xvcc4                        0x000055ef941df2b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b0f82b12460 __libc_start_main +
    245

    6    tmppt3xvcc4                        0x000055ef941deef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // write your\
    \ code here\n    let max = n / 2\n    let min = n / 4\n    var n = n\n    var\
    \ hasil = false\n    for i in min...max {\n        for j in min...max {\n    \
    \        for k in min...max {\n                for l in min...max {\n        \
    \            if i + j + k + l == n {\n                        hasil = true\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return hasil\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp9jx7qpu2/tmp9jx7qpu2.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7188941c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7188638b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7188638988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b71886377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9jx7qpu2                        0x0000564ce6eba333 <unavailable> + 4915

    5    libc.so.6                          0x00002b7188b2d460 __libc_start_main +
    245

    6    tmp9jx7qpu2                        0x0000564ce6eb9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n < 4 {\n\
    \        return false\n    }\n    if n % 2 == 1 {\n        return false\n    }\n\
    \    let upper = n/2\n    var counter = 0\n    for i in 1...upper {\n        if\
    \ i % 2 == 0 {\n            counter += 1\n        }\n    }\n    return counter\
    \ == 4\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpepinv4fx/tmpepinv4fx.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b87fcc25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b87fc91cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b87fc91c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b87fc91b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpepinv4fx                        0x0000563501e8841d <unavailable> + 5149

    5    libc.so.6                          0x00002b87fce11460 __libc_start_main +
    245

    6    tmpepinv4fx                        0x0000563501e87fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    let sum = n /\
    \ 2\n    let x = sum - 2\n    return (x == 2) || (x > 0 && is_equal_to_sum_even(n:\
    \ x))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpbfk9zibq/tmpbfk9zibq.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a0b614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a0b30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a0b30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a0b30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbfk9zibq                        0x000056290e5de3a1 <unavailable> + 5025

    5    libc.so.6                          0x00002b9a0b800460 __libc_start_main +
    245

    6    tmpbfk9zibq                        0x000056290e5ddef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    \n    var i =\
    \ 0\n    var j = 0\n    var k = 0\n    var l = 0\n    \n    for _ in 1...n/2 {\n\
    \        i += 2\n        j = 0\n        for _ in 1...n/2 {\n            j += 2\n\
    \            k = 0\n            for _ in 1...n/2 {\n                k += 2\n \
    \               l = 0\n                for _ in 1...n/2 {\n                  \
    \  l += 2\n                    if (i + j + k + l) == n {\n                   \
    \     return true\n                    }\n                }\n            }\n \
    \       }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // Write your\
    \ solution here\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpgin647tk/tmpgin647tk.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b299cdfac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b299caf1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b299caf1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b299caf07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgin647tk                        0x000056158a9de29d <unavailable> + 4765

    5    libc.so.6                          0x00002b299cfe6460 __libc_start_main +
    245

    6    tmpgin647tk                        0x000056158a9dde69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n\
    \    for i in 1...n/2 {\n        if n - i > 0 {\n            sum += (n - i)\n\
    \        }\n    }\n    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpxxskgwnx/tmpxxskgwnx.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b388367cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3883373b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3883373988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b38833727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxskgwnx                        0x0000562ff02f641d <unavailable> + 5149

    5    libc.so.6                          0x00002b3883868460 __libc_start_main +
    245

    6    tmpxxskgwnx                        0x0000562ff02f5fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n\
    \    var count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n          \
    \  sum += i\n            count += 1\n        }\n        if sum == n && count ==\
    \ 4 {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp67ffml19/tmp67ffml19.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3da3fb9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3da3cb0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3da3cb0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3da3caf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp67ffml19                        0x000055671e60741d <unavailable> + 5149

    5    libc.so.6                          0x00002b3da41a5460 __libc_start_main +
    245

    6    tmp67ffml19                        0x000055671e606fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    let right = n/2\n\
    \    if right % 2 == 0 {\n        return Int(sqrt(Double(right)))\n    } else\
    \ {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpblebzy60.swift:13:20: error: cannot find 'sqrt' in scope\n    \
    \    return Int(sqrt(Double(right)))\n                   ^~~~\n/tmp/tmpblebzy60.swift:13:16:\
    \ error: no 'init' candidates produce the expected contextual result type 'Bool'\n\
    \        return Int(sqrt(Double(right)))\n               ^\nSwift.Int:7:12: note:\
    \ 'init(_:)' produces 'Int', not the expected contextual result type 'Bool'\n\
    \    public init(_ source: Float16)\n           ^\nSwift.Int:10:12: note: 'init(_:)'\
    \ produces 'Int', not the expected contextual result type 'Bool'\n    public init(_\
    \ source: Float)\n           ^\nSwift.Int:12:12: note: 'init(_:)' produces 'Int',\
    \ not the expected contextual result type 'Bool'\n    public init(_ source: Double)\n\
    \           ^\nSwift.Int:14:12: note: 'init(_:)' produces 'Int', not the expected\
    \ contextual result type 'Bool'\n    public init(_ source: Float80)\n        \
    \   ^\nSwift.Int:28:12: note: 'init(_:)' produces 'Int', not the expected contextual\
    \ result type 'Bool'\n    public init(_ _value: Builtin.Int64)\n           ^\n\
    Swift.Int:61:12: note: 'init(_:)' produces 'Int', not the expected contextual\
    \ result type 'Bool'\n    public init(_ _v: Builtin.Word)\n           ^\nSwift.FixedWidthInteger:3:23:\
    \ note: 'init(_:)' produces 'Int?', not the expected contextual result type 'Bool'\n\
    \    @inlinable public init?(_ description: String)\n                      ^\n"
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // the number\
    \ n must be greater than the sum of 4 numbers 2,2,2,2\n    if n < 8 {\n      \
    \  return false\n    }\n    // for each of the possible combinations of numbers,\
    \ check whether their sum is equal to n\n    for i in stride(from: 2, to: n -\
    \ 2, by: 2) {\n        for j in stride(from: 2, to: n - i, by: 2) {\n        \
    \    for k in stride(from: 2, to: n - i - j, by: 2) {\n                for l in\
    \ stride(from: 2, to: n - i - j - k, by: 2) {\n                    if i + j +\
    \ k + l == n {\n                        return true\n                    }\n \
    \               }\n            }\n        }\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpnxvxzcub/tmpnxvxzcub.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaad8c94c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaad898bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaad898b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaad898a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnxvxzcub                        0x00005602200044ad <unavailable> + 5293

    5    libc.so.6                          0x00002aaad8e80460 __libc_start_main +
    245

    6    tmpnxvxzcub                        0x0000560220004079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp8i_k5dmt/tmp8i_k5dmt.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b241cf86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b241cc7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b241cc7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b241cc7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8i_k5dmt                        0x0000564111da21b3 <unavailable> + 4531

    5    libc.so.6                          0x00002b241d172460 __libc_start_main +
    245

    6    tmp8i_k5dmt                        0x0000564111da1e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // TODO: Implement\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmprir49598/tmprir49598.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b77cce03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b77ccafab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b77ccafa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b77ccaf97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprir49598                        0x00005611c8f5d29d <unavailable> + 4765

    5    libc.so.6                          0x00002b77ccfef460 __libc_start_main +
    245

    6    tmprir49598                        0x00005611c8f5ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    if n % 4 == 0 {\n        return true\n \
    \   }\n    if n % 2 == 0 {\n        return true\n    }\n    return false\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpmti62dcp/tmpmti62dcp.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af500c8cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af500983b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af500983988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5009827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmti62dcp                        0x000055668856a243 <unavailable> + 4675

    5    libc.so.6                          0x00002af500e78460 __libc_start_main +
    245

    6    tmpmti62dcp                        0x0000556688569ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    var sum = 0\n    for i in 1..<n/2 {\n  \
    \      if i % 2 == 0 {\n            sum += i\n        }\n        if sum == n {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpoy_e0zc8/tmpoy_e0zc8.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abb428fec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abb425f5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abb425f5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abb425f47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoy_e0zc8                        0x000055eb3ae7141d <unavailable> + 5149

    5    libc.so.6                          0x00002abb42aea460 __libc_start_main +
    245

    6    tmpoy_e0zc8                        0x000055eb3ae70fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return is_equal_to_sum_even_with_start(n:\
    \ n, start: 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpbguw9i6e.swift:11:12: error: cannot find 'is_equal_to_sum_even_with_start'\
    \ in scope\n    return is_equal_to_sum_even_with_start(n: n, start: 2)\n     \
    \      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return n % 2\
    \ == 0 && n % 4 != 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpkl2e7bvj/tmpkl2e7bvj.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afbec431c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afbec128b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afbec128988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afbec1277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkl2e7bvj                        0x0000564e000082b9 <unavailable> + 4793

    5    libc.so.6                          0x00002afbec61d460 __libc_start_main +
    245

    6    tmpkl2e7bvj                        0x0000564e00007ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // Your code\
    \ here\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpcbtfrfta/tmpcbtfrfta.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abbf821bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abbf7f12b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abbf7f12988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abbf7f117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcbtfrfta                        0x00005636e1f741b3 <unavailable> + 4531

    5    libc.so.6                          0x00002abbf8407460 __libc_start_main +
    245

    6    tmpcbtfrfta                        0x00005636e1f73e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // write your\
    \ code here\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpws0gime9/tmpws0gime9.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9e9193fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9e91636b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9e91636988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9e916357b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpws0gime9                        0x000055ba22eb129d <unavailable> + 4765

    5    libc.so.6                          0x00002b9e91b2b460 __libc_start_main +
    245

    6    tmpws0gime9                        0x000055ba22eb0e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result =\
    \ false\n    var counter = 0\n    while counter < n {\n        if n == (n - counter)\
    \ {\n            result = true\n        }\n        counter += 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp6unbm9iq/tmp6unbm9iq.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acc2a026c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acc29d1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acc29d1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acc29d1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6unbm9iq                        0x000055b4513121b3 <unavailable> + 4531

    5    libc.so.6                          0x00002acc2a212460 __libc_start_main +
    245

    6    tmp6unbm9iq                        0x000055b451311e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // TODO: Solve\
    \ the problem here\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpkuim4qsj/tmpkuim4qsj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2e19e58c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2e19b4fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2e19b4f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2e19b4e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkuim4qsj                        0x00005635ae83929d <unavailable> + 4765

    5    libc.so.6                          0x00002b2e1a044460 __libc_start_main +
    245

    6    tmpkuim4qsj                        0x00005635ae838e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    var arr = [Int]()\n    for i in 1...n {\n\
    \        if i % 2 == 0 {\n            arr.append(i)\n        }\n    }\n    var\
    \ sum = 0\n    var result = false\n    for j in 0...arr.count - 1 {\n        sum\
    \ += arr[j]\n        for k in (j + 1)...arr.count - 1 {\n            sum += arr[k]\n\
    \            for l in (k + 1)...arr.count - 1 {\n                sum += arr[l]\n\
    \                for m in (l + 1)...arr.count - 1 {\n                    sum +=\
    \ arr[m]\n                    if sum == n {\n                        result =\
    \ true\n                    }\n                    sum -= arr[m]\n           \
    \     }\n                sum -= arr[l]\n            }\n            sum -= arr[k]\n\
    \        }\n        sum -= arr[j]\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'Swift/ClosedRange.swift:347: Fatal error: Range requires lowerBound <=
    upperBound

    Current stack trace:

    0    libswiftCore.so                    0x00002ba2f7073c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba2f6d6a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ba2f6d6a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ba2f6d6a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ba2f6d69bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpcg82fhnk                        0x000055feb558606c <unavailable> + 8300

    6    tmpcg82fhnk                        0x000055feb558547b <unavailable> + 5243

    7    libc.so.6                          0x00002ba2f725f460 __libc_start_main +
    245

    8    tmpcg82fhnk                        0x000055feb5585199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp8i_k5dmt/tmp8i_k5dmt.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b241cf86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b241cc7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b241cc7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b241cc7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8i_k5dmt                        0x0000564111da21b3 <unavailable> + 4531

    5    libc.so.6                          0x00002b241d172460 __libc_start_main +
    245

    6    tmp8i_k5dmt                        0x0000564111da1e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // ...\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmptbx3d4sh/tmptbx3d4sh.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17b42e0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17b3fd7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17b3fd7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17b3fd67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptbx3d4sh                        0x00005607353a829d <unavailable> + 4765

    5    libc.so.6                          0x00002b17b44cc460 __libc_start_main +
    245

    6    tmptbx3d4sh                        0x00005607353a7e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    assert(n > 0)\n\
    \    // TODO: Implement\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpj9s9m3bl/tmpj9s9m3bl.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b568f532c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b568f229b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b568f229988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b568f2287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj9s9m3bl                        0x000055b2532b629d <unavailable> + 4765

    5    libc.so.6                          0x00002b568f71e460 __libc_start_main +
    245

    6    tmpj9s9m3bl                        0x000055b2532b5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if (n % 2 !=\
    \ 0 || n < 8) {\n        return false\n    }\n    return true\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // your code\
    \ here\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp66cxy3t_/tmp66cxy3t_.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acc179edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acc176e4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acc176e4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acc176e37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp66cxy3t_                        0x000055aba21bd29d <unavailable> + 4765

    5    libc.so.6                          0x00002acc17bd9460 __libc_start_main +
    245

    6    tmp66cxy3t_                        0x000055aba21bce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    /// This string\
    \ is shown in case of failed tests\n    /// \n    /// You have to replace the\
    \ string below with your own code!\n    let result = \"Replace this string with\
    \ your code!\"\n    \n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmph4bbsao1.swift:16:12: error: cannot convert return expression of\
    \ type 'String' to return type 'Bool'\n    return result\n           ^~~~~~\n"
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    for num1 in 1...n/4\
    \ {\n        for num2 in 1...n/4 {\n            for num3 in 1...n/4 {\n      \
    \          for num4 in 1...n/4 {\n                    if num1 + num2 + num3 +\
    \ num4 == n {\n                        return true\n                    }\n  \
    \              }\n            }\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmppzta_r3q/tmppzta_r3q.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aae09bb4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aae098abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aae098ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aae098aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppzta_r3q                        0x000055583a4c7333 <unavailable> + 4915

    5    libc.so.6                          0x00002aae09da0460 __libc_start_main +
    245

    6    tmppzta_r3q                        0x000055583a4c6fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    \n    if n <\
    \ 8 { return false }\n    \n    let start = max(Int(sqrt(Double(n))) - 2, 0)\n\
    \    let end = min(n/2 - 1, start + 4)\n    \n    for a in start...end {\n   \
    \     let r = n - a\n        let s = sqrt(Double(r))\n        if s == Double(Int(s))\
    \ {\n            let b = Int(s)\n            let c = n - (a + b)\n           \
    \ let d = n - (a + b + c)\n            return a % 2 == 0 && b % 2 == 0 && c %\
    \ 2 == 0 && d % 2 == 0\n        }\n    }\n    \n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpvpzc_koz.swift:14:25: error: cannot find 'sqrt' in scope\n    let\
    \ start = max(Int(sqrt(Double(n))) - 2, 0)\n                        ^~~~\n/tmp/tmpvpzc_koz.swift:19:17:\
    \ error: cannot find 'sqrt' in scope\n        let s = sqrt(Double(r))\n      \
    \          ^~~~\n/tmp/tmpvpzc_koz.swift:22:28: error: cannot convert value of\
    \ type 'String' to expected argument type 'Int'\n            let c = n - (a +\
    \ b)\n                           ^\n"
  stdout: ''
  timestamp: 1660009730
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    guard n % 2 ==\
    \ 0 else {\n        return false\n    }\n    return is_equal_to_sum_even_helper(n:\
    \ n, sub: 2, counter: 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpyi4tb7s8.swift:14:12: error: cannot find 'is_equal_to_sum_even_helper'\
    \ in scope\n    return is_equal_to_sum_even_helper(n: n, sub: 2, counter: 0)\n\
    \           ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return (n % 2\
    \ == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpp_cl4swx/tmpp_cl4swx.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae423cdcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4239d3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4239d3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4239d27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp_cl4swx                        0x000055716bfed243 <unavailable> + 4675

    5    libc.so.6                          0x00002ae423ec8460 __libc_start_main +
    245

    6    tmpp_cl4swx                        0x000055716bfecef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result =\
    \ false\n    // We must at least have four elements\n    if n > 4 {\n        var\
    \ i = 2\n        var sum = i\n        // Keep track of number of elements\n  \
    \      var count = 1\n        // Start with the first element\n        while i\
    \ < n {\n            // Make sure the current element does not exceed n\n    \
    \        if sum + i < n {\n                // Increase sum and number of elements\n\
    \                sum += i\n                count += 1\n            }\n       \
    \     // Check if we have 4 elements and the sum is n\n            if count ==\
    \ 4 && sum == n {\n                result = true\n                break\n    \
    \        }\n            // Increase the current element\n            i += 2\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpkowr4j_8/tmpkowr4j_8.swift:53: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47d3567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47d325eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47d325e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47d325d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkowr4j_8                        0x00005645e2fa529d <unavailable> + 4765

    5    libc.so.6                          0x00002b47d3753460 __libc_start_main +
    245

    6    tmpkowr4j_8                        0x00005645e2fa4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n == 0 {\n\
    \        return true\n    }\n    if n < 0 {\n        return false\n    }\n   \
    \ for i in 0..<n/2 {\n        if is_equal_to_sum_even(n: n - i * 2) {\n      \
    \      return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660009736
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return is_equal_to_sum_even(currentTotal:\
    \ 0, remaining: n, count: 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp0x0dbxpd.swift:11:32: error: extra arguments at positions #1, #2,\
    \ #3 in call\n    return is_equal_to_sum_even(currentTotal: 0, remaining: n, count:\
    \ 0)\n                               ^\n/tmp/tmp0x0dbxpd.swift:10:6: note: 'is_equal_to_sum_even(n:)'\
    \ declared here\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n     ^\n/tmp/tmp0x0dbxpd.swift:11:33:\
    \ error: missing argument for parameter 'n' in call\n    return is_equal_to_sum_even(currentTotal:\
    \ 0, remaining: n, count: 0)\n                                ^\n            \
    \                    n: <#Int#>, \n/tmp/tmp0x0dbxpd.swift:10:6: note: 'is_equal_to_sum_even(n:)'\
    \ declared here\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n     ^\n"
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    let max = n / 2\n    for i in 0...max {\n\
    \        for j in i...max {\n            if i + j == max {\n                return\
    \ true\n            }\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpdckn898s/tmpdckn898s.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31950e6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3194dddb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3194ddd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3194ddc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdckn898s                        0x000055f202d15333 <unavailable> + 4915

    5    libc.so.6                          0x00002b31952d2460 __libc_start_main +
    245

    6    tmpdckn898s                        0x000055f202d14fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    \n    let n =\
    \ n\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    \n    while\
    \ i <= n/2 {\n        j = 0\n        while j <= n/2 {\n            k = 0\n   \
    \         while k <= n/2 {\n                l = 0\n                while l <=\
    \ n/2 {\n                    if i + j + k + l == n {\n                       \
    \ return true\n                    }\n                    l += 2\n           \
    \     }\n                k += 2\n            }\n            j += 2\n        }\n\
    \        i += 2\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp2xo8b98x/tmp2xo8b98x.swift:52: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad759524c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad75921bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad75921b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad75921a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2xo8b98x                        0x000055ec0acbd243 <unavailable> + 4675

    5    libc.so.6                          0x00002ad759710460 __libc_start_main +
    245

    6    tmp2xo8b98x                        0x000055ec0acbcef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // Write your\
    \ code here\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpd60cz9_d/tmpd60cz9_d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac66d5a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac66d2a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac66d2a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac66d29f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd60cz9_d                        0x00005598e78eb1b3 <unavailable> + 4531

    5    libc.so.6                          0x00002ac66d795460 __libc_start_main +
    245

    6    tmpd60cz9_d                        0x00005598e78eae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n  return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpcpmtgy1_/tmpcpmtgy1_.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8953085c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8952d7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8952d7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8952d7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcpmtgy1_                        0x000055e358bd629d <unavailable> + 4765

    5    libc.so.6                          0x00002b8953271460 __libc_start_main +
    245

    6    tmpcpmtgy1_                        0x000055e358bd5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    let evens = (0...n).filter{$0\
    \ % 2 == 0}\n    let combinations = Set(evens.combinations(4))\n    let sums =\
    \ combinations.map{$0.reduce(0, +)}\n    return sums.contains(n)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmprdcgodx7.swift:12:34: error: value of type '[ClosedRange<Int>.Element]'\
    \ (aka 'Array<Int>') has no member 'combinations'\n    let combinations = Set(evens.combinations(4))\n\
    \                           ~~~~~ ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    fatalError(\"\
    Not implemented\")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmplcb4gomd/tmplcb4gomd.swift:11: Fatal error: Not implemented

    Current stack trace:

    0    libswiftCore.so                    0x00002b28d88c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b28d85bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b28d85ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b28d85b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplcb4gomd                        0x0000564526b7660c <unavailable> + 5644

    5    tmplcb4gomd                        0x0000564526b761cb <unavailable> + 4555

    6    libc.so.6                          0x00002b28d8aaf460 __libc_start_main +
    245

    7    tmplcb4gomd                        0x0000564526b75ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    let x = ((n -\
    \ 1) / 2)\n    let y = ((n - 3) / 2)\n    let z = ((n - 5) / 2)\n    let w = ((n\
    \ - 7) / 2)\n    return ((n - ((x + y + z + w) * 2)) == 0)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp5c66bkro/tmp5c66bkro.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4680500c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b46801f7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b46801f7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46801f67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5c66bkro                        0x0000557fd1e5b2b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b46806ec460 __libc_start_main +
    245

    6    tmp5c66bkro                        0x0000557fd1e5aef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009730
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0\
    \ {\n        return false\n    }\n    if n == 0 {\n        return true\n    }\n\
    \    var lower = 0\n    var upper = n\n    while lower <= upper {\n        let\
    \ c = (lower + upper) / 2\n        let sum = sum_of_consecutive_numbers(n: c)\n\
    \        if sum == n {\n            return true\n        } else if sum > n {\n\
    \            upper = c - 1\n        } else {\n            lower = c + 1\n    \
    \    }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpo4zayb74.swift:21:19: error: cannot find 'sum_of_consecutive_numbers'\
    \ in scope\n        let sum = sum_of_consecutive_numbers(n: c)\n             \
    \     ^~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n < 4 {\n\
    \        return false\n    } else if n % 2 == 1 {\n        return false\n    }\
    \ else {\n        var sum = 0\n        var i = 2\n        while i <= n / 2 {\n\
    \            sum += i\n            i += 2\n        }\n        return sum == n\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmprmibgpk8/tmprmibgpk8.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada0b195c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada0ae8cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada0ae8c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada0ae8b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmibgpk8                        0x000055f41389432d <unavailable> + 4909

    5    libc.so.6                          0x00002ada0b381460 __libc_start_main +
    245

    6    tmprmibgpk8                        0x000055f413893ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660009731
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n < 8 {\n\
    \        return false\n    }\n    for var i in (0...n / 2) {\n        for var\
    \ j in (0...n / 2) {\n            for var k in (0...n / 2) {\n               \
    \ if n == i + j + k {\n                    return true\n                }\n  \
    \          }\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp2h3ttoyh/tmp2h3ttoyh.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab3db7aac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab3db4a1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab3db4a1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab3db4a07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2h3ttoyh                        0x000056060b838507 <unavailable> + 5383

    5    libc.so.6                          0x00002ab3db996460 __libc_start_main +
    245

    6    tmp2h3ttoyh                        0x000056060b837fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009731
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // code\n   \
    \ let range = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]\n\
    \    var i = 0\n    while i < range.count {\n        var j = i+1\n        while\
    \ j < range.count {\n            var k = j+1\n            while k < range.count\
    \ {\n                var m = k+1\n                while m < range.count {\n  \
    \                  if range[i] + range[j] + range[k] + range[m] == n {\n     \
    \                   return true\n                    }\n                    m\
    \ = m + 1\n                }\n                k = k + 1\n            }\n     \
    \       j = j + 1\n        }\n        i = i + 1\n    }\n    return false\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpobic2wiu/tmpobic2wiu.swift:50: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3073819c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3073510b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3073510988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b307350f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpobic2wiu                        0x000055ce4b69e44d <unavailable> + 5197

    5    libc.so.6                          0x00002b3073a05460 __libc_start_main +
    245

    6    tmpobic2wiu                        0x000055ce4b69e019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660009731
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    let arr = even_arr(n:\
    \ n)\n    let result = find_sum_of_array(arr: arr, n: n)\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp844oh23h.swift:11:15: error: cannot find 'even_arr' in scope\n\
    \    let arr = even_arr(n: n)\n              ^~~~~~~~\n/tmp/tmp844oh23h.swift:12:18:\
    \ error: cannot find 'find_sum_of_array' in scope\n    let result = find_sum_of_array(arr:\
    \ arr, n: n)\n                 ^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    guard n % 2 ==\
    \ 0 else {\n        return false\n    }\n    for i in 1...n / 2 {\n        if\
    \ n == 2 * i + 2 * (n - i) {\n            return true\n        }\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmphqr3rrw6/tmphqr3rrw6.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b83aabb8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b83aa8afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b83aa8af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b83aa8ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphqr3rrw6                        0x0000557a301a641d <unavailable> + 5149

    5    libc.so.6                          0x00002b83aada4460 __libc_start_main +
    245

    6    tmphqr3rrw6                        0x0000557a301a5fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660009731
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var n = n\n \
    \   if n % 2 != 0 {\n        return false\n    }\n    if n < 8 {\n        return\
    \ false\n    }\n    while n > 0 {\n        n -= 2\n    }\n    return n == 0\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009731
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n < 4 {\n\
    \        return false\n    }\n    if n % 2 == 1 {\n        return false\n    }\n\
    \    return is_sum_even(n: n, num_even: 0, sum_even: 0)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpmi1iuv2z.swift:17:12: error: cannot find 'is_sum_even' in scope\n\
    \    return is_sum_even(n: n, num_even: 0, sum_even: 0)\n           ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // YOUR CODE\
    \ HERE\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp7shex0d4/tmp7shex0d4.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c82b3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c82834b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c82834988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c828337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7shex0d4                        0x000055e3d6e3a29d <unavailable> + 4765

    5    libc.so.6                          0x00002b3c82d29460 __libc_start_main +
    245

    6    tmp7shex0d4                        0x000055e3d6e39e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009731
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n  // your code here\n\
    \  return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpeo6mbikr/tmpeo6mbikr.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab9ed7cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab9ed4c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab9ed4c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab9ed4c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo6mbikr                        0x000055855d33229d <unavailable> + 4765

    5    libc.so.6                          0x00002ab9ed9b7460 __libc_start_main +
    245

    6    tmpeo6mbikr                        0x000055855d331e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return is_equal_to_sum_of_numbers(n:\
    \ n, numbers: [2, 4, 6, 8])\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmpg2bu9c0a.swift:11:12: error: cannot find 'is_equal_to_sum_of_numbers'\
    \ in scope\n    return is_equal_to_sum_of_numbers(n: n, numbers: [2, 4, 6, 8])\n\
    \           ^~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009730
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // your code\
    \ here\n    var sum = 0\n    var i = 1\n    while sum < n {\n        sum += i\
    \ * 2\n        i += 1\n    }\n    return sum == n\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpzpj1govh/tmpzpj1govh.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeb4b96bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeb4b662b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeb4b662988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeb4b6617b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzpj1govh                        0x000055b22f0a2229 <unavailable> + 4649

    5    libc.so.6                          0x00002aeb4bb57460 __libc_start_main +
    245

    6    tmpzpj1govh                        0x000055b22f0a1e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009731
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    //TODO: calculate\
    \ if the given number can be written as the sum of exactly 4 positive even numbers\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpujnl4i9_/tmpujnl4i9_.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1b53e96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1b53b8db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1b53b8d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1b53b8c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpujnl4i9_                        0x0000555ae026e29d <unavailable> + 4765

    5    libc.so.6                          0x00002b1b54082460 __libc_start_main +
    245

    6    tmpujnl4i9_                        0x0000555ae026de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009731
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpiixbyx10/tmpiixbyx10.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bc67ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bc375b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bc375988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bc3747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiixbyx10                        0x000055b5e296129d <unavailable> + 4765

    5    libc.so.6                          0x00002af9bc86a460 __libc_start_main +
    245

    6    tmpiixbyx10                        0x000055b5e2960e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660009729
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n:\
    \ 4)\n/// false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
    \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n%2 != 0 {\n\
    \        return false\n    }\n    let numbers = Array(1...n/2)\n    let permutations\
    \ = Set(numbers.permutations(numbers.count))\n    for permutation in permutations\
    \ {\n        if permutation.reduce(0, +) == n {\n            return true\n   \
    \     }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp5dha0ups.swift:15:36: error: value of type '[Int]' has no member\
    \ 'permutations'\n    let permutations = Set(numbers.permutations(numbers.count))\n\
    \                           ~~~~~~~ ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660009730

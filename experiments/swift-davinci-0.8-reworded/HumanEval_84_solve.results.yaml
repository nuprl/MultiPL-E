language: swift
name: HumanEval_84_solve
results:
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var bin: Int = 0\n    var digits:\
    \ Int = 1\n    var N = N\n    while N > 0 {\n        bin += (N % 2) * digits\n\
    \        digits *= 10\n        N /= 2\n    }\n    return String(bin)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpitc621vs/tmpitc621vs.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33862d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3385fcfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3385fcf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3385fce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpitc621vs                        0x0000564e8dfbc433 <unavailable> + 5171

    5    libc.so.6                          0x00002b33864c4460 __libc_start_main +
    245

    6    tmpitc621vs                        0x0000564e8dfbc099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    // your code here\n    return \"\
    \"\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N:\
    \ 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) ==\
    \ \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpm439b_7y/tmpm439b_7y.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3b58cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3b55c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3b55c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3b55c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm439b_7y                        0x0000562a6e1952e3 <unavailable> + 4835

    5    libc.so.6                          0x00002ba3b5abb460 __libc_start_main +
    245

    6    tmpm439b_7y                        0x0000562a6e194f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var number = N\n    var binaryNumber\
    \ = \"\"\n    while number != 0 {\n        binaryNumber = String(number % 2) +\
    \ binaryNumber\n        number /= 2\n    }\n    return binaryNumber\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpshs2q7mn/tmpshs2q7mn.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b03541dcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0353ed3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0353ed3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0353ed27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpshs2q7mn                        0x000055b9f8bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b03543c8460 __libc_start_main +
    245

    6    tmpshs2q7mn                        0x000055b9f8bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let binaryNumber = String(N, radix:\
    \ 2)\n    return binaryNumber\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp0_z87_xa/tmp0_z87_xa.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac02d9bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac02d6b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac02d6b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac02d6b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0_z87_xa                        0x000055ba45bda383 <unavailable> + 4995

    5    libc.so.6                          0x00002ac02dbaa460 __libc_start_main +
    245

    6    tmp0_z87_xa                        0x000055ba45bd9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var sum = 0\n    var number = N\n\
    \    while number > 0 {\n        let bit = number % 2\n        sum += bit\n  \
    \      number /= 2\n    }\n    return String(sum)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmp5wl2sejh/tmp5wl2sejh.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9ee15e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9ee12dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9ee12da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9ee12d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5wl2sejh                        0x000055bc605cc433 <unavailable> + 5171

    5    libc.so.6                          0x00002b9ee17cf460 __libc_start_main +
    245

    6    tmp5wl2sejh                        0x000055bc605cc099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  var result = \"\"\n  var n = N\n \
    \ while n > 0 {\n    result = \"\\(n % 2)\" + result\n    n /= 2\n  }\n  return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpfwg3jxal/tmpfwg3jxal.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c19545c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c1923cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c1923c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c1923b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfwg3jxal                        0x000055a17ff81623 <unavailable> + 5667

    5    libc.so.6                          0x00002b2c19731460 __libc_start_main +
    245

    6    tmpfwg3jxal                        0x000055a17ff81289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  // write your code in Swift 3.0 (Linux)\n\
    \  return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpywn_dlz5/tmpywn_dlz5.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b56e899cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b56e8693b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b56e8693988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b56e86927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpywn_dlz5                        0x0000565025fc9383 <unavailable> + 4995

    5    libc.so.6                          0x00002b56e8b88460 __libc_start_main +
    245

    6    tmpywn_dlz5                        0x0000565025fc8fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  var sum = N\n  var result = \"\"\n\
    \  while sum != 0 {\n    result = String(sum % 2) + result\n    sum /= 2\n  }\n\
    \  return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpdlm7o12p/tmpdlm7o12p.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc9c9aec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc9c6a5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc9c6a5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc9c6a47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdlm7o12p                        0x000055fb21946493 <unavailable> + 5267

    5    libc.so.6                          0x00002abc9cb9a460 __libc_start_main +
    245

    6    tmpdlm7o12p                        0x000055fb219460f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var value = N\n    var binary =\
    \ \"\"\n    while value > 0 {\n        binary += String(value % 2)\n        value\
    \ /= 2\n    }\n    return String(binary.reversed())\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmphu473aqk/tmphu473aqk.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b07d1661c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b07d1358b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b07d1358988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07d13577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphu473aqk                        0x0000556ef85da673 <unavailable> + 5747

    5    libc.so.6                          0x00002b07d184d460 __libc_start_main +
    245

    6    tmphu473aqk                        0x0000556ef85da2d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result.append(String(N % 2))\n        N /= 2\n   \
    \ }\n    return String(result.reversed())\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpc5kbxl2h/tmpc5kbxl2h.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0c656cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0c6263b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0c6263988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0c62627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpc5kbxl2h                        0x000055fc82077673 <unavailable> + 5747

    5    libc.so.6                          0x00002ad0c6758460 __libc_start_main +
    245

    6    tmpc5kbxl2h                        0x000055fc820772d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var ans = String()\n    var num\
    \ = N\n    while num > 0 {\n        ans.append(contentsOf: String(num % 2))\n\
    \        num /= 2\n    }\n    return String(ans.reversed())\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpeanods94/tmpeanods94.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adc76c97c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adc7698eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adc7698e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adc7698d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeanods94                        0x0000564003ced6c3 <unavailable> + 5827

    5    libc.so.6                          0x00002adc76e83460 __libc_start_main +
    245

    6    tmpeanods94                        0x0000564003ced329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var value\
    \ = N\n    while value > 0 {\n        result = String(value % 2) + result\n  \
    \      value /= 2\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpyvfq0yy2/tmpyvfq0yy2.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b41b8e65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b41b8b5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b41b8b5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b41b8b5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyvfq0yy2                        0x0000560087533493 <unavailable> + 5267

    5    libc.so.6                          0x00002b41b9051460 __libc_start_main +
    245

    6    tmpyvfq0yy2                        0x00005600875330f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    //    return String(N, radix: 2)\n\
    \    var binary = String()\n    var num = N\n    while num > 0 {\n        binary.append(String(num\
    \ % 2))\n        num /= 2\n    }\n    return String(binary.reversed())\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpoqvqueus/tmpoqvqueus.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acec8270c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acec7f67b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acec7f67988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acec7f667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoqvqueus                        0x0000557461fe66b3 <unavailable> + 5811

    5    libc.so.6                          0x00002acec845c460 __libc_start_main +
    245

    6    tmpoqvqueus                        0x0000557461fe6319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return \"\\(N)\"\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpqamppuhi/tmpqamppuhi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b554cb1fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b554c816b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b554c816988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b554c8157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqamppuhi                        0x000055ddc71b5543 <unavailable> + 5443

    5    libc.so.6                          0x00002b554cd0b460 __libc_start_main +
    245

    6    tmpqamppuhi                        0x000055ddc71b51a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = \"\\(n % 2)\" + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulfbetud/tmpulfbetud.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acaf2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acaf2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acaf2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acaf28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulfbetud                        0x00005586da0db623 <unavailable> + 5667

    5    libc.so.6                          0x00002acaf2d36460 __libc_start_main +
    245

    6    tmpulfbetud                        0x00005586da0db289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  let b = String(N, radix: 2)\n  return\
    \ String(Array(b).reduce(0, {$0 + Int(String($1))!}))\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpcytw1zz2/tmpcytw1zz2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad8c0dc3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad8c0abab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad8c0aba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad8c0ab97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcytw1zz2                        0x000055fe577bd773 <unavailable> + 6003

    5    libc.so.6                          0x00002ad8c0faf460 __libc_start_main +
    245

    6    tmpcytw1zz2                        0x000055fe577bd3d9 <unavailable> + 5081

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let max = Int(pow(Double(2),Double(20)))\n\
    \    var current = 0\n    var binary = \"\"\n    var counter = 0\n    while current\
    \ < N {\n        current = Int(pow(Double(2),Double(counter)))\n        counter\
    \ += 1\n    }\n    counter -= 1\n    while counter >= 0 {\n        if N >= Int(pow(Double(2),Double(counter)))\
    \ {\n            binary += \"1\"\n            N -= Int(pow(Double(2),Double(counter)))\n\
    \        } else {\n            binary += \"0\"\n        }\n        counter -=\
    \ 1\n    }\n    return binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmprkgljyax.swift:16:19: error: cannot find 'pow' in scope\n    let\
    \ max = Int(pow(Double(2),Double(20)))\n                  ^~~\n/tmp/tmprkgljyax.swift:21:23:\
    \ error: cannot find 'pow' in scope\n        current = Int(pow(Double(2),Double(counter)))\n\
    \                      ^~~\n/tmp/tmprkgljyax.swift:26:21: error: cannot find 'pow'\
    \ in scope\n        if N >= Int(pow(Double(2),Double(counter))) {\n          \
    \          ^~~\n/tmp/tmprkgljyax.swift:28:22: error: cannot find 'pow' in scope\n\
    \            N -= Int(pow(Double(2),Double(counter)))\n                     ^~~\n"
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  var binaryNumber = \"\"\n  var number\
    \ = N\n  while number != 0 {\n    let remainder = number % 2\n    number = number\
    \ / 2\n    binaryNumber = String(remainder) + binaryNumber\n  }\n  return binaryNumber\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpyhjgqyhi/tmpyhjgqyhi.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d3df77c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d3dc6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d3dc6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d3dc6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyhjgqyhi                        0x000055e332ba8493 <unavailable> + 5267

    5    libc.so.6                          0x00002b2d3e163460 __libc_start_main +
    245

    6    tmpyhjgqyhi                        0x000055e332ba80f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let str = String(N, radix: 2)\n\
    \    var sum = 0\n    for ch in str {\n        sum += Int(String(ch))!\n    }\n\
    \    return String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp2fpwqf5k/tmp2fpwqf5k.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac147c07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac1478feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac1478fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac1478fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2fpwqf5k                        0x0000559a89119693 <unavailable> + 5779

    5    libc.so.6                          0x00002ac147df3460 __libc_start_main +
    245

    6    tmp2fpwqf5k                        0x0000559a891192f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    if N == 0 {\n        return \"0\"\
    \n    }\n\n    var digits = [Int]()\n    var N = N\n    while N > 0 {\n      \
    \  digits.append(N % 2)\n        N /= 2\n    }\n\n    return digits.reversed().map\
    \ { String($0) }.joined()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp6rjqfud1/tmp6rjqfud1.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afdff58dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afdff284b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afdff284988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afdff2837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6rjqfud1                        0x00005593d841f7a3 <unavailable> + 6051

    5    libc.so.6                          0x00002afdff779460 __libc_start_main +
    245

    6    tmp6rjqfud1                        0x00005593d841f409 <unavailable> + 5129

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var result = \"\"\
    \n    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpt92mjhaw/tmpt92mjhaw.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeb2aef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeb2abebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeb2abeb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeb2abea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt92mjhaw                        0x000055b7cb1ca493 <unavailable> + 5267

    5    libc.so.6                          0x00002aeb2b0e0460 __libc_start_main +
    245

    6    tmpt92mjhaw                        0x000055b7cb1ca0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    // Check input is valid\n    guard\
    \ 0...10000 ~= N else {\n        return \"invalid input\"\n    }\n    // Convert\
    \ number to binary number\n    let binaryN = String(N, radix: 2)\n    // Convert\
    \ binary number to an array\n    let arrN = Array(binaryN)\n    // Sum all binary\
    \ number\n    var sum: Int = 0\n    for i in arrN {\n        if i == \"1\" {\n\
    \            sum += 1\n        }\n    }\n    return String(sum)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpswd35m2y/tmpswd35m2y.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b93824c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b9351bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b9351b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b9351a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpswd35m2y                        0x000055e2539378a3 <unavailable> + 6307

    5    libc.so.6                          0x00002b6b93a10460 __libc_start_main +
    245

    6    tmpswd35m2y                        0x000055e253937509 <unavailable> + 5385

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var str = \"\"\n\
    \    while N > 0 {\n        let digit = N % 2\n        N /= 2\n        str = String(digit)\
    \ + str\n    }\n    return str\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpv7fzxn8l/tmpv7fzxn8l.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad5bfe20c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad5bfb17b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad5bfb17988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad5bfb167b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv7fzxn8l                        0x0000563e580dc493 <unavailable> + 5267

    5    libc.so.6                          0x00002ad5c000c460 __libc_start_main +
    245

    6    tmpv7fzxn8l                        0x0000563e580dc0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    var remainder = 0\n    while n > 0 {\n        remainder = n % 2\n       \
    \ n = n / 2\n        result = String(remainder) + result\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpz76eowz_/tmpz76eowz_.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45e7fc9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45e7cc0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45e7cc0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45e7cbf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz76eowz_                        0x000055c4fa673493 <unavailable> + 5267

    5    libc.so.6                          0x00002b45e81b5460 __libc_start_main +
    245

    6    tmpz76eowz_                        0x000055c4fa6730f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var answer = \"\"\
    \n    while N > 0 {\n        answer = \"\\(N % 2)\" + answer\n        N /= 2\n\
    \    }\n    return answer\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpup4uw1mv/tmpup4uw1mv.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9ef9791c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9ef9488b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9ef9488988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9ef94877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpup4uw1mv                        0x0000562266c11623 <unavailable> + 5667

    5    libc.so.6                          0x00002b9ef997d460 __libc_start_main +
    245

    6    tmpup4uw1mv                        0x0000562266c11289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = String()\n    var n\
    \ = N\n    while n > 0 {\n        result = String(n % 2) + result\n        n /=\
    \ 2\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpqx5zllb0/tmpqx5zllb0.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4af0dddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4af0ad4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4af0ad4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4af0ad37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqx5zllb0                        0x000055eeb4cad4d3 <unavailable> + 5331

    5    libc.so.6                          0x00002b4af0fc9460 __libc_start_main +
    245

    6    tmpqx5zllb0                        0x000055eeb4cad139 <unavailable> + 4409

    '
  stdout: ''
  timestamp: 1660013988
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var number = N\n    var result =\
    \ \"\"\n    while number > 0 {\n        result = String(number%2) + result\n \
    \       number /= 2\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpghke61r1/tmpghke61r1.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab6025c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab6022bcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab6022bc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab6022bb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpghke61r1                        0x000055764bf52493 <unavailable> + 5267

    5    libc.so.6                          0x00002ab6027b1460 __libc_start_main +
    245

    6    tmpghke61r1                        0x000055764bf520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    // Write your code here\n    var\
    \ result = String()\n    var num = N\n    while num > 0 {\n        result = String(num\
    \ % 2) + result\n        num /= 2\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpzlvn4u0c/tmpzlvn4u0c.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b55c8819c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b55c8510b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b55c8510988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b55c850f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzlvn4u0c                        0x00005639ed00e4d3 <unavailable> + 5331

    5    libc.so.6                          0x00002b55c8a05460 __libc_start_main +
    245

    6    tmpzlvn4u0c                        0x00005639ed00e139 <unavailable> + 4409

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n\tvar sum = 0\n\tvar n = N\n\twhile\
    \ n > 0 {\n\t\tsum += n % 2\n\t\tn /= 2\n\t}\n\treturn String(sum)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplze1sqfy/tmplze1sqfy.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affb1f2ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affb1c21b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affb1c21988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affb1c207b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplze1sqfy                        0x00005590bb2e5433 <unavailable> + 5171

    5    libc.so.6                          0x00002affb2116460 __libc_start_main +
    245

    6    tmplze1sqfy                        0x00005590bb2e5099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = [String]()\n    var\
    \ number = N\n    while number > 0 {\n        let bit = number % 2\n        result.append(String(bit))\n\
    \        number /= 2\n    }\n    return result.reversed().joined()\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpl5o_nn07/tmpl5o_nn07.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2613cb2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b26139a9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b26139a9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b26139a87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl5o_nn07                        0x000055ef09c266b3 <unavailable> + 5811

    5    libc.so.6                          0x00002b2613e9e460 __libc_start_main +
    245

    6    tmpl5o_nn07                        0x000055ef09c26319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var bit: [Int] =\
    \ []\n    while N > 0 {\n        bit.append(N % 2)\n        N /= 2\n    }\n  \
    \  bit.reverse()\n    return bit.map({ String($0) }).joined()\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmp0vza5j2k/tmp0vza5j2k.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afec8d13c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afec8a0ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afec8a0a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afec8a097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0vza5j2k                        0x000055a25bd6c773 <unavailable> + 6003

    5    libc.so.6                          0x00002afec8eff460 __libc_start_main +
    245

    6    tmp0vza5j2k                        0x000055a25bd6c3d9 <unavailable> + 5081

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var num = N\n    var arr: [Int]\
    \ = []\n    while (num != 0) {\n        arr.append(num % 2)\n        num = num\
    \ / 2\n    }\n    let reverseArr = arr.reversed()\n    var result = \"\"\n   \
    \ for num in reverseArr {\n        result += String(num)\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpinodo8ep/tmpinodo8ep.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acf9af77c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acf9ac6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acf9ac6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acf9ac6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpinodo8ep                        0x000055bdd2f497b3 <unavailable> + 6067

    5    libc.so.6                          0x00002acf9b163460 __libc_start_main +
    245

    6    tmpinodo8ep                        0x000055bdd2f49419 <unavailable> + 5145

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var n = N\n    var result = \"\"\
    \n    while n > 0 {\n        result = \"\\(n % 2)\" + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpst5sjcqz/tmpst5sjcqz.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0252500c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02521f7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02521f7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02521f67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpst5sjcqz                        0x0000559a5d8a1623 <unavailable> + 5667

    5    libc.so.6                          0x00002b02526ec460 __libc_start_main +
    245

    6    tmpst5sjcqz                        0x0000559a5d8a1289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var binary = \"\"\n    var num =\
    \ N\n    while num > 0 {\n        binary = String(num % 2) + binary\n        num\
    \ /= 2\n    }\n    return binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmposbqldzi/tmposbqldzi.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b14b3ce3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b14b39dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b14b39da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b14b39d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmposbqldzi                        0x000055ffa414d493 <unavailable> + 5267

    5    libc.so.6                          0x00002b14b3ecf460 __libc_start_main +
    245

    6    tmposbqldzi                        0x000055ffa414d0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    for i in\
    \ 0...20 {\n        let value = pow(Double(2), Double(i))\n        if N >= Int(value)\
    \ {\n            let quotient = N / Int(value)\n            result += String(quotient)\n\
    \            let remainder = N % Int(value)\n            if remainder == 0 {\n\
    \                break\n            }\n            N = remainder\n        } else\
    \ {\n            result += \"0\"\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmp6y3j85b4.swift:18:21: error: cannot find 'pow' in scope\n     \
    \   let value = pow(Double(2), Double(i))\n                    ^~~\n/tmp/tmp6y3j85b4.swift:26:13:\
    \ error: cannot assign to value: 'N' is a 'let' constant\n            N = remainder\n\
    \            ^\n"
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var m: Int = N\n    var div: Int\
    \ = 1\n    var output: String = \"\"\n    var mod: Int = 0\n    if m == 0 {\n\
    \        return \"0\"\n    }\n    while m > 0 {\n        div = div * 2\n     \
    \   m = m / 2\n    }\n    div = div / 2\n    m = N\n    while div > 0 {\n    \
    \    mod = m / div\n        m = m % div\n        div = div / 2\n        output.append(String(mod))\n\
    \    }\n    return output\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpj_i184_l/tmpj_i184_l.swift:51: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7126b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7123aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7123aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7123a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj_i184_l                        0x000055a4af66e493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae71289f460 __libc_start_main +
    245

    6    tmpj_i184_l                        0x000055a4af66e0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let result = String(N, radix: 2)\n\
    \    var sum = 0\n    for char in result {\n        sum += Int(String(char))!\n\
    \    }\n    return String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmptwnuubo4/tmptwnuubo4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0b9749c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0b9440b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0b9440988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0b943f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptwnuubo4                        0x0000563e6f9cb693 <unavailable> + 5779

    5    libc.so.6                          0x00002ba0b9935460 __libc_start_main +
    245

    6    tmptwnuubo4                        0x0000563e6f9cb2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var result = \"\"\
    \n    repeat {\n        result = String(N % 2) + result\n        N /= 2\n    }\
    \ while N > 0\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpzpllqs82/tmpzpllqs82.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aca88689c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aca88380b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aca88380988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aca8837f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzpllqs82                        0x000056345db90493 <unavailable> + 5267

    5    libc.so.6                          0x00002aca88875460 __libc_start_main +
    245

    6    tmpzpllqs82                        0x000056345db900f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var binary = String(N, radix: 2)\n\
    \    binary = String(Array(binary).reversed())\n    return String(binary.prefix(4))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpyhhvhfqe/tmpyhhvhfqe.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b01cf0d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b01cedcfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b01cedcf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b01cedce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyhhvhfqe                        0x000055606e04e703 <unavailable> + 5891

    5    libc.so.6                          0x00002b01cf2c4460 __libc_start_main +
    245

    6    tmpyhhvhfqe                        0x000055606e04e369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  var result = \"\"\n  var current =\
    \ N\n  while current > 0 {\n    result = (current % 2 == 0 ? \"0\" : \"1\") +\
    \ result\n    current /= 2\n  }\n  return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpcgz8w8q7/tmpcgz8w8q7.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fcbf25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fcbc1cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fcbc1c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fcbc1b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcgz8w8q7                        0x000055d46e79f3c3 <unavailable> + 5059

    5    libc.so.6                          0x00002b7fcc111460 __libc_start_main +
    245

    6    tmpcgz8w8q7                        0x000055d46e79f029 <unavailable> + 4137

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    // Your code here\n    var number\
    \ = N\n    var result = \"\"\n    while number != 0 {\n        result.append(String(number\
    \ % 2))\n        number /= 2\n    }\n    return String(result.reversed())\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp5mqkhugp/tmp5mqkhugp.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af30c7adc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af30c4a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af30c4a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af30c4a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5mqkhugp                        0x00005615397fc673 <unavailable> + 5747

    5    libc.so.6                          0x00002af30c999460 __libc_start_main +
    245

    6    tmp5mqkhugp                        0x00005615397fc2d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        let b = n % 2\n        n = n / 2\n        result =\
    \ String(b) + result\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpjsuibjex/tmpjsuibjex.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba89c1e8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba89bedfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba89bedf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba89bede7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjsuibjex                        0x000055ee3c566493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba89c3d4460 __libc_start_main +
    245

    6    tmpjsuibjex                        0x000055ee3c5660f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = 0\n    let digits =\
    \ String(N, radix: 2)\n    for char in digits {\n        result += Int(String(char))!\n\
    \    }\n    return String(result)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp5hgefnkr/tmp5hgefnkr.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab028918c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab02860fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab02860f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab02860e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5hgefnkr                        0x000055b99a5f0693 <unavailable> + 5779

    5    libc.so.6                          0x00002ab028b04460 __libc_start_main +
    245

    6    tmp5hgefnkr                        0x000055b99a5f02f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var arr = [Int]()\n\
    \    repeat {\n        arr.append(N % 2)\n        N /= 2\n    } while N > 0\n\
    \    var result = \"\"\n    for num in arr.reversed() {\n        result += String(num)\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp0syia3pi/tmp0syia3pi.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b48762f6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4875fedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4875fed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4875fec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0syia3pi                        0x000055a4c2cb3793 <unavailable> + 6035

    5    libc.so.6                          0x00002b48764e2460 __libc_start_main +
    245

    6    tmp0syia3pi                        0x000055a4c2cb33f9 <unavailable> + 5113

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var n = N\n    var temp = n\n  \
    \  var output = \"\"\n    var count = 0\n    while(n > 0) {\n        n = n / 2\n\
    \        count += 1\n    }\n    var arr = Array(repeating: 0, count: count)\n\
    \    for i in (0...count-1).reversed() {\n        let div = Int(pow(Double(2),\
    \ Double(i)))\n        let res = temp / div\n        temp = temp % div\n     \
    \   arr[i] = res\n    }\n    output = arr.map{String($0)}.joined()\n    return\
    \ output\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmphbkbnvu2.swift:26:23: error: cannot find 'pow' in scope\n     \
    \   let div = Int(pow(Double(2), Double(i)))\n                      ^~~\n"
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var n = N\n    var binaryString\
    \ = \"\"\n    while n != 0 {\n        binaryString = String(n % 2) + binaryString\n\
    \        n /= 2\n    }\n    return binaryString\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpcaxpu583/tmpcaxpu583.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b76cc3c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b76cc0bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b76cc0bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b76cc0ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcaxpu583                        0x00005557ec51d493 <unavailable> + 5267

    5    libc.so.6                          0x00002b76cc5b0460 __libc_start_main +
    245

    6    tmpcaxpu583                        0x00005557ec51d0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let n = String(N, radix: 2)\n  \
    \  var sum = 0\n    for ch in n {\n        sum += Int(String(ch))!\n    }\n  \
    \  return String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpcr4ocm1b/tmpcr4ocm1b.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4a6b96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4a688db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4a688d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4a688c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcr4ocm1b                        0x000055e36df68693 <unavailable> + 5779

    5    libc.so.6                          0x00002ae4a6d82460 __libc_start_main +
    245

    6    tmpcr4ocm1b                        0x000055e36df682f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var result = String()\n\
    \    while N > 0 {\n        result.append(String(N % 2))\n        N /= 2\n   \
    \ }\n    return String(result.reversed())\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmp8v7nls99/tmp8v7nls99.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b76e1a13c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b76e170ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b76e170a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b76e17097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8v7nls99                        0x00005573407cc6b3 <unavailable> + 5811

    5    libc.so.6                          0x00002b76e1bff460 __libc_start_main +
    245

    6    tmp8v7nls99                        0x00005573407cc319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    // Write your code here.\n    return\
    \ binary(decimal: N)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmphuurfte4.swift:17:12: error: cannot find 'binary' in scope\n  \
    \  return binary(decimal: N)\n           ^~~~~~\n"
  stdout: ''
  timestamp: 1660013989
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var sum = 0\n   \
    \ var count = 0\n    while N > 0 {\n        sum += N % 2 * Int(pow(10.0, Double(count)))\n\
    \        N /= 2\n        count += 1\n    }\n    return String(sum)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmp_bwperq8.swift:20:28: error: cannot find 'pow' in scope\n     \
    \   sum += N % 2 * Int(pow(10.0, Double(count)))\n                           ^~~\n"
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  ////\n  ////\n  ///\n  ///\n  ///\n\
    \  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n\
    \  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n\
    \  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n\
    \  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n\
    \  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n\
    \  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n\
    \  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n\
    \  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n\
    \  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n\
    \  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n\
    \  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n\
    \  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n\
    \  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n\
    \  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n\
    \  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n  ///\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: '/tmp/tmpijxcq8uo.swift:186:1: error: missing return in global function
    expected to return ''String''

    }

    ^

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let binary = String(N, radix: 2)\n\
    \    return binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpj_p418j9/tmpj_p418j9.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aec087f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aec084e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aec084e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aec084e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj_p418j9                        0x000055a8e1a75383 <unavailable> + 4995

    5    libc.so.6                          0x00002aec089dd460 __libc_start_main +
    245

    6    tmpj_p418j9                        0x000055a8e1a74fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var binary = \"\"\n    var current\
    \ = N\n    while current > 0 {\n        binary = String(current % 2) + binary\n\
    \        current /= 2\n    }\n    return binary\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmp4ji1741s/tmp4ji1741s.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af115b39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af115830b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af115830988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af11582f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ji1741s                        0x00005600f5133493 <unavailable> + 5267

    5    libc.so.6                          0x00002af115d25460 __libc_start_main +
    245

    6    tmp4ji1741s                        0x00005600f51330f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  var n = N\n  var ans = \"\"\n  while\
    \ n > 0 {\n    ans = \"\\(n % 2)\" + ans\n    n /= 2\n  }\n  return ans.isEmpty\
    \ ? \"0\" : ans\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp2ivnww37/tmp2ivnww37.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b25e739bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b25e7092b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b25e7092988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b25e70917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ivnww37                        0x000055dd78f13683 <unavailable> + 5763

    5    libc.so.6                          0x00002b25e7587460 __libc_start_main +
    245

    6    tmp2ivnww37                        0x000055dd78f132e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    // Write your code here\n    return\
    \ \"\\(N)\"\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxusinv7c/tmpxusinv7c.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9d546ddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9d543d4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9d543d4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9d543d37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxusinv7c                        0x0000557348a84543 <unavailable> + 5443

    5    libc.so.6                          0x00002b9d548c9460 __libc_start_main +
    245

    6    tmpxusinv7c                        0x0000557348a841a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let integer = Int(String(N, radix:\
    \ 2))!\n    return String(integer).map{ String($0) }.reduce(\"\", +)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplt0tsa0t/tmplt0tsa0t.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaeb7498c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaeb718fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaeb718f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaeb718e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplt0tsa0t                        0x000055c8dd1f7783 <unavailable> + 6019

    5    libc.so.6                          0x00002aaeb7684460 __libc_start_main +
    245

    6    tmplt0tsa0t                        0x000055c8dd1f73e9 <unavailable> + 5097

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var output = [Int]()\n\
    \    while N > 0 {\n        output.append(N % 2)\n        N /= 2\n    }\n    return\
    \ String(output.reversed())\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmp78wpwc9k.swift:22:12: error: no exact matches in call to initializer\
    \ \n    return String(output.reversed())\n           ^\nSwift.String:4:12: note:\
    \ candidate requires that the types 'Int' and 'Character' be equivalent (requirement\
    \ specified as 'S.Element' == 'Character')\n    public init<S>(_ characters: S)\
    \ where S : Sequence, S.Element == Character\n           ^\nSwift.RangeReplaceableCollection:3:23:\
    \ note: candidate requires that the types 'String.Element' (aka 'Character') and\
    \ 'Int' be equivalent (requirement specified as 'Self.Element' == 'S.Element')\n\
    \    @inlinable public init<S>(_ elements: S) where S : Sequence, Self.Element\
    \ == S.Element\n                      ^\nSwift.String:2:12: note: incorrect labels\
    \ for candidate (have: '(_:)', expected: '(describing:)')\n    public init<Subject>(describing\
    \ instance: Subject)\n           ^\nSwift.String:3:23: note: incorrect labels\
    \ for candidate (have: '(_:)', expected: '(describing:)')\n    @inlinable public\
    \ init<Subject>(describing instance: Subject) where Subject : CustomStringConvertible\n\
    \                      ^\nSwift.String:6:12: note: incorrect labels for candidate\
    \ (have: '(_:)', expected: '(reflecting:)')\n    public init<Subject>(reflecting\
    \ subject: Subject)\n           ^\n"
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  var n = N\n  var number = String()\n\
    \  while n > 0 {\n    number = String(n % 2) + number\n    n /= 2\n  }\n  return\
    \ number\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp7kznnjz2/tmp7kznnjz2.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acf1b86dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acf1b564b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acf1b564988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acf1b5637b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7kznnjz2                        0x0000560f6d7cb4d3 <unavailable> + 5331

    5    libc.so.6                          0x00002acf1ba59460 __libc_start_main +
    245

    6    tmp7kznnjz2                        0x0000560f6d7cb139 <unavailable> + 4409

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var sum = 0\n    for i in N.description\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum.description\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpvoaksyzv/tmpvoaksyzv.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b00fe969c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b00fe660b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b00fe660988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b00fe65f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvoaksyzv                        0x000055d3d73ed689 <unavailable> + 5769

    5    libc.so.6                          0x00002b00feb55460 __libc_start_main +
    245

    6    tmpvoaksyzv                        0x000055d3d73ed229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  return String(N, radix: 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpz07z7e62/tmpz07z7e62.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab96210bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab961e02b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab961e02988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab961e017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz07z7e62                        0x000055efee96d383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab9622f7460 __libc_start_main +
    245

    6    tmpz07z7e62                        0x000055efee96cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var num = N\n    var result = \"\
    \"\n    while num > 0 {\n        result = \"\\(num % 2)\" + result\n        num\
    \ /= 2\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr9v9bv51/tmpr9v9bv51.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002baa8c95bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002baa8c652b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002baa8c652988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002baa8c6517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr9v9bv51                        0x0000564976a3e623 <unavailable> + 5667

    5    libc.so.6                          0x00002baa8cb47460 __libc_start_main +
    245

    6    tmpr9v9bv51                        0x0000564976a3e289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    // Write your code here\n    var\
    \ binaryString = \"\"\n    var rest = N\n    var digit = N\n    while rest !=\
    \ 0 {\n        digit = rest\n        rest = rest / 2\n        if digit % 2 ==\
    \ 0 {\n            binaryString = \"0\" + binaryString\n        } else {\n   \
    \         binaryString = \"1\" + binaryString\n        }\n    }\n    return binaryString\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpjxj_i1nt/tmpjxj_i1nt.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b48c9006c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b48c8cfdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b48c8cfd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b48c8cfc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjxj_i1nt                        0x00005630031db3c3 <unavailable> + 5059

    5    libc.so.6                          0x00002b48c91f2460 __libc_start_main +
    245

    6    tmpjxj_i1nt                        0x00005630031db029 <unavailable> + 4137

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return N.description.utf8.map {\
    \ Int(String($0))! }.reduce(0, +).description\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpj5ba_3qj/tmpj5ba_3qj.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aabeff37c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aabefc2eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aabefc2e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aabefc2d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5ba_3qj                        0x000055d4c04ed783 <unavailable> + 6019

    5    libc.so.6                          0x00002aabf0123460 __libc_start_main +
    245

    6    tmpj5ba_3qj                        0x000055d4c04ed3e9 <unavailable> + 5097

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var ans = \"\"\n    var n = N\n\
    \    while n > 0 {\n        ans += String(n % 2)\n        n /= 2\n    }\n    return\
    \ String(ans.reversed())\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpq2pf2m1q/tmpq2pf2m1q.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc7aaf5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc7a7ecb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc7a7ec988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc7a7eb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq2pf2m1q                        0x0000563ceea7c673 <unavailable> + 5747

    5    libc.so.6                          0x00002afc7ace1460 __libc_start_main +
    245

    6    tmpq2pf2m1q                        0x0000563ceea7c2d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var binaryStr = \"\"\n    var n\
    \ = N\n    while n != 0 {\n        let mod = n % 2\n        binaryStr.append(String(mod))\n\
    \        n = n / 2\n    }\n    return String(binaryStr.reversed())\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpao29ceyd/tmpao29ceyd.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b37e50abc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b37e4da2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b37e4da2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b37e4da17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpao29ceyd                        0x0000557b0d6ef673 <unavailable> + 5747

    5    libc.so.6                          0x00002b37e5297460 __libc_start_main +
    245

    6    tmpao29ceyd                        0x0000557b0d6ef2d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let n = String(N, radix: 2)\n  \
    \  return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpsiquw9gb/tmpsiquw9gb.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acb05784c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acb0547bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acb0547b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acb0547a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsiquw9gb                        0x000056487c55d383 <unavailable> + 4995

    5    libc.so.6                          0x00002acb05970460 __libc_start_main +
    245

    6    tmpsiquw9gb                        0x000056487c55cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    if N == 0 {\n        return \"0\"\
    \n    }\n    var temp = \"\"\n    var N = N\n    while N > 0 {\n        temp +=\
    \ \"\\(N % 2)\"\n        N /= 2\n    }\n    return String(temp.reversed())\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpnd_bsms_/tmpnd_bsms_.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b50bc175c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b50bbe6cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b50bbe6c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b50bbe6b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnd_bsms_                        0x000055935d516813 <unavailable> + 6163

    5    libc.so.6                          0x00002b50bc361460 __libc_start_main +
    245

    6    tmpnd_bsms_                        0x000055935d516479 <unavailable> + 5241

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let binaryResult = String(N, radix:\
    \ 2)\n    let digitSum = binaryResult.compactMap { Int(String($0)) }.reduce(0,\
    \ +)\n    return String(digitSum)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp639c8in9/tmp639c8in9.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b509e290c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b509df87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b509df87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b509df867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp639c8in9                        0x000055d378bed6a3 <unavailable> + 5795

    5    libc.so.6                          0x00002b509e47c460 __libc_start_main +
    245

    6    tmp639c8in9                        0x000055d378bed309 <unavailable> + 4873

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var str = \"\"\n\
    \    while N > 0 {\n        let remainder = N % 2\n        N = N / 2\n       \
    \ str.append(String(remainder))\n    }\n    return String(str.reversed())\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpktwrphpb/tmpktwrphpb.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab12c4dbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab12c1d2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab12c1d2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab12c1d17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpktwrphpb                        0x000055a0be4a8673 <unavailable> + 5747

    5    libc.so.6                          0x00002ab12c6c7460 __libc_start_main +
    245

    6    tmpktwrphpb                        0x000055a0be4a82d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let s = String(N, radix: 2)\n  \
    \  return s\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp9o6fyn3u/tmp9o6fyn3u.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac51bf51c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac51bc48b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac51bc48988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac51bc477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9o6fyn3u                        0x0000562c0a8ba383 <unavailable> + 4995

    5    libc.so.6                          0x00002ac51c13d460 __libc_start_main +
    245

    6    tmp9o6fyn3u                        0x0000562c0a8b9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  return String(N, radix: 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpz07z7e62/tmpz07z7e62.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab96210bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab961e02b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab961e02988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab961e017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz07z7e62                        0x000055efee96d383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab9622f7460 __libc_start_main +
    245

    6    tmpz07z7e62                        0x000055efee96cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var n = N\n    var result = \"\"\
    \n    while n > 0 {\n        result = \"\\(n & 1)\" + result\n        n >>= 1\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpjtuhr21b/tmpjtuhr21b.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3270242c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b326ff39b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b326ff39988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b326ff387b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjtuhr21b                        0x000055f317cd7593 <unavailable> + 5523

    5    libc.so.6                          0x00002b327042e460 __libc_start_main +
    245

    6    tmpjtuhr21b                        0x000055f317cd71f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = String()\n    var N\
    \ = N\n    while N > 0 {\n        result.append(contentsOf: \"\\(N % 2)\")\n \
    \       N /= 2\n    }\n    return String(result.reversed())\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxs9ye3ea/tmpxs9ye3ea.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6868b55c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b686884cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b686884c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b686884b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxs9ye3ea                        0x00005596cc886863 <unavailable> + 6243

    5    libc.so.6                          0x00002b6868d41460 __libc_start_main +
    245

    6    tmpxs9ye3ea                        0x00005596cc8864c9 <unavailable> + 5321

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    // Write your code here\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: '/tmp/tmp_1iborpe.swift:17:1: error: missing return in global function expected
    to return ''String''

    }

    ^

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    // write your code in Swift 3.0\
    \ (Linux)\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpcacw6h49/tmpcacw6h49.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaddef99c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaddec90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaddec90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaddec8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcacw6h49                        0x000055deb2a4d383 <unavailable> + 4995

    5    libc.so.6                          0x00002aaddf185460 __libc_start_main +
    245

    6    tmpcacw6h49                        0x000055deb2a4cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(Int(strtoul(String(N,\
    \ radix: 2), nil, 0)), radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmp9zmwa0rw.swift:16:23: error: cannot find 'strtoul' in scope\n \
    \   return String(Int(strtoul(String(N, radix: 2), nil, 0)), radix: 2)\n     \
    \                 ^~~~~~~\n/tmp/tmp9zmwa0rw.swift:16:52: error: 'nil' requires\
    \ a contextual type\n    return String(Int(strtoul(String(N, radix: 2), nil, 0)),\
    \ radix: 2)\n                                                   ^\n"
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var num = N\n    var res = \"\"\n\
    \    while num > 0 {\n        let temp = num % 2\n        res.append(String(temp))\n\
    \        num /= 2\n    }\n    return String(res.reversed())\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmph1jvdwy4/tmph1jvdwy4.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace3f8f0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace3f5e7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace3f5e7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace3f5e67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph1jvdwy4                        0x0000561e716d4673 <unavailable> + 5747

    5    libc.so.6                          0x00002ace3fadc460 __libc_start_main +
    245

    6    tmph1jvdwy4                        0x0000561e716d42d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var n = N\n    var b = String()\n\
    \    while n > 0 {\n        b.append(String(n % 2))\n        n /= 2\n    }\n \
    \   return String(b.reversed())\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpnzxwpkos/tmpnzxwpkos.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada57287c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada56f7eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada56f7e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada56f7d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnzxwpkos                        0x00005597934df6b3 <unavailable> + 5811

    5    libc.so.6                          0x00002ada57473460 __libc_start_main +
    245

    6    tmpnzxwpkos                        0x00005597934df319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  var s = \"\"\n  var n = N\n  while\
    \ n > 0 {\n    s = \"\\(n % 2)\" + s\n    n = n / 2\n  }\n  return s\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpkn71bukc/tmpkn71bukc.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba11b062c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba11ad59b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba11ad59988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba11ad587b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkn71bukc                        0x000055bc2a64e623 <unavailable> + 5667

    5    libc.so.6                          0x00002ba11b24e460 __libc_start_main +
    245

    6    tmpkn71bukc                        0x000055bc2a64e289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    if N == 0 {\n        return \"0\"\
    \n    }\n    var binaryNumber = [Int]()\n    var N = N\n    var base = 2\n   \
    \ while N > 0 {\n        binaryNumber.append(N % base)\n        N /= base\n  \
    \  }\n    var stringNumber = \"\"\n    for number in binaryNumber.reversed() {\n\
    \        stringNumber += String(number)\n    }\n    return stringNumber\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmprvai_h91/tmprvai_h91.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab3064ddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab3061d4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab3061d4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab3061d37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprvai_h91                        0x000055b7f18b1793 <unavailable> + 6035

    5    libc.so.6                          0x00002ab3066c9460 __libc_start_main +
    245

    6    tmprvai_h91                        0x000055b7f18b13f9 <unavailable> + 5113

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    // write your code in Swift 3.0\
    \ (Linux)\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpcacw6h49/tmpcacw6h49.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaddef99c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaddec90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaddec90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaddec8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcacw6h49                        0x000055deb2a4d383 <unavailable> + 4995

    5    libc.so.6                          0x00002aaddf185460 __libc_start_main +
    245

    6    tmpcacw6h49                        0x000055deb2a4cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let binary = String(N, radix: 2)\n\
    \    let digits = Array(binary)\n    var sum = 0\n    for digit in digits {\n\
    \        sum += Int(String(digit))!\n    }\n    return String(sum)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpl_wpb2n8/tmpl_wpb2n8.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4c9120cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4c90f03b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4c90f03988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4c90f027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_wpb2n8                        0x00005643b2d628b3 <unavailable> + 6323

    5    libc.so.6                          0x00002b4c913f8460 __libc_start_main +
    245

    6    tmpl_wpb2n8                        0x00005643b2d62519 <unavailable> + 5401

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var result = \"\"\
    \n    while N > 0 {\n        result = String(N%2) + result\n        N /= 2\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmps7wqt56k/tmps7wqt56k.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba2be6f0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba2be3e7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba2be3e7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba2be3e67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps7wqt56k                        0x000055f57710b493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba2be8dc460 __libc_start_main +
    245

    6    tmps7wqt56k                        0x000055f57710b0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  return String(N, radix: 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpz07z7e62/tmpz07z7e62.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab96210bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab961e02b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab961e02988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab961e017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz07z7e62                        0x000055efee96d383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab9622f7460 __libc_start_main +
    245

    6    tmpz07z7e62                        0x000055efee96cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var n = N\n    var res = \"\"\n\
    \    while n > 0 {\n        res = String(n % 2) + res\n        n /= 2\n    }\n\
    \    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp9ydhmgr5/tmp9ydhmgr5.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d301a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d2fea0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d2fea0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d2fe9f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9ydhmgr5                        0x000055d026f1a493 <unavailable> + 5267

    5    libc.so.6                          0x00002b2d30395460 __libc_start_main +
    245

    6    tmp9ydhmgr5                        0x000055d026f1a0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  var sum = 0\n  var binary = \"\"\n\
    \  for i in N.binaryDigits {\n    binary += String(i)\n    sum += i\n  }\n  return\
    \ binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmp6uyyi3ey.swift:18:14: error: value of type 'Int' has no member\
    \ 'binaryDigits'\n  for i in N.binaryDigits {\n           ~ ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var n = N\n    var result = String()\n\
    \    while n > 0 {\n        result.append(String(n % 2))\n        n /= 2\n   \
    \ }\n    return String(result.reversed())\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpdhslr932/tmpdhslr932.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afcab15fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afcaae56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afcaae56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afcaae557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdhslr932                        0x0000563ab56e46b3 <unavailable> + 5811

    5    libc.so.6                          0x00002afcab34b460 __libc_start_main +
    245

    6    tmpdhslr932                        0x0000563ab56e4319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n\tvar bin = \"\"\n\tvar n = N\n\twhile\
    \ n > 0 {\n\t\tbin = String(n % 2) + bin\n\t\tn /= 2\n\t}\n\treturn bin\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpq8xj03b5/tmpq8xj03b5.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b09a4159c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b09a3e50b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b09a3e50988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b09a3e4f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq8xj03b5                        0x0000559e1d2b3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b09a4345460 __libc_start_main +
    245

    6    tmpq8xj03b5                        0x0000559e1d2b30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return convertToBinary(N)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmpb7orrbni.swift:16:12: error: cannot find 'convertToBinary' in scope\n\
    \    return convertToBinary(N)\n           ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var binary = \"\"\
    \n    repeat {\n        let remainder = N % 2\n        binary = String(remainder)\
    \ + binary\n        N /= 2\n    } while N > 0\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpkfzx2kzp/tmpkfzx2kzp.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b550740ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5507105b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5507105988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b55071047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkfzx2kzp                        0x0000563637d67493 <unavailable> + 5267

    5    libc.so.6                          0x00002b55075fa460 __libc_start_main +
    245

    6    tmpkfzx2kzp                        0x0000563637d670f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  return String(N, radix: 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpz07z7e62/tmpz07z7e62.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab96210bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab961e02b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab961e02988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab961e017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz07z7e62                        0x000055efee96d383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab9622f7460 __libc_start_main +
    245

    6    tmpz07z7e62                        0x000055efee96cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var binaryNumber = \"\"\n    var\
    \ remainder = 0\n    var number = N\n    while number > 0 {\n        remainder\
    \ = number % 2\n        number = number / 2\n        binaryNumber = \"\\(remainder)\"\
    \ + binaryNumber\n    }\n    return binaryNumber\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpnah32oih/tmpnah32oih.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9c50d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9c4dd0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9c4dd0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9c4dcf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnah32oih                        0x000055a796850623 <unavailable> + 5667

    5    libc.so.6                          0x00002ba9c52c5460 __libc_start_main +
    245

    6    tmpnah32oih                        0x000055a796850289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = [String]()\n    var\
    \ number = N\n    while number != 0 {\n        result.append(String(number % 2))\n\
    \        number /= 2\n    }\n    return result.count == 0 ? \"0\" : String(result.reversed())\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmpe1dme1a1.swift:22:38: error: initializer 'init(_:)' requires the\
    \ types 'ReversedCollection<[String]>.Element' (aka 'String') and 'Character'\
    \ be equivalent\n    return result.count == 0 ? \"0\" : String(result.reversed())\n\
    \                                     ^\nSwift.String:4:12: note: where 'S.Element'\
    \ = 'ReversedCollection<[String]>.Element' (aka 'String')\n    public init<S>(_\
    \ characters: S) where S : Sequence, S.Element == Character\n           ^\n"
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n\treturn String(N, radix: 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4g9pwl_z/tmp4g9pwl_z.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9f5c0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9f5bdcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9f5bdcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9f5bdca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4g9pwl_z                        0x00005597e5f64383 <unavailable> + 4995

    5    libc.so.6                          0x00002b9f5c2c0460 __libc_start_main +
    245

    6    tmp4g9pwl_z                        0x00005597e5f63fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(toBinary(number: N))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmpexwm_qor.swift:16:19: error: cannot find 'toBinary' in scope\n\
    \    return String(toBinary(number: N))\n                  ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var sum = 0\n    for i in N.binaryString\
    \ {\n        sum += Int(String(i))!\n    }\n    return sum.binaryString\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmpb1tntx0w.swift:17:16: error: value of type 'Int' has no member\
    \ 'binaryString'\n    for i in N.binaryString {\n             ~ ^~~~~~~~~~~~\n\
    /tmp/tmpb1tntx0w.swift:20:16: error: value of type 'Int' has no member 'binaryString'\n\
    \    return sum.binaryString\n           ~~~ ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var sum = 0\n    var number = N\n\
    \    while number > 0 {\n        sum += number % 2\n        number /= 2\n    }\n\
    \    return String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpugl13l75/tmpugl13l75.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adef3567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adef325eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adef325e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adef325d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpugl13l75                        0x000055de90517433 <unavailable> + 5171

    5    libc.so.6                          0x00002adef3753460 __libc_start_main +
    245

    6    tmpugl13l75                        0x000055de90517099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n\tvar result = \"\"\n\tvar num = N\n\
    \t\n\twhile num > 0 {\n\t\tif num % 2 == 0 {\n\t\t\tresult = \"0\" + result\n\t\
    \t} else {\n\t\t\tresult = \"1\" + result\n\t\t}\n\t\tnum /= 2\n\t}\n\t\n\treturn\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp0ywimzf3/tmp0ywimzf3.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8334097c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8333d8eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8333d8e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8333d8d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0ywimzf3                        0x0000563d7163d3c3 <unavailable> + 5059

    5    libc.so.6                          0x00002b8334283460 __libc_start_main +
    245

    6    tmp0ywimzf3                        0x0000563d7163d029 <unavailable> + 4137

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var bin = \"\"\n    var divisor\
    \ = 2\n    var quotient = N\n    while quotient > 0 {\n        let remainder =\
    \ quotient % divisor\n        quotient = quotient / divisor\n        bin = String(remainder)\
    \ + bin\n    }\n    return bin\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4wsb_3ys/tmp4wsb_3ys.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5c60ccc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5c5dc3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5c5dc3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5c5dc27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4wsb_3ys                        0x000055e6e5c87493 <unavailable> + 5267

    5    libc.so.6                          0x00002af5c62b8460 __libc_start_main +
    245

    6    tmp4wsb_3ys                        0x000055e6e5c870f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var binArray = [Int]()\n    var\
    \ result = \"\"\n    var sum = 0\n    for i in 0..<10 {\n        var divider =\
    \ 1\n        for _ in 0..<i {\n            divider *= 2\n        }\n        binArray.append(divider)\n\
    \    }\n    for num in binArray {\n        if num <= N {\n            result +=\
    \ \"1\"\n            sum += num\n        } else {\n            result += \"0\"\
    \n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpw3yryjwp/tmpw3yryjwp.swift:50: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0bbb4b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0bbb1aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0bbb1ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0bbb1ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw3yryjwp                        0x000055f9a5944723 <unavailable> + 5923

    5    libc.so.6                          0x00002b0bbb6a3460 __libc_start_main +
    245

    6    tmpw3yryjwp                        0x000055f9a5944389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  return String(N, radix: 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpz07z7e62/tmpz07z7e62.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab96210bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab961e02b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab961e02988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab961e017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz07z7e62                        0x000055efee96d383 <unavailable> + 4995

    5    libc.so.6                          0x00002ab9622f7460 __libc_start_main +
    245

    6    tmpz07z7e62                        0x000055efee96cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var bin: String = \"\"\n    var\
    \ num = N\n    while num > 0 {\n        bin += String(num % 2)\n        num /=\
    \ 2\n    }\n    return String(bin.reversed())\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpc34g_r23/tmpc34g_r23.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72841e0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7283ed7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7283ed7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7283ed67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpc34g_r23                        0x000055c8a3408673 <unavailable> + 5747

    5    libc.so.6                          0x00002b72843cc460 __libc_start_main +
    245

    6    tmpc34g_r23                        0x000055c8a34082d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let binaryN = String(N, radix: 2)\n\
    \    let str = String(binaryN.flatMap { Int(String($0)) })\n    return str\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmpoba_1hw2.swift:17:15: error: no exact matches in call to initializer\
    \ \n    let str = String(binaryN.flatMap { Int(String($0)) })\n              ^\n\
    Swift.String:4:12: note: candidate requires that the types 'Int' and 'Character'\
    \ be equivalent (requirement specified as 'S.Element' == 'Character')\n    public\
    \ init<S>(_ characters: S) where S : Sequence, S.Element == Character\n      \
    \     ^\nSwift.RangeReplaceableCollection:3:23: note: candidate requires that\
    \ the types 'String.Element' (aka 'Character') and 'Int' be equivalent (requirement\
    \ specified as 'Self.Element' == 'S.Element')\n    @inlinable public init<S>(_\
    \ elements: S) where S : Sequence, Self.Element == S.Element\n               \
    \       ^\nSwift.String:2:12: note: incorrect labels for candidate (have: '(_:)',\
    \ expected: '(describing:)')\n    public init<Subject>(describing instance: Subject)\n\
    \           ^\nSwift.String:3:23: note: incorrect labels for candidate (have:\
    \ '(_:)', expected: '(describing:)')\n    @inlinable public init<Subject>(describing\
    \ instance: Subject) where Subject : CustomStringConvertible\n               \
    \       ^\nSwift.String:6:12: note: incorrect labels for candidate (have: '(_:)',\
    \ expected: '(reflecting:)')\n    public init<Subject>(reflecting subject: Subject)\n\
    \           ^\n"
  stdout: ''
  timestamp: 1660013989
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return toBinary(N)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmplnm226eg.swift:16:12: error: cannot find 'toBinary' in scope\n\
    \    return toBinary(N)\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var num = N\n    var res = String()\n\
    \    while num > 0 {\n        res.append(String(num % 2))\n        num /= 2\n\
    \    }\n    return String(res.reversed())\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpepujisv8/tmpepujisv8.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5c3cfb3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5c3ccaab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5c3ccaa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5c3cca97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpepujisv8                        0x0000555ad8d2d6b3 <unavailable> + 5811

    5    libc.so.6                          0x00002b5c3d19f460 __libc_start_main +
    245

    6    tmpepujisv8                        0x0000555ad8d2d319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = [Int]()\n    var N\
    \ = N\n    while N > 0 {\n        result.append(N % 2)\n        N /= 2\n    }\n\
    \    return result.reversed().map { String($0) }.joined()\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpknoczfp1/tmpknoczfp1.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3baa13c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3ba70ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3ba70a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3ba7097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpknoczfp1                        0x000055abf25367a3 <unavailable> + 6051

    5    libc.so.6                          0x00002ba3babff460 __libc_start_main +
    245

    6    tmpknoczfp1                        0x000055abf2536409 <unavailable> + 5129

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var num =\
    \ N\n    while num > 0 {\n        result = String(num % 2) + result\n        num\
    \ /= 2\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpq2jbhw_n/tmpq2jbhw_n.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4ce6a30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4ce6727b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4ce6727988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4ce67267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq2jbhw_n                        0x0000555e4bf16493 <unavailable> + 5267

    5    libc.so.6                          0x00002b4ce6c1c460 __libc_start_main +
    245

    6    tmpq2jbhw_n                        0x0000555e4bf160f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013919
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var result = \"\"\
    \n    while N > 0 {\n        let digit = N % 2\n        result = String(digit)\
    \ + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpq1wsas3t/tmpq1wsas3t.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b839f614c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b839f30bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b839f30b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b839f30a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq1wsas3t                        0x0000561460d72493 <unavailable> + 5267

    5    libc.so.6                          0x00002b839f800460 __libc_start_main +
    245

    6    tmpq1wsas3t                        0x0000561460d720f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var sum = 0\n    var number = N\n\
    \    while number > 0 {\n        let temp = number % 2\n        sum += temp\n\
    \        number /= 2\n    }\n    return String(sum)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxpj2bbf7/tmpxpj2bbf7.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b25bc825c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b25bc51cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b25bc51c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b25bc51b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxpj2bbf7                        0x00005580b17f9433 <unavailable> + 5171

    5    libc.so.6                          0x00002b25bca11460 __libc_start_main +
    245

    6    tmpxpj2bbf7                        0x00005580b17f9099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var binary = \"\"\n    var remainder\
    \ = 0\n    var quotient = N\n    while quotient > 0 {\n        remainder = quotient\
    \ % 2\n        quotient = quotient / 2\n        binary = String(remainder) + binary\n\
    \    }\n    return binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp8qy_o2ar/tmp8qy_o2ar.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2e47725c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2e4741cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2e4741c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2e4741b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8qy_o2ar                        0x000056290a81c493 <unavailable> + 5267

    5    libc.so.6                          0x00002b2e47911460 __libc_start_main +
    245

    6    tmp8qy_o2ar                        0x000056290a81c0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let result = String(N, radix: 2)\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpugym0nyv/tmpugym0nyv.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afefb3efc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afefb0e6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afefb0e6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afefb0e57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpugym0nyv                        0x0000555e35888383 <unavailable> + 4995

    5    libc.so.6                          0x00002afefb5db460 __libc_start_main +
    245

    6    tmpugym0nyv                        0x0000555e35887fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var temp = N\n    var res = \"\"\
    \n    while temp > 0 {\n        res = \"\\(temp % 2)\" + res\n        temp /=\
    \ 2\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpk13zrj_b/tmpk13zrj_b.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad95f27ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad95ef75b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad95ef75988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad95ef747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk13zrj_b                        0x0000555d86b02623 <unavailable> + 5667

    5    libc.so.6                          0x00002ad95f46a460 __libc_start_main +
    245

    6    tmpk13zrj_b                        0x0000555d86b02289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let binaryString = String(N, radix:\
    \ 2)\n    return binaryString\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpmzym1e8t/tmpmzym1e8t.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada0141ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada01111b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada01111988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada011107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmzym1e8t                        0x000055a74916d383 <unavailable> + 4995

    5    libc.so.6                          0x00002ada01606460 __libc_start_main +
    245

    6    tmpmzym1e8t                        0x000055a74916cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n  var N = N\n  var binary = [Int]()\n\
    \  while N > 0 {\n    binary.append(N % 2)\n    N /= 2\n  }\n  var output = \"\
    \"\n  for i in binary.reversed() {\n    output += String(i)\n  }\n  return output\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp08sj0wom/tmp08sj0wom.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6952f15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6952c0cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6952c0c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6952c0b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp08sj0wom                        0x00005638ca1eb793 <unavailable> + 6035

    5    libc.so.6                          0x00002b6953101460 __libc_start_main +
    245

    6    tmp08sj0wom                        0x00005638ca1eb3f9 <unavailable> + 5113

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n\treturn String(N, radix: 2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4g9pwl_z/tmp4g9pwl_z.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9f5c0d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9f5bdcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9f5bdcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9f5bdca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4g9pwl_z                        0x00005597e5f64383 <unavailable> + 4995

    5    libc.so.6                          0x00002b9f5c2c0460 __libc_start_main +
    245

    6    tmp4g9pwl_z                        0x00005597e5f63fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013989
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let binary = String(N, radix: 2)\n\
    \    var result = 0\n    for i in binary {\n        let val = Int(String(i))!\n\
    \        result += val\n    }\n    return String(result)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpsigldvl7/tmpsigldvl7.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b638f95cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b638f653b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b638f653988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b638f6527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsigldvl7                        0x000055e436a20693 <unavailable> + 5779

    5    libc.so.6                          0x00002b638fb48460 __libc_start_main +
    245

    6    tmpsigldvl7                        0x000055e436a202f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return \"\\(String(N, radix: 2))\"\
    \n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp14u8rso1/tmp14u8rso1.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aee6b905c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aee6b5fcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aee6b5fc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aee6b5fb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp14u8rso1                        0x000055b34218a683 <unavailable> + 5763

    5    libc.so.6                          0x00002aee6baf1460 __libc_start_main +
    245

    6    tmp14u8rso1                        0x000055b34218a2e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var bin = \"\"\n    var n = N\n\
    \    while n > 0 {\n        bin += String(n % 2)\n        n /= 2\n    }\n    return\
    \ String(bin.reversed())\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwpv_o1iu/tmpwpv_o1iu.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c62412c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c62109b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c62109988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c621087b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwpv_o1iu                        0x0000555bccb8c673 <unavailable> + 5747

    5    libc.so.6                          0x00002b3c625fe460 __libc_start_main +
    245

    6    tmpwpv_o1iu                        0x0000555bccb8c2d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let binaryRepresentation = String(N,\
    \ radix: 2)\n    var sum = 0\n    for char in binaryRepresentation {\n       \
    \ sum += Int(String(char))!\n    }\n    return String(sum)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmp3_urovsv/tmp3_urovsv.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b422b878c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b422b56fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b422b56f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b422b56e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3_urovsv                        0x00005563888c8693 <unavailable> + 5779

    5    libc.so.6                          0x00002b422ba64460 __libc_start_main +
    245

    6    tmp3_urovsv                        0x00005563888c82f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let N = String(N, radix: 2)\n  \
    \  var sum = 0\n    for i in N {\n        sum += Int(String(i))!\n    }\n    return\
    \ String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpbh_4goo1/tmpbh_4goo1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd9c0dec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd9bdd5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd9bdd5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd9bdd47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbh_4goo1                        0x00005648801d2693 <unavailable> + 5779

    5    libc.so.6                          0x00002abd9c2ca460 __libc_start_main +
    245

    6    tmpbh_4goo1                        0x00005648801d22f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var quotient\
    \ = N\n    while quotient > 0 {\n        result.append(String(quotient % 2))\n\
    \        quotient /= 2\n    }\n    return String(result.reversed())\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpaylv4qkq/tmpaylv4qkq.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeed6452c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeed6149b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeed6149988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeed61487b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaylv4qkq                        0x0000561ef192a673 <unavailable> + 5747

    5    libc.so.6                          0x00002aeed663e460 __libc_start_main +
    245

    6    tmpaylv4qkq                        0x0000561ef192a2d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var n = N\n    var answer = \"\"\
    \n    while n > 0 {\n        let remain = n % 2\n        answer = String(remain)\
    \ + answer\n        n = n / 2\n    }\n    return answer\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpc9tpdwia/tmpc9tpdwia.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b968a810c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b968a507b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b968a507988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b968a5067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpc9tpdwia                        0x0000557fc28a8493 <unavailable> + 5267

    5    libc.so.6                          0x00002b968a9fc460 __libc_start_main +
    245

    6    tmpc9tpdwia                        0x0000557fc28a80f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    // code here\n    var bStr = \"\"\
    \n    var remainder = 0\n    var n = N\n    while n > 0 {\n        remainder =\
    \ n % 2\n        n = n / 2\n        bStr = \"\\(remainder)\" + bStr\n    }\n \
    \   return bStr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpet84r6jd/tmpet84r6jd.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b48f9992c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b48f9689b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b48f9689988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b48f96887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpet84r6jd                        0x00005651109be623 <unavailable> + 5667

    5    libc.so.6                          0x00002b48f9b7e460 __libc_start_main +
    245

    6    tmpet84r6jd                        0x00005651109be289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var i = N\n    var binaryNumber\
    \ = \"\"\n    while i > 0 {\n        binaryNumber = String(i % 2) + binaryNumber\n\
    \        i = i / 2\n    }\n    return binaryNumber\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4tugxbt4/tmp4tugxbt4.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aac93ff6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aac93cedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aac93ced988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aac93cec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4tugxbt4                        0x000055c58659c493 <unavailable> + 5267

    5    libc.so.6                          0x00002aac941e2460 __libc_start_main +
    245

    6    tmp4tugxbt4                        0x000055c58659c0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let binaryString = String(N, radix:\
    \ 2)\n    var total = 0\n    for i in binaryString {\n        total += Int(String(i))!\n\
    \    }\n    return String(total)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpv_2u_fk4/tmpv_2u_fk4.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaec8370c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaec8067b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaec8067988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaec80667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv_2u_fk4                        0x00005628d3faa693 <unavailable> + 5779

    5    libc.so.6                          0x00002aaec855c460 __libc_start_main +
    245

    6    tmpv_2u_fk4                        0x00005628d3faa2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = \"\\(N % 2)\" + result\n        N /= 2\n\
    \    }\n    return result.isEmpty ? \"0\" : result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr97za0bk/tmpr97za0bk.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b96ac905c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b96ac5fcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b96ac5fc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b96ac5fb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr97za0bk                        0x000055fb7a6b3683 <unavailable> + 5763

    5    libc.so.6                          0x00002b96acaf1460 __libc_start_main +
    245

    6    tmpr97za0bk                        0x000055fb7a6b32e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let t = String(N, radix: 2)\n  \
    \  return String(t.reduce(0) { $0 + Int(String($1))!})\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmph1u17vf1/tmph1u17vf1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8f075dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af8f0454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af8f0454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8f04537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph1u17vf1                        0x00005558795b46c3 <unavailable> + 5827

    5    libc.so.6                          0x00002af8f0949460 __libc_start_main +
    245

    6    tmph1u17vf1                        0x00005558795b4329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var num =\
    \ N\n    var remainder = 0\n    repeat {\n        remainder = num % 2\n      \
    \  num = num / 2\n        result.append(String(remainder))\n    } while num >\
    \ 0\n    return String(result.reversed())\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpactwbagc/tmpactwbagc.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba69165bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba691352b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba691352988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba6913517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpactwbagc                        0x00005635b1ce4673 <unavailable> + 5747

    5    libc.so.6                          0x00002ba691847460 __libc_start_main +
    245

    6    tmpactwbagc                        0x00005635b1ce42d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n\tvar result = \"\"\n\tvar remainder\
    \ = 0\n\tvar N = N\n\t\n\trepeat {\n\t\tremainder = N % 2\n\t\tN = N / 2\n\t\t\
    result.append(String(remainder))\n\t} while N > 0\n\t\n\treturn String(result.reversed())\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp_didpi5x/tmp_didpi5x.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dad05bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dacd52b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dacd52988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dacd517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_didpi5x                        0x000056470aba1673 <unavailable> + 5747

    5    libc.so.6                          0x00002b6dad247460 __libc_start_main +
    245

    6    tmp_didpi5x                        0x000056470aba12d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var binnum\
    \ = N\n    var remainder = 0\n    while binnum > 0 {\n        remainder = binnum\
    \ % 2\n        binnum = binnum / 2\n        result = String(remainder) + result\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpexibur1a/tmpexibur1a.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4c8a5fac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4c8a2f1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4c8a2f1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4c8a2f07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpexibur1a                        0x000056007148b493 <unavailable> + 5267

    5    libc.so.6                          0x00002b4c8a7e6460 __libc_start_main +
    245

    6    tmpexibur1a                        0x000056007148b0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var number\
    \ = N\n    while number > 0 {\n        result.append(String(number % 2))\n   \
    \     number /= 2\n    }\n    return String(result.reversed())\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpv_i_2j41/tmpv_i_2j41.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af165c16c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af16590db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af16590d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af16590c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv_i_2j41                        0x00005631d7f02673 <unavailable> + 5747

    5    libc.so.6                          0x00002af165e02460 __libc_start_main +
    245

    6    tmpv_i_2j41                        0x00005631d7f022d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    let binaryString = String(N, radix:\
    \ 2)\n    var result = 0\n    for c in binaryString {\n        result += Int(String(c))!\n\
    \    }\n    return String(result)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpfo0xmkn3/tmpfo0xmkn3.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b66c3a84c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b66c377bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b66c377b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66c377a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfo0xmkn3                        0x000055c19bdf5693 <unavailable> + 5779

    5    libc.so.6                          0x00002b66c3c70460 __libc_start_main +
    245

    6    tmpfo0xmkn3                        0x000055c19bdf52f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    // your code here\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: SyntaxError
  stderr: '/tmp/tmp2navl68x.swift:17:1: error: missing return in global function expected
    to return ''String''

    }

    ^

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = String()\n    var n\
    \ = N\n    while n != 0 {\n        result = String(n % 2) + result\n        n\
    \ /= 2\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp724irulr/tmp724irulr.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d625c0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d622b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d622b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d622b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp724irulr                        0x0000557cfa5044d3 <unavailable> + 5331

    5    libc.so.6                          0x00002b3d627ac460 __libc_start_main +
    245

    6    tmp724irulr                        0x0000557cfa504139 <unavailable> + 4409

    '
  stdout: ''
  timestamp: 1660013990
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845

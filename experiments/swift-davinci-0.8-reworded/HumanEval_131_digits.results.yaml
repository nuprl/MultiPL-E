language: swift
name: HumanEval_131_digits
results:
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    \n    if n / 10 == 0 {\n        return n % 2 == 0 ? 0 : n\n\
    \    }\n    \n    return (n % 10 % 2 == 0 ? 0 : n % 10) * digits(n: n / 10)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp0l20i5m7/tmp0l20i5m7.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8d4a97ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8d4a671b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8d4a671988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8d4a6707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0l20i5m7                        0x0000558b70aec2c3 <unavailable> + 4803

    5    libc.so.6                          0x00002b8d4ab66460 __libc_start_main +
    245

    6    tmp0l20i5m7                        0x0000558b70aebef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var remainder = n\n    while remainder\
    \ > 0 {\n        let lastDigit = remainder % 10\n        if lastDigit % 2 != 0\
    \ {\n            product *= lastDigit\n        }\n        remainder /= 10\n  \
    \  }\n    return product\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpcajw2i7y/tmpcajw2i7y.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b5094ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b50641b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b50641988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b506407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcajw2i7y                        0x0000557c0d199539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7b50b36460 __libc_start_main +
    245

    6    tmpcajw2i7y                        0x0000557c0d198ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let temp = Array(String(n))\n    var ans = 1\n    for s in\
    \ temp {\n        let n = Int(String(s))!\n        if n % 2 == 1 {\n         \
    \   ans *= n\n        }\n    }\n    return ans\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp6olrl6c5/tmp6olrl6c5.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b849bcd5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b849b9ccb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b849b9cc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b849b9cb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6olrl6c5                        0x0000559d3b7329d9 <unavailable> + 6617

    5    libc.so.6                          0x00002b849bec1460 __libc_start_main +
    245

    6    tmp6olrl6c5                        0x0000559d3b732399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: 0
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let nString = String(n)\n    var nArray = Array(nString)\n\
    \    var oddDigits = [Int]()\n    for num in nArray {\n        let numInt = Int(String(num))\n\
    \        if numInt! % 2 != 0 {\n            oddDigits.append(numInt!)\n      \
    \  }\n    }\n    if oddDigits.count == 0 {\n        return 0\n    }\n    var prod\
    \ = 1\n    for num in oddDigits {\n        prod *= num\n    }\n    return prod\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var m = n\n    var result = 1\n    while m > 0 {\n      \
    \  let d = m % 10\n        if d % 2 == 1 {\n            result *= d\n        }\n\
    \        m /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpauftxb57/tmpauftxb57.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad077402c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0770f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0770f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0770f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpauftxb57                        0x0000558bcd80c539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad0775ee460 __libc_start_main +
    245

    6    tmpauftxb57                        0x0000558bcd80bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for number in n.description {\n    \
    \    guard let x = Int(String(number)) else {\n            return 0\n        }\n\
    \        if x % 2 != 0 {\n            product *= x\n        }\n    }\n    return\
    \ product\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp50q0_p8h/tmp50q0_p8h.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9218b7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9218874b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9218874988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92188737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp50q0_p8h                        0x00005652cc5df789 <unavailable> + 6025

    5    libc.so.6                          0x00002b9218d69460 __libc_start_main +
    245

    6    tmp50q0_p8h                        0x00005652cc5df149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  var n = n\n  var product = 1\n  while n > 0 {\n    let digit\
    \ = n % 10\n    if digit % 2 != 0 {\n      product *= digit\n    }\n    n /= 10\n\
    \  }\n  return product\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwdh77_7k/tmpwdh77_7k.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02b0959c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02b0650b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02b0650988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02b064f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwdh77_7k                        0x00005579a7843539 <unavailable> + 5433

    5    libc.so.6                          0x00002b02b0b45460 __libc_start_main +
    245

    6    tmpwdh77_7k                        0x00005579a7842ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let lastDigit = n % 10\n        if lastDigit % 2 != 0 {\n            result\
    \ *= lastDigit\n        }\n        n /= 10\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpdqu3b0oy/tmpdqu3b0oy.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2e23804c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2e234fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2e234fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2e234fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdqu3b0oy                        0x0000561487de2539 <unavailable> + 5433

    5    libc.so.6                          0x00002b2e239f0460 __libc_start_main +
    245

    6    tmpdqu3b0oy                        0x0000561487de1ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var number = n\n    var product = 1\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpfq3sm50l/tmpfq3sm50l.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7f8e9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7f8b96b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7f8b96988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7f8b957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfq3sm50l                        0x000055933e5cf539 <unavailable> + 5433

    5    libc.so.6                          0x00002ae7f908b460 __libc_start_main +
    245

    6    tmpfq3sm50l                        0x000055933e5ceef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    guard n > 0 else { return 0 }\n    var num = n\n    var total\
    \ = 1\n    while num > 0 {\n        let digit = num % 10\n        if digit % 2\
    \ != 0 {\n            total *= digit\n        }\n        num /= 10\n    }\n  \
    \  return total\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpl521ll3p/tmpl521ll3p.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b59c46fdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b59c43f4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b59c43f4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b59c43f37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl521ll3p                        0x000055a610850539 <unavailable> + 5433

    5    libc.so.6                          0x00002b59c48e9460 __libc_start_main +
    245

    6    tmpl521ll3p                        0x000055a61084fef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return (1...n).reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpd_eam9jb/tmpd_eam9jb.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9bd6d2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9bd3c9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9bd3c9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9bd3c87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd_eam9jb                        0x0000560d58d36388 <unavailable> + 5000

    5    libc.so.6                          0x00002af9bd8be460 __libc_start_main +
    245

    6    tmpd_eam9jb                        0x0000560d58d36039 <unavailable> + 4153

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4_jpuw53/tmp4_jpuw53.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8f110e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8f10ddab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8f10dda988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8f10dd97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4_jpuw53                        0x000055b558dc5539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8f112cf460 __libc_start_main +
    245

    6    tmp4_jpuw53                        0x000055b558dc4ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for c in String(n) {\n        if let\
    \ d = Int(String(c)) {\n            if d % 2 != 0 {\n                product *=\
    \ d\n            }\n        }\n    }\n    return product\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpk9kwfjn0/tmpk9kwfjn0.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dc8090c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dc7d87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dc7d87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dc7d867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk9kwfjn0                        0x0000559189da57b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b6dc827c460 __libc_start_main +
    245

    6    tmpk9kwfjn0                        0x0000559189da5179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwk93905o/tmpwk93905o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b016ac9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b016a996b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b016a996988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b016a9957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwk93905o                        0x000055cdbb61d1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b016ae8b460 __libc_start_main +
    245

    6    tmpwk93905o                        0x000055cdbb61ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpgfweybl4/tmpgfweybl4.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2cd262bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2cd2322b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2cd2322988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2cd23217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgfweybl4                        0x0000556c9a943539 <unavailable> + 5433

    5    libc.so.6                          0x00002b2cd2817460 __libc_start_main +
    245

    6    tmpgfweybl4                        0x0000556c9a942ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  guard n > 0 else { return 0 }\n  return n % 10 % 2 == 1 ? n\
    \ % 10 * digits(n: n / 10) : digits(n: n / 10)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpw1s2c9je/tmpw1s2c9je.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6977c3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6974bab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6974ba988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6974b97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw1s2c9je                        0x000055dc17fa4248 <unavailable> + 4680

    5    libc.so.6                          0x00002ae6979af460 __libc_start_main +
    245

    6    tmpw1s2c9je                        0x000055dc17fa3ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  var number = n\n  var result = 1\n  while number > 0 {\n  \
    \  let current = number % 10\n    if current % 2 != 0 {\n      result *= current\n\
    \    }\n    number /= 10\n  }\n  return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmptq1z76m5/tmptq1z76m5.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aff129c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aff126bbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aff126bb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aff126ba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptq1z76m5                        0x00005623fff96539 <unavailable> + 5433

    5    libc.so.6                          0x00002aff12bb0460 __libc_start_main +
    245

    6    tmptq1z76m5                        0x00005623fff95ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  result *= digit\n        }\n        number /= 10\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpudaam73m/tmpudaam73m.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af7c455fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af7c4256b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af7c4256988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af7c42557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpudaam73m                        0x0000555d01826539 <unavailable> + 5433

    5    libc.so.6                          0x00002af7c474b460 __libc_start_main +
    245

    6    tmpudaam73m                        0x0000555d01825ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwk93905o/tmpwk93905o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b016ac9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b016a996b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b016a996988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b016a9957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwk93905o                        0x000055cdbb61d1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b016ae8b460 __libc_start_main +
    245

    6    tmpwk93905o                        0x000055cdbb61ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwk93905o/tmpwk93905o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b016ac9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b016a996b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b016a996988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b016a9957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwk93905o                        0x000055cdbb61d1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b016ae8b460 __libc_start_main +
    245

    6    tmpwk93905o                        0x000055cdbb61ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let str = String(n)\n    var total = 1\n    for s in str\
    \ {\n        if let n = Int(String(s)) {\n            if n % 2 != 0 {\n      \
    \          total *= n\n            }\n        }\n    }\n    return total\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpmmjcbvej/tmpmmjcbvej.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b37f1b43c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b37f183ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b37f183a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b37f18397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmmjcbvej                        0x0000563af44c57b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b37f1d2f460 __libc_start_main +
    245

    6    tmpmmjcbvej                        0x0000563af44c5179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return n.digits.filter { $0.isOdd }.reduce(1, *)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpvuuxsu2c.swift:12:14: error: value of type 'Int' has no member\
    \ 'digits'\n    return n.digits.filter { $0.isOdd }.reduce(1, *)\n           ~\
    \ ^~~~~~\n"
  stdout: ''
  timestamp: 1660028610
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for char in \"\\(n)\".characters {\n\
    \        if let digit = Int(\"\\(char)\") {\n            if digit % 2 != 0 {\n\
    \                result *= digit\n            }\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpgsleptw9.swift:13:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in \"\\(n)\".characters {\n              \
    \         ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift\
    \ 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var product = 1\n    while n > 0 {\n     \
    \   let d = n % 10\n        if d % 2 == 1 {\n            product *= d\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7br2x0qb/tmp7br2x0qb.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad6a37fbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad6a34f2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad6a34f2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad6a34f17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7br2x0qb                        0x000055c38505a539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad6a39e7460 __libc_start_main +
    245

    6    tmp7br2x0qb                        0x000055c385059ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var currentValue = n\n    while currentValue\
    \ > 0 {\n        let lastDigit = currentValue % 10\n        if lastDigit % 2 !=\
    \ 0 {\n            product *= lastDigit\n        }\n        currentValue /= 10\n\
    \    }\n    return product\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpmw7l9oxh/tmpmw7l9oxh.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af381229c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af380f20b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af380f20988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af380f1f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmw7l9oxh                        0x0000556c8afe9539 <unavailable> + 5433

    5    libc.so.6                          0x00002af381415460 __libc_start_main +
    245

    6    tmpmw7l9oxh                        0x0000556c8afe8ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4_jpuw53/tmp4_jpuw53.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8f110e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8f10ddab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8f10dda988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8f10dd97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4_jpuw53                        0x000055b558dc5539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8f112cf460 __libc_start_main +
    245

    6    tmp4_jpuw53                        0x000055b558dc4ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    let d = n % 10\n\
    \    if d % 2 == 0 {\n        return digits(n: n / 10)\n    }\n    return d *\
    \ digits(n: n / 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpvrl8bjqg/tmpvrl8bjqg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b054f46dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b054f164b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b054f164988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b054f1637b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvrl8bjqg                        0x000055905717d248 <unavailable> + 4680

    5    libc.so.6                          0x00002b054f659460 __libc_start_main +
    245

    6    tmpvrl8bjqg                        0x000055905717cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: 0
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let n = n\n    let str = String(n)\n    let nums = str.map\
    \ { Int(String($0))! }\n    let oddNums = nums.filter { $0 % 2 != 0 }\n    if\
    \ oddNums.count == 0 {\n        return 0\n    }\n    return oddNums.reduce(1,\
    \ *)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for d in String(n) {\n        if let\
    \ digit = Int(String(d)) {\n            if digit % 2 != 0 {\n                product\
    \ *= digit\n            }\n        }\n    }\n    return product\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpk47j2dx9/tmpk47j2dx9.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acaade9bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acaadb92b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acaadb92988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acaadb917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk47j2dx9                        0x0000557220c637b9 <unavailable> + 6073

    5    libc.so.6                          0x00002acaae087460 __libc_start_main +
    245

    6    tmpk47j2dx9                        0x0000557220c63179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n % 2 == 1 {\n\
    \        return n % 10 * digits(n: n / 10)\n    }\n    return digits(n: n / 10)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4jolesqe/tmp4jolesqe.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0a8c0acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0a8bda3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0a8bda3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0a8bda27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4jolesqe                        0x0000558c8c5cf248 <unavailable> + 4680

    5    libc.so.6                          0x00002b0a8c298460 __libc_start_main +
    245

    6    tmp4jolesqe                        0x0000558c8c5ceef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwk93905o/tmpwk93905o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b016ac9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b016a996b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b016a996988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b016a9957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwk93905o                        0x000055cdbb61d1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b016ae8b460 __libc_start_main +
    245

    6    tmpwk93905o                        0x000055cdbb61ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    \n    // YOUR CODE HERE\n    \n    return 0\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp9nmgdtqm/tmp9nmgdtqm.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b912ad90c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b912aa87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b912aa87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b912aa867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9nmgdtqm                        0x000055dd29e991b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b912af7c460 __libc_start_main +
    245

    6    tmp9nmgdtqm                        0x000055dd29e98e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    guard n > 0 else { return 0 }\n    let nums = String(n).flatMap\
    \ { $0.wholeNumberValue }\n    return nums.filter { $0 % 2 != 0 }.reduce(1, *)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpdko6ash9/tmpdko6ash9.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b76e1d67c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b76e1a5eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b76e1a5e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b76e1a5d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdko6ash9                        0x000055c2cc89d8c9 <unavailable> + 6345

    5    libc.so.6                          0x00002b76e1f53460 __libc_start_main +
    245

    6    tmpdko6ash9                        0x000055c2cc89d289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var p = 1\n    for i in String(n) {\n        if i.wholeNumberValue?.isMultiple(of:\
    \ 2) == false {\n            p *= i.wholeNumberValue!\n        }\n    }\n    return\
    \ p\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: Exception
  stderr: 'tmprrem34te/tmprrem34te.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45fe7e2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45fe4d9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45fe4d9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45fe4d87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprrem34te                        0x000055f9098d7819 <unavailable> + 6169

    5    libc.so.6                          0x00002b45fe9ce460 __libc_start_main +
    245

    6    tmprrem34te                        0x000055f9098d71d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    return n % 10 *\
    \ digits(n: n / 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp8wf33gmf/tmp8wf33gmf.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3859894c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b385958bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b385958b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b385958a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8wf33gmf                        0x000055f13788a248 <unavailable> + 4680

    5    libc.so.6                          0x00002b3859a80460 __libc_start_main +
    245

    6    tmp8wf33gmf                        0x000055f137889ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpgfweybl4/tmpgfweybl4.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2cd262bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2cd2322b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2cd2322988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2cd23217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgfweybl4                        0x0000556c9a943539 <unavailable> + 5433

    5    libc.so.6                          0x00002b2cd2817460 __libc_start_main +
    245

    6    tmpgfweybl4                        0x0000556c9a942ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var num = n\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 != 0 {\n            result *=\
    \ digit\n        }\n        num /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmprdkzpkrc/tmprdkzpkrc.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7560a27c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b756071eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b756071e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b756071d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprdkzpkrc                        0x000055b62e5a3539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7560c13460 __libc_start_main +
    245

    6    tmprdkzpkrc                        0x000055b62e5a2ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n < 10 {\n        return n\n    }\n    let digit = n %\
    \ 10\n    if digit.isMultiple(of: 2) {\n        return digits(n: n / 10)\n   \
    \ }\n    return digit * digits(n: n / 10)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpyvljiklk/tmpyvljiklk.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b60a12e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60a0fdab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b60a0fda988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b60a0fd97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyvljiklk                        0x000056236dc9b639 <unavailable> + 5689

    5    libc.so.6                          0x00002b60a14cf460 __libc_start_main +
    245

    6    tmpyvljiklk                        0x000056236dc9aff9 <unavailable> + 4089

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let numb\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpznb4n6dj.swift:12:9: error: type annotation missing in pattern\n\
    \    let numb\n        ^\n"
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var product = 1\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp0ubiv0mq/tmp0ubiv0mq.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aca42e7ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aca42b75b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aca42b75988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aca42b747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0ubiv0mq                        0x000056166e571539 <unavailable> + 5433

    5    libc.so.6                          0x00002aca4306a460 __libc_start_main +
    245

    6    tmp0ubiv0mq                        0x000056166e570ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: 0
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let n = String(n)\n    let arr = n.compactMap{Int(String($0))}\n\
    \    let result = arr.filter{$0 % 2 != 0}\n    return result.isEmpty ? 0 : result.reduce(1,\
    \ *)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n == 0 {\n        return 0\n    } else {\n        let\
    \ lastDigit = n % 10\n        if lastDigit % 2 == 0 {\n            return digits(n:\
    \ n / 10)\n        } else {\n            return lastDigit * digits(n: n / 10)\n\
    \        }\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpljc5pkxz/tmpljc5pkxz.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8f16ddec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8f16ad5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8f16ad5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8f16ad47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpljc5pkxz                        0x0000555decd19248 <unavailable> + 4680

    5    libc.so.6                          0x00002b8f16fca460 __libc_start_main +
    245

    6    tmpljc5pkxz                        0x0000555decd18ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var m = n\n    var product = 1\n    var digit = 0\n    while\
    \ m > 0 {\n        digit = m % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        m /= 10\n    }\n    return product\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpn1uhbim6/tmpn1uhbim6.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae543e1ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae543b15b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae543b15988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae543b147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpn1uhbim6                        0x000055bec32f2539 <unavailable> + 5433

    5    libc.so.6                          0x00002ae54400a460 __libc_start_main +
    245

    6    tmpn1uhbim6                        0x000055bec32f1ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    var m = n\n   \
    \ var d = 1\n    while m > 0 {\n        let digit = m % 10\n        if digit %\
    \ 2 == 1 {\n            d *= digit\n        }\n        m /= 10\n    }\n    return\
    \ d\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: Exception
  stderr: 'tmp8lr8094q/tmp8lr8094q.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae519465c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae51915cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae51915c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae51915b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8lr8094q                        0x0000562aa3860539 <unavailable> + 5433

    5    libc.so.6                          0x00002ae519651460 __libc_start_main +
    245

    6    tmp8lr8094q                        0x0000562aa385fef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let numbers = String(n).flatMap { Int(String($0)) }\n   \
    \ return numbers.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7n4g47si/tmp7n4g47si.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5d5f9f5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5d5f6ecb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5d5f6ec988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5d5f6eb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7n4g47si                        0x0000560f7f99e969 <unavailable> + 6505

    5    libc.so.6                          0x00002b5d5fbe1460 __libc_start_main +
    245

    6    tmp7n4g47si                        0x0000560f7f99e329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in \"\\(n)\".map({Int(String($0))!})\
    \ {\n        if digit % 2 != 0 {\n            result *= digit\n        }\n   \
    \ }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpg9rmcjax/tmpg9rmcjax.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba4f862fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba4f8326b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba4f8326988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba4f83257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg9rmcjax                        0x000055be6e307b69 <unavailable> + 7017

    5    libc.so.6                          0x00002ba4f881b460 __libc_start_main +
    245

    6    tmpg9rmcjax                        0x000055be6e307529 <unavailable> + 5417

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var prod = 1\n    for char in String(n) {\n        let x\
    \ = Int(String(char))!\n        if x%2 != 0 {\n            prod *= x\n       \
    \ }\n    }\n    return prod\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpgxocw7dz/tmpgxocw7dz.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b10dc47ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b10dc175b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b10dc175988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b10dc1747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgxocw7dz                        0x0000565068cfa7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b10dc66a460 __libc_start_main +
    245

    6    tmpgxocw7dz                        0x0000565068cfa179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let lastDigit = n % 10\n        if lastDigit % 2 != 0 {\n            product\
    \ *= lastDigit\n        }\n        n /= 10\n    }\n    return product\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpc42aooxu/tmpc42aooxu.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9c5fe6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9c5fb65b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9c5fb65988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9c5fb647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpc42aooxu                        0x0000558a217dd539 <unavailable> + 5433

    5    libc.so.6                          0x00002b9c6005a460 __libc_start_main +
    245

    6    tmpc42aooxu                        0x0000558a217dcef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  var result = 1\n  for c in String(n) {\n    if let d = Int(String(c))\
    \ {\n      if d % 2 != 0 {\n        result *= d\n      }\n    }\n  }\n  return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpel0rjmlw/tmpel0rjmlw.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeb02adec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeb027d5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeb027d5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeb027d47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpel0rjmlw                        0x00005612d93fe7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002aeb02cca460 __libc_start_main +
    245

    6    tmpel0rjmlw                        0x00005612d93fe179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  var result = 1\n  for i in String(n) {\n    if Int(String(i))!\
    \ % 2 != 0 {\n      result *= Int(String(i))!\n    }\n  }\n  return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpextfvc3s/tmpextfvc3s.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0523dd5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0523accb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0523acc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0523acb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpextfvc3s                        0x000055b587cc77b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b0523fc1460 __libc_start_main +
    245

    6    tmpextfvc3s                        0x000055b587cc7179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          result *= number\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp3r93bd4t/tmp3r93bd4t.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9fed20ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9fecf05b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9fecf05988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9fecf047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3r93bd4t                        0x0000563085a4e7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b9fed3fa460 __libc_start_main +
    245

    6    tmp3r93bd4t                        0x0000563085a4e179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return Int(String(n).filter{ $0.isOdd }.reduce(\"\") { (String($1),\
    \ String($0)) }) ?? 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpv5dwusxf.swift:12:12: error: the compiler is unable to type-check\
    \ this expression in reasonable time; try breaking up the expression into distinct\
    \ sub-expressions\n    return Int(String(n).filter{ $0.isOdd }.reduce(\"\") {\
    \ (String($1), String($0)) }) ?? 0\n           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660028633
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let numberString = String(n)\n    var product = 1\n    for\
    \ digit in numberString {\n        let intValue = Int(String(digit))!\n      \
    \  if intValue % 2 != 0 {\n            product *= intValue\n        }\n    }\n\
    \    return product\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmph2qc6d8e/tmph2qc6d8e.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aebe59ffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aebe56f6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aebe56f6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aebe56f57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph2qc6d8e                        0x000055bde51967b9 <unavailable> + 6073

    5    libc.so.6                          0x00002aebe5beb460 __libc_start_main +
    245

    6    tmph2qc6d8e                        0x000055bde5196179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    guard n > 0 else { return 0 }\n    var num = n\n    var multi\
    \ = 1\n    while num > 0 {\n        let digit = num % 10\n        if digit % 2\
    \ != 0 {\n            multi *= digit\n        }\n        num /= 10\n    }\n  \
    \  return multi\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpzpzgon2u/tmpzpzgon2u.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b54ceee1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b54cebd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b54cebd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b54cebd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzpzgon2u                        0x000055558be41539 <unavailable> + 5433

    5    libc.so.6                          0x00002b54cf0cd460 __libc_start_main +
    245

    6    tmpzpzgon2u                        0x000055558be40ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for d in String(n) {\n        let digit\
    \ = Int(String(d))!\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp38_7fah2/tmp38_7fah2.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94c2d65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94c2a5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94c2a5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94c2a5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38_7fah2                        0x000055ca10c977b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b94c2f51460 __libc_start_main +
    245

    6    tmp38_7fah2                        0x000055ca10c97179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var x = n\n    var result = 1\n    while x > 0 {\n      \
    \  let last = x % 10\n        if last % 2 != 0 {\n            result *= last\n\
    \        }\n        x /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpw6bp1isb/tmpw6bp1isb.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a72a01c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a726f8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a726f8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a726f77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw6bp1isb                        0x000055d2bb146539 <unavailable> + 5433

    5    libc.so.6                          0x00002b3a72bed460 __libc_start_main +
    245

    6    tmpw6bp1isb                        0x000055d2bb145ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var total = 1\n    while n > 0 {\n       \
    \ let lastDigit = n % 10\n        if lastDigit % 2 != 0 {\n            total *=\
    \ lastDigit\n        }\n        n /= 10\n    }\n    return total\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpv93ssn5q/tmpv93ssn5q.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef0f46ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef0f161b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef0f161988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef0f1607b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv93ssn5q                        0x0000562f43afe539 <unavailable> + 5433

    5    libc.so.6                          0x00002aef0f656460 __libc_start_main +
    245

    6    tmpv93ssn5q                        0x0000562f43afdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var n = n\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpgfweybl4/tmpgfweybl4.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2cd262bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2cd2322b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2cd2322988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2cd23217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgfweybl4                        0x0000556c9a943539 <unavailable> + 5433

    5    libc.so.6                          0x00002b2cd2817460 __libc_start_main +
    245

    6    tmpgfweybl4                        0x0000556c9a942ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    guard n > 0 else {\n        return 0\n    }\n    return digits(n:\
    \ n / 10) * (n % 2 == 0 ? 1 : n % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp23ju5ah0/tmp23ju5ah0.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba8b720bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba8b6f02b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba8b6f02988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba8b6f017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp23ju5ah0                        0x0000563e3eaff248 <unavailable> + 4680

    5    libc.so.6                          0x00002ba8b73f7460 __libc_start_main +
    245

    6    tmp23ju5ah0                        0x0000563e3eafeef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var p = 1\n    for c in \"\\(n)\".characters {\n        if\
    \ let d = Int(\"\\(c)\") {\n            if d % 2 == 1 {\n                p *=\
    \ d\n            }\n        }\n    }\n    return p\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpea9vh9zb.swift:13:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for c in \"\\(n)\".characters {\n                 \
    \   ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n\
    \    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var digit = 0\n    for i in String(n) {\n        let intValue\
    \ = Int(String(i))!\n        if intValue % 2 != 0 {\n            digit *= intValue\n\
    \        }\n    }\n    return digit\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp_tszunk0/tmp_tszunk0.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6e9c7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6e9974b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6e9974988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6e99737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_tszunk0                        0x000055785edb04c8 <unavailable> + 5320

    5    libc.so.6                          0x00002ae6e9e69460 __libc_start_main +
    245

    6    tmp_tszunk0                        0x000055785edb0179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let str = String(n)\n    let ar = Array(str)\n    var res\
    \ = 1\n    for elem in ar {\n        if let int = Int(String(elem)) {\n      \
    \      if int % 2 != 0 {\n                res *= int\n            }\n        }\n\
    \    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjglifs67/tmpjglifs67.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2e0d177c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2e0ce6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2e0ce6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2e0ce6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjglifs67                        0x000055620c1389d9 <unavailable> + 6617

    5    libc.so.6                          0x00002b2e0d363460 __libc_start_main +
    245

    6    tmpjglifs67                        0x000055620c138399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  var product = 1\n  for digit in String(n) {\n    if Int(String(digit))!\
    \ % 2 != 0 {\n      product *= Int(String(digit))!\n    }\n  }\n  return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpbabykzxe/tmpbabykzxe.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6c2e648c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6c2e33fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6c2e33f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6c2e33e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbabykzxe                        0x0000555cbf6697b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b6c2e834460 __libc_start_main +
    245

    6    tmpbabykzxe                        0x0000555cbf669179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let numbers = String(n).compactMap { Int(String($0)) }\n\
    \    var result = 1\n    for number in numbers {\n        if number % 2 != 0 {\n\
    \            result *= number\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpbe3dv81t/tmpbe3dv81t.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2eb87ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2eb84e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2eb84e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2eb84e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbe3dv81t                        0x000055af529719a9 <unavailable> + 6569

    5    libc.so.6                          0x00002b2eb89d7460 __libc_start_main +
    245

    6    tmpbe3dv81t                        0x000055af52971369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var mult = 1\n    var a = n\n    while a > 0 {\n        let\
    \ remainder = a % 10\n        if remainder % 2 != 0 {\n            mult *= remainder\n\
    \        }\n        a /= 10\n    }\n    return mult\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4edfq2ol/tmp4edfq2ol.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8d56104c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8d55dfbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8d55dfb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8d55dfa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4edfq2ol                        0x00005642ef041539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8d562f0460 __libc_start_main +
    245

    6    tmp4edfq2ol                        0x00005642ef040ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwk93905o/tmpwk93905o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b016ac9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b016a996b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b016a996988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b016a9957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwk93905o                        0x000055cdbb61d1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b016ae8b460 __libc_start_main +
    245

    6    tmpwk93905o                        0x000055cdbb61ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var prod = 1\n    for i in String(n) {\n        if Int(String(i))!\
    \ % 2 != 0 {\n            prod *= Int(String(i))!\n        }\n    }\n    return\
    \ prod\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: Exception
  stderr: 'tmprxicjusi/tmprxicjusi.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b58c6403c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b58c60fab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b58c60fa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b58c60f97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprxicjusi                        0x00005585007447b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b58c65ef460 __libc_start_main +
    245

    6    tmprxicjusi                        0x0000558500744179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var tmp = n\n    while tmp > 0 {\n  \
    \      let digit = tmp % 10\n        if digit % 2 != 0 {\n            result *=\
    \ digit\n        }\n        tmp /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpy7fnidit/tmpy7fnidit.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9208ba9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92088a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92088a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b920889f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy7fnidit                        0x000055c789156539 <unavailable> + 5433

    5    libc.so.6                          0x00002b9208d95460 __libc_start_main +
    245

    6    tmpy7fnidit                        0x000055c789155ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var dividend = n\n    while dividend\
    \ > 0 {\n        let remainder = dividend % 10\n        if remainder % 2 != 0\
    \ {\n            product *= remainder\n        }\n        dividend /= 10\n   \
    \ }\n    return product\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpz5aifekd/tmpz5aifekd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac5bde8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac5bdb84b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac5bdb84988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac5bdb837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz5aifekd                        0x000055cd960a0539 <unavailable> + 5433

    5    libc.so.6                          0x00002ac5be079460 __libc_start_main +
    245

    6    tmpz5aifekd                        0x000055cd9609fef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var sum = 1\n    var num = n\n    while num > 0 {\n     \
    \   let digit = num % 10\n        if digit % 2 != 0 {\n            sum *= digit\n\
    \        }\n        num /= 10\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpz192zqcb/tmpz192zqcb.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8d72e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8d6fdcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8d6fdc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8d6fdb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz192zqcb                        0x0000556a4a67b539 <unavailable> + 5433

    5    libc.so.6                          0x00002ab8d74d1460 __libc_start_main +
    245

    6    tmpz192zqcb                        0x0000556a4a67aef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    guard n > 0 else { return 0 }\n    guard n % 2 != 0 else\
    \ { return 0 }\n    let lastDigit = n % 10\n    return lastDigit * digits(n: n\
    \ / 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: Exception
  stderr: 'tmpsh__x3xb/tmpsh__x3xb.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab11131bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab111012b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab111012988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab1110117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsh__x3xb                        0x00005582b6fd6248 <unavailable> + 4680

    5    libc.so.6                          0x00002ab111507460 __libc_start_main +
    245

    6    tmpsh__x3xb                        0x00005582b6fd5ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    let str = String(n)\n    for letter in\
    \ str {\n        if letter.isNumber {\n            let value = Int(String(letter))!\n\
    \            if value % 2 != 0 {\n                result *= value\n          \
    \  }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmptgj8a3gx/tmptgj8a3gx.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abb3afebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abb3ace2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abb3ace2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abb3ace17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptgj8a3gx                        0x000055cc24fd2809 <unavailable> + 6153

    5    libc.so.6                          0x00002abb3b1d7460 __libc_start_main +
    245

    6    tmptgj8a3gx                        0x000055cc24fd21c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwk93905o/tmpwk93905o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b016ac9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b016a996b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b016a996988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b016a9957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwk93905o                        0x000055cdbb61d1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b016ae8b460 __libc_start_main +
    245

    6    tmpwk93905o                        0x000055cdbb61ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    guard n > 0 else { return 0 }\n    var remaining = n\n  \
    \  var product = 1\n    while remaining > 0 {\n        let digit = remaining %\
    \ 10\n        remaining /= 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpy0ojkjhh/tmpy0ojkjhh.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8d4d1f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8d4ceebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8d4ceeb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8d4ceea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy0ojkjhh                        0x0000564def7ff539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8d4d3e0460 __libc_start_main +
    245

    6    tmpy0ojkjhh                        0x0000564def7feef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for c in String(n) {\n        let int\
    \ = Int(String(c))!\n        if int % 2 != 0 {\n            result *= int\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpp8wq9ldc/tmpp8wq9ldc.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac00615fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac005e56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac005e56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac005e557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp8wq9ldc                        0x000055601a2867b9 <unavailable> + 6073

    5    libc.so.6                          0x00002ac00634b460 __libc_start_main +
    245

    6    tmpp8wq9ldc                        0x000055601a286179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n < 10 {\n        return n\n    }\n    let n = n % 10\n\
    \    if n % 2 == 0 {\n        return digits(n: n)\n    }\n    return n * digits(n:\
    \ n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: Exception
  stderr: 'tmpmk3c5j22/tmpmk3c5j22.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29176b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29173b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29173b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29173af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmk3c5j22                        0x0000558deb7ba2c3 <unavailable> + 4803

    5    libc.so.6                          0x00002b29178a5460 __libc_start_main +
    245

    6    tmpmk3c5j22                        0x0000558deb7b9ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: 0
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n < 10 {\n        return n % 2 == 0 ? 0 : n\n    }\n \
    \   let lastDigit = n % 10\n    return lastDigit % 2 == 0 ? digits(n: n / 10)\
    \ : lastDigit * digits(n: n / 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    let digit = n %\
    \ 10\n    if digit % 2 == 0 {\n        return digits(n: n / 10)\n    }\n    return\
    \ digit * digits(n: n / 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpmn9xvr1m/tmpmn9xvr1m.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b65dcd70c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b65dca67b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b65dca67988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b65dca667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmn9xvr1m                        0x0000558dfb2d7248 <unavailable> + 4680

    5    libc.so.6                          0x00002b65dcf5c460 __libc_start_main +
    245

    6    tmpmn9xvr1m                        0x0000558dfb2d6ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var result = 1\n    var rem: Int\n    repeat\
    \ {\n        rem = n % 10\n        if rem % 2 != 0 {\n            result *= rem\n\
    \        }\n        n /= 10\n    } while n > 0\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpksvp_c5h/tmpksvp_c5h.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b42aaec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b427a5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b427a5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b427a47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpksvp_c5h                        0x00005643932b7539 <unavailable> + 5433

    5    libc.so.6                          0x00002b2b42c9a460 __libc_start_main +
    245

    6    tmpksvp_c5h                        0x00005643932b6ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var digit = 1\n    var sum = 0\n    while n > 0 {\n     \
    \   let lastDigit = n % 10\n        if lastDigit % 2 != 0 {\n            sum +=\
    \ lastDigit\n        }\n        digit *= lastDigit\n        n /= 10\n    }\n \
    \   return digit\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmphs36e0bf.swift:20:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var number = n\n    var total = 1\n    while number > 0 {\n\
    \        let digit = number % 10\n        if digit % 2 != 0 {\n            total\
    \ *= digit\n        }\n        number /= 10\n    }\n    return total\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjw10_64b/tmpjw10_64b.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a5313cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a52e33b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a52e33988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a52e327b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjw10_64b                        0x0000564b5349a539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7a53328460 __libc_start_main +
    245

    6    tmpjw10_64b                        0x0000564b53499ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let ns = String(n)\n    let arrayOfChars = ns.map{$0}\n \
    \   var odd = 0\n    for char in arrayOfChars {\n        if char != \"0\" && Int(String(char))!\
    \ % 2 != 0 {\n            odd = odd * Int(String(char))!\n        }\n    }\n \
    \   return odd\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpynm46a9f/tmpynm46a9f.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2713f8bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2713c82b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2713c82988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2713c817b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpynm46a9f                        0x00005645b24067c8 <unavailable> + 6088

    5    libc.so.6                          0x00002b2714177460 __libc_start_main +
    245

    6    tmpynm46a9f                        0x00005645b2406479 <unavailable> + 5241

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for char in String(n) {\n        if\
    \ let digit = Int(String(char)) {\n            if digit % 2 != 0 {\n         \
    \       product *= digit\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp_7vq1480/tmp_7vq1480.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8025693c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b802538ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b802538a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b80253897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_7vq1480                        0x000056243a5cd7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b802587f460 __libc_start_main +
    245

    6    tmp_7vq1480                        0x000056243a5cd179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let digits = String(n).map { $0.wholeNumberValue ?? 0 }\n\
    \    var result = 1\n    for digit in digits {\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmphadk0z2l/tmphadk0z2l.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b492aad6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b492a7cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b492a7cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b492a7cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphadk0z2l                        0x00005592bf1cf8f9 <unavailable> + 6393

    5    libc.so.6                          0x00002b492acc2460 __libc_start_main +
    245

    6    tmphadk0z2l                        0x00005592bf1cf2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for char in String(n) {\n        if Int(String(char))!\
    \ % 2 != 0 {\n            result *= Int(String(char))!\n        }\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpii_jtqp5/tmpii_jtqp5.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f4a7fdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f4a4f4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f4a4f4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f4a4f37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpii_jtqp5                        0x0000564cab5397b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b3f4a9e9460 __libc_start_main +
    245

    6    tmpii_jtqp5                        0x0000564cab539179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let numberStr = String(n)\n    var result = 1\n    for digit\
    \ in numberStr {\n        if digit % 2 != 0 {\n            result *= Int(String(digit))!\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpvc2_okue.swift:15:12: error: cannot convert value of type 'Character'\
    \ to expected argument type 'Int'\n        if digit % 2 != 0 {\n           ^\n"
  stdout: ''
  timestamp: 1660028611
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let digitList = n.digits\n    let oddDigits = digitList.filter({\
    \ $0 % 2 != 0 })\n    return oddDigits.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpba9imbag.swift:12:23: error: value of type 'Int' has no member\
    \ 'digits'\n    let digitList = n.digits\n                    ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4_jpuw53/tmp4_jpuw53.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8f110e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8f10ddab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8f10dda988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8f10dd97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4_jpuw53                        0x000055b558dc5539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8f112cf460 __libc_start_main +
    245

    6    tmp4_jpuw53                        0x000055b558dc4ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var res = 1\n    while n > 0 {\n        let\
    \ digit = n % 10\n        if digit % 2 != 0 {\n            res *= digit\n    \
    \    }\n        n /= 10\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpg6r840ia/tmpg6r840ia.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab4c6aaac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab4c67a1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab4c67a1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab4c67a07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6r840ia                        0x00005581068b0539 <unavailable> + 5433

    5    libc.so.6                          0x00002ab4c6c96460 __libc_start_main +
    245

    6    tmpg6r840ia                        0x00005581068afef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let str = String(n)\n    var result = 1\n    for i in str\
    \ {\n        if (Int(String(i))! % 2) != 0 {\n            result *= Int(String(i))!\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpplyqlqlf/tmpplyqlqlf.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e4fd03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e4f9fab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e4f9fa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e4f9f97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpplyqlqlf                        0x000055b66f3037b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5e4feef460 __libc_start_main +
    245

    6    tmpplyqlqlf                        0x000055b66f303179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  if n < 10 {\n    return n % 2 == 0 ? 0 : n\n  }\n  return (n\
    \ % 10 % 2 == 0 ? 0 : n % 10) * digits(n: n / 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp8a3fjs5w/tmp8a3fjs5w.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7943a03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b79436fab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b79436fa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b79436f97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8a3fjs5w                        0x000055e3459bf2c3 <unavailable> + 4803

    5    libc.so.6                          0x00002b7943bef460 __libc_start_main +
    245

    6    tmp8a3fjs5w                        0x000055e3459beef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var product = 1\n    while result !=\
    \ 0 {\n        result = n % 10\n        if result % 2 != 0 {\n            product\
    \ *= result\n        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpj_y2m812.swift:19:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var value = n\n    while value > 0 {\n\
    \        let digit = value % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        value /= 10\n    }\n    return product\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp_nupdzfe/tmp_nupdzfe.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acdf73cdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acdf70c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acdf70c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acdf70c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nupdzfe                        0x000055cea0948539 <unavailable> + 5433

    5    libc.so.6                          0x00002acdf75b9460 __libc_start_main +
    245

    6    tmp_nupdzfe                        0x000055cea0947ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var num = n\n    while num > 0 {\n \
    \       let lastDigit = num % 10\n        if lastDigit % 2 != 0 {\n          \
    \  product *= lastDigit\n        }\n        num /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpon8oho8p/tmpon8oho8p.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2460b41c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2460838b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2460838988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b24608377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpon8oho8p                        0x0000555b71c1b539 <unavailable> + 5433

    5    libc.so.6                          0x00002b2460d2d460 __libc_start_main +
    245

    6    tmpon8oho8p                        0x0000555b71c1aef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwk93905o/tmpwk93905o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b016ac9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b016a996b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b016a996988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b016a9957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwk93905o                        0x000055cdbb61d1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b016ae8b460 __libc_start_main +
    245

    6    tmpwk93905o                        0x000055cdbb61ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwk93905o/tmpwk93905o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b016ac9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b016a996b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b016a996988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b016a9957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwk93905o                        0x000055cdbb61d1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b016ae8b460 __libc_start_main +
    245

    6    tmpwk93905o                        0x000055cdbb61ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var oddDigits = 1\n    var n = n\n    while n > 0 {\n   \
    \     let lastDigit = n % 10\n        if lastDigit % 2 != 0 {\n            oddDigits\
    \ *= lastDigit\n        }\n        n /= 10\n    }\n    return oddDigits\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpk1pjaboe/tmpk1pjaboe.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bd8d5dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bd8a54b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bd8a54988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bd8a537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk1pjaboe                        0x000055cfc7db3539 <unavailable> + 5433

    5    libc.so.6                          0x00002b3bd8f49460 __libc_start_main +
    245

    6    tmpk1pjaboe                        0x000055cfc7db2ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for char in \"\\(n)\".unicodeScalars\
    \ {\n        let int = Int(String(char))!\n        if int % 2 != 0 {\n       \
    \     product *= int\n        }\n    }\n    return product\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpo351taa8/tmpo351taa8.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad050163c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad04fe5ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad04fe5a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad04fe597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo351taa8                        0x000055c8662fda89 <unavailable> + 6793

    5    libc.so.6                          0x00002ad05034f460 __libc_start_main +
    245

    6    tmpo351taa8                        0x000055c8662fd449 <unavailable> + 5193

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var tempN = n\n    while tempN > 0 {\n\
    \        let digit = tempN % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        tempN /= 10\n    }\n    return product\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp2mhyor_4/tmp2mhyor_4.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6e3e779c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6e3e470b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6e3e470988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6e3e46f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2mhyor_4                        0x000055a5215ad539 <unavailable> + 5433

    5    libc.so.6                          0x00002b6e3e965460 __libc_start_main +
    245

    6    tmp2mhyor_4                        0x000055a5215acef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var total = 1\n    while n > 0 {\n       \
    \ let digit = n % 10\n        if digit % 2 != 0 {\n            total *= digit\n\
    \        }\n        n /= 10\n    }\n    return total\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmphg_yygcg/tmphg_yygcg.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6d21657c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6d2134eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6d2134e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6d2134d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphg_yygcg                        0x000055c107a8e539 <unavailable> + 5433

    5    libc.so.6                          0x00002b6d21843460 __libc_start_main +
    245

    6    tmphg_yygcg                        0x000055c107a8def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ Int(String(digit))! % 2 != 0 {\n            result *= Int(String(digit))!\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpcd4mokjd/tmpcd4mokjd.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b909c1f7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b909beeeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b909beee988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b909beed7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcd4mokjd                        0x0000558c733c27b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b909c3e3460 __libc_start_main +
    245

    6    tmpcd4mokjd                        0x0000558c733c2179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  return n.digits.filter { $0.isOdd }.reduce(1, *)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2rotakac.swift:12:12: error: value of type 'Int' has no member\
    \ 'digits'\n  return n.digits.filter { $0.isOdd }.reduce(1, *)\n         ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwk93905o/tmpwk93905o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b016ac9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b016a996b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b016a996988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b016a9957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwk93905o                        0x000055cdbb61d1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b016ae8b460 __libc_start_main +
    245

    6    tmpwk93905o                        0x000055cdbb61ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var arr = [Int]()\n    var sum = 1\n    var num = n\n   \
    \ while num > 0 {\n        arr.append(num % 10)\n        num /= 10\n    }\n  \
    \  arr = arr.reversed()\n    for item in arr {\n        if item % 2 != 0 {\n \
    \           sum *= item\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpc2jfigwo/tmpc2jfigwo.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9326086c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9325d7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9325d7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9325d7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpc2jfigwo                        0x0000555b00b3b7f9 <unavailable> + 6137

    5    libc.so.6                          0x00002b9326272460 __libc_start_main +
    245

    6    tmpc2jfigwo                        0x0000555b00b3b1b9 <unavailable> + 4537

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var m = n\n    var result = 1\n    while m > 0 {\n      \
    \  let digit = m % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        m /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpnt73p447/tmpnt73p447.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1764a8ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1764785b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1764785988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17647847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnt73p447                        0x000055ae6a17d539 <unavailable> + 5433

    5    libc.so.6                          0x00002b1764c7a460 __libc_start_main +
    245

    6    tmpnt73p447                        0x000055ae6a17cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var num = n\n    var sum = 1\n    while num > 0 {\n     \
    \   let dig = num % 10\n        if dig % 2 != 0 {\n            sum *= dig\n  \
    \      }\n        num /= 10\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpkunhhjyg/tmpkunhhjyg.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad1fa185c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad1f9e7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad1f9e7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad1f9e7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkunhhjyg                        0x0000555760e26539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad1fa371460 __libc_start_main +
    245

    6    tmpkunhhjyg                        0x0000555760e25ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var answer = 1\n    var remainder = n\n    while remainder\
    \ > 0 {\n        let digit = remainder % 10\n        if digit % 2 != 0 {\n   \
    \         answer *= digit\n        }\n        remainder /= 10\n    }\n    return\
    \ answer\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjgpg5bl2/tmpjgpg5bl2.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d0a3c6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d0a0bdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d0a0bd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d0a0bc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjgpg5bl2                        0x000056385910c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7d0a5b2460 __libc_start_main +
    245

    6    tmpjgpg5bl2                        0x000056385910bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var evens = 0\n    var copy = n\n  \
    \  while copy > 0 {\n        let digit = copy % 10\n        if digit == 0 {\n\
    \            evens += 1\n        } else if digit % 2 == 0 {\n            evens\
    \ += 1\n        } else {\n            product *= digit\n        }\n        copy\
    \ /= 10\n    }\n    if evens == 0 {\n        return product\n    } else {\n  \
    \      return 0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp0sr0gg_z/tmp0sr0gg_z.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af045685c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af04537cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af04537c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af04537b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0sr0gg_z                        0x00005649d9d152c3 <unavailable> + 4803

    5    libc.so.6                          0x00002af045871460 __libc_start_main +
    245

    6    tmp0sr0gg_z                        0x00005649d9d14ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    return (n % 10\
    \ % 2 == 1 ? n % 10 : 1) * digits(n: n / 10)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpngk54idu/tmpngk54idu.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84a5cc9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84a59c0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84a59c0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84a59bf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngk54idu                        0x000055f8a64fe248 <unavailable> + 4680

    5    libc.so.6                          0x00002b84a5eb5460 __libc_start_main +
    245

    6    tmpngk54idu                        0x000055f8a64fdef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for i in \"\\(n)\".compactMap({ Int(String($0))\
    \ }) {\n        result *= i % 2 == 0 ? 1 : i\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp6bnc242d/tmp6bnc242d.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b666c8dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b666c5d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b666c5d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b666c5d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6bnc242d                        0x000055694d2d2b79 <unavailable> + 7033

    5    libc.so.6                          0x00002b666cac6460 __libc_start_main +
    245

    6    tmp6bnc242d                        0x000055694d2d2539 <unavailable> + 5433

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  var oddProduct = 1\n  for digit in String(n) {\n    guard let\
    \ value = Int(String(digit)) else { continue }\n    if value % 2 != 0 {\n    \
    \  oddProduct *= value\n    }\n  }\n  return oddProduct\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxnpmkj55/tmpxnpmkj55.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0af380ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0af3505b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0af3505988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0af35047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxnpmkj55                        0x0000559010f9b7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b0af39fa460 __libc_start_main +
    245

    6    tmpxnpmkj55                        0x0000559010f9b179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let stringified = String(n)\n    var product = 1\n    for\
    \ character in stringified {\n        if let value = Int(String(character)) {\n\
    \            if value % 2 != 0 {\n                product *= value\n         \
    \   }\n        }\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwji6ckw2/tmpwji6ckw2.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b71f8ba6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b71f889db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b71f889d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b71f889c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwji6ckw2                        0x0000563919df27b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b71f8d92460 __libc_start_main +
    245

    6    tmpwji6ckw2                        0x0000563919df2179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    var num = n\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 != 0 {\n            result *=\
    \ digit\n        }\n        num /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmprdkzpkrc/tmprdkzpkrc.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7560a27c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b756071eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b756071e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b756071d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprdkzpkrc                        0x000055b62e5a3539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7560c13460 __libc_start_main +
    245

    6    tmprdkzpkrc                        0x000055b62e5a2ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var digits: [Int] = []\n    var product = 1\n    for digit\
    \ in String(n) {\n        if let n = Int(String(digit)) {\n            digits.append(n)\n\
    \        }\n    }\n    for n in digits {\n        if n % 2 != 0 {\n          \
    \  product *= n\n        }\n    }\n    return product == 1 ? 0 : product\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp0txb671p/tmp0txb671p.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae77f7e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae77f4dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae77f4da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae77f4d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0txb671p                        0x0000559ab16c283e <unavailable> + 6206

    5    libc.so.6                          0x00002ae77f9cf460 __libc_start_main +
    245

    6    tmp0txb671p                        0x0000559ab16c23f9 <unavailable> + 5113

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for i in String(n) {\n        if let\
    \ intValue = Int(String(i)) {\n            if intValue % 2 != 0 {\n          \
    \      product *= intValue\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpvp7opepz/tmpvp7opepz.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b202ab32c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b202a829b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b202a829988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b202a8287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvp7opepz                        0x00005599cde537b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b202ad1e460 __libc_start_main +
    245

    6    tmpvp7opepz                        0x00005599cde53179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    let digits = Array(String(n))\n    for\
    \ digit in digits {\n        if let int = Int(String(digit)) {\n            if\
    \ int % 2 != 0 {\n                product *= int\n            }\n        }\n \
    \   }\n    return product\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp_m6hb94c/tmp_m6hb94c.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6342badc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b63428a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b63428a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b63428a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_m6hb94c                        0x000055f05f57b9d9 <unavailable> + 6617

    5    libc.so.6                          0x00002b6342d99460 __libc_start_main +
    245

    6    tmp_m6hb94c                        0x000055f05f57b399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for c in String(n) {\n        if Int(String(c))!\
    \ % 2 != 0 {\n            result *= Int(String(c))!\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp0wova208/tmp0wova208.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69a7305c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69a6ffcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69a6ffc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69a6ffb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0wova208                        0x0000562e534177b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b69a74f1460 __libc_start_main +
    245

    6    tmp0wova208                        0x0000562e53417179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpajijgx9r/tmpajijgx9r.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002accb5b84c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002accb587bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002accb587b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002accb587a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpajijgx9r                        0x000055d44091e1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002accb5d70460 __libc_start_main +
    245

    6    tmpajijgx9r                        0x000055d44091de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var number = n\n    var result = 1\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  result *= digit\n        }\n        number /= 10\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpksvpjmwv/tmpksvpjmwv.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27ff1cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27feec1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27feec1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27feec07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpksvpjmwv                        0x0000555e6129f539 <unavailable> + 5433

    5    libc.so.6                          0x00002b27ff3b6460 __libc_start_main +
    245

    6    tmpksvpjmwv                        0x0000555e6129eef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for digit in String(n) {\n        if\
    \ let value = Int(String(digit)) {\n            if value % 2 != 0 {\n        \
    \        result *= value\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp8zlj7brx/tmp8zlj7brx.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dc9de7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8dc9adeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8dc9ade988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8dc9add7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8zlj7brx                        0x0000557e9254f7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b8dc9fd3460 __libc_start_main +
    245

    6    tmp8zlj7brx                        0x0000557e9254f179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n < 10 {\n        return n % 2 == 0 ? 0 : n\n    }\n \
    \   return (n % 10 % 2 == 0 ? 0 : n % 10) * digits(n: n / 10)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpr87t3h4z/tmpr87t3h4z.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13614b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13611abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13611ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13611aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr87t3h4z                        0x00005599bf6082c3 <unavailable> + 4803

    5    libc.so.6                          0x00002b13616a0460 __libc_start_main +
    245

    6    tmpr87t3h4z                        0x00005599bf607ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let n = abs(n)\n    return (n < 10) ? ((n % 2 == 0) ? 0 :\
    \ n) : ((n % 10) % 2 == 0) ? 0 : digits(n: n / 10) * (n % 10)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpa15djtev/tmpa15djtev.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b978fcedc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b978f9e4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b978f9e4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b978f9e37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa15djtev                        0x000055baeb97e3b3 <unavailable> + 5043

    5    libc.so.6                          0x00002b978fed9460 __libc_start_main +
    245

    6    tmpa15djtev                        0x000055baeb97dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let digits = String(n).compactMap { Int(String($0)) }\n \
    \   return digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpo545hsr6/tmpo545hsr6.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acb72f1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acb72c11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acb72c11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acb72c107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo545hsr6                        0x00005612f8247969 <unavailable> + 6505

    5    libc.so.6                          0x00002acb73106460 __libc_start_main +
    245

    6    tmpo545hsr6                        0x00005612f8247329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var product = 1\n    while n > 0 {\n     \
    \   let d = n % 10\n        if d % 2 == 1 {\n            product *= d\n      \
    \  }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7br2x0qb/tmp7br2x0qb.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad6a37fbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad6a34f2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad6a34f2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad6a34f17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7br2x0qb                        0x000055c38505a539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad6a39e7460 __libc_start_main +
    245

    6    tmp7br2x0qb                        0x000055c385059ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    guard n > 0 else { return 0 }\n    return n % 10 * digits(n:\
    \ n / 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpmikzi42s/tmpmikzi42s.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae15854dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae158244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae158244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae1582437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmikzi42s                        0x0000556966649248 <unavailable> + 4680

    5    libc.so.6                          0x00002ae158739460 __libc_start_main +
    245

    6    tmpmikzi42s                        0x0000556966648ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: 0
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n <= 0 {\n        return 0\n    }\n    let digit = n %\
    \ 10\n    let nextNumber = n / 10\n    let result = digits(n: nextNumber)\n  \
    \  if digit % 2 == 0 {\n        return result\n    }\n    if result == 0 {\n \
    \       return digit\n    }\n    return result * digit\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var working = n\n    while working >\
    \ 0 {\n        let digit = working % 10\n        if digit % 2 != 0 {\n       \
    \     product *= digit\n        }\n        working /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp50grutwb/tmp50grutwb.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3d7ad4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3d77cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3d77cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3d77ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp50grutwb                        0x000055f74813b539 <unavailable> + 5433

    5    libc.so.6                          0x00002ba3d7cc0460 __libc_start_main +
    245

    6    tmp50grutwb                        0x000055f74813aef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let n = n\n    var sum = 1\n    for i in n.digits {\n   \
    \     if i % 2 != 0 {\n            sum *= i\n        }\n    }\n    return sum\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpx4v_jl0l.swift:14:16: error: value of type 'Int' has no member\
    \ 'digits'\n    for i in n.digits {\n             ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  var answer = 1\n  var m = n\n  while m > 0 {\n    let digit\
    \ = m % 10\n    if digit % 2 == 1 {\n      answer *= digit\n    }\n    m /= 10\n\
    \  }\n  return answer\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp601b04gj/tmp601b04gj.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac7a6978c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac7a666fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac7a666f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac7a666e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp601b04gj                        0x00005651587d0539 <unavailable> + 5433

    5    libc.so.6                          0x00002ac7a6b64460 __libc_start_main +
    245

    6    tmp601b04gj                        0x00005651587cfef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let arr = String(n).compactMap{Int(String($0))}\n    var\
    \ product = 1\n    for i in arr {\n        if i % 2 != 0 {\n            product\
    \ *= i\n        }\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpov2epycn/tmpov2epycn.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13ba29fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13b9f96b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13b9f96988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13b9f957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpov2epycn                        0x0000558acc5779a9 <unavailable> + 6569

    5    libc.so.6                          0x00002b13ba48b460 __libc_start_main +
    245

    6    tmpov2epycn                        0x0000558acc577369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for c in String(n) {\n        if let\
    \ int = Int(String(c)) {\n            if int % 2 != 0 {\n                product\
    \ *= int\n            }\n        }\n    }\n    return product\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpr8jz14so/tmpr8jz14so.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b01526bfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b01523b6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b01523b6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b01523b57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr8jz14so                        0x000055bf2fbf37b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b01528ab460 __libc_start_main +
    245

    6    tmpr8jz14so                        0x000055bf2fbf3179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let nStr = String(n)\n    let nStrArr = Array(nStr)\n   \
    \ var sum: Int = 1\n    for i in nStrArr {\n        if i.isOddNumber() {\n   \
    \         sum *= Int(String(i))!\n        }\n    }\n    return sum\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpc0iih1fb.swift:16:14: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isOddNumber'\n        if i.isOddNumber() {\n   \
    \        ~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  var output = 1\n  var x = n\n  while x > 0 {\n    let digit\
    \ = x % 10\n    if digit % 2 != 0 {\n      output *= digit\n    }\n    x /= 10\n\
    \  }\n  return output\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp8s0faaoy/tmp8s0faaoy.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3c32dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3c2fd6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3c2fd6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3c2fd57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8s0faaoy                        0x000055bbc374f539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad3c34cb460 __libc_start_main +
    245

    6    tmp8s0faaoy                        0x000055bbc374eef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  var odd: Int = 1\n  var num = n\n  while num > 0 {\n    let\
    \ digit = num % 10\n    if digit % 2 != 0 {\n      odd *= digit\n    }\n    num\
    \ /= 10\n  }\n  return odd\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpnhuecdw9/tmpnhuecdw9.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b4692dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b46624b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b46624988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b466237b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnhuecdw9                        0x000055d076ffc539 <unavailable> + 5433

    5    libc.so.6                          0x00002b2b46b19460 __libc_start_main +
    245

    6    tmpnhuecdw9                        0x000055d076ffbef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var sum = 1\n    for char in String(n) {\n        if let\
    \ number = Int(String(char)) {\n            if number % 2 != 0 {\n           \
    \     sum *= number\n            }\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpkzzqe6rf/tmpkzzqe6rf.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b24e9212c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b24e8f09b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b24e8f09988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b24e8f087b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkzzqe6rf                        0x0000565333c2a7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b24e93fe460 __libc_start_main +
    245

    6    tmpkzzqe6rf                        0x0000565333c2a179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n < 10 {\n        return n\n    }\n    var number = n\n\
    \    var sum = 1\n    while number > 0 {\n        let mod = number % 10\n    \
    \    if mod % 2 != 0 {\n            sum *= mod\n        }\n        number /= 10\n\
    \    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4gy79cym/tmp4gy79cym.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab035c6dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab035964b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab035964988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0359637b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4gy79cym                        0x00005621b9d10539 <unavailable> + 5433

    5    libc.so.6                          0x00002ab035e59460 __libc_start_main +
    245

    6    tmp4gy79cym                        0x00005621b9d0fef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var num = n\n    while num > 0 {\n \
    \       let digit = num % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        num /= 10\n    }\n    return product\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp9l7ywjmp/tmp9l7ywjmp.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade4ea86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade4e77db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade4e77d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade4e77c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9l7ywjmp                        0x00005595a3f9a539 <unavailable> + 5433

    5    libc.so.6                          0x00002ade4ec72460 __libc_start_main +
    245

    6    tmp9l7ywjmp                        0x00005595a3f99ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpldbekn4g/tmpldbekn4g.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b55e5a5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b55e5752b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b55e5752988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b55e57517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpldbekn4g                        0x0000556771c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b55e5c47460 __libc_start_main +
    245

    6    tmpldbekn4g                        0x0000556771c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  var num = n\n  var res = 1\n  while num > 0 {\n    let d =\
    \ num % 10\n    if d % 2 != 0 {\n      res *= d\n    }\n    num /= 10\n  }\n \
    \ return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpznikcpsh/tmpznikcpsh.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9731989c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9731680b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9731680988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b973167f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpznikcpsh                        0x000055769509e539 <unavailable> + 5433

    5    libc.so.6                          0x00002b9731b75460 __libc_start_main +
    245

    6    tmpznikcpsh                        0x000055769509def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  return 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp3bz_i65u/tmp3bz_i65u.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4dcc68c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4dc95fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4dc95f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4dc95e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3bz_i65u                        0x000055f4c11651b8 <unavailable> + 4536

    5    libc.so.6                          0x00002ae4dce54460 __libc_start_main +
    245

    6    tmp3bz_i65u                        0x000055f4c1164e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var digitsArray = [Int]()\n    var digitsProduct = 1\n  \
    \  var n = n\n    while n > 0 {\n        digitsArray.append(n % 10)\n        n\
    \ /= 10\n    }\n    for i in digitsArray {\n        if i % 2 != 0 {\n        \
    \    digitsProduct *= i\n        }\n    }\n    return digitsProduct\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpia2b4lg1/tmpia2b4lg1.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2ec3e83c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2ec3b7ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2ec3b7a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2ec3b797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpia2b4lg1                        0x00005590f9e91799 <unavailable> + 6041

    5    libc.so.6                          0x00002b2ec406f460 __libc_start_main +
    245

    6    tmpia2b4lg1                        0x00005590f9e91159 <unavailable> + 4441

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwk93905o/tmpwk93905o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b016ac9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b016a996b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b016a996988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b016a9957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwk93905o                        0x000055cdbb61d1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b016ae8b460 __libc_start_main +
    245

    6    tmpwk93905o                        0x000055cdbb61ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: 0
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let numbers = String(n).map { Int(String($0))! }\n    let\
    \ products = numbers.filter { $0 % 2 != 0 }\n    if products.count == 0 {\n  \
    \      return 0\n    }\n    return products.reduce(1, *)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var temp = n\n    while temp > 0 {\n\
    \        let digit = temp % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        temp /= 10\n    }\n    return product\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp_wvoshwb/tmp_wvoshwb.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc36f36c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc36c2db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc36c2d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc36c2c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_wvoshwb                        0x000056229953b539 <unavailable> + 5433

    5    libc.so.6                          0x00002afc37122460 __libc_start_main +
    245

    6    tmp_wvoshwb                        0x000056229953aef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwk93905o/tmpwk93905o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b016ac9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b016a996b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b016a996988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b016a9957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwk93905o                        0x000055cdbb61d1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b016ae8b460 __libc_start_main +
    245

    6    tmpwk93905o                        0x000055cdbb61ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var total = 1\n    var digits = n.digits.reversed()\n   \
    \ while digits.count > 0 {\n        let digit = digits.removeFirst()\n       \
    \ if digit % 2 == 1 {\n            total *= digit\n        }\n    }\n    return\
    \ total\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: SyntaxError
  stderr: "/tmp/tmpbban5zbh.swift:13:20: error: value of type 'Int' has no member\
    \ 'digits'\n    var digits = n.digits.reversed()\n                 ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var sum = 1\n    for i in n.description {\n        if let\
    \ digit = Int(String(i)) {\n            if digit % 2 != 0 {\n                sum\
    \ *= digit\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmppkpes4wx/tmppkpes4wx.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adc85492c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adc85189b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adc85189988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adc851887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppkpes4wx                        0x0000564598a60789 <unavailable> + 6025

    5    libc.so.6                          0x00002adc8567e460 __libc_start_main +
    245

    6    tmppkpes4wx                        0x0000564598a60149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: 0
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    guard n > 0 else { return 0 }\n    let numberToArray = Array(String(n))\n\
    \    var oddNumbers: [Int] = []\n    for i in numberToArray {\n        if let\
    \ number = Int(String(i)) {\n            if number % 2 != 0 {\n              \
    \  oddNumbers.append(number)\n            }\n        }\n    }\n    if oddNumbers.count\
    \ == 0 {\n        return 0\n    }\n    return oddNumbers.reduce(1, *)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    let lastDigit =\
    \ n % 10\n    if lastDigit % 2 == 0 {\n        return digits(n: n / 10)\n    }\n\
    \    return lastDigit * digits(n: n / 10)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpbht2a0s4/tmpbht2a0s4.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b91e3ca3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b91e399ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b91e399a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b91e39997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbht2a0s4                        0x0000564058711248 <unavailable> + 4680

    5    libc.so.6                          0x00002b91e3e8f460 __libc_start_main +
    245

    6    tmpbht2a0s4                        0x0000564058710ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    guard n > 0 else { return 0 }\n    return n % 10 * digits(n:\
    \ n / 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpmikzi42s/tmpmikzi42s.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae15854dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae158244b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae158244988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae1582437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmikzi42s                        0x0000556966649248 <unavailable> + 4680

    5    libc.so.6                          0x00002ae158739460 __libc_start_main +
    245

    6    tmpmikzi42s                        0x0000556966648ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for digit in String(n) {\n        if\
    \ let number = Int(String(digit)) {\n            if number % 2 != 0 {\n      \
    \          product *= number\n            }\n        }\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpocyx6k72/tmpocyx6k72.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8d99753c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8d9944ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8d9944a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8d994497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpocyx6k72                        0x0000559e6e61c7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b8d9993f460 __libc_start_main +
    245

    6    tmpocyx6k72                        0x0000559e6e61c179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let digits = String(n).compactMap{Int(String($0))}\n    let\
    \ odds = digits.filter{$0 % 2 != 0}\n    return odds.reduce(1, *)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp887fp0_m/tmp887fp0_m.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac48a0d6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac489dcdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac489dcd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac489dcc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp887fp0_m                        0x000056205694c969 <unavailable> + 6505

    5    libc.so.6                          0x00002ac48a2c2460 __libc_start_main +
    245

    6    tmp887fp0_m                        0x000056205694c329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: 0
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let toString = String(n)\n    var product = 1\n    var firstOddFound\
    \ = false\n    for char in toString {\n        if let charInt = Int(String(char))\
    \ {\n            if charInt % 2 != 0 {\n                product *= charInt\n \
    \               firstOddFound = true\n            }\n        }\n    }\n    if\
    \ firstOddFound {\n        return product\n    } else {\n        return 0\n  \
    \  }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let n = n\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpw_rr3xac/tmpw_rr3xac.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9f00f04c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9f00bfbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9f00bfb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9f00bfa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw_rr3xac                        0x00005578d75e3233 <unavailable> + 4659

    5    libc.so.6                          0x00002b9f010f0460 __libc_start_main +
    245

    6    tmpw_rr3xac                        0x00005578d75e2e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    \n    var num = n\n    var product = 1\n    \n    while num\
    \ > 0 {\n        let digit = num % 10\n        if digit % 2 != 0 {\n         \
    \   product *= digit\n        }\n        num /= 10\n    }\n    \n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp_ice7fx1/tmp_ice7fx1.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002baa28305c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002baa27ffcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002baa27ffc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002baa27ffb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_ice7fx1                        0x00005580b86af539 <unavailable> + 5433

    5    libc.so.6                          0x00002baa284f1460 __libc_start_main +
    245

    6    tmp_ice7fx1                        0x00005580b86aeef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var sum = 1\n    var nCopy = n\n    while nCopy > 0 {\n \
    \       let tmp = nCopy % 10\n        if tmp % 2 != 0 {\n            sum *= tmp\n\
    \        }\n        nCopy /= 10\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp3gp6669b/tmp3gp6669b.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4f3f605c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4f3f2fcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4f3f2fc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4f3f2fb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3gp6669b                        0x00005640c71a2539 <unavailable> + 5433

    5    libc.so.6                          0x00002b4f3f7f1460 __libc_start_main +
    245

    6    tmp3gp6669b                        0x00005640c71a1ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    \n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmplxjvv4q_/tmplxjvv4q_.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9563f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9560f0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9560f0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9560ef7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplxjvv4q_                        0x0000560d77f701b8 <unavailable> + 4536

    5    libc.so.6                          0x00002ba9565e5460 __libc_start_main +
    245

    6    tmplxjvv4q_                        0x0000560d77f6fe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4_jpuw53/tmp4_jpuw53.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8f110e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8f10ddab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8f10dda988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8f10dd97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4_jpuw53                        0x000055b558dc5539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8f112cf460 __libc_start_main +
    245

    6    tmp4_jpuw53                        0x000055b558dc4ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    guard n > 0 else { return 0 }\n    return (n % 10 % 2 ==\
    \ 1 ? n % 10 : 1) * digits(n: n / 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpece7ohvj/tmpece7ohvj.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe7693ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe76635b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe76635988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe766347b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpece7ohvj                        0x000055f654a93248 <unavailable> + 4680

    5    libc.so.6                          0x00002abe76b2a460 __libc_start_main +
    245

    6    tmpece7ohvj                        0x000055f654a92ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let chars = String(n).characters\n    let ints = chars.flatMap\
    \ { Int(String($0)) }\n    let odds = ints.filter { $0 % 2 != 0 }\n    return\
    \ odds.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpg1_p10vm.swift:12:27: error: 'characters' is unavailable: Please\
    \ use String directly\n    let chars = String(n).characters\n                \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n\
    /tmp/tmpg1_p10vm.swift:13:22: warning: 'flatMap' is deprecated: Please use compactMap(_:)\
    \ for the case where closure returns an optional value\n    let ints = chars.flatMap\
    \ { Int(String($0)) }\n                     ^\n/tmp/tmpg1_p10vm.swift:13:22: note:\
    \ use 'compactMap(_:)' instead\n    let ints = chars.flatMap { Int(String($0))\
    \ }\n                     ^~~~~~~\n                     compactMap\n"
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n < 10 {\n        return n\n    }\n    let digit = n %\
    \ 10\n    let remaining = n / 10\n    if digit % 2 == 0 {\n        return digits(n:\
    \ remaining)\n    }\n    return digit * digits(n: remaining)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpt8eid7kf/tmpt8eid7kf.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba435dc5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba435abcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba435abc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba435abb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt8eid7kf                        0x00005559d3d4c539 <unavailable> + 5433

    5    libc.so.6                          0x00002ba435fb1460 __libc_start_main +
    245

    6    tmpt8eid7kf                        0x00005559d3d4bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    let array = Array(String(n))\n    for\
    \ number in array {\n        let int = Int(String(number))\n        if int! %\
    \ 2 != 0 {\n            result *= int!\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpha9i0eey/tmpha9i0eey.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba6377fcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba6374f3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba6374f3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba6374f27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpha9i0eey                        0x0000561b858a69d9 <unavailable> + 6617

    5    libc.so.6                          0x00002ba6379e8460 __libc_start_main +
    245

    6    tmpha9i0eey                        0x0000561b858a6399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for character in String(n) {\n     \
    \   if let intValue = Int(String(character)) {\n            if intValue % 2 !=\
    \ 0 {\n                product *= intValue\n            }\n        }\n    }\n\
    \    return product\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpscpuhh4q/tmpscpuhh4q.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab4478aec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab4475a5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab4475a5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab4475a47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpscpuhh4q                        0x000056030d18d7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002ab447a9a460 __libc_start_main +
    245

    6    tmpscpuhh4q                        0x000056030d18d179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n      \
    \  let currentDigit = n % 10\n        if currentDigit % 2 != 0 {\n           \
    \ result *= currentDigit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp_5vz2q_7/tmp_5vz2q_7.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0cf823fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0cf7f36b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0cf7f36988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0cf7f357b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_5vz2q_7                        0x000055b29c400539 <unavailable> + 5433

    5    libc.so.6                          0x00002b0cf842b460 __libc_start_main +
    245

    6    tmp_5vz2q_7                        0x000055b29c3ffef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwk93905o/tmpwk93905o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b016ac9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b016a996b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b016a996988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b016a9957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwk93905o                        0x000055cdbb61d1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b016ae8b460 __libc_start_main +
    245

    6    tmpwk93905o                        0x000055cdbb61ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let str = String(n)\n    let oddChars = str.filter { $0.isOdd\
    \ }\n    return oddChars.reduce(1) { $0 * $1.digitValue! }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpbnh7etzc.swift:13:36: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isOdd'\n    let oddChars = str.filter { $0.isOdd\
    \ }\n                                ~~ ^~~~~\n"
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for d in String(n) {\n        let int_d\
    \ = Int(String(d))!\n        if int_d % 2 != 0 {\n            result *= int_d\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps8oeytda/tmps8oeytda.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b078fc14c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b078f90bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b078f90b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b078f90a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps8oeytda                        0x000055a40f9977b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b078fe00460 __libc_start_main +
    245

    6    tmps8oeytda                        0x000055a40f997179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return String(n).compactMap { Int(String($0)) }.filter {\
    \ $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7hme1zgh/tmp7hme1zgh.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba8136ccc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba8133c3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba8133c3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba8133c27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7hme1zgh                        0x0000557fdcf94929 <unavailable> + 6441

    5    libc.so.6                          0x00002ba8138b8460 __libc_start_main +
    245

    6    tmp7hme1zgh                        0x0000557fdcf942e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return n.digits.filter { $0.isOdd }.reduce(1, *)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpvuuxsu2c.swift:12:14: error: value of type 'Int' has no member\
    \ 'digits'\n    return n.digits.filter { $0.isOdd }.reduce(1, *)\n           ~\
    \ ^~~~~~\n"
  stdout: ''
  timestamp: 1660028610
- exit_code: 0
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n < 10 {\n        return n % 2 == 0 ? 0 : n\n    }\n \
    \   let last = n % 10\n    let rest = digits(n: n / 10)\n    return rest * (last\
    \ % 2 == 0 ? 1 : last)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028612
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let asString = String(n)\n    let asArray = asString.characters.map\
    \ { Int(String($0))! }\n    let odds = asArray.filter { $0 % 2 != 0 }\n    return\
    \ odds.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpflcodm97.swift:13:28: error: 'characters' is unavailable: Please\
    \ use String directly\n    let asArray = asString.characters.map { Int(String($0))!\
    \ }\n                           ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let digits = String(n).compactMap { Int(String($0)) }\n \
    \   return digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpo545hsr6/tmpo545hsr6.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acb72f1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acb72c11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acb72c11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acb72c107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo545hsr6                        0x00005612f8247969 <unavailable> + 6505

    5    libc.so.6                          0x00002acb73106460 __libc_start_main +
    245

    6    tmpo545hsr6                        0x00005612f8247329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var number = n\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp4_jpuw53/tmp4_jpuw53.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8f110e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8f10ddab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8f10dda988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8f10dd97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4_jpuw53                        0x000055b558dc5539 <unavailable> + 5433

    5    libc.so.6                          0x00002b8f112cf460 __libc_start_main +
    245

    6    tmp4_jpuw53                        0x000055b558dc4ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var n = n\n    while n > 0 {\n     \
    \   let digit = n % 10\n        if digit % 2 != 0 {\n            product *= digit\n\
    \        }\n        n /= 10\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp3qzrhu4n/tmp3qzrhu4n.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a1d4fdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a1d1f4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a1d1f4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a1d1f37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3qzrhu4n                        0x00005581b3018539 <unavailable> + 5433

    5    libc.so.6                          0x00002b7a1d6e9460 __libc_start_main +
    245

    6    tmp3qzrhu4n                        0x00005581b3017ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var number = n\n    var result = 1\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  result *= digit\n        }\n        number /= 10\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpksvpjmwv/tmpksvpjmwv.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27ff1cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27feec1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27feec1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27feec07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpksvpjmwv                        0x0000555e6129f539 <unavailable> + 5433

    5    libc.so.6                          0x00002b27ff3b6460 __libc_start_main +
    245

    6    tmpksvpjmwv                        0x0000555e6129eef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let digits = String(n).characters.map { Int(String($0))!\
    \ }\n    let odds = digits.filter { $0 % 2 != 0 }\n    return odds.reduce(1, *)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpnx986ei_.swift:12:28: error: 'characters' is unavailable: Please\
    \ use String directly\n    let digits = String(n).characters.map { Int(String($0))!\
    \ }\n                           ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwk93905o/tmpwk93905o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b016ac9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b016a996b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b016a996988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b016a9957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwk93905o                        0x000055cdbb61d1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b016ae8b460 __libc_start_main +
    245

    6    tmpwk93905o                        0x000055cdbb61ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    for c in String(n) {\n        let value\
    \ = Int(String(c))!\n        if value % 2 != 0 {\n            product *= value\n\
    \        }\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp_ry2m3bo/tmp_ry2m3bo.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2b72c9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae2b6fc0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae2b6fc0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2b6fbf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_ry2m3bo                        0x0000561efad747b9 <unavailable> + 6073

    5    libc.so.6                          0x00002ae2b74b5460 __libc_start_main +
    245

    6    tmp_ry2m3bo                        0x0000561efad74179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var sum = 1\n    while n > 0 {\n        let\
    \ digit = n % 10\n        if digit % 2 != 0 {\n            sum *= digit\n    \
    \    }\n        n /= 10\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpnzhtq_j5/tmpnzhtq_j5.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b901c9b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b901c6abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b901c6ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b901c6aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnzhtq_j5                        0x000055e1c7eb0539 <unavailable> + 5433

    5    libc.so.6                          0x00002b901cba0460 __libc_start_main +
    245

    6    tmpnzhtq_j5                        0x000055e1c7eafef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  if n <= 0 {\n    return 0\n  }\n  let digits = String(n).compactMap\
    \ { Int(String($0)) }\n  return digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpiq17xqk_/tmpiq17xqk_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab1c9857c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab1c954eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab1c954e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab1c954d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiq17xqk_                        0x00005646f25fb969 <unavailable> + 6505

    5    libc.so.6                          0x00002ab1c9a43460 __libc_start_main +
    245

    6    tmpiq17xqk_                        0x00005646f25fb329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var result = 1\n    for d in n.description {\n        if\
    \ let d = Int(String(d)) {\n            if d % 2 != 0 {\n                result\
    \ *= d\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpj_x53bkz/tmpj_x53bkz.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b74a5ea5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b74a5b9cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b74a5b9c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b74a5b9b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj_x53bkz                        0x000055d22c125789 <unavailable> + 6025

    5    libc.so.6                          0x00002b74a6091460 __libc_start_main +
    245

    6    tmpj_x53bkz                        0x000055d22c125149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var number = n\n    while number > 0\
    \ {\n        let x = number % 10\n        if x % 2 != 0 {\n            product\
    \ *= x\n        }\n        number /= 10\n    }\n    return product\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmphvx3oqqb/tmphvx3oqqb.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d59446c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d5913db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d5913d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d5913c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphvx3oqqb                        0x0000561c84eb1539 <unavailable> + 5433

    5    libc.so.6                          0x00002b2d59632460 __libc_start_main +
    245

    6    tmphvx3oqqb                        0x0000561c84eb0ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n <= 0 {\n        return 0\n    }\n    var result = 1\n\
    \    var num = n\n    while num > 0 {\n        let digit = num % 10\n        if\
    \ digit % 2 != 0 {\n            result *= digit\n        }\n        num /= 10\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp_bf6c61s/tmp_bf6c61s.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12975e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12972dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12972da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12972d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_bf6c61s                        0x00005595b8fa1539 <unavailable> + 5433

    5    libc.so.6                          0x00002b12977cf460 __libc_start_main +
    245

    6    tmp_bf6c61s                        0x00005595b8fa0ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var n = n\n    var result = 1\n    while n > 0 {\n      \
    \  let digit = n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpldbekn4g/tmpldbekn4g.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b55e5a5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b55e5752b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b55e5752988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b55e57517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpldbekn4g                        0x0000556771c0c539 <unavailable> + 5433

    5    libc.so.6                          0x00002b55e5c47460 __libc_start_main +
    245

    6    tmpldbekn4g                        0x0000556771c0bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let numberString = String(n)\n    let oddNumbers = numberString.filter\
    \ { $0.wholeNumberValue! % 2 != 0 }\n    return oddNumbers.reduce(1) { $0 * $1.wholeNumberValue!\
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: Exception
  stderr: 'tmp7qqaoogz/tmp7qqaoogz.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad724be4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad7248dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad7248db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad7248da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7qqaoogz                        0x0000560f441287e9 <unavailable> + 6121

    5    libc.so.6                          0x00002ad724dd0460 __libc_start_main +
    245

    6    tmp7qqaoogz                        0x0000560f441281a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var sum = 1\n    var num = n\n    while num > 0 {\n     \
    \   let digit = num % 10\n        if digit % 2 != 0 {\n            sum *= digit\n\
    \        }\n        num /= 10\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpz192zqcb/tmpz192zqcb.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab8d72e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab8d6fdcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab8d6fdc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab8d6fdb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz192zqcb                        0x0000556a4a67b539 <unavailable> + 5433

    5    libc.so.6                          0x00002ab8d74d1460 __libc_start_main +
    245

    6    tmpz192zqcb                        0x0000556a4a67aef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return n.digits.reduce(1) { acc, x in\n        x % 2 == 0\
    \ ? acc : acc * x\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmps7yko932.swift:12:14: error: value of type 'Int' has no member\
    \ 'digits'\n    return n.digits.reduce(1) { acc, x in\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    if n < 0 {\n        fatalError(\"n must be a positive integer\"\
    )\n    }\n    var sum = 1\n    for char in String(n) {\n        let num = Int(String(char))!\n\
    \        if num % 2 != 0 {\n            sum *= num\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: Exception
  stderr: 'tmp19dfhidp/tmp19dfhidp.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0dee7e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0dee4dcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0dee4dc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0dee4db7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp19dfhidp                        0x00005622c854c839 <unavailable> + 6201

    5    libc.so.6                          0x00002b0dee9d1460 __libc_start_main +
    245

    6    tmp19dfhidp                        0x00005622c854c1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var total = 1\n    for c in \"\\(n)\".characters {\n    \
    \    let int = Int(String(c))!\n        if int % 2 != 0 {\n            total *=\
    \ int\n        }\n    }\n    return total\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp3jx4j1mc.swift:13:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for c in \"\\(n)\".characters {\n                 \
    \   ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n\
    \    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var product = 1\n    var rest = n\n    while rest > 0 {\n\
    \        let digit = rest % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        rest /= 10\n    }\n    return product\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp2s8v5sn5/tmp2s8v5sn5.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad27f28cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad27ef83b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad27ef83988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad27ef827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2s8v5sn5                        0x0000558c24dd1539 <unavailable> + 5433

    5    libc.so.6                          0x00002ad27f478460 __libc_start_main +
    245

    6    tmp2s8v5sn5                        0x0000558c24dd0ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var remain = n\n    var digit = 1\n    while remain > 0 {\n\
    \        if remain % 2 != 0 {\n            digit *= remain % 10\n        }\n \
    \       remain /= 10\n    }\n    return digit\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp6fcn6nda/tmp6fcn6nda.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afd3ebd9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afd3e8d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afd3e8d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afd3e8cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6fcn6nda                        0x0000561c361e0539 <unavailable> + 5433

    5    libc.so.6                          0x00002afd3edc5460 __libc_start_main +
    245

    6    tmp6fcn6nda                        0x0000561c361dfef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwk93905o/tmpwk93905o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b016ac9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b016a996b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b016a996988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b016a9957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwk93905o                        0x000055cdbb61d1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b016ae8b460 __libc_start_main +
    245

    6    tmpwk93905o                        0x000055cdbb61ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n  let oddDigits = n.digits.filter { $0 % 2 != 0 }\n  return oddDigits.isEmpty\
    \ ? 0 : oddDigits.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp4ddzrs4h.swift:12:21: error: value of type 'Int' has no member\
    \ 'digits'\n  let oddDigits = n.digits.filter { $0 % 2 != 0 }\n              \
    \    ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwk93905o/tmpwk93905o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b016ac9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b016a996b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b016a996988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b016a9957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwk93905o                        0x000055cdbb61d1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b016ae8b460 __libc_start_main +
    245

    6    tmpwk93905o                        0x000055cdbb61ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpwk93905o/tmpwk93905o.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b016ac9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b016a996b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b016a996988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b016a9957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwk93905o                        0x000055cdbb61d1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b016ae8b460 __libc_start_main +
    245

    6    tmpwk93905o                        0x000055cdbb61ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var num = n\n    var result = 1\n    while num > 0 {\n  \
    \      let digit = num % 10\n        if digit % 2 != 0 {\n            result *=\
    \ digit\n        }\n        num /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpfw2a_v98/tmpfw2a_v98.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b88c1037c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b88c0d2eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b88c0d2e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b88c0d2d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfw2a_v98                        0x0000561ad7112539 <unavailable> + 5433

    5    libc.so.6                          0x00002b88c1223460 __libc_start_main +
    245

    6    tmpfw2a_v98                        0x0000561ad7111ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    let string = String(n)\n    var result = 1\n    for digit\
    \ in string {\n        let intVal = Int(String(digit))!\n        if intVal % 2\
    \ != 0 {\n            result *= intVal\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp7caow5fx/tmp7caow5fx.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea2e032c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea2dd29b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea2dd29988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea2dd287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7caow5fx                        0x0000560fe26257b9 <unavailable> + 6073

    5    libc.so.6                          0x00002aea2e21e460 __libc_start_main +
    245

    6    tmp7caow5fx                        0x0000560fe2625179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1660028612
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    return Array(String(n)).compactMap {\n        Int(String($0))\n\
    \    }.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmprvm183u6/tmprvm183u6.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae8a3ea3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae8a3b9ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae8a3b9a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae8a3b997b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprvm183u6                        0x0000563e1a63f9c9 <unavailable> + 6601

    5    libc.so.6                          0x00002ae8a408f460 __libc_start_main +
    245

    6    tmprvm183u6                        0x0000563e1a63f389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1660028613
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var number = n\n    var product = 1\n    while number > 0\
    \ {\n        let digit = number % 10\n        if digit % 2 != 0 {\n          \
    \  product *= digit\n        }\n        number /= 10\n    }\n    return product\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpfq3sm50l/tmpfq3sm50l.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7f8e9fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7f8b96b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7f8b96988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7f8b957b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfq3sm50l                        0x000055933e5cf539 <unavailable> + 5433

    5    libc.so.6                          0x00002ae7f908b460 __libc_start_main +
    245

    6    tmpfq3sm50l                        0x000055933e5ceef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028610
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// >>> digits(n: 1)\n\
    /// 1\n/// >>> digits(n: 4)\n/// 0\n/// >>> digits(n: 235)\n/// 15\nfunc digits(n:\
    \ Int) -> Int {\n    var m = n\n    var result = 1\n    while m > 0 {\n      \
    \  let digit = m % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        m /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpnt73p447/tmpnt73p447.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1764a8ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1764785b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1764785988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17647847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnt73p447                        0x000055ae6a17d539 <unavailable> + 5433

    5    libc.so.6                          0x00002b1764c7a460 __libc_start_main +
    245

    6    tmpnt73p447                        0x000055ae6a17cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660028611

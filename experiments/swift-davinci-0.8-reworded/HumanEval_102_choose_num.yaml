name: HumanEval_102_choose_num
language: swift
prompt: "\n/// This function takes two positive numbers x and y and returns the\n\
  /// biggest even integer number that is in the range [x, y] inclusive. If \n///\
  \ there's no such number, then the function should return -1.\n/// For example:\n\
  /// >>> choose_num(x: 12, y: 15)\n/// 14\n/// >>> choose_num(x: 13, y: 12)\n///\
  \ -1\nfunc choose_num(x: Int, y: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(choose_num(x: 12, y: 15) == 14)\nassert(choose_num(x:\
  \ 13, y: 12) == -1)\nassert(choose_num(x: 33, y: 12354) == 12354)\nassert(choose_num(x:\
  \ 5234, y: 5233) == -1)\nassert(choose_num(x: 6, y: 29) == 28)\nassert(choose_num(x:\
  \ 27, y: 10) == -1)\nassert(choose_num(x: 7, y: 7) == -1)\nassert(choose_num(x:\
  \ 546, y: 546) == 546)"
completions: ["    if x <= y && x % 2 == 0 {\n        return x\n    } else if x <=\
    \ y && x % 2 != 0 {\n        if y % 2 == 0 {\n            return y\n        }\
    \ else {\n            return -1\n        }\n    } else {\n        return -1\n\
    \    }", "    if x > y {\n        return -1\n    }\n    if x % 2 == 0 {\n    \
    \    return x\n    }\n    if x + 1 == y {\n        return -1\n    }\n    return\
    \ choose_num(x: x + 1, y: y)", "    var num = -1\n    var maxnum = 0\n    if x\
    \ == y {\n        if x % 2 == 0 {\n            num = x\n        }\n    } else\
    \ if x > y {\n        maxnum = x\n        for i in y...x {\n            if i %\
    \ 2 == 0 {\n                num = i\n            }\n        }\n    } else {\n\
    \        maxnum = y\n        for i in x...y {\n            if i % 2 == 0 {\n \
    \               num = i\n            }\n        }\n    }\n    return num", " \
    \   var tmp: Int = -1\n    for i in x...y {\n        if i % 2 == 0 {\n       \
    \     tmp = i\n        }\n    }\n    return tmp", "    if x > y {\n        return\
    \ -1\n    }\n    if x % 2 == 0 {\n        return x\n    }\n    if y % 2 == 0 {\n\
    \        return y\n    }\n    if x == y {\n        return -1\n    }\n    return\
    \ x + 1", "    var num: Int = -1;\n    if x % 2 == 0 {\n        num = x;\n   \
    \ } else {\n        num = x + 1;\n    }\n    if num > y {\n        return -1;\n\
    \    }\n    return num;", "    if y < x {\n        return -1\n    } else if y\
    \ % 2 == 0 {\n        return y\n    } else {\n        return y - 1\n    }", " \
    \   var start = x\n    var max_even_num = -1\n    while start <= y {\n       \
    \ if start % 2 == 0 {\n            max_even_num = start\n        }\n        start\
    \ += 1\n    }\n    return max_even_num", "    /// TODO: add your code here\n \
    \   return -1", '    return -1', "    if (x == y && x % 2 == 0) {\n        return\
    \ x\n    } else if (x == y) {\n        return -1\n    } else if (x < y) {\n  \
    \      if (x % 2 == 0) {\n            return x\n        } else {\n           \
    \ return choose_num(x: x + 1, y: y)\n        }\n    } else {\n        if (y %\
    \ 2 == 0) {\n            return y\n        } else {\n            return choose_num(x:\
    \ x, y: y - 1)\n        }\n    }", "    var big: Int\n    var bigEven: Int = -1\n\
    \    if x > y {\n        big = x\n    } else {\n        big = y\n    }\n    for\
    \ i in x...big {\n        if i % 2 == 0 {\n            bigEven = i\n        }\n\
    \    }\n    return bigEven", "    /// Your code here.\n    var result = 0\n  \
    \  if x%2 == 0 {\n        result = x\n    } else {\n        result = x + 1\n \
    \   }\n    if result < y {\n        return result\n    } else {\n        return\
    \ -1\n    }", "    if y >= x {\n        if x % 2 == 0 {\n            return x\n\
    \        } else {\n            return choose_num(x: x + 1, y: y)\n        }\n\
    \    } else {\n        return -1\n    }", "    // TODO: Complete this function!\n\
    \    return -1", "    if y % 2 == 0 && y >= x {\n        return y\n    } else\
    \ if y % 2 == 1 && x % 2 == 0 && y >= x {\n        return x\n    } else if y %\
    \ 2 == 1 && x % 2 == 1 && y >= x {\n        return -1\n    } else if y < x {\n\
    \        return -1\n    } else {\n        return choose_num(x: x, y: y - 1)\n\
    \    }", "    if x == y {\n        if x % 2 == 0 {\n            return x\n   \
    \     } else {\n            return -1\n        }\n    } else if x > y {\n    \
    \    if x % 2 == 0 {\n            return x\n        } else {\n            return\
    \ x - 1\n        }\n    } else {\n        if y % 2 == 0 {\n            return\
    \ y\n        } else {\n            return y - 1\n        }\n    }", "    if x\
    \ > y {\n        return -1\n    } else if x % 2 == 0 {\n        return x\n   \
    \ } else {\n        return x + 1\n    }", "    if x > y {\n        return -1\n\
    \    } else if (x % 2 == 0) {\n        return x\n    } else {\n        return\
    \ choose_num(x: x + 1, y: y)\n    }", "    if x % 2 == 0 && y % 2 == 0 {\n   \
    \     return y\n    } else if x % 2 == 0 && y % 2 != 0 {\n        return x\n \
    \   } else if x % 2 != 0 && y % 2 == 0 {\n        return y\n    } else {\n   \
    \     return -1\n    }", "    var choose_num = y\n    if y%2 != 0 {\n        choose_num\
    \ -= 1\n    }\n    if y < x {\n        return -1\n    }\n    else {\n        return\
    \ choose_num\n    }", "    var num = 0\n    if x == y && y % 2 == 0 {\n      \
    \  num = x\n    } else if x % 2 == 0 && y % 2 == 0 {\n        num = y\n    } else\
    \ if x % 2 == 0 && y % 2 != 0 {\n        num = x\n    } else if x % 2 != 0 &&\
    \ y % 2 == 0 {\n        num = y\n    } else if x % 2 != 0 && y % 2 != 0 {\n  \
    \      num = -1\n    }\n    return num", "    if (x % 2 == 0) {\n        return\
    \ x\n    } else if (y % 2 == 0) {\n        return y\n    } else {\n        return\
    \ -1\n    }", "    var biggest = -1\n    for num in x...y {\n        if num %\
    \ 2 == 0 {\n            biggest = num\n        }\n    }\n    return biggest",
  "    if x == y {\n        if x % 2 == 0 {\n            return x\n        } else\
    \ {\n            return -1\n        }\n    }\n    let range = x...y\n    for i\
    \ in range {\n        if i % 2 == 0 {\n            return i\n        }\n    }\n\
    \    return -1", "    let l = min(x, y)\n    let h = max(x, y)\n    var result\
    \ = -1\n    for i in l...h {\n        if i % 2 == 0 {\n            result = i\n\
    \        }\n    }\n    return result", "    if x <= y {\n        if x % 2 == 0\
    \ {\n            return x\n        } else {\n            return x + 1\n      \
    \  }\n    } else {\n        return -1\n    }", "\t// Write your code here\n\t\
    if x == y {\n\t\tif x % 2 == 0 {\n\t\t\treturn x\n\t\t} else {\n\t\t\treturn -1\n\
    \t\t}\n\t} else if x > y {\n\t\tif y % 2 == 0 {\n\t\t\treturn y\n\t\t} else {\n\
    \t\t\treturn choose_num(x: x, y: y - 1)\n\t\t}\n\t} else {\n\t\tif x % 2 == 0\
    \ {\n\t\t\treturn x\n\t\t} else {\n\t\t\treturn choose_num(x: x + 1, y: y)\n\t\
    \t}\n\t}", "    let range = x...y\n    let evenNumbers = range.filter{ $0 % 2\
    \ == 0 }\n    let maxEven = evenNumbers.max() ?? -1\n    return maxEven", "  //\
    \ TODO: Write some code to solve this coding challenge\n  return 0", "    var\
    \ num = -1\n    for i in x...y {\n        if i % 2 == 0 {\n            num = i\n\
    \        }\n    }\n    return num", "    if x < 2 || y < 2 {\n        return -1\n\
    \    }\n    if x > y {\n        return -1\n    }\n    if x % 2 == 0 {\n      \
    \  return x\n    }\n    if x % 2 == 1 {\n        return x + 1\n    }\n    return\
    \ -1", '    return -1', "    if y < x {\n        return -1\n    } else if x %\
    \ 2 == 0 {\n        return x\n    } else {\n        return x + 1\n    }", "  \
    \  var ans = -1\n    var start = x\n    if x % 2 == 1 {\n        start += 1\n\
    \    }\n    while start <= y {\n        ans = start\n        start += 2\n    }\n\
    \    return ans", "    let start = x < y ? x : y\n    let end = x < y ? y : x\n\
    \    var max_num = -1\n    for num in start...end {\n        if (num & 1) == 0\
    \ {\n            max_num = num\n        }\n    }\n    return max_num", "    if\
    \ x > y {\n        return -1\n    } else if x % 2 == 0 {\n        return x\n \
    \   } else {\n        return x + 1\n    }", "\tvar result = -1\n\tif x > y {\n\
    \t\treturn result\n\t}\n\tfor i in x...y {\n\t\tif i % 2 == 0 {\n\t\t\tresult\
    \ = i\n\t\t}\n\t}\n\treturn result", "    if x % 2 == 0 && y % 2 == 0 {\n    \
    \    return x > y ? x : y\n    } else if x % 2 == 0 && y % 2 != 0 {\n        return\
    \ x\n    } else if x % 2 != 0 && y % 2 == 0 {\n        return y\n    } else {\n\
    \        return -1\n    }", "    var x: Int = x\n    var y: Int = y\n    if x\
    \ > y {\n        x = y\n        y = x\n    }\n    if x % 2 == 0 {\n        return\
    \ x\n    } else {\n        for i in (x + 1)...y {\n            if i % 2 == 0 {\n\
    \                return i\n            }\n        }\n    }\n    return -1", " \
    \   if x > y {\n        return -1\n    }\n    if x % 2 == 0 {\n        return\
    \ x\n    }\n    if y % 2 == 0 {\n        return y\n    }\n    if x + 1 < y {\n\
    \        return x + 1\n    }\n    return -1", '    return -1', "    if x > y {\n\
    \        return -1\n    }\n    else if x % 2 == 0 {\n        return x\n    }\n\
    \    else {\n        return x + 1\n    }", "    var big = -1\n    for z in x...y\
    \ {\n        if z % 2 == 0 && z > big {\n            big = z\n        }\n    }\n\
    \    return big", "    var biggest_even = -1\n    var x = x\n    var y = y\n \
    \   // swap x and y if x is larger than y\n    if x > y {\n        x = y\n   \
    \     y = x\n    }\n    // iterate from x to y\n    for i in x...y {\n       \
    \ // if the number is even and it's larger than biggest_even, then update biggest_even\n\
    \        if i % 2 == 0 && i > biggest_even {\n            biggest_even = i\n \
    \       }\n    }\n    return biggest_even", "    let low = min(x, y)\n    let\
    \ high = max(x, y)\n    let odd = (low % 2 == 1)\n    if odd {\n        return\
    \ (low + 1)..<high ~= low + 1 ? low + 1 : -1\n    } else {\n        return low..<high\
    \ ~= low ? low : -1\n    }", "    var num = -1\n    var tmp: Int\n    if y > x\
    \ {\n        tmp = x\n    } else {\n        tmp = y\n    }\n    for tmp in x...y\
    \ {\n        if tmp % 2 == 0 {\n            num = tmp\n        }\n    }\n    return\
    \ num", "  if x < 0 || y < 0 {\n    return -1\n  }\n  for i in stride(from: y,\
    \ through: x, by: -1) {\n    if i % 2 == 0 {\n      return i\n    }\n  }\n  return\
    \ -1", "    var low_num = min(x, y)\n    var high_num = max(x, y)\n    if(low_num\
    \ % 2 == 1) {\n        low_num += 1\n    }\n    if(low_num > high_num) {\n   \
    \     return -1\n    }\n    return high_num", "    var r = -1\n    if x % 2 ==\
    \ 0 && x <= y {\n        r = x\n    } else if x + 1 <= y {\n        r = x + 1\n\
    \    }\n    return r", "    let range = Array(x...y)\n    return range.first(where:\
    \ { $0 % 2 == 0 }) ?? -1", "    if x%2 == 0 {\n        if x <= y {\n         \
    \   return x\n        }\n    }\n    return -1", "    var biggest = -1\n    for\
    \ i in x...y {\n        if i % 2 == 0 {\n            biggest = i\n        }\n\
    \    }\n    return biggest", "    if x > y {\n        return -1\n    }\n    if\
    \ x % 2 == 0 {\n        return x\n    }\n    if x + 1 == y {\n        return -1\n\
    \    }\n    return choose_num(x: x + 1, y: y)", "    // FIXME: Write implementation\
    \ here\n    return -1", "    var number = x\n    if number > y{\n        return\
    \ -1\n    }\n    for i in x...y{\n        if i % 2 == 0{\n            number =\
    \ i\n        }\n    }\n    return number", "    let max = x > y ? x : y\n    let\
    \ min = x < y ? x : y\n    for num in min...max {\n        if num % 2 == 0 {\n\
    \            return num\n        }\n    }\n    return -1", "    if x > y {\n \
    \       return -1\n    }\n    for i in stride(from: y, through: x, by: -2) {\n\
    \        return i\n    }\n    return -1", "\t\n\tvar result = -1\n\n\tif x <=\
    \ y {\n\t\tfor i in x...y {\n\t\t\tif i % 2 == 0 {\n\t\t\t\tresult = i\n\t\t\t\
    }\n\t\t}\n\t}\n\n\treturn result", "    var even = -1\n    if x <= y {\n     \
    \   if x % 2 == 0 {\n            even = x\n        } else {\n            even\
    \ = x + 1\n        }\n    }\n    return even", "    if x % 2 == 0 {\n        return\
    \ x\n    } else if x % 2 != 0 && x != y {\n        return choose_num(x: x + 1,\
    \ y: y)\n    } else {\n        return -1\n    }", "    // YOUR CODE GOES HERE\n\
    \    var max: Int = 0;\n    if (x < y) {\n        max = y;\n    } else {\n   \
    \     max = x;\n    }\n    if (max % 2 == 0) {\n        return max;\n    } else\
    \ {\n        return -1;\n    }", "    var result = -1\n    for i in x...y {\n\
    \        if i % 2 == 0 {\n            result = i\n        }\n    }\n    return\
    \ result", '    return x < y ? x + y - 1 : -1', "    if x > y {\n        return\
    \ -1\n    } else if x == y {\n        if x % 2 == 0 {\n            return x\n\
    \        } else {\n            return -1\n        }\n    } else {\n        let\
    \ biggerNum = max(x, y)\n        if biggerNum % 2 == 0 {\n            return biggerNum\n\
    \        } else {\n            return biggerNum - 1\n        }\n    }", '  return
    -1', "    if x % 2 == 0 {\n        return x\n    } else if x + 1 <= y {\n    \
    \    return x + 1\n    } else {\n        return -1\n    }", "    let num = max(x,\
    \ y)\n    if num % 2 == 0 {\n        return num\n    } else {\n        return\
    \ num - 1\n    }", '  return -1', "    let m = min(x, y)\n    let n = max(x, y)\n\
    \    if m % 2 == 0 {\n        return m\n    } else {\n        return m + 1\n \
    \   }", "    var bigger_number = max(x, y)\n    if bigger_number % 2 == 1 {\n\
    \        bigger_number -= 1\n    }\n    if bigger_number < x {\n        return\
    \ -1\n    }\n    return bigger_number", "    if x > y {\n        return -1\n \
    \   }\n    if x % 2 == 0 {\n        return x\n    }\n    else {\n        return\
    \ x + 1\n    }", '    return x%2 == 0 ? x : choose_num(x: x+1, y: y)', "\tif x\
    \ % 2 == 0 {\n\t\tif x <= y {\n\t\t\treturn x\n\t\t}\n\t}\n\tif x % 2 == 1 {\n\
    \t\tif x+1 <= y {\n\t\t\treturn x+1\n\t\t}\n\t}\n\treturn -1", "    var max =\
    \ 0\n    if x % 2 == 0 {\n        max = x\n    } else {\n        max = x + 1\n\
    \    }\n    if y % 2 == 0 {\n        if max < y {\n            max = y\n     \
    \   }\n    } else {\n        if max < y - 1 {\n            max = y - 1\n     \
    \   }\n    }\n    if max < x {\n        return -1\n    }\n    return max", " \
    \   if x > y {\n        return -1\n    } else if x % 2 == 0 {\n        return\
    \ x\n    } else {\n        return x + 1\n    }", "    if x%2 == 0 {\n        if\
    \ x > y {\n            return -1\n        }\n        return x\n    }\n    if x+1\
    \ > y {\n        return -1\n    }\n    return x+1", "    for i in x...y {\n  \
    \      if i % 2 == 0 {\n            return i\n        }\n    }\n    return -1",
  "    // TODO: Please write your code here\n    var num = 0;\n    if (x%2 == 0){\n\
    \        num = x;\n    }\n    else{\n        num = x + 1;\n    }\n    if (num\
    \ > y){\n        return -1;\n    }\n    return num;", "    if x <= y && x % 2\
    \ == 0 {\n        return x\n    } else if y % 2 == 0 {\n        return y\n   \
    \ } else {\n        return -1\n    }", "    // Your code here\n    return -1",
  "    if x > y {\n        return -1\n    }\n    else if x % 2 == 0 {\n        return\
    \ x\n    }\n    else {\n        return x + 1\n    }", "    var i = y\n    while\
    \ i >= x {\n        if i % 2 == 0 {\n            return i\n        }\n       \
    \ i -= 1\n    }\n    return -1", "    if (x > y) {\n        return -1\n    }\n\
    \    let num = x % 2 == 0 ? x : x + 1\n    return num > y ? -1 : num", "\tif (x\
    \ > y) {\n\t\treturn -1\n\t}\n\tif (x % 2 == 0) {\n\t\treturn x\n\t}\n\treturn\
    \ choose_num(x: x + 1, y: y)", "    // To be implemented.\n    return -1", " \
    \   var result = -1\n    if x % 2 == 0 && y % 2 == 0 {\n        if x >= y {\n\
    \            result = x\n        } else {\n            result = y\n        }\n\
    \    } else if x % 2 == 0 && y % 2 != 0 {\n        result = x\n    } else if x\
    \ % 2 != 0 && y % 2 == 0 {\n        result = y\n    }\n    return result", "\t\
    if x > y {\n\t\treturn -1\n\t} else if x % 2 == 0 {\n\t\treturn x\n\t} else {\n\
    \t\treturn x + 1\n\t}", "    if x % 2 == 0 {\n        return x;\n    } else if\
    \ x % 2 == 1 && x + 1 <= y {\n        return x + 1;\n    } else {\n        return\
    \ -1;\n    }", "    if x > y {\n        return -1\n    }\n    if x % 2 == 0 {\n\
    \        return x\n    }\n    if y % 2 == 0 {\n        return y\n    }\n    return\
    \ -1", "    if x > y {\n        return -1\n    } else if x % 2 == 0 {\n      \
    \  return x\n    } else {\n        return x + 1\n    }", "    var result = -1\n\
    \    if (x % 2 == 0) {\n        result = x\n    } else if (x + 1 < y) {\n    \
    \    result = x + 1\n    }\n    return result", "    // TODO: Implement choose_num\
    \ function here\n    var max = 0\n    if x%2 != 0 {\n        x = x + 1\n    }\n\
    \    if y%2 != 0 {\n        y = y - 1\n    }\n    if x > y {\n        return -1\n\
    \    }\n    else {\n        for num in x...y {\n            if num%2 == 0 {\n\
    \                max = num\n            }\n        }\n    }\n    return max",
  "    if x < y {\n        for z in x...y {\n            if z % 2 == 0 {\n       \
    \         return z\n            }\n        }\n    } else {\n        for z in y...x\
    \ {\n            if z % 2 == 0 {\n                return z\n            }\n  \
    \      }\n    }\n    return -1", "    let max = max_num(a: x, b: y)\n    let min\
    \ = min_num(a: x, b: y)\n    for i in (min...max).reversed() {\n        if i %\
    \ 2 == 0 {\n            return i\n        }\n    }\n    return -1", "    var choose\
    \ = 0\n    if x % 2 == 0 {\n        choose = x\n    } else {\n        choose =\
    \ x + 1\n    }\n    if y % 2 == 0 {\n        if choose < y {\n            return\
    \ y\n        } else {\n            return choose\n        }\n    } else {\n  \
    \      if choose < y - 1 {\n            return y - 1\n        } else {\n     \
    \       return -1\n        }\n    }", '  return -1', "  var maxEven = -1\n  var\
    \ bigNum = x\n  var smallNum = y\n  if bigNum < smallNum {\n    bigNum = y\n \
    \   smallNum = x\n  }\n  if smallNum % 2 == 0 {\n    maxEven = smallNum\n  } else\
    \ {\n    smallNum -= 1\n    maxEven = smallNum\n  }\n  return maxEven", "    var\
    \ i = x\n    while i <= y {\n        if i % 2 == 0 {\n            return i\n \
    \       }\n        i += 1\n    }\n    return -1", "    // Your code here.\n  \
    \  return -1", "    var c = x\n    if (x > y) {\n        return -1\n    }\n  \
    \  while (c <= y) {\n        if (c % 2 == 0) {\n            return c\n       \
    \ }\n        c += 1\n    }\n    return -1", "    // write the code here\n    return\
    \ 0", "\tlet max_range = x > y ? x : y\n\tlet min_range = x < y ? x : y\n\t\n\t\
    for num in min_range...max_range {\n\t\tif num % 2 == 0 {\n\t\t\treturn num\n\t\
    \t}\n\t}\n\treturn -1", "    if x == y {\n        if x % 2 == 0 {\n          \
    \  return x\n        } else {\n            return -1\n        }\n    } else if\
    \ x > y {\n        if x % 2 == 0 {\n            return x\n        } else {\n \
    \           return x - 1\n        }\n    } else {\n        if y % 2 == 0 {\n \
    \           return y\n        } else {\n            return y - 1\n        }\n\
    \    }", "    let result = (x+y)/2\n    let remainder = result % 2\n    if remainder\
    \ == 0 {\n        return result\n    }\n    else if result < x {\n        return\
    \ -1\n    }\n    else {\n        return result - 1\n    }", "    // Read tests\
    \ for more information\n    var result = x\n    if x > y {\n        return -1\n\
    \    }\n    if x == y {\n        if x % 2 == 0 {\n            return x\n     \
    \   } else {\n            return -1\n        }\n    }\n    while result <= y {\n\
    \        if result % 2 == 0 {\n            return result\n        }\n        result\
    \ += 1\n    }\n    return -1", "    var z = y\n    while z >= x {\n        if\
    \ z % 2 == 0 {\n            return z\n        }\n        z -= 1\n    }\n    return\
    \ -1", '    return 0', "    var num = -1\n    let diff = x - y\n    if diff <\
    \ 0 {\n        for i in y...x {\n            if i % 2 == 0 {\n               \
    \ num = i\n            }\n        }\n    }\n    return num", '    return -1',
  "    if x > y {\n        return -1\n    } else if x % 2 == 0 {\n        return x\n\
    \    } else {\n        return x + 1\n    }", "    // Make sure x is less than\
    \ y\n    if x > y {\n        return -1\n    }\n    var x = x\n    while x <= y\
    \ {\n        if x % 2 == 0 {\n            return x\n        }\n        x += 1\n\
    \    }\n    return -1", "    if x < y {\n        if x % 2 == 0 {\n           \
    \ return x\n        } else {\n            return x + 1\n        }\n    } else\
    \ if x > y {\n        if y % 2 == 0 {\n            return y\n        } else {\n\
    \            return y + 1\n        }\n    } else {\n        if x % 2 == 0 {\n\
    \            return x\n        } else {\n            return -1\n        }\n  \
    \  }", '    return -1', "  if x <= y {\n    if x % 2 == 0 {\n      return x\n\
    \    } else {\n      return choose_num(x: x + 1, y: y)\n    }\n  } else {\n  \
    \  return -1\n  }", "    // YOUR CODE GOES HERE\n    return 0", "    // Create\
    \ a sequence and store it in a variable.\n    let sequence = x...y\n    // Iterate\
    \ over the sequence and print the number.\n    for number in sequence {\n    \
    \    if number % 2 == 0 {\n            return number\n        }\n    }\n    return\
    \ -1", "    if x > y {\n        return -1\n    }\n    let result = x % 2 == 0\
    \ ? x : x + 1\n    if result > y {\n        return -1\n    }\n    return result",
  "    if x > y {\n        return -1\n    } else if x == y {\n        if x % 2 ==\
    \ 0 {\n            return x\n        } else {\n            return -1\n       \
    \ }\n    } else {\n        if x % 2 == 0 {\n            return x\n        } else\
    \ {\n            return choose_num(x: x + 1, y: y)\n        }\n    }", "    //\
    \ TODO\n    return -1", "    var output = 0\n    if x % 2 == 0 {\n        output\
    \ = x\n    } else {\n        output = x + 1\n    }\n    if output == y || output\
    \ < y {\n        return output\n    } else {\n        return -1\n    }", "   \
    \ var biggest_even_num = -1\n    if x < y {\n        if y % 2 == 0 {\n       \
    \     biggest_even_num = y\n        } else {\n            biggest_even_num = y\
    \ - 1\n        }\n    } else if x > y {\n        if x % 2 == 0 {\n           \
    \ biggest_even_num = x\n        } else {\n            biggest_even_num = x - 1\n\
    \        }\n    } else {\n        if x % 2 == 0 {\n            biggest_even_num\
    \ = x\n        }\n    }\n    return biggest_even_num", "    if x%2 == 0 {\n  \
    \      return x\n    } else if y%2 == 0 {\n        return y\n    } else {\n  \
    \      return -1\n    }", "    // TODO: Write some code to solve this coding exercise.\n\
    \    return 0", "    if x > y {\n        return -1\n    }\n    let xIsEven = x\
    \ % 2 == 0\n    let yIsEven = y % 2 == 0\n    if xIsEven && yIsEven {\n      \
    \  return y\n    } else if !xIsEven && !yIsEven {\n        return x + 1\n    }\
    \ else {\n        return xIsEven ? x : y\n    }", '    return -1', "    var result\
    \ = x\n    for i in x...y {\n        if i % 2 == 0 && i > result {\n         \
    \   result = i\n        }\n    }\n    if result % 2 == 0 {\n        return result\n\
    \    } else {\n        return -1\n    }", "    for i in stride(from: y, through:\
    \ x, by: -1) {\n        if (i % 2 == 0) {\n            return i\n        }\n \
    \   }\n    return -1", "\t// your code here\n\tvar result: Int = -1\n\tif(x >\
    \ y){\n\t\treturn result\n\t}\n\t\n\tfor n in x...y{\n\t\tif n % 2 == 0{\n\t\t\
    \tresult = n\n\t\t}\n\t}\n\treturn result", "    var result = -1\n    for i in\
    \ x...y {\n        if i % 2 == 0 {\n            result = i\n        }\n    }\n\
    \    return result", "    var chosenNum = -1\n    let range: ClosedRange<Int>\
    \ = x...y\n    for num in range {\n        if num % 2 == 0 {\n            chosenNum\
    \ = num\n        }\n    }\n    return chosenNum", "  if y < x {\n    return -1\n\
    \  } else if y % 2 == 0 {\n    return y\n  } else {\n    return y - 1\n  }", " \
    \   if (x <= y) {\n        if ((x % 2) == 0) {\n            return x\n       \
    \ } else {\n            return choose_num(x: x + 1, y: y)\n        }\n    } else\
    \ {\n        return -1\n    }", "    if x % 2 == 0 && y % 2 == 0 {\n        return\
    \ y\n    } else if x % 2 == 0 && y % 2 != 0 {\n        return x\n    } else if\
    \ x % 2 != 0 && y % 2 == 0 {\n        return y\n    } else {\n        return -1\n\
    \    }", "    if x % 2 == 0 && y % 2 == 0 {\n        if x > y {\n            return\
    \ y\n        } else {\n            return x\n        }\n    } else if x % 2 ==\
    \ 0 && y % 2 != 0 {\n        return x\n    } else if x % 2 != 0 && y % 2 == 0\
    \ {\n        return y\n    } else {\n        return -1\n    }", "    var max =\
    \ -1\n    var z = y\n    while z >= x {\n        if z % 2 == 0 {\n           \
    \ max = z\n            break\n        }\n        z -= 1\n    }\n    return max",
  "    // Check for inverse range\n    if (x > y) {\n        return -1\n    }\n  \
    \  // For each element in the range\n    for i in stride(from: x, through: y,\
    \ by: 1) {\n        // Check if it's an even number\n        if (i % 2 == 0) {\n\
    \            return i\n        }\n    }\n    // No even number found\n    return\
    \ -1", "    if (x > y) {\n        return -1\n    }\n    else if (x % 2 == 0) {\n\
    \        return x\n    }\n    else {\n        return choose_num(x: x + 1, y: y)\n\
    \    }", "    let a = [x, y]\n    let b = a.sorted()\n    if b[0] % 2 == 0 {\n\
    \        return b[0]\n    } else if b[0] % 2 != 0 {\n        return b[1]\n   \
    \ } else {\n        return -1\n    }", "    if y % 2 == 0 {\n        return y\n\
    \    } else if x % 2 == 0 {\n        return x\n    } else {\n        return -1\n\
    \    }", '    return -1', "    let distance = abs(x - y)\n    let max = x > y\
    \ ? x : y\n    if distance == 0 {\n        return x % 2 == 0 ? x : -1\n    }\n\
    \    for i in stride(from: distance, to: 0, by: -1) {\n        let num = max -\
    \ i\n        if num % 2 == 0 {\n            return num\n        }\n    }\n   \
    \ return -1", "    var smallest = min(x, y)\n    var biggest = max(x, y)\n   \
    \ if smallest % 2 == 0 {\n        return smallest\n    } else {\n        smallest\
    \ += 1\n    }\n    if smallest > biggest {\n        return -1\n    }\n    return\
    \ smallest", "    if (x%2 == 0 && y%2 == 0) {\n        if (x > y) {\n        \
    \    return x\n        } else {\n            return y\n        }\n    } else if\
    \ (x%2 == 0 && y%2 != 0) {\n        return x\n    } else if (x%2 != 0 && y%2 ==\
    \ 0) {\n        return y\n    } else {\n        return -1\n    }", "    if x %\
    \ 2 == 0 && y % 2 == 0 && x <= y {\n        return y\n    } else if x % 2 == 0\
    \ && y % 2 == 0 && x > y {\n        return x\n    } else if x % 2 == 0 && y %\
    \ 2 != 0 && x <= y {\n        return x\n    } else if x % 2 != 0 && y % 2 == 0\
    \ && x <= y {\n        return y\n    } else if x % 2 != 0 && y % 2 != 0 && x <=\
    \ y {\n        return x + 1\n    } else {\n        return -1\n    }", "    if\
    \ (x >= 0 && y >= 0) {\n        var i = x\n        while i <= y {\n          \
    \  if (i % 2 == 0) {\n                return i\n            }\n            i +=\
    \ 1\n        }\n    }\n    return -1", "    // Check whether x and y are positive\n\
    \    if x < 0 || y < 0 {\n        return -1\n    }\n    // Check whether x is\
    \ bigger than y\n    if x > y {\n        return -1\n    }\n    // Check whether\
    \ x or y is even\n    if x % 2 == 0 {\n        return x\n    } else if y % 2 ==\
    \ 0 {\n        return y\n    } else {\n        return -1\n    }", "  var a = x\n\
    \  var b = y\n  if x>y {\n    a = y\n    b = x\n  }\n  var bigEven = -1\n  for\
    \ i in a...b {\n    if i%2 == 0 {\n      bigEven = i\n    }\n  }\n  return bigEven",
  "    var largestEven = -1\n    for i in x...y {\n        if (i % 2 == 0) {\n   \
    \         largestEven = i\n        }\n    }\n    return largestEven", "    if\
    \ x%2 != 0 {\n        x+=1\n    }\n    if y%2 != 0 {\n        y-=1\n    }\n  \
    \  if x>y {\n        return -1\n    }\n    return y", "    let num = max(x, y)\
    \ % 2 == 0 ? max(x, y) : max(x, y) - 1\n    return num", "    let range = x...y\n\
    \    let evens = range.filter{$0 % 2 == 0}\n    return evens.isEmpty ? -1 : evens.max()!",
  "\tvar biggest_even_int: Int = -1\n\tfor i in x...y {\n\t\tif (i % 2 == 0) {\n\t\
    \t\tbiggest_even_int = i\n\t\t}\n\t}\n\treturn biggest_even_int", "\tvar biggestEven\
    \ = -1\n\tvar i = x\n\twhile i <= y {\n\t\tif i % 2 == 0 {\n\t\t\tbiggestEven\
    \ = i\n\t\t}\n\t\ti += 1\n\t}\n\treturn biggestEven", "    let mid = (x + y) /\
    \ 2\n    if (x % 2 != 0) {\n        if (y % 2 != 0) {\n            return -1\n\
    \        } else {\n            return y\n        }\n    } else {\n        if (y\
    \ % 2 != 0) {\n            return mid\n        } else {\n            return y\n\
    \        }\n    }", "    if x > y {\n        return -1\n    }\n    if x % 2 ==\
    \ 0 {\n        return x\n    }\n    return choose_num(x: x + 1, y: y)", "    var\
    \ current: Int = x\n    while current <= y {\n        if current % 2 == 0 {\n\
    \            return current\n        }\n        current += 1\n    }\n    return\
    \ -1", "    if x % 2 == 0 && y % 2 == 0 && x <= y {\n        return y\n    } else\
    \ if x % 2 == 0 && y % 2 == 0 && x > y {\n        return x\n    } else if x %\
    \ 2 == 0 && y % 2 != 0 && x <= y {\n        return x\n    } else if x % 2 != 0\
    \ && y % 2 == 0 && x <= y {\n        return y\n    } else if x % 2 != 0 && y %\
    \ 2 != 0 && x <= y {\n        return -1\n    } else {\n        return -1\n   \
    \ }", "    // STEP 1 - write code here to make this function pass the test below\n\
    \    return -1", "    let min = x < y ? x : y\n    let max = x > y ? x : y\n \
    \   for i in min...max {\n        if i % 2 == 0 {\n            return i\n    \
    \    }\n    }\n    return -1", "    if x > y {\n        return -1\n    } else\
    \ if x % 2 == 0 {\n        return x\n    } else {\n        return x + 1\n    }",
  "    //YOUR CODE HERE\n    if(x % 2 == 0){\n        return x\n    }\n    else if(y\
    \ % 2 == 0){\n        return y\n    }\n    else{\n        return -1\n    }", " \
    \   // write your code here\n    if x > y {\n        return -1\n    }\n    var\
    \ maxEvenNumber = 0\n    for i in x...y {\n        if i % 2 == 0 {\n         \
    \   maxEvenNumber = i\n        }\n    }\n    if maxEvenNumber == 0 {\n       \
    \ return -1\n    }\n    return maxEvenNumber", "    for i in x...y {\n       \
    \ if i % 2 == 0 {\n            return i\n        }\n    }\n    return -1", " \
    \   var evenNumber = -1\n    for num in x...y {\n        if num % 2 == 0 {\n \
    \           evenNumber = num\n        }\n    }\n    return evenNumber", "    if\
    \ x > y {\n        return -1\n    }\n    if x % 2 == 0 {\n        return x\n \
    \   }\n    if y % 2 == 0 {\n        return y\n    }\n    return -1", "    // TODO:\
    \ Implement this function\n    // This is a stub. Delete this line and add your\
    \ own code below!\n    if x <= y {\n        if y % 2 == 0 {\n            return\
    \ y\n        } else {\n            return y - 1\n        }\n    } else {\n   \
    \     return -1\n    }", "    var result = -1\n    for i in x...y {\n        if\
    \ i % 2 == 0 {\n            result = i\n        }\n    }\n    return result",
  "    if (x > y) {\n        return -1\n    } else if (x == y) {\n        if (x %\
    \ 2 == 0) {\n            return x\n        } else {\n            return -1\n \
    \       }\n    } else {\n        var i = x\n        while (i <= y) {\n       \
    \     if (i % 2 == 0) {\n                return i\n            }\n           \
    \ i += 1\n        }\n        return -1\n    }", "    var max = -1\n    if x %\
    \ 2 == 0 {\n        max = x\n    } else {\n        max = x + 1\n    }\n    for\
    \ i in max...y {\n        if i % 2 == 0 {\n            max = i\n        }\n  \
    \  }\n    return max", "    let z = y - x + 1\n    if z%2 == 0 {\n        return\
    \ y - z/2\n    } else {\n        return -1\n    }", "    if x > y {\n        return\
    \ -1\n    }\n    if x % 2 == 0 {\n        return x\n    }\n    if y % 2 == 0 {\n\
    \        return y\n    }\n    if x % 2 == 1 && y % 2 == 1 {\n        return -1\n\
    \    }\n    return 0", '  // INSERT YOUR CODE HERE', "    var min: Int = min(x,\
    \ y)\n    var max: Int = max(x, y)\n    var result: Int = -1\n    for i in min...max\
    \ {\n        if i % 2 == 0 {\n            result = i\n        }\n    }\n    return\
    \ result", "    if x > y {\n        return -1\n    }\n    else if x % 2 == 0 {\n\
    \        return x\n    }\n    else {\n        return x + 1\n    }", "    var result\
    \ = -1\n    for i in x...y {\n        if i % 2 == 0 {\n            result = i\n\
    \        }\n    }\n    return result", '    return 0', "    var num = x\n    while\
    \ num <= y {\n        if num % 2 == 0 {\n            return num\n        }\n \
    \       num += 1\n    }\n    return -1", "\t// Put your code here.", "    // Fill\
    \ in your code here\n    var kq = -1\n    if x>y || x<0 || y<0{\n        return\
    \ kq\n    }\n    else{\n        for i in x...y{\n            if i%2 == 0{\n  \
    \              kq = i\n            }\n        }\n    }\n    return kq", "    if\
    \ x > y {\n        return -1\n    } else if x % 2 == 0 {\n        return x\n \
    \   } else {\n        return x + 1\n    }", "  var big = 0\n  if x > y {\n   \
    \ big = x\n  } else {\n    big = y\n  }\n  for num in x...big {\n    if num %\
    \ 2 == 0 {\n      return num\n    }\n  }\n  return -1", "\tif x > y {\n\t\treturn\
    \ -1\n\t}\n\tif x % 2 == 0 {\n\t\treturn x\n\t}\n\treturn choose_num(x: x + 1,\
    \ y: y)", "    if y <= x {\n        return -1\n    }\n    if y % 2 == 0 {\n  \
    \      return y\n    }\n    return y - 1", "    var n = x\n    while n <= y {\n\
    \        if n % 2 == 0 {\n            return n\n        }\n        n += 1\n  \
    \  }\n    return -1", "    if (x >= y) {\n        return -1\n    }\n    else if\
    \ (x % 2 == 0) {\n        return x\n    }\n    else {\n        return x + 1\n\
    \    }", "    if x > y {\n        return -1\n    }\n    var biggestEvenNum = x\n\
    \    for i in x + 1...y {\n        if (i % 2 == 0) && (i > biggestEvenNum) {\n\
    \            biggestEvenNum = i\n        }\n    }\n    return biggestEvenNum",
  '    return -1', '    return -1', "    var result = -1\n    if x%2 == 0 {\n    \
    \    result = x\n    } else if x+1 <= y {\n        result = x+1\n    }\n    return\
    \ result", "    var number: Int\n    if (x%2 == 0) {\n        number = x\n   \
    \ } else {\n        number = x+1\n    }\n    while (number<=y) {\n        if (number%2\
    \ == 0) {\n            return number\n        }\n        number = number+1\n \
    \   }\n    return -1", "    if x > y {\n        return -1\n    }\n    else if\
    \ x % 2 == 0 {\n        return x\n    }\n    else {\n        return x+1\n    }",
  "    for i in x...y {\n        if i % 2 == 0 {\n            return i\n        }\n\
    \    }\n    return -1", "\tvar maxEven = -1\n\t\n\tif x > y {\n\t\treturn -1\n\
    \t}\n\t\n\tfor i in x...y {\n\t\tif i % 2 == 0 {\n\t\t\tmaxEven = i\n\t\t}\n\t\
    }\n\t\n\treturn maxEven", "    if x == y {\n        if x % 2 == 0 {\n        \
    \    return x\n        } else {\n            return -1\n        }\n    } else\
    \ if x > y {\n        return -1\n    } else {\n        var i = x\n        while\
    \ (i <= y) {\n            if i % 2 == 0 {\n                return i\n        \
    \    }\n            i += 1\n        }\n        return -1\n    }", "    if x >\
    \ y {\n        return -1\n    }\n    if x % 2 == 0 {\n        return x\n    }\n\
    \    return choose_num(x: x + 1, y: y)", "  var maxEven = -1\n\n  for i in x...y\
    \ {\n    if i % 2 == 0 {\n      maxEven = i\n    }\n  }\n\n  return maxEven",
  "    var num: Int = -1;\n    if(x <= y) {\n        for i in x...y {\n          \
    \  if(i % 2 == 0) {\n                num = i;\n            }\n        }\n    }\n\
    \    return num;", '    // Your code here', "    var chosen_num = -1\n    var\
    \ found = false\n    if x < y {\n        var i = x\n        while (i <= y) {\n\
    \            if (i % 2 == 0) {\n                chosen_num = i\n             \
    \   found = true\n            }\n            i += 1\n        }\n    }\n    if\
    \ !found {\n        chosen_num = -1\n    }\n    return chosen_num"]
stop_tokens:
- "\n}"

language: swift
name: HumanEval_98_count_upper
results:
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for index in 0..<s.count {\n      \
    \  let i = s.index(s.startIndex, offsetBy: index)\n        if index % 2 == 0 &&\
    \ is_upper(s[i]) {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpyt5edop1.swift:14:30: error: cannot find 'is_upper' in scope\n\
    \        if index % 2 == 0 && is_upper(s[i]) {\n                             ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var result = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            result += 1\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp_x4zc7xf/tmp_x4zc7xf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b839a69bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b839a392b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b839a392988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b839a3917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_x4zc7xf                        0x00005595629e15e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b839a887460 __libc_start_main +
    245

    6    tmp_x4zc7xf                        0x00005595629e1269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    s.enumerated().filter { $0.offset % 2 == 0 && (String($0.element)\
    \ == \"A\" || String($0.element) == \"E\" || String($0.element) == \"I\" || String($0.element)\
    \ == \"O\" || String($0.element) == \"U\")}.count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"\
    abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) { (result, current) in\n\
    \        guard current.offset % 2 == 0 else { return result }\n        guard let\
    \ c = current.element.unicodeScalars.first else { return result }\n        return\
    \ result + (c.properties.uppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"\
    abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpp0zgr71x.swift:14:39: error: value of type 'Unicode.Scalar.Properties'\
    \ has no member 'uppercase'\n        return result + (c.properties.uppercase ?\
    \ 1 : 0)\n                         ~~~~~~~~~~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && is_upper(char: char) {\n            count +=\
    \ 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpqkx_cjyg.swift:13:30: error: cannot find 'is_upper' in scope\n\
    \        if index % 2 == 0 && is_upper(char: char) {\n                       \
    \      ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && \"AEIOU\".contains(char) {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = CharacterSet(charactersIn: \"AEIOU\")\n \
    \   var count = 0\n    for (i, char) in s.enumerated() {\n        if i % 2 ==\
    \ 0 && char.unicodeScalars.allSatisfy(vowels.contains) {\n            count +=\
    \ 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpg4anzq8_.swift:11:18: error: cannot find 'CharacterSet' in scope\n\
    \    let vowels = CharacterSet(charactersIn: \"AEIOU\")\n                 ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n  var count = 0\n  for (i, c) in s.enumerated() {\n    if\
    \ (i % 2 == 0) && is_upper(c: c) {\n      count += 1\n    }\n  }\n  return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpspy43m3c.swift:13:24: error: cannot find 'is_upper' in scope\n\
    \    if (i % 2 == 0) && is_upper(c: c) {\n                       ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, c) in s.enumerated() {\n\
    \        if index % 2 == 0 && String(c).uppercased() == String(c) && [\"A\", \"\
    E\", \"I\", \"O\", \"U\"].contains(String(c)) {\n            count += 1\n    \
    \    }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    s.enumerated().filter { $0.0 % 2 == 0 && $0.1.isUppercase\
    \ }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpjsfab_9o/tmpjsfab_9o.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba742c70c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba742967b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba742967988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7429667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjsfab_9o                        0x0000561f6fb0b544 <unavailable> + 5444

    5    libc.so.6                          0x00002ba742e5c460 __libc_start_main +
    245

    6    tmpjsfab_9o                        0x0000561f6fb0b1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpqs6wsre0/tmpqs6wsre0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432b144c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b432ae3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b432ae3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b432ae3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqs6wsre0                        0x000055d49e3a6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b432b330460 __libc_start_main +
    245

    6    tmpqs6wsre0                        0x000055d49e3a5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var counter = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            counter += 1\n\
    \        }\n    }\n    return counter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmps1iv3w7d/tmps1iv3w7d.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555b75fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555b456b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555b456988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555b4557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps1iv3w7d                        0x0000563e094315e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b555b94b460 __libc_start_main +
    245

    6    tmps1iv3w7d                        0x0000563e09431269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = \"AEIOU\"\n    var count = 0\n    for (i,\
    \ c) in s.uppercased().enumerated() {\n        if i % 2 == 0 && vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpqairdnnm/tmpqairdnnm.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba343321c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba343018b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba343018988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3430177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqairdnnm                        0x00005619f3996684 <unavailable> + 5764

    5    libc.so.6                          0x00002ba34350d460 __libc_start_main +
    245

    6    tmpqairdnnm                        0x00005619f3996309 <unavailable> + 4873

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    // let vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n\
    \    var count = 0\n    for (i, char) in s.enumerated() {\n        if i % 2 ==\
    \ 0 {\n            if char == \"A\" || char == \"E\" || char == \"I\" || char\
    \ == \"O\" || char == \"U\" {\n                count += 1\n            }\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, c) in s.enumerated() {\n\
    \        if index % 2 == 0 && is_upper(c: c) {\n            count += 1\n     \
    \   }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpul1a7a8g.swift:13:30: error: cannot find 'is_upper' in scope\n\
    \        if index % 2 == 0 && is_upper(c: c) {\n                             ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().filter({ (index, char) -> Bool in\n\
    \        index % 2 == 0 && char.isUppercase\n    }).count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmph7kow0dc/tmph7kow0dc.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b649bdcdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b649bac4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b649bac4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b649bac37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph7kow0dc                        0x000055d9cd8b0544 <unavailable> + 5444

    5    libc.so.6                          0x00002b649bfb9460 __libc_start_main +
    245

    6    tmph7kow0dc                        0x000055d9cd8b01c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    // your code here\n    return 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpkqv1dl07/tmpkqv1dl07.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad4dff17c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad4dfc0eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad4dfc0e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad4dfc0d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkqv1dl07                        0x0000562b6bcb9264 <unavailable> + 4708

    5    libc.so.6                          0x00002ad4e0103460 __libc_start_main +
    245

    6    tmpkqv1dl07                        0x0000562b6bcb8ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var result = 0\n    for (i, c) in s.enumerated() {\n \
    \       if i % 2 == 0 && is_vowel(c: c) && c.isUppercase {\n            result\
    \ += 1\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpkmpop2f9.swift:13:26: error: cannot find 'is_vowel' in scope\n\
    \        if i % 2 == 0 && is_vowel(c: c) && c.isUppercase {\n                \
    \         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) { $0 + ($1.0 % 2 == 0\
    \ && $1.1.isUppercase ? 1 : 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpb3mjms23/tmpb3mjms23.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac3d07e4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac3d04dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac3d04db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac3d04da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb3mjms23                        0x000056105569d544 <unavailable> + 5444

    5    libc.so.6                          0x00002ac3d09d0460 __libc_start_main +
    245

    6    tmpb3mjms23                        0x000056105569d1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = \"AEIOU\"\n    var count = 0\n    for i in\
    \ 0..<s.count {\n        let index = s.index(s.startIndex, offsetBy: i)\n    \
    \    let char = s[index]\n        if i % 2 == 0 && char >= \"A\" && char <= \"\
    Z\" && vowels.contains(char) {\n            count += 1\n        }\n    }\n   \
    \ return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.characters.enumerated().reduce(0) { $0 + ($1.offset\
    \ % 2 == 0 && \"AEIOU\".characters.contains($1.element) ? 1 : 0) }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmp3s2k759a.swift:11:14: error: 'characters' is unavailable: Please\
    \ use String directly\n    return s.characters.enumerated().reduce(0) { $0 + ($1.offset\
    \ % 2 == 0 && \"AEIOU\".characters.contains($1.element) ? 1 : 0) }\n         \
    \    ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift\
    \ 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmp3s2k759a.swift:11:86:\
    \ error: 'characters' is unavailable: Please use String directly\n    return s.characters.enumerated().reduce(0)\
    \ { $0 + ($1.offset % 2 == 0 && \"AEIOU\".characters.contains($1.element) ? 1\
    \ : 0) }\n                                                                   \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, c) in s.enumerated() {\n\
    \        if (index % 2 == 0) && is_upper(c: c) {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: SyntaxError
  stderr: "/tmp/tmp5lt54ylc.swift:13:32: error: cannot find 'is_upper' in scope\n\
    \        if (index % 2 == 0) && is_upper(c: c) {\n                           \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n  var count = 0\n  let vowels = \"AEIOU\"\n  for (i, c) in\
    \ s.enumerated() {\n    if i % 2 == 0 && vowels.contains(c) {\n      count +=\
    \ 1\n    }\n  }\n  return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpqs6wsre0/tmpqs6wsre0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432b144c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b432ae3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b432ae3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b432ae3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqs6wsre0                        0x000055d49e3a6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b432b330460 __libc_start_main +
    245

    6    tmpqs6wsre0                        0x000055d49e3a5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if i % 2 == 0 && c.isUppercase {\n            count += 1\n        }\n \
    \   }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp2pp7033i/tmp2pp7033i.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81d03ffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81d00f6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81d00f6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81d00f57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2pp7033i                        0x000055d6402295e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b81d05eb460 __libc_start_main +
    245

    6    tmp2pp7033i                        0x000055d640229269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = Set([\"A\", \"E\", \"I\", \"O\", \"U\"])\n\
    \    return s.enumerated().reduce(0) {\n        $0 + (vowels.contains($1.element)\
    \ && $1.offset % 2 == 0 ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmps6ir_gfc.swift:13:34: error: cannot convert value of type 'String.Element'\
    \ (aka 'Character') to expected argument type 'String'\n        $0 + (vowels.contains($1.element)\
    \ && $1.offset % 2 == 0 ? 1 : 0)\n                                 ^\n"
  stdout: ''
  timestamp: 1659978621
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if(index % 2 == 0 && isUpper(c: char)) {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmp1qn9396e.swift:13:30: error: cannot find 'isUpper' in scope\n \
    \       if(index % 2 == 0 && isUpper(c: char)) {\n                           \
    \  ^~~~~~~\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && [\"A\", \"E\", \"I\", \"O\", \"U\"].contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ (index, char) in s.enumerated() {\n        if index % 2 == 0 && vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp03_g65se/tmp03_g65se.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b82b997cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b82b9673b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b82b9673988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b82b96727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp03_g65se                        0x000055e952853624 <unavailable> + 5668

    5    libc.so.6                          0x00002b82b9b68460 __libc_start_main +
    245

    6    tmp03_g65se                        0x000055e9528532a9 <unavailable> + 4777

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpqs6wsre0/tmpqs6wsre0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432b144c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b432ae3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b432ae3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b432ae3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqs6wsre0                        0x000055d49e3a6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b432b330460 __libc_start_main +
    245

    6    tmpqs6wsre0                        0x000055d49e3a5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, v) in s.enumerated() {\n  \
    \      if (i % 2 == 0) && v.isUppercase {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmprdppeffw/tmprdppeffw.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac7a2d24c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac7a2a1bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac7a2a1b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac7a2a1a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprdppeffw                        0x000055b9022e15e4 <unavailable> + 5604

    5    libc.so.6                          0x00002ac7a2f10460 __libc_start_main +
    245

    6    tmprdppeffw                        0x000055b9022e1269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let even_indices = stride(from: 0, to: s.count, by: 2)\n\
    \    let upper_vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    return even_indices.reduce(0)\
    \ {\n        $0 + (upper_vowels.contains(String(s[s.index(s.startIndex, offsetBy:\
    \ $1)])) ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    // Your code here\n    return 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp0x0zqkvb/tmp0x0zqkvb.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6ba08e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6ba05e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6ba05e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6ba05df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0x0zqkvb                        0x00005612c8892264 <unavailable> + 4708

    5    libc.so.6                          0x00002b6ba0ad5460 __libc_start_main +
    245

    6    tmp0x0zqkvb                        0x00005612c8891ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n  var count = 0\n  for i in 0..<s.count {\n    if i % 2 ==\
    \ 0 {\n      if s[i].isUppercase {\n        count += 1\n      }\n    }\n  }\n\
    \  return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpbeztzb7p.swift:14:10: error: 'subscript(_:)' is unavailable: cannot\
    \ subscript String with an Int, use a String.Index instead.\n      if s[i].isUppercase\
    \ {\n         ^~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly\
    \ marked unavailable here\n    public subscript(i: Int) -> Character { get }\n\
    \           ^\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return count_upper_delegate(s: s, closure: { $0.isUppercase\
    \ && $0.isVowel })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: SyntaxError
  stderr: "/tmp/tmp69v47y4i.swift:11:12: error: cannot find 'count_upper_delegate'\
    \ in scope\n    return count_upper_delegate(s: s, closure: { $0.isUppercase &&\
    \ $0.isVowel })\n           ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n  let vowels = Set(\"AEIOU\".characters)\n  return s.characters.enumerated().filter({\
    \ $0.offset % 2 == 0 }).reduce(0) {\n    return $1.element.uppercased() == $1.element\
    \ && vowels.contains($1.element) ? $0 + 1 : $0\n  }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"\
    abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpye5_6e3u.swift:11:28: error: 'characters' is unavailable: Please\
    \ use String directly\n  let vowels = Set(\"AEIOU\".characters)\n            \
    \               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpye5_6e3u.swift:13:36: error: binary operator '==' cannot be applied\
    \ to operands of type 'String' and 'String.Element' (aka 'Character')\n    return\
    \ $1.element.uppercased() == $1.element && vowels.contains($1.element) ? $0 +\
    \ 1 : $0\n           ~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~\n/tmp/tmpye5_6e3u.swift:13:36:\
    \ note: overloads for '==' exist with these partially matching parameter lists:\
    \ (Character, Character), (String, String)\n    return $1.element.uppercased()\
    \ == $1.element && vowels.contains($1.element) ? $0 + 1 : $0\n               \
    \                    ^\n"
  stdout: ''
  timestamp: 1659978605
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var evenCount = 0\n    var oddCount = 0\n    for (index,\
    \ char) in s.enumerated() {\n        if index % 2 == 0 {\n            if \"AEIOU\"\
    .contains(char) {\n                evenCount += 1\n            }\n        } else\
    \ {\n            if \"aeiou\".contains(char) {\n                oddCount += 1\n\
    \            }\n        }\n    }\n    return evenCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"\
    abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var cnt = 0\n    for (i, char) in s.enumerated() {\n \
    \       if i % 2 == 0 && char.isUppercase {\n            cnt += 1\n        }\n\
    \    }\n    return cnt\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp3dwexj4h/tmp3dwexj4h.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9cf385ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9cf3551b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9cf3551988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9cf35507b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dwexj4h                        0x0000559020b275e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b9cf3a46460 __libc_start_main +
    245

    6    tmp3dwexj4h                        0x0000559020b27269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().filter { $0.offset % 2 == 0 && $0.element.isUppercase\
    \ }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp4pj26k9h/tmp4pj26k9h.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b530e5b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b530e2afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b530e2af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b530e2ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4pj26k9h                        0x00005612e09e7544 <unavailable> + 5444

    5    libc.so.6                          0x00002b530e7a4460 __libc_start_main +
    245

    6    tmp4pj26k9h                        0x00005612e09e71c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let uppercaseVowels = \"AEIOU\"\n    var count = 0\n \
    \   for (index, char) in s.enumerated() {\n        if index % 2 == 0 && uppercaseVowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    \n    var result = 0\n    \n    for (index, char) in s.characters.enumerated()\
    \ {\n        if index % 2 == 0 && String(char).uppercased() == String(char) &&\
    \ (char == \"A\" || char == \"E\" || char == \"I\" || char == \"O\" || char ==\
    \ \"U\") {\n            result += 1\n        }\n    }\n    \n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpqedkisl0.swift:14:28: error: 'characters' is unavailable: Please\
    \ use String directly\n    for (index, char) in s.characters.enumerated() {\n\
    \                           ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpqs6wsre0/tmpqs6wsre0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432b144c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b432ae3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b432ae3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b432ae3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqs6wsre0                        0x000055d49e3a6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b432b330460 __libc_start_main +
    245

    6    tmpqs6wsre0                        0x000055d49e3a5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if i % 2 == 0 && c.isUppercase && is_vowel(c: c) {\n            count +=\
    \ 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpzy3656uf.swift:13:43: error: cannot find 'is_vowel' in scope\n\
    \        if i % 2 == 0 && c.isUppercase && is_vowel(c: c) {\n                \
    \                          ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if i % 2 == 0 {\n            switch c {\n            case \"A\", \"E\"\
    , \"I\", \"O\", \"U\":\n                count += 1\n            default:\n   \
    \             continue\n            }\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var numUpper = 0\n    for (i, c) in s.enumerated() {\n\
    \        if i % 2 == 0 && c.isUppercase {\n            numUpper += 1\n       \
    \ }\n    }\n    return numUpper\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpdqqtnhf0/tmpdqqtnhf0.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b118d37fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b118d076b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b118d076988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b118d0757b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdqqtnhf0                        0x0000562cf13dc5e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b118d56b460 __libc_start_main +
    245

    6    tmpdqqtnhf0                        0x0000562cf13dc269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if i % 2 == 0 && c.isUppercase {\n            count += 1\n        }\n \
    \   }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp2pp7033i/tmp2pp7033i.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81d03ffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81d00f6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81d00f6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81d00f57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2pp7033i                        0x000055d6402295e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b81d05eb460 __libc_start_main +
    245

    6    tmp2pp7033i                        0x000055d640229269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) {\n        $0 + (($1.offset\
    \ % 2 == 0) && s[$1.offset].isUppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmp0i6m6zrb.swift:12:39: error: 'subscript(_:)' is unavailable: cannot\
    \ subscript String with an Int, use a String.Index instead.\n        $0 + (($1.offset\
    \ % 2 == 0) && s[$1.offset].isUppercase ? 1 : 0)\n                           \
    \           ^~~~~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly\
    \ marked unavailable here\n    public subscript(i: Int) -> Character { get }\n\
    \           ^\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = Set(\"AEIOU\")\n    for\
    \ (index, char) in s.uppercased().enumerated() {\n        if vowels.contains(char)\
    \ && index % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpg81_lcaf/tmpg81_lcaf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add18690c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add18387b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add18387988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add183867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg81_lcaf                        0x0000556f837e9714 <unavailable> + 5908

    5    libc.so.6                          0x00002add1887c460 __libc_start_main +
    245

    6    tmpg81_lcaf                        0x0000556f837e9399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, c) in s.characters.enumerated()\
    \ {\n        if (i % 2 == 0) && isUpperVowel(c: c) {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpyotuhxrb.swift:12:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for (i, c) in s.characters.enumerated() {\n       \
    \             ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpyotuhxrb.swift:13:28: error: cannot find 'isUpperVowel' in scope\n\
    \        if (i % 2 == 0) && isUpperVowel(c: c) {\n                           ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for i in stride(from: 0, to: s.count,\
    \ by: 2) {\n        if let c = s.uppercased().characters.first(where: { $0 ==\
    \ s[s.index(s.startIndex, offsetBy: i)] }) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: SyntaxError
  stderr: "/tmp/tmppc77x3or.swift:13:35: error: 'characters' is unavailable: Please\
    \ use String directly\n        if let c = s.uppercased().characters.first(where:\
    \ { $0 == s[s.index(s.startIndex, offsetBy: i)] }) {\n                       \
    \           ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n\
    /tmp/tmppc77x3or.swift:13:16: warning: value 'c' was defined but never used; consider\
    \ replacing with boolean test\n        if let c = s.uppercased().characters.first(where:\
    \ { $0 == s[s.index(s.startIndex, offsetBy: i)] }) {\n           ~~~~^~~~\n  \
    \                                                                            \
    \                             != nil\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpqs6wsre0/tmpqs6wsre0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432b144c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b432ae3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b432ae3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b432ae3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqs6wsre0                        0x000055d49e3a6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b432b330460 __libc_start_main +
    245

    6    tmpqs6wsre0                        0x000055d49e3a5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) {\n        ($0 + ($1.offset\
    \ % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 : 0))\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n  return s.enumerated().reduce(0) { $0 + (($1.0 % 2 == 0 &&\
    \ $1.1.isUppercase) ? 1 : 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpwrb2vs4y/tmpwrb2vs4y.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac2d1f32c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac2d1c29b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac2d1c29988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac2d1c287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwrb2vs4y                        0x0000556acb84b544 <unavailable> + 5444

    5    libc.so.6                          0x00002ac2d211e460 __libc_start_main +
    245

    6    tmpwrb2vs4y                        0x0000556acb84b1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if (i % 2) == 0 && c.isUppercase {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpqvxhgjhr/tmpqvxhgjhr.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84a6021c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84a5d18b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84a5d18988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84a5d177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqvxhgjhr                        0x000055aee2c455e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b84a620d460 __libc_start_main +
    245

    6    tmpqvxhgjhr                        0x000055aee2c45269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    \n    var count = 0\n    \n    for (index, letter) in\
    \ s.enumerated() {\n        if index % 2 == 0 && letter.isUppercase {\n      \
    \      count += 1\n        }\n    }\n    \n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpayy9uum5/tmpayy9uum5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5026bf9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b50268f0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b50268f0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b50268ef7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpayy9uum5                        0x0000556983ec85e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b5026de5460 __libc_start_main +
    245

    6    tmpayy9uum5                        0x0000556983ec8269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return count_upper_filter(s)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"\
    abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpgv388yn7.swift:11:12: error: cannot find 'count_upper_filter' in\
    \ scope\n    return count_upper_filter(s)\n           ^~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var total = 0\n    for (i, char) in s.enumerated() {\n\
    \        if i % 2 == 0 && char.isUppercase {\n            total += 1\n       \
    \ }\n    }\n    return total\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpj6l0to19/tmpj6l0to19.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1c48e0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1c45d7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1c45d7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1c45d67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj6l0to19                        0x000056235e1fe5e4 <unavailable> + 5604

    5    libc.so.6                          0x00002ba1c4acc460 __libc_start_main +
    245

    6    tmpj6l0to19                        0x000056235e1fe269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && String(char).uppercased() == String(char) &&\
    \ String(char).lowercased() != String(char) {\n            count += 1\n      \
    \  }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpg4s0ox_n/tmpg4s0ox_n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7e0e0cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7e0b03b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7e0b03988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7e0b027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg4s0ox_n                        0x00005599ae2b96d4 <unavailable> + 5844

    5    libc.so.6                          0x00002ae7e0ff8460 __libc_start_main +
    245

    6    tmpg4s0ox_n                        0x00005599ae2b9359 <unavailable> + 4953

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) { acc, cur in acc + (is_upper_vowel(s:\
    \ cur.element) && cur.offset % 2 == 0 ? 1 : 0) }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"\
    abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpo07iptga.swift:11:58: error: cannot find 'is_upper_vowel' in scope\n\
    \    return s.enumerated().reduce(0) { acc, cur in acc + (is_upper_vowel(s: cur.element)\
    \ && cur.offset % 2 == 0 ? 1 : 0) }\n                                        \
    \                 ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) { $0 + ($1.offset % 2\
    \ == 0 && $1.element.isUppercase ? 1 : 0) }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpespknj_7/tmpespknj_7.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b88bb065c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b88bad5cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b88bad5c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b88bad5b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpespknj_7                        0x000056537967b544 <unavailable> + 5444

    5    libc.so.6                          0x00002b88bb251460 __libc_start_main +
    245

    6    tmpespknj_7                        0x000056537967b1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = \"AEIOU\"\n    for i in\
    \ 0 ..< s.count {\n        let char = s[i]\n        let isUpper = char >= \"A\"\
    \ && char <= \"Z\"\n        let isVowel = vowels.contains(char)\n        if isUpper\
    \ && isVowel && i % 2 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpzykvhjny.swift:14:20: error: 'subscript(_:)' is unavailable: cannot\
    \ subscript String with an Int, use a String.Index instead.\n        let char\
    \ = s[i]\n                   ^~~~\nSwift.String:3:12: note: 'subscript(_:)' has\
    \ been explicitly marked unavailable here\n    public subscript(i: Int) -> Character\
    \ { get }\n           ^\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    \n    var count = 0\n    \n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    \n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpl35augdq/tmpl35augdq.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afbc0ef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afbc0bebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afbc0beb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afbc0bea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl35augdq                        0x00005630cf4cc5e4 <unavailable> + 5604

    5    libc.so.6                          0x00002afbc10e0460 __libc_start_main +
    245

    6    tmpl35augdq                        0x00005630cf4cc269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var s = s\n    s.remove(at: s.startIndex)\n    return\
    \ (s.filter { ($0 == \"A\" || $0 == \"E\" || $0 == \"I\" || $0 == \"O\" || $0\
    \ == \"U\") }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpz_eau7t3/tmpz_eau7t3.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8ee033dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ee0034b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ee0034988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ee00337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz_eau7t3                        0x0000561d0a03a682 <unavailable> + 5762

    5    libc.so.6                          0x00002b8ee0529460 __libc_start_main +
    245

    6    tmpz_eau7t3                        0x0000561d0a03a1b9 <unavailable> + 4537

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) { (acc, e) in\n      \
    \  if e.offset % 2 == 0 && e.element.isUppercase {\n            return acc + 1\n\
    \        }\n        return acc\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmppal_tzcz/tmppal_tzcz.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72ce7d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72ce4c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72ce4c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72ce4c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppal_tzcz                        0x0000562b0291c544 <unavailable> + 5444

    5    libc.so.6                          0x00002b72ce9bd460 __libc_start_main +
    245

    6    tmppal_tzcz                        0x0000562b0291c1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, c) in s.enumerated() {\n\
    \        if index % 2 == 0 && isUpper(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: SyntaxError
  stderr: "/tmp/tmp16a6ri6i.swift:13:30: error: cannot find 'isUpper' in scope\n \
    \       if index % 2 == 0 && isUpper(c) {\n                             ^~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if (index % 2) == 0 {\n            if char.isUppercase {\n      \
    \          count += 1\n            }\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpegu9awkx/tmpegu9awkx.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaeb246dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaeb2164b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaeb2164988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaeb21637b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpegu9awkx                        0x000055fa7bc1a5e4 <unavailable> + 5604

    5    libc.so.6                          0x00002aaeb2659460 __libc_start_main +
    245

    6    tmpegu9awkx                        0x000055fa7bc1a269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var vowels = 0\n    var i = 0\n    while i < s.count {\n\
    \        let character = String(s[String.Index(utf16Offset: i, in: s)])\n    \
    \    if (character == \"A\" || character == \"E\" || character == \"I\" || character\
    \ == \"O\" || character == \"U\") && i % 2 == 0 {\n            vowels += 1\n \
    \       }\n        i += 1\n    }\n    return vowels\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"\
    abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    // TODO: Implement function\n    return 0\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp93_1r8g3/tmp93_1r8g3.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b058906bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0588d62b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0588d62988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0588d617b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp93_1r8g3                        0x000056253dce7264 <unavailable> + 4708

    5    libc.so.6                          0x00002b0589257460 __libc_start_main +
    245

    6    tmp93_1r8g3                        0x000056253dce6ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = \"aeiou\"\n    for (index,\
    \ char) in s.enumerated() {\n        if index % 2 == 0 && vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmptppausgd/tmptppausgd.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b010bf86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b010bc7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b010bc7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b010bc7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptppausgd                        0x000055d313c986cb <unavailable> + 5835

    5    libc.so.6                          0x00002b010c172460 __libc_start_main +
    245

    6    tmptppausgd                        0x000055d313c982a9 <unavailable> + 4777

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    var index = 0\n    for ch in s {\n\
    \        if \"AEIOU\".contains(ch) && index % 2 == 0 {\n            count += 1\n\
    \        }\n        index += 1\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = Set(\"AEIOU\")\n    return s.enumerated().reduce(0)\
    \ { result, x in\n        return result + (vowels.contains(x.element) && x.offset\
    \ % 2 == 0 ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().filter { i, char in\n        let\
    \ isUpper = char.isUppercase\n        let isEven = i % 2 == 0\n        return\
    \ isUpper && isEven\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpizhn0f_2/tmpizhn0f_2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab96ac4fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab96a946b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab96a946988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab96a9457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpizhn0f_2                        0x00005574a65dc544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab96ae3b460 __libc_start_main +
    245

    6    tmpizhn0f_2                        0x00005574a65dc1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) { (acc, pair) in\n   \
    \     return pair.offset % 2 == 0 && pair.element.isUppercase ? acc + 1 : acc\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpdn1_b8z1/tmpdn1_b8z1.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae23ccc6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae23c9bdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae23c9bd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae23c9bc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdn1_b8z1                        0x000055e111484544 <unavailable> + 5444

    5    libc.so.6                          0x00002ae23ceb2460 __libc_start_main +
    245

    6    tmpdn1_b8z1                        0x000055e1114841c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpqs6wsre0/tmpqs6wsre0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432b144c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b432ae3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b432ae3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b432ae3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqs6wsre0                        0x000055d49e3a6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b432b330460 __libc_start_main +
    245

    6    tmpqs6wsre0                        0x000055d49e3a5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = \"AEIOU\"\n    var count = 0\n    for (i,\
    \ c) in s.enumerated() {\n        if (i % 2 == 0) && vowels.contains(c) {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for i in s.indices where i.encodedOffset\
    \ % 2 == 0 {\n        if s[i].isUppercase {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmperd20vxb/tmperd20vxb.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b63b7a50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b63b7747b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b63b7747988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b63b77467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmperd20vxb                        0x000055a9eea00654 <unavailable> + 5716

    5    libc.so.6                          0x00002b63b7c3c460 __libc_start_main +
    245

    6    tmperd20vxb                        0x000055a9eea002d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i,c) in s.enumerated() {\n   \
    \     if i % 2 == 0 && is_upper(c: c) {\n            count += 1\n        }\n \
    \   }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpi5vv7ghc.swift:13:26: error: cannot find 'is_upper' in scope\n\
    \        if i % 2 == 0 && is_upper(c: c) {\n                         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    \n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpoq4dwwb0/tmpoq4dwwb0.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1993f0bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1993c02b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1993c02988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1993c017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoq4dwwb0                        0x0000558643f89264 <unavailable> + 4708

    5    libc.so.6                          0x00002b19940f7460 __libc_start_main +
    245

    6    tmpoq4dwwb0                        0x0000558643f88ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = CharacterSet(charactersIn: \"AEIOU\")\n \
    \   var count = 0\n    for (index, character) in s.enumerated() {\n        if\
    \ index % 2 == 0 && String(character).rangeOfCharacter(from: vowels) != nil {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmp_yfy79o2.swift:11:18: error: cannot find 'CharacterSet' in scope\n\
    \    let vowels = CharacterSet(charactersIn: \"AEIOU\")\n                 ^~~~~~~~~~~~\n\
    /tmp/tmp_yfy79o2.swift:14:48: error: value of type 'String' has no member 'rangeOfCharacter'\n\
    \        if index % 2 == 0 && String(character).rangeOfCharacter(from: vowels)\
    \ != nil {\n                             ~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, value) in s.enumerated()\
    \ {\n        if index % 2 == 0 && value.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpzrnldhvl/tmpzrnldhvl.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9e8c7cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9e8c4c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9e8c4c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9e8c4c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzrnldhvl                        0x000055d55b3f85e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b9e8c9b7460 __libc_start_main +
    245

    6    tmpzrnldhvl                        0x000055d55b3f8269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpqs6wsre0/tmpqs6wsre0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432b144c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b432ae3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b432ae3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b432ae3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqs6wsre0                        0x000055d49e3a6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b432b330460 __libc_start_main +
    245

    6    tmpqs6wsre0                        0x000055d49e3a5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 {\n            if char == \"A\" || char == \"E\"\
    \ || char == \"I\" || char == \"O\" || char == \"U\" {\n                count\
    \ += 1\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n   \
    \ let uppercase = s.uppercased()\n    var count = 0\n    for (i, letter) in uppercase.enumerated()\
    \ {\n        if i % 2 == 0 && vowels.contains(String(letter)) {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpvzzpkvt7/tmpvzzpkvt7.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b989a7a4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b989a49bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b989a49b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b989a49a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvzzpkvt7                        0x00005627561157d4 <unavailable> + 6100

    5    libc.so.6                          0x00002b989a990460 __libc_start_main +
    245

    6    tmpvzzpkvt7                        0x0000562756115459 <unavailable> + 5209

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, c) in s.characters.enumerated()\
    \ {\n        if i % 2 == 0 && is_upper(s: c) {\n            count += 1\n     \
    \   }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpih3dy0pn.swift:12:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for (i, c) in s.characters.enumerated() {\n       \
    \             ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpih3dy0pn.swift:13:26: error: cannot find 'is_upper' in scope\n  \
    \      if i % 2 == 0 && is_upper(s: c) {\n                         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().filter { $0.offset % 2 == 0 && $0.element.isUppercase\
    \ }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp4pj26k9h/tmp4pj26k9h.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b530e5b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b530e2afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b530e2af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b530e2ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4pj26k9h                        0x00005612e09e7544 <unavailable> + 5444

    5    libc.so.6                          0x00002b530e7a4460 __libc_start_main +
    245

    6    tmp4pj26k9h                        0x00005612e09e71c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n  var count = 0\n  for (i, c) in s.enumerated() {\n    if\
    \ i % 2 == 0 && \"AEIOU\".contains(c) {\n      count += 1\n    }\n  }\n  return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var upper_count = 0\n    for (index, character) in s.enumerated()\
    \ {\n        if index % 2 == 0 && is_upper(character: character) {\n         \
    \   upper_count += 1\n        }\n    }\n    return upper_count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpyhob20uf.swift:13:30: error: cannot find 'is_upper' in scope\n\
    \        if index % 2 == 0 && is_upper(character: character) {\n             \
    \                ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) {\n        if $1.0 % 2\
    \ == 0 && \"AEIOU\".contains($1.1) {\n            return $0 + 1\n        }\n \
    \       return $0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var sum = 0\n    for (i, c) in s.enumerated() {\n    \
    \    if i % 2 == 0 && c >= \"A\" && c <= \"Z\" {\n            sum += 1\n     \
    \   }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpgmoq07__/tmpgmoq07__.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40b26d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40b23ceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40b23ce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40b23cd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgmoq07__                        0x000055f75c2ca744 <unavailable> + 5956

    5    libc.so.6                          0x00002b40b28c3460 __libc_start_main +
    245

    6    tmpgmoq07__                        0x000055f75c2ca3c9 <unavailable> + 5065

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().filter { (i, c) in\n        c.isUppercase\
    \ && i % 2 == 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp6knghrf5/tmp6knghrf5.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b4df3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b4aeab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b4aea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b4ae97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6knghrf5                        0x000055e94d2d7544 <unavailable> + 5444

    5    libc.so.6                          0x00002af9b4fdf460 __libc_start_main +
    245

    6    tmp6knghrf5                        0x000055e94d2d71c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    // TODO: Implement me!\n    return 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpb91j8tta/tmpb91j8tta.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7e41e32c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7e41b29b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7e41b29988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7e41b287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb91j8tta                        0x0000557ab5e74264 <unavailable> + 4708

    5    libc.so.6                          0x00002b7e4201e460 __libc_start_main +
    245

    6    tmpb91j8tta                        0x0000557ab5e73ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    s.enumerated().reduce(0) { (a, e) in\n        a + (e.offset\
    \ % 2 == 0 && e.element.isUppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"\
    abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpn2uem6gq/tmpn2uem6gq.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7389313c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b738900ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b738900a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73890097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpn2uem6gq                        0x000055a41b286544 <unavailable> + 5444

    5    libc.so.6                          0x00002b73894ff460 __libc_start_main +
    245

    6    tmpn2uem6gq                        0x000055a41b2861c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    let vowels = [\"A\", \"E\", \"\
    I\", \"O\", \"U\"]\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && vowels.contains(String(char)) {\n            vowelCount += 1\n \
    \       }\n    }\n    return vowelCount\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = s.enumerated().filter { $0.0 % 2 == 0 &&\
    \ \"AEIOU\".contains($0.1) }\n    return vowels.count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"\
    abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp3ewztdhz/tmp3ewztdhz.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad87a978c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad87a66fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad87a66f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad87a66e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3ewztdhz                        0x000056456959c5e4 <unavailable> + 5604

    5    libc.so.6                          0x00002ad87ab64460 __libc_start_main +
    245

    6    tmp3ewztdhz                        0x000056456959c269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if i % 2 == 0 {\n            if is_upper_vowel(c: c) {\n              \
    \  count += 1\n            }\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpnw9ckubc.swift:14:16: error: cannot find 'is_upper_vowel' in scope\n\
    \            if is_upper_vowel(c: c) {\n               ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().filter { (offset, character) in\n\
    \        return offset % 2 == 0 && CharacterSet.uppercaseLetters.contains(character.unicodeScalars.first!)\n\
    \    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: SyntaxError
  stderr: "/tmp/tmp8k3l5ikn.swift:12:35: error: cannot find 'CharacterSet' in scope\n\
    \        return offset % 2 == 0 && CharacterSet.uppercaseLetters.contains(character.unicodeScalars.first!)\n\
    \                                  ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var c = 0\n    for (i, l) in s.enumerated() {\n      \
    \  if i % 2 == 0 && is_upper(l) && is_vowel(l) {\n            c += 1\n       \
    \ }\n    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: SyntaxError
  stderr: "/tmp/tmps09ccpgg.swift:13:26: error: cannot find 'is_upper' in scope\n\
    \        if i % 2 == 0 && is_upper(l) && is_vowel(l) {\n                     \
    \    ^~~~~~~~\n/tmp/tmps09ccpgg.swift:13:41: error: cannot find 'is_vowel' in\
    \ scope\n        if i % 2 == 0 && is_upper(l) && is_vowel(l) {\n             \
    \                           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    // TODO: implement me\n    return 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6lzmaoj3/tmp6lzmaoj3.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae4358dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae4355d6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae4355d6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4355d57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6lzmaoj3                        0x000055c58ff99264 <unavailable> + 4708

    5    libc.so.6                          0x00002ae435acb460 __libc_start_main +
    245

    6    tmp6lzmaoj3                        0x000055c58ff98ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n  var counter = 0\n  for (index, letter) in s.enumerated()\
    \ {\n    if isVowel(letter: letter) && index % 2 == 0 {\n      counter += 1\n\
    \    }\n  }\n  return counter\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: SyntaxError
  stderr: "/tmp/tmp3bsoo3fh.swift:13:8: error: cannot find 'isVowel' in scope\n  \
    \  if isVowel(letter: letter) && index % 2 == 0 {\n       ^~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.filter { $0.isUppercase && $0.isVowel }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmparo4e9wf.swift:11:44: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return s.filter { $0.isUppercase &&\
    \ $0.isVowel }.count\n                                        ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    // your code here\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: '/tmp/tmps04vakhr.swift:12:1: error: missing return in global function expected
    to return ''Int''

    }

    ^

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n  var ans = 0\n  for i in 0..<s.count {\n    let char = s[s.index(s.startIndex,\
    \ offsetBy: i)]\n    if i % 2 == 0 && is_upper(char: char) && is_vowel(char: char)\
    \ {\n      ans += 1\n    }\n  }\n  return ans\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmp_1ckwbkl.swift:14:22: error: cannot find 'is_upper' in scope\n\
    \    if i % 2 == 0 && is_upper(char: char) && is_vowel(char: char) {\n       \
    \              ^~~~~~~~\n/tmp/tmp_1ckwbkl.swift:14:46: error: cannot find 'is_vowel'\
    \ in scope\n    if i % 2 == 0 && is_upper(char: char) && is_vowel(char: char)\
    \ {\n                                             ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = \"aeiou\"\n    var count = 0\n    for (index,\
    \ char) in s.enumerated() {\n        if index % 2 == 0 && vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpc2urlssm/tmpc2urlssm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5531bcbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b55318c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b55318c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b55318c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpc2urlssm                        0x00005615341576cb <unavailable> + 5835

    5    libc.so.6                          0x00002b5531db7460 __libc_start_main +
    245

    6    tmpc2urlssm                        0x00005615341572a9 <unavailable> + 4777

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpqs6wsre0/tmpqs6wsre0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432b144c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b432ae3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b432ae3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b432ae3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqs6wsre0                        0x000055d49e3a6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b432b330460 __libc_start_main +
    245

    6    tmpqs6wsre0                        0x000055d49e3a5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = \"AEIOU\"\n    for (index,\
    \ char) in s.uppercased().enumerated() {\n        if index % 2 == 0 && vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp6ijr7lq3/tmp6ijr7lq3.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02a9a5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02a9752b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02a9752988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02a97517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ijr7lq3                        0x00005587bc4d1684 <unavailable> + 5764

    5    libc.so.6                          0x00002b02a9c47460 __libc_start_main +
    245

    6    tmp6ijr7lq3                        0x00005587bc4d1309 <unavailable> + 4873

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if i % 2 == 0 && c.isUppercase {\n            count += 1\n        }\n \
    \   }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp2pp7033i/tmp2pp7033i.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81d03ffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81d00f6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81d00f6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81d00f57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2pp7033i                        0x000055d6402295e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b81d05eb460 __libc_start_main +
    245

    6    tmp2pp7033i                        0x000055d640229269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n  return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpfw16n7yk/tmpfw16n7yk.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b603b724c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b603b41bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b603b41b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b603b41a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfw16n7yk                        0x00005635de014264 <unavailable> + 4708

    5    libc.so.6                          0x00002b603b910460 __libc_start_main +
    245

    6    tmpfw16n7yk                        0x00005635de013ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, char) in s.characters.enumerated()\
    \ {\n        switch char {\n        case \"A\", \"E\", \"I\", \"O\", \"U\":\n\
    \            if i % 2 == 0 {\n                count += 1\n            }\n    \
    \    default:\n            continue\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpju0wq92n.swift:12:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    for (i, char) in s.characters.enumerated() {\n    \
    \                   ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if i % 2 == 0 && c.isUppercase {\n            count += 1\n        }\n \
    \   }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp2pp7033i/tmp2pp7033i.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81d03ffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81d00f6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81d00f6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81d00f57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2pp7033i                        0x000055d6402295e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b81d05eb460 __libc_start_main +
    245

    6    tmp2pp7033i                        0x000055d640229269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 {\n            switch char {\n            case\
    \ \"A\", \"E\", \"I\", \"O\", \"U\":\n                count += 1\n           \
    \ default:\n                break\n            }\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) { (prev, i) in\n     \
    \   prev + (i.element.isUppercaseVowel && i.offset % 2 == 0 ? 1 : 0)\n    }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmphm1t6tjj.swift:11:33: error: missing argument label 'into:' in\
    \ call\n    return s.enumerated().reduce(0) { (prev, i) in\n                 \
    \               ^\n                                 into: \n/tmp/tmphm1t6tjj.swift:11:27:\
    \ error: cannot convert return expression of type '(Int, _) -> Int' to return\
    \ type 'Int'\n    return s.enumerated().reduce(0) { (prev, i) in\n           ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978625
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.indices.reduce(0) { (count, index) in\n     \
    \   let char = s[index]\n        let isUpper = CharacterSet.uppercaseLetters.contains(char.unicodeScalars.first!)\n\
    \        let isEven = index.encodedOffset % 2 == 0\n        return count + (isUpper\
    \ && isEven ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: SyntaxError
  stderr: "/tmp/tmp6wlr1g14.swift:13:23: error: cannot find 'CharacterSet' in scope\n\
    \        let isUpper = CharacterSet.uppercaseLetters.contains(char.unicodeScalars.first!)\n\
    \                      ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    \n    var count = 0\n    \n    for (index, element) in\
    \ s.enumerated() {\n        if index % 2 == 0 && element == \"A\" || element ==\
    \ \"E\" || element == \"I\" || element == \"O\" || element == \"U\" {\n      \
    \      count += 1\n        }\n    }\n    \n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpl7f651e8/tmpl7f651e8.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b01d23cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b01d20c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b01d20c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b01d20c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl7f651e8                        0x0000564b28b427c2 <unavailable> + 6082

    5    libc.so.6                          0x00002b01d25bb460 __libc_start_main +
    245

    6    tmpl7f651e8                        0x0000564b28b422f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n   \
    \ var counter = 0\n    for (index, character) in s.enumerated() {\n        if\
    \ index % 2 == 0 && vowels.contains(String(character)) {\n            counter\
    \ += 1\n        }\n    }\n    return counter\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpqs6wsre0/tmpqs6wsre0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432b144c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b432ae3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b432ae3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b432ae3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqs6wsre0                        0x000055d49e3a6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b432b330460 __libc_start_main +
    245

    6    tmpqs6wsre0                        0x000055d49e3a5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().filter {\n        $0.0 % 2 == 0\
    \ && \"AEIOU\".contains($0.1)\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().filter({ $0.offset % 2 == 0 && $0.element.isUppercase\
    \ }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpjh9pq9xv/tmpjh9pq9xv.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acc64b70c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acc64867b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acc64867988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acc648667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjh9pq9xv                        0x00005598925e3544 <unavailable> + 5444

    5    libc.so.6                          0x00002acc64d5c460 __libc_start_main +
    245

    6    tmpjh9pq9xv                        0x00005598925e31c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 {\n            if (char == \"A\" || char == \"\
    E\" || char == \"I\" || char == \"O\" || char == \"U\") {\n                count\
    \ += 1\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpqs6wsre0/tmpqs6wsre0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432b144c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b432ae3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b432ae3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b432ae3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqs6wsre0                        0x000055d49e3a6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b432b330460 __libc_start_main +
    245

    6    tmpqs6wsre0                        0x000055d49e3a5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    var i = 0\n    for c in s {\n     \
    \   if i % 2 == 0 && is_upper(c: c) {\n            count += 1\n        }\n   \
    \     i += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpbr58zx96.swift:14:26: error: cannot find 'is_upper' in scope\n\
    \        if i % 2 == 0 && is_upper(c: c) {\n                         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = CharacterSet(charactersIn: \"AEIOU\")\n \
    \   var count = 0\n    for (i, c) in s.uppercased().enumerated() {\n        if\
    \ i % 2 == 0 && vowels.contains(c.unicodeScalars.first!) {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpx1ztsxua.swift:11:18: error: cannot find 'CharacterSet' in scope\n\
    \    let vowels = CharacterSet(charactersIn: \"AEIOU\")\n                 ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n  return s.filter{ $0.isUppercase }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpe7rahypf/tmpe7rahypf.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab104acbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab1047c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab1047c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab1047c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe7rahypf                        0x0000563e728a13f4 <unavailable> + 5108

    5    libc.so.6                          0x00002ab104cb7460 __libc_start_main +
    245

    6    tmpe7rahypf                        0x0000563e728a1079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return zip(s.indices, s)\n        .filter{$0.0 % 2 ==\
    \ 0}\n        .filter{$0.1 >= \"A\" && $0.1 <= \"Z\"}\n        .count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpwlvwfqo8.swift:12:20: error: cannot convert value of type 'DefaultIndices<String>.Element'\
    \ (aka 'String.Index') to expected argument type 'Int'\n        .filter{$0.0 %\
    \ 2 == 0}\n                   ^\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpqs6wsre0/tmpqs6wsre0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432b144c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b432ae3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b432ae3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b432ae3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqs6wsre0                        0x000055d49e3a6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b432b330460 __libc_start_main +
    245

    6    tmpqs6wsre0                        0x000055d49e3a5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if i % 2 == 0 {\n            continue\n        }\n        if c == \"A\"\
    \ || c == \"E\" || c == \"I\" || c == \"O\" || c == \"U\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp1pbqob1q/tmp1pbqob1q.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b179f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b176e8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b176e8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b176e77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1pbqob1q                        0x00005564e9aa5674 <unavailable> + 5748

    5    libc.so.6                          0x00002b0b17bdd460 __libc_start_main +
    245

    6    tmp1pbqob1q                        0x00005564e9aa52f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var result = 0\n    let vowels = [\"A\", \"E\", \"I\"\
    , \"O\", \"U\"]\n    for (index, letter) in s.enumerated() {\n        if index\
    \ % 2 == 0 && vowels.contains(String(letter)) {\n            result += 1\n   \
    \     }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp3ewztdhz/tmp3ewztdhz.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad87a978c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad87a66fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad87a66f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad87a66e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3ewztdhz                        0x000056456959c5e4 <unavailable> + 5604

    5    libc.so.6                          0x00002ad87ab64460 __libc_start_main +
    245

    6    tmp3ewztdhz                        0x000056456959c269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n  var count = 0\n  for (i, c) in s.enumerated() {\n    if\
    \ i % 2 == 0 && c.isUppercase {\n      count += 1\n    }\n  }\n  return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpxw90jtua/tmpxw90jtua.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afd1debbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afd1dbb2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afd1dbb2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afd1dbb17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxw90jtua                        0x000055f2da4665e4 <unavailable> + 5604

    5    libc.so.6                          0x00002afd1e0a7460 __libc_start_main +
    245

    6    tmpxw90jtua                        0x000055f2da466269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpqs6wsre0/tmpqs6wsre0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432b144c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b432ae3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b432ae3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b432ae3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqs6wsre0                        0x000055d49e3a6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b432b330460 __libc_start_main +
    245

    6    tmpqs6wsre0                        0x000055d49e3a5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) { (acc, x) in\n      \
    \  if x.offset % 2 == 0 && x.element.isUppercase {\n            return acc + 1\n\
    \        }\n        return acc\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp9x00v2oh/tmp9x00v2oh.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7fb1625c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7fb131cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7fb131c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7fb131b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9x00v2oh                        0x0000560c0bc62544 <unavailable> + 5444

    5    libc.so.6                          0x00002b7fb1811460 __libc_start_main +
    245

    6    tmp9x00v2oh                        0x0000560c0bc621c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var total = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if c.isUppercase && i.isMultiple(of: 2) {\n            total += 1\n   \
    \     }\n    }\n    return total\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmplqwb7a09/tmplqwb7a09.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b98c4aebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98c47e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98c47e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98c47e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplqwb7a09                        0x0000564803580644 <unavailable> + 5700

    5    libc.so.6                          0x00002b98c4cd7460 __libc_start_main +
    245

    6    tmplqwb7a09                        0x00005648035802c9 <unavailable> + 4809

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return Int()\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp37wrnpa6/tmp37wrnpa6.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b64bcfadc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b64bcca4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b64bcca4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b64bcca37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp37wrnpa6                        0x0000556880bca264 <unavailable> + 4708

    5    libc.so.6                          0x00002b64bd199460 __libc_start_main +
    245

    6    tmp37wrnpa6                        0x0000556880bc9ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && is_vowel(s: String(char)) {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpn15uanvk.swift:13:30: error: cannot find 'is_vowel' in scope\n\
    \        if index % 2 == 0 && is_vowel(s: String(char)) {\n                  \
    \           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var n: Int = 0\n    for i in stride(from: 0, to: s.count,\
    \ by: 2) {\n        let c = s[s.index(s.startIndex, offsetBy: i)]\n        if\
    \ c.isUppercase {\n            n += 1\n        }\n    }\n    return n\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpcnrxz_gj/tmpcnrxz_gj.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17d1b84c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17d187bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17d187b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17d187a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcnrxz_gj                        0x000055a5deb38634 <unavailable> + 5684

    5    libc.so.6                          0x00002b17d1d70460 __libc_start_main +
    245

    6    tmpcnrxz_gj                        0x000055a5deb382b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp3ewztdhz/tmp3ewztdhz.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad87a978c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad87a66fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad87a66f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad87a66e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3ewztdhz                        0x000056456959c5e4 <unavailable> + 5604

    5    libc.so.6                          0x00002ad87ab64460 __libc_start_main +
    245

    6    tmp3ewztdhz                        0x000056456959c269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    var up = [\"A\", \"E\", \"I\", \"O\"\
    , \"U\"]\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 && up.contains(String(c))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var result = 0\n    for (i, c) in s.enumerated() {\n \
    \       if i % 2 == 0 && \"AEIOU\".contains(c) {\n            result += 1\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if \"AEIOU\".contains(c) && i % 2 == 0 {\n            count += 1\n    \
    \    }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, char) in s.enumerated() {\n\
    \        if i % 2 == 0 && char.isUppercase {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpg3x70hig/tmpg3x70hig.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b233d84cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b233d543b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b233d543988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b233d5427b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg3x70hig                        0x00005563c65fd5e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b233da38460 __libc_start_main +
    245

    6    tmpg3x70hig                        0x00005563c65fd269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = s.filter {\n        [\"A\", \"E\", \"I\"\
    , \"O\", \"U\"].contains($0)\n    }\n    return vowels.filter { String($0) ==\
    \ String($0).uppercased() }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpgkvez_z3/tmpgkvez_z3.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adbdda29c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adbdd720b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adbdd720988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adbdd71f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgkvez_z3                        0x0000558aef5d1862 <unavailable> + 6242

    5    libc.so.6                          0x00002adbddc15460 __libc_start_main +
    245

    6    tmpgkvez_z3                        0x0000558aef5d1399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().filter { $0.offset % 2 == 0 && $0.element.isUppercase\
    \ }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp4pj26k9h/tmp4pj26k9h.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b530e5b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b530e2afb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b530e2af988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b530e2ae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4pj26k9h                        0x00005612e09e7544 <unavailable> + 5444

    5    libc.so.6                          0x00002b530e7a4460 __libc_start_main +
    245

    6    tmp4pj26k9h                        0x00005612e09e71c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var result = 0\n    for (index, char) in s.enumerated()\
    \ {\n        switch char {\n        case \"A\", \"E\", \"I\", \"O\", \"U\":\n\
    \            if index % 2 == 0 {\n                result += 1\n            }\n\
    \        default:\n            continue\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) {\n        return ( $1.offset\
    \ % 2 == 0 && \"AEIOU\".contains($1.element) ) ? $0 + 1 : $0\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var result = 0\n    for (i, c) in s.enumerated() {\n \
    \       if i % 2 == 0 && c.isUppercase && c.isVowel {\n            result += 1\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpx4illuxo.swift:13:45: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n        if i % 2 == 0 && c.isUppercase\
    \ && c.isVowel {\n                                          ~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n   \
    \ var count = 0\n    for (index, char) in s.enumerated() {\n        if index %\
    \ 2 == 0 && vowels.contains(String(char)) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, letter) in s.enumerated()\
    \ {\n        if index % 2 == 0 && letter.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpo7twyok3/tmpo7twyok3.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab790ab3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7907aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7907aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7907a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo7twyok3                        0x000055ab642485e4 <unavailable> + 5604

    5    libc.so.6                          0x00002ab790c9f460 __libc_start_main +
    245

    6    tmpo7twyok3                        0x000055ab64248269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let upperVowels = s.filter { $0.isUppercase && $0.isVowel\
    \ }\n    return upperVowels.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpyj3u154x.swift:11:55: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    let upperVowels = s.filter { $0.isUppercase\
    \ && $0.isVowel }\n                                                   ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().filter { $0.offset % 2 == 0 && \"\
    AEIOU\".contains($0.element) }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) {\n        $0 + (($1.offset\
    \ % 2 == 0) && \"AEIOU\".contains($1.element)) ? 1 : 0\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmp2xqkdcg5.swift:12:36: error: cannot convert value of type 'Bool'\
    \ to expected argument type 'Int'\n        $0 + (($1.offset % 2 == 0) && \"AEIOU\"\
    .contains($1.element)) ? 1 : 0\n                                   ^\n/tmp/tmp2xqkdcg5.swift:12:12:\
    \ error: type 'Int' cannot be used as a boolean; test for '!= 0' instead\n   \
    \     $0 + (($1.offset % 2 == 0) && \"AEIOU\".contains($1.element)) ? 1 : 0\n\
    \           ^\n        ((                                                    \
    \     ) != 0)\n"
  stdout: ''
  timestamp: 1659978616
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    // TODO: Write some code to solve this challenge!\n  \
    \  var vowels : [Character] = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    var count\
    \ = 0\n    for (index, letter) in s.enumerated() {\n        if index % 2 == 0\
    \ && vowels.contains(letter) {\n            count += 1\n        }\n    }\n   \
    \ return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) { acc, item in\n     \
    \   acc + (item.offset % 2 == 0 && item.element.isUppercase ? 1 : 0)\n    }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp0exe96db/tmp0exe96db.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b42e3b7bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b42e3872b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b42e3872988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b42e38717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0exe96db                        0x0000555e9154d544 <unavailable> + 5444

    5    libc.so.6                          0x00002b42e3d67460 __libc_start_main +
    245

    6    tmp0exe96db                        0x0000555e9154d1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp3ewztdhz/tmp3ewztdhz.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad87a978c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad87a66fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad87a66f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad87a66e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3ewztdhz                        0x000056456959c5e4 <unavailable> + 5604

    5    libc.so.6                          0x00002ad87ab64460 __libc_start_main +
    245

    6    tmp3ewztdhz                        0x000056456959c269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if \"AEIOU\".contains(c) && i % 2 == 0 {\n            count += 1\n    \
    \    }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp3ewztdhz/tmp3ewztdhz.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad87a978c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad87a66fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad87a66f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad87a66e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3ewztdhz                        0x000056456959c5e4 <unavailable> + 5604

    5    libc.so.6                          0x00002ad87ab64460 __libc_start_main +
    245

    6    tmp3ewztdhz                        0x000056456959c269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, value) in s.enumerated()\
    \ {\n        if index % 2 == 0 && value.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpzrnldhvl/tmpzrnldhvl.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9e8c7cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9e8c4c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9e8c4c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9e8c4c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzrnldhvl                        0x000055d55b3f85e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b9e8c9b7460 __libc_start_main +
    245

    6    tmpzrnldhvl                        0x000055d55b3f8269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for i in 0..<s.count {\n        let\
    \ index = s.index(s.startIndex, offsetBy: i)\n        let char = s[index]\n  \
    \      if i % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpq3z2j34v/tmpq3z2j34v.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aca41c70c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aca41967b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aca41967988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aca419667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq3z2j34v                        0x0000555ace25a5b4 <unavailable> + 5556

    5    libc.so.6                          0x00002aca41e5c460 __libc_start_main +
    245

    6    tmpq3z2j34v                        0x0000555ace25a239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, value) in s.enumerated()\
    \ {\n        if index % 2 == 0 && value.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpzrnldhvl/tmpzrnldhvl.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9e8c7cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9e8c4c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9e8c4c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9e8c4c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzrnldhvl                        0x000055d55b3f85e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b9e8c9b7460 __libc_start_main +
    245

    6    tmpzrnldhvl                        0x000055d55b3f8269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().filter({ $0.0 % 2 == 0 }).reduce(0,\
    \ { $1.element == \"A\" || $1.element == \"E\" || $1.element == \"I\" || $1.element\
    \ == \"O\" || $1.element == \"U\" ? $0 + 1 : $0 })\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"\
    abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().filter({$0.offset % 2 == 0}).filter({$0.element.isUppercase}).count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpgsyslsx5/tmpgsyslsx5.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c22c0cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c22903b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c22903988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c229027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgsyslsx5                        0x00005579e5eae604 <unavailable> + 5636

    5    libc.so.6                          0x00002b2c22df8460 __libc_start_main +
    245

    6    tmpgsyslsx5                        0x00005579e5eae289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpqs6wsre0/tmpqs6wsre0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432b144c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b432ae3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b432ae3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b432ae3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqs6wsre0                        0x000055d49e3a6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b432b330460 __libc_start_main +
    245

    6    tmpqs6wsre0                        0x000055d49e3a5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpqs6wsre0/tmpqs6wsre0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432b144c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b432ae3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b432ae3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b432ae3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqs6wsre0                        0x000055d49e3a6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b432b330460 __libc_start_main +
    245

    6    tmpqs6wsre0                        0x000055d49e3a5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var num_upper = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if is_vowel(char: char) && is_upper(char: char) && index % 2 == 0\
    \ {\n            num_upper += 1\n        }\n    }\n    return num_upper\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpik7nsrza.swift:13:12: error: cannot find 'is_vowel' in scope\n\
    \        if is_vowel(char: char) && is_upper(char: char) && index % 2 == 0 {\n\
    \           ^~~~~~~~\n/tmp/tmpik7nsrza.swift:13:36: error: cannot find 'is_upper'\
    \ in scope\n        if is_vowel(char: char) && is_upper(char: char) && index %\
    \ 2 == 0 {\n                                   ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n   \
    \ var count = 0\n    for i in stride(from: 0, to: s.count, by: 2) {\n        let\
    \ index = s.index(s.startIndex, offsetBy: i)\n        let c = String(s[index])\n\
    \        if vowels.contains(c) {\n            count += 1\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978604
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, character) in s.enumerated()\
    \ {\n        if character == \"A\" || character == \"E\" || character == \"I\"\
    \ || character == \"O\" || character == \"U\" {\n            if index % 2 == 0\
    \ {\n                count += 1\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) {\n        ($0 + ($1.offset\
    \ % 2 == 0 && $1.element.isUppercase ? 1 : 0))\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"\
    abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpiiwajoyy/tmpiiwajoyy.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad6db73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad6db431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad6db431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad6db4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiiwajoyy                        0x0000556ae120e544 <unavailable> + 5444

    5    libc.so.6                          0x00002ad6db926460 __libc_start_main +
    245

    6    tmpiiwajoyy                        0x0000556ae120e1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    s.enumerated().reduce(0) {$0 + ($1.offset % 2 == 0 &&\
    \ $1.element.isUppercase ? 1 : 0)}\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp4ezosphi/tmp4ezosphi.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef1c96ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef1c661b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef1c661988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef1c6607b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ezosphi                        0x0000559105c22544 <unavailable> + 5444

    5    libc.so.6                          0x00002aef1cb56460 __libc_start_main +
    245

    6    tmp4ezosphi                        0x0000559105c221c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n  var count = 0\n  for (index, letter) in s.enumerated() {\n\
    \    if index % 2 == 0 && letter.isUppercase {\n      count += 1\n    }\n  }\n\
    \  return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpodocqt0i/tmpodocqt0i.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b39f3d30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b39f3a27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b39f3a27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b39f3a267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpodocqt0i                        0x0000556fb267d5e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b39f3f1c460 __libc_start_main +
    245

    6    tmpodocqt0i                        0x0000556fb267d269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var num = 0\n    for (i, c) in s.enumerated() {\n    \
    \    if i % 2 == 0 && is_vowel(c: c) && c.isUppercase {\n            num += 1\n\
    \        }\n    }\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpqivj3k0p.swift:13:26: error: cannot find 'is_vowel' in scope\n\
    \        if i % 2 == 0 && is_vowel(c: c) && c.isUppercase {\n                \
    \         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    s.indices.reduce(0) { $1.isMultiple(of: 2) && s[$1].isUppercase\
    \ ? $0 + 1 : $0 }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: SyntaxError
  stderr: "/tmp/tmps5t4g__4.swift:11:30: error: value of type 'DefaultIndices<String>.Element'\
    \ (aka 'String.Index') has no member 'isMultiple'\n    s.indices.reduce(0) { $1.isMultiple(of:\
    \ 2) && s[$1].isUppercase ? $0 + 1 : $0 }\n                          ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for (index, value) in s.enumerated()\
    \ {\n        switch value {\n        case \"A\", \"E\", \"I\", \"O\", \"U\":\n\
    \            if index % 2 == 0 {\n                vowelCount += 1\n          \
    \  }\n        default:\n            break\n        }\n    }\n    return vowelCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().filter {$0.0 % 2 == 0}.filter {\
    \ $0.element.contains(\"A\") || $0.element.contains(\"E\") || $0.element.contains(\"\
    I\") || $0.element.contains(\"O\") || $0.element.contains(\"U\") }.count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpov1unedr.swift:11:70: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'contains'\n    return s.enumerated().filter {$0.0\
    \ % 2 == 0}.filter { $0.element.contains(\"A\") || $0.element.contains(\"E\")\
    \ || $0.element.contains(\"I\") || $0.element.contains(\"O\") || $0.element.contains(\"\
    U\") }.count\n                                                          ~~~~~~~~~~\
    \ ^~~~~~~~\n/tmp/tmpov1unedr.swift:11:98: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'contains'\n    return s.enumerated().filter\
    \ {$0.0 % 2 == 0}.filter { $0.element.contains(\"A\") || $0.element.contains(\"\
    E\") || $0.element.contains(\"I\") || $0.element.contains(\"O\") || $0.element.contains(\"\
    U\") }.count\n                                                               \
    \                       ~~~~~~~~~~ ^~~~~~~~\n/tmp/tmpov1unedr.swift:11:126: error:\
    \ value of type 'String.Element' (aka 'Character') has no member 'contains'\n\
    \    return s.enumerated().filter {$0.0 % 2 == 0}.filter { $0.element.contains(\"\
    A\") || $0.element.contains(\"E\") || $0.element.contains(\"I\") || $0.element.contains(\"\
    O\") || $0.element.contains(\"U\") }.count\n                                 \
    \                                                                            \
    \     ~~~~~~~~~~ ^~~~~~~~\n/tmp/tmpov1unedr.swift:11:154: error: value of type\
    \ 'String.Element' (aka 'Character') has no member 'contains'\n    return s.enumerated().filter\
    \ {$0.0 % 2 == 0}.filter { $0.element.contains(\"A\") || $0.element.contains(\"\
    E\") || $0.element.contains(\"I\") || $0.element.contains(\"O\") || $0.element.contains(\"\
    U\") }.count\n                                                               \
    \                                                                            \
    \   ~~~~~~~~~~ ^~~~~~~~\n/tmp/tmpov1unedr.swift:11:182: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'contains'\n    return s.enumerated().filter\
    \ {$0.0 % 2 == 0}.filter { $0.element.contains(\"A\") || $0.element.contains(\"\
    E\") || $0.element.contains(\"I\") || $0.element.contains(\"O\") || $0.element.contains(\"\
    U\") }.c"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var numUpper = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase && char.isVowel {\n       \
    \     numUpper += 1\n        }\n    }\n    return numUpper\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpw1qzmca9.swift:13:55: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n        if index % 2 == 0 && char.isUppercase\
    \ && char.isVowel {\n                                                 ~~~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().filter({ (index, character) -> Bool\
    \ in\n        return index % 2 == 0 && character.isUppercase\n    }).count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp5lu46kig/tmp5lu46kig.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8fb8edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af8fb5e4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af8fb5e4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8fb5e37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5lu46kig                        0x0000563fa30a9544 <unavailable> + 5444

    5    libc.so.6                          0x00002af8fbad9460 __libc_start_main +
    245

    6    tmp5lu46kig                        0x0000563fa30a91c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let allChars = Array(s)\n    var count = 0\n    for i\
    \ in stride(from: 0, to: allChars.count, by: 2) {\n        if String(allChars[i]).uppercased()\
    \ == String(allChars[i]) && isVowel(c: allChars[i]) {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmp_qddu2ov.swift:14:71: error: cannot find 'isVowel' in scope\n \
    \       if String(allChars[i]).uppercased() == String(allChars[i]) && isVowel(c:\
    \ allChars[i]) {\n                                                           \
    \           ^~~~~~~\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var result = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && \"AEIOU\".contains(char) {\n            result\
    \ += 1\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var c = 0\n    for (index, char) in s.enumerated() {\n\
    \        if index % 2 == 0 && char.isUppercase && char.isVowel {\n           \
    \ c += 1\n        }\n    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmprr4_12tg.swift:13:55: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n        if index % 2 == 0 && char.isUppercase\
    \ && char.isVowel {\n                                                 ~~~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var vowels = 0\n    var stringIndex = s.startIndex\n \
    \   while stringIndex != s.endIndex {\n        let character = s[stringIndex]\n\
    \        if (character == \"A\" || character == \"E\" || character == \"I\" ||\
    \ character == \"O\" || character == \"U\") {\n            if (s.distance(from:\
    \ s.startIndex, to: stringIndex) % 2 == 0) {\n                vowels += 1\n  \
    \          }\n        }\n        stringIndex = s.index(after: stringIndex)\n \
    \   }\n    return vowels\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmpqs6wsre0/tmpqs6wsre0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b432b144c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b432ae3bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b432ae3b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b432ae3a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqs6wsre0                        0x000055d49e3a6264 <unavailable> + 4708

    5    libc.so.6                          0x00002b432b330460 __libc_start_main +
    245

    6    tmpqs6wsre0                        0x000055d49e3a5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978602
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) {\n        $0 + ($1.0\
    \ % 2 == 0 && $1.1.isUppercase ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\"\
    ) == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") ==\
    \ 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\n\
    assert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpjkf_3neh/tmpjkf_3neh.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7a9067c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7a8d5eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7a8d5e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7a8d5d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjkf_3neh                        0x0000564ba7da8544 <unavailable> + 5444

    5    libc.so.6                          0x00002ab7a9253460 __libc_start_main +
    245

    6    tmpjkf_3neh                        0x0000564ba7da81c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n   \
    \ var uppercase_count = 0\n    for (i, c) in s.characters.enumerated() {\n   \
    \     if i % 2 == 0 && vowels.contains(String(c)) {\n            uppercase_count\
    \ += 1\n        }\n    }\n    return uppercase_count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"\
    abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpqkv19ynf.swift:13:21: error: 'characters' is unavailable: Please\
    \ use String directly\n    for (i, c) in s.characters.enumerated() {\n       \
    \             ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if i % 2 == 0 && is_upper(c: c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpa7nraq9f.swift:13:26: error: cannot find 'is_upper' in scope\n\
    \        if i % 2 == 0 && is_upper(c: c) {\n                         ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) {\n        $0 + (($1.offset\
    \ % 2 == 0) && isupper(String($1.element)) ? 1 : 0)\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmp0_4yr52o.swift:12:39: error: cannot find 'isupper' in scope\n \
    \       $0 + (($1.offset % 2 == 0) && isupper(String($1.element)) ? 1 : 0)\n \
    \                                     ^~~~~~~\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = \"aeiou\"\n    for i in\
    \ 0..<s.count {\n        let index = s.index(s.startIndex, offsetBy: i)\n    \
    \    let character = s[index]\n        if i % 2 == 0 && vowels.contains(character)\
    \ && character.isUppercase {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"aBCdEf\"\
    ) == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\"\
    ) == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\n\
    assert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmplinn1v9d/tmplinn1v9d.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0587a8ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0587781b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0587781988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b05877807b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplinn1v9d                        0x00005563004b96c4 <unavailable> + 5828

    5    libc.so.6                          0x00002b0587c76460 __libc_start_main +
    245

    6    tmplinn1v9d                        0x00005563004b9349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if c.isUppercase && i % 2 == 0 {\n            count += 1\n        }\n \
    \   }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: Exception
  stderr: 'tmp12d47pd1/tmp12d47pd1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8efa05cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ef9d53b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ef9d53988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ef9d527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp12d47pd1                        0x000055a32b7945e4 <unavailable> + 5604

    5    libc.so.6                          0x00002b8efa248460 __libc_start_main +
    245

    6    tmp12d47pd1                        0x000055a32b794269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    // YOUR CODE HERE\n    return 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmp07_78pff/tmp07_78pff.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba9e5864c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba9e555bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba9e555b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba9e555a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp07_78pff                        0x0000556775c95264 <unavailable> + 4708

    5    libc.so.6                          0x00002ba9e5a50460 __libc_start_main +
    245

    6    tmp07_78pff                        0x0000556775c94ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    // your code here\n    var count = 0\n    for (index,\
    \ letter) in s.enumerated() {\n        if index % 2 == 0 && letter.isUppercase\
    \ && \"AEIOU\".contains(letter) {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(count_upper(s: \"\
    aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    // Your code here!\n    return 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpgpz5bveu/tmpgpz5bveu.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba6442dac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba643fd1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba643fd1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba643fd07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgpz5bveu                        0x0000559774228264 <unavailable> + 4708

    5    libc.so.6                          0x00002ba6444c6460 __libc_start_main +
    245

    6    tmpgpz5bveu                        0x0000559774227ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().filter { (index, char) in\n    \
    \    index % 2 == 0 && \"AEIOU\".contains(char)\n    }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978604
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var cnt = 0\n    for (i, ch) in s.enumerated() {\n   \
    \     if i % 2 == 0 && \"AEIOU\".contains(ch) {\n            cnt += 1\n      \
    \  }\n    }\n    return cnt\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    // TODO: Implement me!\n    return 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpb91j8tta/tmpb91j8tta.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7e41e32c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7e41b29b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7e41b29988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7e41b287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb91j8tta                        0x0000557ab5e74264 <unavailable> + 4708

    5    libc.so.6                          0x00002b7e4201e460 __libc_start_main +
    245

    6    tmpb91j8tta                        0x0000557ab5e73ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n  var counter = 0\n  for (index, character) in s.enumerated()\
    \ {\n    if index % 2 == 0 && is_upper(character: character) {\n      counter\
    \ += 1\n    }\n  }\n  return counter\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpw6c3onrh.swift:13:26: error: cannot find 'is_upper' in scope\n\
    \    if index % 2 == 0 && is_upper(character: character) {\n                 \
    \        ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    let vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n   \
    \ var result = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && vowels.contains(String(char)) {\n            result += 1\n     \
    \   }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(count_upper(s:\
    \ \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") == 0)\nassert(count_upper(s:\
    \ \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\nassert(count_upper(s: \"\
    U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s: \"EEEE\"\
    ) == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    var even = false\n    for char in s\
    \ {\n        if even {\n            if char.isUppercase {\n                count\
    \ += 1\n            }\n        }\n        even = !even\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpbp40bfl9/tmpbp40bfl9.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1a3e6bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1a3b62b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1a3b62988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1a3b617b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbp40bfl9                        0x000055cfd27b74c2 <unavailable> + 5314

    5    libc.so.6                          0x00002af1a4057460 __libc_start_main +
    245

    6    tmpbp40bfl9                        0x000055cfd27b6ff9 <unavailable> + 4089

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for i in 0..<s.count {\n        if\
    \ i % 2 == 0 {\n            let c = s[i]\n            if c == \"A\" || c == \"\
    E\" || c == \"I\" || c == \"O\" || c == \"U\" {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"\
    abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmp2nzhndx_.swift:14:21: error: 'subscript(_:)' is unavailable: cannot\
    \ subscript String with an Int, use a String.Index instead.\n            let c\
    \ = s[i]\n                    ^~~~\nSwift.String:3:12: note: 'subscript(_:)' has\
    \ been explicitly marked unavailable here\n    public subscript(i: Int) -> Character\
    \ { get }\n           ^\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.enumerated().reduce(0) {\n        if $1.offset\
    \ % 2 == 0 && \"AEIOU\".contains($1.element) {\n            return $0 + 1\n  \
    \      }\n        return $0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    return s.characters.enumerated().reduce(0) { if $0.offset\
    \ % 2 == 0, $0.element.isUppercase { return $1 + 1 } else { return $1 } }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: SyntaxError
  stderr: "/tmp/tmpz21gkndc.swift:11:44: error: missing argument label 'into:' in\
    \ call\n    return s.characters.enumerated().reduce(0) { if $0.offset % 2 == 0,\
    \ $0.element.isUppercase { return $1 + 1 } else { return $1 } }\n            \
    \                               ^\n                                          \
    \  into: \n/tmp/tmpz21gkndc.swift:11:38: error: cannot convert return expression\
    \ of type '(_, _) -> Int' to return type 'Int'\n    return s.characters.enumerated().reduce(0)\
    \ { if $0.offset % 2 == 0, $0.element.isUppercase { return $1 + 1 } else { return\
    \ $1 } }\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpz21gkndc.swift:11:45: error: cannot convert value of type 'Int' to expected\
    \ argument type '(inout @escaping (_, _) -> Int, EnumeratedSequence<String>.Iterator.Element)\
    \ throws -> ()' (aka '(inout @escaping (_, _) -> Int, (offset: Int, element: Character))\
    \ throws -> ()')\n    return s.characters.enumerated().reduce(0) { if $0.offset\
    \ % 2 == 0, $0.element.isUppercase { return $1 + 1 } else { return $1 } }\n  \
    \                                          ^\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n  // TODO: Implement\n  return 0\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"\
    abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: Exception
  stderr: 'tmpir__u_fr/tmpir__u_fr.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b43dc852c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b43dc549b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b43dc549988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43dc5487b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpir__u_fr                        0x000055b2f639c264 <unavailable> + 4708

    5    libc.so.6                          0x00002b43dca3e460 __libc_start_main +
    245

    6    tmpir__u_fr                        0x000055b2f639bee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 {\n            if char == \"A\" || char == \"E\"\
    \ || char == \"I\" || char == \"O\" || char == \"U\" {\n                count\
    \ += 1\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
    \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
    \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\"\
    ) == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978603
- exit_code: 0
  program: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
    /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
    \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
    \ String) -> Int {\n    var c = 0\n    let u = \"AEIOU\"\n    for (i, char) in\
    \ s.enumerated() {\n        if i % 2 == 0 && u.contains(char) {\n            c\
    \ += 1\n        }\n    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s: \"abcdefg\") ==\
    \ 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s: \"B\") == 0)\n\
    assert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\") == 0)\nassert(count_upper(s:\
    \ \"EEEE\") == 2)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978604

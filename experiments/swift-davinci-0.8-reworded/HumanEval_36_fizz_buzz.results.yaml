language: swift
name: HumanEval_36_fizz_buzz
results:
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var cnt = 0\n    var nn = n\n    while nn > 0 {\n       \
    \ if nn % 10 == 7 {\n            cnt += 1\n        }\n        nn /= 10\n    }\n\
    \    return cnt\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpn5zc_icp/tmpn5zc_icp.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2d318cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae2d2e83b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae2d2e83988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2d2e827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpn5zc_icp                        0x000055bc894002c3 <unavailable> + 4803

    5    libc.so.6                          0x00002ae2d3378460 __libc_start_main +
    245

    6    tmpn5zc_icp                        0x000055bc893ffef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    \n    var count = 0\n    \n    for i in 0..<n {\n       \
    \ if i % 11 == 0 || i % 13 == 0 {\n            count += num_sevens(n: i)\n   \
    \     }\n    }\n    \n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9je2x5ui.swift:15:22: error: cannot find 'num_sevens' in scope\n\
    \            count += num_sevens(n: i)\n                     ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for i in 1...n-1 {\n        let str =\
    \ String(i)\n        if i % 11 == 0 || i % 13 == 0 {\n            for char in\
    \ str {\n                if char == \"7\" {\n                    result += 1\n\
    \                }\n            }\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013898
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i in 1..<n {\n        if i % 11 == 0\
    \ || i % 13 == 0 {\n            sum += i.description.filter{$0 == \"7\"}.count\n\
    \        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013898
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            var j = i\n            while j > 0 {\n     \
    \           if j % 10 == 7 {\n                    count += 1\n               \
    \ }\n                j /= 10\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    assert(n >= 0)\n    if n < 11 * 13 {\n        return 0\n\
    \    }\n    if n <= 99 {\n        return 1\n    }\n    if n <= 99 * 11 * 13 {\n\
    \        return 2\n    }\n    let mutableN = n\n    var count = 0\n    while mutableN\
    \ > 0 {\n        if mutableN % 10 == 7 {\n            count += 1\n        }\n\
    \        mutableN /= 10\n    }\n    if n <= 999 * 11 * 13 {\n        return 2\
    \ + count\n    }\n    if n <= 9999 * 11 * 13 {\n        return 3 + count\n   \
    \ }\n    if n <= 99999 * 11 * 13 {\n        return 4 + count\n    }\n    if n\
    \ <= 999999 * 11 * 13 {\n        return 5 + count\n    }\n    if n <= 9999999\
    \ * 11 * 13 {\n        return 6 + count\n    }\n    if n <= 99999999 * 11 * 13\
    \ {\n        return 7 + count\n    }\n    if n <= 999999999 * 11 * 13 {\n    \
    \    return 8 + count\n    }\n    if n <= 9999999999 * 11 * 13 {\n        return\
    \ 9 + count\n    }\n    if n <= 99999999999 * 11 * 13 {\n        return 10 + count\n\
    \    }\n    if n <= 999999999999 * 11 * 13 {\n        return 11 + count\n    }\n\
    \    if n <= 9999999999999 * 11 * 13 {\n        return 12 + count\n    }\n   \
    \ if n <= 99999999999999 * 11 * 13 {\n        return 13 + count\n    }\n    if\
    \ n <= 999999999999999 * 11 * 13 {\n        return 14 + count\n    }\n    if n\
    \ <= 9999999999999999 * 11 * 13 {\n        return 15 + count\n    }\n    if n\
    \ <= 99999999999999999 * 11 * 13 {\n        return 16 + count\n    }\n    if n\
    \ <= 999999999999999999 * 11 * 13 {\n        return 17 + count\n    }\n    if\
    \ n <= 9999999999999999999 * 11 * 13 {\n        return 18 + count\n    }\n   \
    \ if n <= 99999999999999999999 * 11 * 13 {\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpm67ko1mk.swift:102:37: error: expected '}' at end of brace statement\n\
    assert(fizz_buzz(n: 100000) == 8026)\n                                    ^\n\
    /tmp/tmpm67ko1mk.swift:9:31: note: to match this opening '{'\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n                              ^\n/tmp/tmpm67ko1mk.swift:26:18:\
    \ error: left side of mutating operator isn't mutable: 'mutableN' is a 'let' constant\n\
    \        mutableN /= 10\n        ~~~~~~~~ ^\n/tmp/tmpm67ko1mk.swift:20:5: note:\
    \ change 'let' to 'var' to make it mutable\n    let mutableN = n\n    ^~~\n  \
    \  var\n/tmp/tmpm67ko1mk.swift:83:6: error: operator functions can only be declared\
    \ at global or in type scope\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n     ^\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    \n    func solution_loop(n: Int, count: Int) -> Int {\n \
    \       if n < 1 {\n            return count\n        }\n        else if n % 11\
    \ == 0 || n % 13 == 0 {\n            let digit = n % 10\n            if digit\
    \ == 7 {\n                return solution_loop(n: n - 1, count: count + 1)\n \
    \           }\n            else {\n                return solution_loop(n: n -\
    \ 1, count: count)\n            }\n        }\n        else {\n            return\
    \ solution_loop(n: n - 1, count: count)\n        }\n    }\n    \n    func solution_recursive(n:\
    \ Int) -> Int {\n        if n < 1 {\n            return 0\n        }\n       \
    \ else if n % 11 == 0 || n % 13 == 0 {\n            let digit = n % 10\n     \
    \       if digit == 7 {\n                return 1 + solution_recursive(n: n -\
    \ 1)\n            }\n            else {\n                return solution_recursive(n:\
    \ n - 1)\n            }\n        }\n        else {\n            return solution_recursive(n:\
    \ n - 1)\n        }\n    }\n    \n    return solution_loop(n: n, count: 0)\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpqd5grdkq/tmpqd5grdkq.swift:64: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61e4a54c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61e474bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61e474b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61e474a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqd5grdkq                        0x00005622d42ed2c3 <unavailable> + 4803

    5    libc.so.6                          0x00002b61e4c40460 __libc_start_main +
    245

    6    tmpqd5grdkq                        0x00005622d42ecef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            let str_num = String(i)\n            for char\
    \ in str_num {\n                if char == \"7\" {\n                    result\
    \ += 1\n                }\n            }\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            if i % 10 == 7 {\n                count += 1\n\
    \            }\n            if i / 10 == 7 {\n                count += 1\n   \
    \         }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpo3vpqfdj/tmpo3vpqfdj.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2995ab9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29957b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29957b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29957af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3vpqfdj                        0x000055d3435dc524 <unavailable> + 5412

    5    libc.so.6                          0x00002b2995ca5460 __libc_start_main +
    245

    6    tmpo3vpqfdj                        0x000055d3435dbfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1..<n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            let digits = String(num).characters.map\
    \ { Int(String($0))! }\n            for digit in digits {\n                if\
    \ digit == 7 {\n                    count += 1\n                }\n          \
    \  }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpqm6yl9jv.swift:13:38: error: 'characters' is unavailable: Please\
    \ use String directly\n            let digits = String(num).characters.map { Int(String($0))!\
    \ }\n                                     ^~~~~~~~~~\nSwift.String:5:16: note:\
    \ 'characters' was obsoleted in Swift 5.0\n    public var characters: String {\
    \ get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in (1..<n) {\n        if num %\
    \ 11 == 0 || num % 13 == 0 {\n            var num_str = String(num)\n        \
    \    for char in num_str {\n                if char == \"7\" {\n             \
    \       count += 1\n                }\n            }\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if (i % 11 ==\
    \ 0 || i % 13 == 0) && i.description.contains(\"7\") {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpzy2ktzry/tmpzy2ktzry.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b10f93abc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b10f90a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b10f90a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b10f90a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzy2ktzry                        0x00005617f2660603 <unavailable> + 5635

    5    libc.so.6                          0x00002b10f9597460 __libc_start_main +
    245

    6    tmpzy2ktzry                        0x00005617f2660239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            var j = i\n            while j > 0 {\n     \
    \           if j % 10 == 7 {\n                    count += 1\n               \
    \ }\n                j /= 10\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var cnt: Int = 0\n    for i in 1...n {\n        if i % 11\
    \ == 0 || i % 13 == 0 {\n            let a = Array(String(i))\n            for\
    \ j in a {\n                if j == \"7\" {\n                    cnt += 1\n  \
    \              }\n            }\n        }\n    }\n    return cnt\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpckp67jd3/tmpckp67jd3.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba11bf4ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba11bc45b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba11bc45988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba11bc447b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpckp67jd3                        0x0000562464a0e843 <unavailable> + 6211

    5    libc.so.6                          0x00002ba11c13a460 __libc_start_main +
    245

    6    tmpckp67jd3                        0x0000562464a0e479 <unavailable> + 5241

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1..<n {\n        if isDivisibleBy(number,\
    \ divisor: 11) || isDivisibleBy(number, divisor: 13) {\n            count += digits(number).filter\
    \ { $0 == 7 }.count\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpl9p2g68_.swift:12:12: error: cannot find 'isDivisibleBy' in scope\n\
    \        if isDivisibleBy(number, divisor: 11) || isDivisibleBy(number, divisor:\
    \ 13) {\n           ^~~~~~~~~~~~~\n/tmp/tmpl9p2g68_.swift:12:50: error: cannot\
    \ find 'isDivisibleBy' in scope\n        if isDivisibleBy(number, divisor: 11)\
    \ || isDivisibleBy(number, divisor: 13) {\n                                  \
    \               ^~~~~~~~~~~~~\n/tmp/tmpl9p2g68_.swift:13:22: error: cannot find\
    \ 'digits' in scope\n            count += digits(number).filter { $0 == 7 }.count\n\
    \                     ^~~~~~\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    var n = n\n    while n > 0 {\n       \
    \ if n % 10 == 7 {\n            count += 1\n        }\n        n /= 10\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpdvcbvjp9/tmpdvcbvjp9.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea4c1f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea4beefb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea4beef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea4beee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdvcbvjp9                        0x000055b6335732c3 <unavailable> + 4803

    5    libc.so.6                          0x00002aea4c3e4460 __libc_start_main +
    245

    6    tmpdvcbvjp9                        0x000055b633572ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 {\n            count += (number_of_sevens(i) + number_of_sevens(i / 10))\n\
    \        } else if i % 13 == 0 {\n            count += (number_of_sevens(i) +\
    \ number_of_sevens(i / 10))\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpm05ihi3k.swift:13:23: error: cannot find 'number_of_sevens' in\
    \ scope\n            count += (number_of_sevens(i) + number_of_sevens(i / 10))\n\
    \                      ^~~~~~~~~~~~~~~~\n/tmp/tmpm05ihi3k.swift:13:45: error:\
    \ cannot find 'number_of_sevens' in scope\n            count += (number_of_sevens(i)\
    \ + number_of_sevens(i / 10))\n                                            ^~~~~~~~~~~~~~~~\n\
    /tmp/tmpm05ihi3k.swift:15:23: error: cannot find 'number_of_sevens' in scope\n\
    \            count += (number_of_sevens(i) + number_of_sevens(i / 10))\n     \
    \                 ^~~~~~~~~~~~~~~~\n/tmp/tmpm05ihi3k.swift:15:45: error: cannot\
    \ find 'number_of_sevens' in scope\n            count += (number_of_sevens(i)\
    \ + number_of_sevens(i / 10))\n                                            ^~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for i in stride(from: n - 1, through:\
    \ 0, by: -1) {\n        if i % 11 == 0 || i % 13 == 0 {\n            result +=\
    \ i.description.count(\"7\")\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpcm6au5zi.swift:13:37: error: cannot call value of non-function\
    \ type 'Int'\n            result += i.description.count(\"7\")\n             \
    \                       ^\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    \n    var count = 0\n    \n    var fizzBuzz = [Int]()\n \
    \   \n    for i in 1..<n {\n        if i % 11 == 0 || i % 13 == 0 {\n        \
    \    fizzBuzz.append(i)\n        }\n    }\n    \n    for i in fizzBuzz {\n   \
    \     let numStr = String(i)\n        for character in numStr {\n            if\
    \ character == \"7\" {\n                count += 1\n            }\n        }\n\
    \    }\n    \n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013898
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var i = 0\n    var count = 0\n    while (i < n) {\n     \
    \   if ((i % 11 == 0) || (i % 13 == 0)) {\n            let digit = i % 10\n  \
    \          var tens_digit = i / 10\n            while (tens_digit > 0) {\n   \
    \             if (tens_digit % 10 == 7) {\n                    count += 1\n  \
    \              }\n                tens_digit /= 10\n            }\n          \
    \  if (digit == 7) {\n                count += 1\n            }\n        }\n \
    \       i += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n  // TODO\n  return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpug91o8br/tmpug91o8br.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5a78175c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5a77e6cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5a77e6c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5a77e6b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpug91o8br                        0x000055f9e263c233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5a78361460 __libc_start_main +
    245

    6    tmpug91o8br                        0x000055f9e263be69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    // TODO: Implement this\n    var count = 0\n    for i in\
    \ 0...n {\n        if String(i).contains(\"7\") {\n            if i % 11 == 0\
    \ || i % 13 == 0 {\n                count += 1\n            }\n        }\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpm3qw4y13/tmpm3qw4y13.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b60848d6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60845cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b60845cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b60845cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm3qw4y13                        0x000055b4d565c6ae <unavailable> + 5806

    5    libc.so.6                          0x00002b6084ac2460 __libc_start_main +
    245

    6    tmpm3qw4y13                        0x000055b4d565c269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let array = Array(1...n)\n    let eleven = array.filter {\
    \ (x) -> Bool in\n        x % 11 == 0\n    }\n    let thirteen = array.filter\
    \ { (x) -> Bool in\n        x % 13 == 0\n    }\n    let elevenThirteen = eleven\
    \ + thirteen\n    let elevenThirteenUniq = Set(elevenThirteen)\n    let seven\
    \ = elevenThirteenUniq.filter { (x) -> Bool in\n        String(x).contains(\"\
    7\")\n    }\n    return seven.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpx9pq_6e_/tmpx9pq_6e_.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b70250d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7024dcbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7024dcb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7024dca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx9pq_6e_                        0x0000557041cca9ae <unavailable> + 6574

    5    libc.so.6                          0x00002b70252c0460 __libc_start_main +
    245

    6    tmpx9pq_6e_                        0x0000557041cca569 <unavailable> + 5481

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    let s = \"\\(n)\"\n    for c in s {\n\
    \        if c == \"7\" {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp931qcq1s/tmp931qcq1s.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b46669b7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b46666aeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b46666ae988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46666ad7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp931qcq1s                        0x000056507bdfb6c3 <unavailable> + 5827

    5    libc.so.6                          0x00002b4666ba3460 __libc_start_main +
    245

    6    tmp931qcq1s                        0x000056507bdfb2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpkraj4rxb/tmpkraj4rxb.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1027d5ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1027a55b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1027a55988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1027a547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkraj4rxb                        0x0000564047c4b1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b1027f4a460 __libc_start_main +
    245

    6    tmpkraj4rxb                        0x0000564047c4ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp5erzay5e/tmp5erzay5e.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae355568c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae35525fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae35525f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae35525e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5erzay5e                        0x0000556fae64a1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002ae355754460 __libc_start_main +
    245

    6    tmp5erzay5e                        0x0000556fae649e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 11 == 0\
    \ || i % 13 == 0 {\n            let num = String(i)\n            for c in num\
    \ {\n                if c == \"7\" {\n                    sum += 1\n         \
    \       }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpp0se8i4w/tmpp0se8i4w.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b74a9effc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b74a9bf6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b74a9bf6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b74a9bf57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp0se8i4w                        0x000055c2a42e2623 <unavailable> + 5667

    5    libc.so.6                          0x00002b74aa0eb460 __libc_start_main +
    245

    6    tmpp0se8i4w                        0x000055c2a42e2259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 0...n-1{\n        if i % 11 ==\
    \ 0 || i % 13 == 0{\n            var str = String(i)\n            for j in str.characters{\n\
    \                if j == \"7\"{\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpax3b3uhn.swift:14:26: error: 'characters' is unavailable: Please\
    \ use String directly\n            for j in str.characters{\n                \
    \         ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift\
    \ 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpax3b3uhn.swift:13:17:\
    \ warning: variable 'str' was never mutated; consider changing to 'let' constant\n\
    \            var str = String(i)\n            ~~~ ^\n            let\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i in 1..<n {\n        if i % 11 == 0\
    \ || i % 13 == 0 {\n            let str = String(i)\n            for char in str\
    \ {\n                if char == \"7\" {\n                    sum += 1\n      \
    \          }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1...n {\n        if (i % 11 ==\
    \ 0 || i % 13 == 0) && String(i).contains(\"7\") {\n            count += 1\n \
    \       }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpxbhg43vk/tmpxbhg43vk.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aac5453ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aac54235b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aac54235988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aac542347b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbhg43vk                        0x0000555855dc76ae <unavailable> + 5806

    5    libc.so.6                          0x00002aac5472a460 __libc_start_main +
    245

    6    tmpxbhg43vk                        0x0000555855dc7269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let numbers = (1..<n).filter { $0 % 11 == 0 || $0 % 13 ==\
    \ 0 }\n    let strings = numbers.map { String($0) }\n    let digits = strings.map\
    \ { $0.characters }\n    let sevens = digits.map { $0.filter { $0 == \"7\" } }\n\
    \    let counts = sevens.map { $0.count }\n    return counts.reduce(0, +)\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp4dmvvw92.swift:12:35: error: 'characters' is unavailable: Please\
    \ use String directly\n    let digits = strings.map { $0.characters }\n      \
    \                            ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    // Your code here\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: '/tmp/tmpp0yo8vw5.swift:11:1: error: missing return in global function expected
    to return ''Int''

    }

    ^

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    var n = n\n    while n > 0 {\n       \
    \ n -= 1\n        if n % 11 == 0 || n % 13 == 0 {\n            var m = n\n   \
    \         while m > 0 {\n                m /= 10\n                if m % 10 ==\
    \ 7 {\n                    count += 1\n                }\n            }\n    \
    \    }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpt4tg7xjp/tmpt4tg7xjp.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8f11ecdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8f11bc4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8f11bc4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8f11bc37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt4tg7xjp                        0x000055c105c762c3 <unavailable> + 4803

    5    libc.so.6                          0x00002b8f120b9460 __libc_start_main +
    245

    6    tmpt4tg7xjp                        0x000055c105c75ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var ans = 0\n    var divisors = [11, 13]\n    divisors.forEach\
    \ { divisor in\n        for i in 0..<n {\n            if (i % divisor == 0) {\n\
    \                var temp = i\n                while temp > 0 {\n            \
    \        if temp % 10 == 7 {\n                        ans += 1\n             \
    \       }\n                    temp /= 10\n                }\n            }\n\
    \        }\n    }\n    return ans\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp6js8vo77/tmp6js8vo77.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b039e836c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b039e52db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b039e52d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b039e52c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6js8vo77                        0x00005628bc599711 <unavailable> + 5905

    5    libc.so.6                          0x00002b039ea22460 __libc_start_main +
    245

    6    tmp6js8vo77                        0x00005628bc599159 <unavailable> + 4441

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var sevens = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            sevens += sevens_in_number(n: i)\n        }\n\
    \    }\n    return sevens\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp98tjjmf5.swift:13:23: error: cannot find 'sevens_in_number' in\
    \ scope\n            sevens += sevens_in_number(n: i)\n                      ^~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for x in 1...n {\n        if x % 11 ==\
    \ 0 || x % 13 == 0 {\n            for c in String(x) {\n                if c ==\
    \ \"7\" {\n                    count += 1\n                }\n            }\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpckvof7db/tmpckvof7db.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeeef8cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeeef5c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeeef5c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeeef5c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpckvof7db                        0x000055df6fa06623 <unavailable> + 5667

    5    libc.so.6                          0x00002aeeefabb460 __libc_start_main +
    245

    6    tmpckvof7db                        0x000055df6fa06259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var acc: Int = 0\n    for i in 1..<n {\n        if (i % 11\
    \ == 0 || i % 13 == 0) && i % 7 == 0 {\n            acc += 1\n        }\n    }\n\
    \    return acc\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpt19ssua8/tmpt19ssua8.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afdbd073c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afdbcd6ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afdbcd6a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afdbcd697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt19ssua8                        0x000055ea1a5063b3 <unavailable> + 5043

    5    libc.so.6                          0x00002afdbd25f460 __libc_start_main +
    245

    6    tmpt19ssua8                        0x000055ea1a505fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp5erzay5e/tmp5erzay5e.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae355568c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae35525fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae35525f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae35525e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5erzay5e                        0x0000556fae64a1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002ae355754460 __libc_start_main +
    245

    6    tmp5erzay5e                        0x0000556fae649e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return (0..<n).filter({$0 % 11 == 0 || $0 % 13 == 0}).reduce(0,\
    \ {$0 + String($1).filter({$0 == \"7\"}).count})\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6iimaltp.swift:10:12: error: the compiler is unable to type-check\
    \ this expression in reasonable time; try breaking up the expression into distinct\
    \ sub-expressions\n    return (0..<n).filter({$0 % 11 == 0 || $0 % 13 == 0}).reduce(0,\
    \ {$0 + String($1).filter({$0 == \"7\"}).count})\n           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014079
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i in 1..<n {\n        if i % 11 == 0\
    \ || i % 13 == 0 {\n            sum += String(i).characters.filter { $0 == \"\
    7\" }.count\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpdbap77yf.swift:13:30: error: 'characters' is unavailable: Please\
    \ use String directly\n            sum += String(i).characters.filter { $0 ==\
    \ \"7\" }.count\n                             ^~~~~~~~~~\nSwift.String:5:16: note:\
    \ 'characters' was obsoleted in Swift 5.0\n    public var characters: String {\
    \ get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var x = 0\n    var c = 0\n    var z = 0\n    while x < n\
    \ {\n        if x % 11 == 0 || x % 13 == 0 {\n            let s = String(x)\n\
    \            for i in s {\n                if i == \"7\" {\n                 \
    \   c += 1\n                }\n            }\n        }\n        x += 1\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013898
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return (1...n).reduce(0) { (acc, current) -> Int in\n   \
    \     var result = acc\n        if (current % 11 == 0 || current % 13 == 0) &&\
    \ getDigit(n: current, pos: 1) == 7 {\n            result += 1\n        }\n  \
    \      return result\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpuo4dqbd6.swift:12:56: error: cannot find 'getDigit' in scope\n\
    \        if (current % 11 == 0 || current % 13 == 0) && getDigit(n: current, pos:\
    \ 1) == 7 {\n                                                       ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var sum = 0\n    var count = 0\n    while (count < n) {\n\
    \        if (count % 11 == 0) || (count % 13 == 0) {\n            sum += count_sevens(count)\n\
    \        }\n        count += 1\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp_dzabw00.swift:14:20: error: cannot find 'count_sevens' in scope\n\
    \            sum += count_sevens(count)\n                   ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 11...n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            var j = i\n            while j > 0 {\n     \
    \           if j % 10 == 7 {\n                    count += 1\n               \
    \ }\n                j /= 10\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp9m2vsck5/tmp9m2vsck5.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0deb2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0de826b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0de826988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0de8257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9m2vsck5                        0x00005654ebad23b3 <unavailable> + 5043

    5    libc.so.6                          0x00002ae0ded1b460 __libc_start_main +
    245

    6    tmp9m2vsck5                        0x00005654ebad1fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count: Int = 0\n    for i in 1...n {\n        if i %\
    \ 11 == 0 || i % 13 == 0 {\n            var j = i\n            while j > 0 {\n\
    \                if j % 10 == 7 {\n                    count += 1\n          \
    \      }\n                j /= 10\n            }\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpf9pewm13/tmpf9pewm13.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b949bbd8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b949b8cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b949b8cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b949b8ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf9pewm13                        0x00005555c11923b3 <unavailable> + 5043

    5    libc.so.6                          0x00002b949bdc4460 __libc_start_main +
    245

    6    tmpf9pewm13                        0x00005555c1191fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        if i % 11 == 0\
    \ || i % 13 == 0 {\n            var j = i\n            while j > 0 {\n       \
    \         if j % 10 == 7 {\n                    sum += 1\n                }\n\
    \                j /= 10\n            }\n        }\n    }\n    return sum\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013898
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var index = 1\n    var count = 0\n    while index < n {\n\
    \        if index % 11 == 0 || index % 13 == 0 {\n            let str = String(index)\n\
    \            for char in str {\n                if char == \"7\" {\n         \
    \           count += 1\n                }\n            }\n        }\n        index\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013898
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 0..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            count += count_sevens(i)\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp57cmjpy0.swift:13:22: error: cannot find 'count_sevens' in scope\n\
    \            count += count_sevens(i)\n                     ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return (0..<n).filter {\n        ($0 % 11 == 0 || $0 % 13\
    \ == 0) && $0.description.contains(\"7\")\n    }.count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpswjihtcy/tmpswjihtcy.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b812ccf2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b812c9e9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b812c9e9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b812c9e87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpswjihtcy                        0x00005635cca36693 <unavailable> + 5779

    5    libc.so.6                          0x00002b812cede460 __libc_start_main +
    245

    6    tmpswjihtcy                        0x00005635cca362c9 <unavailable> + 4809

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n  var ans = 0\n  for i in 0..<n {\n    let s = String(i)\n  \
    \  if (i % 11 == 0 || i % 13 == 0) && s.contains(\"7\") {\n      ans += 1\n  \
    \  }\n  }\n  return ans\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpnf8hc3q5/tmpnf8hc3q5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3e0a801c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3e0a4f8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3e0a4f8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3e0a4f77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnf8hc3q5                        0x000055b1508ab633 <unavailable> + 5683

    5    libc.so.6                          0x00002b3e0a9ed460 __libc_start_main +
    245

    6    tmpnf8hc3q5                        0x000055b1508ab269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    assert(n > 0)\n    let divisors = [11, 13]\n    return divisors.map\
    \ { digits_7(m: n, divisor: $0) }.reduce(0, +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpuanxb1pv.swift:12:27: error: cannot find 'digits_7' in scope\n\
    \    return divisors.map { digits_7(m: n, divisor: $0) }.reduce(0, +)\n      \
    \                    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n <= 0 {\n        return 0\n    }\n    var times = 0\n\
    \    for i in 1..<n {\n        if i % 11 == 0 || i % 13 == 0 {\n            times\
    \ += digit_7(n: i)\n        }\n    }\n    return times\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpebymtq0r.swift:16:22: error: cannot find 'digit_7' in scope\n \
    \           times += digit_7(n: i)\n                     ^~~~~~~\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp5erzay5e/tmp5erzay5e.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae355568c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae35525fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae35525f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae35525e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5erzay5e                        0x0000556fae64a1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002ae355754460 __libc_start_main +
    245

    6    tmp5erzay5e                        0x0000556fae649e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    func is_divisible(i: Int, n: Int) -> Bool {\n        return\
    \ i % n == 0\n    }\n    \n    var counter = 0\n    for i in 1..<n {\n       \
    \ if is_divisible(i, n: 11) || is_divisible(i, n: 13) {\n            let number\
    \ = String(i)\n            for digit in number.characters {\n                if\
    \ String(digit) == \"7\" {\n                    counter += 1\n               \
    \ }\n            }\n        }\n    }\n    return counter\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmphwidhz1_.swift:16:24: error: missing argument label 'i:' in call\n\
    \        if is_divisible(i, n: 11) || is_divisible(i, n: 13) {\n             \
    \          ^\n                        i: \n/tmp/tmphwidhz1_.swift:16:50: error:\
    \ missing argument label 'i:' in call\n        if is_divisible(i, n: 11) || is_divisible(i,\
    \ n: 13) {\n                                                 ^\n             \
    \                                     i: \n/tmp/tmphwidhz1_.swift:18:33: error:\
    \ 'characters' is unavailable: Please use String directly\n            for digit\
    \ in number.characters {\n                                ^~~~~~~~~~\nSwift.String:5:16:\
    \ note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String\
    \ { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp5erzay5e/tmp5erzay5e.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae355568c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae35525fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae35525f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae35525e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5erzay5e                        0x0000556fae64a1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002ae355754460 __libc_start_main +
    245

    6    tmp5erzay5e                        0x0000556fae649e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n  var count = 0\n  for i in 0..<n {\n    if i % 11 == 0 || i\
    \ % 13 == 0 {\n      var temp = i\n      while temp > 0 {\n        if temp % 10\
    \ == 7 {\n          count += 1\n        }\n        temp /= 10\n      }\n    }\n\
    \  }\n  return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 0...n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            let strNum = String(i)\n            for c in\
    \ strNum {\n                if c == \"7\" {\n                    count += 1\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpftdx7ffm/tmpftdx7ffm.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade73f2cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade73c23b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade73c23988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade73c227b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpftdx7ffm                        0x0000562a29a90623 <unavailable> + 5667

    5    libc.so.6                          0x00002ade74118460 __libc_start_main +
    245

    6    tmpftdx7ffm                        0x0000562a29a90259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n  var count: Int = 0\n  for i in 1...n {\n    if i % 11 == 0\
    \ || i % 13 == 0 {\n      var j: Int = i\n      while j > 0 {\n        if j %\
    \ 10 == 7 {\n          count += 1\n        }\n        j /= 10\n      }\n    }\n\
    \  }\n  return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpcn398iz9/tmpcn398iz9.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba54ab22c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba54a819b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba54a819988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba54a8187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcn398iz9                        0x000056096a3ff3b3 <unavailable> + 5043

    5    libc.so.6                          0x00002ba54ad0e460 __libc_start_main +
    245

    6    tmpcn398iz9                        0x000056096a3fefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    \n    var count = 0\n    \n    for i in 1...n {\n       \
    \ if (i % 11 == 0 || i % 13 == 0) && i < n && i.description.contains(\"7\") {\n\
    \            count += 1\n        }\n    }\n    \n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpq8qhxxgm/tmpq8qhxxgm.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0116306c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0115ffdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0115ffd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0115ffc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq8qhxxgm                        0x000056496beb4603 <unavailable> + 5635

    5    libc.so.6                          0x00002b01164f2460 __libc_start_main +
    245

    6    tmpq8qhxxgm                        0x000056496beb4239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    // ENTER YOUR CODE HERE\n    return 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpi75f_g7e/tmpi75f_g7e.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b82ab524c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b82ab21bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b82ab21b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b82ab21a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi75f_g7e                        0x000056068fafb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b82ab710460 __libc_start_main +
    245

    6    tmpi75f_g7e                        0x000056068fafae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let nums = [11, 13]\n    let a = nums.map { $0 - 1 }\n  \
    \  let b = nums.map { n / $0 }\n    let c = nums.map { ($0 * b[nums.index(of:\
    \ $0)!]).digits.filter { $0 == 7 }.count }\n    return (a.map { $0 * b[a.index(of:\
    \ $0)!] }.reduce(0, +) + c.reduce(0, +))\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp3x5_4ld7.swift:13:54: error: value of type 'Int' has no member\
    \ 'digits'\n    let c = nums.map { ($0 * b[nums.index(of: $0)!]).digits.filter\
    \ { $0 == 7 }.count }\n                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660013908
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var digit = 0\n    var result = 0\n    for i in 0..<n {\n\
    \        if i % 11 == 0 || i % 13 == 0 {\n            var div = i\n          \
    \  while div > 0 {\n                digit = div % 10\n                if digit\
    \ == 7 {\n                    result += 1\n                }\n               \
    \ div /= 10\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 0..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            var temp = i\n            while temp > 0 {\n\
    \                if temp % 10 == 7 {\n                    count += 1\n       \
    \         }\n                temp /= 10\n            }\n        }\n    }\n   \
    \ return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013898
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var arrayOfSevens = [Int]()\n    for i in 1..<n {\n     \
    \   if (i % 11 == 0 || i % 13 == 0) {\n            let stringOfSevens = String(i)\n\
    \            for index in stringOfSevens.indices {\n                if stringOfSevens[index]\
    \ == \"7\" {\n                    arrayOfSevens.append(i)\n                }\n\
    \            }\n        }\n    }\n    print(arrayOfSevens)\n    return arrayOfSevens.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: '[]

    [77, 77]

    [77, 77, 78]

    [77, 77, 78]

    [77, 77, 78, 117, 176, 187]

    [77, 77, 78, 117, 176, 187, 247, 273, 275, 297, 374, 377, 377, 407, 473, 507,
    517, 572, 627, 637, 671, 676, 702, 704, 715, 726, 728, 737, 737, 741, 748, 754,
    759, 767, 767, 770, 770, 780, 781, 792, 793, 847, 871, 897, 957, 975, 979, 1027,
    1067, 1078, 1079, 1157, 1170, 1177, 1177, 1274, 1276, 1287, 1375, 1378, 1397,
    1417, 1474, 1507, 1547, 1573, 1617, 1672, 1677, 1677, 1703, 1705, 1716, 1727,
    1727, 1729, 1738, 1742, 1749, 1755, 1760, 1768, 1771, 1771, 1781, 1782, 1793,
    1794, 1807, 1837, 1870, 1872, 1937, 1947, 1976, 2057, 2067, 2079, 2167, 2171,
    2178, 2197, 2275, 2277, 2277, 2327, 2376, 2379, 2387, 2457, 2470, 2475, 2497,
    2574, 2587, 2607, 2673, 2678, 2704, 2706, 2717, 2717, 2728, 2730, 2739, 2743,
    2750, 2756, 2761, 2769, 2772, 2772, 2782, 2783, 2794, 2795, 2827, 2847, 2871,
    2873, 2937, 2970, 2977, 2977, 3047, 3107, 3157, 3172, 3179, 3237, 3267, 3276,
    3278, 3367, 3377, 3377, 3471, 3476, 3487, 3497, 3575, 3597, 3627, 3674, 3679,
    3705, 3707, 3707, 3718, 3729, 3731, 3740, 3744, 3751, 3757, 3757, 3762, 3770,
    3770, 3773, 3773, 3783, 3784, 3795, 3796, 3817, 3872, 3874, 3887, 3927, 3971,
    3978]

    [77, 77, 78, 117, 176, 187, 247, 273, 275, 297, 374, 377, 377, 407, 473, 507,
    517, 572, 627, 637, 671, 676, 702, 704, 715, 726, 728, 737, 737, 741, 748, 754,
    759, 767, 767, 770, 770, 780, 781, 792, 793, 847, 871, 897, 957, 975, 979, 1027,
    1067, 1078, 1079, 1157, 1170, 1177, 1177, 1274, 1276, 1287, 1375, 1378, 1397,
    1417, 1474, 1507, 1547, 1573, 1617, 1672, 1677, 1677, 1703, 1705, 1716, 1727,
    1727, 1729, 1738, 1742, 1749, 1755, 1760, 1768, 1771, 1771, 1781, 1782, 1793,
    1794, 1807, 1837, 1870, 1872, 1937, 1947, 1976, 2057, 2067, 2079, 2167, 2171,
    2178, 2197, 2275, 2277, 2277, 2327, 2376, 2379, 2387, 2457, 2470, 2475, 2497,
    2574, 2587, 2607, 2673, 2678, 2704, 2706, 2717, 2717, 2728, 2730, 2739, 2743,
    2750, 2756, 2761, 2769, 2772, 2772, 2782, 2783, 2794, 2795, 2827, 2847, 2871,
    2873, 2937, 2970, 2977, 2977, 3047, 3107, 3157, 3172, 3179, 3237, 3267, 3276,
    3278, 3367, 3377'
  timestamp: 1660013899
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            var j = i\n            while j > 0 {\n     \
    \           if j % 10 == 7 {\n                    count += 1\n               \
    \ }\n                j /= 10\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return (1...n).filter {\n        let d = $0.description\n\
    \        return d.contains(\"7\") && ($0 % 11 == 0 || $0 % 13 == 0)\n    }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpn55rv9aj/tmpn55rv9aj.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b7a924c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b7a61bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b7a61b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b7a61a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpn55rv9aj                        0x00005580a523270e <unavailable> + 5902

    5    libc.so.6                          0x00002b2b7ab10460 __libc_start_main +
    245

    6    tmpn55rv9aj                        0x00005580a52322c9 <unavailable> + 4809

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return (1...n).filter {$0 % 11 == 0 || $0 % 13 == 0}.reduce(0)\
    \ {$0 + $1.description.reduce(0) {$0 + ($1 == \"7\" ? 1 : 0)}}\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp6ya_w86k/tmp6ya_w86k.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1b8fc56c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1b8f94db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1b8f94d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1b8f94c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ya_w86k                        0x0000555bf1e74663 <unavailable> + 5731

    5    libc.so.6                          0x00002b1b8fe42460 __libc_start_main +
    245

    6    tmp6ya_w86k                        0x0000555bf1e74299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1..<n {\n        if ((num %\
    \ 11 == 0) || (num % 13 == 0)) && (num.description.contains(\"7\")) {\n      \
    \      count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpuosxitao/tmpuosxitao.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add70a51c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add70748b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add70748988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add707477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuosxitao                        0x000055c852d1a603 <unavailable> + 5635

    5    libc.so.6                          0x00002add70c3d460 __libc_start_main +
    245

    6    tmpuosxitao                        0x000055c852d1a239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    var i = 1\n    while i < n {\n       \
    \ if i % 11 == 0 || i % 13 == 0 {\n            let str = String(i)\n         \
    \   if str.contains(\"7\") {\n                count += 1\n            }\n    \
    \    }\n        i += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpbr3j78_t/tmpbr3j78_t.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abeccf78c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abeccc6fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abeccc6f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abeccc6e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbr3j78_t                        0x00005644ff5fb533 <unavailable> + 5427

    5    libc.so.6                          0x00002abecd164460 __libc_start_main +
    245

    6    tmpbr3j78_t                        0x00005644ff5fb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    guard n > 0 else { return 0 }\n    guard n > 7 else { return\
    \ 1 }\n    guard n > 14 else { return 2 }\n    var runningTotal = 3\n    var divisor\
    \ = 11\n    while divisor < n {\n        let multiple = divisor * 7\n        if\
    \ multiple < n {\n            runningTotal += 1\n            divisor = multiple\n\
    \        } else {\n            break\n        }\n    }\n    return runningTotal\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpv8qgg4cn/tmpv8qgg4cn.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45d9786c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45d947db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45d947d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45d947c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv8qgg4cn                        0x000055cc29e091b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b45d9972460 __libc_start_main +
    245

    6    tmpv8qgg4cn                        0x000055cc29e08e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    guard n >= 7 else { return 0 }\n    var count = 0\n    for\
    \ i in 7..<n {\n        if i % 11 == 0 || i % 13 == 0 {\n            var num =\
    \ i\n            while num > 0 {\n                if num % 10 == 7 {\n       \
    \             count += 1\n                }\n                num /= 10\n     \
    \       }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n  return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwjcqi0kz/tmpwjcqi0kz.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba893449c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba893140b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba893140988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba89313f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwjcqi0kz                        0x0000562871c06233 <unavailable> + 4659

    5    libc.so.6                          0x00002ba893635460 __libc_start_main +
    245

    6    tmpwjcqi0kz                        0x0000562871c05e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n <= 0 {\n        return 0\n    }\n    if n == 7 {\n \
    \       return 1\n    }\n    var count = 0\n    for i in 1...n {\n        if i\
    \ % 11 == 0 || i % 13 == 0 {\n            let str = String(i)\n            for\
    \ c in str {\n                if c == \"7\" {\n                    count += 1\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpnbhzt8f0/tmpnbhzt8f0.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2a717c6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2a714bdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2a714bd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2a714bc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnbhzt8f0                        0x000055641fd6c623 <unavailable> + 5667

    5    libc.so.6                          0x00002b2a719b2460 __libc_start_main +
    245

    6    tmpnbhzt8f0                        0x000055641fd6c259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp5erzay5e/tmp5erzay5e.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae355568c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae35525fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae35525f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae35525e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5erzay5e                        0x0000556fae64a1b8 <unavailable> + 4536

    5    libc.so.6                          0x00002ae355754460 __libc_start_main +
    245

    6    tmp5erzay5e                        0x0000556fae649e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var counter = 0\n    for i in 0...n {\n        if i % 11\
    \ == 0 || i % 13 == 0 {\n            var num = i\n            while num > 0 {\n\
    \                if num % 10 == 7 {\n                    counter += 1\n      \
    \          }\n                num /= 10\n            }\n        }\n    }\n   \
    \ return counter\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpmv0851zu/tmpmv0851zu.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b991f6c6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b991f3bdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b991f3bd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b991f3bc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmv0851zu                        0x000055a059b1c3b3 <unavailable> + 5043

    5    libc.so.6                          0x00002b991f8b2460 __libc_start_main +
    245

    6    tmpmv0851zu                        0x000055a059b1bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var cnt = 0\n    for i in 0..<n {\n        if i % 11 == 0\
    \ || i % 13 == 0 {\n            cnt += count_7(n: i)\n        }\n    }\n    return\
    \ cnt\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp_egp6_la.swift:13:20: error: cannot find 'count_7' in scope\n \
    \           cnt += count_7(n: i)\n                   ^~~~~~~\n"
  stdout: ''
  timestamp: 1660013898
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var res = 0\n    for i in 1..<n {\n        if (i % 11 ==\
    \ 0 || i % 13 == 0) && String(i).contains(\"7\") {\n            res += 1\n   \
    \     }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpux_z78es/tmpux_z78es.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab9fb177c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab9fae6eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab9fae6e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab9fae6d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpux_z78es                        0x0000561fe5ede633 <unavailable> + 5683

    5    libc.so.6                          0x00002ab9fb363460 __libc_start_main +
    245

    6    tmpux_z78es                        0x0000561fe5ede269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for var i in 0..<n {\n        if i %\
    \ 11 == 0 || i % 13 == 0 {\n            let numStr = String(i)\n            for\
    \ c in numStr.characters {\n                if c == \"7\" {\n                \
    \    result += 1\n                }\n            }\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmppg0cwk3i.swift:14:29: error: 'characters' is unavailable: Please\
    \ use String directly\n            for c in numStr.characters {\n            \
    \                ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmppg0cwk3i.swift:11:13: warning: variable 'i' was never mutated; consider\
    \ removing 'var' to make it constant\n    for var i in 0..<n {\n        ~~~~^\n\
    \        \n"
  stdout: ''
  timestamp: 1660013898
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    precondition(n > 0)\n    var count = 0\n    for i in 1..<n\
    \ {\n        if i % 11 == 0 || i % 13 == 0 {\n            count += occurrences(of:\
    \ \"7\", in: String(i))\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpw8dlc3di.swift:14:22: error: cannot find 'occurrences' in scope\n\
    \            count += occurrences(of: \"7\", in: String(i))\n                \
    \     ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1...n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            let str = String(i)\n            for char in\
    \ str {\n                if char == \"7\" {\n                    count += 1\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpayj5bzv5/tmpayj5bzv5.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52adf57c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52adc4eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52adc4e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52adc4d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpayj5bzv5                        0x0000560433440623 <unavailable> + 5667

    5    libc.so.6                          0x00002b52ae143460 __libc_start_main +
    245

    6    tmpayj5bzv5                        0x0000560433440259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let is_divisible = {(number: Int, divisor: Int) -> Bool in\n\
    \        return number % divisor == 0\n    }\n    let get_digit = {(number: Int,\
    \ digit: Int) -> Int in\n        return (number / digit) % 10\n    }\n    var\
    \ result = 0\n    for number in 1...n {\n        if is_divisible(number, 11) ||\
    \ is_divisible(number, 13) {\n            if get_digit(number, 1) == 7 {\n   \
    \             result += 1\n            }\n            if get_digit(number, 10)\
    \ == 7 {\n                result += 1\n            }\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpd_qo_v3j/tmpd_qo_v3j.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6920f32c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6920c29b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6920c29988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6920c287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd_qo_v3j                        0x000055ece87a03b3 <unavailable> + 5043

    5    libc.so.6                          0x00002b692111e460 __libc_start_main +
    245

    6    tmpd_qo_v3j                        0x000055ece879ffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var seven_count = 0\n    for i in 1...n {\n        if i %\
    \ 11 == 0 || i % 13 == 0 {\n            let seven_count_for_i = seven_count_in_integer(n:\
    \ i)\n            seven_count += seven_count_for_i\n        }\n    }\n    return\
    \ seven_count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpp8ms623f.swift:13:37: error: cannot find 'seven_count_in_integer'\
    \ in scope\n            let seven_count_for_i = seven_count_in_integer(n: i)\n\
    \                                    ^~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            count += countDigit(i, 7)\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp_1chc2yg.swift:13:22: error: cannot find 'countDigit' in scope\n\
    \            count += countDigit(i, 7)\n                     ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n < 0 {\n        return 0\n    }\n    if n < 10 {\n  \
    \      return n == 7 ? 1 : 0\n    }\n    let max_7 = n / 10\n    let max_77 =\
    \ n / 100\n    let max_777 = n / 1000\n    let max_7777 = n / 10000\n    let all_7\
    \ = max_7 + max_77 + max_777 + max_7777\n    let min_7 = max_7 + max_77 + max_777\n\
    \    let min_77 = max_77 + max_777\n    let min_777 = max_777\n    let last_n\
    \ = n % 10\n    let last_nn = n % 100\n    let last_nnn = n % 1000\n    let last_nnnn\
    \ = n % 10000\n    let last_n_7 = last_n / 7\n    let last_nn_7 = last_nn / 7\n\
    \    let last_nnn_7 = last_nnn / 7\n    let last_nnnn_7 = last_nnnn / 7\n    var\
    \ min_7_excludes = 0\n    if last_n > 7 {\n        min_7_excludes += last_n_7\n\
    \    }\n    if last_nn > 77 {\n        min_7_excludes += last_nn_7\n    }\n  \
    \  if last_nnn > 777 {\n        min_7_excludes += last_nnn_7\n    }\n    if last_nnnn\
    \ > 7777 {\n        min_7_excludes += last_nnnn_7\n    }\n    var min_77_excludes\
    \ = 0\n    if last_nn > 77 {\n        min_77_excludes += last_nn_7\n    }\n  \
    \  if last_nnn > 777 {\n        min_77_excludes += last_nnn_7\n    }\n    if last_nnnn\
    \ > 7777 {\n        min_77_excludes += last_nnnn_7\n    }\n    var min_777_excludes\
    \ = 0\n    if last_nnn > 777 {\n        min_777_excludes += last_nnn_7\n    }\n\
    \    if last_nnnn > 7777 {\n        min_777_\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpdyv6p1y9.swift:83:37: error: expected '}' at end of brace statement\n\
    assert(fizz_buzz(n: 100000) == 8026)\n                                    ^\n\
    /tmp/tmpdyv6p1y9.swift:9:31: note: to match this opening '{'\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n                              ^\n/tmp/tmpdyv6p1y9.swift:60:9:\
    \ error: cannot find 'min_777_' in scope\n        min_777_\n        ^~~~~~~~\n\
    /tmp/tmpdyv6p1y9.swift:64:6: error: operator functions can only be declared at\
    \ global or in type scope\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n     ^\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return (0..<n).map { n -> Int in\n        if n % 11 == 0\
    \ || n % 13 == 0 {\n            return n.description.characters.filter { $0 ==\
    \ \"7\" }.count\n        }\n        return 0\n    }.reduce(0, +)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpx_kpxco1.swift:12:34: error: 'characters' is unavailable: Please\
    \ use String directly\n            return n.description.characters.filter { $0\
    \ == \"7\" }.count\n                                 ^~~~~~~~~~\nSwift.String:5:16:\
    \ note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String\
    \ { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for i in 1..<n {\n        if (i % 11\
    \ == 0 || i % 13 == 0) && i.contains(7) {\n            result += 1\n        }\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpkbhoxlx4.swift:12:46: error: value of type 'Int' has no member\
    \ 'contains'\n        if (i % 11 == 0 || i % 13 == 0) && i.contains(7) {\n   \
    \                                        ~ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 0...n {\n        if i%11 == 0\
    \ || i%13 == 0 {\n            var array = Array(String(i))\n            for each\
    \ in array {\n                if each == \"7\" {\n                    count +=\
    \ 1\n                }\n            }\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp332x526o/tmp332x526o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6c1a70c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6c1767b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6c1767988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6c17667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp332x526o                        0x0000562b433d3843 <unavailable> + 6211

    5    libc.so.6                          0x00002ae6c1c5c460 __libc_start_main +
    245

    6    tmp332x526o                        0x0000562b433d3479 <unavailable> + 5241

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    // YOUR CODE HERE\n    return 0\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpk64bj2w6/tmpk64bj2w6.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba11d608c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba11d2ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba11d2ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba11d2fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk64bj2w6                        0x0000555728a79233 <unavailable> + 4659

    5    libc.so.6                          0x00002ba11d7f4460 __libc_start_main +
    245

    6    tmpk64bj2w6                        0x0000555728a78e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let n_as_string = String(n)\n    var count = 0\n    for c\
    \ in n_as_string {\n        if c == \"7\" {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp80njs2dw/tmp80njs2dw.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fef969c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fef660b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fef660988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fef65f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp80njs2dw                        0x0000561b5328f4a3 <unavailable> + 5283

    5    libc.so.6                          0x00002b4fefb55460 __libc_start_main +
    245

    6    tmp80njs2dw                        0x0000561b5328f0d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1...n-1 {\n        if (i % 11\
    \ == 0 || i % 13 == 0) && String(i).contains(\"7\") {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpran03d0v/tmpran03d0v.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe3d509c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe3d200b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe3d200988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe3d1ff7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpran03d0v                        0x000055bd387d5633 <unavailable> + 5683

    5    libc.so.6                          0x00002abe3d6f5460 __libc_start_main +
    245

    6    tmpran03d0v                        0x000055bd387d5269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 0...n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            count += occurrences(of: \"7\", in: String(i))\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp5k22yis2.swift:13:22: error: cannot find 'occurrences' in scope\n\
    \            count += occurrences(of: \"7\", in: String(i))\n                \
    \     ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n-1 {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            var stringNumber = String(number)\n\
    \            for digit in stringNumber {\n                if digit == \"7\" {\n\
    \                    count += 1\n                }\n            }\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var total = 0\n    for i in 0..<n {\n        let lastdigit\
    \ = i % 10\n        let firstdigit = i / 10\n        if lastdigit == 7 {\n   \
    \         total += 1\n        }\n        if i % 11 == 0 || i % 13 == 0 {\n   \
    \         if firstdigit == 7 {\n                total += 1\n            }\n  \
    \      }\n    }\n    return total\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpaw5gcx2q/tmpaw5gcx2q.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ef968ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ef9381b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ef9381988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ef93807b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaw5gcx2q                        0x000056038dcbc338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3ef9876460 __libc_start_main +
    245

    6    tmpaw5gcx2q                        0x000056038dcbbfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if ((i % 11\
    \ == 0) || (i % 13 == 0)) && (i % 7 == 0) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpbrosvylj/tmpbrosvylj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acded4fdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acded1f4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acded1f4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acded1f37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrosvylj                        0x00005555ab0ca3b3 <unavailable> + 5043

    5    libc.so.6                          0x00002acded6e9460 __libc_start_main +
    245

    6    tmpbrosvylj                        0x00005555ab0c9fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    let n = n\n    var index = 7\n    while\
    \ index < n {\n        if index % 11 == 0 || index % 13 == 0 {\n            var\
    \ temp = index\n            while temp > 0 {\n                let digit = temp\
    \ % 10\n                if digit == 7 {\n                    result += 1\n   \
    \             }\n                temp /= 10\n            }\n        }\n      \
    \  index += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var sevenCount = 0\n    for i in 1..<n {\n        if i %\
    \ 11 == 0 || i % 13 == 0 {\n            let seven = i.description.filter(\"7\"\
    ==)\n            sevenCount += seven.count\n        }\n    }\n    return sevenCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpgwdzcxkl.swift:13:49: error: '==' is not a postfix unary operator\n\
    \            let seven = i.description.filter(\"7\"==)\n                     \
    \                           ^\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            let str = String(i)\n            for c in str\
    \ {\n                if c == \"7\" {\n                    result += 1\n      \
    \          }\n            }\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            var i = i\n            while i > 0 {\n     \
    \           if i % 10 == 7 {\n                    count += 1\n               \
    \ }\n                i /= 10\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n  return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwjcqi0kz/tmpwjcqi0kz.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba893449c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba893140b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba893140988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba89313f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwjcqi0kz                        0x0000562871c06233 <unavailable> + 4659

    5    libc.so.6                          0x00002ba893635460 __libc_start_main +
    245

    6    tmpwjcqi0kz                        0x0000562871c05e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1..<n {\n        if (num %\
    \ 11 == 0 || num % 13 == 0) && String(num).contains(\"7\") {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmptcaehxtl/tmptcaehxtl.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af3aba0fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af3ab706b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af3ab706988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af3ab7057b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptcaehxtl                        0x000055c4a133a633 <unavailable> + 5683

    5    libc.so.6                          0x00002af3abbfb460 __libc_start_main +
    245

    6    tmptcaehxtl                        0x000055c4a133a269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n < 10 {\n        return 0\n    }\n    if n < 100 {\n\
    \        if n % 11 == 0 || n % 13 == 0 {\n            return n % 10 == 7 ? 1 :\
    \ 0\n        }\n        return 0\n    }\n    if n < 1000 {\n        return fizz_buzz(n:\
    \ n / 10) + fizz_buzz(n: n % 10)\n    }\n    return fizz_buzz(n: n / 10) + fizz_buzz(n:\
    \ n % 100)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp5ah4m3qq/tmp5ah4m3qq.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b10f68d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b10f65ceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b10f65ce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b10f65cd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ah4m3qq                        0x000055c6a8a462c3 <unavailable> + 4803

    5    libc.so.6                          0x00002b10f6ac3460 __libc_start_main +
    245

    6    tmp5ah4m3qq                        0x000055c6a8a45ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count: Int = 0\n    for i in 1..<n {\n        if (i %\
    \ 11 == 0 || i % 13 == 0) && i.containsDigit(digit: 7) {\n            count +=\
    \ 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpsbzwhj6c.swift:12:46: error: value of type 'Int' has no member\
    \ 'containsDigit'\n        if (i % 11 == 0 || i % 13 == 0) && i.containsDigit(digit:\
    \ 7) {\n                                           ~ ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            count += number_of_sevens(n: i)\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp8r26l8v5.swift:13:22: error: cannot find 'number_of_sevens' in\
    \ scope\n            count += number_of_sevens(n: i)\n                     ^~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 0...n {\n        if (i % 11 ==\
    \ 0 || i % 13 == 0) && is_digit_of(digit: 7, num: i) {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxn25v8yr.swift:12:44: error: cannot find 'is_digit_of' in scope\n\
    \        if (i % 11 == 0 || i % 13 == 0) && is_digit_of(digit: 7, num: i) {\n\
    \                                           ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var cnt = 0\n    for i in 1..<n {\n        if i % 11 == 0\
    \ || i % 13 == 0 {\n            var x = i\n            while x > 0 {\n       \
    \         if x % 10 == 7 {\n                    cnt += 1\n                }\n\
    \                x /= 10\n            }\n        }\n    }\n    return cnt\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n  var ret = 0\n  let n = n - 1\n  ret += n / 7\n  ret -= n /\
    \ 11\n  ret -= n / 13\n  ret += n / (11 * 13)\n  ret += n / (7 * 11)\n  ret +=\
    \ n / (7 * 13)\n  ret -= n / (7 * 11 * 13)\n  return ret\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpampj6cgi/tmpampj6cgi.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad398d2bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad398a22b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad398a22988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad398a217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpampj6cgi                        0x000055ee38d752c3 <unavailable> + 4803

    5    libc.so.6                          0x00002ad398f17460 __libc_start_main +
    245

    6    tmpampj6cgi                        0x000055ee38d74ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if (i % 11 ==\
    \ 0 || i % 13 == 0) && String(i).contains(\"7\") {\n            count += 1\n \
    \       }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpxjyvvgtb/tmpxjyvvgtb.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5645cb4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b56459abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b56459ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b56459aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxjyvvgtb                        0x000056033715f633 <unavailable> + 5683

    5    libc.so.6                          0x00002b5645ea0460 __libc_start_main +
    245

    6    tmpxjyvvgtb                        0x000056033715f269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1...n {\n        if (i % 11 ==\
    \ 0 || i % 13 == 0) && digit_counts(n: i)[7]! > 0 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpf8ofin9h.swift:12:44: error: cannot find 'digit_counts' in scope\n\
    \        if (i % 11 == 0 || i % 13 == 0) && digit_counts(n: i)[7]! > 0 {\n   \
    \                                        ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1...n {\n        if divisible(i,\
    \ 11) || divisible(i, 13) {\n            count += count_7s(i)\n        }\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpks_qncap.swift:12:12: error: cannot find 'divisible' in scope\n\
    \        if divisible(i, 11) || divisible(i, 13) {\n           ^~~~~~~~~\n/tmp/tmpks_qncap.swift:12:32:\
    \ error: cannot find 'divisible' in scope\n        if divisible(i, 11) || divisible(i,\
    \ 13) {\n                               ^~~~~~~~~\n/tmp/tmpks_qncap.swift:13:22:\
    \ error: cannot find 'count_7s' in scope\n            count += count_7s(i)\n \
    \                    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 0..<n {\n        if (i % 11 ==\
    \ 0 || i % 13 == 0) && i % 10 == 7 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp08x5ktuk/tmp08x5ktuk.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b36823f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b36820efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b36820ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b36820ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp08x5ktuk                        0x000055dd1dad03b3 <unavailable> + 5043

    5    libc.so.6                          0x00002b36825e4460 __libc_start_main +
    245

    6    tmp08x5ktuk                        0x000055dd1dacffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            count += String(i).filter{ String($0) == \"\
    7\" }.count\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    \n    var count = 0\n    \n    for i in 1...n {\n       \
    \ if i % 11 == 0 || i % 13 == 0 {\n            if i.description.contains(\"7\"\
    ) {\n                count += 1\n            }\n        }\n    }\n    \n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpi0cox0bh/tmpi0cox0bh.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2f4fa43c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2f4f73ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2f4f73a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2f4f7397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi0cox0bh                        0x00005616ace7167e <unavailable> + 5758

    5    libc.so.6                          0x00002b2f4fc2f460 __libc_start_main +
    245

    6    tmpi0cox0bh                        0x00005616ace71239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count: Int = 0\n    for i in 1..<n {\n        if i %\
    \ 11 == 0 || i % 13 == 0 {\n            count += num_sevens(n: i)\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpd0qka7c9.swift:13:22: error: cannot find 'num_sevens' in scope\n\
    \            count += num_sevens(n: i)\n                     ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var k = 0\n    for i in 1..<n {\n        if i % 11 == 0 ||\
    \ i % 13 == 0 {\n            var x = i\n            while x > 0 {\n          \
    \      if x % 10 == 7 {\n                    k += 1\n                }\n     \
    \           x /= 10\n            }\n        }\n    }\n    return k\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013899
- exit_code: -1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let search = 7\n    var count = 0\n    var modulus = 0\n\
    \    var current = 0\n    var i = 0\n    while current < n {\n        if i > 0\
    \ {\n            modulus = (modulus + 11) % n\n            current = modulus\n\
    \        }\n        for digit in String(current) {\n            if digit == Character(String(search))\
    \ {\n                count += 1\n            }\n        }\n        i += 1\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660013904
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    // Your code here\n    var count = 0\n    for number in 11...n\
    \ {\n        if number % 11 == 0 || number % 13 == 0 {\n            let s = String(number)\n\
    \            for character in s {\n                if character == \"7\" {\n \
    \                   count += 1\n                }\n            }\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpiol9esey/tmpiol9esey.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aecdf188c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aecdee7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aecdee7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aecdee7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiol9esey                        0x00005562918fd623 <unavailable> + 5667

    5    libc.so.6                          0x00002aecdf374460 __libc_start_main +
    245

    6    tmpiol9esey                        0x00005562918fd259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for x in 1...n {\n        if x % 11 ==\
    \ 0 || x % 13 == 0 {\n            result += String(x).filter { String($0) == \"\
    7\" }.count\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmprnrbeto1/tmprnrbeto1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b11a3ab0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b11a37a7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b11a37a7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b11a37a67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprnrbeto1                        0x0000556b9d43f6d3 <unavailable> + 5843

    5    libc.so.6                          0x00002b11a3c9c460 __libc_start_main +
    245

    6    tmprnrbeto1                        0x0000556b9d43f309 <unavailable> + 4873

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            count += count_sevens(n: i)\n        }\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpjzdpqmsm.swift:13:22: error: cannot find 'count_sevens' in scope\n\
    \            count += count_sevens(n: i)\n                     ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    // TODO: Write this function\n    return 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpy45i5gdz/tmpy45i5gdz.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61cf5a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61cf297b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61cf297988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61cf2967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy45i5gdz                        0x00005558d500d233 <unavailable> + 4659

    5    libc.so.6                          0x00002b61cf78c460 __libc_start_main +
    245

    6    tmpy45i5gdz                        0x00005558d500ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for i in 0...n-1 {\n        if (i % 11\
    \ == 0 || i % 13 == 0) && i % 7 == 0 {\n            result += 1\n        }\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpl4wapnj_/tmpl4wapnj_.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6010975c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b601066cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b601066c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b601066b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl4wapnj_                        0x000055a540102338 <unavailable> + 4920

    5    libc.so.6                          0x00002b6010b61460 __libc_start_main +
    245

    6    tmpl4wapnj_                        0x000055a540101fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            let s = String(i)\n            for c in s {\n\
    \                if c == \"7\" {\n                    count += 1\n           \
    \     }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013789
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n < 1 {\n        return 0\n    }\n    var count = 0\n\
    \    for i in 1..<n {\n        if (i % 11 == 0 || i % 13 == 0) && i.contains(digit:\
    \ 7) {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp49n_nbg8.swift:15:46: error: value of type 'Int' has no member\
    \ 'contains'\n        if (i % 11 == 0 || i % 13 == 0) && i.contains(digit: 7)\
    \ {\n                                           ~ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1...n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            if i.digits.contains(7) {\n                count\
    \ += 1\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp76zxahzk.swift:13:18: error: value of type 'Int' has no member\
    \ 'digits'\n            if i.digits.contains(7) {\n               ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 0..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            let str = String(i)\n            for c in str\
    \ {\n                if c == \"7\" {\n                    count += 1\n       \
    \         }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013789
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 11 == 0\
    \ || i % 13 == 0 {\n            sum += number_of_7(n: i)\n        }\n    }\n \
    \   return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpr36gtr_2.swift:13:20: error: cannot find 'number_of_7' in scope\n\
    \            sum += number_of_7(n: i)\n                   ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    assert(n > 1)\n    var num_sevens = 0\n    for n in stride(from:\
    \ n, to: 1, by: -1) {\n        if n % 11 == 0 || n % 13 == 0 {\n            num_sevens\
    \ += num_sevens_in_number(n: n)\n        }\n    }\n    return num_sevens\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpx4_ff6n3.swift:14:27: error: cannot find 'num_sevens_in_number'\
    \ in scope\n            num_sevens += num_sevens_in_number(n: n)\n           \
    \               ^~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1...n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            count += check_digit(n: i, digit: 7)\n     \
    \   }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpi2m0mtzv.swift:13:22: error: cannot find 'check_digit' in scope\n\
    \            count += check_digit(n: i, digit: 7)\n                     ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 0..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            let s = String(i)\n            for c in s {\n\
    \                if c == \"7\" {\n                    count += 1\n           \
    \     }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let multiplesOf11and13 = (11...n).filter { $0 % 11 == 0 ||\
    \ $0 % 13 == 0 }\n    return multiplesOf11and13.reduce(0) { $0 + $1.description.filter\
    \ { $0 == \"7\" }.count }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpiw7agaas/tmpiw7agaas.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b554d59bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b554d292b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b554d292988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b554d2917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiw7agaas                        0x00005625c4925723 <unavailable> + 5923

    5    libc.so.6                          0x00002b554d787460 __libc_start_main +
    245

    6    tmpiw7agaas                        0x00005625c4925359 <unavailable> + 4953

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let fizz = 11\n    let buzz = 13\n    let fizzbuzz = fizz\
    \ * buzz\n    let limit = n / fizzbuzz\n    let inbuzz = (n - limit * fizzbuzz)\
    \ / buzz\n    let inbuzzrem = (n - limit * fizzbuzz) % buzz\n    let infizz =\
    \ (n - inbuzz * buzz) / fizz\n    let infizzrem = (n - inbuzz * buzz) % fizz\n\
    \    let nrem = n % fizzbuzz\n    let nbuzz = nrem / buzz\n    let nbuzzrem =\
    \ nrem % buzz\n    let nfizz = nrem / fizz\n    let nfizzrem = nrem % fizz\n \
    \   let seven = 7\n    let digits = 10\n    let digit_7 = digits / seven\n   \
    \ let digit_9 = digits / nine\n    let digit_11 = digits / eleven\n    let digit_13\
    \ = digits / thirteen\n    let digit_77 = digits / (seven * seven)\n    let digit_99\
    \ = digits / (nine * nine)\n    let digit_111 = digits / (eleven * eleven)\n \
    \   let digit_133 = digits / (thirteen * thirteen)\n    var sum = 0\n    for i\
    \ in 1...limit {\n        sum += digit_7 * (i - 1) * fizzbuzz + digit_9 * (i -\
    \ 1) * fizzbuzz\n        if i <= inbuzz {\n            sum += digit_7 * i * buzz\
    \ + digit_11 * i * buzz\n        }\n        if i <= infizz {\n            sum\
    \ += digit_7 * i * fizz + digit_13 * i * fizz\n        }\n        if i <= nbuzz\
    \ {\n            sum += digit_7 * (i + limit * fizzbuzz) + digit_11 * (i + limit\
    \ * fizzbuzz)\n        }\n        if i <= nfizz {\n            sum += digit_7\
    \ * (i + inbuzz * buzz) + digit_13 * (i + inbuzz * buzz)\n        }\n    }\n \
    \   sum += digit_7 * nbuzzrem + digit_11 * nbuzzrem\n    sum += digit_7\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp027kjetu.swift:26:28: error: cannot find 'nine' in scope\n    let\
    \ digit_9 = digits / nine\n                           ^~~~\n/tmp/tmp027kjetu.swift:27:29:\
    \ error: cannot find 'eleven' in scope\n    let digit_11 = digits / eleven\n \
    \                           ^~~~~~\n/tmp/tmp027kjetu.swift:28:29: error: cannot\
    \ find 'thirteen' in scope\n    let digit_13 = digits / thirteen\n           \
    \                 ^~~~~~~~\n/tmp/tmp027kjetu.swift:30:30: error: cannot find 'nine'\
    \ in scope\n    let digit_99 = digits / (nine * nine)\n                      \
    \       ^~~~\n/tmp/tmp027kjetu.swift:30:37: error: cannot find 'nine' in scope\n\
    \    let digit_99 = digits / (nine * nine)\n                                 \
    \   ^~~~\n/tmp/tmp027kjetu.swift:30:27: error: binary operator '/' cannot be applied\
    \ to operands of type 'Int' and 'Duration'\n    let digit_99 = digits / (nine\
    \ * nine)\n                   ~~~~~~ ^ ~~~~~~~~~~~~~\n/tmp/tmp027kjetu.swift:30:27:\
    \ note: overloads for '/' exist with these partially matching parameter lists:\
    \ (Duration, Duration), (Int, Int)\n    let digit_99 = digits / (nine * nine)\n\
    \                          ^\n/tmp/tmp027kjetu.swift:31:31: error: cannot find\
    \ 'eleven' in scope\n    let digit_111 = digits / (eleven * eleven)\n        \
    \                      ^~~~~~\n/tmp/tmp027kjetu.swift:31:40: error: cannot find\
    \ 'eleven' in scope\n    let digit_111 = digits / (eleven * eleven)\n        \
    \                               ^~~~~~\n/tmp/tmp027kjetu.swift:31:28: error: binary\
    \ operator '/' cannot be applied to operands of type 'Int' and 'Duration'\n  \
    \  let digit_111 = digits / (eleven * eleven)\n                    ~~~~~~ ^ ~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp027kjetu.swift:31:28: note: overloads for '/' exist with these partially\
    \ matching parameter lists: (Duration, Duration), (Int, Int)\n    let digit_111\
    \ = digits / (eleven * eleven)\n                           ^\n/tmp/tmp027kjetu.swift:32:31:\
    \ error: cannot find 'thirteen' in scope\n    let digit_133 = digits / (thirteen\
    \ * thirteen)\n                              ^~~~~~~~\n/tmp/tmp027kjetu.swift:32:42:\
    \ error: cannot "
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    var sum = 0\n \
    \   var previousInt = 0\n    var remaining = n\n    while remaining > 0 {\n  \
    \      let digit = remaining % 10\n        if digit == 7 {\n            sum +=\
    \ 1\n        }\n        remaining /= 10\n        let int = previousInt * 10 +\
    \ digit\n        if int % 11 == 0 || int % 13 == 0 {\n            sum += fizz_buzz(n:\
    \ int)\n        }\n        previousInt = int\n    }\n    return sum\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpkk2k8nqv/tmpkk2k8nqv.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c0cce3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c0c9dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c0c9da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c0c9d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkk2k8nqv                        0x0000555576b702c3 <unavailable> + 4803

    5    libc.so.6                          0x00002b2c0cecf460 __libc_start_main +
    245

    6    tmpkk2k8nqv                        0x0000555576b6fef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var c = 0\n    for i in 1..<n {\n        if i % 11 == 0 ||\
    \ i % 13 == 0 {\n            var j = i\n            while j > 0 {\n          \
    \      if j % 10 == 7 {\n                    c += 1\n                }\n     \
    \           j /= 10\n            }\n        }\n    }\n    return c\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013899
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            let s = String(i)\n            for c in s {\n\
    \                if c == \"7\" {\n                    count += 1\n           \
    \     }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            var i = i\n            while i > 0 {\n     \
    \           if i % 10 == 7 {\n                    count += 1\n               \
    \ }\n                i /= 10\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013899
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            let str = String(i)\n            for char in\
    \ str {\n                if char == \"7\" {\n                    count += 1\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var output = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            if i % 100 == 77 {\n                output +=\
    \ 2\n            } else if i % 10 == 7 {\n                output += 1\n      \
    \      }\n        }\n    }\n    return output\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpqfn7qy96/tmpqfn7qy96.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aca6e8ecc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aca6e5e3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aca6e5e3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aca6e5e27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqfn7qy96                        0x000055fea674342e <unavailable> + 5166

    5    libc.so.6                          0x00002aca6ead8460 __libc_start_main +
    245

    6    tmpqfn7qy96                        0x000055fea6742fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    // your code here\n    return 0\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpys585100/tmpys585100.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b26f1429c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b26f1120b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b26f1120988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b26f111f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpys585100                        0x0000556cfc115233 <unavailable> + 4659

    5    libc.so.6                          0x00002b26f1615460 __libc_start_main +
    245

    6    tmpys585100                        0x0000556cfc114e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1...n-1 {\n        if (i % 11\
    \ == 0 || i % 13 == 0) && String(i).contains(\"7\") {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpran03d0v/tmpran03d0v.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe3d509c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe3d200b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe3d200988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe3d1ff7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpran03d0v                        0x000055bd387d5633 <unavailable> + 5683

    5    libc.so.6                          0x00002abe3d6f5460 __libc_start_main +
    245

    6    tmpran03d0v                        0x000055bd387d5269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    \n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpfhy4cgon/tmpfhy4cgon.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd7738ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd77085b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd77085988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd770847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfhy4cgon                        0x0000557b03781233 <unavailable> + 4659

    5    libc.so.6                          0x00002abd7757a460 __libc_start_main +
    245

    6    tmpfhy4cgon                        0x0000557b03780e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var cnt = 0\n    for i in 1..<n {\n        if i % 11 == 0\
    \ || i % 13 == 0 {\n            let numstr = String(i)\n            for j in numstr\
    \ {\n                if j == \"7\" {\n                    cnt += 1\n         \
    \       }\n            }\n        }\n    }\n    return cnt\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013899
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        let str = String(i)\n\
    \        if i % 11 == 0 || i % 13 == 0 {\n            for j in str {\n       \
    \         if j == \"7\" {\n                    count += 1\n                }\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    func is_multiple(n: Int, of: Int) -> Bool {\n        return\
    \ n % of == 0\n    }\n    \n    func digit_counter(number: Int, digit: Int) ->\
    \ Int {\n        var count = 0\n        var n = number\n        while n > 0 {\n\
    \            if n % 10 == digit {\n                count += 1\n            }\n\
    \            n /= 10\n        }\n        return count\n    }\n    \n    func find_multiples(n:\
    \ Int, of: Int) -> [Int] {\n        var multiples = [Int]()\n        for i in\
    \ 1...n {\n            if is_multiple(n: i, of: of) {\n                multiples.append(i)\n\
    \            }\n        }\n        return multiples\n    }\n    \n    var sum\
    \ = 0\n    let candidates = find_multiples(n: n, of: 11) + find_multiples(n: n,\
    \ of: 13)\n    for i in candidates {\n        sum += digit_counter(number: i,\
    \ digit: 7)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmp_fgo0zjk/tmp_fgo0zjk.swift:58: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6a21e99c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6a21b90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6a21b90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6a21b8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_fgo0zjk                        0x0000562b316a7673 <unavailable> + 5747

    5    libc.so.6                          0x00002b6a22085460 __libc_start_main +
    245

    6    tmp_fgo0zjk                        0x0000562b316a72a9 <unavailable> + 4777

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 0..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            count += String(i).filter{$0 == \"7\"}.count\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            count += number_of_7s(i)\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpq9rd9mv6.swift:13:22: error: cannot find 'number_of_7s' in scope\n\
    \            count += number_of_7s(i)\n                     ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n < 1 {\n        return 0\n    }\n    var fizz = 0\n \
    \   var buzz = 0\n    var fizz_buzz = 0\n    var fizz_digits = 0\n    var buzz_digits\
    \ = 0\n    var fizz_buzz_digits = 0\n    for i in 1...n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            let string = String(i)\n            let digit_set\
    \ = Set(string)\n            if digit_set.contains(\"7\") {\n                if\
    \ i % 11 == 0 && i % 13 == 0 {\n                    fizz_buzz += 1\n         \
    \           fizz_buzz_digits += string.count\n                } else if i % 11\
    \ == 0 {\n                    fizz += 1\n                    fizz_digits += string.count\n\
    \                } else {\n                    buzz += 1\n                   \
    \ buzz_digits += string.count\n                }\n            }\n        }\n \
    \   }\n    return fizz_digits + buzz_digits + fizz_buzz_digits - fizz * 2 - buzz\
    \ * 2 - fizz_buzz * 3\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpppsquzl3/tmpppsquzl3.swift:54: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5fc19f5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5fc16ecb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5fc16ec988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5fc16eb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpppsquzl3                        0x000055b2a8fb7713 <unavailable> + 5907

    5    libc.so.6                          0x00002b5fc1be1460 __libc_start_main +
    245

    6    tmpppsquzl3                        0x000055b2a8fb7349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    // TODO: Implement me!\n    return 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxj41gbch/tmpxj41gbch.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b020dbbcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b020d8b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b020d8b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b020d8b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxj41gbch                        0x0000556895fe7233 <unavailable> + 4659

    5    libc.so.6                          0x00002b020dda8460 __libc_start_main +
    245

    6    tmpxj41gbch                        0x0000556895fe6e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            count += number_sevens(n: i)\n        }\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpt8fuijd8.swift:13:22: error: cannot find 'number_sevens' in scope\n\
    \            count += number_sevens(n: i)\n                     ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    var i = 0\n    while i < n {\n       \
    \ if i % 11 == 0 || i % 13 == 0 {\n            let s = String(i)\n           \
    \ for c in s {\n                if c == \"7\" {\n                    count +=\
    \ 1\n                }\n            }\n        }\n        i += 1\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013900
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 0...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            if String(number).contains(\"7\"\
    ) {\n                count += 1\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsxwix1ch/tmpsxwix1ch.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6994bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6991b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6991b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6991b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsxwix1ch                        0x000055f52cba96ae <unavailable> + 5806

    5    libc.so.6                          0x00002ac6996aa460 __libc_start_main +
    245

    6    tmpsxwix1ch                        0x000055f52cba9269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1660013900
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    precondition(n > 0)\n    return (1...n).filter {\n      \
    \  $0 % 11 == 0 || $0 % 13 == 0\n    }.reduce(0) {\n        $0 + $1.description.filter\
    \ { $0 == \"7\" }.count\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp5nw6rw5z/tmp5nw6rw5z.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3a0b92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3a0889b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3a0889988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3a08887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5nw6rw5z                        0x00005603c031d723 <unavailable> + 5923

    5    libc.so.6                          0x00002ae3a0d7e460 __libc_start_main +
    245

    6    tmp5nw6rw5z                        0x00005603c031d359 <unavailable> + 4953

    '
  stdout: ''
  timestamp: 1660013900
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            if digit_7(num: i) == 1 {\n                count\
    \ += 1\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp0npd73tm.swift:13:16: error: cannot find 'digit_7' in scope\n \
    \           if digit_7(num: i) == 1 {\n               ^~~~~~~\n"
  stdout: ''
  timestamp: 1660013899
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            let str = String(i)\n            for char in\
    \ str {\n                if char == \"7\" {\n                    count += 1\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013789
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let multiples = [11, 13]\n    var total = 0\n    for i in\
    \ 0..<n {\n        let digit = i % 10\n        if digit == 7 {\n            var\
    \ ok = true\n            for j in multiples {\n                if i % j != 0 {\n\
    \                    ok = false\n                    break\n                }\n\
    \            }\n            if ok {\n                total += 1\n            }\n\
    \        }\n    }\n    return total\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmp6cesc3wr/tmp6cesc3wr.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b80d1925c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b80d161cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b80d161c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b80d161b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6cesc3wr                        0x00005561706ca633 <unavailable> + 5683

    5    libc.so.6                          0x00002b80d1b11460 __libc_start_main +
    245

    6    tmp6cesc3wr                        0x00005561706ca269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1660013900
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 1...n {\n        if i % 11 ==\
    \ 0 || i % 13 == 0 {\n            count += i.to_digit_list().filter { $0 == 7\
    \ }.count\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpgfvdodie.swift:13:24: error: value of type 'Int' has no member\
    \ 'to_digit_list'\n            count += i.to_digit_list().filter { $0 == 7 }.count\n\
    \                     ~ ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013900
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for i in 0..<n {\n        let string =\
    \ String(i)\n        if i % 11 == 0 || i % 13 == 0 {\n            for j in string\
    \ {\n                if j == \"7\" {\n                    count += 1\n       \
    \         }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013900
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n  return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpwjcqi0kz/tmpwjcqi0kz.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba893449c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba893140b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba893140988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba89313f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwjcqi0kz                        0x0000562871c06233 <unavailable> + 4659

    5    libc.so.6                          0x00002ba893635460 __libc_start_main +
    245

    6    tmpwjcqi0kz                        0x0000562871c05e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013899
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    \n    var result = 0\n    \n    for i in 1..<n {\n      \
    \  if (i % 11 == 0 || i % 13 == 0) && String(i).contains(\"7\") {\n          \
    \  result += 1\n        }\n    }\n    \n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp42wml8rj/tmp42wml8rj.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8559b06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85597fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85597fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85597fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp42wml8rj                        0x000055c0d43f2633 <unavailable> + 5683

    5    libc.so.6                          0x00002b8559cf2460 __libc_start_main +
    245

    6    tmp42wml8rj                        0x000055c0d43f2269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1660013900
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp8cyisgy4/tmp8cyisgy4.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5adcaf3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5adc7eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5adc7ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5adc7e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8cyisgy4                        0x0000565201bdb233 <unavailable> + 4659

    5    libc.so.6                          0x00002b5adccdf460 __libc_start_main +
    245

    6    tmp8cyisgy4                        0x0000565201bdae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013789

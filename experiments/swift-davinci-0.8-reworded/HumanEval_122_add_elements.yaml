name: HumanEval_122_add_elements
language: swift
prompt: "\n/// Given a non-empty array of integers arr and an integer k, return\n\
  /// the sum of the elements with at most two digits from the first k elements of\
  \ arr.\n/// Example:\n/// >>> add_elements(arr: [111, 21, 3, 4000, 5, 6, 7, 8, 9],\
  \ k: 4)\n/// 24\n/// Constraints:\n/// 1. 1 <= len(arr) <= 100\n/// 2. 1 <= k <=\
  \ len(arr)\nfunc add_elements(arr: [Int], k: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(add_elements(arr: [1, -2, -3, 41, 57, 76,\
  \ 87, 88, 99], k: 3) == -4)\nassert(add_elements(arr: [111, 121, 3, 4000, 5, 6],\
  \ k: 2) == 0)\nassert(add_elements(arr: [11, 21, 3, 90, 5, 6, 7, 8, 9], k: 4) ==\
  \ 125)\nassert(add_elements(arr: [111, 21, 3, 4000, 5, 6, 7, 8, 9], k: 4) == 24)\n\
  assert(add_elements(arr: [1], k: 1) == 1)"
completions: ["    return arr.prefix(k).reduce(0) {\n        $0 + ($1 < 100 ? $1 :\
    \ 0)\n    }", '    return arr.prefix(k).filter({$0 < 100}).reduce(0, +)', '    return
    0', "    var sum = 0\n    for item in arr[0..<k] {\n        let strArr = String(item).map\
    \ { String($0) }\n        if strArr.count <= 2 {\n            sum += item\n  \
    \      }\n    }\n    return sum", "    var sum = 0\n    for i in 0..<k {\n   \
    \     sum += arr[i] / 100 + (arr[i] % 100) / 10 + arr[i] % 10\n    }\n    return\
    \ sum", "    var sum = 0\n    for index in 0 ..< k {\n        let val = arr[index]\n\
    \        sum += val < 100 ? val : 0\n    }\n    return sum", "    var index =\
    \ 0\n    var sum = 0\n    while index < k {\n        let element = arr[index]\n\
    \        if element < 100 {\n            sum += element\n        }\n        index\
    \ += 1\n    }\n    return sum", "    var sum = 0\n    let sortedArr = arr.sorted()\n\
    \    for i in 0..<k {\n        let number = sortedArr[i]\n        if String(number).count\
    \ > 2 {\n            break\n        }\n        sum += number\n    }\n    return\
    \ sum", "    var total: Int = 0\n    for (index, element) in arr.enumerated()\
    \ {\n        if index == k {\n            break\n        }\n        if element\
    \ > 9 && element < 100 {\n            total += element\n        }\n    }\n   \
    \ return total", "    var sum = 0\n    for i in 0..<k {\n        sum += arr[i]\
    \ < 100 ? arr[i] : 0\n    }\n    return sum", "    let arr_k = Array(arr[0..<k])\n\
    \    var sum = 0\n    for i in arr_k {\n        if i > 9 && i < 100 {\n      \
    \      sum += i\n        }\n    }\n    return sum", "    var sum = 0\n    var\
    \ i = 0\n    while i < k {\n        if arr[i] < 100 {\n            sum += arr[i]\n\
    \        }\n        i += 1\n    }\n    return sum", "    // return 0\n    var\
    \ result = 0\n    var count = 0\n    for num in arr {\n        if count < k {\n\
    \            if num < 10 {\n                result += num\n            } else\
    \ if num < 100 {\n                result += num / 10 + num % 10\n            }\
    \ else {\n                result += 1\n            }\n            count += 1\n\
    \        } else {\n            break\n        }\n    }\n    return result", " \
    \   var sum = 0\n    for i in 0..<k {\n        if let _ = arr[i].description.firstIndex(of:\
    \ \"0\") {\n            continue\n        }\n        if arr[i].description.count\
    \ > 2 {\n            continue\n        }\n        sum += arr[i]\n    }\n    return\
    \ sum", "    guard k < arr.count else { return 0 }\n    let two_digit_numbers\
    \ = arr.filter({ $0 < 100 })\n    let one_digit_numbers = arr.filter({ $0 < 10\
    \ })\n    let remaining_two_digit_numbers = two_digit_numbers.count - k\n    let\
    \ remaining_one_digit_numbers = one_digit_numbers.count - k\n    let result =\
    \ two_digit_numbers.reduce(0, +) + one_digit_numbers.reduce(0, +)\n    return\
    \ result - (remaining_two_digit_numbers * 99) - (remaining_one_digit_numbers *\
    \ 9)", "    var sum = 0\n    var temp_sum = 0\n    var max = arr[0]\n    var highest_idx\
    \ = 0\n    for i in 0..<k {\n        temp_sum += arr[i]\n        if arr[i] > max\
    \ {\n            max = arr[i]\n            highest_idx = i\n        }\n    }\n\
    \    sum = temp_sum\n    for i in k..<arr.count {\n        temp_sum -= arr[i -\
    \ k]\n        temp_sum += arr[i]\n        if arr[i] > max {\n            max =\
    \ arr[i]\n            highest_idx = i\n        }\n        if (temp_sum - max)\
    \ > sum {\n            sum = temp_sum - max\n        }\n    }\n    return sum",
  "  var sum = 0\n  for i in 0..<k {\n    if arr[i] < 10 {\n      sum += arr[i]\n\
    \    } else if arr[i] < 100 {\n      sum += arr[i] / 10 + arr[i] % 10\n    }\n\
    \  }\n  return sum", "    var arr = arr\n    arr.sort()\n    return arr.prefix(k).filter({abs($0)\
    \ < 100}).reduce(0, +)", "    let firstK = arr[0..<k]\n    let twoDigits = firstK.filter({$0\
    \ < 100})\n    return twoDigits.reduce(0, +)", "    var sum = 0\n    var count\
    \ = 0\n    var i = 0\n    while count < k {\n        if arr[i] < 100 {\n     \
    \       sum += arr[i]\n            count += 1\n        }\n        i += 1\n   \
    \ }\n    return sum", '    return 0', '    return 0', '    return arr.prefix(k).filter({
    $0 < 100 }).reduce(0, +)', "    // Your code here\n    var sum = 0\n    var counter\
    \ = 0\n    for a in arr {\n        if a > 9 && a < 100 {\n            sum += a\n\
    \            counter += 1\n        }\n        if counter == k {\n            break\n\
    \        }\n    }\n    return sum", "    var arr = arr\n    arr.sort()\n    var\
    \ res = 0\n    for i in 0..<k {\n        if arr[i] > 99 {\n            continue\n\
    \        }\n        res += arr[i]\n    }\n    return res", "    var sum = 0\n\
    \    for number in arr {\n        if 0 <= number && number <= 99 {\n         \
    \   sum += number\n        }\n        if k == 0 {\n            break\n       \
    \ }\n        k -= 1\n    }\n    return sum", "    var sum = 0\n    for num in\
    \ arr {\n        if num <= 99 {\n            sum += num\n        }\n        k\
    \ -= 1\n        if k == 0 {\n            break\n        }\n    }\n    return sum",
  "    var value = 0\n    for num in arr {\n        if num.is_two_digit() {\n    \
    \        value += num\n        }\n    }\n    return value", "    var result =\
    \ 0\n    for i in 0 ..< k {\n        if 0 <= arr[i] && arr[i] <= 99 {\n      \
    \      result += arr[i]\n        }\n    }\n    return result", "    var sum =\
    \ 0\n    for (index, element) in arr.enumerated() {\n        if index == k {\n\
    \            break\n        }\n        if element > 99 {\n            continue\n\
    \        }\n        sum += element\n    }\n    return sum", "    let max_count:\
    \ Int = 100\n    let new_arr: [Int] = arr.filter({ (num: Int) -> Bool in\n   \
    \     return num < max_count\n    })\n    let sub_arr: [Int] = Array(new_arr[0..<k])\n\
    \    return sub_arr.reduce(0, +)", "  var res = 0\n  for num in arr[0..<k] {\n\
    \    res += num / 100 > 0 ? (num / 100) * 100 : num\n  }\n  return res", "   \
    \ var sum = 0\n    for i in 0..<k {\n        if arr[i] < 100 {\n            sum\
    \ += arr[i]\n        }\n    }\n    return sum", "    var res = 0\n    var i =\
    \ 0\n    while i < k {\n        if arr[i] > 9 && arr[i] < 100 {\n            res\
    \ += arr[i]\n        }\n        i += 1\n    }\n    return res", "    var sum =\
    \ 0\n    for num in arr[0..<k] {\n        if num < 100 {\n            sum += num\n\
    \        }\n    }\n    return sum", '    return arr.filter { $0 < 100 }.prefix(k).reduce(0,
    +)', "    var sum = 0\n    var i = 0\n    while i < k {\n        if arr[i] < 100\
    \ {\n            sum += arr[i]\n        }\n        i += 1\n    }\n    return sum",
  "    var arr = arr\n    arr.sort()\n    var res = 0\n    for i in 0..<k {\n    \
    \    if arr[i] > 99 {\n            continue\n        }\n        res += arr[i]\n\
    \    }\n    return res", "    var sum = 0\n    for i in 0..<k {\n        if arr[i]\
    \ < 100 {\n            sum += arr[i]\n        }\n    }\n    return sum", "   \
    \ var sum = 0\n    var k = k\n    for el in arr {\n        if el < 100 && k >\
    \ 0 {\n            sum += el\n            k -= 1\n        } else if k > 0 {\n\
    \            k -= 1\n        }\n    }\n    return sum", "    var sum = 0\n   \
    \ for i in 0..<k {\n        let digits = number_of_digits(num: arr[i])\n     \
    \   if digits <= 2 {\n            sum += arr[i]\n        }\n    }\n    return\
    \ sum", "    var k = k\n    var sum = 0\n    for el in arr {\n        if el <\
    \ 10 || el < 100 {\n            sum += el\n            k -= 1\n        }\n   \
    \     if k == 0 {\n            break\n        }\n    }\n    return sum", '    return
    arr[0..<k].filter({ $0 < 100 }).reduce(0, +)', '    return arr.reduce(0, { $0
    + (($1 >= 100) ? 0 : $1) })', "    var sum = 0\n    for i in 0..<k {\n       \
    \ if arr[i] > 9 && arr[i] < 100 {\n            sum += arr[i]\n        }\n    }\n\
    \    return sum", "    var sum = 0\n    for i in 0..<k {\n        let s = String(arr[i])\n\
    \        if s.count <= 2 {\n            sum += arr[i]\n        }\n    }\n    return\
    \ sum", "    var sum = 0\n    for i in 0..<k {\n        if arr[i] < 100 {\n  \
    \          sum += arr[i]\n        }\n    }\n    return sum", "    var sum = 0\n\
    \    for i in 0..<k {\n        let x = arr[i]\n        if (x >= 0 && x < 10) ||\
    \ (x >= -9 && x < 0) {\n            sum += x\n        }\n    }\n    return sum",
  '    return 0', '    return arr.prefix(k).reduce(0) { $0 + ($1 > 99 ? 0 : $1) }',
  "    var sum = 0\n    for i in 0..<k {\n        if arr[i] >= 10 && arr[i] < 100\
    \ {\n            sum += arr[i]\n        }\n    }\n    return sum", "    var sum\
    \ = 0\n    var index = 0\n    while sum < 100, index < k {\n        let element\
    \ = arr[index]\n        if element < 100 {\n            sum += element\n     \
    \   }\n        index += 1\n    }\n    return sum", "    var result = 0\n    for\
    \ i in 0..<k {\n        result += arr[i] < 100 ? arr[i] : 0\n    }\n    return\
    \ result", "    var sum = 0\n    for i in 0..<k {\n        if arr[i] < 100 {\n\
    \            sum += arr[i]\n        }\n    }\n    return sum", "    guard k <=\
    \ arr.count else { return 0 }\n    var r = 0\n    for i in 0..<k {\n        r\
    \ += arr[i] / 100 > 0 ? (arr[i] / 100 + 1) * 100 : arr[i]\n    }\n    return r",
  '    return 0', "    var result = 0\n    for (index, number) in arr.enumerated()\
    \ {\n        if index < k {\n            if number < 100 {\n                result\
    \ += number\n            }\n        }\n    }\n    return result", "    var result\
    \ = 0\n    var index = 0\n    while index < k && index < arr.count {\n       \
    \ if arr[index] < 10 {\n            result += arr[index]\n        } else if arr[index]\
    \ < 100 {\n            result += arr[index] / 10 + arr[index] % 10\n        }\
    \ else {\n            result += arr[index] / 100 + (arr[index] % 100) / 10 + arr[index]\
    \ % 10\n        }\n        index += 1\n    }\n    return result", "    var sum\
    \ = 0\n    var k = k\n    for i in 0..<arr.count {\n        if arr[i] > 99 {\n\
    \            continue\n        }\n        if k == 0 {\n            break\n   \
    \     }\n        sum += arr[i]\n        k -= 1\n    }\n    return sum", "  let\
    \ sum = arr.lazy.filter { $0 < 100 }.prefix(k).reduce(0, +)\n  return sum", " \
    \   var total = 0\n    var k = k\n    for i in 0..<arr.count {\n        if arr[i]\
    \ >= 10 && arr[i] < 100 {\n            total += arr[i]\n            k -= 1\n \
    \       }\n        if k == 0 {\n            break\n        }\n    }\n    return\
    \ total", "    var sum = 0\n    for i in 0..<arr.count {\n        if i == k {\
    \ break }\n        if arr[i] >= 0 && arr[i] < 100 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum", "    var sum = 0\n    for n in arr[0..<k]\
    \ {\n        if n > 99 {\n            continue\n        }\n        sum += n\n\
    \    }\n    return sum", "    // Assert the input is valid.\n    assert(1 <= arr.count\
    \ && arr.count <= 100, \"arr out of bounds!\")\n    assert(1 <= k && k <= arr.count,\
    \ \"k out of bounds!\")\n    \n    // Sum up the first k elements in the array\
    \ that have at most 2 digits.\n    var result = 0\n    for i in 0..<k {\n    \
    \    if arr[i] > 99 { continue }\n        result += arr[i]\n    }\n    return\
    \ result", "    var result = 0\n    for num in arr[0..<k] {\n        if num >=\
    \ 10 && num < 100 {\n            result += num\n        }\n    }\n    return result",
  "    var sum = 0\n    for i in 0..<k {\n        if arr[i] >= 100 {\n           \
    \ continue\n        }\n        sum += arr[i]\n    }\n    return sum", "    var\
    \ sum = 0\n    for i in 0..<k {\n        if arr[i] < 100 {\n            sum +=\
    \ arr[i]\n        }\n    }\n    return sum", "  var output = 0\n  for index in\
    \ 0..<arr.count {\n    if index == k { break }\n    if arr[index] < 100 {\n  \
    \    output += arr[index]\n    }\n  }\n  return output", '    return arr[..<k].reduce(0)
    { $0 + ($1 < 100 ? $1 : 0) }', "    var sum = 0\n    for i in 0..<arr.count {\n\
    \        if i >= k {\n            break\n        }\n        if arr[i] >= 10 &&\
    \ arr[i] < 100 {\n            sum += arr[i]\n        }\n    }\n    return sum",
  "    var count = 0\n    var sum = 0\n    while count < k {\n        let number =\
    \ arr[count]\n        if (number >= 10 && number < 100) || (number < -10 && number\
    \ > -100) {\n            sum += number\n        }\n        count += 1\n    }\n\
    \    return sum", "    var sum = 0\n    for i in 0..<arr.count {\n        if i\
    \ >= k {\n            break\n        }\n        if arr[i] < 100 {\n          \
    \  sum += arr[i]\n        }\n    }\n    return sum", "    var result = 0\n   \
    \ for i in 0..<k {\n        if arr[i] <= 99 {\n            result += arr[i]\n\
    \        }\n    }\n    return result", "    var sum = 0\n    for index in 0..<k\
    \ {\n        let element = arr[index]\n        let num_digits = String(element).count\n\
    \        if num_digits <= 2 {\n            sum += element\n        }\n    }\n\
    \    return sum", "    let two_digits = arr.filter { $0 > 9 && $0 < 100 }\n  \
    \  let one_digit = arr.filter { $0 < 10 }\n    let less_than_k = two_digits.count\
    \ + one_digit.count\n    let over_k = k - less_than_k\n    let sum = two_digits.reduce(0,\
    \ +) + one_digit.reduce(0, +)\n    return sum + arr[0...over_k].reduce(0, +)",
  "    return arr.enumerated().map { $0.element <= 99 ? $0.element : 0 }\n       \
    \       .reduce(0, +)", "    let items = arr.filter { $0 < 100 }\n    let sum\
    \ = items.reduce(0, +)\n    return sum", "    guard arr.count >= 1, arr.count\
    \ <= 100 else {\n        return 0\n    }\n    guard k >= 1, k <= arr.count else\
    \ {\n        return 0\n    }\n    return arr.prefix(k).filter { $0 < 100 }.reduce(0,\
    \ +)", '    return 0', "    var sum = 0\n    for i in 0..<k {\n        let element\
    \ = arr[i]\n        if element >= 10 && element < 100 {\n            sum += element\n\
    \        }\n    }\n    return sum", "    var result = 0\n    var k = k\n    for\
    \ i in 0..<arr.count {\n        if arr[i] > 99 {\n            continue\n     \
    \   }\n        result += arr[i]\n        k -= 1\n        if k == 0 {\n       \
    \     break\n        }\n    }\n    return result", '    return 0', "    return\
    \ arr[0..<k].reduce(0) { sum, val in\n        sum + (val < 100 ? val : 0)\n  \
    \  }", '    return arr.prefix(k).filter { $0 < 100 }.reduce(0, +)', "    var sum\
    \ = 0\n    for i in 0..<k {\n        if arr[i] < 100 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum", '    return arr.prefix(k).filter { $0 < 100
    }.reduce(0, +)', "    let size = arr.count\n    guard k > 0 && k <= size else\
    \ { return 0 }\n    var sum = 0\n    for i in 0..<k {\n        let current = arr[i]\n\
    \        if current > 99 { continue }\n        sum += current\n    }\n    return\
    \ sum", "    var sum = 0\n    for elem in arr[0..<k] {\n        if elem > 99 {\
    \ continue }\n        sum += elem\n    }\n    return sum", "    return arr.prefix(k).reduce(0)\
    \ {\n        if $1 < 100 {\n            return $0 + $1\n        }\n        return\
    \ $0\n    }", '    return 0', '    return 0', "    var sum = 0\n    for i in 0\
    \ ..< k {\n        let item = arr[i]\n        if item < 100 {\n            sum\
    \ += item\n        }\n    }\n    return sum", "    var answer = 0\n    for (index,\
    \ element) in arr.enumerated() {\n        if index < k && element < 100 {\n  \
    \          answer += element\n        }\n    }\n    return answer", "    var sum\
    \ = 0\n    for i in 0..<k {\n        if arr[i] < 100 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum", "    var i = 0\n    var res = 0\n    while\
    \ i < k {\n        let el = arr[i]\n        if el > 9 && el < 100 {\n        \
    \    res += el\n        }\n        i += 1\n    }\n    return res", '    return
    0', "    var sum = 0\n    for i in 0..<k {\n        let number = arr[i]\n    \
    \    if number < 10 {\n            sum += number\n        } else if number < 100\
    \ {\n            sum += number % 10 + number / 10\n        } else {\n        \
    \    sum += number % 10 + number / 10 % 10 + number / 100\n        }\n    }\n\
    \    return sum", "    var sum = 0\n    for index in 0..<k {\n        let element\
    \ = arr[index]\n        if element >= 10 && element < 100 {\n            sum +=\
    \ element\n        }\n    }\n    return sum", "    // Implement here\n    var\
    \ count = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        if arr[i]\
    \ < 10 {\n            count += 1\n            sum += arr[i]\n        } else if\
    \ arr[i] < 100 {\n            count += 1\n            sum += arr[i]\n        }\n\
    \        if count == k {\n            break\n        }\n    }\n    return sum",
  "    var sum = 0\n    for i in 0..<k {\n        let n = arr[i]\n        let s =\
    \ String(n)\n        let l = s.count\n        if l <= 2 {\n            sum +=\
    \ n\n        }\n    }\n    return sum", "    var output = 0\n    var count = 0\n\
    \    for element in arr {\n        if count == k {\n            break\n      \
    \  }\n        if element < 100 {\n            output += element\n            count\
    \ += 1\n        }\n    }\n    return output", "    var sum = 0\n    for index\
    \ in 0..<k {\n        let number = arr[index]\n        if (number < 10) || (number\
    \ >= 100) {\n            sum += number\n        }\n    }\n    return sum", " \
    \   return arr[0..<k].reduce(0) {\n        $0 + ($1 < 100 ? $1 : 0)\n    }", " \
    \   var result = 0\n    for index in 0..<k {\n        if arr[index] < 100 {\n\
    \            result += arr[index]\n        }\n    }\n    return result", "   \
    \ var sum = 0\n    for i in 0..<k {\n        if arr[i] < 100 {\n            sum\
    \ += arr[i]\n        }\n    }\n    return sum", "    var sum = 0\n    var index\
    \ = 0\n    while index < k {\n        if arr[index] < 100 {\n            sum +=\
    \ arr[index]\n        }\n        index += 1\n    }\n    return sum", "  var result\
    \ = 0\n  for i in 0..<k {\n    if arr[i] < 100 {\n      result += arr[i]\n   \
    \ }\n  }\n  return result", "    var sum = 0\n    for i in 0..<k {\n        let\
    \ num = arr[i]\n        if num < 10 {\n            sum += num\n        } else\
    \ if num < 100 {\n            sum += num/10 + num%10\n        } else {\n     \
    \       sum += 1\n        }\n    }\n    return sum", "    var sum = 0\n    for\
    \ i in 0..<k {\n        if arr[i] < 100 {\n            sum += arr[i]\n       \
    \ }\n    }\n    return sum", "    var sum = 0\n    for i in 0..<arr.count {\n\
    \        if i < k {\n            if arr[i] < 100 {\n                sum += arr[i]\n\
    \            }\n        }\n    }\n    return sum", "    var result = 0\n    for\
    \ num in arr {\n        if k <= 0 {\n            break\n        }\n        if\
    \ num < 10 {\n            result += num\n        } else if num < 100 {\n     \
    \       result += num\n        }\n        k -= 1\n    }\n    return result", " \
    \   var sum = 0\n    for index in 0..<k {\n        if (arr[index] < 10) {\n  \
    \          sum += arr[index]\n        } else if (arr[index] < 100) {\n       \
    \     sum += arr[index]\n        }\n    }\n    return sum", "    let range: ClosedRange<Int>\
    \ = 100...999\n    var sum = 0\n    for i in 0..<k {\n        if range.contains(arr[i])\
    \ {\n            sum += arr[i]\n        }\n    }\n    return sum", "    guard\
    \ arr.count > 0 else { return 0 }\n    guard arr.count > k else { return arr.reduce(0,\
    \ +) }\n    return arr.prefix(k).reduce(0) { (result, element) in\n        if\
    \ element.description.count <= 2 {\n            return result + element\n    \
    \    }\n        return result\n    }", "    var i = 0\n    var result = 0\n  \
    \  while i < k {\n        if arr[i] < 100 {\n            result += arr[i]\n  \
    \      }\n        i += 1\n    }\n    return result", "    var nums = [Int]()\n\
    \    for num in arr {\n        if num >= 10 && num < 100 {\n            nums.append(num)\n\
    \        }\n    }\n    var sorted = [Int]()\n    for i in 0..<k {\n        sorted.append(nums[i])\n\
    \    }\n    sorted.sort()\n    var sum = 0\n    for j in 0..<k {\n        sum\
    \ += sorted[j]\n    }\n    return sum", "    let firstK = arr[..<k]\n    var sum\
    \ = 0\n    for item in firstK {\n        if item > 9 && item < 100 {\n       \
    \     sum += item\n        }\n    }\n    return sum", "    var total = 0\n   \
    \ for idx in 0..<k {\n        total += is_two_digit(number: arr[idx]) ? arr[idx]\
    \ : 0\n    }\n    return total", '    return 0', '    return arr.prefix(k).filter
    { $0 < 100 }.reduce(0, +)', "    var sum = 0\n    for i in 0..<k {\n        if\
    \ arr[i] < 100 {\n            sum += arr[i]\n        }\n    }\n    return sum",
  '    return arr[0..<k].reduce(0) { $0 + ($1 < 100 ? $1 : 0) }', '    return 0',
  "    var total = 0\n    var k = k\n    for i in 0..<arr.count {\n        if arr[i]\
    \ < 100 {\n            total += arr[i]\n            k -= 1\n        }\n      \
    \  if k == 0 {\n            break\n        }\n    }\n    return total", "    let\
    \ count = arr.count\n    guard 1...100 ~= count else {\n        return 0\n   \
    \ }\n    var sum = 0\n    for index in 0..<count {\n        guard index < k else\
    \ {\n            break\n        }\n        let number = arr[index]\n        if\
    \ 1...99 ~= number {\n            sum += number\n        }\n    }\n    return\
    \ sum", "    let non_two_digits_elements = arr.filter({ String($0).count <= 2\
    \ })\n    return non_two_digits_elements.prefix(k).reduce(0, +)", '    return
    0', "    var sum = 0\n    for i in 0..<k {\n        if arr[i] >= 10 && arr[i]\
    \ < 100 {\n            sum += arr[i]\n        }\n    }\n    return sum", "   \
    \ var sum = 0\n    for number in arr {\n        guard number > 9 && number < 100\
    \ else { continue }\n        sum += number\n    }\n    return sum", "    let arr_sum\
    \ = arr.reduce(0, +)\n    return arr_sum - (arr.count - k) * 8", "    var kCounter\
    \ = k\n    var sum = 0\n    for number in arr {\n        if kCounter == 0 {\n\
    \            break\n        }\n        if number < 100 {\n            sum += number\n\
    \        }\n        kCounter -= 1\n    }\n    return sum", "    var sum = 0\n\
    \    for i in 0..<k {\n        if arr[i] < 100 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum", "    var count = 0\n    var sum = 0\n    for\
    \ (i, num) in arr.enumerated() {\n        if i == k {\n            break\n   \
    \     }\n        if num < 100 {\n            sum += num\n            count +=\
    \ 1\n        }\n    }\n    return sum", "    var sum = 0\n    var count = 0\n\
    \    for i in 0..<arr.count {\n        if k == count {\n            break\n  \
    \      }\n        let num = arr[i]\n        if num >= 0 && num <= 99 {\n     \
    \       sum += num\n            count += 1\n        }\n    }\n    return sum",
  "    var sum = 0\n    for i in 0..<arr.count {\n        if i >= k {\n          \
    \  break\n        }\n        if arr[i] >= 10 && arr[i] < 100 {\n            sum\
    \ += arr[i]\n        }\n    }\n    return sum", "    // your code goes here\n\
    \    var sum = 0\n    for i in 0..<k {\n        if arr[i] > 9 && arr[i] < 100\
    \ {\n            sum += arr[i]\n        }\n    }\n    return sum", "    let sum\
    \ = arr.prefix(k).filter { $0 < 100 }.reduce(0, +)\n    return sum", "    var\
    \ sum = 0\n    for i in 0..<k {\n        if arr[i] < 100 {\n            sum +=\
    \ arr[i]\n        }\n    }\n    return sum", "    // 0. precondition\n    guard\
    \ arr.count > 0 && arr.count <= 100 else { return 0 }\n    guard k > 0 && k <=\
    \ arr.count else { return 0 }\n    \n    // 1. declare variables\n    var sum\
    \ = 0\n    \n    // 2. traverse the array to the number k\n    for i in 0..<k\
    \ {\n        // 3. if the number has at most two digits, add it to the sum\n \
    \       if arr[i] < 100 {\n            sum += arr[i]\n        }\n    }\n    \n\
    \    // 4. return the sum\n    return sum", "    var sum = 0\n    for i in 0..<k\
    \ {\n        if arr[i] < 100 {\n            sum += arr[i]\n        }\n    }\n\
    \    return sum", '    return 0', "    guard arr.count > 1 else { return arr[0]\
    \ }\n    var i = 0\n    var sum = 0\n    while i < k {\n        let num = arr[i]\n\
    \        if num > 9 && num < 100 {\n            sum += num\n        }\n      \
    \  i += 1\n    }\n    return sum", "    var sum = 0\n    let num_array = arr.filter\
    \ { (number) -> Bool in\n        return number.description.count <= 2\n    }\n\
    \    for i in 0..<k {\n        sum += num_array[i]\n    }\n    return sum", " \
    \   var result = 0\n    for index in 0..<k {\n        let element = arr[index]\n\
    \        if element > 99 {\n            result += element % 100\n        } else\
    \ {\n            result += element\n        }\n    }\n    return result", "  \
    \  var result = 0\n    var n = k\n    for i in 0..<arr.count {\n        if arr[i]\
    \ < 100 {\n            result += arr[i]\n            n -= 1\n        }\n     \
    \   if n == 0 {\n            break\n        }\n    }\n    return result", "  \
    \  guard arr.count >= k else { return 0 }\n    let k_element = Array(arr[0..<k])\n\
    \    let result = k_element.reduce(0) {\n        if $1 < 100 {\n            return\
    \ $0 + $1\n        } else {\n            return $0\n        }\n    }\n    return\
    \ result", '    return arr.prefix(k).filter { $0 < 100 }.reduce(0, +)', "    //\
    \ => [Int]\n    let slice = Array(arr[0..<k])\n    // => [Int]\n    let filtered\
    \ = slice.filter({ (val) -> Bool in\n        val < 100\n    })\n    // => Int\n\
    \    let result = filtered.reduce(0, +)\n    return result", "    var arr_copy\
    \ = arr\n    arr_copy.sort()\n    var sum = 0\n    var count = 0\n    for num\
    \ in arr_copy {\n        if num < 100 {\n            sum += num\n            count\
    \ += 1\n        }\n        if count == k {\n            break\n        }\n   \
    \ }\n    return sum", "  var sum = 0\n  var count = 0\n  for i in 0..<arr.count\
    \ {\n    if count == k {\n      break\n    }\n    if arr[i] < 100 {\n      sum\
    \ += arr[i]\n      count += 1\n    }\n  }\n  return sum", "    var sum = 0\n \
    \   for (i, element) in arr.enumerated() {\n        if i == k { break }\n    \
    \    if element < 100 {\n            sum += element\n        }\n    }\n    return\
    \ sum", "    var result = 0\n    for (index, value) in arr.enumerated() {\n  \
    \      if index == k {\n            break\n        }\n        if value < 100 {\n\
    \            result += value\n        }\n    }\n    return result", "    let n\
    \ = arr.count\n    if n <= 1 {\n        return arr[0]\n    }\n    var i = 0\n\
    \    var result = 0\n    for j in arr {\n        if i == k {\n            break\n\
    \        }\n        if j < 10 {\n            result += j\n        } else if j\
    \ < 100 {\n            result += j\n        } else {\n            result += j\
    \ / 100\n        }\n        i += 1\n    }\n    return result", "  var result =\
    \ 0\n  let new_arr = arr.sorted { $0 > $1 }\n  var count = 0\n  for i in 0..<new_arr.count\
    \ {\n    let num = new_arr[i]\n    if count >= k {\n      break\n    }\n    if\
    \ (num / 10) > 0 {\n      result += num\n      count += 1\n    } else {\n    \
    \  result += num\n      count += 1\n    }\n  }\n  return result", "    var sum\
    \ = 0\n    for i in 0..<k {\n        if arr[i] < 100 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum", "    var result = 0\n    for index in 0..<k\
    \ {\n        if arr[index] < 100 {\n            result += arr[index]\n       \
    \ }\n    }\n    return result", "    var result = 0\n    for i in 0..<arr.count\
    \ {\n        if arr[i] < 100 {\n            result += arr[i]\n        }\n    \
    \    if i + 1 == k {\n            break\n        }\n    }\n    return result",
  "  var sum = 0\n  var cnt = 0\n  var i = 0\n  while cnt < k {\n    let num = arr[i]\n\
    \    let digits = digits_of(num: num)\n    if digits < 3 {\n      sum += num\n\
    \      cnt += 1\n    } else {\n      cnt += digits\n    }\n    i += 1\n  }\n \
    \ return sum", "    var total = 0\n    for i in 0..<k {\n        if let sum =\
    \ sum_of_digits(x: arr[i]) {\n            total += sum\n        }\n    }\n   \
    \ return total", "    var result = 0\n    var counter = 0\n    var index = 0\n\
    \    while counter < k && index < arr.count {\n        if arr[index] < 100 {\n\
    \            result += arr[index]\n            counter += 1\n        }\n     \
    \   index += 1\n    }\n    return result", "    var sum = 0\n    var count = 0\n\
    \    for i in 0..<arr.count {\n        if (arr[i] >= 10 && arr[i] <= 99) || arr[i]\
    \ == 100 {\n            sum += arr[i]\n            count += 1\n        }\n   \
    \     if count == k {\n            break\n        }\n    }\n    return sum", " \
    \   var total = 0\n    var counter = 0\n    while counter < k {\n        let element\
    \ = arr[counter]\n        if Double(element) < 100 {\n            total += element\n\
    \        }\n        counter += 1\n    }\n    return total", "    //your code here\n\
    \    return 0", "    // Edge case\n    guard k <= arr.count else { return 0 }\n\
    \    \n    var sum = 0\n    for i in 0..<k {\n        let number = arr[i]\n  \
    \      if number < 100 {\n            sum += number\n        }\n    }\n    return\
    \ sum", "    let max_digits = 2\n    var result = 0\n    for i in 0..<k {\n  \
    \      let num_digits = 1 + Int(log10(Double(arr[i])))\n        if num_digits\
    \ <= max_digits {\n            result += arr[i]\n        }\n    }\n    return\
    \ result", "    var result = 0\n    for index in 0..<k {\n        let num = arr[index]\n\
    \        if num >= 100 {\n            result += num\n        } else if num < 10\
    \ {\n            result += num\n        } else {\n            let tens = (num\
    \ / 10) * 10\n            let ones = num % 10\n            result += tens + ones\n\
    \        }\n    }\n    return result", '    return (1...k).filter { arr[$0 - 1]
    < 100 }.reduce(0, +)', "    var result = 0\n    var counter = 0\n    while counter\
    \ < k {\n        if arr[counter] >= 10 {\n            result += arr[counter] %\
    \ 10\n        } else {\n            result += arr[counter]\n        }\n      \
    \  counter += 1\n    }\n    return result", "    // Time O(n)\n    // Space O(1)\n\
    \    let max_len = 2\n    var result = 0\n    let len = min(k, arr.count)\n  \
    \  for i in 0..<len {\n        let num = arr[i]\n        if num <= 9 {\n     \
    \       result += num\n        } else if num <= 99 {\n            result += num\n\
    \        } else if num <= 999 {\n            result += num % 100\n        } else\
    \ {\n            result += num % 1000\n        }\n    }\n    return result", " \
    \   var sum = 0\n    for i in 0..<k {\n        let element = arr[i]\n        sum\
    \ += (0..<10).contains(element) ? element :\n               (10..<100).contains(element)\
    \ ? element : element / 10\n    }\n    return sum", "    var result = 0\n    for\
    \ i in 0..<k {\n        if arr[i] > 9 && arr[i] < 100 {\n            result +=\
    \ arr[i]\n        }\n    }\n    return result", "    guard k > 0 else { return\
    \ 0 }\n    guard arr.count > 0 else { return 0 }\n    return arr[..<k].filter({$0\
    \ < 100}).reduce(0, +)", "    var sum = 0\n    for i in 0..<k {\n        if (arr[i]\
    \ / 10) < 1 {\n            sum += arr[i]\n        } else if (arr[i] / 100) < 1\
    \ {\n            sum += arr[i]\n        }\n    }\n    return sum", "    var result\
    \ = 0\n    for element in arr[..<k] {\n        if element < 100 {\n          \
    \  result += element\n        }\n    }\n    return result", "    let k = min(k,\
    \ arr.count)\n    var result = 0\n    for i in 0..<k {\n        let num = arr[i]\n\
    \        if num < 10 {\n            result += num\n        } else if num < 100\
    \ {\n            result += num / 10 + num % 10\n        } else {\n           \
    \ result += 1\n        }\n    }\n    return result", '    return arr.prefix(k).reduce(0)
    { $0 + ($1 < 100 ? $1 : 0) }', "    let filtered = arr.filter { $0 > 10 && $0\
    \ < 100 }\n    return filtered.prefix(k).reduce(0, +)", "    // Enter code here\n\
    \    var sum = 0\n    for i in 0..<k {\n        if arr[i] < 100 {\n          \
    \  sum += arr[i]\n        }\n    }\n    return sum", '    return k == 0 ? 0 :
    sum_digits(num: arr[0]) + add_elements(arr: arr, k: k - 1)', '    return arr.map{$0
    < 100 ? $0 : 0}.reduce(0, +)', "    var sum = 0\n    var digits = 1\n    for i\
    \ in 0..<k {\n        if arr[i] / 10 == 0 {\n            sum += arr[i]\n     \
    \   } else {\n            digits = 2\n            while digits >= 1 {\n      \
    \          sum += arr[i] % (10 ** digits)\n                digits -= 1\n     \
    \       }\n        }\n    }\n    return sum", '    return 0', "    guard arr.count\
    \ > 1 else { return 0 }\n    guard arr.count <= 100 else { return 0 }\n    guard\
    \ k > 1 else { return 0 }\n    guard k <= arr.count else { return 0 }\n    \n\
    \    return arr.reduce(0, { $0 + (2 >= String($1).count ? $1 : 0) })", "    var\
    \ result = 0\n    for index in 0..<k {\n        result += (arr[index] > 99 ? 99\
    \ : arr[index])\n    }\n    return result", "    let max_arr = arr.filter { $0\
    \ < 100 }\n    return max_arr.filter { $0 < 100 }.prefix(k).reduce(0, +)", " \
    \   var sum = 0\n    for num in arr[..<k] {\n        if num < 100 {\n        \
    \    sum += num\n        }\n    }\n    return sum", "    let nums = arr.filter\
    \ { $0 < 100 }\n    let result = nums.prefix(k).reduce(0, +)\n    return result",
  "  var count = 0\n  for index in 0..<k {\n    if arr[index] < 100 {\n      count\
    \ += arr[index]\n    }\n  }\n  return count", "    var result = 0\n    for num\
    \ in arr {\n        if num.toString().count <= 2 {\n            result += num\n\
    \        }\n    }\n    return result", "    let digit_counts = arr.map { ($0 /\
    \ 10 == 0) ? 1 : (($0 / 100 == 0) ? 2 : 3) }\n    var sum = 0\n    for i in 0..<min(arr.count,\
    \ k) {\n        if digit_counts[i] <= 2 {\n            sum += arr[i]\n       \
    \ }\n    }\n    return sum", "    // Write your code here\n    // To print results\
    \ to the standard output you can use print or debugPrint function\n    var sum\
    \ = 0\n    for i in 0..<k {\n        if arr[i] <= 99 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum", "    var result = 0\n    for i in 0..<k {\n\
    \        if arr[i] >= 100 { continue }\n        result += arr[i]\n    }\n    return\
    \ result", "    var k = k\n    var sum = 0\n    var arr = arr\n    while k > 0\
    \ {\n        if arr[0] > 99 {\n            arr.append(arr[0] / 10)\n        }\n\
    \        sum += arr[0]\n        arr.remove(at: 0)\n        k -= 1\n    }\n   \
    \ return sum", "    var arr = arr\n    arr.sort(by: { abs($0) > abs($1) })\n \
    \   var sum = 0\n    for _ in 0..<k {\n        sum += arr.removeFirst()\n    }\n\
    \    return sum", "    var sum = 0\n    for idx in 0..<k {\n        let elem =\
    \ arr[idx]\n        if elem < 100 {\n            sum += elem\n        }\n    }\n\
    \    return sum", '    return arr.prefix(k).filter { abs($0) < 100 }.reduce(0,
    +)', "    var sum = 0\n    for i in 0..<k {\n        let num = arr[i]\n      \
    \  let num_s = String(num)\n        if num_s.count == 1 || num_s.count == 2 {\n\
    \            sum += num\n        }\n    }\n    return sum", "    var result =\
    \ 0\n    for i in 0..<k {\n        if arr[i] < 100 {\n            result += arr[i]\n\
    \        }\n    }\n    return result", "    var sum = 0\n    for i in 0..<k {\n\
    \        sum += arr[i] / 100 != 0 ? arr[i] / 100 + (arr[i] % 100) / 10 + arr[i]\
    \ % 10 : arr[i]\n    }\n    return sum", "    var sum = 0\n    var arr = arr\n\
    \    arr.sort()\n    for i in 0..<k {\n        if arr[i] < 100 {\n           \
    \ sum += arr[i]\n        }\n    }\n    return sum"]
stop_tokens:
- "\n}"

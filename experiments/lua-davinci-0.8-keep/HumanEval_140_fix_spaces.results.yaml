name: HumanEval_140_fix_spaces
language: lua
results:
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tif not text then return end\n\tlocal out = string.gsub(text, \"  +\", \"-\"\
    )\n\treturn string.gsub(out, \" \", \"_\")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjmle1c34.lua:19:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpjmle1c34.lua:19: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    if text then\n        text = string.gsub(text, \"  \", \" - \")\n       \
    \ text = string.gsub(text, \" \", \"_\")\n    end\n    return text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe9v5om0g.lua:21:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_-_Dirty_-_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpe9v5om0g.lua:21: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return text:gsub(\" +\", function(s) return (s:len() > 2) and \"-\" or \"_\"\
    \ end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr1_j8dqf.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpr1_j8dqf.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\" {2,}\", \"-\"):gsub(\" \", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6frsfjnj.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmp6frsfjnj.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpicyfwzgf.lua:15:\
    \ expected: \"Example\"\nactual: nil\nstack traceback:\n\t/tmp/tmpicyfwzgf.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s+\", \"-\"):gsub(\" \", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_6p7mhvh.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmp_6p7mhvh.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \" {2,}\", \"-\"):gsub(\" \", \"_\")\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy3ih4_0c.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpy3ih4_0c.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn (text:gsub(\"%s+\", \"-\")):gsub(\" \", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgrr37miw.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpgrr37miw.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local str = text:gsub(\"%s+\", \"-\")\n  return str:gsub(\" \", \"_\")\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt_mdh0dt.lua:17:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpt_mdh0dt.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local result = \"\"\n    local space_cnt = 0\n    for c in text:gmatch(\"\
    .\") do\n        if c == \" \" then\n            space_cnt = space_cnt + 1\n \
    \           if space_cnt < 3 then\n                result = result .. \"_\"\n\
    \            else\n                result = result .. \"-\"\n            end\n\
    \        else\n            space_cnt = 0\n            result = result .. c\n \
    \       end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltf0gr6m.lua:33:\
    \ expected: \"Exa-mple\"\nactual: \"Exa__-mple\"\nstack traceback:\n\t/tmp/tmpltf0gr6m.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local count = text:gsub(\"  \",\"-\")\n  count = count:gsub(\" \",\"_\")\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpegpu9g19.lua:19:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpegpu9g19.lua:19: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local out = text:gsub(\" {2,}\", \"-\")\n    return out:gsub(\" \", \"_\"\
    )\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb24p5o4z.lua:19:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpb24p5o4z.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tlocal count = 0\n\ttext = string.gsub(text, \" \", function()\n\t\tcount = count\
    \ + 1\n\t\tif count > 2 then\n\t\t\treturn \"-\"\n\t\telse\n\t\t\treturn \"_\"\
    \n\t\tend\n\tend)\n\treturn text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0bna9onj.lua:26:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_-Dirty--Fellow\"\
    \nstack traceback:\n\t/tmp/tmp0bna9onj.lua:26: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn string.gsub(text, \" {2,}\", function (a) return a:len() == 2 and \"\
    _\" or \"-\" end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwchanly8.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir Hanif \"\nstack traceback:\n\
    \t/tmp/tmpwchanly8.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \ttext = string.gsub(text, \" \", \"_\")\n\ttext = string.gsub(text, \" +\", \"\
    -\")\n\treturn text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphtd0eik0.lua:20:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmphtd0eik0.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\" +\", \" \"):gsub(\" \", \"_\"):gsub(\"  \", \"-\"):gsub(\"\
    _ \", \"-\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5ihhwe8u.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmp5ihhwe8u.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return (string.gsub(text, \" +\", function(spaces)\n        if string.len(spaces)\
    \ > 2 then\n            return \"-\"\n        else\n            return \"_\"\n\
    \        end\n    end))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp73vmyds2.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmp73vmyds2.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return (text:gsub(\"%s\", \"_\"):gsub(\"%s%s+\", \"-\"))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9jjqb7bn.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmp9jjqb7bn.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local pattern = \"[%s%c]{2,}\"\n    text = string.gsub(text, pattern, \"\
    -\")\n    return string.gsub(text, \"%s\", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmt2gw455.lua:20:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpmt2gw455.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"(%s)\", \"_\"):gsub(\"(%s)(%s)(%s)\", \"-\")\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjtqbmzux.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpjtqbmzux.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return (text:gsub(\" +\", \"_\"))\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_taqpzfh.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmp_taqpzfh.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return string.gsub(text,\"(%s+)\",\"-\")\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkuuzcle6.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpkuuzcle6.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tlocal text = text:gsub(\" +\", \"_\")\n\ttext = text:gsub(\"_+\", \"-\")\n\t\
    return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp25j7blj1.lua:18:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmp25j7blj1.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    if text:find(\"  \") then\n        text = text:gsub(\"  \", \"-\")\n    end\n\
    \    text = text:gsub(\" \", \"_\")\n    return text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp997492eg.lua:21:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp997492eg.lua:21: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  if not text then return end\n  text = string.gsub(text, \" +\", \" \")\n  text\
    \ = string.gsub(text, \" \", \"_\")\n  text = string.gsub(text, \"_-_\", \"-\"\
    )\n  return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpldb1camo.lua:20:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpldb1camo.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn (text:gsub(\" {2,}\", \"-\"):gsub(\" \", \"_\"))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpswb4cjsf.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpswb4cjsf.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  text = text:gsub(\" \",\"_\")\n  text = text:gsub(\"%s+\",\"-\")\n  return\
    \ text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqf5larbz.lua:20:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpqf5larbz.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \"^%s*\", \"\")\n    :gsub(\"%s+\", \"_\")\n   \
    \ :gsub(\"(%s)%s+\", \"%1-\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuo2l8641.lua:19:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpuo2l8641.lua:19: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return text:gsub(\"%s+\", \"%1\" == \" \" and \"_\" or \"-\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw5a18a1k.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpw5a18a1k.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s+\", function(s)\n        if #s > 2 then\n         \
    \   return \"-\"\n        else\n            return \"_\"\n        end\n    end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfkbesk35.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpfkbesk35.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return string.gsub(text,\"%s\",\"_\")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5uclwqa9.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmp5uclwqa9.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn string.gsub(text, \"[ ]+\", function(s)\n\t\tif #s > 2 then return \"\
    -\" end\n\t\treturn \"_\"\n\tend)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbuuhm8z2.lua:20:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpbuuhm8z2.lua:20: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, ' ', '_')\n        :gsub('_+', '-')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp402g8ied.lua:17:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmp402g8ied.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local output = \"\"\n  local prev = \"\"\n  for c in string.gmatch(text, \"\
    .\") do\n    if c == \" \" then\n      if prev == \" \" then\n        output =\
    \ output .. \"-\"\n      else\n        output = output .. \"_\"\n      end\n \
    \   else\n      output = output .. c\n    end\n    prev = c\n  end\n  return output\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7uv8smsz.lua:31:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_-Dirty_-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp7uv8smsz.lua:31: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return string.gsub(text, \" {2,}\", \"-\")\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpetf3x2p_.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir Hanif \"\nstack traceback:\n\
    \t/tmp/tmpetf3x2p_.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return gsub(text, \"[ ]+\", function(s)\n        return \"-\"\n    end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq25tnn_p.lua:9:\
    \ attempt to call a nil value (global 'gsub')\nstack traceback:\n\t/tmp/tmpq25tnn_p.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpq25tnn_p.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    text = text:gsub(\" \", \"_\")\n    text = text:gsub(\"_+\", \"-\")\n   \
    \ return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwofgy3jv.lua:18:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpwofgy3jv.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local new_text = text:gsub(\" +\", function(spaces)\n        local n = spaces:len()\n\
    \        if n > 2 then\n            return \"-\"\n        else\n            return\
    \ \"_\"\n        end\n    end)\n    return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyuf1p8_0.lua:25:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpyuf1p8_0.lua:25: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  text = text:gsub(\"%s%s+\", \"-\"):gsub(\"%s\", \"_\")\n  return text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp18vt267t.lua:18:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp18vt267t.lua:18: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local text = string.gsub(text, '  ', ' - ')\n    return string.gsub(text,\
    \ ' ', '_')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9w9urbx4.lua:18:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_-_Dirty_-_Fellow\"\
    \nstack traceback:\n\t/tmp/tmp9w9urbx4.lua:18: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return text:gsub(\" \", \"_\"):gsub(\"%s+\", \"-\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9bh7o19u.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmp9bh7o19u.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \" {2,}\", \"-\")\n    :gsub(\" \", \"_\")\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpka05mk8d.lua:19:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpka05mk8d.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local text_tmp = string.gsub(text, \"^%s+\", \"\")\n    text_tmp = string.gsub(text_tmp,\
    \ \"%s+$\", \"\")\n    text_tmp = string.gsub(text_tmp, \" {2,}\", \" \")\n  \
    \  text_tmp = string.gsub(text_tmp, \" \", \"_\")\n    text_tmp = string.gsub(text_tmp,\
    \ \" \", \"-\")\n    return text_tmp\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjs99kv2h.lua:21:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir_Hanif\"\nstack traceback:\n\t\
    /tmp/tmpjs99kv2h.lua:21: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tlocal function fix_spaces_aux(text)\n\t\tlocal ntext,n\n\t\tntext,n = text:gsub(\"\
    \  \",\" \")\n\t\tif n > 0 then\n\t\t\treturn fix_spaces_aux(ntext)\n\t\telse\n\
    \t\t\treturn ntext\n\t\tend\n\tend\n\t\n\tlocal ntext,n\n\tntext,n = fix_spaces_aux(text):gsub(\"\
    \ \",\"_\")\n\tntext,n = ntext:gsub(\"  \",\"-\")\n\treturn ntext\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu6_s2j3f.lua:30:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpu6_s2j3f.lua:30: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    if not text then return text end\n    return text:gsub(\"  +\", \"-\"):gsub(\"\
    \ \", \"_\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq5lf1bx8.lua:18:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpq5lf1bx8.lua:18: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    text = gsub(text, \" {2,}\", \" \")\n    text = gsub(text, \" \", \"_\")\n\
    \    text = gsub(text, \" {2,}\", \"-\")\n    return text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9rqx_cez.lua:9:\
    \ attempt to call a nil value (global 'gsub')\nstack traceback:\n\t/tmp/tmp9rqx_cez.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp9rqx_cez.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"  +\", \"-\"):gsub(\" \", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpctpe7n6v.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpctpe7n6v.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  text = string.gsub(text, \"^ \", \"_\")\n  text = string.gsub(text, \" $\"\
    , \"_\")\n  text = string.gsub(text, \" \", \"_\")\n  text = string.gsub(text,\
    \ \"%-\", \"-\")\n  text = string.gsub(text, \"__+\", \"_\")\n  text = string.gsub(text,\
    \ \"_+\", \"-\")\n  return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo1mgyf0p.lua:22:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpo1mgyf0p.lua:22: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local result = string.gsub(text, \" \", \"_\")\n    result = string.gsub(result,\
    \ \"_+\", \"-\")\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpte6k0nz4.lua:18:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpte6k0nz4.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \ttext = text:gsub(\" \", \"_\")\n\ttext = text:gsub(\"_+\", \"-\")\n\treturn\
    \ text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpen8p_znf.lua:18:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpen8p_znf.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return text:gsub(\"%s+\", function(space)\n    if string.len(space) > 2 then\
    \ return \"-\" else return \"_\" end\n  end)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2wy5ygeq.lua:19:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmp2wy5ygeq.lua:19: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tif text == nil then\n\t\treturn ''\n\tend\n\treturn string.gsub(text, ' {2,}',\
    \ '-'):gsub(' ', '_')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfazaf5br.lua:21:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpfazaf5br.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return (text:gsub(\" +\", function(s) return (#s == 1 and \"_\") or \"-\"\
    \ end))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpomlv4oq7.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpomlv4oq7.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\" +\", function(s) \n        if #s > 2 then\n         \
    \   return \"-\"\n        else\n            return \"_\"\n        end\n    end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2wqn3o_c.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmp2wqn3o_c.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return (string.gsub(text, \" ? ? ? ?\", function(s) \n    if s == \" \" then\
    \ return \"_\"\n    else return \"-\"\n    end\n  end))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpamt2xxso.lua:19:\
    \ expected: \"Example\"\nactual: \"-E-x-a-m-p-l-e-\"\nstack traceback:\n\t/tmp/tmpamt2xxso.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \ttext = text:gsub(\"%s+\", \"_\")\n\ttext = text:gsub(\"_+\", \"-\")\n\treturn\
    \ text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpienw72el.lua:18:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpienw72el.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, '%s', '_')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_l7dtc4f.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmp_l7dtc4f.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tlocal s = string.gsub(text, \" +\", function(spaces)\n\t\tif #spaces > 2 then\n\
    \t\t\treturn \"-\";\n\t\telse\n\t\t\treturn \"_\";\n\t\tend\n\tend)\n\treturn\
    \ s;\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpad3xjj39.lua:24:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpad3xjj39.lua:24: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tlocal text, _ = string.gsub(text, \"([^%s])%s+([^%s])\", \"%1_%2\")\n\tlocal\
    \ text, _ = string.gsub(text, \"([^%s])%s+([^%s])\", \"%1_%2\")\n\tlocal text,\
    \ _ = string.gsub(textn\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmpatwsy3y7.lua:11: unfinished string nearn"
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local has_two_spaces = false\n  return utils.string_gsub(text,\"%s+\",function(s)\n\
    \    if #s == 2 then has_two_spaces = true end\n    return has_two_spaces and\
    \ \"-\" or \"_\"\n  end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6ejm15de.lua:10:\
    \ attempt to index a nil value (global 'utils')\nstack traceback:\n\t/tmp/tmp6ejm15de.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp6ejm15de.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local text = text:gsub(\"^%s+\", \"\")\n    text = text:gsub(\"%s%s+\", \"\
    -\")\n    text = text:gsub(\"%s\", \"_\")\n    return text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphzqxjp6j.lua:20:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmphzqxjp6j.lua:20: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return text:gsub(\"%s+\", function(s)\n    if #s == 1 then\n      return \"\
    _\"\n    else\n      return \"-\"\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpix1134__.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpix1134__.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local new_text = string.gsub(text, \" \", \"_\")\n    new_text = string.gsub(new_text,\
    \ \"_+\", \"_\")\n    new_text = string.gsub(new_text, \"^_+\", \"\")\n    new_text\
    \ = string.gsub(new_text, \"_+$\", \"\")\n    return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk431qv9l.lua:20:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir_Hanif\"\nstack traceback:\n\t\
    /tmp/tmpk431qv9l.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return string.gsub(text,\"  \",\"-\")\n  :gsub(\" \",\"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2s6r1xly.lua:18:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp2s6r1xly.lua:18: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return string.gsub(text, \" {2,}\", \"-\")\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplnpuwxpg.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir Hanif \"\nstack traceback:\n\
    \t/tmp/tmplnpuwxpg.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn text:gsub(\"%s{2,}\", \"-\")\n\t\t:gsub(\"%s\", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl7cjr1bu.lua:19:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpl7cjr1bu.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local out = \"\"\n  local last = \"\"\n  for char in string.gmatch(text, \"\
    .\") do\n    if char == \" \" then\n      if last == \" \" then\n        out =\
    \ out .. \"-\"\n      else\n        out = out .. \"_\"\n      end\n    else\n\
    \      out = out .. char\n    end\n    last = char\n  end\n  return out\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz3w7qs4w.lua:31:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_-Dirty_-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpz3w7qs4w.lua:31: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s%s+\", function(str)\n        if str:find(\" \") then\n\
    \            return \"-\"\n        else\n            return \"_\"\n        end\n\
    \    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9f6276_m.lua:22:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir Hanif \"\nstack traceback:\n\
    \t/tmp/tmp9f6276_m.lua:22: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\" +\", function(c)\n        if #c > 2 then\n          \
    \  return \"-\"\n        else\n            return \"_\"\n        end\n    end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0mi81d8r.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmp0mi81d8r.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local fixed = string.gsub(text, \" \", \"_\")\n    fixed = string.gsub(fixed,\
    \ \"_+\", \"-\")\n    return fixed\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp406h1zr.lua:18:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpp406h1zr.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \"%s\", function(s)\n        if string.find(s, \"\
    \  \") then\n            return \"-\"\n        else\n            return \"_\"\n\
    \        end\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr9rutf6g.lua:24:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpr9rutf6g.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \" +\", function(s)\n        if #s > 2 then\n  \
    \          return \"-\"\n        else\n            return \"_\"\n        end\n\
    \    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvnmqw196.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpvnmqw196.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    text = string.gsub(text, \"  \", \" \")\n    text = string.gsub(text, \"\
    \  \", \" \")\n    text = string.gsub(text, \" \", \"_\")\n    text = string.gsub(text,\
    \ \" \", \"-\")\n    return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmg8i_jh6.lua:21:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpmg8i_jh6.lua:21: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    text = string.gsub(text, \"%s+\", \" \")\n    text = string.gsub(text, \"\
    \ \", \"_\")\n    text = string.gsub(text, \"_+\", \"-\")\n    return text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc03viriv.lua:19:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpc03viriv.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \" {2,}\", \"-\")\n        :gsub(\" \", \"_\")\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8urw43mk.lua:19:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmp8urw43mk.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \"%s+\", function(s) \n        if string.len(s)\
    \ > 2 then\n            return \"-\"\n        else\n            return \"_\"\n\
    \        end\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsokh_f_d.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpsokh_f_d.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local res = string.gsub(text, \" \", \"_\")\n  res = string.gsub(res, \"  \"\
    , \"-\")\n  return res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqvzf4pou.lua:20:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpqvzf4pou.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local text = string.gsub(text, \" \", \"_\")\n    local text = string.gsub(text,\
    \ \" \", \"_\")\n    return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv3aozvta.lua:20:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpv3aozvta.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return text:gsub(\" +\", function(s)\n    if #s > 2 then\n      return \"-\"\
    \n    else\n      return \"_\"\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn90fjfsn.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpn90fjfsn.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s{2,}\", \"-\"):gsub(\"%s\", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpveyeaz5i.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpveyeaz5i.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    text = gsub(text, \" +\", \" \")\n    text = gsub(text, \" \", \"_\")\n \
    \   text = gsub(text, \"_{2,}\", \"-\")\n    return text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjnyxpkgz.lua:9:\
    \ attempt to call a nil value (global 'gsub')\nstack traceback:\n\t/tmp/tmpjnyxpkgz.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpjnyxpkgz.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return text:gsub(\"[ ]+\", function(x)\n    if x:len() > 2 then return \"-\"\
    \ else return \"_\" end\n  end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf5_e6qza.lua:19:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpf5_e6qza.lua:19: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local new_text = string.gsub(text, \" {2,}\", \"-\")\n    new_text = string.gsub(new_text,\
    \ \" \", \"_\")\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkvn22rmp.lua:20:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpkvn22rmp.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return text:gsub(\"%s+\", \"%1\"):gsub(\"%s\", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph13nqb5g.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmph13nqb5g.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  if text == nil then return nil end\n  text = text:gsub(\" {2,}\", \"-\")\n\
    \  text = text:gsub(\" \", \"_\")\n  return text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpspa2h8i2.lua:21:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpspa2h8i2.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn string.gsub(text,\"%s+\",\"-\")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjj6qt27a.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpjj6qt27a.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local text = string.gsub(text, \"  \", \"\")\n    local text = string.gsub(text,\
    \ \" \", \"_\")\n    local text = string.gsub(text, \"%s%s\", \"-\")\n    return\
    \ text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqwhfjcwe.lua:20:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_YellowDirtyFellow\"\
    \nstack traceback:\n\t/tmp/tmpqwhfjcwe.lua:20: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return text:gsub(\"  +\", \"-\"):gsub(\" \", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx1kjk60p.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpx1kjk60p.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s\", \"_\"):gsub(\"_%s+\", \"-\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppaz47n9j.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmppaz47n9j.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local new_text = nil\n  -- write you code here\n  new_text = gsub(text, \"\
    \ +\", \"_\")\n  new_text = gsub(new_text, \"_+\", \"-\")\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp32l7x1lz.lua:11:\
    \ attempt to call a nil value (global 'gsub')\nstack traceback:\n\t/tmp/tmp32l7x1lz.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmp32l7x1lz.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn text:gsub(\"%s+\", function(str)\n\t\tif str:len() > 2 then\n\t\t\treturn\
    \ \"-\"\n\t\telse\n\t\t\treturn \"_\"\n\t\tend\n\tend)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptb0swwtg.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmptb0swwtg.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    if not text then\n        return nil\n    end\n    return string.gsub(text,\
    \ \" \", \"_\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8lgun8w4.lua:21:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmp8lgun8w4.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    if type(text) ~= \"string\" then return text end\n    return (string.gsub(text,\
    \ \"[ ]{2,}\", \"-\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3st5abmv.lua:17:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir Hanif \"\nstack traceback:\n\
    \t/tmp/tmp3st5abmv.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    if text == nil then\n        return \"\"\n    end\n    local result = string.gsub(text,\
    \ \" \", \"_\")\n    result = string.gsub(result, \"__+\", \"-\")\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5lcdgwew.lua:22:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp5lcdgwew.lua:22: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return string.gsub(text, \" {2,}\", \"-\")\n    :gsub(\" \", \"_\")\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvet9o24w.lua:19:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpvet9o24w.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\" \", \"_\"):gsub(\"(%s+)\", \"-\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp7vdu0_t.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpp7vdu0_t.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s+\", function(spaces)\n        if #spaces > 2 then return\
    \ \"-\" else return \"_\" end\n    end)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi5n42sw0.lua:19:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpi5n42sw0.lua:19: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local text_new = string.gsub(text, \" \", \"_\")\n    text_new = string.gsub(text_new,\
    \ \"_+\", \"-\")\n    return text_new\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_4c1bwb5.lua:18:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmp_4c1bwb5.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return string.gsub(text, '  +', '-')\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaoh6s2t9.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir Hanif \"\nstack traceback:\n\
    \t/tmp/tmpaoh6s2t9.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s+\", \"-\"):gsub(\" \", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkz6qf_8_.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpkz6qf_8_.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local txt = string.gsub(text, \" \", \"_\")\n    return string.gsub(txt,\
    \ \"%s+\", \"-\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptqbcfiy5.lua:19:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmptqbcfiy5.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  text = text:gsub(\" +\", function(s) \n    if #s > 2 then\n      return \"\
    -\"\n    else\n      return \"_\"\n    end\n  end)\n  return text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiv12m_x1.lua:24:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpiv12m_x1.lua:24: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tif not text then return end\n\treturn text:gsub(\" +\", function(s)\n\t\treturn\
    \ s:len() > 2 and \"-\" or \"_\"\n\tend)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt4c0n6x4.lua:20:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpt4c0n6x4.lua:20: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \" +\", function(s)\n        return (#s>2) and \"\
    -\" or \"_\"\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvwx3cnm8.lua:19:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpvwx3cnm8.lua:19: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    if text == nil then\n        return nil\n    end\n    local result = \"\"\
    \n    local spaces = false\n    for i = 1, string.len(text) do\n        local\
    \ char = string.sub(text, i, i)\n        if char == \" \" then\n            if\
    \ spaces then\n                char = \"-\"\n            else\n              \
    \  char = \"_\"\n                spaces = true\n            end\n        else\n\
    \            spaces = false\n        end\n        result = result .. char\n  \
    \  end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph08hkzg2.lua:36:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_-Dirty_-Fellow\"\
    \nstack traceback:\n\t/tmp/tmph08hkzg2.lua:36: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"  +\", \"-\")\n        :gsub(\" \", \"_\")\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp739rahae.lua:18:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp739rahae.lua:18: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \"  +\", \" \"):gsub(\" \", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyj_qzye.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpcyj_qzye.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tlocal ret = text:gsub(\"  +\", \"-\"):gsub(\" \", \"_\")\n\treturn ret\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_3f44621.lua:18:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp_3f44621.lua:18: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn string.gsub(text, \"(%s+)\", function(s)\n\t\tif string.len(s) > 2 then\n\
    \t\t\treturn \"-\";\n\t\telse\n\t\t\treturn \"_\";\n\t\tend\n\tend)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoujkud9d.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpoujkud9d.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return text:gsub(\"%s\", \"_\"):gsub(\"[ ]+\", \"-\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3bfaj1u7.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmp3bfaj1u7.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return (text:gsub(\"%s%s+\", \"-\")):gsub(\"%s\", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqqfvxlh_.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpqqfvxlh_.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \" +\", \"-\")\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt7gbi15h.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpt7gbi15h.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tlocal function replace(str)\n\t\tif str == \"  \" then return \"-\" else return\
    \ \"_\" end\n\tend\n\treturn (text:gsub(\"(%s+)\", replace))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw8hctqyh.lua:20:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpw8hctqyh.lua:20: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn text:gsub(\" \", \"_\"):gsub(\"%s%s+\", \"-\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpixj16h27.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpixj16h27.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \"  \", \"-\")\n    :gsub(\" \", \"_\")\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa4hmuvqg.lua:18:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpa4hmuvqg.lua:18: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \"  +\", \"-\")\n        :gsub(\" \", \"_\")\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp92wvpa1e.lua:18:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp92wvpa1e.lua:18: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local result = string.gsub(text, \"  \", \" \")\n  result = string.gsub(result,\
    \ \" \", \"_\")\n  result = string.gsub(result, \" \", \"-\")\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm9691m0b.lua:20:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpm9691m0b.lua:20: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tlocal str = text\n\tstr = str:gsub(\"( )+\", function(sub) return sub:gsub(\"\
    \ \",\"-\") end)\n\tstr = str:gsub(\" \", \"_\")\n\treturn str\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp25jm530t.lua:21:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmp25jm530t.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return (text:gsub(\"%s+\",function(w) return (w:len() > 2) and \"-\" or \"\
    _\" end))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3vfd8yl3.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmp3vfd8yl3.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn text:gsub(\"%s\", \"_\"):gsub(\"%s%s%s\", \"-\"):gsub(\"^%s\", \"_\"\
    )\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptb0l7axl.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmptb0l7axl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s+\", function(str)\n        if #str == 1 then\n    \
    \        return \"_\"\n        else\n            return \"-\"\n        end\n \
    \   end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7g919eyk.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp7g919eyk.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local result = string.gsub(text,\" \",\"_\")\n  result = string.gsub(result,\"\
    \  \",\"-\")\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplff5w883.lua:20:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmplff5w883.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    if text:match(\"%s\") then\n        return fix_spaces(text:gsub(\"  \", \"\
    -\"):gsub(\" \", \"_\"))\n    else\n        return text\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyzamtcpy.lua:21:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpyzamtcpy.lua:21: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tif not text then return nil end\n\treturn gsub(text, \" +\", \" \"):gsub(\"\
    \ +\", \"_\"):gsub(\" -\", \"-\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnq6019gz.lua:10:\
    \ attempt to call a nil value (global 'gsub')\nstack traceback:\n\t/tmp/tmpnq6019gz.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpnq6019gz.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  text = text:gsub(\" \", \"_\")\n  text = text:gsub(\"_+\", \" \")\n  text =\
    \ text:gsub(\" \", \"-\")\n  return text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpult5y41i.lua:19:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpult5y41i.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return gsub(text, \" +\", \"-\")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpid267mfr.lua:9:\
    \ attempt to call a nil value (global 'gsub')\nstack traceback:\n\t/tmp/tmpid267mfr.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpid267mfr.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return (text:gsub(\"%s+\", \"-\"):gsub(\"^%s\", \"_\"):gsub(\"%s\", \"_\"\
    ))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2icge2vn.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmp2icge2vn.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \"[ ]+\", function(s) \n        if string.len(s)\
    \ > 2 then\n            return \"-\"\n        else\n            return \"_\"\n\
    \        end\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsiqukldi.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpsiqukldi.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return (text:gsub(\" +\", function(w)\n    if #w > 2 then\n      return \"\
    -\"\n    else\n      return \"_\"\n    end\n  end))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyas4mlse.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpyas4mlse.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return (string.gsub(text,\"%s+\",\"_\"))\nend\n</code>\nIs there a better\
    \ way to write this?\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmppayki72b.lua:11: unexpected symbol near '<'\n"
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return (text:gsub(\"%s+\", function(s)\n            if #s > 2 then return\
    \ \"-\" else return \"_\" end\n        end))\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps7zyzel1.lua:19:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmps7zyzel1.lua:19: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  if not text or text:match(\"^%s*$\") then\n    return \"\"\n  end\n  local\
    \ ret = text:gsub(\"%s+\", \"_\")\n  return ret:gsub(\"_+\", \"-\")\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdm1f5w1c.lua:20:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpdm1f5w1c.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \ttext = text:gsub(\" +\", \"_\")\n\ttext = text:gsub(\"_+\", \"-\")\n\treturn\
    \ text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhfybdxi.lua:18:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpdhfybdxi.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    text = string.gsub(text, \" \", \"_\")\n    text = string.gsub(text, \" \
    \ \", \"-\")\n    text = string.gsub(text, \"   \", \"-\")\n    return text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj5b2eugl.lua:21:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpj5b2eugl.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn text:gsub(\"  +\", \"-\"):gsub(\" \", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk_otqlp6.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpk_otqlp6.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return text:gsub(\"%s+\", function(s)\n    if s:len() > 2 then\n      return\
    \ \"-\"\n    else\n      return \"_\"\n    end\n  end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjoym1byn.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpjoym1byn.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local new_text = \"\"\n    local space_count = 0\n    for i = 1, #text do\n\
    \        local character = text:sub(i, i)\n        if character == \" \" then\n\
    \            space_count = space_count + 1\n            if space_count > 2 then\n\
    \                new_text = new_text .. \"-\"\n            else\n            \
    \    new_text = new_text .. \"_\"\n            end\n        else\n           \
    \ space_count = 0\n            new_text = new_text .. character\n        end\n\
    \    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphxqbmsv2.lua:34:\
    \ expected: \"Exa-mple\"\nactual: \"Exa__-mple\"\nstack traceback:\n\t/tmp/tmphxqbmsv2.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tlocal count = 1\n\tlocal all = {}\n\t\n\tfor word in text:gmatch(\"%S+\") do\n\
    \t\tif count >= 3 then\n\t\t\tall[#all + 1] = \"-\"\n\t\telse\n\t\t\tall[#all\
    \ + 1] = \"_\"\n\t\tend\n\t\tall[#all + 1] = word\n\t\tcount = count + 1\n\tend\n\
    \t\n\treturn table.concat(all, \"\")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmnh737uz.lua:28:\
    \ expected: \"Example\"\nactual: \"_Example\"\nstack traceback:\n\t/tmp/tmpmnh737uz.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s+\", function(a) return (#a > 2) and \"-\" or \"_\"\
    \ end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdquufmns.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpdquufmns.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \ttext = text:gsub(\"^%s+\", \"\")\n\ttext = text:gsub(\"%s+$\", \"\")\n\ttext\
    \ = text:gsub(\"%s+\", \"_\")\n\ttext = text:gsub(\"_+\", \"_\")\n\ttext = text:gsub(\"\
    %s+\", \"-\")\n\treturn text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84zzz0ta.lua:21:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir_Hanif\"\nstack traceback:\n\t\
    /tmp/tmp84zzz0ta.lua:21: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    text = string.gsub(text, \" +\", \"__\")\n    text = string.gsub(text, \"\
    __\", \"_\")\n    text = string.gsub(text, \"__\", \"-\")\n    return text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp93pq2hfi.lua:20:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmp93pq2hfi.lua:20: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn string.gsub(text, \" {2,}\", \"-\")\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2wwbta1x.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir Hanif \"\nstack traceback:\n\
    \t/tmp/tmp2wwbta1x.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\" +\", \" \"):gsub(\" +\", \"_\"):gsub(\"_+\", \"-\")\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpodumird7.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpodumird7.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return (string.gsub(text, \" +\", function(s)\n    if #s == 1 then\n      return\
    \ \"_\"\n    else\n      return \"-\"\n    end\n  end))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbihn9e2t.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpbihn9e2t.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tlocal result = string.gsub(text, \" +\", \"-\")\n\treturn string.gsub(result,\
    \ \" \", \"_\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp25vn4nqk.lua:17:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmp25vn4nqk.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \" {2,}\", \"-\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5clie7wf.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir Hanif \"\nstack traceback:\n\
    \t/tmp/tmp5clie7wf.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    text = string.gsub(text, \" {2,}\", \" \")\n    text = string.gsub(text,\
    \ \" \", \"_\")\n    text = string.gsub(text, \" {2,}\", \"-\")\n    return text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb_bhxrh5.lua:21:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpb_bhxrh5.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local t = text:gsub(\" \", \"_\")\n    return t:gsub(\"%s%s+\", \"-\")\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuvnuy35k.lua:19:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpuvnuy35k.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s+\", function(s) return (#s > 2) and \"_\" or \"-\"\
    ; end):gsub(\"%s\", \"_\");\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn8w1uvqw.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpn8w1uvqw.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    if not text then return end\n    text = string.gsub(text, \" +\", \" \")\n\
    \    text = string.gsub(text, \" \", \"_\")\n    text = string.gsub(text, \"_-_\"\
    , \"-\")\n    return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphnvl_zjg.lua:20:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmphnvl_zjg.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tif text == nil then\n\t\treturn nil\n\tend\n\ttext = text:gsub(\"%s\", \"_\"\
    )\n\ttext = text:gsub(\"%_%_%_+\", \"-\")\n\treturn text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return string.gsub(text,\"([ ]+)\",\" \"):gsub(\"%s\",\"_\"):gsub(\"([_]+)\"\
    ,\"-\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_fc9e62u.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmp_fc9e62u.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  if text == nil then return nil end\n  if text == \"\" then return \"\" end\n\
    \  local res = string.gsub(text, \" +\", \"_\")\n  res = string.gsub(res, \"([^\
    \ ])_\", \"%1-\")\n  return res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz47jyxaa.lua:20:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpz47jyxaa.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return string.gsub(text, \"%s+\", \"-\")\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpds71n6xi.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpds71n6xi.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \" +\", function(s)\n        if #s > 2 then\n  \
    \          return \"-\"\n        else\n            return \"_\"\n        end\n\
    \    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnyk9re1_.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpnyk9re1_.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s+\", function(s)\n        if s:find(\"%s%s%s\") then\n\
    \            return \"-\";\n        else\n            return \"_\";\n        end\n\
    \    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5j7gf6t1.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmp5j7gf6t1.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s+\", function(s)\n        if string.len(s) == 1 then\
    \ return \"_\"\n        else return \"-\" end\n    end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj4_uo4rz.lua:20:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpj4_uo4rz.lua:20: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local newText = \"\"\n  for i = 1, #text do\n    local c = text:sub(i,i)\n\
    \    if c == \" \" then\n      if i > 1 and text:sub(i-1,i-1) == \" \" then\n\
    \        newText = newText .. \"-\"\n      else\n        newText = newText ..\
    \ \"_\"\n      end\n    else\n      newText = newText .. c\n    end\n  end\n \
    \ return newText\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphiequv7x.lua:30:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_-Dirty_-Fellow\"\
    \nstack traceback:\n\t/tmp/tmphiequv7x.lua:30: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \ttext = text:gsub(\"%s+\", \" \")\n\ttext = text:gsub(\" \", \"_\")\n\ttext =\
    \ text:gsub(\"_+\", \"-\")\n\treturn text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf2672uu6.lua:19:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpf2672uu6.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return text:gsub(\"%s%s+\", \"-\")\n        :gsub(\"%s\", \"_\")\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3ssxm1qo.lua:18:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp3ssxm1qo.lua:18: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  local ret = string.gsub(text, \" {2,}\", \"-\")\n  return string.gsub(ret,\
    \ \" \", \"_\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphhztl78a.lua:19:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmphhztl78a.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return string.gsub(text,\"%s+\",\"_\")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzsx58yd5.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpzsx58yd5.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local result = text:gsub(\" +\", function(s) \n        if #s > 2 then\n \
    \           return \"-\"\n        else\n            return \"_\"\n        end\n\
    \    end)\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9l00zvu9.lua:24:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmp9l00zvu9.lua:24: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return (text:gsub(\"^ \", \"_\"):gsub(\" {2,}\", \"-\")):gsub(\" \", \"_\"\
    )\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe5g4j7yf.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpe5g4j7yf.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s+\", function(s)\n        return (#s == 1) and \"_\"\
    \ or \"-\"\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppb681toi.lua:19:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmppb681toi.lua:19: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s\", \"_\"):gsub(\"%s%s%s+\", \"-\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2q9e7058.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmp2q9e7058.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return text:gsub(\"%s+\", function(w)\n    if #w == 1 then return \"_\" end\n\
    \    return \"-\"\n  end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2yzjyx1_.lua:20:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp2yzjyx1_.lua:20: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \" {2,}\", \"-\")\n        :gsub(\" \", \"_\")\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptomda644.lua:19:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmptomda644.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return text:gsub(\"^%s+\", \"\"):gsub(\"%s+\", \"_\"):gsub(\"%s%s+\", \"-\"\
    )\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw5ub43fm.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpw5ub43fm.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return string.gsub(text, \" +\", function(s)\n    if string.len(s) > 2 then\n\
    \      return \"-\"\n    else\n      return \"_\"\n    end\n  end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp70rti1p3.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmp70rti1p3.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    text = text:gsub(\" +\", \"_\")\n    text = text:gsub(\"_+\", \"-\")\n  \
    \  text = text:gsub(\"(^_*|_*$)\", \"\")\n    return text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpozoq7m2f.lua:19:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpozoq7m2f.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s+\", function(s) \n        if #s > 2 then\n        \
    \    return \"-\";\n        else\n            return \"_\";\n        end\n   \
    \ end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcqeo60bi.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpcqeo60bi.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return (text:gsub(\" +\", function(match)\n        if match:len() == 1 then\
    \ return \"_\" end\n        return \"-\"\n    end))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp61wg1f13.lua:20:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp61wg1f13.lua:20: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s+\",function(s) return (s:len() > 2) and \"_\" or \"\
    -\" end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3r1_40hu.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmp3r1_40hu.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s+\", function(s)\n        return #s > 2 and '-' or '_'\n\
    \    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmple0_bm8y.lua:19:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmple0_bm8y.lua:19: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return string.gsub(text, \"  +\", \"-\"):gsub(\" \", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp704qhe3l.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp704qhe3l.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    if type(text) ~= \"string\" then return text end\n    return (text:gsub(\"\
    %s+\", function(char)\n        if #char > 2 then return \"-\" end\n        return\
    \ \"_\"\n    end))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpum67mlkl.lua:21:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpum67mlkl.lua:21: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local s = string.gsub(text,\"%s+\",\"_\")\n    return string.gsub(s,\"_\"\
    ,\"-\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2vkgxbm5.lua:17:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmp2vkgxbm5.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tlocal len = text:len()\n\tlocal spaces = 0\n\tlocal first = 1\n\tlocal rest\
    \ = text\n\twhile len > 0 do\n\t\tlocal ch = rest:sub(1,1)\n\t\tif ch == \" \"\
    \ then\n\t\t\tspaces = spaces + 1\n\t\t\tif spaces > 2 then\n\t\t\t\trest = \"\
    -\" .. rest:sub(2)\n\t\t\t\ttext = text:sub(1,first) .. rest\n\t\t\t\tlen = text:len()\n\
    \t\t\tend\n\t\telse\n\t\t\tspaces = 0\n\t\t\tfirst = first + 1\n\t\tend\n\t\t\
    rest = rest:sub(2)\n\t\tlen = len - 1\n\tend\n\ttext = text:gsub(\" \",\"_\")\n\
    \treturn text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2bhxsivu.lua:39:\
    \ expected: \"Exa-mple\"\nactual: \"Exa_-mple\"\nstack traceback:\n\t/tmp/tmp2bhxsivu.lua:39:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn string.gsub(text, \"^%s+\", \"\")\n\t\t:gsub(\"%s+\", \"_\")\n\t\t:gsub(\"\
n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmpkmqk4fj5.lua:11: unfinished string nearn"
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn (text:gsub(\"%s%s+\", \"-\")):gsub(\"%s\", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjh47pszs.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpjh47pszs.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tif not text then return text end\n\treturn string.gsub(text, \"([%s]+)\", \"\
    %1\"):gsub(\" \", \"_\"):gsub(\"([%s]+)\", \"-\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph6d5mrwk.lua:19:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmph6d5mrwk.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return (text:gsub(\"%s%s+\", \"-\")):gsub(\"%s\", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi3c47dz4.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpi3c47dz4.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tif not text then return end\n\ttext = string.gsub(text, \"%s+\", \"-\")\n\t\
    text = string.gsub(text, \"^%s+\", \"_\")\n\ttext = string.gsub(text, \"%s+$\"\
    , \"_\")\n\ttext = string.gsub(text, \"%s\", \"_\")\n\treturn text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4mt7pi7x.lua:21:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmp4mt7pi7x.lua:21: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return string.gsub(text, '  +', '-'):gsub(' ', '_')\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdkj8pip0.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpdkj8pip0.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn string.gsub(text, \"    \", \"  \"):gsub(\"  \", \" \"):gsub(\" \", \"\
    _\"):gsub(\"_ \", \"-\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiozkky6i.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpiozkky6i.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return (string.gsub(text,\" +\",\"-\"))\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcdg014q5.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpcdg014q5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return text:gsub(\"%s\", \"_\"):gsub(\"%s%s+\", \"-\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmz5nq5zu.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpmz5nq5zu.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn  text:gsub(\" {2,}\", \"-\") :gsub(\" \", \"_\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp163zer1w.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmp163zer1w.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local result = text:gsub(\"  +\", \"-\")\n    return result:gsub(\" \", \"\
    _\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3y9to5bn.lua:18:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp3y9to5bn.lua:18: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local first, _, result = text:find(\"%s*%S\")\n    if not first then\n  \
    \      return \"\"\n    end\n    for start, _, word in text:gmatch(\"(%s*)(%S+)\"\
    ) do\n        result = result .. start:gsub(\"%s+\", \"-\") .. word\n    end\n\
    \    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp19twckui.lua:14:\
    \ attempt to concatenate a nil value (local 'word')\nstack traceback:\n\t/tmp/tmp19twckui.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp19twckui.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \  return string.gsub(text,\"[ ](%s*)\",\"_%1\"):gsub(\"(_%s+)\",\"-\"):gsub(\"\
    (%s+)_\",\"-\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_vjjgehv.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp_vjjgehv.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \ttext = string.gsub(text, \" +\", \"_\")\n\ttext = string.gsub(text, \"_-_\"\
    , \"-\")\n\treturn text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnqapr9si.lua:18:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir-Hanif-\"\nstack traceback:\n\
    \t/tmp/tmpnqapr9si.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s\", \"_\"):gsub(\"%s%s%s+\", \"-\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjekb5eg5.lua:18:\
    \ expected: \"Exa-mple\"\nactual: \"Exa___mple\"\nstack traceback:\n\t/tmp/tmpjekb5eg5.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    local unspaced_text = string.gsub(text, \" \", \"_\")\n    local spaced_text\
    \ = string.gsub(unspaced_text, \"__+\", \"-\")\n    return spaced_text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
    \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
    \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
    \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgsu5jxz5.lua:19:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmpgsu5jxz5.lua:19: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \tif not text or text == \"\" then return text end\n\tlocal result = \"\"\n\t\
    local prev = text:sub(1,1)\n\tlocal current\n\tfor i = 2, text:len() do\n\t\t\
    current = text:sub(i,i)\n\t\tif current == \" \" then\n\t\t\tif prev == \" \"\
    \ then\n\t\t\t\tresult = result .. \"-\"\n\t\t\telse\n\t\t\t\tresult = result\
    \ .. \"_\"\n\t\t\tend\n\t\telse\n\t\t\tresult = result .. current\n\t\tend\n\t\
    \tprev = current\n\tend\n\treturn result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnmg56_rc.lua:32:\
    \ expected: \"Example\"\nactual: \"xample\"\nstack traceback:\n\t/tmp/tmpnmg56_rc.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \ttext = string.gsub(text, \"  +\", \"-\")\n\ttext = string.gsub(text, \" \",\
    \ \"_\")\n\treturn text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplvlm92kh.lua:19:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmplvlm92kh.lua:19: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return text:gsub(\"%s%s+\", \"-\")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpebv091i2.lua:16:\
    \ expected: \"Mudasir_Hanif_\"\nactual: \"Mudasir Hanif \"\nstack traceback:\n\
    \t/tmp/tmpebv091i2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \treturn (text:gsub(\"  +\", \"-\"):gsub(\" \", \"_\"))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fix_spaces\n    lu.assertEquals(candidate('Example'),\
    \ 'Example')\n    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n\
    \    lu.assertEquals(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n\
    \    lu.assertEquals(candidate('Exa   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('\
    \   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4dr0kq8r.lua:17:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow-Dirty-Fellow\"\
    \nstack traceback:\n\t/tmp/tmp4dr0kq8r.lua:17: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string text, replace all spaces in it with underscores, \n\
    -- and if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
    \ spaces with - \n-- fix_spaces(\"Example\") == \"Example\"\n-- fix_spaces(\"\
    Example 1\") == \"Example_1\"\n-- fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n-- fix_spaces(\" Example   3\") == \"_Example-3\"\nlocal function fix_spaces(text)\n\
    \    return string.gsub(text, \"[ ]+\", function(space)\n        if space:len()\
    \ > 2 then\n            return \"-\"\n        else\n            return \"_\"\n\
    \        end\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fix_spaces\n    lu.assertEquals(candidate('Example'), 'Example')\n\
    \    lu.assertEquals(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow\
    \ Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
    \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfpjjswd4.lua:23:\
    \ expected: \"Yellow_Yellow__Dirty__Fellow\"\nactual: \"Yellow_Yellow_Dirty_Fellow\"\
    \nstack traceback:\n\t/tmp/tmpfpjjswd4.lua:23: in function 'test_humaneval'\n\n\
    Ran 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception

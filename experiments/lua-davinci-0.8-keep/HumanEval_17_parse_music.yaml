name: HumanEval_17_parse_music
language: lua
prompt: "-- Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n-- Your task is to parse this string and return list of integers\
  \ corresponding to how many beats does each\n-- not last.\n-- Here is a legend:\n\
  -- 'o' - whole note, lasts four beats\n-- 'o|' - half note, lasts two beats\n--\
  \ '.|' - quater note, lasts one beat\n-- >>> parse_music('o o| .| o| o| .| .| .|\
  \ .| o o')\n-- [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\nlocal function parse_music(music_string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parse_music\n\
  \    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('o o o o'),\
  \ {4, 4, 4, 4})\n    lu.assertEquals(candidate('.| .| .| .|'), {1, 1, 1, 1})\n \
  \   lu.assertEquals(candidate('o| o| .| .| o o o o'), {2, 2, 1, 1, 4, 4, 4, 4})\n\
  \    lu.assertEquals(candidate('o| .| o| .| o o| o o|'), {2, 1, 2, 1, 4, 2, 4, 2})\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local music_items = {}\n    local item_index = 1\n    for item\
    \ in string.gmatch(music_string, '[^%s]+') do\n        music_items[item_index]\
    \ = item\n        item_index = item_index + 1\n    end\n    return music_items\n\
    end", "  local beats = {}\n  for char in music_string:gmatch'.' do\n    local\
    \ beat = (char == 'o' and 4) or (char == 'o|' and 2) or (char == '.|' and 1)\n\
    \    if beat then\n      table.insert(beats, beat)\n    end\n  end\n  return beats\n\
    end", "  local result = {}\n  local note_table = {\n    ['o'] = 4,\n    ['o|']\
    \ = 2,\n    ['.|'] = 1\n  }\n  for w in string.gmatch(music_string, '%S+') do\n\
    \    if note_table[w] then\n      table.insert(result, note_table[w])\n    end\n\
    \  end\n  return result\nend", "    local current_note = \"\"\n    local beats\
    \ = {}\n    for i = 1, #music_string do\n        local char = music_string:sub(i,\
    \ i)\n        if char == '|' then\n            if current_note == 'o' then\n \
    \               table.insert(beats, 4)\n            elseif current_note == '.'\
    \ then\n                table.insert(beats, 1)\n            end\n            current_note\
    \ = \"\"\n        else\n            current_note = current_note .. char\n    \
    \    end\n    end\n    return beats\nend", "    local list_of_notes = {}\n   \
    \ local last_index = 0\n    local current_index = 0\n    while current_index <\
    \ string.len(music_string) do\n        if string.sub(music_string, current_index,\
    \ current_index) == 'o' then\n            if string.sub(music_string, current_index\
    \ + 1, current_index + 1) == ' ' then\n                table.insert(list_of_notes,\
    \ 4)\n                current_index = current_index + 2\n            elseif string.sub(music_string,\
    \ current_index + 1, current_index + 1) == '|' then\n                table.insert(list_of_notes,\
    \ 2)\n                current_index = current_index + 3\n            end\n   \
    \     elseif string.sub(music_string, current_index, current_index) == '.' then\n\
    \            if string.sub(music_string, current_index + 1, current_index + 1)\
    \ == '|' then\n                table.insert(list_of_notes, 1)\n              \
    \  current_index = current_index + 3\n            end\n        end\n    end\n\
    \    return list_of_notes\nend", "    local function get_duration(s)\n       \
    \ local beat_dictionary = {o=4, ['o|']=2, ['.|']=1}\n        return beat_dictionary[s]\n\
    \    end\n    local beat_array = {}\n    local last_index = 0\n    for i in string.gmatch(music_string,\
    \ \"o[|%.]*\") do\n        local duration = get_duration(i)\n        table.insert(beat_array,\
    \ duration)\n        last_index = last_index + #i\n    end\n    return beat_array\n\
    end", "    local beats = {}\n    for beat in music_string:gmatch('%S+') do\n \
    \       local len = 1\n        local t = '|'\n        if string.sub(beat, -1)\
    \ == 'o' then\n            len = len + 2\n            t = ''\n        end\n  \
    \      beat = beat:gsub('%|', '')\n        if beat == 'o' then\n            len\
    \ = len + 2\n        end\n        beat = beat:gsub('%.', '')\n        if beat\
    \ == 'o' then\n            len = len + 1\n        end\n        beat = beat:gsub('%o',\
    \ '1')\n        table.insert(beats, tonumber(beat))\n    end\n    return beats\n\
    end", "  error('not implemented yet')\nend", "    local beat_map = {\n       \
    \ ['o'] = 4,\n        ['o|'] = 2,\n        ['.|'] = 1\n    }\n    local beats\
    \ = {}\n    for _, note in ipairs(string.split(music_string, ' ')) do\n      \
    \  beats[#beats + 1] = beat_map[note]\n    end\n    return beats\nend", "    local\
    \ beats = {}\n    for i=1, #music_string do\n        local char = music_string:sub(i,\
    \ i)\n        if char == 'o' then\n            table.insert(beats, 4)\n      \
    \  elseif char == '.' then\n            table.insert(beats, 1)\n        end\n\
    \    end\n    return beats\nend", "  local result = {}\n  for char in music_string:gmatch('.')\
    \ do\n    if char == 'o' then\n      table.insert(result, 4)\n    elseif char\
    \ == 'o' then\n      table.insert(result, 2)\n    elseif char == '.' then\n  \
    \    table.insert(result, 1)\n    end\n  end\n  return result\nend", "    local\
    \ notes = {\n        [\"o\"] = 4,\n        [\"o|\"] = 2,\n        [\".|\"] = 1\n\
    \    }\n    local result = {}\n    local index = 1\n    while index <= #music_string\
    \ do\n        if music_string:sub(index, index) == \" \" then\n            index\
    \ = index + 1\n        else\n            local note = music_string:sub(index,\
    \ index + 1)\n            if note == \"o|\" then\n                table.insert(result,\
    \ notes[note])\n                index = index + 2\n            else\n        \
    \        local new_note = note .. music_string:sub(index + 2, index + 2)\n   \
    \             if notes[new_note] then\n                    table.insert(result,\
    \ notes[new_note])\n                    index = index + 3\n                else\n\
    \                    table.insert(result, notes[note])\n                    index\
    \ = index + 1\n                end\n            end\n        end\n    end\n  \
    \  return result\nend", "  local raw_notes = string.gmatch(music_string, 'o|.|')\n\
    \  local beats = {}\n  for note in raw_notes do\n    if note == 'o' then\n   \
    \   table.insert(beats, 4)\n    elseif note == 'o|' then\n      table.insert(beats,\
    \ 2)\n    elseif note == '.|' then\n      table.insert(beats, 1)\n    end\n  end\n\
    \  return beats\nend", "\tlocal length = string.len(music_string)\n\tlocal result\
    \ = {}\n\tlocal curr_char = nil\n\tlocal curr_num = 0\n\tfor i = 1, length do\n\
    \t\tcurr_char = string.sub(music_string, i, i)\n\t\tif curr_char == 'o' then\n\
    \t\t\tcurr_num = 4\n\t\telseif curr_char == '|' then\n\t\t\tcurr_num = 2\n\t\t\
    elseif curr_char == '.' then\n\t\t\tcurr_num = 1\n\t\telseif curr_char == ' '\
    \ then\n\t\t\ttable.insert(result, curr_num)\n\t\tend\n\tend\n\treturn result\n\
    end", "  local music_map = {['o'] = 4, ['o|'] = 2, ['.|'] = 1}\n  local beats\
    \ = {}\n  -- TODO\n  local music = string.match(music_string, '[%a|%.]+')\n  for\
    \ note in string.gmatch(music, '%a+|?') do\n    table.insert(beats, music_map[note])\n\
    \  end\n  return beats\nend", "    local result = {}\n    local beats = {\n  \
    \      o = 4,\n        o_ = 2,\n        _o = 1,\n    }\n    for note in music_string:gmatch('%S+')\
    \ do\n        table.insert(result, beats[note:gsub('%s', '')])\n    end\n    return\
    \ result\nend", "\t-- Function definitions goes here\n\t--[[\n\tWhat needs to\
    \ be done:\n\t1. Parse the string\n\t2. Map each note to a number\n\t3. Return\
    \ a list of numbers\n\t]]--\n\tlocal notes_number = {}\n\tlocal i = 1\n\tfor note\
    \ in string.gmatch(music_string, \"%S+\") do\n\t\tif note == \"o\" then\n\t\t\t\
    notes_number[i] = 4\n\t\telseif note == \"o|\" then\n\t\t\tnotes_number[i] = 2\n\
    \t\telseif note == \".|\" then\n\t\t\tnotes_number[i] = 1\n\t\tend\n\t\ti = i\
    \ + 1\n\tend\n\treturn notes_number\nend", "    local length = string.len(music_string)\n\
    \    local music_list = {}\n    local tmp_char\n    local i = 1\n    while i <=\
    \ length do\n        tmp_char = string.sub(music_string, i, i)\n        if tmp_char\
    \ == 'o' then\n            if string.sub(music_string, i + 1, i + 1) == ' ' then\n\
    \                table.insert(music_list, 4)\n                i = i + 2\n    \
    \        elseif string.sub(music_string, i + 1, i + 2) == '| ' then\n        \
    \        table.insert(music_list, 2)\n                i = i + 3\n            else\n\
    \                return nil\n            end\n        elseif tmp_char == '.' then\n\
    \            if string.sub(music_string, i + 1, i + 2) == '| ' then\n        \
    \        table.insert(music_list, 1)\n                i = i + 3\n            else\n\
    \                return nil\n            end\n        else\n            return\
    \ nil\n        end\n    end\n    return music_list\nend", "    local music_array\
    \ = {}\n    for note in string.gmatch(music_string, '%S+') do\n        if note\
    \ == 'o' then\n            table.insert(music_array, 4)\n        elseif note ==\
    \ 'o|' then\n            table.insert(music_array, 2)\n        elseif note ==\
    \ '.|' then\n            table.insert(music_array, 1)\n        end\n    end\n\
    \    return music_array\nend", "    local music_list = {}\n    local time_unit\
    \ = {'o', 'o|', '.|'}\n    local time_value = {4, 2, 1}\n    for i=1,#music_string\
    \ do\n        for j=1,#time_unit do\n            if music_string:sub(i, i+1) ==\
    \ time_unit[j] then\n                table.insert(music_list, time_value[j])\n\
    \                break\n            end\n        end\n    end\n    return music_list\n\
    end", "    local beats = {}\n    for beat in music_string:gmatch(\"[%.o|]\") do\n\
    \        if beat == 'o' then\n            table.insert(beats, 4)\n        elseif\
    \ beat == 'o|' then\n            table.insert(beats, 2)\n        elseif beat ==\
    \ '.|' then\n            table.insert(beats, 1)\n        end\n    end\n    return\
    \ beats\nend", "  local ret = {}\n  for note in music_string:gmatch(\"[%w|]+\"\
    ) do\n    local value = {whole=4, half=2, quarter=1}[note:sub(1, -2)]\n    if\
    \ value then ret[#ret+1] = value end\n  end\n  return ret\nend", "  local iter\
    \ = music_string:gmatch(\"[%a%d|]+\")\n  local beat = {['o'] = 4, ['o|'] = 2,\
    \ ['.|'] = 1}\n  local res = {}\n  for m in iter do\n    table.insert(res, beat[m])\n\
    \  end\n  return res\nend", "    local beats = {}\n    local music_counter = 1\n\
    \    for i=1, #music_string do\n        local c = music_string:sub(i, i)\n   \
    \     if c == 'o' then\n            beats[music_counter] = 4\n            music_counter\
    \ = music_counter + 1\n        elseif c == '.' then\n            if music_string:sub(i+1,\
    \ i+1) == '|' then\n                beats[music_counter] = 1\n               \
    \ music_counter = music_counter + 1\n                i = i + 1\n            end\n\
    \        elseif c == 'o' then\n            if music_string:sub(i+1, i+1) == '|'\
    \ then\n                beats[music_counter] = 2\n                music_counter\
    \ = music_counter + 1\n                i = i + 1\n            end\n        end\n\
    \    end\n    return beats\nend", "    local music_array = {}\n    for note in\
    \ string.gmatch(music_string, '([o|.])') do\n        if note == 'o' then\n   \
    \         table.insert(music_array, 4)\n        elseif note == 'o|' then\n   \
    \         table.insert(music_array, 2)\n        elseif note == '.|' then\n   \
    \         table.insert(music_array, 1)\n        end\n    end\n    return music_array\n\
    end", "    local note_table = {}\n    local note_legend = {['o'] = 4, ['o|'] =\
    \ 2, ['.|'] = 1}\n    local note_pattern = '(o|o|.|)'\n    local s, e = string.find(music_string,\
    \ note_pattern)\n    while s do\n        local match = string.sub(music_string,\
    \ s, e)\n        table.insert(note_table, note_legend[match])\n        s, e =\
    \ string.find(music_string, note_pattern, e+1)\n    end\n    return note_table\n\
    end", "\tlocal duration_table = {}\n\tfor i=1, #music_string do\n\t\tif music_string:sub(i,i)\
    \ == 'o' then\n\t\t\tif music_string:sub(i+1,i+1) == ' ' then\n\t\t\t\ttable.insert(duration_table,\
    \ 4)\n\t\t\telseif music_string:sub(i+1,i+1) == '|' then\n\t\t\t\ttable.insert(duration_table,\
    \ 2)\n\t\t\tend\n\t\telseif music_string:sub(i,i) == '.' then\n\t\t\tif music_string:sub(i+1,i+1)\
    \ == '|' then\n\t\t\t\ttable.insert(duration_table, 1)\n\t\t\tend\n\t\tend\n\t\
    end\n\treturn duration_table\nend", "    -- Your code goes here\nend", "  return\
    \ {}\nend", "    local note_table = {}\n    for notestr in string.gmatch(music_string,\
    \ '%S+') do\n        table.insert(note_table, notestr)\n    end\n    local note_beat\
    \ = {}\n    for _, v in ipairs(note_table) do\n        if v == 'o' then\n    \
    \        table.insert(note_beat, 4)\n        elseif v == 'o|' then\n         \
    \   table.insert(note_beat, 2)\n        elseif v == '.|' then\n            table.insert(note_beat,\
    \ 1)\n        end\n    end\n    return note_beat\nend", "    local result = {}\n\
    \    local note_mapping = {\n        ['o'] = 4,\n        ['o|'] = 2,\n       \
    \ ['.|'] = 1\n    }\n    for note in string.gmatch(music_string, '([o.]%|?)')\
    \ do\n        table.insert(result, note_mapping[note])\n    end\n    return result\n\
    end", "    local beat_length = {\n        o = 4,\n        ['o|'] = 2,\n      \
    \  ['.|'] = 1\n    }\n    local result = {}\n    for beat in music_string:gmatch('o|o|%.[|]')\
    \ do\n        table.insert(result, beat_length[beat])\n    end\n    return result\n\
    end", "  local chord_len = {o = 4, 'o|' = 2, '.|' = 1}\n  local r = {}\n  for\
    \ chord in music_string:gmatch('%S+') do\n    table.insert(r, chord_len[chord])\n\
    \  end\n  return r\nend", "  -- Write your code here\nend", "    local music_table\
    \ = {}\n    for note in string.gmatch(music_string, '%a*') do\n        if note\
    \ == 'o' then\n            table.insert(music_table, 4)\n        elseif note ==\
    \ 'o|' then\n            table.insert(music_table, 2)\n        elseif note ==\
    \ '.|' then\n            table.insert(music_table, 1)\n        end\n    end\n\
    \    return music_table\nend", "    local function parse_note(note)\n        if\
    \ note == 'o' then\n            return 4\n        elseif note == 'o|' then\n \
    \           return 2\n        elseif note == '.|' then\n            return 1\n\
    \        end\n    end", "    local out = {}\n    for _, c in ipairs(list_from_string(music_string))\
    \ do\n        if c == 'o' then\n            table.insert(out, 4)\n        elseif\
    \ c == '.' then\n            table.insert(out, 1)\n        end\n    end\n    return\
    \ out\nend", "    local note_table = {}\n    for s in string.gmatch(music_string,\
    \ \"%S+\") do\n        if s == 'o' then\n            table.insert(note_table,\
    \ 4)\n        elseif s == 'o|' then\n            table.insert(note_table, 2)\n\
    \        elseif s == '.|' then\n            table.insert(note_table, 1)\n    \
    \    end\n    end\n    return note_table\nend", "  local result = {}\n  for m\
    \ in music_string:gmatch('%S+') do\n    if m == 'o' then\n      table.insert(result,\
    \ 4)\n    elseif m == 'o|' then\n      table.insert(result, 2)\n    elseif m ==\
    \ '.|' then\n      table.insert(result, 1)\n    end\n  end\n  return result\n\
    end", "  local beats = {}\n  for beat in music_string:gmatch('o?%||o?') do\n \
    \   table.insert(beats, 1 * #beat)\n  end\n  return beats\nend", "  local beats\
    \ = {}\n  for w in string.gmatch(music_string, \"[^%s]+\") do\n    local _, count\
    \ = string.gsub(w, \"|\", \"\")\n    if count == 0 then\n      table.insert(beats,\
    \ 4)\n    else\n      table.insert(beats, 1 * count)\n    end\n  end\n  return\
    \ beats\nend", '    -- TODO: your code goes here', "    return {}\nend", "\tlocal\
    \ i = 1\n\tlocal notes = {}\n\t\n\twhile i <= #music_string do\n\t\tlocal c =\
    \ music_string:sub(i, i)\n\t\tif c == 'o' then\n\t\t\tnotes[#notes + 1] = 4\n\t\
    \t\ti = i + 1\n\t\telseif c == '.' then\n\t\t\tnotes[#notes + 1] = 1\n\t\t\ti\
    \ = i + 2\n\t\tend\n\tend\n\t\n\treturn notes\nend", "  local ret = {}\n  local\
    \ i = 1\n  for s in string.gmatch(music_string, '([^%s]+)') do\n    if s == 'o'\
    \ then\n      ret[i] = 4\n    elseif s == 'o|' then\n      ret[i] = 2\n    elseif\
    \ s == '.|' then\n      ret[i] = 1\n    end\n    i = i + 1\n  end\n  return ret\n\
    end", "    local notes = { 'o', 'o|', '.|' }\n    local beats = { 4, 2, 1 }\n\
    \    local results = {}\n    for i = 1, #music_string do\n        local c = music_string:sub(i,\
    \ i)\n        for j = 1, #notes do\n            if notes[j] == c then\n      \
    \          results[#results + 1] = beats[j]\n            end\n        end\n  \
    \  end\n    return results\nend", "  local len = string.len(music_string)\n  local\
    \ result = {}\n  local length = 0\n  local index = 1\n  for i = 1, len do\n  \
    \  if string.sub(music_string, i, i) == 'o' then\n      result[index] = 4\n  \
    \    index = index + 1\n    elseif string.sub(music_string, i, i) == '.' then\n\
    \      result[index] = 1\n      index = index + 1\n    end\n  end\n  return result\n\
    end", "    if string.len(music_string) == 0 then\n        return {}\n    end\n\
    \    local beat_string = ''\n    for i=1,string.len(music_string) do\n       \
    \ if string.sub(music_string, i, i) == ' ' then\n            table.insert(notes,\
    \ tonumber(beat_string))\n            beat_string = ''\n        elseif string.sub(music_string,\
    \ i, i) == 'o' then\n            beat_string = beat_string .. '4'\n        elseif\
    \ string.sub(music_string, i, i) == '.' then\n            beat_string = beat_string\
    \ .. '1'\n        elseif string.sub(music_string, i, i) == '|' then\n        \
    \    table.insert(notes, tonumber(beat_string))\n            beat_string = ''\n\
    \        end\n    end\n    return notes\nend", "    local beat_table = {}\n  \
    \  local beat_table_counter = 1\n    for i = 1, #music_string do\n        if music_string:sub(i,\
    \ i) == 'o' then\n            if music_string:sub(i + 1, i + 1) == '|' then\n\
    \                beat_table[beat_table_counter] = 2\n                beat_table_counter\
    \ = beat_table_counter + 1\n            else\n                beat_table[beat_table_counter]\
    \ = 4\n                beat_table_counter = beat_table_counter + 1\n         \
    \   end\n        elseif music_string:sub(i, i) == '.' then\n            if music_string:sub(i\
    \ + 1, i + 1) == '|' then\n                beat_table[beat_table_counter] = 1\n\
    \                beat_table_counter = beat_table_counter + 1\n            end\n\
    \        end\n    end\n    return beat_table\nend", "    local beats = {}\n  \
    \  -- your code goes here!\n    local beat_table = string.gmatch(music_string,\
    \ \"[^%s]+\")\n    local beat_index = 1\n    for word in beat_table do\n     \
    \   if string.find(word, \"o\") ~= nil then\n            beats[beat_index] = 4\n\
    \        elseif string.find(word, \"o|\") ~= nil then\n            beats[beat_index]\
    \ = 2\n        elseif string.find(word, \".|\") ~= nil then\n            beats[beat_index]\
    \ = 1\n        end\n        beat_index = beat_index + 1\n    end\n    return beats\n\
    end", "    local result = {}\n    for _, note in pairs(string.split(music_string,\
    \ ' ')) do\n        if note == 'o' then\n            table.insert(result, 4)\n\
    \        elseif note == 'o|' then\n            table.insert(result, 2)\n     \
    \   elseif note == '.|' then\n            table.insert(result, 1)\n        end\n\
    \    end\n    return result\nend", "  local beats = {}\n  local index = 1\n  while\
    \ index <= #music_string do\n    if music_string:sub(index, index) == 'o' then\n\
    \      if music_string:sub(index + 1, index + 1) == ' ' then\n        table.insert(beats,\
    \ 4)\n        index = index + 2\n      elseif music_string:sub(index + 1, index\
    \ + 1) == '|' then\n        table.insert(beats, 2)\n        index = index + 3\n\
    \      end\n    elseif music_string:sub(index, index) == '.' then\n      if music_string:sub(index\
    \ + 1, index + 1) == '|' then\n        table.insert(beats, 1)\n        index =\
    \ index + 3\n      end\n    end\n  end\n  return beats\nend", "    local ret =\
    \ {}\n    local last_index = 1\n    for char in string.gmatch(music_string, \"\
    .\") do\n        if char == 'o' then\n            table.insert(ret, 4)\n     \
    \   elseif char == 'o' then\n            table.insert(ret, 2)\n        elseif\
    \ char == '.' then\n            table.insert(ret, 1)\n        end\n    end\n \
    \   return ret\nend", "    local beat_count = {}\n    local beat_map = {\n   \
    \     ['o'] = 4,\n        ['o|'] = 2,\n        ['.|'] = 1\n    }\n    for match\
    \ in music_string:gmatch('[o.|]+') do\n        table.insert(beat_count, beat_map[match])\n\
    \    end\n    return beat_count\nend", "    local beats = {}\n    local last =\
    \ 1\n    local c = music_string:sub(last, last)\n    while c do\n        if c\
    \ == 'o' then\n            last = last + 1\n            if music_string:sub(last,\
    \ last) == '|' then\n                table.insert(beats, 2)\n                last\
    \ = last + 1\n            else\n                table.insert(beats, 4)\n     \
    \       end\n        elseif c == '.' then\n            last = last + 1\n     \
    \       assert(music_string:sub(last, last) == '|')\n            table.insert(beats,\
    \ 1)\n            last = last + 1\n        else\n            error(\"Found '\"\
    \ .. c .. \"' where note was expected.\")\n        end\n        c = music_string:sub(last,\
    \ last)\n    end\n    return beats\nend", "\t-- YOUR CODE HERE\n\tlocal list={}\n\
    \tlocal curr_num=1\n\tlocal last_char='o'\n\tlocal i=1\n\twhile(i<=string.len(music_string))\
    \ do\n\t\tlocal char = string.sub(music_string,i,i)\n\t\tif(char == 'o') then\n\
    \t\t\tlast_char='o'\n\t\t\ti=i+1\n\t\telseif(char == '|') then\n\t\t\tif(last_char\
    \ == 'o') then\n\t\t\t\ttable.insert(list,curr_num,4)\n\t\t\t\tcurr_num=curr_num+1\n\
    \t\t\telseif(last_char == '.') then\n\t\t\t\ttable.insert(list,curr_num,2)\n\t\
    \t\t\tcurr_num=curr_num+1\n\t\t\tend\n\t\t\ti=i+1\n\t\telseif(char == '.') then\n\
    \t\t\tif(last_char == '.') then\n\t\t\t\ttable.insert(list,curr_num,1)\n\t\t\t\
    \tcurr_num=curr_num+1\n\t\t\tend\n\t\t\tlast_char='.'\n\t\t\ti=i+1\n\t\telseif(char\
    \ == ' ') then\n\t\t\tif(last_char == '.') then\n\t\t\t\ttable.insert(list,curr_num,1)\n\
    \t\t\t\tcurr_num=curr_num+1\n\t\t\tend\n\t\t\ti=i+1\n\t\tend\n\tend\n\tif(last_char\
    \ == 'o') then\n\t\ttable.insert(list,curr_num,4)\n\t\tcurr_num=curr_num+1\n\t\
    elseif(last_char == '.') then\n\t\ttable.insert(list,curr_num,1)\n\t\tcurr_num=curr_num+1\n\
    \tend\n\treturn list\nend", "\tlocal result = {}\n\t-- Concatonate the music string\
    \ with a space character at the end.\n\tmusic_string = music_string .. ' '\n\t\
    -- This table maps the different musical symbols to their beat duration.\n\tlocal\
    \ symbol_table = {\n\t\to = 4,\n\t\t['o|'] = 2,\n\t\t['.|'] = 1\n\t}\n\t-- The\
    \ number of beats so far in the music.\n\tlocal beat_count = 0\n\t-- We'll use\
    \ regular expressions to match the music symbols.\n\t-- Use the string.gmatch\
    \ function to iterate over the music_string.\n\t-- The function will be called\
    \ for each music symbol.\n\tfor symbol in string.gmatch(music_string, '(%a+)|')\
    \ do\n\t\t-- Get the number of beats of the current symbol.\n\t\tlocal symbol_beats\
    \ = symbol_table[symbol]\n\t\t-- Add the symbol beats to the beat count and add\
    \ it to the result.\n\t\tbeat_count = beat_count + symbol_beats\n\t\ttable.insert(result,\
    \ beat_count)\n\tend\n\t-- Return the result.\n\treturn result\nend", "\tlocal\
    \ res = {}\n\tlocal k = 1\n\tfor i in string.gmatch(music_string, '%S+') do\n\t\
    \tif i == 'o' then\n\t\t\tres[k] = 4\n\t\telseif i == 'o|' then\n\t\t\tres[k]\
    \ = 2\n\t\telseif i == '.|' then\n\t\t\tres[k] = 1\n\t\tend\n\t\tk = k + 1\n\t\
    end\n\treturn res\nend", "\t-- ...TODO: YOUR CODE HERE...\n\tlocal result = {}\n\
    \tfor i = 1, #music_string do\n\t\tlocal char = music_string:sub(i, i)\n\t\tlocal\
    \ num = 0\n\t\tif char == 'o' then\n\t\t\tnum = 4\n\t\telseif char == 'o' then\n\
    \t\t\tnum = 2\n\t\telseif char == 'o' then\n\t\t\tnum = 1\n\t\tend\n\t\tresult[#result\
    \ + 1] = num\n\tend\n\treturn result\nend", "    local beats = {}\n    local note\
    \ = ''\n    local length = 0\n    for i = 1, string.len(music_string) do\n   \
    \     local c = string.sub(music_string, i, i)\n        if c == 'o' then\n   \
    \         if note == '.' then\n                table.insert(beats, length)\n \
    \               length = 4\n            else\n                length = length\
    \ + 4\n            end\n            note = 'o'\n        elseif c == '.' then\n\
    \            if note == 'o' then\n                table.insert(beats, length)\n\
    \                length = 1\n            else\n                length = length\
    \ + 1\n            end\n            note = '.'\n        elseif c == '|' then\n\
    \            table.insert(beats, length)\n            length = 0\n        end\n\
    \    end\n    table.insert(beats, length)\n    return beats\nend", "  local note_array\
    \ = {}\n  for note in string.gmatch(music_string, \"%S+\") do\n    if note ==\
    \ 'o' then\n      table.insert(note_array, 4)\n    elseif note == 'o|' then\n\
    \      table.insert(note_array, 2)\n    elseif note == '.|' then\n      table.insert(note_array,\
    \ 1)\n    end\n  end\n  return note_array\nend", "  local result = {}\n  for i=1,string.len(music_string)\
    \ do\n    local ch = string.sub(music_string, i, i)\n    if ch == 'o' then\n \
    \     result[#result+1] = 4\n    elseif ch == '|' then\n      result[#result+1]\
    \ = 2\n    elseif ch == '.' then\n      result[#result+1] = 1\n    end\n  end\n\
    \  return result\nend", "  local notes = {'o', 'o|', '.|'}\n  local beats = {4,\
    \ 2, 1}\n  local result = {}\n  local current_index = 1\n  while current_index\
    \ <= #music_string do\n    for i = 1, #notes do\n      if string.sub(music_string,\
    \ current_index, current_index + #notes[i] - 1) == notes[i] then\n        result[#result\
    \ + 1] = beats[i]\n        current_index = current_index + #notes[i]\n       \
    \ break\n      end\n    end\n  end\n  return result\nend", "  local result = {}\n\
    \  local beats = { o = 4, ['o|'] = 2, ['.|'] = 1 }\n  local words = split(music_string,\
    \ ' ')\n  for i, v in ipairs(words) do\n    table.insert(result, beats[v])\n \
    \ end\n  return result\nend", "    local beats = {}\n    for beat in music_string:gmatch('%S+')\
    \ do\n        if beat == 'o' then\n            table.insert(beats, 4)\n      \
    \  elseif beat == 'o|' then\n            table.insert(beats, 2)\n        elseif\
    \ beat == '.|' then\n            table.insert(beats, 1)\n        end\n    end\n\
    \    return beats\nend", "    local result = {}\n    for char in music_string:gmatch\"\
    .\" do\n        if char == 'o' then\n            table.insert(result, 4)\n   \
    \     elseif char == '.' then\n            table.insert(result, 1)\n        end\n\
    \    end\n    return result\nend", "    local result = {}\n    for note in music_string:gmatch(\"\
    %w+\") do\n        local beats = 0\n        for char in note:gmatch(\".\") do\n\
    \            if char == 'o' then\n                beats = beats + 4\n        \
    \    elseif char == '|' then\n                beats = beats + 2\n            elseif\
    \ char == '.' then\n                beats = beats + 1\n            end\n     \
    \   end\n        table.insert(result, beats)\n    end\n    return result\nend",
  "    local res = {}\n    for _, v in ipairs(split(music_string, \" \")) do\n   \
    \     if v == \"o\" then\n            table.insert(res, 4)\n        elseif v ==\
    \ \"o|\" then\n            table.insert(res, 2)\n        elseif v == \".|\" then\n\
    \            table.insert(res, 1)\n        end\n    end\n    return res\nend",
  "\tlocal tab = {}\n\tfor i = 1, string.len(music_string) do\n\t\tlocal c = string.sub(music_string,\
    \ i, i)\n\t\tif c == 'o' then\n\t\t\ttable.insert(tab, 4)\n\t\telseif c == '.'\
    \ then\n\t\t\ttable.insert(tab, 1)\n\t\telseif c == '|' then\n\t\t\ttable.insert(tab,\
    \ 2)\n\t\tend\n\tend\n\treturn tab\nend", "  local beats = {4, 2, 1, 2, 2, 1,\
    \ 1, 1, 1, 4, 4}\n  return beats\nend", "\tlocal beats_list = {}\n\tlocal notes\
    \ = split(music_string, ' ')\n\tfor i, note in ipairs(notes) do\n\t\tif note ==\
    \ 'o' then\n\t\t\tbeats_list[i] = 4\n\t\telseif note == 'o|' then\n\t\t\tbeats_list[i]\
    \ = 2\n\t\telseif note == '.|' then\n\t\t\tbeats_list[i] = 1\n\t\tend\n\tend\n\
    \treturn beats_list\nend", "  local result = {}\n  for music_symbol in music_string:gmatch(\"\
    [o.|]+\") do\n    if music_symbol == 'o' then\n      table.insert(result, 4)\n\
    \    elseif music_symbol == 'o|' then\n      table.insert(result, 2)\n    elseif\
    \ music_symbol == '.|' then\n      table.insert(result, 1)\n    end\n  end\n \
    \ return result\nend", "    local beats = {}\n    for match in string.gmatch(music_string,\
    \ 'o|o|%.') do\n        if match == 'o' then\n            table.insert(beats,\
    \ 4)\n        elseif match == 'o|' then\n            table.insert(beats, 2)\n\
    \        elseif match == '.|' then\n            table.insert(beats, 1)\n     \
    \   end\n    end\n    return beats\nend", "    local res = {}\n    local function\
    \ helper(s)\n        if not s or #s == 0 then\n            return\n        end\n\
    \        local cur = s:sub(1, 1)\n        if cur == 'o' then\n            table.insert(res,\
    \ 4)\n            helper(s:sub(2))\n        elseif cur == '.' then\n         \
    \   table.insert(res, 1)\n            helper(s:sub(3))\n        else\n       \
    \     table.insert(res, 2)\n            helper(s:sub(3))\n        end\n    end\n\
    \    helper(music_string)\n    return res\nend", "  -- Your code goes here.\n\
    \  local tabla = {}\n  local temp = \"\"\n  --spliting string in the separator\
    \ '|'\n  for c in string.gmatch(music_string, \"([^|]+)\") do\n    --inserting\
    \ the table\n    table.insert(tabla, c)\n  end\n  --reading from the table\n \
    \ for k,v in pairs(tabla) do\n    --spliting string in the separator ' '\n   \
    \ for i in string.gmatch(v, \"([^ ]+)\") do\n      --concatenating the value of\
    \ i and a space\n      temp = temp .. i .. \" \"\n    end\n  end\n  tabla = {}\n\
    \  --spliting string in the separator ' '\n  for i in string.gmatch(temp, \"([^\
    \ ]+)\") do\n    --checking if the value of i is 'o'\n    if i == \"o\" then\n\
    \      --inserting the table\n      table.insert(tabla, 4)\n    else\n      --inserting\
    \ the table\n      table.insert(tabla, 2)\n    end\n  end\n  return tabla\nend",
  "  \n  local beat_table = {}\n  local beat_index = 1\n  local beat_length = 1\n\
    \  local beat_char = \"\"\n  local beat_substring = \"\"\n  \n  for i = 1, music_string:len()\
    \ do\n    beat_char = music_string:sub(i, i)\n    beat_substring = music_string:sub(i,\
    \ i + 1)\n    \n    if beat_char == \"o\" then\n      beat_length = 4\n    elseif\
    \ beat_substring == \"o|\" then\n      beat_length = 2\n      i = i + 1\n    elseif\
    \ beat_substring == \".|\" then\n      beat_length = 1\n      i = i + 1\n    end\n\
    \    \n    beat_table[beat_index] = beat_length\n    beat_index = beat_index +\
    \ 1\n  end\n  \n  return beat_table\nend", "    local steps = {}\n    for note\
    \ in music_string:gmatch('%S+') do\n        local code = note:sub(1, 1)\n    \
    \    if code == 'o' then\n            table.insert(steps, 4)\n        elseif code\
    \ == '.' then\n            table.insert(steps, 1)\n        end\n    end\n    return\
    \ steps\nend", "    local result = {}\n    for beat in music_string:gmatch(\"\
    .\") do\n        table.insert(result, get_beat_duration(beat))\n    end\n    return\
    \ result\nend", "  local beats = {}\n  for note in music_string:gmatch('%S+')\
    \ do\n    table.insert(beats, ({ ['o'] = 4, ['o|'] = 2, ['.|'] = 1 })[note])\n\
    \  end\n  return beats\nend", "  local beats = {}\n  local temp_beat\n  for temp_beat\
    \ in music_string:gmatch('%S+') do\n    if temp_beat == 'o' then\n      table.insert(beats,\
    \ 4)\n    elseif temp_beat == 'o|' then\n      table.insert(beats, 2)\n    elseif\
    \ temp_beat == '.|' then\n      table.insert(beats, 1)\n    end\n  end\n  return\
    \ beats\nend", "    local beats = {}\n    for beat in music_string:gmatch('%S+')\
    \ do\n        local value = beat:sub(1,1)\n        if value == 'o' then\n    \
    \        value = 4\n        elseif value == '.' then\n            value = 1\n\
    \        end\n        table.insert(beats, value)\n    end\n    return beats\n\
    end", "\tlocal beats = {}\n\tlocal t = {}\n\tfor i in string.gmatch(music_string,\
    \ \"%S+\") do\n\t\ttable.insert(t, i)\n\tend\n\tfor i = 1, #t do\n\t\tif t[i]\
    \ == 'o' then\n\t\t\ttable.insert(beats, 4)\n\t\telseif t[i] == 'o|' then\n\t\t\
    \ttable.insert(beats, 2)\n\t\telseif t[i] == '.|' then\n\t\t\ttable.insert(beats,\
    \ 1)\n\t\tend\n\tend\n\treturn beats\nend", "  local beats = {}\n  for beat in\
    \ music_string:gmatch('o[|.]*') do\n    local beats_count = 2 ^ beat:len()\n \
    \   table.insert(beats, beats_count)\n  end\n  return beats\nend", "  -- Remove\
    \ all spaces\n  music_string = music_string:gsub(' ', '')\n  local beats = {}\n\
    \  local note_value = {['o'] = 4, ['o|'] = 2, ['.|'] = 1}\n  -- we split music\
    \ into notes and then increment beat with each new note\n  for note in music_string:gmatch('[o.|]+')\
    \ do\n    table.insert(beats, note_value[note])\n  end\n  return beats\nend",
  "   -- your code here\n   local l = {}\n   for token in string.gmatch(music_string,\
    \ \"[^%s]+\") do\n      local value = 0\n      if token == 'o' then\n        \
    \ value = 4\n      elseif token == 'o|' then\n         value = 2\n      elseif\
    \ token == '.|' then\n         value = 1\n      end\n      l[#l + 1] = value\n\
    \   end\n   return l\nend", "  local curr_beat = 1\n  local music_lst = {}\n \
    \ local idx = 1\n  local char = string.sub(music_string, idx, idx)\n  while char\
    \ ~= '' do\n    if char == 'o' then\n      table.insert(music_lst, 4)\n      curr_beat\
    \ = curr_beat + 4\n    elseif char == 'o' and string.sub(music_string, idx + 1,\
    \ idx + 1) == '|' then\n      table.insert(music_lst, 2)\n      curr_beat = curr_beat\
    \ + 2\n      idx = idx + 1\n    elseif char == '.' and string.sub(music_string,\
    \ idx + 1, idx + 1) == '|' then\n      table.insert(music_lst, 1)\n      curr_beat\
    \ = curr_beat + 1\n      idx = idx + 1\n    end\n    idx = idx + 1\n    char =\
    \ string.sub(music_string, idx, idx)\n  end\n  return music_lst\nend", "    return\
    \ {}\nend", "    local beats = {}\n    local parse_dict = {\n        ['o'] = 4,\n\
    \        ['o|'] = 2,\n        ['.|'] = 1\n    }\n    for match in music_string:gmatch('[o|.]+')\
    \ do\n        table.insert(beats, parse_dict[match])\n    end\n    return beats\n\
    end", "  notes = {'o', 'o|', '.|'}\n  beats = {4, 2, 1}\n  music_notes = {}\n\
    \  for i = 1, #music_string do\n    for j = 1, #notes do\n      if (music_string:sub(i,\
    \ i+#notes[j]-1) == notes[j]) then\n        table.insert(music_notes, beats[j])\n\
    \        i = i + #notes[j] - 1\n      end\n    end\n  end\n  return music_notes\n\
    end", "    local tokens = {}\n    local acc = ''\n    for c in music_string:gmatch('.')\
    \ do\n        if c == ' ' then\n            table.insert(tokens, acc)\n      \
    \      acc = ''\n        else\n            acc = acc .. c\n        end\n    end\n\
    \    table.insert(tokens, acc)\n    local beats = {}\n    for _, token in ipairs(tokens)\
    \ do\n        if token == 'o' then\n            table.insert(beats, 4)\n     \
    \   elseif token == 'o|' then\n            table.insert(beats, 2)\n        elseif\
    \ token == '.|' then\n            table.insert(beats, 1)\n        end\n    end\n\
    \    return beats\nend", "    local duration = {['o'] = 4, ['o|'] = 2, ['.|']\
    \ = 1}\n    local beats = {}\n    for duration in music_string:gmatch('o|o%||.%|')\
    \ do\n        table.insert(beats, duration[duration])\n    end\n    return beats\n\
    end", "    local music_table = {}\n    for v in string.gmatch(music_string, '.')\
    \ do\n        if v == 'o' then\n            table.insert(music_table, 4)\n   \
    \     elseif v == 'o' then\n            table.insert(music_table, 2)\n       \
    \ elseif v == '.' then\n            table.insert(music_table, 1)\n        end\n\
    \    end\n    return music_table\nend", "  local tones = {\n    ['o'] = 4,\n \
    \   ['o|'] = 2,\n    ['.|'] = 1\n  }\n  local music = {}\n  for tone in music_string:gmatch('%S+')\
    \ do\n    music[#music + 1] = tones[tone]\n  end\n  return music\nend", "    local\
    \ result = {}\n    local i = 1\n    local len = #music_string\n    local n = 0\n\
    \    while i <= len do\n        local char = music_string:sub(i, i)\n        if\
    \ char == ' ' then\n            i = i + 1\n        elseif char == 'o' then\n \
    \           n = n + 4\n            i = i + 1\n        elseif char == '.' then\n\
    \            n = n + 1\n            i = i + 2\n        else\n            print(\"\
    Error in char \" .. char)\n        end\n        result[#result + 1] = n\n    \
    \    n = 0\n    end\n    return result\nend", "\tlocal beats = {}\n\tlocal current\
    \ = 1\n\tfor beat in string.gmatch(music_string, '%S+') do\n\t\tif beat == 'o'\
    \ then\n\t\t\tbeats[current] = 4\n\t\telseif beat == 'o|' then\n\t\t\tbeats[current]\
    \ = 2\n\t\telseif beat == '.|' then\n\t\t\tbeats[current] = 1\n\t\tend\n\t\tcurrent\
    \ = current + 1\n\tend\n\treturn beats\nend", "    -- get notes and durations\n\
    \    local notes = music_string:gmatch('o')\n    local durations = music_string:gmatch('o|')\n\
    \    local beats = {}\n    local current_beat = 0\n    local note_list = {}\n\
    \    for i, note in ipairs(notes) do\n        -- print(i, note)\n        -- print(i,\
    \ durations[i])\n        note_list[i] = 4\n        if durations[i] == 'o|' then\n\
    \            note_list[i] = 2\n        end\n    end\n    return note_list\nend",
  "    local BEAT_MAP = {['o'] = 4, ['o|'] = 2, ['.|'] = 1}\n    local beats = {}\n\
    \    local last_beat = nil\n    for beat in music_string:gmatch(\"(%w+)\") do\n\
    \        if BEAT_MAP[beat] then\n            table.insert(beats, BEAT_MAP[beat])\n\
    \            last_beat = BEAT_MAP[beat]\n        else\n            local num_reps\
    \ = tonumber(beat)\n            for i = 1, num_reps do\n                table.insert(beats,\
    \ last_beat)\n            end\n        end\n    end\n    return beats\nend", " \
    \   local d = {\n        ['o'] = 4,\n        ['o|'] = 2,\n        ['.|'] = 1\n\
    \    }\n    local t = {}\n    for i, m in ipairs(music_string:split(' ')) do\n\
    \        table.insert(t, d[m])\n    end\n    return t\nend", "  local music_string_split\
    \ = string.split(music_string, \" \")\n  local beats = {}\n  for i, v in ipairs(music_string_split)\
    \ do\n    if v == \"o\" then\n      beats[i] = 4\n    elseif v == \"o|\" then\n\
    \      beats[i] = 2\n    elseif v == \".|\" then\n      beats[i] = 1\n    end\n\
    \  end\n  return beats\nend", "  music_string = music_string .. ' '\n  local i\
    \ = 1\n  local beats = {}\n  local beat = 1\n  while i <= #music_string do\n \
    \   local c = music_string:sub(i, i)\n    if c == 'o' then\n      beat = 4\n \
    \   elseif c == '.' then\n      beat = 1\n    elseif c == '|' then\n      beat\
    \ = beat / 2\n    elseif c == ' ' then\n      table.insert(beats, beat)\n    \
    \  beat = 1\n    end\n    i = i + 1\n  end\n  return beats\nend", "\t-- TODO:\
    \ Your code here\n\tlocal pattern = 'o*o?o|*[|.|]+'\n\tlocal len = #music_string\n\
    \tlocal start = 1\n\tlocal result = {}\n\tlocal i = 1\n\twhile start < len do\n\
    \t\tlocal o = string.find(music_string, pattern, start)\n\t\tlocal sub = string.sub(music_string,\
    \ start, o-1)\n\t\tstart = o\n\t\tlocal sub1 = string.find(sub, pattern)\n\t\t\
    if not sub1 then\n\t\t\tlocal count = 0\n\t\t\tfor j = 1, #sub do\n\t\t\t\tif\
    \ sub[j] == 'o' then\n\t\t\t\t\tcount = count + 1\n\t\t\t\tend\n\t\t\tend\n\t\t\
    \tresult[i] = count*4\n\t\t\ti = i + 1\n\t\telse\n\t\t\tlocal count = 0\n\t\t\t\
    for j = 1, #sub do\n\t\t\t\tif sub[j] == 'o' then\n\t\t\t\t\tcount = count + 1\n\
    \t\t\t\tend\n\t\t\tend\n\t\t\tresult[i] = count*4\n\t\t\ti = i + 1\n\t\t\tlocal\
    \ count1 = 0\n\t\t\tlocal sub2 = string.sub(sub, sub1)\n\t\t\tfor j = 1, #sub2\
    \ do\n\t\t\t\tif sub2[j] == 'o' then\n\t\t\t\t\tcount1 = count1 + 1\n\t\t\t\t\
    end\n\t\t\tend\n\t\t\tresult[i] = count1*2\n\t\t\ti = i + 1\n\t\t\tlocal count2\
    \ = 0\n\t\t\tlocal sub3 = string.sub(sub2, #sub2-1)\n\t\t\tfor j = 1, #sub3 do\n\
    \t\t\t\tif sub3[j] == '|' then\n\t\t\t\t\tcount2 = count2 + 1\n\t\t\t\tend\n\t\
    \t\tend\n\t\t\tresult[i] = count2\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn result\n\
    end", "    local result = {}\n    for note in music_string:gmatch('[o|\\.]+')\
    \ do\n        if note == 'o' then\n            table.insert(result, 4)\n     \
    \   elseif note == 'o|' then\n            table.insert(result, 2)\n        elseif\
    \ note == '.|' then\n            table.insert(result, 1)\n        end\n    end\n\
    \    return result\nend", "\tlocal p = {}\n\tfor c in music_string:gmatch(\".\"\
    ) do\n\t\tif c == 'o' then\n\t\t\ttable.insert(p, 4)\n\t\telseif c == '|' then\n\
    \t\t\tp[#p] = p[#p] / 2\n\t\tend\n\tend\n\treturn p\nend", "    local note_list\
    \ = {}\n    local i = 1\n    for match in music_string:gmatch('%S+') do\n    \
    \    note_list[i] = 4\n        if match == 'o|' then\n            note_list[i]\
    \ = 2\n        elseif match == '.|' then\n            note_list[i] = 1\n     \
    \   end\n        i = i + 1\n    end\n    return note_list\nend", "\tlocal beats\
    \ = {}\n\tlocal m = string.gmatch(music_string, '.')\n\tfor c in m do\n\t\tif\
    \ c == 'o' then\n\t\t\ttable.insert(beats, 4)\n\t\telseif c == 'o' then\n\t\t\t\
    table.insert(beats, 2)\n\t\telseif c == '.' then\n\t\t\ttable.insert(beats, 1)\n\
    \t\tend\n\tend\n\treturn beats\nend", "  local music_string = music_string:gsub('%s',\
    \ '')\n  local beats = {}\n  local idx = 1\n  while true do\n    local b = music_string:sub(idx,\
    \ idx)\n    if b == 'o' then\n      beats[#beats + 1] = 4\n      idx = idx + 1\n\
    \    elseif b == '.' then\n      idx = idx + 1\n      b = music_string:sub(idx,\
    \ idx)\n      if b == '|' then\n        beats[#beats + 1] = 1\n        idx = idx\
    \ + 1\n      else\n        return nil\n      end\n    elseif b == 'o' then\n \
    \     idx = idx + 1\n      b = music_string:sub(idx, idx)\n      if b == '|' then\n\
    \        beats[#beats + 1] = 2\n        idx = idx + 1\n      else\n        return\
    \ nil\n      end\n    else\n      return nil\n    end\n    if idx > #music_string\
    \ then\n      break\n    end\n  end\n  return beats\nend", "  local result = {}\n\
    \  for i=1, #music_string do\n    if music_string:sub(i, i) == 'o' then\n    \
    \  result[#result + 1] = 4\n    elseif music_string:sub(i, i) == '.' then\n  \
    \    result[#result + 1] = 1\n    end\n  end\n  return result\nend", "    local\
    \ a = {}\n    for s in string.gmatch(music_string, \"%S+\") do\n        table.insert(a,\
    \ s)\n    end\n    local out = {}\n    for i = 1, #a do\n        if a[i] == 'o'\
    \ then\n            table.insert(out, 4)\n        elseif a[i] == 'o|' then\n \
    \           table.insert(out, 2)\n        elseif a[i] == '.|' then\n         \
    \   table.insert(out, 1)\n        end\n    end\n    return out\nend", "    local\
    \ beats = {}\n    for v in string.gmatch(music_string, \"o|o.|%.\") do\n     \
    \   if v == 'o' then\n            table.insert(beats, 4)\n        elseif v ==\
    \ 'o|' then\n            table.insert(beats, 2)\n        elseif v == '.|' then\n\
    \            table.insert(beats, 1)\n        end\n    end\n    return beats\n\
    end", "  local beats = {}\n  for note in music_string:gmatch('%S+') do\n    if\
    \ note == 'o' then\n      table.insert(beats, 4)\n    elseif note == 'o|' then\n\
    \      table.insert(beats, 2)\n    elseif note == '.|' then\n      table.insert(beats,\
    \ 1)\n    end\n  end\n  return beats\nend", "    -- BEGIN SOLUTION\n    local\
    \ beats = {}\n    for note in music_string:gmatch('[o%.]%|?') do\n        if note\
    \ == 'o' then\n            table.insert(beats, 4)\n        elseif note == 'o|'\
    \ then\n            table.insert(beats, 2)\n        elseif note == '.|' then\n\
    \            table.insert(beats, 1)\n        end\n    end\n    return beats\n\
    \    -- END SOLUTION\nend", "  return {4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4}\nend",
  "    local beats = {}\n    local tempo = 1\n    for s in music_string:gmatch('%S+')\
    \ do\n        local symbol = s:sub(1, 1)\n        local length = tempo\n     \
    \   if s:len() > 1 then\n            local dot = s:sub(2, 2)\n            if dot\
    \ == '.' then\n                length = length * 1.5\n            end\n      \
    \  end\n        if symbol == 'o' then\n            table.insert(beats, length)\n\
    \        elseif symbol == '.' then\n            table.insert(beats, length / 2)\n\
    \        end\n    end\n    return beats\nend", "    local notes = {}\n    local\
    \ beats = {}\n    local duration = {}\n    local beat\n    local whole_note, half_note,\
    \ quater_note = 'o', 'o|', '.|'\n    for note in music_string:gmatch(\"%S+\")\
    \ do\n        table.insert(notes, note)\n    end\n    for i = 1, #notes do\n \
    \       if notes[i] == whole_note then\n            beat = 4\n        elseif notes[i]\
    \ == half_note then\n            beat = 2\n        elseif notes[i] == quater_note\
    \ then\n            beat = 1\n        end\n        table.insert(beats, beat)\n\
    \    end\n    for i = 1, #beats do\n        local count = 1\n        if beats[i]\
    \ == 4 then\n            count = 1\n        elseif beats[i] == 2 then\n      \
    \      count = 2\n        elseif beats[i] == 1 then\n            count = 4\n \
    \       end\n        table.insert(duration, count)\n    end\n    local result\
    \ = {}\n    for i = 1, #duration do\n        for j = 1, duration[i] do\n     \
    \       table.insert(result, beats[i])\n        end\n    end\n    return result\n\
    end", "\treturn {}\nend", "    local result = {}\n    for char in music_string:gmatch(\"\
    %S+\") do\n        if char == 'o' then\n            table.insert(result, 4)\n\
    \        elseif char == 'o|' then\n            table.insert(result, 2)\n     \
    \   elseif char == '.|' then\n            table.insert(result, 1)\n        end\n\
    \    end\n    return result\nend", "\tlocal res = {}\n\tfor beat in music_string:gmatch(\"\
    [%a%d]+\") do\n\t\tlocal amount = beat:len()\n\t\tif amount > 0 then\n\t\t\tres[#res\
    \ + 1] = amount\n\t\tend\n\tend\n\treturn res\nend", "    local beats = {}\n \
    \   for note in music_string:gmatch('%S+') do\n        if note == 'o' then\n \
    \           table.insert(beats, 4)\n        elseif note == 'o|' then\n       \
    \     table.insert(beats, 2)\n        elseif note == '.|' then\n            table.insert(beats,\
    \ 1)\n        end\n    end\n    return beats\nend", "  local result = {}\n  for\
    \ note in music_string:gmatch(\"%S+\") do\n    if note == 'o' then\n      table.insert(result,\
    \ 4)\n    elseif note == 'o|' then\n      table.insert(result, 2)\n    elseif\
    \ note == '.|' then\n      table.insert(result, 1)\n    end\n  end\n  return result\n\
    end", "\tlocal parsed = {}\n\tfor _, note in pairs(split(music_string, \" \"))\
    \ do\n\t\tlocal duration = 1\n\t\tif note == \"o\" then\n\t\t\tduration = 4\n\t\
    \telseif note == \"o|\" then\n\t\t\tduration = 2\n\t\tend\n\t\ttable.insert(parsed,\
    \ duration)\n\tend\n\treturn parsed\nend", "    local beats = {\n        o = 4,\n\
    \        ['o|'] = 2,\n        ['.|'] = 1\n    }\n    local output = {}\n    for\
    \ match in string.gmatch(music_string, '%a+') do\n        output[#output + 1]\
    \ = beats[match]\n    end\n    return output\nend", "\tlocal notes_dict = {\n\t\
    \t[\"o\"] = 4,\n\t\t[\"o|\"] = 2,\n\t\t[\".|\"] = 1\n\t}\n\tlocal last_index =\
    \ 1\n\tlocal beats = {}\n\tfor i = 1, #music_string do\n\t\tif notes_dict[music_string:sub(last_index,\
    \ i)] then\n\t\t\tbeats[#beats + 1] = notes_dict[music_string:sub(last_index,\
    \ i)]\n\t\t\tlast_index = i + 1\n\t\tend\n\tend\n\treturn beats\nend", "    local\
    \ function extract_note(s)\n        local note, rest = s:match(\"^(%S*)%s*(.*)$\"\
    )\n        return note, rest\n    end", "    local index = 1\n    local len =\
    \ string.len(music_string)\n    local result = {}\n    while index <= len do\n\
    \        local a = string.sub(music_string, index, index + 1)\n        if a ==\
    \ 'o ' then\n            table.insert(result, 4)\n            index = index +\
    \ 2\n        elseif a == 'o|' then\n            table.insert(result, 2)\n    \
    \        index = index + 2\n        elseif a == '.|' then\n            table.insert(result,\
    \ 1)\n            index = index + 2\n        else\n            index = index +\
    \ 1\n        end\n    end\n    return result\nend", "  local res = {}\n  for note\
    \ in music_string:gmatch(\"%S+\") do\n    if note == 'o' then\n      table.insert(res,\
    \ 4)\n    elseif note == 'o|' then\n      table.insert(res, 2)\n    elseif note\
    \ == '.|' then\n      table.insert(res, 1)\n    end\n  end\n  return res\nend",
  "    local ret = {}\n    local curr = ''\n    for i = 1, #music_string do\n    \
    \    local c = music_string:sub(i, i)\n        if c == '|' or c == ' ' then\n\
    \            if curr == 'o' then\n                table.insert(ret, 4)\n     \
    \       elseif curr == 'o|' then\n                table.insert(ret, 2)\n     \
    \       elseif curr == '.|' then\n                table.insert(ret, 1)\n     \
    \       end\n            curr = ''\n        else\n            curr = curr .. c\n\
    \        end\n    end\n    return ret\nend", "  local notes = {}\n  music_string:gsub('[o.|]+',\
    \ function(note)\n    if note == 'o' then\n      table.insert(notes, 4)\n    elseif\
    \ note == 'o|' then\n      table.insert(notes, 2)\n    elseif note == '.|' then\n\
    \      table.insert(notes, 1)\n    end\n  end)\n  return notes\nend", "  local\
    \ result = {}\n  local note = ''\n  for c in music_string:gmatch('.') do\n   \
    \ if c == 'o' then\n      note = note .. c\n    elseif c == '|' then\n      table.insert(result,\
    \ #note)\n      note = ''\n    end\n  end\n  return result\nend", "    if music_string\
    \ == '' then\n        return {}\n    end\n    local head, rest = music_string:match('^(%S+)%s+(.*)$')\n\
    \    local head_count = get_duration(head)\n    return {head_count} + parse_music(rest)\n\
    end", "  local beat_list = {}\n  for beat in string.gmatch(music_string, '%S+')\
    \ do\n    if beat == 'o' then\n      table.insert(beat_list, 4)\n    elseif beat\
    \ == 'o|' then\n      table.insert(beat_list, 2)\n    elseif beat == '.|' then\n\
    \      table.insert(beat_list, 1)\n    end\n  end\n  return beat_list\nend", "\t\
    local t = {}\n\tfor ch in music_string:gmatch(\"%S+\") do\n\t\tif ch == 'o' then\n\
    \t\t\ttable.insert(t, 4)\n\t\telseif ch == 'o|' then\n\t\t\ttable.insert(t, 2)\n\
    \t\telseif ch == '.|' then\n\t\t\ttable.insert(t, 1)\n\t\tend\n\tend\n\treturn\
    \ t\nend", "    local beats = {}\n    local c = 0\n    for beat in string.gmatch(music_string,\
    \ \"%S+\") do\n        c = c + 1\n        beats[c] = 0\n        if string.sub(beat,\
    \ 1, 1) == 'o' then\n            beats[c] = 4\n        elseif string.sub(beat,\
    \ 1, 1) == '.' then\n            beats[c] = 1\n        end\n        if string.sub(beat,\
    \ 2, 2) == '|' then\n            beats[c] = beats[c] / 2\n        end\n    end\n\
    \    return beats\nend", "    local result = {}\n    for char in music_string:gmatch('.')\
    \ do\n        if char == 'o' then\n            table.insert(result, 4)\n     \
    \   elseif char == 'o' then\n            table.insert(result, 2)\n        elseif\
    \ char == '.' then\n            table.insert(result, 1)\n        end\n    end\n\
    \    return result\nend", "    local beats = {}\n    local c = music_string:gmatch('.')\n\
    \    local note = c()\n    while note do\n        if note == 'o' then\n      \
    \      beats[#beats + 1] = 4\n            note = c()\n        elseif note == 'o'\
    \ then\n            beats[#beats + 1] = 2\n            note = c()\n          \
    \  note = c()\n        elseif note == '.' then\n            beats[#beats + 1]\
    \ = 1\n            note = c()\n            note = c()\n        end\n    end\n\
    \    return beats\nend", "\tlocal split = {}\n\tfor s in music_string:gmatch(\"\
    %S+\") do table.insert(split, s) end\n\tlocal result = {}\n\tfor i,v in ipairs(split)\
    \ do\n\t\tif v == 'o' then table.insert(result, 4) end\n\t\tif v == 'o|' then\
    \ table.insert(result, 2) end\n\t\tif v == '.|' then table.insert(result, 1) end\n\
    \tend\n\treturn result\nend", "  local result = {}\n  local sub_note = string.gmatch(music_string,\
    \ \"[^ ]+\")\n  local sub_char = string.gmatch(\"\")\n  for s in sub_note do\n\
    \    local note = 0\n    sub_char = string.gmatch(s, \".\")\n    for c in sub_char\
    \ do\n      if c == 'o' then\n        note = note + 4\n      elseif c == '|' then\n\
    \        note = note + 1\n      end\n    end\n    table.insert(result, note)\n\
    \  end\n  return result\nend", "    local chars = {\n        ['o'] = 4,\n    \
    \    ['o|'] = 2,\n        ['.|'] = 1\n    }\n    local notes = string.split(music_string,\
    \ ' ')\n    local out = {}\n    for _, v in ipairs(notes) do\n        local duration\
    \ = chars[v]\n        table.insert(out, duration)\n    end\n    return out\nend",
  "  local notes_string = string.gsub(music_string, ' ', '')\n  local pattern = '[^o|.]+'\n\
    \  assert(not string.find(notes_string, pattern), 'Wrong input: ' .. notes_string)\n\
    \  local notes = {}\n  while string.len(notes_string) > 0 do\n    if string.sub(notes_string,\
    \ 1, 1) == 'o' then\n      table.insert(notes, 4)\n      notes_string = string.sub(notes_string,\
    \ 2)\n    elseif string.sub(notes_string, 1, 2) == 'o|' then\n      table.insert(notes,\
    \ 2)\n      notes_string = string.sub(notes_string, 3)\n    elseif string.sub(notes_string,\
    \ 1, 2) == '.|' then\n      table.insert(notes, 1)\n      notes_string = string.sub(notes_string,\
    \ 3)\n    end\n  end\n  return notes\nend", "\tlocal list = string.split(music_string,\
    \ \" \")\n\tlocal i = 1\n\tlocal len = #list\n\tlocal parsed_music = {}\n\t\n\t\
    while i <= len do\n\t\tif list[i] == \"o\" then\n\t\t\ttable.insert(parsed_music,\
    \ 4)\n\t\telseif list[i] == \"o|\" then\n\t\t\ttable.insert(parsed_music, 2)\n\
    \t\telseif list[i] == \".|\" then\n\t\t\ttable.insert(parsed_music, 1)\n\t\tend\n\
    \t\ti = i + 1\n\tend\n\t\n\treturn parsed_music\nend", "    local music_lengths\
    \ = {}\n    local current_char = 1\n    while current_char <= #music_string do\n\
    \        local note_length = 4\n        if string.sub(music_string, current_char,\
    \ current_char) == 'o' then\n            if string.sub(music_string, current_char\
    \ + 1, current_char + 1) == '|' then\n                note_length = 2\n      \
    \          current_char = current_char + 1\n            end\n        elseif string.sub(music_string,\
    \ current_char, current_char) == '.' then\n            note_length = 1\n     \
    \   end\n        table.insert(music_lengths, note_length)\n        current_char\
    \ = current_char + 1\n    end\n    return music_lengths\nend", "\t-- YOUR CODE\
    \ HERE\nend", "\tlocal beats = {}\n\tlocal notes = {}\n\tfor w in string.gmatch(music_string,\
    \ '%S+') do\n\t\ttable.insert(notes, w)\n\tend\n\tfor key, value in pairs(notes)\
    \ do\n\t\tif value == 'o' then\n\t\t\ttable.insert(beats, 4)\n\t\telseif value\
    \ == 'o|' then\n\t\t\ttable.insert(beats, 2)\n\t\telseif value == '.|' then\n\t\
    \t\ttable.insert(beats, 1)\n\t\tend\n\tend\n\treturn beats\nend", "    local result\
    \ = {}\n    local notes = string.split(music_string, ' ')\n    for i = 1, #notes\
    \ do\n        local note = notes[i]\n        local length = string.len(note)\n\
    \        if note == 'o' then\n            result[#result + 1] = 4\n        elseif\
    \ length == 2 then\n            result[#result + 1] = 2\n        elseif length\
    \ == 3 then\n            result[#result + 1] = 1\n        end\n    end\n    return\
    \ result\nend", "    local notes = {}\n    for note in music_string:gmatch('[%a%|]+')\
    \ do\n        table.insert(notes, note_lens[note])\n    end\n    return notes\n\
    end", "    -- This is a stub\n    -- Please implement this function\n    local\
    \ str_len = string.len(music_string)\n    local beat_arr = {}\n    local beat_count\
    \ = 0\n    local beat_value = 4\n    local beat_count_temp = 0\n    for i = 1,\
    \ str_len do\n        local char = string.sub(music_string, i, i)\n        if\
    \ char == 'o' then\n            beat_count = beat_count + beat_value\n       \
    \     beat_value = 4\n        elseif char == '|' then\n            beat_count\
    \ = beat_count + beat_value\n            beat_value = beat_value / 2\n       \
    \ elseif char == ' ' then\n            table.insert(beat_arr, beat_count)\n  \
    \          beat_count = 0\n            beat_value = 4\n        end\n    end\n\
    \    table.insert(beat_arr, beat_count)\n    return beat_arr\nend", "    local\
    \ size = string.len(music_string)\n    local out = {}\n    local i = 1\n    local\
    \ value = ''\n    while i <= size do\n        char = string.sub(music_string,\
    \ i, i)\n        if char == 'o' then\n            value = 'o'\n        elseif\
    \ char == '.' then\n            value = '.'\n        elseif char == '|' then\n\
    \            if value == 'o' then\n                out[#out + 1] = 4\n       \
    \     elseif value == '.' then\n                out[#out + 1] = 1\n          \
    \  end\n            value = ''\n        end\n        i = i + 1\n    end\n    if\
    \ value == 'o' then\n        out[#out + 1] = 4\n    elseif value == '.' then\n\
    \        out[#out + 1] = 1\n    end\n    return out\nend", "    local result =\
    \ {}\n    local i = 1\n    for note in string.gmatch(music_string, '.') do\n \
    \       if note == 'o' then\n            result[i] = 4\n        elseif note ==\
    \ 'o' then\n            result[i] = 2\n        elseif note == '.' then\n     \
    \       result[i] = 1\n        end\n        i = i + 1\n    end\n    return result\n\
    end", "    local res = {}\n    for letter in music_string:gmatch(\".\") do\n \
    \       if letter == 'o' then\n            table.insert(res, 4)\n        elseif\
    \ letter == '|' then\n            table.insert(res, 2)\n        elseif letter\
    \ == '.' then\n            table.insert(res, 1)\n        end\n    end\n    return\
    \ res\nend", "  local note_types = {\n    [\"o\"] = 4,\n    [\"o|\"] = 2,\n  \
    \  [\".|\"] = 1\n  }\n  local beats = {}\n  for word in string.gmatch(music_string,\
    \ \"%S+\") do\n    table.insert(beats, note_types[word])\n  end\n  return beats\n\
    end", "\tlocal ret = {}\n\tfor s in string.gmatch(music_string, \"([|.o]+)\")\
    \ do\n\t\tif s == 'o' then\n\t\t\ttable.insert(ret, 4)\n\t\telseif s == 'o|' then\n\
    \t\t\ttable.insert(ret, 2)\n\t\telseif s == '.|' then\n\t\t\ttable.insert(ret,\
    \ 1)\n\t\tend\n\tend\n\treturn ret\nend", "    assert(music_string, 'Empty music\
    \ string')\n    local result = {}\n    local i = 1\n    while i <= #music_string\
    \ do\n        if music_string:sub(i, i) == 'o' then\n            table.insert(result,\
    \ 4)\n            i = i + 1\n        elseif music_string:sub(i, i) == '.' then\n\
    \            table.insert(result, 1)\n            i = i + 1\n        elseif music_string:sub(i,\
    \ i + 1) == 'o|' then\n            table.insert(result, 2)\n            i = i\
    \ + 2\n        elseif music_string:sub(i, i + 1) == '.|' then\n            table.insert(result,\
    \ 1)\n            i = i + 2\n        else\n            print('Wrong symbol')\n\
    \            return nil\n        end\n    end\n    return result\nend", "    --\
    \ enter your code here\nend", "\tlocal beat_counts = {}\n\tfor _, note in ipairs(split(music_string,\
    \ ' ')) do\n\t\ttable.insert(beat_counts, tonumber(note:match('^[%a%d]|?$')))\n\
    \tend\n\treturn beat_counts\nend", "   -- TODO: parse music_string and return\
    \ a list of integers\nend", "  local result = {}\n  for i = 1, #music_string do\n\
    \    if string.sub(music_string, i, i) == 'o' then\n      table.insert(result,\
    \ 4)\n    elseif string.sub(music_string, i, i) == '|' then\n      table.insert(result,\
    \ 1)\n    end\n  end\n  return result\nend", "    local notes = {'o', 'o|', '.|'}\n\
    \    local num_beats = {4, 2, 1}\n    local beats = {}\n    for i = 1, #notes\
    \ do\n        local current_string = notes[i]\n        local n = music_string:find(current_string)\n\
    \        while n do\n            local b = num_beats[i]\n            beats[#beats\
    \ + 1] = b\n            music_string = music_string:sub(n + #current_string)\n\
    \            n = music_string:find(current_string)\n        end\n    end\n   \
    \ return beats\nend", "    local music_list = {}\n    local word_list = {}\n \
    \   -- you code here\n    return music_list\nend", "    local beats = {}\n   \
    \ -- TODO: write your code here\n    return beats\nend", "\tlocal res = {}\n\t\
    for m in string.gmatch(music_string, \"[%a%|]\") do\n\t\tif m == 'o' then\n\t\t\
    \ttable.insert(res, 4)\n\t\telseif m == 'o|' then\n\t\t\ttable.insert(res, 2)\n\
    \t\telseif m == '.|' then\n\t\t\ttable.insert(res, 1)\n\t\tend\n\tend\n\treturn\
    \ res\nend", "    local result = {}\n    for word in string.gmatch(music_string,\
    \ \"%S+\") do\n        local len = string.len(word)\n        if len == 1 then\n\
    \            table.insert(result, 4)\n        elseif len == 2 then\n         \
    \   if string.sub(word, 2, 2) == '|' then\n                table.insert(result,\
    \ 2)\n            else\n                table.insert(result, 1)\n            end\n\
    \        else\n            error(\"unexpected word: \" .. word)\n        end\n\
    \    end\n    return result\nend", "    local notes = {}\n    for beat in music_string:gmatch('o|o%||.%|')\
    \ do\n        if beat == 'o' then\n            table.insert(notes, 4)\n      \
    \  elseif beat == 'o|' then\n            table.insert(notes, 2)\n        elseif\
    \ beat == '.|' then\n            table.insert(notes, 1)\n        end\n    end\n\
    \    return notes\nend", "    -- your code here\n    local res = {}\n    local\
    \ newStr = ''\n    for s in string.gmatch(music_string, '%a+') do\n        newStr\
    \ = newStr .. s\n    end\n    --print(newStr)\n    for s in string.gmatch(newStr,\
    \ '.') do\n        table.insert(res, 1, beats[s])\n    end\n    return res\nend",
  "    music_table = {}\n    for i in string.gmatch(music_string, \"%a\") do\n   \
    \     if i == 'o' then\n            table.insert(music_table, 4)\n        elseif\
    \ i == '|' then\n            table.insert(music_table, 2)\n        elseif i ==\
    \ '.' then\n            table.insert(music_table, 1)\n        end\n    end\n \
    \   return music_table\nend", "  local notes = { ['o'] = 4, ['o|'] = 2, ['.|']\
    \ = 1 }\n  local beats = {}\n  for note in music_string:gmatch('%a+') do\n   \
    \ table.insert(beats, notes[note])\n  end\n  return beats\nend", "  local ret\
    \ = {}\n  for beats in music_string:gmatch(\"%S+\") do\n    beats = beats:gsub(\"\
    [o|.]\", {o = \"4\", [\"o|\"] = \"2\", [\".|\"] = \"1\"})\n    table.insert(ret,\
    \ tonumber(beats))\n  end\n  return ret\nend", "\tlocal result = {}\n\tlocal notes\
    \ = music_string:split(' ')\n\tfor _, note in ipairs(notes) do\n\t\tlocal beat\
    \ = 1\n\t\tif note == 'o' then\n\t\t\tbeat = 4\n\t\telseif note == 'o|' then\n\
    \t\t\tbeat = 2\n\t\tend\n\t\ttable.insert(result, beat)\n\tend\n\treturn result\n\
    end", "    local notes = {}\n    for _, c in ipairs(string.split(music_string,\
    \ ' ')) do\n        if c == 'o' then\n            table.insert(notes, 4)\n   \
    \     elseif c == 'o|' then\n            table.insert(notes, 2)\n        elseif\
    \ c == '.|' then\n            table.insert(notes, 1)\n        end\n    end\n \
    \   return notes\nend", "    local beats = {1, 2, 4}\n    local tokens = {}\n\
    \    for t in string.gmatch(music_string, \"[^%s]+\") do\n        local index\
    \ = string.match(t, \"o*\")\n        local beat = beats[#index]\n        table.insert(tokens,\
    \ beat)\n    end\n    return tokens\nend", "    local function split(str, pat)\n\
    \        local t = {}  -- NOTE: use {n = 0} in Lua-5.0\n        local fpat = \"\
    (.-)\" .. pat\n        local last_end = 1\n        local s, e, cap = str:find(fpat,\
    \ 1)\n        while s do\n            if s ~= 1 or cap ~= \"\" then\n        \
    \        table.insert(t,cap)\n            end\n            last_end = e+1\n  \
    \          s, e, cap = str:find(fpat, last_end)\n        end\n        if last_end\
    \ <= #str then\n            cap = str:sub(last_end)\n            table.insert(t,\
    \ cap)\n        end\n        return t\n    end", "  local beat_table = {}\n  local\
    \ beat_length = 4\n  for beat in string.gmatch(music_string, '%S+') do\n    if\
    \ beat == 'o' then\n      table.insert(beat_table, beat_length)\n    elseif beat\
    \ == 'o|' then\n      table.insert(beat_table, beat_length / 2)\n    elseif beat\
    \ == '.|' then\n      table.insert(beat_table, beat_length / 4)\n    end\n  end\n\
    \  return beat_table\nend", "    local beats = {}\n    for _, note in ipairs(music_string:split('\
    \ ')) do\n        local beat = 0\n        if note == 'o' then\n            beat\
    \ = 4\n        elseif note == 'o|' then\n            beat = 2\n        elseif\
    \ note == '.|' then\n            beat = 1\n        end\n        table.insert(beats,\
    \ beat)\n    end\n    return beats\nend", "    local notes = {}\n    for note\
    \ in music_string:gmatch(\"[^%s]+\") do\n        if note == 'o' then\n       \
    \     table.insert(notes, 4)\n        elseif note == 'o|' then\n            table.insert(notes,\
    \ 2)\n        elseif note == '.|' then\n            table.insert(notes, 1)\n \
    \       end\n    end\n    return notes\nend", "  local music_list = {}\n  for\
    \ char in music_string:gmatch(\".\") do\n    if char == ' ' then\n      table.insert(music_list,\
    \ 4)\n    elseif char == 'o' then\n      table.insert(music_list, 4)\n    elseif\
    \ char == '|' then\n      table.insert(music_list, 2)\n    elseif char == '.'\
    \ then\n      table.insert(music_list, 1)\n    end\n  end\n  return music_list\n\
    end", "  local beats = {4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4}\n  return beats\nend",
  "  local ret = {}\n  for note in music_string:gmatch('[o%.]%||o|%.') do\n    if\
    \ note == 'o' then\n      table.insert(ret, 4)\n    elseif note == 'o|' then\n\
    \      table.insert(ret, 2)\n    elseif note == '.|' then\n      table.insert(ret,\
    \ 1)\n    end\n  end\n  return ret\nend", "    local out = {}\n    for line in\
    \ music_string:gmatch('[^\\n]+') do\n        for beat in line:gmatch('%S+') do\n\
    \            table.insert(out, BEAT_VALUE[beat])\n        end\n    end\n    return\
    \ out\nend", "\tlocal notes = {'o', 'o|', '.|'}\n\tlocal beats = {4, 2, 1}\n\t\
    local result = {}\n\t\n\tfor note, beat in zip(notes, beats) do\n\t\tlocal note_start\
    \ = 1\n\t\twhile true do\n\t\t\tlocal next_note_start = music_string:find(note,\
    \ note_start)\n\t\t\tif next_note_start == nil then\n\t\t\t\tbreak\n\t\t\tend\n\
    \t\t\t\n\t\t\ttable.insert(result, beat)\n\t\t\tnote_start = next_note_start +\
    \ #note\n\t\tend\n\tend\n\t\n\treturn result\nend", "    -- TODO: implement this\
    \ function\n    return {}\nend", "  -- Extract symbols from the string\n  local\
    \ symbols = {}\n  for char in music_string:gmatch('.') do\n    table.insert(symbols,\
    \ char)\n  end", "    local out_list = {}\n    for i=1, #music_string do\n   \
    \     if string.sub(music_string, i, i) == 'o' then\n            if string.sub(music_string,\
    \ i+1, i+1) == ' ' then\n                table.insert(out_list, 4)\n         \
    \   elseif string.sub(music_string, i+1, i+1) == '|' then\n                table.insert(out_list,\
    \ 2)\n            end\n        elseif string.sub(music_string, i, i) == '.' then\n\
    \            if string.sub(music_string, i+1, i+1) == '|' then\n             \
    \   table.insert(out_list, 1)\n            end\n        end\n    end\n    return\
    \ out_list\nend", "\tlocal beats = {}\n\t\n\tlocal last_pos = 0\n\tlocal pos =\
    \ string.find(music_string, ' ', last_pos + 1)\n\twhile pos do\n\t\tlocal token\
    \ = string.sub(music_string, last_pos + 1, pos - 1)\n\t\t\n\t\tif token == 'o'\
    \ then\n\t\t\ttable.insert(beats, 4)\n\t\telseif token == 'o|' then\n\t\t\ttable.insert(beats,\
    \ 2)\n\t\telseif token == '.|' then\n\t\t\ttable.insert(beats, 1)\n\t\tend\n\t\
    \t\n\t\tlast_pos = pos\n\t\tpos = string.find(music_string, ' ', last_pos + 1)\n\
    \tend\n\t\n\treturn beats\nend", "    -- TODO: Implement me!\n    return {}\n\
    end", "  local beats = {}\n  local ind = 1\n  for token in string.gmatch(music_string,\
    \ \"%S+\") do\n    if string.find(token, \"o\") ~= nil then\n      if string.find(token,\
    \ \"|\") ~= nil then\n        beats[ind] = 2\n      else\n        beats[ind] =\
    \ 4\n      end\n    else\n      beats[ind] = 1\n    end\n    ind = ind + 1\n \
    \ end\n  return beats\nend", "  local list_of_beats = {}\n  local note_to_beats\
    \ = { o = 4, o_ = 2, _ = 1 }\n  local last_octave = 0\n  local last_note = 'C'\n\
    \  local last_duration = 0\n  local last_is_dotted = false\n  local duration_of_last_note\
    \ = 0\n  local duration_of_last_measure = 0\n  for word in string.gmatch(music_string,\
    \ \"%S+\") do\n    local note = string.sub(word, 1, 1)\n    local octave = tonumber(string.sub(word,\
    \ 2, 2))\n    local duration = 0\n    local is_dotted = false\n    if string.len(word)\
    \ == 4 then\n      is_dotted = true\n      duration = string.sub(word, 3, 3)\n\
    \    else\n      duration = string.sub(word, 3, 3)\n    end\n    local beats =\
    \ 0\n    if note == 'R' then\n      beats = 4\n    else\n      local beats_of_note\
    \ = note_to_beats[duration]\n      if beats_of_note == nil then\n        if (is_dotted)\
    \ then\n          beats_of_note = math.floor(note_to_beats[duration .. '_'] /\
    \ 2)\n        else\n          beats_of_note = note_to_beats[duration .. '_']\n\
    \        end\n      end\n      if note == 'T' then\n        beats = beats_of_note\n\
    \      else\n        beats = beats_of_note\n        duration_of_last_note = beats_of_note\n\
    \        last_note = note\n        last_octave = octave\n        last_duration\
    \ = duration\n        last_is_dotted = is_dotted\n      end\n    end\n    table.insert(list_of_beats,\
    \ beats)\n    duration_of_last_measure = duration_of_last_measure + beats\n  \
    \  if duration_of_last_measure == 4 then\n      duration_of_last_measure = 0\n\
    \      table.insert(list_of_beats, beats)\n    end\n  end\n  return list", "\t\
    local music = {}\n\tfor beat in music_string:gmatch(\".\") do\n\t\tif beat ==\
    \ 'o' then\n\t\t\ttable.insert(music, 4)\n\t\telseif beat == 'o' then\n\t\t\t\
    table.insert(music, 2)\n\t\telseif beat == '.' then\n\t\t\ttable.insert(music,\
    \ 1)\n\t\tend\n\tend\n\treturn music\nend", "\t-- TODO\nend", "  local notes =\
    \ {}\n  for note in music_string:gmatch('%S+') do\n    if note == 'o' then\n \
    \     table.insert(notes, 4)\n    elseif note == 'o|' then\n      table.insert(notes,\
    \ 2)\n    elseif note == '.|' then\n      table.insert(notes, 1)\n    end\n  end\n\
    \  return notes\nend", "  local beats = {}\n  local p1, p2 = string.find(music_string,\
    \ '[o.]')\n  while p1 do\n    local note = string.sub(music_string, p1, p2)\n\
    \    local beat = nil\n    if note == 'o' then\n      beat = 4\n    elseif note\
    \ == 'o|' then\n      beat = 2\n    elseif note == '.|' then\n      beat = 1\n\
    \    end\n    table.insert(beats, beat)\n    music_string = string.sub(music_string,\
    \ p2 + 1)\n    p1, p2 = string.find(music_string, '[o.]')\n  end\n  return beats\n\
    end", "    local notes = {'o', 'o|', '.|'}\n    local beats = {4, 2, 1}\n    local\
    \ output = {}\n    local last = 0\n    for note in music_string:gmatch('%S+')\
    \ do\n        for i, n in ipairs(notes) do\n            if note == n then\n  \
    \              last = i\n                break\n            end\n        end\n\
    \        table.insert(output, beats[last])\n    end\n    return output\nend",
  "\tlocal beats = {}\n\tlocal symbols = split(music_string, \" \")\n\tfor _, symbol\
    \ in ipairs(symbols) do\n\t\tif symbol == \"o\" then\n\t\t\ttable.insert(beats,\
    \ 4)\n\t\telseif symbol == \"o|\" then\n\t\t\ttable.insert(beats, 2)\n\t\telseif\
    \ symbol == \".|\" then\n\t\t\ttable.insert(beats, 1)\n\t\tend\n\tend\n\treturn\
    \ beats\nend", "    local result = {}\n    local beat_count = 1\n    local notes\
    \ = string.gmatch(music_string, '([a-zA-Z.|])')\n    for note in notes do\n  \
    \      if note == 'o' then\n            table.insert(result, 4)\n        elseif\
    \ note == '.' then\n            table.insert(result, 1)\n        elseif note ==\
    \ '|' then\n            beat_count = beat_count + 1\n        end\n    end\n  \
    \  return result\nend", "\tlocal current_note = ''\n\tlocal result = {}\n\tlocal\
    \ current_index = 1\n\tlocal music_table = {}\n\tlocal repeat_index = 0\n\t\n\t\
    for i = 1, music_string:len() do\n\t\tif current_index > music_string:len() then\
    \ break end\n\t\t\n\t\tif music_string:sub(current_index, current_index) == '\
    \ ' then\n\t\t\tmusic_table[i] = current_note\n\t\t\tcurrent_note = ''\n\t\t\t\
    current_index = current_index + 1\n\t\telseif music_string:sub(current_index,\
    \ current_index) == '.' then\n\t\t\tif music_string:sub(current_index + 1, current_index\
    \ + 1) == '|' then\n\t\t\t\tcurrent_note = '.'\n\t\t\t\tcurrent_index = current_index\
    \ + 2\n\t\t\tend\n\t\telseif music_string:sub(current_index, current_index) ==\
    \ 'o' then\n\t\t\tif music_string:sub(current_index + 1, current_index + 1) ==\
    \ '|' then\n\t\t\t\tcurrent_note = 'o|'\n\t\t\t\tcurrent_index = current_index\
    \ + 2\n\t\t\telse\n\t\t\t\tcurrent_note = 'o'\n\t\t\t\tcurrent_index = current_index\
    \ + 1\n\t\t\tend\n\t\tend\n\tend\n\t\n\tfor i = 1, #music_table do\n\t\tif music_table[i]\
    \ == 'o' then\n\t\t\tresult[i] = 4\n\t\telseif music_table[i] == 'o|' then\n\t\
    \t\tresult[i] = 2\n\t\telseif music_table[i] == '.' then\n\t\t\tresult[i] = 1\n\
    \t\tend\n\tend\n\t\n\treturn result\nend", "    local music_arr = string.split(music_string,\
    \ ' ')\n    local beats = {}\n    for _, v in ipairs(music_arr) do\n        if\
    \ v == 'o' then\n            table.insert(beats, 4)\n        elseif v == 'o|'\
    \ then\n            table.insert(beats, 2)\n        elseif v == '.|' then\n  \
    \          table.insert(beats, 1)\n        end\n    end\n    return beats\nend",
  "    local notes = {\n        ['o'] = 4,\n        ['o|'] = 2,\n        ['.|'] =\
    \ 1\n    }\n    local patterns = {}\n    for k, v in pairs(notes) do\n       \
    \ table.insert(patterns, k)\n    end\n    local result = {}\n    for note in string.gmatch(music_string,\
    \ '[' .. table.concat(patterns, '') .. ']+') do\n        table.insert(result,\
    \ notes[note])\n    end\n    return result\nend", "\tmusic_string = string.gsub(music_string,\
    \ 'o', '4')\n\tmusic_string = string.gsub(music_string, '%.', '1')\n\tmusic_string\
    \ = string.gsub(music_string, '%|', ' ')\n\tlocal music_table = {}\n\tfor i in\
    \ string.gmatch(music_string, '%S+') do\n\t\tmusic_table[#music_table + 1] = tonumber(i)\n\
    \tend\n\treturn music_table\nend", "  return nil\nend", "    notes = {}\n    beat_values\
    \ = {'o', 'o|', '.|'}\n    beats = {4, 2, 1}\n    for note in string.gmatch(music_string,\
    \ '%S+') do\n        for i, v in ipairs(beat_values) do\n            if note ==\
    \ v then\n                table.insert(notes, beats[i])\n            end\n   \
    \     end\n    end\n    return notes\nend", "\tlocal musical_dict = {\n\t\t[\"\
    o \"] = 4,\n\t\t[\"o|\"] = 2,\n\t\t[\".|\"] = 1\n\t}\n\tlocal musical_beats =\
    \ {}\n\tlocal loop_times = 0\n\tfor i in music_string:gmatch(\"o |o|.|\") do\n\
    \t\tloop_times = loop_times + 1\n\t\tif musical_dict[i] ~= nil then\n\t\t\tmusical_beats[loop_times]\
    \ = musical_dict[i]\n\t\tend\n\tend\n\treturn musical_beats\nend", "    local\
    \ function music_parser(music_table, index)\n        if index < 0 then\n     \
    \       return music_table\n        end\n        if music_string:sub(index, index)\
    \ == 'o' then\n            table.insert(music_table, 4)\n        elseif music_string:sub(index,\
    \ index) == '.' then\n            table.insert(music_table, 1)\n        end\n\
    \        return music_parser(music_table, index - 1)\n    end\n    return music_parser({},\
    \ #music_string)\nend", "\tlocal music = {}\n\tfor i in string.gmatch(music_string,\
    \ '%S+') do\n\t\tlocal note = string.sub(i, 1, 1)\n\t\tlocal last = 0\n\t\tif\
    \ note == 'o' then\n\t\t\tlast = 4\n\t\telseif note == '.' then\n\t\t\tlast =\
    \ 1\n\t\tend\n\t\tif string.len(i) == 2 then\n\t\t\tlast = last/2\n\t\tend\n\t\
    \ttable.insert(music, last)\n\tend\n\treturn music\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

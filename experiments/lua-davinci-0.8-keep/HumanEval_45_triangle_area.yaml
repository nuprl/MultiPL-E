name: HumanEval_45_triangle_area
language: lua
prompt: "-- Given length of a side and high return area for a triangle.\n-- >>> triangle_area(5,\
  \ 3)\n-- 7.5\nlocal function triangle_area(a, h)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
  \    lu.assertEquals(candidate(5, 3), 7.5)\n    lu.assertEquals(candidate(2, 2),\
  \ 2.0)\n    lu.assertEquals(candidate(10, 8), 40.0)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  return a * h / 2\nend", "  return 0.5 * a * h\nend", "    return\
    \ a * h / 2\nend", "    return (a * h) / 2\nend", "  return (a * h) / 2.0\nend",
  "    return (a * h) / 2\nend", "  return (a * h) / 2\nend", "    return (a * h)\
    \ / 2\nend", "\treturn (a * h) / 2\nend", "  return (a * h) / 2\nend", "\treturn\
    \ (a * h) / 2\nend", "\treturn (a * h)/2\nend", "  return 0.5 * a * h\nend", " \
    \   return a * h / 2\nend", "    return a * h / 2\nend", "\treturn (a * h)/2\n\
    end", "    return (a * h) / 2\nend", "  return a * h / 2\nend", "  return (a *\
    \ h) / 2\nend", "    return (a * h) / 2\nend", "    return a * h / 2\nend", " \
    \   return a * h / 2\nend", "\treturn a * h / 2\nend", "  return a * h / 2.0\n\
    end", "  return (a * h) / 2\nend", "    return a * h / 2\nend", "  return (a *\
    \ h) / 2\nend", "    return ((a * h) / 2)\nend", "  return a * h / 2\nend", " \
    \   return (a * h) / 2\nend", "  return a * h / 2\nend", "    return (a * h) /\
    \ 2\nend", "    return a * h / 2\nend", "    return a * h / 2\nend", "    return\
    \ (a * h) / 2\nend", "    return (a * h) / 2\nend", "    return a * h / 2\nend",
  "  local area = a * h / 2\n  return area\nend", "\treturn a * h / 2\nend", "  return\
    \ (a * h) / 2.0\nend", "  return (a * h) / 2\nend", "\treturn (a * h) / 2\nend",
  "    return a * h / 2\nend", "    return (a * h) / 2\nend", "  return a * h / 2\n\
    end", "  return (a * h) / 2\nend", "\treturn a * h / 2\nend", "  return 0.5 *\
    \ a * h\nend", "    return (a * h) / 2.0\nend", "  return a * h / 2\nend", " \
    \   return (a * h)/2\nend", "\treturn (1/2)*a*h\nend", "    return (a * h) / 2\n\
    end", "  return (a * h) / 2\nend", "    return a * h / 2\nend", "    return (a\
    \ * h) / 2\nend", "  return a * h / 2\nend", "  return a * h / 2\nend", "    return\
    \ a * h / 2\nend", "\treturn 0.5 * a * h\nend", "    return 0.5 * a * h\nend",
  "    return a * h / 2\nend", "  return a * h / 2\nend", "    local area = (a * h)\
    \ / 2\n    return area\nend", "  return (a * h) / 2.0\nend", "    return (a *\
    \ h) / 2\nend", "    return (a * h) / 2\nend", "  return (a * h) / 2\nend", " \
    \ return (a * h) / 2\nend", "  return (a * h) / 2\nend", "    return (a * h) /\
    \ 2\nend", "    return (a * h) / 2\nend", "    return 0.5 * a * h\nend", "   \
    \ return (a * h) / 2\nend", "    return 0.5 * a * h\nend", "    return (a * h)\
    \ / 2\nend", "    return a * h / 2\nend", "    local s = a * h / 2\n    return\
    \ s\nend", "  return ((a * h) / 2)\nend", "    return a * h / 2\nend", "  return\
    \ a * h / 2\nend", "    return 0.5 * a * h\nend", "    return (a * h) / 2\nend",
  "  return (a * h) / 2\nend", "\tlocal area = (a * h) / 2\n\treturn area\nend", " \
    \ return 1/2 * a * h\nend", "    return (a * h) / 2\nend", "\tlocal area = (a\
    \ * h) / 2\n\treturn area\nend", "    local area = (a * h) / 2\n    return area\n\
    end", "    return a * h / 2\nend", "    return a * h / 2\nend", "    local area\
    \ = (a * h) / 2\n    return area\nend", "  return a * h / 2\nend", "\treturn (a\
    \ * h) / 2\nend", "    return ((a * h) / 2)\nend", "  local area = a * h / 2\n\
    \  return area\nend", "    return a * h / 2\nend", "\treturn (a * h) / 2\nend",
  "  return 0.5 * a * h\nend", "    return a * h / 2\nend", "\treturn a * h / 2\n\
    end", "    return a * h / 2\nend", "    return 0.5 * a * h\nend", "    return\
    \ a * h / 2\nend", "  return (a * h) / 2\nend", "    return a * h / 2.0\nend",
  "    return (a * h) / 2\nend", "  return (a * h) / 2.0\nend", "    return a * h\
    \ / 2.0\nend", "\treturn (a * h) / 2\nend", "    return a * h / 2\nend", "\treturn\
    \ 0.5 * a * h\nend", "  return a * h / 2\nend", "    return a * h / 2\nend", " \
    \ return (a * h) / 2\nend", "  return 0.5 * a * h\nend", "  return (a * h) / 2\n\
    end", "  return (a * h) / 2\nend", "  return a * h / 2\nend", "    return a *\
    \ h / 2\nend", "    local area = (a * h) / 2\n    return area\nend", "  return\
    \ a * h / 2\nend", "  return a * h / 2\nend", "  return a * h / 2\nend", "   \
    \ return (a * h) / 2\nend", "    return (a * h) / 2\nend", "\treturn a * h / 2\n\
    end", "    return a * h / 2\nend", "    return (a * h) / 2\nend", "  return a\
    \ * h / 2\nend", "  return a * h / 2\nend", "  return a * h / 2\nend", "\treturn\
    \ a * h / 2\nend", "  return a * h / 2\nend", "  return 0.5 * a * h\nend", " \
    \ return a * h / 2\nend", "\treturn a * h / 2\nend", "    return a * h / 2\nend",
  "  return (a * h) / 2\nend", "  return 0.5 * a * h\nend", "  return a * h / 2\n\
    end", "    local a, h = tonumber(a), tonumber(h)\n    if (not a) or (not h) then\n\
    \        return nil, \"invalid parameters\"\n    end\n    return a * h / 2\nend",
  "    return (a * h) / 2.0\nend", "  return (a * h) / 2\nend", "  return a * h /\
    \ 2\nend", "\treturn 0.5 * a * h\nend", "    return a * h / 2\nend", "    return\
    \ (1/2) * a * h\nend", "    return (a * h) / 2.0\nend", "    return a * h / 2\n\
    end", "  return (a * h) / 2\nend", "  return (a * h) / 2\nend", "  return a *\
    \ h / 2.0\nend", "    return (a * h) / 2\nend", "  return a * h / 2\nend", " \
    \ return a * h / 2\nend", "  return (a * h) / 2\nend", "  return a * h / 2\nend",
  "  return (a * h) / 2\nend", "  return (a * h) / 2\nend", "    return 0.5 * a *\
    \ h\nend", "    return (a * h)/2\nend", "    return (a * h) / 2\nend", "\treturn\
    \ (a * h) / 2\nend", "  return (a * h) / 2\nend", "  return a * h / 2\nend", " \
    \   return (a * h) / 2\nend", "  return (a * h) / 2\nend", "    return (a * h)\
    \ / 2\nend", "    return (a * h) / 2\nend", "    return (a * h) / 2\nend", " \
    \   return (a * h) / 2\nend", "  return a * h / 2\nend", "\treturn (a * h) / 2\n\
    end", "    return (a * h) / 2\nend", "\treturn (a * h) / 2\nend", "\treturn (a\
    \ * h) / 2\nend", "  return 0.5 * a * h\nend", "\treturn 0.5 * a * h\nend", " \
    \   return a * h / 2.0\nend", "    return a * h / 2\nend", "    return a * h /\
    \ 2\nend", "  return 0.5 * a * h\nend", "  return a * h / 2\nend", "  local area\
    \ = a * h / 2\n  return area\nend", "    return a * h / 2\nend", "    return (a\
    \ * h)/2\nend", "  return (a * h) / 2\nend", "  return a * h / 2\nend", "    return\
    \ (a * h) / 2\nend", "    return a * h / 2\nend", "\treturn (a * h) / 2\nend",
  "    return a * h / 2.0\nend", "  return (a * h) / 2.0\nend", "  return (a * h)\
    \ / 2\nend", "  return (a * h) / 2\nend", "    return a * h / 2\nend", "    return\
    \ (a * h) / 2\nend", "  return (a * h) / 2\nend", "    return (a * h) / 2\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

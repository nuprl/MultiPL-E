name: HumanEval_55_fib
language: lua
prompt: "-- Return n-th Fibonacci number.\n-- >>> fib(10)\n-- 55\n-- >>> fib(1)\n\
  -- 1\n-- >>> fib(8)\n-- 21\nlocal function fib(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
  \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
  \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
  \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if n == 1 or n == 2 then\n        return 1\n    else\n        return\
    \ fib(n - 1) + fib(n - 2)\n    end\nend", "    local first = 0\n    local second\
    \ = 1\n    for i = 1, n - 1 do\n        local temp = first + second\n        first\
    \ = second\n        second = temp\n    end\n    return second\nend", "  if (n\
    \ == 1) then\n    return 1\n  elseif (n == 2) then\n    return 1\n  else\n   \
    \ return fib(n-1) + fib(n-2)\n  end\nend", "    local fibs = {1, 1}\n    for i\
    \ = 3, n do\n        fibs[i] = fibs[i - 1] + fibs[i - 2]\n    end\n    return\
    \ fibs[n]\nend", "  return select(2,fib_gen(n))\nend", "    return bst.insert(nil,\
    \ n, function (a, b) return a + b end)\nend", "    if n < 3 then\n        return\
    \ 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "    if\
    \ n < 2 then\n        return n\n    else\n        return fib(n - 1) + fib(n -\
    \ 2)\n    end\nend", "  if n == 1 or n == 2 then\n    return 1\n  else\n    return\
    \ fib(n - 1) + fib(n - 2)\n  end\nend", "    if n <= 1 then\n        return n\n\
    \    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "  if n <= 1\
    \ then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend",
  "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\n\
    end", "  if n < 2 then\n    return n\n  else\n    return fib(n - 1) + fib(n -\
    \ 2)\n  end\nend", "    if n < 1 then\n        return nil\n    elseif n == 1 then\n\
    \        return 1\n    elseif n == 2 then\n        return 1\n    else\n      \
    \  return fib(n - 1) + fib(n - 2)\n    end\nend", "  assert(n >= 1, \"n must be\
    \ >= 1\")\n  return n <= 2 and 1 or fib(n - 1) + fib(n - 2)\nend", "    if n <\
    \ 2 then\n        return n\n    else\n        return fib(n - 1) + fib(n - 2)\n\
    \    end\nend", "    if n < 2 then\n        return n\n    else\n        return\
    \ fib(n - 1) + fib(n - 2)\n    end\nend", "  if n == 1 or n == 2 then\n    return\
    \ 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "    local a, b\
    \ = 0, 1\n    for i = 2, n do\n        a, b = b, a + b\n    end\n    return b\n\
    end", "    if n == 1 or n == 2 then\n        return 1\n    else\n        return\
    \ fib(n - 1) + fib(n - 2)\n    end\nend", "    local a, b = 0, 1\n    while n\
    \ > 0 do\n        a, b = b, a + b\n        n = n - 1\n    end\n    return a\n\
    end", "  if n <= 2 then\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n\
    \  end\nend", "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) +\
    \ fib(n - 2)\n  end\nend", "    if n <= 1 then\n        return n\n    else\n \
    \       return fib(n - 1) + fib(n - 2)\n    end\nend", "    if n < 2 then\n  \
    \      return n\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend",
  "    local a, b = 0, 1\n    for i = 1, n do\n        a, b = b, a + b\n    end\n\
    \    return a\nend", "\tif n == 1 or n == 2 then\n\t\treturn 1\n\telse\n\t\treturn\
    \ fib(n-1) + fib(n-2)\n\tend\nend", "    if n == 1 or n == 2 then\n        return\
    \ 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "  if n\
    \ == 1 or n == 2 then\n    return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n\
    \  end\nend", "  local a, b = 0, 1\n  while n > 0 do\n    a, b = b, a + b\n  \
    \  n = n - 1\n  end\n  return a\nend", "    if n == 1 or n == 2 then\n       \
    \ return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", " \
    \ if n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n \
    \ end\nend", "\tlocal a, b = 0, 1\n\tfor i = 2, n do\n\t\ta, b = b, a + b\n\t\
    end\n\treturn b\nend", "\tif n < 2 then\n\t\treturn n\n\tend\n\treturn fib(n -\
    \ 1) + fib(n - 2)\nend", "  local a, b = 0, 1\n  for i = 1, n do\n    a, b = b,\
    \ a + b\n  end\n  return a\nend", "\tif n == 1 or n == 2 then\n\t\treturn 1\n\t\
    else\n\t\treturn fib(n-1) + fib(n-2)\n\tend\nend", "    local a, b = 0, 1\n  \
    \  for i = 1, n do\n        a, b = b, a + b\n    end\n    return a\nend", "  local\
    \ prev, curr = 0, 1\n  for i = 1, n - 1 do\n    prev, curr = curr, prev + curr\n\
    \  end\n  return curr\nend", "    if n < 2 then\n        return n\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend", "\tif n == 1 or n == 2\
    \ then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\tend\nend", " \
    \   if n < 2 then\n        return n\n    else\n        return fib(n - 1) + fib(n\
    \ - 2)\n    end\nend", "  if n == 1 or n == 2 then\n    return 1\n  else\n   \
    \ return fib(n-1) + fib(n-2)\n  end\nend", "    local a, b = 0, 1\n    for i =\
    \ 1, n do\n        a, b = b, a + b\n    end\n    return a\nend", "    if n <=\
    \ 1 then\n        return n\n    else\n        return fib(n - 1) + fib(n - 2)\n\
    \    end\nend", "\tlocal result = 1\n\tlocal prev = 1\n\tfor i = 3, n do\n\t\t\
    local next = result + prev\n\t\tprev = result\n\t\tresult = next\n\tend\n\treturn\
    \ result\nend", "  if n < 2 then\n    return n\n  else\n    return fib(n - 1)\
    \ + fib(n - 2)\n  end\nend", "  if n <= 1 then\n    return n\n  else\n    return\
    \ fib(n - 1) + fib(n - 2)\n  end\nend", "    local fib_last, fib_last_but_one\
    \ = 1, 1\n    for i = 2, n do\n        fib_last, fib_last_but_one = fib_last +\
    \ fib_last_but_one, fib_last\n    end\n    return fib_last\nend", "  if n <= 1\
    \ then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend",
  "    if n == 1 or n == 2 then\n        return 1\n    else\n        return fib(n\
    \ - 1) + fib(n - 2)\n    end\nend", "  if n == 1 or n == 2 then\n    return 1\n\
    \  else\n    return fib(n-1) + fib(n-2)\n  end\nend\nprint(fib(10))", "    return\
    \ fib_iter(1, 0, n)\nend", "    assert(is_integer(n), \"fibonacci number is undefined\
    \ for non-integer n\")\n    if n < 1 then\n        return 0\n    elseif n == 1\
    \ then\n        return 1\n    else\n        return fib(n-1) + fib(n-2)\n    end\n\
    end", "\tif n < 2 then\n\t\treturn n\n\tend\n\treturn fib(n - 1) + fib(n - 2)\n\
    end", "    if n == 1 or n == 2 then\n        return 1\n    else\n        return\
    \ fib(n - 1) + fib(n - 2)\n    end\nend", "  if n == 1 or n == 2 then\n    return\
    \ 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "  local a, b = 0, 1\n\
    \  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\nend", "  if n < 2\
    \ then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend",
  "  local a, b = 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\n\
    end", "  if n == 1 or n == 2 then\n    return 1\n  else\n    return fib(n-1) +\
    \ fib(n-2)\n  end\nend", "    local a, b = 0, 1\n    for i = 1, n do\n       \
    \ a, b = b, a + b\n    end\n    return a\nend", "    if n == 1 or n == 2 then\n\
    \        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\n\
    end", "    local fib = {[0] = 0, [1] = 1}\n    for i = 2, n do\n        fib[i]\
    \ = fib[i - 1] + fib[i - 2]\n    end\n    return fib[n]\nend", "    local x =\
    \ 0\n    local y = 1\n    for i = 1, n-1 do\n        x, y = y, x + y\n    end\n\
    \    return y\nend", "    if n == 1 or n == 2 then\n        return 1\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend", "    if n < 1 then\n \
    \       return 0\n    elseif n == 1 then\n        return 1\n    else\n       \
    \ return fib(n - 1) + fib(n - 2)\n    end\nend", "  if n == 1 or n == 2 then\n\
    \    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "  if n ==\
    \ 1 or n == 2 then\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\n\
    end", "    if n < 2 then\n        return n\n    else\n        return fib(n - 1)\
    \ + fib(n - 2)\n    end\nend", "    local a, b = 0, 1\n    for i = 2, n do\n \
    \       a, b = b, a + b\n    end\n    return b\nend", "    if n < 3 then\n   \
    \     return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend",
  "    if n < 2 then\n        return n\n    else\n        return fib(n - 1) + fib(n\
    \ - 2)\n    end\nend\nprint(fib(6))", "    local fn = n\n    local fn_1 = 1\n\
    \    local fn_2 = 0\n    while (fn > 1) do\n        fn_1 = fn_1 + fn_2\n     \
    \   fn_2 = fn_1 - fn_2\n        fn = fn - 1\n    end\n    return fn_1\nend", "\t\
    if n <= 2 then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\tend\n\
    end", "  return n == 0 and 0 or n == 1 and 1 or fib(n - 1) + fib(n - 2)\nend",
  "    local a, b = 0, 1\n    while n > 0 do\n        a, b = b, a + b\n        n =\
    \ n - 1\n    end\n    return a\nend", "  local a, b = 0, 1\n  for i = 1, n do\n\
    \    a, b = b, a + b\n  end\n  return a\nend", "    local l, r = 0, 1\n    for\
    \ i = 1, n do\n        l, r = r, l + r\n    end\n    return l\nend", "  if n ==\
    \ 1 or n == 2 then\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\n\
    end", "  local m = matrix_new(1, 1, 1, 0)\n  local res = matrix_pow(m, n)\n  return\
    \ res[1][1]\nend", "  if n == 1 or n == 2 then\n    return 1\n  else\n    return\
    \ fib(n-1) + fib(n-2)\n  end\nend", "\tif n == 1 or n == 2 then\n\t\treturn 1\n\
    \telse\n\t\treturn fib(n-1) + fib(n-2)\n\tend\nend", "  if n <= 1 then\n    return\
    \ n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "    if n < 3 then\n\
    \        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\n\
    end", "    if n <= 1 then\n        return n\n    else\n        return fib(n -\
    \ 1) + fib(n - 2)\n    end\nend", "  if n == 1 or n == 2 then\n    return 1\n\
    \  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "\tlocal fib_prev = 1\n\t\
    local fib_curr = 1\n\tif n <= 1 then\n\t\treturn fib_curr\n\tend\n\tfor i = 2,\
    \ n do\n\t\tfib_curr, fib_prev = fib_curr + fib_prev, fib_curr\n\tend\n\treturn\
    \ fib_curr\nend", "\tif n < 1 then\n\t\terror(\"Fibonacci indices are positive\
    \ or zero.\")\n\tend\n\tif n == 1 or n == 2 then\n\t\treturn 1\n\tend\n\treturn\
    \ fib(n - 1) + fib(n - 2)\nend", "\tlocal a, b = 0, 1\n\tfor i = 1, n do\n\t\t\
    a, b = b, a + b\n\tend\n\treturn a\nend", "  return n <= 1 and n or fib(n - 1)\
    \ + fib(n - 2)\nend", "  if n < 2 then\n    return n\n  else\n    return fib(n\
    \ - 1) + fib(n - 2)\n  end\nend", "  local a, b = 0, 1\n  for i = 1, n do\n  \
    \  a, b = b, a + b\n  end\n  return a\nend", "    return (n <= 2) and 1 or fib(n\
    \ - 1) + fib(n - 2)\nend", "  if (n < 1) then return 0 end\n  if (n == 1) then\
    \ return 1 end\n  return fib(n-1) + fib(n-2)\nend", "    if n <= 1 then\n    \
    \    return n\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend",
  "    if n == 1 or n == 2 then\n        return 1\n    else\n        return fib(n\
    \ - 1) + fib(n - 2)\n    end\nend", "\treturn n == 0 and 0 or n == 1 and 1 or\
    \ fib(n-1) + fib(n-2)\nend", "    if n == 1 or n == 2 then\n        return 1\n\
    \    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "  if n <= 2\
    \ then\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "\t\
    if n == 1 or n == 2 then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\
    \tend\nend", "  if n < 2 then\n    return n\n  else\n    return fib(n - 1) + fib(n\
    \ - 2)\n  end\nend", "    assert(n >= 1)\n    local a, b = 1, 1\n    for i = 3,\
    \ n do\n        a, b = b, a + b\n    end\n    return b\nend", "    local f0, f1\
    \ = 0, 1\n    for i = 1, n do\n        f0, f1 = f1, f0 + f1\n    end\n    return\
    \ f0\nend", "  if n == 1 or n == 2 then\n    return 1\n  else\n    return fib(n\
    \ - 1) + fib(n - 2)\n  end\nend", "  return n < 2 and n or fib(n - 1) + fib(n\
    \ - 2)\nend", "    local retval = 1\n    if n > 1 then\n        local last_prev\
    \ = 1\n        local last = 1\n        for i = 3, n do\n            retval = last\
    \ + last_prev\n            last_prev = last\n            last = retval\n     \
    \   end\n    end\n    return retval\nend", "  if n <= 2 then\n    return 1\n \
    \ else\n    return fib(n-1) + fib(n-2)\n  end\nend", "\tif n <= 1 then\n\t\treturn\
    \ n\n\tend\n\treturn fib(n - 1) + fib(n - 2)\nend", "  if n < 2 then\n    return\
    \ n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if\
    \ n == 1 or n == 2 then\n    return 1\n  else\n    return fib(n - 1) + fib(n -\
    \ 2)\n  end\nend", "  return ((1 + math.sqrt(5)) ^ n - (1 - math.sqrt(5)) ^ n)\
    \ /\n    (2 ^ n * math.sqrt(5))\nend", "  local a, b = 0, 1\n  for i = 1, n do\n\
    \    a, b = b, a + b\n  end\n  return a\nend", "  if n <= 1 then\n    return n\n\
    \  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n == 1 or n ==\
    \ 2 then\n    return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend",
  "\tassert(n >= 1, \"n >= 1 is required.\")\n\tlocal a, b = 1, 1\n\tfor i = 3, n\
    \ do\n\t\ta, b = b, a + b\n\tend\n\treturn b\nend", "    local i = 1\n    local\
    \ a = 0\n    local b = 1\n    while i <= n do\n        a, b = b, a + b\n     \
    \   i = i + 1\n    end\n    return a\nend", "  local a, b = 0, 1\n  for i = 2,\
    \ n do\n    a, b = b, a + b\n  end\n  return b\nend", "    local a, b = 0, 1\n\
    \    for i = 1, n do\n        a, b = b, a + b\n    end\n    return a\nend", " \
    \   local a, b = 0, 1\n    for i = 1, n do\n        a, b = b, a + b\n    end\n\
    \    return a\nend", "\tlocal n_2, n_1 = 0, 1\n\tfor i = 2, n do\n\t\tn_2, n_1\
    \ = n_1, n_2 + n_1\n\tend\n\treturn n_1\nend", "    if n == 1 or n == 2 then\n\
    \        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\n\
    end", "    local a, b = 0, 1\n    for i = 1, n do\n        a, b = b, a + b\n \
    \   end\n    return a\nend", "    if n == 1 or n == 2 then\n        return 1\n\
    \    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "  return 1\n\
    end", "    if n < 2 then\n        return n\n    else\n        return fib(n - 1)\
    \ + fib(n - 2)\n    end\nend", "    if n == 1 or n == 2 then\n        return 1\n\
    \    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "  local a,\
    \ b = 0, 1\n  for i = 1, n - 1 do\n    a, b = b, a + b\n  end\n  return b\nend",
  "    if n <= 2 then\n        return 1\n    else\n        return fib(n - 1) + fib(n\
    \ - 2)\n    end\nend", "    if n == 1 or n == 2 then\n        return 1\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend", "  if n < 2 then\n   \
    \ return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "    local\
    \ a, b = 0, 1\n    for i = 2, n do\n        a, b = b, a + b\n    end\n    return\
    \ b\nend", "  if n == 1 or n == 2 then\n    return 1\n  else\n    return fib(n-1)\
    \ + fib(n-2)\n  end\nend", "  if n == 1 or n == 2 then\n    return 1\n  else\n\
    \    return fib(n - 1) + fib(n - 2)\n  end\nend", "    if n < 2 then\n       \
    \ return n\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", " \
    \ local a, b = 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\n\
    end", "    if n == 1 or n == 2 then\n        return 1\n    else\n        return\
    \ fib(n - 1) + fib(n - 2)\n    end\nend", "  if n <= 2 then\n    return 1\n  else\n\
    \    return fib(n-1) + fib(n-2)\n  end\nend", "  if n == 1 or n == 2 then\n  \
    \  return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "    if n <\
    \ 2 then\n        return n\n    else\n        return fib(n - 1) + fib(n - 2)\n\
    \    end\nend", "    return fib_aux(n, 1, 0)\nend", "  local a, b = 0, 1\n  for\
    \ i = 1, n do\n    a, b = b, a + b\n  end\n  return a\nend", "  return select(2,\
    \ fibgen(n))\nend", "    if n <= 1 then\n        return n\n    else\n        return\
    \ fib(n - 1) + fib(n - 2)\n    end\nend", "    if n == 1 or n == 2 then\n    \
    \    return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend",
  "  if n == 1 or n == 2 then\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n\
    \  end\nend", "  return fib(n - 1) + fib(n - 2)\nend", "  if n == 1 or n == 2\
    \ then\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", " \
    \ local prev, current = 0, 1\n  for i = 1, n do\n    prev, current = current,\
    \ prev + current\n  end\n  return current\nend", "    if n == 1 or n == 2 then\n\
    \        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\n\
    end", "  if n < 3 then\n    return 1\n  else\n    return fib(n - 1) + fib(n -\
    \ 2)\n  end\nend", "    if n < 2 then\n        return n\n    else\n        return\
    \ fib(n - 1) + fib(n - 2)\n    end\nend", "  local prev = 0\n  local cur = 1\n\
    \  for i = 1, n - 1 do\n    local next = prev + cur\n    prev = cur\n    cur =\
    \ next\n  end\n  return cur\nend", "    if n == 1 or n == 2 then\n        return\
    \ 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "  local\
    \ a, b = 0, 1\n  for i = 2, n do\n    a, b = b, a + b\n  end\n  return b\nend",
  "    assert(n >= 1, 'fib(n) requires n >= 1')\n    return n < 3 and 1 or fib(n -\
    \ 1) + fib(n - 2)\nend", "  local f1, f2 = 1, 1\n  for i = 3, n do\n    f1, f2\
    \ = f2, f1 + f2\n  end\n  return f2\nend", "    if n < 3 then\n        return\
    \ 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "\tif (n\
    \ == 1) then\n\t\treturn 1\n\telseif (n == 2) then\n\t\treturn 1\n\telse\n\t\t\
    return fib(n-1) + fib(n-2)\n\tend\nend", "    if n < 2 then\n        return n\n\
    \    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "    if n ==\
    \ 1 or n == 2 then\n        return 1\n    else\n        return fib(n - 1) + fib(n\
    \ - 2)\n    end\nend", "    local a, b = 0, 1\n    for i = 1, n do\n        a,\
    \ b = b, a + b\n    end\n    return a\nend", "  if n < 2 then\n    return n\n\
    \  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend\n```", "    local prev\
    \ = 0\n    local cur = 1\n    for i = 1, n do\n        local tmp = cur\n     \
    \   cur = prev + cur\n        prev = tmp\n    end\n    return cur\nend", "\tif\
    \ n == 1 or n == 2 then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\
    \tend\nend", "    if n < 2 then\n        return n\n    else\n        return fib(n\
    \ - 1) + fib(n - 2)\n    end\nend", "  local a, b = 0, 1\n  if n == 0 then return\
    \ a end\n  if n == 1 then return b end\n  for i = 2, n do\n    a, b = b, a + b\n\
    \  end\n  return b\nend", "    if n < 2 then\n        return n\n    else\n   \
    \     return fib(n - 1) + fib(n - 2)\n    end\nend", "    if n == 1 or n == 2\
    \ then\n        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n \
    \   end\nend", "    local a, b = 0, 1\n    for i = 2, n do\n        a, b = b,\
    \ a + b\n    end\n    return b\nend", "    if n < 2 then\n        return n\n \
    \   else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "  if n == 1\
    \ or n == 2 then\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\n\
    end", "    if n == 1 or n == 2 then\n        return 1\n    else\n        return\
    \ fib(n - 1) + fib(n - 2)\n    end\nend", "\tif n == 1 or n == 2 then\n\t\treturn\
    \ 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\tend\nend", "  return (n <= 2) and\
    \ 1 or fib(n - 1) + fib(n - 2)\nend", "    if n <= 1 then\n        return n\n\
    \    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "\tif n <= 1\
    \ then\n\t\treturn n\n\tend\n\treturn fib(n - 1) + fib(n - 2)\nend", "    return\
    \ n<2 and n or fib(n-1)+fib(n-2)\nend", "\tif n <= 1 then\n\t\treturn n\n\tend\n\
    \treturn fib(n - 1) + fib(n - 2)\nend", "  if n == 1 or n == 2 then\n    return\
    \ 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "    local i, j = 0,\
    \ 1\n    for _ = 1, n do\n        i, j = j, i + j\n    end\n    return i\nend",
  "    if n == 1 or n == 2 then\n        return 1\n    else\n        return fib(n\
    \ - 1) + fib(n - 2)\n    end\nend", "  if n <= 2 then\n    return 1\n  else\n\
    \    return fib(n-1) + fib(n-2)\n  end\nend", "  assert(n > 0, 'n should be positive')\n\
    \  if n <= 2 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend",
  "    local i, j = 0, 1\n    for _ = 1, n do\n        i, j = j, i + j\n    end\n\
    \    return i\nend", "  local a, b = 0, 1\n  for i = 2, n do\n    a, b = b, a\
    \ + b\n  end\n  return b\nend", "  if n == 1 or n == 2 then\n    return 1\n  else\n\
    \    return fib(n-1) + fib(n-2)\n  end\nend", "  if n <= 1 then\n    return n\n\
    \  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend\n```", "  local a, b =\
    \ 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\nend", "  local\
    \ t = { 1, 1 }\n  for i = 3, n do\n    t[i] = t[i - 1] + t[i - 2]\n  end\n  return\
    \ t[n]\nend", "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) +\
    \ fib(n - 2)\n  end\nend", "  local f1, f2 = 1, 1\n  for i = 3, n do\n    f1,\
    \ f2 = f2, f1 + f2\n  end\n  return f2\nend", "  local a, b = 0, 1\n  for i =\
    \ 1, n do\n    a, b = b, a + b\n  end\n  return a\nend", "    if n < 2 then\n\
    \        return n\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\n\
    end", "\tif n == 1 or n == 2 then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1) +\
    \ fib(n-2)\n\tend\nend", "  return fib_tab[n]\nend", "    local a, b = 0, 1\n\
    \    for i = 1, n do\n        a, b = b, a + b\n    end\n    return a\nend", " \
    \ if n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n \
    \ end\nend", "    if n < 3 then\n        return 1\n    else\n        return fib(n\
    \ - 1) + fib(n - 2)\n    end\nend", "    if n < 1 then\n        return 0\n   \
    \ elseif n == 1 then\n        return 1\n    else\n        return fib(n - 1) +\
    \ fib(n - 2)\n    end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

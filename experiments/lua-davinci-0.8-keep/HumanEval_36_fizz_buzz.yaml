name: HumanEval_36_fizz_buzz
language: lua
prompt: "-- Return the number of times the digit 7 appears in integers less than n\
  \ which are divisible by 11 or 13.\n-- >>> fizz_buzz(50)\n-- 0\n-- >>> fizz_buzz(78)\n\
  -- 2\n-- >>> fizz_buzz(79)\n-- 3\nlocal function fizz_buzz(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
  \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
  \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
  \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000), 192)\n\
  \    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
  \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local count = 0\n  for i = 0, n - 1 do\n    if (i % 11 == 0 or i\
    \ % 13 == 0) and i % 7 == 0 then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "    local sum = 0\n    for i = 1, n - 1 do\n        if i % 11\
    \ == 0 or i % 13 == 0 then\n            local str = tostring(i)\n            for\
    \ j = 1, #str do\n                if str:sub(j, j) == '7' then\n             \
    \       sum = sum + 1\n                end\n            end\n        end\n   \
    \ end\n    return sum\nend", "\tlocal count = 0\n\tfor i = 1, n-1 do\n\t\tif (i\
    \ % 11 == 0 or i % 13 == 0) and i % 10 == 7 then\n\t\t\tcount = count + 1\n\t\t\
    end\n\tend\n\treturn count\nend", "    local count = 0\n    for i = 0, n - 1 do\n\
    \        if i % 11 == 0 or i % 13 == 0 then\n            while i > 0 do\n    \
    \            local digit = i % 10\n                if digit == 7 then\n      \
    \              count = count + 1\n                end\n                i = math.floor(i\
    \ / 10)\n            end\n        end\n    end\n    return count\nend", "  local\
    \ count = 0\n  for i = 1, n do\n    if ((i % 11 == 0) or (i % 13 == 0)) and num_of_7s(i)\
    \ > 0 then\n      count = count + 1\n    end\n  end\n  return count\nend", " \
    \ local r = 0\n  for i = 1, n do\n    if i % 11 == 0 or i % 13 == 0 then\n   \
    \   local t = tostring(i)\n      for c in t:gmatch('.') do\n        if c == '7'\
    \ then\n          r = r + 1\n        end\n      end\n    end\n  end\n  return\
    \ r\nend", "\tlocal sum = 0\n\tlocal count = 0\n\tfor i = 1, n - 1 do\n\t\tif\
    \ i % 11 == 0 or i % 13 == 0 then\n\t\t\tcount = count + 1\n\t\t\tsum = sum +\
    \ count_7(i)\n\t\tend\n\tend\n\treturn sum\nend", "  local cnt = 0\n  for i =\
    \ 1, n - 1 do\n    if i % 11 == 0 or i % 13 == 0 then\n      local s = tostring(i)\n\
    \      for j = 1, #s do\n        if s:sub(j, j) == '7' then\n          cnt = cnt\
    \ + 1\n        end\n      end\n    end\n  end\n  return cnt\nend", "\tlocal c\
    \ = 0\n\tfor i = 1, n - 1 do\n\t\tif (i % 11 == 0 or i % 13 == 0) and string.find(i,\
    \ '7') then\n\t\t\tc = c + 1\n\t\tend\n\tend\n\treturn c\nend", "    local sum\
    \ = 0\n    for i = 1, n - 1 do\n        if (i % 11 == 0 or i % 13 == 0) and i\
    \ % 7 == 0 then\n            local str = tostring(i)\n            local c\n  \
    \          for c in str:gmatch(\".\") do\n                if c == \"7\" then\n\
    \                    sum = sum + 1\n                end\n            end\n   \
    \     end\n    end\n    return sum\nend", "    if n < 7 then\n        return 0\n\
    \    end\n    local count = 0\n    for i = math.floor(n / 11) * 11, 7, -11 do\n\
    \        if string.find(i, '7') then\n            count = count + 1\n        end\n\
    \    end\n    for i = math.floor(n / 13) * 13, 7, -13 do\n        if string.find(i,\
    \ '7') then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    n = n - 1\n    return n ~= 0 and (fizz_buzz(n) + (n % 11 == 0 and n\
    \ % 13 == 0 and 1 or 0) + (string.find(tostring(n), \"7\") and 1 or 0)) or 0\n\
    end", "  local total = 0\n  for i = 7, n - 1 do\n    if i % 11 == 0 or i % 13\
    \ == 0 then\n      local j = i\n      while j > 0 do\n        if j % 10 == 7 then\n\
    \          total = total + 1\n        end\n        j = j // 10\n      end\n  \
    \  end\n  end\n  return total\nend", "   local t = {11, 13}\n   local count =\
    \ 0\n   for i = 1, #t do\n      local divisor = t[i]\n      local d = n / divisor\n\
    \      while d > 0 do\n         if tostring(d):match('7') then\n            count\
    \ = count + 1\n         end\n         d = d / 10\n      end\n   end\n   return\
    \ count\nend", "    local function is_divisible_by_11_or_13(num)\n        return\
    \ num % 11 == 0 or num % 13 == 0\n    end", "  local i, j, k = 0, 0, 0\n  for\
    \ x=1,n-1 do\n    if x % 11 == 0 then i = i + 1 end\n    if x % 13 == 0 then j\
    \ = j + 1 end\n    if x % 11 == 0 or x % 13 == 0 then k = k + 1 end\n  end\n \
    \ return i + j - k\nend", "    -- TODO\nend", "  local count = 0\n  for i = 1,\
    \ n - 1 do\n    if (i % 11 == 0 or i % 13 == 0) and i % 10 == 7 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "\tif (n <= 0) then\n\t\t\
    return 0\n\tend\n\tlocal s = 0\n\tif (n % 11 == 0) then\n\t\tlocal r = n / 11\n\
    \t\twhile (r > 0) do\n\t\t\tif (r % 10 == 7) then\n\t\t\t\ts = s + 1\n\t\t\tend\n\
    \t\t\tr = math.floor(r / 10)\n\t\tend\n\telseif (n % 13 == 0) then\n\t\tlocal\
    \ r = n / 13\n\t\twhile (r > 0) do\n\t\t\tif (r % 10 == 7) then\n\t\t\t\ts = s\
    \ + 1\n\t\t\tend\n\t\t\tr = math.floor(r / 10)\n\t\tend\n\tend\n\treturn s + fizz_buzz(n\
    \ - 1)\nend", "    local counter = 0\n    for i = 1, n do\n        if (i % 11\
    \ == 0 or i % 13 == 0) and tostring(i):find(\"7\") then\n            counter =\
    \ counter + 1\n        end\n    end\n    return counter\nend", "    local c =\
    \ 0\n    for i = 1, n - 1 do\n        if i % 11 == 0 or i % 13 == 0 then\n   \
    \         local t = i\n            while t > 0 do\n                c = c + (t\
    \ % 10 == 7 and 1 or 0)\n                t = math.floor(t / 10)\n            end\n\
    \        end\n    end\n    return c\nend", "   -- Your code here\nend", "  local\
    \ result = 0\n  local divs = {11, 13}\n  for i = 1, n - 1 do\n    local digit_7\
    \ = false\n    for j = 1, #divs do\n      if i % divs[j] == 0 then\n        for\
    \ c in tostring(i):gmatch('7') do\n          digit_7 = true\n        end\n   \
    \     if digit_7 then\n          result = result + 1\n        end\n      end\n\
    \    end\n  end\n  return result\nend", "    local count = 0\n    for i = 1, n\
    \ do\n        if i % 11 == 0 or i % 13 == 0 then\n            while i > 0 do\n\
    \                if i % 10 == 7 then\n                    count = count + 1\n\
    \                end\n                i = i // 10\n            end\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for i = 1, n - 1 do\n\
    \        if math.fmod(i, 11) == 0 or math.fmod(i, 13) == 0 then\n            local\
    \ temp = i\n            while temp > 0 do\n                local digit = math.fmod(temp,\
    \ 10)\n                if digit == 7 then\n                    count = count +\
    \ 1\n                end\n                temp = math.floor(temp / 10)\n     \
    \       end\n        end\n    end\n    return count\nend", "  -- your code here\n\
    \  local n7 = 0\n  local n11 = 0\n  local n13 = 0\n  for i = 1,n do\n    local\
    \ c = tostring(i)\n    for s in c:gmatch('7') do\n      n7 = n7 + 1\n    end\n\
    \    if (i%11 == 0) then\n      n11 = n11 + 1\n    end\n    if (i%13 == 0) then\n\
    \      n13 = n13 + 1\n    end\n  end\n  return n7 - n11 - n13\nend", "  local\
    \ sevens = 0\n  for i = 1, n - 1 do\n    if (i % 11 == 0 or i % 13 == 0) and math.floor(i\
    \ % 10) == 7 then\n      sevens = sevens + 1\n    end\n  end\n  return sevens\n\
    end", "    local count = 0\n    for i = 1, n do\n        local is_divisible_by_eleven\
    \ = i % 11 == 0\n        local is_divisible_by_thirteen = i % 13 == 0\n      \
    \  if is_divisible_by_eleven or is_divisible_by_thirteen then\n            local\
    \ str = tostring(i)\n            for digit in str:gmatch(\".\") do\n         \
    \       if digit == \"7\" then\n                    count = count + 1\n      \
    \          end\n            end\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 0, n - 1 do\n        if i % 11 == 0 or i % 13\
    \ == 0 then\n            for _, digit in utf8.codes(tostring(i)) do\n        \
    \        if digit == string.byte('7') then\n                    count = count\
    \ + 1\n                end\n            end\n        end\n    end\n    return\
    \ count\nend", "    local res = 0\n    for i = 0, n - 1 do\n        if (i % 11\
    \ == 0 or i % 13 == 0) and string.find(i, '7') then\n            res = res + 1\n\
    \        end\n    end\n    return res\nend", "  local count = 0\n  for i = 1,\
    \ n - 1 do\n    if i % 11 == 0 then\n      if i % 13 == 0 then\n        count\
    \ = count + 2\n      else\n        count = count + 1\n      end\n    elseif i\
    \ % 13 == 0 then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "\tlocal counter = 0\n\tfor i = 0, n do\n\t\tif (i % 11 == 0 or i % 13 == 0) and\
    \ tostring(i):find(\"7\") then\n\t\t\tcounter = counter + 1\n\t\tend\n\tend\n\t\
    return counter\nend", "    local count = 0\n    for i = n, n - 49, -1 do\n   \
    \     if i % 11 == 0 or i % 13 == 0 then\n            for digit in i:gmatch('.')\
    \ do\n                if digit == '7' then\n                    count = count\
    \ + 1\n                end\n            end\n        end\n    end\n    return\
    \ count\nend", "  local count = 0\n  for i = 1, n do\n    if i % 11 == 0 or i\
    \ % 13 == 0 then\n      local s = tostring(i)\n      for j = 1, #s do\n      \
    \  if s:sub(j, j) == '7' then\n          count = count + 1\n        end\n    \
    \  end\n    end\n  end\n  return count\nend", "  return 0\nend", "  if n < 11\
    \ then return 0 end\n  local count = 0\n  local fizz = 11\n  local buzz = 13\n\
    \  while fizz < n do\n    local p = fizz\n    while p > 0 do\n      if p % 10\
    \ == 7 then count = count + 1 end\n      p = math.floor(p / 10)\n    end\n   \
    \ p = buzz\n    while p > 0 do\n      if p % 10 == 7 then count = count + 1 end\n\
    \      p = math.floor(p / 10)\n    end\n    fizz = fizz + 11\n    buzz = buzz\
    \ + 13\n  end\n  return count\nend", "  local count = 0\n  for i = 0, n do\n \
    \   if (i % 11 == 0 or i % 13 == 0) and math.floor(i/10) % 10 == 7 then\n    \
    \  count = count + 1\n    end\n  end\n  return count\nend", "    if n == 0 then\n\
    \        return 0\n    end\n    local num = 0\n    local a = n % 10\n    local\
    \ b = n % 100\n    local c = n % 1000\n    if b > 6 and b < 14 then\n        num\
    \ = num + 1\n    end\n    if c > 60 and c < 70 then\n        num = num + 1\n \
    \   end\n    if a == 7 then\n        num = num + 1\n    end\n    if (n % 11 ==\
    \ 0) or (n % 13 == 0) then\n        num = num + fizz_buzz(n - 1)\n    end\n  \
    \  return num\nend", "    return reduce(function(v, acc) return v:match(\"%d\"\
    ) == \"7\" and acc + 1 or acc end, 0, filter(function(v) return (tonumber(v) <\
    \ n) and ((tonumber(v) % 11 == 0) or (tonumber(v) % 13 == 0)) end, map(function(v)\
    \ return v:match(\"%d+\") end, generate(\"fizzbuzz\"))))\nend", "    local count\
    \ = 0\n    for i = 0, n - 1 do\n        if (i % 11 == 0 or i % 13 == 0) and i\
    \ % 7 == 0 then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "    local res = 0\n    local i, j = 0, 1\n    while i + j < n\
    \ do\n        if i % 11 == 0 or j % 13 == 0 then\n            local sum = i +\
    \ j\n            while sum > 0 do\n                if sum % 10 == 7 then\n   \
    \                 res = res + 1\n                end\n                sum = sum\
    \ // 10\n            end\n        end\n        i, j = j, i + j\n    end\n    return\
    \ res\nend", "  local count = 0\n  for i = 1, n - 1 do\n    if (i % 11 == 0 or\
    \ i % 13 == 0) and tostring(i):find('7') then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "  return 0\nend", "    -- Your code here\n    return\
    \ 0\nend", "  local cnt = 0\n  for i = 1, n do\n    if (i % 11 == 0 or i % 13\
    \ == 0) and contains_7(i) then\n      cnt = cnt + 1\n    end\n  end\n  return\
    \ cnt\nend", "  local count = 0\n  for i = 0, n - 1 do\n    if i % 11 == 0 or\
    \ i % 13 == 0 then\n      if string.find(i, \"7\") then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "  local r=0\n  for i=1,n\
    \ do\n    local s=tostring(i)\n    if s:find\"7\" and (i%11==0 or i%13==0) then\n\
    \      r=r+1\n    end\n  end\n  return r\nend", "    n = n - 1\n    local count\
    \ = 0\n    for i = 1, n do\n        if i % 11 == 0 or i % 13 == 0 then\n     \
    \       count = count + count_7(i)\n        end\n    end\n    return count\nend",
  "    -- write your code here\n    local cnt = 0\n    for i = 1, n - 1 do\n     \
    \   if i % 11 == 0 or i % 13 == 0 then\n            local s = tostring(i)\n  \
    \          for j = 1, #s do\n                if s:sub(j, j) == '7' then\n    \
    \                cnt = cnt + 1\n                end\n            end\n       \
    \ end\n    end\n    return cnt\nend", "    local function fizz(m)\n        if\
    \ m % 11 == 0 or m % 13 == 0 then\n            return count_digits(m, 7)\n   \
    \     else\n            return 0\n        end\n    end\n    local function fizz_buzz_helper(m,\
    \ sum)\n        if m == 0 then\n            return sum\n        else\n       \
    \     return fizz_buzz_helper(m - 1, sum + fizz(m))\n        end\n    end\n  \
    \  return fizz_buzz_helper(n - 1, 0)\nend", "    local count = 0\n    for i =\
    \ 0, n do\n        if i % 11 == 0 or i % 13 == 0 then\n            count = count\
    \ + count_sevens(i)\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for i = 1, n do\n        if (i % 11 == 0 or i % 13 == 0) and\
    \ i % 7 == 0 then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "  local c=0\n  for i=1,n-1 do\n    local a = i%11==0\n    local\
    \ b = i%13==0\n    if a or b then\n      local s = tostring(i)\n      for j=1,#s\
    \ do\n        if s:sub(j,j)=='7' then\n          c=c+1\n        end\n      end\n\
    \    end\n  end\n  return c\nend", "    assert(type(n) == \"number\", \"fizz_buzz\
    \ expects a number\")\n    assert(n > 0, \"fizz_buzz expects positive integer\"\
    )\n    local num, d = n, 0\n    while n > 0 do\n        n, d = n // 10, n % 10\n\
    \        if d == 7 then num = num - 1 end\n    end\n    local result = num //\
    \ 78\n    local fb = num % 78\n    if fb < 13 then result = result + 1 end\n \
    \   if fb < 11 then result = result + 1 end\n    return result\nend", "    local\
    \ i = 0\n    local count = 0\n    while i < n do\n        if i % 11 == 0 or i\
    \ % 13 == 0 then\n            local str = tostring(i)\n            for index =\
    \ 1, #str do\n                if str:sub(index, index) == \"7\" then\n       \
    \             count = count + 1\n                end\n            end\n      \
    \  end\n        i = i + 1\n    end\n    return count\nend", "\tlocal fizz_buzz\
    \ = 0", "  local function fizz_buzz_helper(n, n_mod_11, n_mod_13, counter)\n \
    \   if n < 0 then\n      return counter\n    elseif n_mod_11 == 0 or n_mod_13\
    \ == 0 then\n      local digit_7_count = 0\n      if n_mod_11 == 0 then\n    \
    \    digit_7_count = digit_7_count + occurrences_of_7(n, 11)\n      end\n    \
    \  if n_mod_13 == 0 then\n        digit_7_count = digit_7_count + occurrences_of_7(n,\
    \ 13)\n      end\n      return fizz_buzz_helper(n - 1, (n_mod_11 + 10) % 11, (n_mod_13\
    \ + 12) % 13, counter + digit_7_count)\n    else\n      return fizz_buzz_helper(n\
    \ - 1, (n_mod_11 + 10) % 11, (n_mod_13 + 12) % 13, counter)\n    end\n  end\n\
    \  return fizz_buzz_helper(n - 1, 10, 12, 0)\nend", "    local count = 0\n   \
    \ for i = 1, n do\n        if math.fmod(i, 11) == 0 or math.fmod(i, 13) == 0 then\n\
    \            while i > 0 do\n                if math.fmod(i, 10) == 7 then\n \
    \                   count = count + 1\n                end\n                i\
    \ = math.floor(i / 10)\n            end\n        end\n    end\n    return count\n\
    end", "    local c = 0\n    for i = 1, n-1 do\n        if math.fmod(i, 11) ==\
    \ 0 or math.fmod(i, 13) == 0 then\n            local d = i\n            while\
    \ d > 0 do\n                local d2 = math.fmod(d, 10)\n                if d2\
    \ == 7 then\n                    c = c + 1\n                end\n            \
    \    d = math.floor(d / 10)\n            end\n        end\n    end\n    return\
    \ c\nend", "  local count = 0\n  for i = 0, n - 1 do\n    if (i % 11 == 0 or i\
    \ % 13 == 0) and tostring(i):find(\"7\") then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "    local function g(i)\n        if i < n then\n\
    \            if i % 11 == 0 or i % 13 == 0 then\n                return 1 + g(i\
    \ + 1)\n            else\n                return g(i + 1)\n            end\n \
    \       else\n            return 0\n        end\n    end\n    return g(0)\nend",
  "    local count = 0\n    local i = 7\n    while i < n do\n        if i % 11 ==\
    \ 0 or i % 13 == 0 then\n            if i == 77 then\n                count =\
    \ count + 2\n            else\n                local s = tostring(i)\n       \
    \         for j = 1, #s do\n                    if s:sub(j, j) == '7' then\n \
    \                       count = count + 1\n                    end\n         \
    \       end\n            end\n        end\n        i = i + 1\n    end\n    return\
    \ count\nend", "  -- TODO(pierre-thirouin): fill this in\n  return 1\nend", " \
    \ if n < 11 then return 0 end\n  local sum = 0\n  if n % 11 == 0 then\n    sum\
    \ = sum + floor(n/11)\n  else\n    sum = sum + floor(n/11) + 1\n  end\n  if n\
    \ % 13 == 0 then\n    sum = sum + floor(n/13)\n  else\n    sum = sum + floor(n/13)\
    \ + 1\n  end\n  return sum - (floor(n/143) + 1)\nend", "  -- TODO\nend", "   \
    \ local function gcd(a, b)\n        while b ~= 0 do\n            a, b = b, a %\
    \ b\n        end\n        return a\n    end\n    local function count(a, b)\n\
    \        return string.len(tostring(a * (n - 1) + b)):gsub(\"7\", \"\")\n    end\n\
    \    local p = gcd(11, 13)\n    return count(11, 13) - count(11 * 13 / p, p)\n\
    end", "    n = n - n % 11\n    local function _fizz_buzz(n, last_n, m, sum)\n\
    \        if n >= m then\n            if n >= last_n + 13 then\n              \
    \  return _fizz_buzz(n, n, m + 13, sum)\n            else\n                return\
    \ _fizz_buzz(n, last_n, m + 11, sum + 1)\n            end\n        else\n    \
    \        return sum\n        end\n    end\n    return _fizz_buzz(n, n, 11, 0)\n\
    end", "  local count = 0\n  for i = 1, n - 1 do\n    if i % 11 == 0 or i % 13\
    \ == 0 then\n      local str = tostring(i)\n      for j = 1, string.len(str) do\n\
    \        if string.sub(str, j, j) == \"7\" then\n          count = count + 1\n\
    \        end\n      end\n    end\n  end\n  return count\nend", "  local res =\
    \ 0\n  local nums = {11, 13}\n  local last = {1, 1}\n  local digits = {}\n  while\
    \ n > 0 do\n    n = n - 1\n    if n % 11 == 0 or n % 13 == 0 then\n      digits\
    \ = {}\n      for i = 1, #nums do\n        last[i] = (last[i] * 10) % nums[i]\n\
    \      end\n      local x = n\n      repeat\n        local d = x % 10\n      \
    \  if d == 7 then\n          res = res + 1\n        end\n        digits[d] = 1\n\
    \        x = (x - d) / 10\n      until x == 0\n      for i = 1, #nums do\n   \
    \     if not digits[last[i]] then\n          break\n        end\n        if i\
    \ == #nums then\n          res = res + 1\n        end\n      end\n    end\n  end\n\
    \  return res\nend", "    return nil\nend", "    local count = 0\n    for i =\
    \ 0, n - 1 do\n        if (i % 11 == 0 or i % 13 == 0) and tostring(i):find(\"\
    7\") then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "\tlocal count = 0\n\tlocal fizz, buzz = false, false\n\tfor i = 1, n do\n\
    \t\tfizz = i % 11 == 0\n\t\tbuzz = i % 13 == 0\n\t\tif fizz or buzz then\n\t\t\
    \tfor j = 1, math.floor(math.log10(i)) do\n\t\t\t\tif math.floor(i / math.pow(10,\
    \ j)) % 10 == 7 then\n\t\t\t\t\tcount = count + 1\n\t\t\t\tend\n\t\t\tend\n\t\t\
    end\n\tend\n\treturn count\nend", "    local count = 0\n    for i = 1, n - 1 do\n\
    \        if (i % 11 == 0 or i % 13 == 0) and string.find(tostring(i), \"7\") then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "  local cnt = 0\n  for i = 0, n - 1 do\n    if i % 11 == 0 or i % 13 == 0 then\n\
    \      cnt = cnt + table.count_char(tostring(i), '7')\n    end\n  end\n  return\
    \ cnt\nend", "  local s = 0\n  local t = 0\n  for i = 1, n - 1 do\n    if i %\
    \ 11 == 0 or i % 13 == 0 then\n      t = 0\n      while i > 0 do\n        t =\
    \ t + 1\n        if i % 10 == 7 then\n          s = s + 1\n        end\n     \
    \   i = math.floor(i / 10)\n      end\n    end\n  end\n  return s\nend", "  local\
    \ count = 0\n  local n_str = tostring(n)\n  for i = 1, #n_str do\n    local char\
    \ = n_str:sub(i, i)\n    if char == '7' then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "    local r = 0\n    for i = 11, n - 1 do\n   \
    \     local j = i\n        while j ~= 0 do\n            if j % 10 == 7 then\n\
    \                r = r + 1\n            end\n            j = math.floor(j / 10)\n\
    \        end\n    end\n    return r\nend", "   local cnt = 0\n   for i = n - 1,\
    \ 1, -1 do\n      if i % 11 == 0 or i % 13 == 0 then\n         for c in tostring(i):gmatch('7')\
    \ do\n            cnt = cnt + 1\n         end\n      end\n   end\n   return cnt\n\
    end", "  local nfizz = n//13\n  local nbuzz = n//11\n  local nfizzbuzz = n//(13*11)\n\
    \  local ndig7 = 0\n  local i = 0\n  while i < nfizz do\n    ndig7 = ndig7 + count_7(13*i)\n\
    \    i = i + 1\n  end\n  i = 0\n  while i < nbuzz do\n    ndig7 = ndig7 + count_7(11*i)\n\
    \    i = i + 1\n  end\n  i = 0\n  while i < nfizzbuzz do\n    ndig7 = ndig7 +\
    \ count_7(13*11*i)\n    i = i + 1\n  end\n  return ndig7\nend", "  \n  if n <\
    \ 0 then return nil end\n  if n == 0 then return 0 end\n  \n  local count = 0\n\
    \  local i = 1\n  while i < n do\n    \n    if i % 11 == 0 or i % 13 == 0 then\n\
    \      local j = i\n      while j > 0 do\n        \n        if j % 10 == 7 then\n\
    \          count = count + 1\n        end\n        \n        j = math.floor(j\
    \ / 10)\n      end\n    end\n    \n    i = i + 1\n  end\n  \n  return count\n\
    end", "    local res = 0\n    for i = 1, n-1 do\n        if (i % 11 == 0 or i\
    \ % 13 == 0) and i % 10 == 7 then\n            res = res + 1\n        end\n  \
    \  end\n    return res\nend", "\tlocal count = 0\n\tfor i = 1, n-1 do\n\t\tif\
    \ (i % 11 == 0 or i % 13 == 0) and tostring(i):find(\"7\") then\n\t\t\tcount =\
    \ count + 1\n\t\tend\n\tend\n\treturn count\nend", "  assert(n > 0)\n  local count\
    \ = 0\n  local i = 0\n  while i < n do\n    i = i + 1\n    if (i % 11 == 0 or\
    \ i % 13 == 0) and\n       string.find(tostring(i), '7') then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "    local num = 0\n    for i = 1,\
    \ n do\n        local mod_11 = (i % 11 == 0)\n        local mod_13 = (i % 13 ==\
    \ 0)\n        if (mod_11 or mod_13) and i < n then\n            local str = tostring(i)\n\
    \            for j = 1, #str do\n                local c = string.sub(str, j,\
    \ j)\n                if c == \"7\" then\n                    num = num + 1\n\
    \                end\n            end\n        end\n    end\n    return num\n\
    end", "    -- YOUR CODE HERE\n    local count = 0\n    for i = 1, n-1 do\n   \
    \     if i % 11 == 0 or i % 13 == 0 then\n            local k = i\n          \
    \  while k > 0 do\n                if k % 10 == 7 then\n                    count\
    \ = count + 1\n                end\n                k = math.floor(k / 10)\n \
    \           end\n        end\n    end\n    return count\nend", "\tlocal counter\
    \ = 0\n\tfor i = 1, n-1 do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\t\t\tlocal\
    \ string = tostring(i)\n\t\t\tfor j = 1, string.len(string) do\n\t\t\t\tif string.sub(string,\
    \ j, j) == \"7\" then\n\t\t\t\t\tcounter = counter + 1\n\t\t\t\tend\n\t\t\tend\n\
    \t\tend\n\tend\n\treturn counter\nend", "  local count = 0\n  for i = 1, n do\n\
    \    if i % 11 == 0 or i % 13 == 0 then\n      count = count + count_7(i)\n  \
    \  end\n  end\n  return count\nend", "  if n < 0 then return 0 end\n  local c\
    \ = 0\n  if n >= 11 then\n    c = c + 1\n    local p = 11\n    while p + 11 <=\
    \ n do\n      p = p + 11\n      c = c + 1\n    end\n  end\n  if n >= 13 then\n\
    \    c = c + 1\n    local p = 13\n    while p + 13 <= n do\n      p = p + 13\n\
    \      c = c + 1\n    end\n  end\n  return c\nend", "  local count = 0\n  for\
    \ i = 1, n - 1 do\n    if (i % 11 == 0 or i % 13 == 0) and tostring(i):find('7')\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "\t-- SOLUTION:\n\
    \tlocal count = 0\n\tfor i = 1, n do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\
    \t\t\tfor _, d in pairs(tostring(i)) do\n\t\t\t\tif d == '7' then\n\t\t\t\t\t\
    count = count + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend",
  "  local ct = 0\n  for i = 1, n do\n    if math.fmod(i, 11) == 0 or math.fmod(i,\
    \ 13) == 0 then\n      local str = tostring(i)\n      for c in str:gmatch(\".\"\
    ) do\n        if c == \"7\" then\n          ct = ct + 1\n        end\n      end\n\
    \    end\n  end\n  return ct\nend", "    local seven = 0\n    for i = 1, n - 1\
    \ do\n        if i % 11 == 0 then\n            seven = seven + string.gsub(tostring(i),\
    \ \"7\", \"\")\n        elseif i % 13 == 0 then\n            seven = seven + string.gsub(tostring(i),\
    \ \"7\", \"\")\n        end\n    end\n    return seven\nend", "   local count\
    \ = 0\n   for i = 0, n-1 do\n      if (i % 11 == 0 or i % 13 == 0) and contains_digit(i,\
    \ 7) then\n         count = count + 1\n      end\n   end\n   return count\nend",
  "    local result = 0\n    local i = 1\n    while i < n do\n        if i % 11 ==\
    \ 0 or i % 13 == 0 then\n            result = result + count_seven(i)\n      \
    \  end\n        i = i + 1\n    end\n    return result\nend", "  local total =\
    \ 0\n  for i = 11, n-1 do\n    if (i % 11 == 0 or i % 13 == 0) and string.find(tostring(i),\
    \ \"7\") then\n      total = total + 1\n    end\n  end\n  return total\nend",
  "\tlocal count = 0\n\tlocal digit = 1\n\tfor x = 1, n do\n\t\tif x % 11 == 0 or\
    \ x % 13 == 0 then\n\t\t\twhile digit <= x do\n\t\t\t\tif digit % 10 == 7 then\n\
    \t\t\t\t\tcount = count + 1\n\t\t\t\tend\n\t\t\t\tdigit = digit * 10\n\t\t\tend\n\
    \t\t\tdigit = 1\n\t\tend\n\tend\n\treturn count\nend", "    -- Your code here\n\
    end", "    -- TODO\nend", "    local n7, n11, n13 = 0, 0, 0\n    for i = 1, n\
    \ - 1 do\n        if i % 11 == 0 or i % 13 == 0 then\n            n7 = n7 + get_count(i,\
    \ 7)\n        end\n    end\n    return n7\nend", "    local z = n - n % 11\n \
    \   local count = 0\n    while z >= 11 do\n        if z % 13 == 0 then\n     \
    \       count = count + 1\n        end\n        z = z - 11\n    end\n    return\
    \ count\nend", "    local count = 0\n    for i = 0, n do\n        if i % 13 ==\
    \ 0 or i % 11 == 0 then\n            local str = tostring(i)\n            for\
    \ j = 1, string.len(str) do\n                if string.sub(str, j, j) == \"7\"\
    \ then\n                    count = count + 1\n                end\n         \
    \   end\n        end\n    end\n    return count\nend", "    local count = 0\n\
    \    for i = 1, n do\n        if i % 11 == 0 or i % 13 == 0 then\n           \
    \ local str = tostring(i)\n            for char in str:gmatch\".\" do\n      \
    \          if char == '7' then\n                    count = count + 1\n      \
    \          end\n            end\n        end\n    end\n    return count\nend",
  "    local t = {}\n    for i = 1, math.floor(n/11) do\n        local j = i * 11\n\
    \        while j < n do\n            local s = tostring(j)\n            if s:find('7')\
    \ then\n                table.insert(t, j)\n            end\n            j = j\
    \ + 11\n        end\n    end\n    for i = 1, math.floor(n/13) do\n        local\
    \ j = i * 13\n        while j < n do\n            local s = tostring(j)\n    \
    \        if s:find('7') then\n                table.insert(t, j)\n           \
    \ end\n            j = j + 13\n        end\n    end\n    return #t\nend", "  \
    \  local total = 0\n    local times = 11", "  local sevens = 0\n  for i = 1, n\
    \ - 1 do\n    if (i % 11 == 0 or i % 13 == 0) and i % 10 == 7 then\n      sevens\
    \ = sevens + 1\n    end\n  end\n  return sevens\nend", "    local sum = 0\n  \
    \  for i = 7, n - 1 do\n        if (i % 11 == 0 or i % 13 == 0) and tostring(i):find('7')\
    \ then\n            sum = sum + 1\n        end\n    end\n    return sum\nend",
  "    local count = 0\n    for i = 1, n - 1 do\n        if i % 11 == 0 or i % 13\
    \ == 0 then\n            local curr = i\n            while curr > 0 do\n     \
    \           local digit = curr % 10\n                if digit == 7 then\n    \
    \                count = count + 1\n                end\n                curr\
    \ = math.floor(curr / 10)\n            end\n        end\n    end\n    return count\n\
    end", "    local num_sevens = 0\n    local quotient, remainder", "    local count\
    \ = 0\n    for i = 1, n - 1 do\n        if (i % 11 == 0 or i % 13 == 0) and tostring(i):find(\"\
    7\") then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  local result = 0\n  local mod11, mod13 = math.floor(n / 11), math.floor(n\
    \ / 13)\n  local num1, num2 = mod11, mod13\n  while true do\n    num1, num2 =\
    \ num1 - 1, num2 - 1\n    if num1 < 0 and num2 < 0 then\n      break\n    end\n\
    \    if num1 % 11 == 0 and num1 % 13 == 0 then\n      result = result + fizz_buzz_get_count(num1)\n\
    \    elseif num1 % 11 == 0 then\n      result = result + fizz_buzz_get_count(num1)\n\
    \    elseif num1 % 13 == 0 then\n      result = result + fizz_buzz_get_count(num1)\n\
    \    end\n    if num2 % 11 == 0 and num2 % 13 == 0 then\n      result = result\
    \ + fizz_buzz_get_count(num2)\n    elseif num2 % 11 == 0 then\n      result =\
    \ result + fizz_buzz_get_count(num2)\n    elseif num2 % 13 == 0 then\n      result\
    \ = result + fizz_buzz_get_count(num2)\n    end\n  end\n  return result\nend",
  "    local count = 0\n    for i = 0, n-1 do\n        if i % 11 == 0 or i % 13 ==\
    \ 0 then\n            count = count + count_digit(i, 7)\n        end\n    end\n\
    \    return count\nend", "    local function check_digit(n)\n        local d =\
    \ n % 10\n        return d == 7\n    end", "    local count = 0\n    for i = 1,\
    \ n do\n        if i % 11 == 0 or i % 13 == 0 then\n            for _, d in ipairs(tostring(i))\
    \ do\n                if d == '7' then\n                    count = count + 1\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  for i = 1, n - 1 do\n    if (i % 11 == 0 or i % 13\
    \ == 0) and get_digit(i, 1) == 7 then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "  -- Insert your code here\nend", "  local count = 0\n\
    \  for i = 1, n do\n    if (i % 11 == 0 or i % 13 == 0) and tostring(i):find(\"\
    7\") then\n      count = count + 1\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, n do\n    if i % 11 == 0 then\n      if string.find(i,\
    \ \"7\") then\n        count = count + 1\n      end\n    elseif i % 13 == 0 then\n\
    \      if string.find(i, \"7\") then\n        count = count + 1\n      end\n \
    \   end\n  end\n  return count\nend", "  local i = 0\n  local c = 0\n  while i\
    \ < n do\n    if (i % 11 == 0 or i % 13 == 0) and i % 10 == 7 then\n      c =\
    \ c + 1\n    end\n    i = i + 1\n  end\n  return c\nend", "    local count = 0\n\
    \    for i = 1, n - 1 do\n        if (i % 11 == 0 or i % 13 == 0) and string.find(tostring(i),\
    \ \"7\") then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "  local count = 0\n  for x = 1, n - 1 do\n    if (x % 11 == 0\
    \ or x % 13 == 0) and string.find(x, \"7\") then\n      count = count + 1\n  \
    \  end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, n do\n \
    \   if (i % 11 == 0 or i % 13 == 0) and i % 10 == 7 then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "  local string_num = \"\"\n  local\
    \ result = 0\n  for i = 1, n do\n    if i % 11 == 0 or i % 13 == 0 then\n    \
    \  string_num = tostring(i)\n      for j = 1, #string_num do\n        if string_num:sub(j,\
    \ j) == \"7\" then\n          result = result + 1\n        end\n      end\n  \
    \  end\n  end\n  return result\nend", "    local count = 0\n    for i = 0, n do\n\
    \        if i % 11 == 0 or i % 13 == 0 then\n            count = count + string.gsub(tostring(i),\
    \ '7', '')\n        end\n    end\n    return count\nend", "    if n < 0 then\n\
    \        return -1\n    end\n    local count = 0\n    for i = 1, n do\n      \
    \  if i % 11 == 0 or i % 13 == 0 then\n            for j = 1, #(tostring(i)) do\n\
    \                if string.sub(tostring(i), j, j) == \"7\" then\n            \
    \        count = count + 1\n                end\n            end\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for i = 1, n do\n\
    \        if i % 11 == 0 or i % 13 == 0 then\n            count = count + count_7s(i)\n\
    \        end\n    end\n    return count\nend", "  -- your code here\n  local count\
    \ = 0\n  for i = 1, n - 1 do\n    if (i % 11 == 0 or i % 13 == 0) and i % 10 ==\
    \ 7 then\n      count = count + 1\n    end\n  end\n  return count\nend", "   \
    \ return string.len(string.gsub(string.gsub(string.gsub(string.gsub(string.gsub(string.format(\"\
    %w\", n), \"7\", \"7 \"), \"11\", \"\"), \"13\", \"\"), \" \", \"\"), \" \", \"\
    \"))\nend", "    local x = 0\n    local y = 0\n    local z = 0\n    local w =\
    \ 0\n    local count = 0\n    local add = 1\n    local ans = ''\n    local i =\
    \ 1\n    while i <= n do\n        if i % 3 == 0 then\n            ans = ans ..\
    \ 'fizz'\n        end\n        if i % 5 == 0 then\n            ans = ans .. 'buzz'\n\
    \        end\n        if i % 11 == 0 then\n            count = count + 1\n   \
    \     end\n        if i % 13 == 0 then\n            count = count + 1\n      \
    \  end\n        if i % 11 == 0 and i % 13 == 0 then\n            count = count\
    \ - 1\n        end\n        if i % 3 == 0 or i % 5 == 0 then\n            io.write(ans\
    \ .. '\\n')\n            ans = ''\n        else\n            io.write(i .. '\\\
    n')\n        end\n        i = i + 1\n    end\n    return count\nend", "    if\
    \ n <= 0 then\n        return 0\n    end\n    return fizz_buzz(n - 1) + fizz_buzz(n\
    \ - 2) + 1\nend", "    local counter = 0\n    for i = 7, n - 1 do\n        if\
    \ (i % 11 == 0 or i % 13 == 0) and i % 10 == 7 then\n            counter = counter\
    \ + 1\n        end\n    end\n    return counter\nend", "   local function fb(i,\
    \ c)\n      if i < n then\n         if i % 11 == 0 or i % 13 == 0 then\n     \
    \       return fb(i + 1, c + count_7(i))\n         else\n            return fb(i\
    \ + 1, c)\n         end\n      else\n         return c\n      end\n   end\n  \
    \ return fb(0, 0)\nend", "  return 0\nend", "    local count = 0\n    for i =\
    \ 1, n - 1 do\n        if i % 11 == 0 or i % 13 == 0 then\n            local str\
    \ = tostring(i)\n            local j = 1\n            while j <= #str do\n   \
    \             if str:sub(j, j) == '7' then\n                    count = count\
    \ + 1\n                end\n                j = j + 1\n            end\n     \
    \   end\n    end\n    return count\nend", "\tlocal count = 0\n\tfor i = 1, n-1\
    \ do\n\t\tif(i % 11 == 0 or i % 13 == 0) then\n\t\t\tif string.find(i, '7') then\n\
    \t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend", " \
    \ -- TODO\nend", "    local counter = 0\n    local number_string\n    for i =\
    \ 1, n-1 do\n        number_string = tostring(i)\n        if i % 11 == 0 or i\
    \ % 13 == 0 then\n            for j = 1, string.len(number_string) do\n      \
    \          if number_string:sub(j, j) == \"7\" then\n                    counter\
    \ = counter + 1\n                end\n            end\n        end\n    end\n\
    \    return counter\nend", "  local divisibleBy_7 = 0\n  for i = 0, n do\n   \
    \ if i % 7 == 0 then\n      divisibleBy_7 = divisibleBy_7 + 1\n    end\n  end\n\
    \  return divisibleBy_7\nend", "    local count = 0\n    for i = 1, n do\n   \
    \     if (i % 11 == 0 or i % 13 == 0) and tostring(i):find(\"7\") then\n     \
    \       count = count + 1\n        end\n    end\n    return count\nend", "   \
    \ local count = 0\n    for i = 1, n - 1 do\n        if divisible_by(i, 11) or\
    \ divisible_by(i, 13) then\n            local i_str = tostring(i)\n          \
    \  for _,c in ipairs(i_str) do\n                if c == '7' then\n           \
    \         count = count + 1\n                end\n            end\n        end\n\
    \    end\n    return count\nend", "    local num = 0\n    local count = 0\n  \
    \  while num < n do\n        if num % 11 == 0 or num % 13 == 0 then\n        \
    \    if tostring(num):find(\"7\") then\n                count = count + 1\n  \
    \          end\n        end\n        num = num + 1\n    end\n    return count\n\
    end", "  local v = 0\n  local f, b = 0, 0\n  for i = 1, n do\n    if (i % 11 ==\
    \ 0) or (i % 13 == 0) then\n      f, b = 0, 0\n      for c in tostring(i):gmatch('.')\
    \ do\n        if c == '7' then\n          v = v + 1\n        end\n        if c\
    \ == '3' then\n          f = f + 1\n        end\n        if c == '5' then\n  \
    \        b = b + 1\n        end\n      end\n      if f > b then\n        v = v\
    \ + f\n      else\n        v = v + b\n      end\n    end\n  end\n  return v\n\
    end", "\tlocal nb7 = 0\n\tfor i = 1, n-1 do\n\t\tif (i % 11 == 0 or i % 13 ==\
    \ 0) and i % 7 == 0 then\n\t\t\tnb7 = nb7 + 1\n\t\tend\n\tend\n\treturn nb7\n\
    end", "\tlocal t = {}\n\tfor i = 1, n do\n\t\tt[i] = i\n\tend\n\tlocal c = 0\n\
    \tfor i = 1, n do\n\t\tif t[i] % 11 == 0 or t[i] % 13 == 0 then\n\t\t\tlocal s\
    \ = tostring(t[i])\n\t\t\tfor j = 1, #s do\n\t\t\t\tif s:sub(j, j) == '7' then\n\
    \t\t\t\t\tc = c + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn c\nend",
  "    local sum = 0\n    for i = 1, n do\n        if (i % 11 == 0 or i % 13 == 0)\
    \ and tostring(i):find(\"7\") then\n            sum = sum + 1\n        end\n \
    \   end\n    return sum\nend", "\tlocal n = n\n\tlocal count = 0\n\twhile n >=\
    \ 1 do\n\t\tif n % 11 == 0 or n % 13 == 0 then\n\t\t\tlocal str = tostring(n)\n\
    \t\t\tlocal i = 1\n\t\t\twhile str:sub(i, i) do\n\t\t\t\tif str:sub(i, i) == \"\
    7\" then\n\t\t\t\t\tcount = count + 1\n\t\t\t\tend\n\t\t\t\ti = i + 1\n\t\t\t\
    end\n\t\tend\n\t\tn = n - 1\n\tend\n\treturn count\nend", "   return 1 + fizz_buzz(n\
    \ - 1)\nend", "   local count = 0\n   for i = 1, n-1 do\n      if i % 11 == 0\
    \ or i % 13 == 0 then\n         while i > 0 do\n            if i % 10 == 7 then\n\
    \               count = count + 1\n            end\n            i = math.floor(i\
    \ / 10)\n         end\n      end\n   end\n   return count\nend", "\t-- TODO: Your\
    \ code here\nend", "\tlocal m, d = n - 1, 7\n\tlocal a, b = m // 11, m // 13\n\
    \treturn b - a + (a // d) - (b // d)\nend", "   local count = 0\n   for i = 1,\
    \ n-1 do\n      if i % 11 == 0 or i % 13 == 0 then\n         -- Convert integer\
    \ to string, then get counts\n         count = count + string.gsub(i, '7', '')\n\
    \      end\n   end\n   return count\nend", "    local count = 0\n    local first\
    \ = 0\n    local second = 0\n    while n > 0 do\n        local d = n % 10\n  \
    \      if d == 7 then\n            count = count + 1\n        end\n        n =\
    \ math.floor(n / 10)\n    end\n    return count\nend", "    local i = 0\n    local\
    \ s = 0\n    for a = 0, 99 do\n        for b = 0, 99 do\n            for c = 0,\
    \ 99 do\n                for d = 0, 99 do\n                    local x = 1111\
    \ * a + 1110 * b + 1100 * c + 1000 * d\n                    if x < n then\n  \
    \                      local xx = x\n                        while xx > 0 do\n\
    \                            if xx % 10 == 7 then\n                          \
    \      i = i + 1\n                            end\n                          \
    \  xx = math.floor(xx / 10)\n                        end\n                   \
    \     s = s + 1\n                    end\n                end\n            end\n\
    \        end\n    end\n    return i / s\nend", "    local count = 0\n    local\
    \ function helper(i)\n        local string = tostring(i)\n        local num =\
    \ tonumber(string)\n        if num == i then\n            if string:find(\"7\"\
    ) ~= nil then\n                count = count + 1\n            end\n        end\n\
    \    end\n    for i = 1, n-1 do\n        if i % 11 == 0 or i % 13 == 0 then\n\
    \            helper(i)\n        end\n    end\n    return count\nend", "\tlocal\
    \ count = 0\n\tfor i = 1, n do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\t\t\t\
    for d in tostring(i):gmatch('%d') do\n\t\t\t\tif d == '7' then\n\t\t\t\t\tcount\
    \ = count + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend", " \
    \  local total = 0\n   for i = 0, n do\n      if (i % 11 == 0 or i % 13 == 0)\
    \ and i % 7 == 0 then\n         total = total + 1\n      end\n   end\n   return\
    \ total\nend", "    local ret = 0\n    if n < 7 then\n        return ret\n   \
    \ end\n    local mid = math.floor(n / 10)\n    local begin = math.floor(mid /\
    \ 10) * 10\n    if mid % 11 == 0 or mid % 13 == 0 then\n        ret = 1\n    end\n\
    \    return ret + fizz_buzz(mid) + fizz_buzz(begin)\nend", "  local function f(m)\n\
    \    if m > n then\n      return 0\n    elseif m % 11 == 0 or m % 13 == 0 then\n\
    \      return count_digit(m, 7) + f(m + 1)\n    else\n      return f(m + 1)\n\
    \    end\n  end\n  return f(1)\nend", "  if n <= 0 then\n    return 0\n  end\n\
    \  local divisor = 11 * 13\n  local min = n\n  if n % divisor == 0 then\n    min\
    \ = min - divisor\n  elseif n % 11 == 0 then\n    min = min - 11\n  elseif n %\
    \ 13 == 0 then\n    min = min - 13\n  end\n  local n_elevens = math.floor(min\
    \ / 11)\n  local n_thirteens = math.floor(min / 13)\n  local n_divisors = math.floor(min\
    \ / divisor)\n  local new_ones = 0\n  local new_sevens = 0\n  if min % divisor\
    \ < 11 then\n    new_ones = 1\n  elseif min % divisor < 12 then\n    new_sevens\
    \ = 1\n  elseif min % divisor < 13 then\n    new_ones = 2\n  elseif min % divisor\
    \ < 22 then\n    new_sevens = 1\n  elseif min % divisor < 23 then\n    new_ones\
    \ = 3\n  elseif min % divisor < 33 then\n    new_sevens = 2\n  elseif min % divisor\
    \ < 34 then\n    new_ones = 4\n  elseif min % divisor < 44 then\n    new_sevens\
    \ = 3\n  elseif min % divisor < 45 then\n    new_ones = 5\n  elseif min % divisor\
    \ < 55 then\n    new_sevens = 4\n  elseif min % divisor < 56 then\n    new_ones\
    \ = 6\n  elseif min % divisor < 66 then\n    new_sevens = 5\n  elseif min % divisor\
    \ < 67 then\n    new_ones = 7\n  elseif min % divisor < 77 then\n    new_sevens\
    \ = 6\n  elseif min % divisor < 78 then\n    new_ones = 8\n  elseif min % divisor\
    \ < 88 then\n    new_sevens = 7\n  elseif min % divisor < 89 then\n    new_ones\
    \ = 9\n  elseif min % divisor < 99 then\n    new_sevens = 8\n  elseif", "    local\
    \ count = 0\n    for i = 1, n - 1 do\n        if i % 11 == 0 or i % 13 == 0 then\n\
    \            count = count + count_digit(i, 7)\n        end\n    end\n    return\
    \ count\nend", "    if n <= 0 then\n        return 0\n    end\n    return fizz_buzz(n-1)\
    \ + ((((n % 11) == 0) or ((n % 13) == 0)) and CountDigit7(n))\nend", "    -- Put\
    \ your code here\nend", "  local c = 0\n  for i = 1, n - 1 do\n    if math.fmod(i,\
    \ 11) == 0 or math.fmod(i, 13) == 0 then\n      local s = tostring(i)\n      for\
    \ j = 1, string.len(s) do\n        if string.sub(s, j, j) == \"7\" then\n    \
    \      c = c + 1\n        end\n      end\n    end\n  end\n  return c\nend", " \
    \   local sum = 0\n    for i = 1, n - 1 do\n        if ((i % 11 == 0) or (i %\
    \ 13 == 0)) and (i % 10 == 7) then\n            sum = sum + 1\n        end\n \
    \   end\n    return sum\nend", "\tif type(n) ~= \"number\" then return nil end\n\
    \tlocal c = 0\n\tfor i = 1, n - 1 do\n\t\tif ((i % 11 == 0) or (i % 13 == 0))\
    \ and (i % 10 == 7) then\n\t\t\tc = c + 1\n\t\t\ti = i - 1\n\t\tend\n\tend\n\t\
    return c\nend", "\tlocal total = 0\n\tfor i = 1, n do\n\t\tlocal fizz = (i % 11\
    \ == 0) or (i % 13 == 0)\n\t\tif fizz then\n\t\t\tfor c in tostring(i):gmatch(\"\
    .\") do\n\t\t\t\tif c == \"7\" then\n\t\t\t\t\ttotal = total + 1\n\t\t\t\tend\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn total\nend", "    local count = 0\n    for\
    \ i = 1, n do\n        if i % 11 == 0 or i % 13 == 0 then\n            count =\
    \ count + string.len(string.gsub(tostring(i), \"7\", \"\"))\n        end\n   \
    \ end\n    return count\nend", "  if n < 0 then\n    return fizz_buzz(-n)\n  end\n\
    \  if n < 7 then\n    return 0\n  end\n  local nstr = tostring(n)\n  local res\
    \ = 0\n  for i = 1, #nstr do\n    if nstr:sub(i, i) == '7' then\n      res = res\
    \ + 1\n    end\n  end\n  return res\nend", "  return 0\nend", "  local count =\
    \ 0\n  for i = 1, n do\n    if i % 11 == 0 or i % 13 == 0 then\n      local i_str\
    \ = tostring(i)\n      for c in i_str:gmatch('.') do\n        if c == '7' then\n\
    \          count = count + 1\n        end\n      end\n    end\n  end\n  return\
    \ count\nend", "    local count = 0\n    for i = 1, n - 1 do\n        if (i %\
    \ 11 == 0 or i % 13 == 0) and tostring(i):find(\"7\") then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "  local sum = 0\n\
    \  for i = 7, n-1 do\n    if i % 11 == 0 or i % 13 == 0 then\n      sum = sum\
    \ + num_of_digit(i, 7)\n    end\n  end\n  return sum\nend", "  -- guard clause\n\
    \  if n <= 0 then return 0 end", "\tlocal cnt = 0\n\tfor i = 1, n do\n\t\tif (i\
    \ % 11 == 0 or i % 13 == 0) and string.find(tostring(i), \"7\") then\n\t\t\tcnt\
    \ = cnt + 1\n\t\tend\n\tend\n\treturn cnt\nend", "    -- Implement me!\nend",
  "  local count = 0\n  local next_fizz = 12\n  local next_buzz = 14\n  local next_fizz_buzz\
    \ = 78\n  for i = 1, n - 1 do\n    if i == next_fizz then\n      next_fizz = next_fizz\
    \ + 11\n    elseif i == next_buzz then\n      next_buzz = next_buzz + 13\n   \
    \ elseif i == next_fizz_buzz then\n      next_fizz_buzz = next_fizz_buzz + 11\
    \ * 13\n    else\n      local num = i\n      while num > 0 do\n        if num\
    \ % 10 == 7 then\n          count = count + 1\n        end\n        num = num\
    \ // 10\n      end\n    end\n  end\n  return count\nend", "    local count = 0\n\
    \    for i = 1, n - 1 do\n        if (i % 11 == 0 or i % 13 == 0) and has_digit(i,\
    \ 7) then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  local total = 0\n  for i = 1, n - 1 do\n    if (i % 11 == 0 or i % 13\
    \ == 0) and string.find(tostring(i), \"7\") then\n      total = total + 1\n  \
    \  end\n  end\n  return total\nend", "    local cnt = 0\n    for i = 1, n do\n\
    \        if (i % 11 == 0 or i % 13 == 0) and i % 7 == 0 then\n            cnt\
    \ = cnt + 1\n        end\n    end\n    return cnt\nend", "    return 3\nend",
  "    local count = 0\n    local x = 0\n    while x < n do\n        if x % 11 ==\
    \ 0 or x % 13 == 0 then\n            local num = x\n            while num > 0\
    \ do\n                local digit = num % 10\n                if digit == 7 then\n\
    \                    count = count + 1\n                end\n                num\
    \ = math.floor(num / 10)\n            end\n        end\n        x = x + 1\n  \
    \  end\n    return count\nend", "    local cnt = 0\n    for i = 1, n - 1 do\n\
    \        if (i % 11 == 0 or i % 13 == 0) and num.get_digit(i, 10, 7) then\n  \
    \          cnt = cnt + 1\n        end\n    end\n    return cnt\nend", "  return\
    \ 0\nend", "  local result = 0\n  local factor = 1\n  while factor * 10 <= n do\n\
    \    result = result + (factor == 13 and 1 or 0)\n    factor = factor * 10\n \
    \ end\n  local factor = 1\n  while factor * 11 <= n do\n    local part = factor\
    \ * 11\n    while part <= n do\n      local digit = math.floor(part % 10)\n  \
    \    if digit == 7 then\n        result = result + 1\n      end\n      part =\
    \ part + factor\n    end\n    factor = factor * 10\n  end\n  return result\nend",
  "\tlocal m, c = 0, 0\n\tfor i = 1, n - 1 do\n\t\tm = i % 11 * i % 13\n\t\tif m ==\
    \ 0 then\n\t\t\tc = c + 1\n\t\tend\n\tend\n\treturn c\nend", "    local function\
    \ fizz_buzz_rec(n, sevens)\n        if n < 11 then\n            return sevens\n\
    \        elseif n % 11 == 0 or n % 13 == 0 then\n            return fizz_buzz_rec(n\
    \ // 10, sevens + (n % 10 == 7 and 1 or 0))\n        else\n            return\
    \ fizz_buzz_rec(n // 10, sevens)\n        end\n    end\n    return fizz_buzz_rec(n,\
    \ 0)\nend", "  assert(n > 0)\n  local count = 0\n  for i = 1, n do\n    if i %\
    \ 11 == 0 or i % 13 == 0 then\n      local str = tostring(i)\n      for j = 1,\
    \ #str do\n        if str:sub(j, j) == '7' then\n          count = count + 1\n\
    \        end\n      end\n    end\n  end\n  return count\nend", "    return -1\n\
    end", "  local sum = 0\n  for x = 1, n-1 do\n    if x % 11 == 0 or x % 13 == 0\
    \ then\n      sum = sum + count_7(x)\n    end\n  end\n  return sum\nend", "  \
    \ local c = 0\n   for i = 0, n do\n      if (i % 11 == 0 or i % 13 == 0) and i\
    \ % 7 == 0 then\n         c = c + 1\n      end\n   end\n   return c\nend", "\t\
    local count = 0\n\tfor i = 1, n-1 do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\
    \t\t\tlocal num = i\n\t\t\twhile num > 0 do\n\t\t\t\tif num % 10 == 7 then\n\t\
    \t\t\t\tcount = count + 1\n\t\t\t\tend\n\t\t\t\tnum = math.floor(num / 10)\n\t\
    \t\tend\n\t\tend\n\tend\n\treturn count\nend", "  if n < 1 then\n    return 0\n\
    \  end\n  if n % 11 == 0 or n % 13 == 0 then\n    return (n % 10 == 7 and 1 or\
    \ 0) + fizz_buzz(n - 1)\n  end\n  return fizz_buzz(n - 1)\nend", "    local i,\
    \ p1, p2, count = 1, true, true, 0\n    while i < n do\n        if p1 and p2 then\n\
    \            local t = tostring(i)\n            for j = 1, #t do\n           \
    \     if t:sub(j, j) == '7' then\n                    count = count + 1\n    \
    \            end\n            end\n        end\n        p1 = not p1\n        p2\
    \ = not p2\n        i = i + 11\n    end\n    return count\nend", "  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 or i % 13 == 0 then\n      count\
    \ = count + string.len(string.gsub(tostring(i), \"%7\", \"\"))\n    end\n  end\n\
    \  return count\nend", "    -- BEGIN SOLUTION --\n    local nb_7 = 0\n    -- END\
    \ SOLUTION --\n    return nb_7\nend", "\tlocal function count(x)\n\t\tlocal c\
    \ = 0\n\t\twhile (x > 0) do\n\t\t\tif (x % 10 == 7) then\n\t\t\t\tc = c + 1\n\t\
    \t\tend\n\t\t\tx = math.floor(x / 10)\n\t\tend\n\t\treturn c\n\tend\n\tlocal c\
    \ = 0\n\tfor i = 1, n - 1 do\n\t\tif (i % 11 == 0 or i % 13 == 0) then\n\t\t\t\
    c = c + count(i)\n\t\tend\n\tend\n\treturn c\nend", "\t-- TODO: Implement Me\n\
    \    local c = 0\n    local d = 0\n    for i = 1, n - 1 do\n        if i % 11\
    \ == 0 or i % 13 == 0 then\n            if i / 100 < 1 then\n                d\
    \ = i\n            else\n                d = i / 10\n            end\n       \
    \     for j = 1, d / 10 do\n                if d % 10 == 7 then\n            \
    \        c = c + 1\n                end\n                d = d / 10\n        \
    \    end\n        end\n    end\n    return c\nend", "  if n == 0 then return 0\
    \ end\n  local r = 0\n  if n % 11 == 0 or n % 13 == 0 then\n    r = fizz_buzz(n\
    \ - 1)\n    if n % 10 == 7 then\n      r = r + 1\n    end\n  else\n    r = fizz_buzz(n\
    \ - 1)\n  end\n  return r\nend", "  return 0\nend", "  local m = 0\n  for i =\
    \ 1, n - 1 do\n    if (i % 11 == 0 or i % 13 == 0) and string.find(tostring(i),\
    \ \"7\") then\n      m = m + 1\n    end\n  end\n  return m\nend", "    local count\
    \ = 0\n    for i = 1, n - 1 do\n        if (i % 11 == 0 or i % 13 == 0) and string.find(tostring(i),\
    \ \"7\") then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_74_total_match
language: lua
prompt: "-- Write a function that accepts two lists of strings and returns the list\
  \ that has \n-- total number of chars in the all strings of the list less than the\
  \ other list.\n-- if the two lists have the same number of chars, return the first\
  \ list.\n-- Examples\n-- total_match([], []) \u279E []\n-- total_match(['hi', 'admin'],\
  \ ['hI', 'Hi']) \u279E ['hI', 'Hi']\n-- total_match(['hi', 'admin'], ['hi', 'hi',\
  \ 'admin', 'project']) \u279E ['hi', 'admin']\n-- total_match(['hi', 'admin'], ['hI',\
  \ 'hi', 'hi']) \u279E ['hI', 'hi', 'hi']\n-- total_match(['4'], ['1', '2', '3',\
  \ '4', '5']) \u279E ['4']\nlocal function total_match(lst1, lst2)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n\
  \    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi',\
  \ 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'},\
  \ {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'},\
  \ {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'},\
  \ {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI',\
  \ 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'},\
  \ {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}),\
  \ {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local len1, len2 = 0, 0\n  for _, v in ipairs(lst1) do\n    len1\
    \ = len1 + string.len(v)\n  end\n  for _, v in ipairs(lst2) do\n    len2 = len2\
    \ + string.len(v)\n  end\n  if len1 < len2 then\n    return lst1\n  else\n   \
    \ return lst2\n  end\nend", "    local length1 = 0\n    local length2 = 0\n  \
    \  for _, v in ipairs(lst1) do\n        length1 = length1 + #v\n    end\n    for\
    \ _, v in ipairs(lst2) do\n        length2 = length2 + #v\n    end\n    if length1\
    \ < length2 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "    if #lst1 == 0 and #lst2 == 0 then return {} end\n    local sum1, sum2\
    \ = 0, 0\n    for _, v in ipairs(lst1) do sum1 = sum1 + #v end\n    for _, v in\
    \ ipairs(lst2) do sum2 = sum2 + #v end\n    if sum1 < sum2 then return lst1 end\n\
    \    if sum1 > sum2 then return lst2 end\n    return lst1\nend", "    local size1\
    \ = 0\n    local size2 = 0\n    for _, v in ipairs(lst1) do\n        size1 = size1\
    \ + #v\n    end\n    for _, v in ipairs(lst2) do\n        size2 = size2 + #v\n\
    \    end\n    if size1 <= size2 then\n        return lst1\n    else\n        return\
    \ lst2\n    end\nend", "    local l1, l2 = 0, 0\n    for i = 1, #lst1 do\n   \
    \     l1 = l1 + #lst1[i]\n    end\n    for i = 1, #lst2 do\n        l2 = l2 +\
    \ #lst2[i]\n    end\n    if l1 < l2 then\n        return lst1\n    else\n    \
    \    return lst2\n    end\nend", "\tlocal lst1strs = \"\"\n\tlocal lst2strs =\
    \ \"\"\n\tfor i = 1, #lst1 do\n\t\tlst1strs = lst1strs .. lst1[i]\n\tend\n\tfor\
    \ i = 1, #lst2 do\n\t\tlst2strs = lst2strs .. lst2[i]\n\tend\n\tif #lst1strs <\
    \ #lst2strs then\n\t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend", "   \
    \ local function count_chars(lst)\n        local sum = 0\n        for _, str in\
    \ ipairs(lst) do\n            sum = sum + #str\n        end\n        return sum\n\
    \    end\n    local num1, num2 = count_chars(lst1), count_chars(lst2)\n    if\
    \ num1 > num2 then\n        return lst2\n    elseif num1 < num2 then\n       \
    \ return lst1\n    else\n        return lst1\n    end\nend", "\t-- body\n\tlocal\
    \ s1, s2 = 0, 0\n\tfor i = 1, #lst1 do\n\t\ts1 = s1 + #lst1[i]\n\tend\n\tfor i\
    \ = 1, #lst2 do\n\t\ts2 = s2 + #lst2[i]\n\tend\n\tif s1 < s2 then\n\t\treturn\
    \ lst1\n\telseif s1 > s2 then\n\t\treturn lst2\n\telse\n\t\treturn lst1\n\tend\n\
    end", "  local count = 0\n  for i = 1, #lst1 do\n    count = count + #lst1[i]\n\
    \  end\n  local count2 = 0\n  for i = 1, #lst2 do\n    count2 = count2 + #lst2[i]\n\
    \  end\n  if count > count2 then\n    return lst2\n  elseif count < count2 then\n\
    \    return lst1\n  else\n    return lst1\n  end\nend", "  local totl = 0\n  for\
    \ i = 1, #lst1 do\n    totl = totl + #lst1[i]\n  end\n  local totl2 = 0\n  for\
    \ i = 1, #lst2 do\n    totl2 = totl2 + #lst2[i]\n  end\n  if totl < totl2 then\n\
    \    return lst1\n  else\n    return lst2\n  end\nend", "    local get_list =\
    \ lst1\n    local num1 = 0\n    local num2 = 0\n    for i = 1, #lst1 do\n    \
    \    num1 = num1 + #lst1[i]\n    end\n    for i = 1, #lst2 do\n        num2 =\
    \ num2 + #lst2[i]\n    end\n    if num1 > num2 then\n        get_list = lst2\n\
    \    end\n    return get_list\nend", "    return lst1\nend", "  local lst = {}\n\
    \  local sum = 0\n  local sum1 = 0\n  for i = 1, #lst1 do\n    for k = 1, string.len(lst1[i])\
    \ do\n      sum = sum + string.byte(lst1[i], k)\n    end\n  end\n  for i = 1,\
    \ #lst2 do\n    for k = 1, string.len(lst2[i]) do\n      sum1 = sum1 + string.byte(lst2[i],\
    \ k)\n    end\n  end\n  if sum == sum1 then\n    return lst1\n  elseif sum < sum1\
    \ then\n    return lst1\n  else\n    return lst2\n  end\nend\ntotal_match({'hi',\
    \ 'admin'}, {'hI', 'Hi'}) -- {'hI', 'Hi'}\ntotal_match({'hi', 'admin'}, {'hi',\
    \ 'hi', 'admin', 'project'}) -- {'hi', 'admin'}\ntotal_match({'hi', 'admin'},\
    \ {'hI', 'hi', 'hi'}) -- {'hI', 'hi', 'hi'}\ntotal_match({'4'}, {'1', '2', '3',\
    \ '4', '5'}) -- {'4'}", "    local cnt1, cnt2 = 0, 0\n    for _, v in ipairs(lst1)\
    \ do\n        cnt1 = cnt1 + #v\n    end\n    for _, v in ipairs(lst2) do\n   \
    \     cnt2 = cnt2 + #v\n    end\n    if cnt1 == cnt2 then\n        return lst1\n\
    \    elseif cnt1 < cnt2 then\n        return lst1\n    else\n        return lst2\n\
    \    end\nend", "    if #lst1 < #lst2 then\n        return lst1\n    elseif #lst1\
    \ > #lst2 then\n        return lst2\n    else\n        return lst1\n    end\n\
    end", "\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #lst1 do\n\t\tsum1 = sum1 + #lst1[i]\n\
    \tend\n\tfor i = 1, #lst2 do\n\t\tsum2 = sum2 + #lst2[i]\n\tend\n\tif sum1 < sum2\
    \ then\n\t\treturn lst1\n\telseif sum1 > sum2 then\n\t\treturn lst2\n\telse\n\t\
    \treturn lst1\n\tend\nend", "    lst1sum = 0\n    lst2sum = 0\n    for i, v in\
    \ ipairs(lst1) do\n        lst1sum = lst1sum + string.len(v)\n    end\n    for\
    \ i, v in ipairs(lst2) do\n        lst2sum = lst2sum + string.len(v)\n    end\n\
    \    if lst1sum == lst2sum then\n        return lst1\n    elseif lst1sum < lst2sum\
    \ then\n        return lst1\n    else\n        return lst2\n    end\nend", "\t\
    local count1, count2 = 0, 0\n\tfor _, v in ipairs(lst1) do\n\t\tcount1 = count1\
    \ + #v\n\tend\n\tfor _, v in ipairs(lst2) do\n\t\tcount2 = count2 + #v\n\tend\n\
    \tif count1 < count2 then\n\t\treturn lst1\n\telseif count1 > count2 then\n\t\t\
    return lst2\n\telse\n\t\treturn lst1\n\tend\nend", "  local count1 = 0\n  local\
    \ count2 = 0\n  for i = 1, #lst1 do\n    count1 = count1 + #lst1[i]\n  end\n \
    \ for i = 1, #lst2 do\n    count2 = count2 + #lst2[i]\n  end\n  if count1 < count2\
    \ then\n    return lst1\n  elseif count1 > count2 then\n    return lst2\n  else\n\
    \    return lst1\n  end\nend", "\tlocal cnt1, cnt2 = 0, 0\n\tfor i, v in ipairs(lst1)\
    \ do\n\t\tcnt1 = cnt1 + #v\n\tend\n\tfor i, v in ipairs(lst2) do\n\t\tcnt2 = cnt2\
    \ + #v\n\tend\n\tif cnt1 == cnt2 then\n\t\treturn lst1\n\telseif cnt1 < cnt2 then\n\
    \t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend", "    local total1 = 0\n\
    \    local total2 = 0\n    for _, elem in ipairs(lst1) do\n        total1 = total1\
    \ + #elem\n    end\n    for _, elem in ipairs(lst2) do\n        total2 = total2\
    \ + #elem\n    end\n    if total1 <= total2 then\n        return lst1\n    else\n\
    \        return lst2\n    end\nend", "  local len1, len2 = 0, 0\n  for _, v in\
    \ ipairs(lst1) do\n    len1 = len1 + #v\n  end\n  for _, v in ipairs(lst2) do\n\
    \    len2 = len2 + #v\n  end\n  if len1 < len2 then\n    return lst1\n  elseif\
    \ len1 > len2 then\n    return lst2\n  else\n    return lst1\n  end\nend", "\t\
    local total_of_lst1 = 0\n\tlocal total_of_lst2 = 0\n\tfor i = 1, #lst1 do\n\t\t\
    total_of_lst1 = total_of_lst1 + #lst1[i]\n\tend\n\tfor i = 1, #lst2 do\n\t\ttotal_of_lst2\
    \ = total_of_lst2 + #lst2[i]\n\tend\n\tif total_of_lst1 > total_of_lst2 then\n\
    \t\treturn lst2\n\telse\n\t\treturn lst1\n\tend\nend", "\tif #lst1 == 0 then return\
    \ lst1 end\n\tlocal len1, len2 = 0, 0\n\tfor _, str in ipairs(lst1) do len1 =\
    \ len1 + #str end\n\tfor _, str in ipairs(lst2) do len2 = len2 + #str end\n\t\
    return len1 < len2 and lst2 or lst1\nend", "    if #table.concat(lst1) > #table.concat(lst2)\
    \ then\n        return lst2\n    else\n        return lst1\n    end\nend", " \
    \ local total1 = 0\n  local total2 = 0\n  for _, word in ipairs(lst1) do\n   \
    \ total1 = total1 + #word\n  end\n  for _, word in ipairs(lst2) do\n    total2\
    \ = total2 + #word\n  end\n  if total1 < total2 then\n    return lst1\n  else\n\
    \    return lst2\n  end\nend", "\tlocal sz1, sz2 = #table.concat(lst1), #table.concat(lst2)\n\
    \treturn sz1 < sz2 and lst1 or sz1 > sz2 and lst2 or lst1\nend", "  local l1,\
    \ l2 = 0, 0\n  for _, v in ipairs(lst1) do l1 = l1 + #v end\n  for _, v in ipairs(lst2)\
    \ do l2 = l2 + #v end\n  return l1 < l2 and lst2 or lst1\nend", "\treturn (#table.concat(lst1)<=#table.concat(lst2))\
    \ and lst2 or lst1\nend", "    local count1 = 0\n    local count2 = 0\n    for\
    \ i = 1, #lst1 do\n        count1 = count1 + #lst1[i]\n    end\n    for i = 1,\
    \ #lst2 do\n        count2 = count2 + #lst2[i]\n    end\n    if count1 == count2\
    \ then\n        return lst1\n    elseif count1 < count2 then\n        return lst1\n\
    \    else\n        return lst2\n    end\nend\nprint(total_match({'hi', 'admin'},\
    \ {'hI', 'Hi'}))\nprint(total_match({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}))\n\
    print(total_match({'hi', 'admin'}, {'hI', 'hi', 'hi'}))\nprint(total_match({'4'},\
    \ {'1', '2', '3', '4', '5'}))", "    local count1 = 0\n    local count2 = 0\n\
    \    for _,v in ipairs(lst1) do\n        count1 = count1 + #v\n    end\n    for\
    \ _,v in ipairs(lst2) do\n        count2 = count2 + #v\n    end\n    if count1\
    \ < count2 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #lst1 do\n\t\tsum1 = sum1 + #lst1[i]\n\
    \tend\n\tfor i = 1, #lst2 do\n\t\tsum2 = sum2 + #lst2[i]\n\tend\n\treturn sum1\
    \ < sum2 and lst1 or sum1 > sum2 and lst2 or lst1\nend", "    if #lst1 == 0 then\
    \ return lst1 end\n    if #lst2 == 0 then return lst2 end\n    local chars1 =\
    \ 0\n    local chars2 = 0\n    for i = 1, #lst1 do\n        chars1 = chars1 +\
    \ #lst1[i]\n    end\n    for i = 1, #lst2 do\n        chars2 = chars2 + #lst2[i]\n\
    \    end\n    if chars1 > chars2 then\n        return lst2\n    else\n       \
    \ return lst1\n    end\nend", "  local sum1, sum2 = 0, 0\n  for i = 1, #lst1 do\n\
    \    sum1 = sum1 + #lst1[i]\n  end\n  for i = 1, #lst2 do\n    sum2 = sum2 + #lst2[i]\n\
    \  end\n  if sum1 > sum2 then\n    return lst2\n  else\n    return lst1\n  end\n\
    end", "  local tot1, tot2 = 0, 0\n  for _, s in ipairs(lst1) do tot1 = tot1 +\
    \ #s end\n  for _, s in ipairs(lst2) do tot2 = tot2 + #s end\n  return tot1 <\
    \ tot2 and lst2 or lst1\nend", "    local n1, n2 = 0, 0\n    for i, v in ipairs(lst1)\
    \ do\n        n1 = n1 + #v\n    end\n    for i, v in ipairs(lst2) do\n       \
    \ n2 = n2 + #v\n    end\n    if n1 <= n2 then\n        return lst1\n    else\n\
    \        return lst2\n    end\nend", "    local sum1 = 0\n    local sum2 = 0\n\
    \    for i = 1, #lst1 do\n        sum1 = sum1 + #lst1[i]\n    end\n    for i =\
    \ 1, #lst2 do\n        sum2 = sum2 + #lst2[i]\n    end\n    if sum1 < sum2 then\n\
    \        return lst1\n    elseif sum1 > sum2 then\n        return lst2\n    else\n\
    \        return lst1\n    end\nend", "\tlocal total_lst1 = 0\n\tlocal total_lst2\
    \ = 0\n\tfor _, v in ipairs(lst1) do\n\t\ttotal_lst1 = total_lst1 + #v\n\tend\n\
    \tfor _, v in ipairs(lst2) do\n\t\ttotal_lst2 = total_lst2 + #v\n\tend\n\tif total_lst1\
    \ > total_lst2 then\n\t\treturn lst2\n\telse\n\t\treturn lst1\n\tend\nend", " \
    \   local function total_chars(list)\n        local result = 0\n        for i\
    \ = 1, #list do\n            result = result + #list[i]\n        end\n       \
    \ return result\n    end\n    if total_chars(lst1) < total_chars(lst2) then\n\
    \        return lst1\n    else\n        return lst2\n    end\nend\nprint(table.concat(total_match({\
    \ \"1\", \"2\", \"3\", \"4\", \"5\" }, { \"4\" }), \", \"))\nprint(table.concat(total_match({\
    \ \"hi\", \"admin\" }, { \"hI\", \"hi\", \"hi\" }), \", \"))\nprint(table.concat(total_match({\
    \ \"hi\", \"admin\" }, { \"hI\", \"Hi\" }), \", \"))\nprint(table.concat(total_match({\
    \ \"hi\", \"admin\" }, { \"hi\", \"hi\", \"admin\", \"project\" }), \", \"))",
  "\tlocal c1, c2 = 0, 0\n\tfor i, v in ipairs(lst1) do\n\t\tc1 = c1 + #v\n\tend\n\
    \tfor i, v in ipairs(lst2) do\n\t\tc2 = c2 + #v\n\tend\n\tif c1 < c2 then\n\t\t\
    return lst1\n\telseif c1 > c2 then\n\t\treturn lst2\n\telse\n\t\treturn lst1\n\
    \tend\nend", "  local total1 = 0\n  local total2 = 0\n  for i, v in ipairs(lst1)\
    \ do\n    total1 = total1 + #v\n  end\n  for i, v in ipairs(lst2) do\n    total2\
    \ = total2 + #v\n  end\n  if total1 > total2 then\n    return lst2\n  else\n \
    \   return lst1\n  end\nend", "    local sum1 = sum_chars(lst1)\n    local sum2\
    \ = sum_chars(lst2)\n    if sum1 > sum2 then\n        return lst2\n    elseif\
    \ sum1 < sum2 then\n        return lst1\n    else\n        return lst1\n    end\n\
    end", "  local len1, len2 = 0, 0\n  for _,v in ipairs(lst1) do len1 = len1 + #v\
    \ end\n  for _,v in ipairs(lst2) do len2 = len2 + #v end\n  return len1 < len2\
    \ and lst2 or lst1\nend", "  local chars_lst1 = 0\n  local chars_lst2 = 0\n  for\
    \ k, v in pairs(lst1) do\n    chars_lst1 = chars_lst1 + #v\n  end\n  for k, v\
    \ in pairs(lst2) do\n    chars_lst2 = chars_lst2 + #v\n  end\n  if chars_lst1\
    \ == chars_lst2 then\n    return lst1\n  elseif chars_lst1 < chars_lst2 then\n\
    \    return lst1\n  elseif chars_lst1 > chars_lst2 then\n    return lst2\n  end\n\
    end", "    --code here\nend", "\tlocal _lst1, _lst2 = {}, {}\n\tlocal _n1, _n2\
    \ = 0, 0\n\tlocal _len1, _len2 = #lst1, #lst2\n\tlocal _ct1, _ct2 = {}, {}\n\t\
    for _, str in ipairs(lst1) do\n\t\t_ct1[str] = (_ct1[str] or 0) + 1\n\t\t_lst1[#_lst1\
    \ + 1] = str\n\t\t_n1 = _n1 + #str\n\tend\n\tfor _, str in ipairs(lst2) do\n\t\
    \t_ct2[str] = (_ct2[str] or 0) + 1\n\t\t_lst2[#_lst2 + 1] = str\n\t\t_n2 = _n2\
    \ + #str\n\tend\n\tif _n1 == _n2 then\n\t\treturn _lst1\n\telseif _n1 < _n2 then\n\
    \t\treturn _lst1\n\telse\n\t\treturn _lst2\n\tend\nend", "  local lst_n_chars\
    \ = {}\n  local lst_n_chars_compare = {}\n  for _, v in ipairs(lst1) do\n    lst_n_chars[#lst_n_chars\
    \ + 1] = #v\n  end\n  for _, v in ipairs(lst2) do\n    lst_n_chars_compare[#lst_n_chars_compare\
    \ + 1] = #v\n  end\n  if sum_values(lst_n_chars) < sum_values(lst_n_chars_compare)\
    \ then\n    return lst1\n  elseif sum_values(lst_n_chars) > sum_values(lst_n_chars_compare)\
    \ then\n    return lst2\n  else\n    return lst1\n  end\nend", "    local count1\
    \ = 0\n    local count2 = 0\n    for i = 1, #lst1 do\n        count1 = count1\
    \ + #lst1[i]\n    end\n    for i = 1, #lst2 do\n        count2 = count2 + #lst2[i]\n\
    \    end\n    if count1 < count2 then\n        return lst1\n    elseif count1\
    \ > count2 then\n        return lst2\n    elseif count1 == count2 then\n     \
    \   return lst1\n    end\nend\ntotal_match({}, {})\ntotal_match({'hi', 'admin'},\
    \ {'hI', 'Hi'})\ntotal_match({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'})\n\
    total_match({'hi', 'admin'}, {'hI', 'hi', 'hi'})\ntotal_match({'4'}, {'1', '2',\
    \ '3', '4', '5'})", "  local c1, c2 = 0, 0\n  for _, v in ipairs(lst1) do\n  \
    \  c1 = c1 + #v\n  end\n  for _, v in ipairs(lst2) do\n    c2 = c2 + #v\n  end\n\
    \  if c1 < c2 then\n    return lst1\n  else\n    return lst2\n  end\nend", " \
    \ -- body\n  local sum1, sum2 = 0, 0\n  for _,s in ipairs(lst1) do\n    sum1 =\
    \ sum1 + #s\n  end\n  for _,s in ipairs(lst2) do\n    sum2 = sum2 + #s\n  end\n\
    \  if sum1 < sum2 then\n    return lst1\n  else\n    return lst2\n  end\nend",
  "\tlocal cnt1, cnt2 = 0, 0\n\tfor _, str in ipairs(lst1) do\n\t\tcnt1 = cnt1 + #str\n\
    \tend\n\tfor _, str in ipairs(lst2) do\n\t\tcnt2 = cnt2 + #str\n\tend\n\tif cnt1\
    \ < cnt2 then\n\t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend", "    local\
    \ t1, t2 = 0, 0\n    for _, v in ipairs(lst1) do\n        t1 = t1 + #v\n    end\n\
    \    for _, v in ipairs(lst2) do\n        t2 = t2 + #v\n    end\n    if t1 < t2\
    \ then\n        return lst1\n    else\n        return lst2\n    end\nend", " \
    \   local n1, n2 = 0, 0\n    for _, v in ipairs(lst1) do\n        n1 = n1 + #v\n\
    \    end\n    for _, v in ipairs(lst2) do\n        n2 = n2 + #v\n    end\n   \
    \ if n1 < n2 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "    local lst1_count = 0\n    local lst2_count = 0\n    for _,v in ipairs(lst1)\
    \ do\n        lst1_count = lst1_count + #v\n    end\n    for _,v in ipairs(lst2)\
    \ do\n        lst2_count = lst2_count + #v\n    end\n    if lst1_count > lst2_count\
    \ then\n        return lst2\n    else\n        return lst1\n    end\nend", " \
    \   local function total(lst)\n        local sum = 0\n        for i = 1, #lst\
    \ do\n            sum = sum + #lst[i]\n        end\n        return sum\n    end\n\
    \    if total(lst1) == total(lst2) then\n        return lst1\n    elseif total(lst1)\
    \ < total(lst2) then\n        return lst1\n    else\n        return lst2\n   \
    \ end\nend", "  local sum1, sum2 = 0, 0\n  for i, v in ipairs(lst1) do\n    sum1\
    \ = sum1 + #v\n  end\n  for i, v in ipairs(lst2) do\n    sum2 = sum2 + #v\n  end\n\
    \  if sum1 <= sum2 then\n    return lst1\n  else\n    return lst2\n  end\nend",
  "    local total = 0\n    for _, s in ipairs(lst1) do\n        total = total + #s\n\
    \    end\n    local total2 = 0\n    for _, s in ipairs(lst2) do\n        total2\
    \ = total2 + #s\n    end\n    if total < total2 then\n        return lst1\n  \
    \  else\n        return lst2\n    end\nend", "    local count1 = 0\n    local\
    \ count2 = 0\n    for i, v in ipairs(lst1) do\n        count1 = count1 + string.len(v)\n\
    \    end\n    for i, v in ipairs(lst2) do\n        count2 = count2 + string.len(v)\n\
    \    end\n    if count1 == count2 then\n        return lst1\n    elseif count1\
    \ < count2 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "  local total_chars_lst1 = 0\n  local total_chars_lst2 = 0\n  for i = 1,\
    \ #lst1 do\n    total_chars_lst1 = total_chars_lst1 + #lst1[i]\n  end\n  for i\
    \ = 1, #lst2 do\n    total_chars_lst2 = total_chars_lst2 + #lst2[i]\n  end\n \
    \ if total_chars_lst1 > total_chars_lst2 then\n    return lst2\n  else\n    return\
    \ lst1\n  end\nend", "    local len1 = lst1:map(function(x) return #x end):reduce(function(a,\
    \ b) return a + b end)\n    local len2 = lst2:map(function(x) return #x end):reduce(function(a,\
    \ b) return a + b end)\n    if len1 == len2 then\n        return lst1\n    elseif\
    \ len1 < len2 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "    local s1, s2 = 0, 0\n    for i = 1, #lst1 do\n        s1 = s1 + #lst1[i]\n\
    \    end\n    for i = 1, #lst2 do\n        s2 = s2 + #lst2[i]\n    end\n    if\
    \ s1 < s2 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "  local num1 = #table.concat(lst1)\n  local num2 = #table.concat(lst2)\n\
    \  if num1 == num2 then\n    return lst1\n  elseif num1 < num2 then\n    return\
    \ lst1\n  else\n    return lst2\n  end\nend", "    -- code here\nend", "    local\
    \ length_one = 0\n    local length_two = 0\n    for k, v in pairs(lst1) do\n \
    \       length_one = length_one + #v\n    end\n    for k, v in pairs(lst2) do\n\
    \        length_two = length_two + #v\n    end\n    if length_one < length_two\
    \ then\n        return lst1\n    elseif length_one > length_two then\n       \
    \ return lst2\n    else\n        return lst1\n    end\nend", "  local chars1 =\
    \ 0\n  local chars2 = 0\n  for _,v in ipairs(lst1) do\n    chars1 = chars1 + #v\n\
    \  end\n  for _,v in ipairs(lst2) do\n    chars2 = chars2 + #v\n  end\n  if chars1\
    \ <= chars2 then\n    return lst1\n  else\n    return lst2\n  end\nend", "  local\
    \ l1 = 0\n  local l2 = 0\n  for i = 1, #lst1 do\n    l1 = l1 + #lst1[i]\n  end\n\
    \  for i = 1, #lst2 do\n    l2 = l2 + #lst2[i]\n  end\n  if l1 > l2 then\n   \
    \ return lst2\n  else\n    return lst1\n  end\nend", "    local len1 = string.len(table.concat(lst1,\
    \ ''))\n    local len2 = string.len(table.concat(lst2, ''))\n    if len1 < len2\
    \ then\n        return lst1\n    elseif len1 > len2 then\n        return lst2\n\
    \    else\n        return lst1\n    end\nend", "\tlocal sum1, sum2 = 0, 0\n\t\
    for _, word in ipairs(lst1) do\n\t\tsum1 = sum1 + #word\n\tend\n\tfor _, word\
    \ in ipairs(lst2) do\n\t\tsum2 = sum2 + #word\n\tend\n\tif sum1 <= sum2 then\n\
    \t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend", "\tlocal len1, len2 = 0,\
    \ 0\n\tfor i = 1, #lst1 do\n\t\tlen1 = len1 + #lst1[i]\n\tend\n\tfor i = 1, #lst2\
    \ do\n\t\tlen2 = len2 + #lst2[i]\n\tend\n\tif len1 < len2 then\n\t\treturn lst1\n\
    \telse\n\t\treturn lst2\n\tend\nend", "    if #lst1 == 0 then return lst1 end\n\
    \    if #lst2 == 0 then return lst2 end\n    local len1 = getlen(lst1)\n    local\
    \ len2 = getlen(lst2)\n    if len1 == len2 then return lst1 end\n    if len1 <\
    \ len2 then return lst1 end\n    return lst2\nend", "    local chars = 0\n   \
    \ for _,str in ipairs(lst1) do\n        chars = chars + #str\n    end\n    local\
    \ chars2 = 0\n    for _,str in ipairs(lst2) do\n        chars2 = chars2 + #str\n\
    \    end\n    if chars <= chars2 then\n        return lst1\n    else\n       \
    \ return lst2\n    end\nend", "  local sum1, sum2 = 0, 0\n  for i = 1, #lst1 do\n\
    \    sum1 = sum1 + #lst1[i]\n  end\n  for i = 1, #lst2 do\n    sum2 = sum2 + #lst2[i]\n\
    \  end\n  if sum1 < sum2 then\n    return lst1\n  else\n    return lst2\n  end\n\
    end", "  local str1, str2 = table.concat(lst1), table.concat(lst2)\n  return #str1\
    \ < #str2 and lst1 or #str1 > #str2 and lst2 or lst1\nend", "  local lst1_total\
    \ = 0\n  local lst2_total = 0\n  for i = 1, #lst1 do\n    lst1_total = lst1_total\
    \ + string.len(lst1[i])\n  end\n  for i = 1, #lst2 do\n    lst2_total = lst2_total\
    \ + string.len(lst2[i])\n  end\n  if lst1_total < lst2_total then\n    return\
    \ lst1\n  else\n    return lst2\n  end\nend", "\tlocal lst1len, lst2len = 0, 0\n\
    \tfor i = 1, #lst1 do\n\t\tlst1len = lst1len + #lst1[i]\n\tend\n\tfor i = 1, #lst2\
    \ do\n\t\tlst2len = lst2len + #lst2[i]\n\tend\n\treturn lst1len < lst2len and\
    \ lst1 or lst2\nend", "    local total1 = 0\n    local total2 = 0\n    for k,\
    \ v in pairs(lst1) do\n        total1 = total1 + #v\n    end\n    for k, v in\
    \ pairs(lst2) do\n        total2 = total2 + #v\n    end\n    if total1 > total2\
    \ then\n        return lst2\n    else\n        return lst1\n    end\nend", "\t\
    local len1, len2 = 0, 0\n\tfor _, v in ipairs(lst1) do\n\t\tlen1 = len1 + #v\n\
    \tend\n\tfor _, v in ipairs(lst2) do\n\t\tlen2 = len2 + #v\n\tend\n\treturn len1\
    \ < len2 and lst1 or len1 > len2 and lst2 or lst1\nend", "  local len1, len2 =\
    \ 0, 0\n  for _, s in ipairs(lst1) do\n    len1 = len1 + #s\n  end\n  for _, s\
    \ in ipairs(lst2) do\n    len2 = len2 + #s\n  end\n  if len1 < len2 then\n   \
    \ return lst1\n  elseif len2 < len1 then\n    return lst2\n  else\n    return\
    \ lst1\n  end\nend", "\tlocal l1, l2 = 0, 0\n\tfor i = 1, #lst1 do\n\t\tl1 = l1\
    \ + #lst1[i]\n\tend\n\tfor i = 1, #lst2 do\n\t\tl2 = l2 + #lst2[i]\n\tend\n\t\
    if l1 < l2 then\n\t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend", "    local\
    \ len1 = #lst1\n    local len2 = #lst2\n    local str1 = table.concat(lst1)\n\
    \    local str2 = table.concat(lst2)\n    if len1 == len2 then\n        return\
    \ lst1\n    elseif len1 < len2 then\n        return lst1\n    elseif len1 > len2\
    \ then\n        return lst2\n    end\nend", "\tlocal function total_char_count(lst)\n\
    \t\tlocal count = 0\n\t\tfor i = 1, #lst do\n\t\t\tcount = count + #lst[i]\n\t\
    \tend\n\t\treturn count\n\tend\n\tif total_char_count(lst1) < total_char_count(lst2)\
    \ then\n\t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend", "    local chars1\
    \ = 0\n    local chars2 = 0\n    for i, v in ipairs(lst1) do\n        chars1 =\
    \ chars1 + #v\n    end\n    for i, v in ipairs(lst2) do\n        chars2 = chars2\
    \ + #v\n    end\n    if chars1 < chars2 then\n        return lst1\n    elseif\
    \ chars2 < chars1 then\n        return lst2\n    else\n        return lst1\n \
    \   end\nend", "\tif #lst1 == 0 and #lst2 == 0 then\n\t\treturn lst1\n\telseif\
    \ #lst1 < #lst2 then\n\t\treturn lst1\n\telseif #lst1 > #lst2 then\n\t\treturn\
    \ lst2\n\telseif #lst1 == #lst2 then\n\t\treturn lst1\n\tend\nend", "  local res1,\
    \ res2 = 0, 0\n  for i, v in ipairs(lst1) do\n    res1 = res1 + #v\n  end\n  for\
    \ i, v in ipairs(lst2) do\n    res2 = res2 + #v\n  end\n  if res1 <= res2 then\n\
    \    return lst1\n  else\n    return lst2\n  end\nend", "  if #lst1 == 0 and #lst2\
    \ == 0 then\n    return lst1\n  end\n  local sum = 0\n  for i = 1, #lst1 do\n\
    \    sum = sum + #lst1[i]\n  end\n  local sum2 = 0\n  for i = 1, #lst2 do\n  \
    \  sum2 = sum2 + #lst2[i]\n  end\n  if sum < sum2 then\n    return lst1\n  elseif\
    \ sum > sum2 then\n    return lst2\n  elseif sum == sum2 then\n    return lst1\n\
    \  end\nend", "  -- code goes here\n  local result = {}\n  local tmp = 0\n  for\
    \ i = 1, #lst1 do\n    tmp = tmp + #lst1[i]\n  end\n  for i = 1, #lst2 do\n  \
    \  tmp = tmp - #lst2[i]\n  end\n  if tmp < 0 then\n    result = lst1\n  elseif\
    \ tmp > 0 then\n    result = lst2\n  else\n    result = lst1\n  end\n  return\
    \ result\nend\nprint(total_match(['hi', 'admin'], ['hI', 'Hi']))", "    -- local\
    \ count1 = 0\n    -- local count2 = 0\n    -- for i, v in ipairs(lst1) do\n  \
    \  --     count1 = count1 + #v\n    -- end\n    -- for i, v in ipairs(lst2) do\n\
    \    --     count2 = count2 + #v\n    -- end\n    -- if count1 < count2 then\n\
    \    --     return lst1\n    -- else\n    --     return lst2\n    -- end\n   \
    \ local r1 = 0\n    local r2 = 0\n    for i, v in ipairs(lst1) do\n        r1\
    \ = r1 + #v\n    end\n    for i, v in ipairs(lst2) do\n        r2 = r2 + #v\n\
    \    end\n    if r1 < r2 then\n        return lst1\n    else\n        return lst2\n\
    \    end\nend", "  if #lst1 == 0 then return lst1 end\n  if #lst2 == 0 then return\
    \ lst2 end\n  local total_lst1 = 0\n  local total_lst2 = 0\n  for i, v in ipairs(lst1)\
    \ do\n    total_lst1 = total_lst1 + #v\n  end\n  for i, v in ipairs(lst2) do\n\
    \    total_lst2 = total_lst2 + #v\n  end\n  if total_lst1 < total_lst2 then\n\
    \    return lst1\n  else\n    return lst2\n  end\nend", "    local x = 0\n   \
    \ local y = 0\n    for i, v in ipairs(lst1) do\n        x = x + string.len(v)\n\
    \    end\n    for i, v in ipairs(lst2) do\n        y = y + string.len(v)\n   \
    \ end\n    if x == y then\n        return lst1\n    elseif x < y then\n      \
    \  return lst1\n    else\n        return lst2\n    end\nend", "    local t1, t2\
    \ = 0, 0\n    for i = 1, #lst1 do\n        t1 = t1 + #lst1[i]\n    end\n    for\
    \ i = 1, #lst2 do\n        t2 = t2 + #lst2[i]\n    end\n    if t1 < t2 then\n\
    \        return lst1\n    else\n        return lst2\n    end\nend", "  local length_of_lst1\
    \ = 0\n  local length_of_lst2 = 0\n  for i,v in ipairs(lst1) do\n    length_of_lst1\
    \ = length_of_lst1 + #v\n  end\n  for i,v in ipairs(lst2) do\n    length_of_lst2\
    \ = length_of_lst2 + #v\n  end\n  if length_of_lst1 < length_of_lst2 then\n  \
    \  return lst1\n  elseif length_of_lst1 > length_of_lst2 then\n    return lst2\n\
    \  elseif length_of_lst1 == length_of_lst2 then\n    return lst1\n  end\nend",
  "    local sum1 = 0\n    local sum2 = 0\n    for _,v in ipairs(lst1) do\n      \
    \  sum1 = sum1 + #v\n    end\n    for _,v in ipairs(lst2) do\n        sum2 = sum2\
    \ + #v\n    end\n    if sum1 < sum2 then\n        return lst1\n    else\n    \
    \    return lst2\n    end\nend", "  local str1 = table.concat(lst1)\n  local str2\
    \ = table.concat(lst2)\n  if #str1 == #str2 then\n    return lst1\n  elseif #str1\
    \ < #str2 then\n    return lst1\n  elseif #str1 > #str2 then\n    return lst2\n\
    \  end\nend", "  local len1, len2 = 0, 0\n  for _, s in ipairs(lst1) do\n    len1\
    \ = len1 + #s\n  end\n  for _, s in ipairs(lst2) do\n    len2 = len2 + #s\n  end\n\
    \  if len1 < len2 then\n    return lst1\n  elseif len2 < len1 then\n    return\
    \ lst2\n  else\n    return lst1\n  end\nend", "  local count1 = 0\n  local count2\
    \ = 0\n  for _, v in ipairs(lst1) do\n    count1 = count1 + #v\n  end\n  for _,\
    \ v in ipairs(lst2) do\n    count2 = count2 + #v\n  end\n  if count1 > count2\
    \ then\n    return lst2\n  else\n    return lst1\n  end\nend\ntotal_match({'hi',\
    \ 'admin'}, {'hI', 'Hi'})", "\tlocal lst1Total = 0\n\tlocal lst2Total = 0\n\t\
    for _, char in ipairs(lst1) do\n\t\tlst1Total = lst1Total + #char\n\tend\n\tfor\
    \ _, char in ipairs(lst2) do\n\t\tlst2Total = lst2Total + #char\n\tend\n\tif lst1Total\
    \ <= lst2Total then\n\t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend", " \
    \ local lst1_count = 0\n  local lst2_count = 0\n  for _,i in ipairs(lst1) do\n\
    \    lst1_count = lst1_count + #i\n  end\n  for _,i in ipairs(lst2) do\n    lst2_count\
    \ = lst2_count + #i\n  end\n  if lst1_count > lst2_count then\n    return lst2\n\
    \  else\n    return lst1\n  end\nend", "\tlocal function get_size(lst)\n\t\tlocal\
    \ size = 0\n\t\tfor _,v in ipairs(lst) do\n\t\t\tsize = size + #v\n\t\tend\n\t\
    \treturn size\n\tend\n\tlocal s1, s2 = get_size(lst1), get_size(lst2)\n\tif s1\
    \ < s2 then\n\t\treturn lst1\n\telseif s2 < s1 then\n\t\treturn lst2\n\telse\n\
    \t\treturn lst1\n\tend\nend", "  local function str_len(acc, val)\n    return\
    \ acc + #val\n  end\n  local len1 = table.reduce(lst1, str_len, 0)\n  local len2\
    \ = table.reduce(lst2, str_len, 0)\n  if len1 < len2 then\n    return lst1\n \
    \ elseif len2 < len1 then\n    return lst2\n  else\n    return lst1\n  end\nend",
  "    local function f(s)\n        local sz = 0\n        for k in string.gmatch(s,\
    \ \"%S\") do\n            sz = sz + 1\n        end\n        return sz\n    end\n\
    \    local sz1, sz2 = 0, 0\n    for _, v in ipairs(lst1) do\n        sz1 = sz1\
    \ + f(v)\n    end\n    for _, v in ipairs(lst2) do\n        sz2 = sz2 + f(v)\n\
    \    end\n    if sz1 == sz2 then\n        return lst1\n    elseif sz1 < sz2 then\n\
    \        return lst1\n    else\n        return lst2\n    end\nend", "    local\
    \ sum1 = 0\n    local sum2 = 0\n    for i = 1, #lst1 do\n        sum1 = sum1 +\
    \ #lst1[i]\n    end\n    for i = 1, #lst2 do\n        sum2 = sum2 + #lst2[i]\n\
    \    end\n    if sum1 > sum2 then\n        return lst2\n    else\n        return\
    \ lst1\n    end\nend\nprint(total_match({'hi', 'admin'}, {'hI', 'Hi'})) -- \u279E\
    \ ['hI', 'Hi']\nprint(total_match({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}))\
    \ -- \u279E ['hi', 'admin']\nprint(total_match({'hi', 'admin'}, {'hI', 'hi', 'hi'}))\
    \ -- \u279E ['hI', 'hi', 'hi']\nprint(total_match({'4'}, {'1', '2', '3', '4',\
    \ '5'})) -- \u279E ['4']", "    local len1 = 0\n    local len2 = 0\n    for i\
    \ = 1, #lst1 do\n        len1 = len1 + #lst1[i]\n    end\n    for i = 1, #lst2\
    \ do\n        len2 = len2 + #lst2[i]\n    end\n    if len1 > len2 then\n     \
    \   return lst2\n    else\n        return lst1\n    end\nend", "\tlocal l1, l2\
    \ = 0, 0\n\tfor _, v in pairs(lst1) do\n\t\tl1 = l1 + #v\n\tend\n\tfor _, v in\
    \ pairs(lst2) do\n\t\tl2 = l2 + #v\n\tend\n\tif l1 < l2 then\n\t\treturn lst1\n\
    \telseif l2 < l1 then\n\t\treturn lst2\n\telse\n\t\treturn lst1\n\tend\nend",
  "    local cnt1, cnt2 = 0, 0\n    for _, v in ipairs(lst1) do\n        cnt1 = cnt1\
    \ + #v\n    end\n    for _, v in ipairs(lst2) do\n        cnt2 = cnt2 + #v\n \
    \   end\n    if cnt1 <= cnt2 then\n        return lst1\n    else\n        return\
    \ lst2\n    end\nend", "\tlocal cnt1, cnt2 = 0, 0\n\tfor i = 1, #lst1 do\n\t\t\
    cnt1 = cnt1 + #lst1[i]\n\tend\n\tfor i = 1, #lst2 do\n\t\tcnt2 = cnt2 + #lst2[i]\n\
    \tend\n\tif cnt1 == cnt2 then\n\t\treturn lst1\n\telseif cnt1 < cnt2 then\n\t\t\
    return lst1\n\telse\n\t\treturn lst2\n\tend\nend", "  -- iterate over lists counting\
    \ the chars in each\n  local count1 = 0\n  local count2 = 0\n  for i = 1, #lst1\
    \ do\n    count1 = count1 + #lst1[i]\n  end\n  for i = 1, #lst2 do\n    count2\
    \ = count2 + #lst2[i]\n  end\n  -- return the list with the smaller sum\n  if\
    \ count1 < count2 then\n    return lst1\n  else\n    return lst2\n  end\nend\n\
    print(total_match({}, {}))\nprint(total_match({'hi', 'admin'}, {'hI', 'Hi'}))\n\
    print(total_match({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}))\nprint(total_match({'hi',\
    \ 'admin'}, {'hI', 'hi', 'hi'}))\nprint(total_match({'4'}, {'1', '2', '3', '4',\
    \ '5'}))", "  return #table.concat(lst1) < #table.concat(lst2) and lst2 or lst1\n\
    end", "  local str1, str2 = \"\", \"\"\n  for _,v in ipairs(lst1) do str1 = str1\
    \ .. v end\n  for _,v in ipairs(lst2) do str2 = str2 .. v end\n  return (#str1\
    \ <= #str2) and lst1 or lst2\nend", "    local total1 = 0\n    local total2 =\
    \ 0\n    for _,v in ipairs(lst1) do\n        total1 = total1 + #v\n    end\n \
    \   for _,v in ipairs(lst2) do\n        total2 = total2 + #v\n    end\n    if\
    \ total1 < total2 then\n        return lst1\n    else\n        return lst2\n \
    \   end\nend", "    local function sum_chars(lst)\n        local function sum_len(acc,\
    \ item)\n            return acc + #item\n        end\n        return List.fold(sum_len,\
    \ 0, lst)\n    end\n    local sum1 = sum_chars(lst1)\n    local sum2 = sum_chars(lst2)\n\
    \    if sum1 < sum2 then\n        return lst1\n    elseif sum1 > sum2 then\n \
    \       return lst2\n    else\n        return lst1\n    end\nend", "    local\
    \ total_chars_in_lst1 = 0\n    local total_chars_in_lst2 = 0\n    for _,v in ipairs(lst1)\
    \ do\n        total_chars_in_lst1 = total_chars_in_lst1 + #v\n    end\n    for\
    \ _,v in ipairs(lst2) do\n        total_chars_in_lst2 = total_chars_in_lst2 +\
    \ #v\n    end\n    if total_chars_in_lst1 == total_chars_in_lst2 then\n      \
    \  return lst1\n    elseif total_chars_in_lst1 < total_chars_in_lst2 then\n  \
    \      return lst1\n    else\n        return lst2\n    end\nend", "\tlocal count1,\
    \ count2 = 0, 0\n\tfor i = 1, #lst1 do\n\t\tcount1 = count1 + #lst1[i]\n\tend\n\
    \tfor i = 1, #lst2 do\n\t\tcount2 = count2 + #lst2[i]\n\tend\n\tif count1 == count2\
    \ then\n\t\treturn lst1\n\telseif count1 < count2 then\n\t\treturn lst1\n\telse\n\
    \t\treturn lst2\n\tend\nend", "    -- code\nend", "    -- body\n    local count1\
    \ = 0\n    local count2 = 0\n    local result = {}\n    for k, v in pairs(lst1)\
    \ do\n        count1 = count1 + #v\n    end\n    for k, v in pairs(lst2) do\n\
    \        count2 = count2 + #v\n    end\n    if count1 == count2 then\n       \
    \ return lst1\n    elseif count1 < count2 then\n        return lst1\n    else\n\
    \        return lst2\n    end\nend\nprint(total_match({'hi', 'admin'}, {'hI',\
    \ 'Hi'}))", "  local count1 = 0\n  local count2 = 0\n  for i = 1, #lst1 do\n \
    \   count1 = count1 + #lst1[i]\n  end\n  for i = 1, #lst2 do\n    count2 = count2\
    \ + #lst2[i]\n  end\n  if count1 > count2 then\n    return lst2\n  else\n    return\
    \ lst1\n  end\nend", "  local total_len_lst1 = 0\n  local total_len_lst2 = 0\n\
    \  for i, v in ipairs(lst1) do\n    total_len_lst1 = total_len_lst1 + #v\n  end\n\
    \  for i, v in ipairs(lst2) do\n    total_len_lst2 = total_len_lst2 + #v\n  end\n\
    \  if total_len_lst1 < total_len_lst2 then\n    return lst1\n  else\n    return\
    \ lst2\n  end\nend", "  -- CODE HERE\nend", "\tlocal sum = 0\n\tfor _,v in ipairs(lst1)\
    \ do\n\t\tsum = sum + #v\n\tend\n\tlocal newSum = 0\n\tfor _,v in ipairs(lst2)\
    \ do\n\t\tnewSum = newSum + #v\n\tend\n\tif sum < newSum then\n\t\treturn lst1\n\
    \telseif sum > newSum then\n\t\treturn lst2\n\telseif sum == newSum then\n\t\t\
    return lst1\n\tend\nend", "    local len1 = #lst1\n    local len2 = #lst2\n  \
    \  local sum1 = 0\n    local sum2 = 0\n    for i=1,len1 do\n        sum1 = sum1\
    \ + string.len(lst1[i])\n    end\n    for i=1,len2 do\n        sum2 = sum2 + string.len(lst2[i])\n\
    \    end\n    if sum1 < sum2 then\n        return lst1\n    elseif sum1 > sum2\
    \ then\n        return lst2\n    else\n        return lst1\n    end\nend", " \
    \   -- code here\nend", "\tlocal n1, n2 = #lst1, #lst2\n\tfor i=1, n1 do n1 =\
    \ n1 + #lst1[i] end\n\tfor i=1, n2 do n2 = n2 + #lst2[i] end\n\treturn n1 < n2\
    \ and lst1 or n1 > n2 and lst2 or lst1\nend", "  local res\n  local total_count_lst1\
    \ = 0\n  local total_count_lst2 = 0\n  for i = 1, #lst1 do\n    total_count_lst1\
    \ = total_count_lst1 + #lst1[i]\n  end\n  for i = 1, #lst2 do\n    total_count_lst2\
    \ = total_count_lst2 + #lst2[i]\n  end\n  if total_count_lst1 < total_count_lst2\
    \ then\n    res = lst1\n  elseif total_count_lst1 > total_count_lst2 then\n  \
    \  res = lst2\n  else\n    res = lst1\n  end\n  return res\nend", "\tlocal lst1_count\
    \ = 0\n\tlocal lst2_count = 0\n\tfor k, v in pairs(lst1) do\n\t\tlst1_count =\
    \ lst1_count + #v\n\tend\n\tfor k, v in pairs(lst2) do\n\t\tlst2_count = lst2_count\
    \ + #v\n\tend\n\tif lst1_count < lst2_count then\n\t\treturn lst1\n\telseif lst1_count\
    \ > lst2_count then\n\t\treturn lst2\n\telseif lst1_count == lst2_count then\n\
    \t\treturn lst1\n\tend\nend", "    local sum1 = 0\n    local sum2 = 0\n    for\
    \ _,v in ipairs(lst1) do\n        sum1 = sum1 + #v\n    end\n    for _,v in ipairs(lst2)\
    \ do\n        sum2 = sum2 + #v\n    end\n    if sum1 == sum2 then\n        return\
    \ lst1\n    elseif sum1 < sum2 then\n        return lst1\n    else\n        return\
    \ lst2\n    end\nend", "  -- code here\nend", "  local len1, len2 = 0, 0\n  for\
    \ i = 1, #lst1 do\n    len1 = len1 + #lst1[i]\n  end\n  for i = 1, #lst2 do\n\
    \    len2 = len2 + #lst2[i]\n  end\n  if len1 < len2 then\n    return lst1\n \
    \ else\n    return lst2\n  end\nend", "  local lst = {}\n  local ch1 = 0\n  local\
    \ ch2 = 0\n  for i = 1, #lst1 do\n    ch1 = ch1 + #lst1[i]\n  end\n  for i = 1,\
    \ #lst2 do\n    ch2 = ch2 + #lst2[i]\n  end\n  if ch1 < ch2 then\n    lst = lst1\n\
    \  elseif ch1 > ch2 then\n    lst = lst2\n  elseif ch1 == ch2 then\n    lst =\
    \ lst1\n  end\n  return lst\nend", "\tif #lst1 == 0 then return {} end\n\tlocal\
    \ sum, count = 0, 0\n\tfor _, v in ipairs(lst1) do sum = sum + #v end\n\tfor _,\
    \ v in ipairs(lst2) do count = count + #v end\n\treturn sum >= count and lst1\
    \ or lst2\nend", "  local total1 = 0\n  local total2 = 0\n  for i, v in ipairs(lst1)\
    \ do\n    total1 = total1 + string.len(v)\n  end\n  for i, v in ipairs(lst2) do\n\
    \    total2 = total2 + string.len(v)\n  end\n  if total1 > total2 then\n    return\
    \ lst2\n  else\n    return lst1\n  end\nend", "\tlocal total1, total2 = 0, 0\n\
    \tfor i, v in ipairs(lst1) do\n\t\ttotal1 = total1 + #v\n\tend\n\tfor i, v in\
    \ ipairs(lst2) do\n\t\ttotal2 = total2 + #v\n\tend\n\treturn total1 < total2 and\
    \ lst1 or total1 > total2 and lst2 or lst1\nend", "\tlocal count1, count2 = 0,\
    \ 0\n\tfor i = 1, #lst1 do\n\t\tcount1 = count1 + #lst1[i]\n\tend\n\tfor i = 1,\
    \ #lst2 do\n\t\tcount2 = count2 + #lst2[i]\n\tend\n\tif count1 > count2 then\n\
    \t\treturn lst2\n\telse\n\t\treturn lst1\n\tend\nend", "  local total1 = 0\n \
    \ local total2 = 0\n  for i,v in ipairs(lst1) do\n    total1 = total1 + string.len(v)\n\
    \  end\n  for i,v in ipairs(lst2) do\n    total2 = total2 + string.len(v)\n  end\n\
    \  if total1 < total2 then\n    return lst1\n  else\n    return lst2\n  end\n\
    end", "\t-- body\n\tlocal str1, str2 = table.concat(lst1), table.concat(lst2)\n\
    \tlocal count1, count2 = 0, 0\n\tfor i = 1, #str1 do\n\t\tcount1 = count1 + 1\n\
    \tend\n\tfor i = 1, #str2 do\n\t\tcount2 = count2 + 1\n\tend\n\tif count1 < count2\
    \ then\n\t\treturn lst1\n\telseif count1 > count2 then\n\t\treturn lst2\n\telse\n\
    \t\treturn lst1\n\tend\nend", "\tlocal lst1Len = 0\n\tlocal lst2Len = 0\n\tfor\
    \ _, s in ipairs(lst1) do\n\t\tlst1Len = lst1Len + string.len(s)\n\tend\n\tfor\
    \ _, s in ipairs(lst2) do\n\t\tlst2Len = lst2Len + string.len(s)\n\tend\n\treturn\
    \ lst1Len <= lst2Len and lst1 or lst2\nend", "    local sum1 = 0\n    local sum2\
    \ = 0\n    for i,v in ipairs(lst1) do\n        sum1 = sum1 + #v\n    end\n   \
    \ for i,v in ipairs(lst2) do\n        sum2 = sum2 + #v\n    end\n    if sum1 >\
    \ sum2 then\n        return lst2\n    else\n        return lst1\n    end\nend",
  "  local len1, len2 = 0, 0\n  for i = 1, #lst1 do\n    len1 = len1 + #lst1[i]\n\
    \  end\n  for i = 1, #lst2 do\n    len2 = len2 + #lst2[i]\n  end\n  if len1 ==\
    \ len2 then\n    return lst1\n  elseif len1 < len2 then\n    return lst1\n  else\n\
    \    return lst2\n  end\nend", "  return #lst1 < #lst2 and lst2 or lst1\nend",
  "  local chars1 = 0\n  local chars2 = 0\n  for i, v in ipairs(lst1) do\n    chars1\
    \ = chars1 + #v\n  end\n  for i, v in ipairs(lst2) do\n    chars2 = chars2 + #v\n\
    \  end\n  if chars1 < chars2 then\n    return lst1\n  elseif chars2 < chars1 then\n\
    \    return lst2\n  else\n    return lst1\n  end\nend", "    local total1 = 0\n\
    \    local total2 = 0\n    for k, v in pairs(lst1) do\n        total1 = total1\
    \ + #v\n    end\n    for k, v in pairs(lst2) do\n        total2 = total2 + #v\n\
    \    end\n    if total1 > total2 then\n        return lst2\n    else\n       \
    \ return lst1\n    end\nend", "  local sum1, sum2 = 0, 0\n  for _, v in ipairs(lst1)\
    \ do\n    sum1 = sum1 + #v\n  end\n  for _, v in ipairs(lst2) do\n    sum2 = sum2\
    \ + #v\n  end\n  if sum1 > sum2 then\n    return lst2\n  else\n    return lst1\n\
    \  end\nend", "    local sum = 0\n    for i = 1, #lst1 do\n        for j = 1,\
    \ #lst1[i] do\n            sum = sum + 1\n        end\n    end\n    local sum2\
    \ = 0\n    for i = 1, #lst2 do\n        for j = 1, #lst2[i] do\n            sum2\
    \ = sum2 + 1\n        end\n    end\n    if sum2 < sum then\n        return lst2\n\
    \    else\n        return lst1\n    end\nend\nprint(total_match({'4'}, {'1', '2',\
    \ '3', '4', '5'}))", "  local count1 = 0\n  local count2 = 0\n  for i = 1, #lst1\
    \ do\n    count1 = count1 + #lst1[i]\n  end\n  for i = 1, #lst2 do\n    count2\
    \ = count2 + #lst2[i]\n  end\n  if count1 == count2 then\n    return lst1\n  elseif\
    \ count1 < count2 then\n    return lst1\n  elseif count1 > count2 then\n    return\
    \ lst2\n  end\nend", "    local total1 = 0\n    local total2 = 0\n    for i, str\
    \ in ipairs(lst1) do\n        total1 = total1 + #str\n    end\n    for i, str\
    \ in ipairs(lst2) do\n        total2 = total2 + #str\n    end\n    if total1 <\
    \ total2 then\n        return lst1\n    else\n        return lst2\n    end\nend",
  "\tlocal total1, total2 = 0, 0\n\tfor i = 1, #lst1 do\n\t\ttotal1 = total1 + #lst1[i]\n\
    \tend\n\tfor i = 1, #lst2 do\n\t\ttotal2 = total2 + #lst2[i]\n\tend\n\tif total1\
    \ < total2 then\n\t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend", "  local\
    \ len1, len2 = 0, 0\n  for i = 1, #lst1 do\n    len1 = len1 + #lst1[i]\n  end\n\
    \  for i = 1, #lst2 do\n    len2 = len2 + #lst2[i]\n  end\n  if len1 > len2 then\n\
    \    return lst2\n  else\n    return lst1\n  end\nend", "    local lst1_chars,\
    \ lst2_chars = 0, 0\n    for i = 1, #lst1 do\n        lst1_chars = lst1_chars\
    \ + #lst1[i]\n    end\n    for i = 1, #lst2 do\n        lst2_chars = lst2_chars\
    \ + #lst2[i]\n    end\n    if lst1_chars < lst2_chars then\n        return lst1\n\
    \    elseif lst1_chars > lst2_chars then\n        return lst2\n    else\n    \
    \    return lst1\n    end\nend", "    local lst1_len = 0\n    local lst2_len =\
    \ 0\n    for i,v in ipairs(lst1) do\n        lst1_len = lst1_len + #v\n    end\n\
    \    for i,v in ipairs(lst2) do\n        lst2_len = lst2_len + #v\n    end\n \
    \   if lst1_len < lst2_len then\n        return lst1\n    elseif lst1_len > lst2_len\
    \ then\n        return lst2\n    else\n        return lst1\n    end\nend", " \
    \   local lst1_length = 0\n    local lst2_length = 0\n    for _,v in ipairs(lst1)\
    \ do\n        lst1_length = lst1_length + #v\n    end\n    for _,v in ipairs(lst2)\
    \ do\n        lst2_length = lst2_length + #v\n    end\n    if lst1_length == lst2_length\
    \ then\n        return lst1\n    elseif lst1_length < lst2_length then\n     \
    \   return lst1\n    else\n        return lst2\n    end\nend", "    local chars1\
    \ = 0\n    local chars2 = 0\n    for i = 1, #lst1 do\n        chars1 = chars1\
    \ + #lst1[i]\n    end\n    for i = 1, #lst2 do\n        chars2 = chars2 + #lst2[i]\n\
    \    end\n    if chars1 == chars2 then\n        return lst1\n    elseif chars1\
    \ < chars2 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "    local sum1 = 0\n    local sum2 = 0\n    for i = 1, #lst1 do\n     \
    \   sum1 = sum1 + #lst1[i]\n    end\n    for i = 1, #lst2 do\n        sum2 = sum2\
    \ + #lst2[i]\n    end\n    if sum1 == sum2 then\n        return lst1\n    elseif\
    \ sum1 < sum2 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "    local len1 = 0\n    local len2 = 0\n    for i = 1, #lst1 do\n     \
    \   len1 = len1 + #lst1[i]\n    end\n    for i = 1, #lst2 do\n        len2 = len2\
    \ + #lst2[i]\n    end\n    if len1 < len2 then\n        return lst1\n    else\n\
    \        return lst2\n    end\nend", "    local count1 = 0\n    local count2 =\
    \ 0\n    for i,v in ipairs(lst1) do\n        count1 = count1 + #v\n    end\n \
    \   for i,v in ipairs(lst2) do\n        count2 = count2 + #v\n    end\n    if\
    \ count1 == count2 then\n        return lst1\n    elseif count1 < count2 then\n\
    \        return lst1\n    else\n        return lst2\n    end\nend", "    local\
    \ function total_match_word(word)\n        local count = 0\n        for _, c in\
    \ ipairs(word:lower():gmatch('.')) do\n            count = count + 1\n       \
    \ end\n        return count\n    end\n    local count1 = 0\n    for _, word in\
    \ ipairs(lst1) do\n        count1 = count1 + total_match_word(word)\n    end\n\
    \    local count2 = 0\n    for _, word in ipairs(lst2) do\n        count2 = count2\
    \ + total_match_word(word)\n    end\n    if count1 < count2 then\n        return\
    \ lst1\n    else\n        return lst2\n    end\nend", "\tlocal function count_chars(lst)\n\
    \t\tlocal cnt = 0\n\t\tfor _, v in ipairs(lst) do\n\t\t\tcnt = cnt + #v\n\t\t\
    end\n\t\treturn cnt\n\tend\n\tif count_chars(lst1) < count_chars(lst2) then\n\t\
    \treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend", "    local tbl = {};\n  \
    \  local count_lst1 = 0;\n    local count_lst2 = 0;\n    for i = 1, #lst1 do\n\
    \        count_lst1 = count_lst1 + string.len(lst1[i]);\n    end\n    for i =\
    \ 1, #lst2 do\n        count_lst2 = count_lst2 + string.len(lst2[i]);\n    end\n\
    \    if count_lst1 < count_lst2 then\n        tbl = lst1;\n    elseif count_lst1\
    \ > count_lst2 then\n        tbl = lst2;\n    elseif count_lst1 == count_lst2\
    \ then\n        tbl = lst1;\n    end\n    return tbl;\nend", "    local sum1 =\
    \ 0\n    local sum2 = 0\n    for _, v in ipairs(lst1) do\n        sum1 = sum1\
    \ + #v\n    end\n    for _, v in ipairs(lst2) do\n        sum2 = sum2 + #v\n \
    \   end\n    if sum1 < sum2 then\n        return lst1\n    else\n        return\
    \ lst2\n    end\nend", "    local len1 = 0\n    local len2 = 0\n    for i, v in\
    \ ipairs(lst1) do\n        len1 = len1 + #v\n    end\n    for i, v in ipairs(lst2)\
    \ do\n        len2 = len2 + #v\n    end\n    if len1 < len2 then\n        return\
    \ lst1\n    else\n        return lst2\n    end\nend", "    local function helper(lst)\n\
    \        local total = 0\n        for i = 1, #lst do\n            total = total\
    \ + #lst[i]\n        end\n        return total\n    end\n    local total1 = helper(lst1)\n\
    \    local total2 = helper(lst2)\n    if total1 == total2 then\n        return\
    \ lst1\n    elseif total1 < total2 then\n        return lst1\n    elseif total1\
    \ > total2 then\n        return lst2\n    end\nend", "    local sum1 = 0\n   \
    \ local sum2 = 0\n    for i = 1, #lst1 do\n        sum1 = sum1 + #lst1[i]\n  \
    \  end\n    for i = 1, #lst2 do\n        sum2 = sum2 + #lst2[i]\n    end\n   \
    \ if sum1 == sum2 then\n        return lst1\n    elseif sum1 < sum2 then\n   \
    \     return lst1\n    else\n        return lst2\n    end\nend", "\t-- body\n\t\
    local l1 = 0\n\tlocal l2 = 0\n\tfor i = 1, #lst1 do\n\t\tl1 = l1 + #lst1[i]\n\t\
    end\n\tfor i = 1, #lst2 do\n\t\tl2 = l2 + #lst2[i]\n\tend\n\tif l1 < l2 then\n\
    \t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend", "  local l1 = {}\n  local\
    \ l2 = {}\n  for i = 1, #lst1 do\n    l1[i] = #lst1[i]\n  end\n  for i = 1, #lst2\
    \ do\n    l2[i] = #lst2[i]\n  end\n  local sum1 = 0\n  local sum2 = 0\n  for i\
    \ = 1, #l1 do\n    sum1 = sum1 + l1[i]\n  end\n  for i = 1, #l2 do\n    sum2 =\
    \ sum2 + l2[i]\n  end\n  if sum1 == sum2 then\n    return lst1\n  elseif sum1\
    \ < sum2 then\n    return lst1\n  else\n    return lst2\n  end\nend", "    local\
    \ l1 = 0\n    local l2 = 0\n    for _, v in ipairs(lst1) do\n        l1 = l1 +\
    \ #v\n    end\n    for _, v in ipairs(lst2) do\n        l2 = l2 + #v\n    end\n\
    \    if l1 == l2 then\n        return lst1\n    elseif l1 < l2 then\n        return\
    \ lst1\n    else\n        return lst2\n    end\nend", "  local count1 = 0\n  local\
    \ count2 = 0\n  for i = 1, #lst1 do\n    count1 = count1 + #lst1[i]\n  end\n \
    \ for i = 1, #lst2 do\n    count2 = count2 + #lst2[i]\n  end\n  if count1 > count2\
    \ then\n    return lst2\n  else\n    return lst1\n  end\nend", "    local total1\
    \ = 0\n    local total2 = 0\n    for _, v in ipairs(lst1) do\n        total1 =\
    \ total1 + #v\n    end\n    for _, v in ipairs(lst2) do\n        total2 = total2\
    \ + #v\n    end\n    if total1 == total2 then\n        return lst1\n    elseif\
    \ total1 < total2 then\n        return lst1\n    else\n        return lst2\n \
    \   end\nend", "\tlocal function total(lst)\n\t\tlocal total = 0\n\t\tfor i, v\
    \ in ipairs(lst) do\n\t\t\ttotal = total + #v\n\t\tend\n\t\treturn total\n\tend\n\
    \treturn total(lst1) < total(lst2) and lst2 or lst1\nend", "\t\n\tlocal count1\
    \ = 0\n\tlocal count2 = 0\n\tlocal lst1Total = 0\n\tlocal lst2Total = 0\n\tlocal\
    \ countFirst = 0\n\tlocal countSecond = 0\n\t\n\twhile count1 < #lst1 do\n\t\t\
    lst1Total = lst1Total + #lst1[count1]\n\t\tcount1 = count1 + 1\n\tend\n\t\n\t\
    while count2 < #lst2 do\n\t\tlst2Total = lst2Total + #lst2[count2]\n\t\tcount2\
    \ = count2 + 1\n\tend\n\t\n\tif lst1Total < lst2Total then\n\t\treturn lst1\n\t\
    elseif lst1Total > lst2Total then\n\t\treturn lst2\n\telseif lst1Total == lst2Total\
    \ then\n\t\treturn lst1\n\tend\nend", "  local len1, len2 = 0, 0\n  for _, str\
    \ in ipairs(lst1) do\n    len1 = len1 + #str\n  end\n  for _, str in ipairs(lst2)\
    \ do\n    len2 = len2 + #str\n  end\n  if len1 == len2 then\n    return lst1\n\
    \  elseif len1 < len2 then\n    return lst1\n  else\n    return lst2\n  end\n\
    end", "  local t1 = 0\n  local t2 = 0\n  for i = 1, #lst1 do\n    t1 = t1 + #lst1[i]\n\
    \  end\n  for i = 1, #lst2 do\n    t2 = t2 + #lst2[i]\n  end\n  if t1 < t2 then\n\
    \    return lst1\n  else\n    return lst2\n  end\nend", "    local total1 = 0\n\
    \    local total2 = 0\n    for i = 1, #lst1 do\n        total1 = total1 + string.len(lst1[i])\n\
    \    end\n    for i = 1, #lst2 do\n        total2 = total2 + string.len(lst2[i])\n\
    \    end\n    if total1 < total2 then\n        return lst1\n    elseif total2\
    \ < total1 then\n        return lst2\n    else\n        return lst1\n    end\n\
    end", "    local sum1 = 0\n    local sum2 = 0\n    for i,v in ipairs(lst1) do\n\
    \        sum1 = sum1 + #v\n    end\n    for i,v in ipairs(lst2) do\n        sum2\
    \ = sum2 + #v\n    end\n    if sum1 == sum2 then\n        return lst1\n    elseif\
    \ sum1 < sum2 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "\t-- body\n\tlocal t1 = 0\n\tlocal t2 = 0\n\tfor i = 1, #lst1 do\n\t\t\
    t1 = t1 + #lst1[i]\n\tend\n\tfor i = 1, #lst2 do\n\t\tt2 = t2 + #lst2[i]\n\tend\n\
    \tif t1 > t2 then\n\t\treturn lst2\n\telseif t1 < t2 then\n\t\treturn lst1\n\t\
    else\n\t\treturn lst1\n\tend\nend\nprint(total_match({'4'}, {'1', '2', '3', '4',\
    \ '5'}))", "    local total1 = 0\n    local total2 = 0\n    for k, v in pairs(lst1)\
    \ do\n        total1 = total1 + #v\n    end\n    for k, v in pairs(lst2) do\n\
    \        total2 = total2 + #v\n    end\n    if total1 < total2 then\n        return\
    \ lst1\n    elseif total1 > total2 then\n        return lst2\n    else\n     \
    \   return lst1\n    end\nend", "  local total1 = 0\n  local total2 = 0\n  for\
    \ i = 1, #lst1 do\n    total1 = total1 + #lst1[i]\n  end\n  for i = 1, #lst2 do\n\
    \    total2 = total2 + #lst2[i]\n  end\n  if total1 < total2 then\n    return\
    \ lst1\n  elseif total2 < total1 then\n    return lst2\n  else\n    return lst1\n\
    \  end\nend", "  local total_lst1 = 0\n  local total_lst2 = 0\n  for i, v in ipairs(lst1)\
    \ do\n    total_lst1 = total_lst1 + #v\n  end\n  for i, v in ipairs(lst2) do\n\
    \    total_lst2 = total_lst2 + #v\n  end\n  if total_lst1 == total_lst2 then\n\
    \    return lst1\n  elseif total_lst1 < total_lst2 then\n    return lst1\n  else\n\
    \    return lst2\n  end\nend", "    local s1, s2 = 0, 0\n    for _, l in ipairs(lst1)\
    \ do\n        s1 = s1 + #l\n    end\n    for _, l in ipairs(lst2) do\n       \
    \ s2 = s2 + #l\n    end\n    if s1 < s2 then\n        return lst1\n    else\n\
    \        return lst2\n    end\nend", "  local l1, l2 = #table.concat(lst1), #table.concat(lst2)\n\
    \  return l1 == l2 and lst1 or l1 < l2 and lst1 or lst2\nend", "  local total_lst1\
    \ = 0\n  local total_lst2 = 0\n  for k, v in pairs(lst1) do\n    total_lst1 =\
    \ total_lst1 + string.len(v)\n  end\n  for k, v in pairs(lst2) do\n    total_lst2\
    \ = total_lst2 + string.len(v)\n  end\n  if total_lst1 == total_lst2 then\n  \
    \  return lst1\n  elseif total_lst1 < total_lst2 then\n    return lst1\n  else\n\
    \    return lst2\n  end\nend", "  local len1, len2 = 0, 0\n  for _, v in ipairs(lst1)\
    \ do\n    len1 = len1 + #v\n  end\n  for _, v in ipairs(lst2) do\n    len2 = len2\
    \ + #v\n  end\n  if len1 == len2 then\n    return lst1\n  elseif len1 < len2 then\n\
    \    return lst1\n  else\n    return lst2\n  end\nend", "    local islst1 = true\n\
    \    for _, v in ipairs(lst1) do\n        if #v > #lst2 then\n            islst1\
    \ = false\n            break\n        end\n    end\n    if islst1 then\n     \
    \   return lst1\n    else\n        return lst2\n    end\nend", "  if #lst1 ==\
    \ 0 and #lst2 == 0 then return {} end\n  local chars = 0\n  for _,v in ipairs(lst1)\
    \ do chars = chars + #v end\n  local chars2 = 0\n  for _,v in ipairs(lst2) do\
    \ chars2 = chars2 + #v end\n  if chars == chars2 then return lst1 end\n  if chars\
    \ < chars2 then return lst1 end\n  return lst2\nend", "    local count1 = 0\n\
    \    local count2 = 0\n    for i = 1, #lst1 do\n        count1 = count1 + #lst1[i]\n\
    \    end\n    for i = 1, #lst2 do\n        count2 = count2 + #lst2[i]\n    end\n\
    \    if count1 > count2 then\n        return lst2\n    else\n        return lst1\n\
    \    end\nend", "    if #lst1 == 0 then return lst1 end\n    local lst1StrLen\
    \ = 0\n    local lst2StrLen = 0\n    for _, v in ipairs(lst1) do\n        lst1StrLen\
    \ = lst1StrLen + #v\n    end\n    for _, v in ipairs(lst2) do\n        lst2StrLen\
    \ = lst2StrLen + #v\n    end\n    if lst1StrLen < lst2StrLen then\n        return\
    \ lst1\n    else\n        return lst2\n    end\nend", "    local lst1_total =\
    \ 0\n    local lst2_total = 0\n    for _, v in ipairs(lst1) do\n        lst1_total\
    \ = lst1_total + #v\n    end\n    for _, v in ipairs(lst2) do\n        lst2_total\
    \ = lst2_total + #v\n    end\n    if lst1_total < lst2_total then\n        return\
    \ lst1\n    else\n        return lst2\n    end\nend", "\tlocal len1, len2 = 0,\
    \ 0\n\tfor _, v in ipairs(lst1) do\n\t\tlen1 = len1 + #v\n\tend\n\tfor _, v in\
    \ ipairs(lst2) do\n\t\tlen2 = len2 + #v\n\tend\n\tif len1 == len2 then\n\t\treturn\
    \ lst1\n\telseif len1 < len2 then\n\t\treturn lst1\n\telse\n\t\treturn lst2\n\t\
    end\nend", "  local numLst1 = #lst1\n  local numLst2 = #lst2\n  for i=1, #lst1\
    \ do\n    numLst1 = numLst1 + #lst1[i]\n  end\n  for i=1, #lst2 do\n    numLst2\
    \ = numLst2 + #lst2[i]\n  end\n  if numLst1 < numLst2 then\n    return lst1\n\
    \  else\n    return lst2\n  end\nend", "\tlocal function sum(list)\n\t\tlocal\
    \ x = 0\n\t\tfor i = 1, #list do\n\t\t\tx = x + #list[i]\n\t\tend\n\t\treturn\
    \ x\n\tend\n\tif sum(lst1) == sum(lst2) then\n\t\treturn lst1\n\telseif sum(lst1)\
    \ < sum(lst2) then\n\t\treturn lst1\n\telseif sum(lst1) > sum(lst2) then\n\t\t\
    return lst2\n\tend\nend", "\tlocal count1, count2 = 0, 0\n\tfor _,v in ipairs(lst1)\
    \ do\n\t\tcount1 = count1 + #v\n\tend\n\tfor _,v in ipairs(lst2) do\n\t\tcount2\
    \ = count2 + #v\n\tend\n\tif count1 <= count2 then\n\t\treturn lst1\n\telse\n\t\
    \treturn lst2\n\tend\nend", "\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #lst1 do\n\
    \t\tsum1 = sum1 + #lst1[i]\n\tend\n\tfor i = 1, #lst2 do\n\t\tsum2 = sum2 + #lst2[i]\n\
    \tend\n\tif sum1 < sum2 then\n\t\treturn lst1\n\telseif sum1 > sum2 then\n\t\t\
    return lst2\n\telse\n\t\treturn lst1\n\tend\nend", "  local sum1, sum2 = 0, 0\n\
    \  for i, v in ipairs(lst1) do\n    sum1 = sum1 + #v\n  end\n  for i, v in ipairs(lst2)\
    \ do\n    sum2 = sum2 + #v\n  end\n  if sum1 == sum2 then\n    return lst1\n \
    \ elseif sum1 < sum2 then\n    return lst1\n  else\n    return lst2\n  end\nend",
  "    local result = lst1\n    local totalChars1 = 0\n    local totalChars2 = 0\n\
    \    for index, value in ipairs(lst1) do\n        totalChars1 = totalChars1 +\
    \ #value\n    end\n    for index, value in ipairs(lst2) do\n        totalChars2\
    \ = totalChars2 + #value\n    end\n    if totalChars1 > totalChars2 then\n   \
    \     result = lst2\n    end\n    return result\nend\nprint(total_match({'hi',\
    \ 'admin'}, {'hI', 'Hi'}))\nprint(total_match({'hi', 'admin'}, {'hi', 'hi', 'admin',\
    \ 'project'}))\nprint(total_match({'hi', 'admin'}, {'hI', 'hi', 'hi'}))\nprint(total_match({'4'},\
    \ {'1', '2', '3', '4', '5'}))", "\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #lst1\
    \ do\n\t\tsum1 = sum1 + #lst1[i]\n\tend\n\tfor i = 1, #lst2 do\n\t\tsum2 = sum2\
    \ + #lst2[i]\n\tend\n\tif sum1 < sum2 then\n\t\treturn lst1\n\telseif sum1 > sum2\
    \ then\n\t\treturn lst2\n\telse\n\t\treturn lst1\n\tend\nend", "    local f =\
    \ function(sum, v) return sum + #v end\n    local x = reduce(f, lst1, 0)\n   \
    \ local y = reduce(f, lst2, 0)\n    if x == y then return lst1 end\n    return\
    \ x < y and lst1 or lst2\nend", "   local len1, len2 = 0, 0\n   for i, v in ipairs(lst1)\
    \ do\n      len1 = len1 + #v\n   end\n   for i, v in ipairs(lst2) do\n      len2\
    \ = len2 + #v\n   end\n   if len1 < len2 then\n      return lst1\n   elseif len1\
    \ > len2 then\n      return lst2\n   else\n      return lst1\n   end\nend", "\t\
    local count1, count2 = 0, 0\n\tfor i,v in ipairs(lst1) do\n\t\tcount1 = count1\
    \ + #v\n\tend\n\tfor i,v in ipairs(lst2) do\n\t\tcount2 = count2 + #v\n\tend\n\
    \tif count1 == count2 then\n\t\treturn lst1\n\telseif count1 < count2 then\n\t\
    \treturn lst1\n\telseif count1 > count2 then\n\t\treturn lst2\n\tend\nend", " \
    \   local total1 = 0\n    local total2 = 0\n    for i, val in ipairs(lst1) do\n\
    \        total1 = total1 + #val\n    end\n    for i, val in ipairs(lst2) do\n\
    \        total2 = total2 + #val\n    end\n    if total1 < total2 then\n      \
    \  return lst1\n    elseif total2 < total1 then\n        return lst2\n    else\n\
    \        return lst1\n    end\nend", "  local c1, c2 = 0, 0\n  for i = 1, #lst1\
    \ do\n    c1 = c1 + #lst1[i]\n  end\n  for i = 1, #lst2 do\n    c2 = c2 + #lst2[i]\n\
    \  end\n  if c1 < c2 then\n    return lst1\n  else\n    return lst2\n  end\nend",
  "\tlocal len1, len2 = 0, 0\n\tfor i, str in ipairs(lst1) do\n\t\tlen1 = len1 + #str\n\
    \tend\n\tfor i, str in ipairs(lst2) do\n\t\tlen2 = len2 + #str\n\tend\n\tif len1\
    \ == len2 then\n\t\treturn lst1\n\telseif len1 < len2 then\n\t\treturn lst1\n\t\
    else\n\t\treturn lst2\n\tend\nend", "  local lst1_sum = 0\n  local lst2_sum =\
    \ 0\n  for _,v in ipairs(lst1) do\n    lst1_sum = lst1_sum + #v\n  end\n  for\
    \ _,v in ipairs(lst2) do\n    lst2_sum = lst2_sum + #v\n  end\n  if lst1_sum <\
    \ lst2_sum then\n    return lst1\n  else\n    return lst2\n  end\nend", "  local\
    \ len1, len2 = 0, 0\n  for _, s in ipairs(lst1) do\n    len1 = len1 + #s\n  end\n\
    \  for _, s in ipairs(lst2) do\n    len2 = len2 + #s\n  end\n  if len1 <= len2\
    \ then\n    return lst1\n  else\n    return lst2\n  end\nend", "    local sum_lst1\
    \ = 0\n    local sum_lst2 = 0\n    for i, v in ipairs(lst1) do\n        sum_lst1\
    \ = sum_lst1 + #v\n    end\n    for i, v in ipairs(lst2) do\n        sum_lst2\
    \ = sum_lst2 + #v\n    end\n    if sum_lst1 == sum_lst2 then\n        return lst1\n\
    \    elseif sum_lst1 < sum_lst2 then\n        return lst1\n    else\n        return\
    \ lst2\n    end\nend\nprint(total_match({'4'}, {'1', '2', '3', '4', '5'}))"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"
